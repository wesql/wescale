name: "MTR Test - Ubuntu Docker Cluster"

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - 'release-*'
    tags:
      - '*'
  workflow_dispatch:

env:
  IMAGE_NAME: wescale_ci_image
  REGISTRY: ghcr.io
  IMAGE_TAG: test-${{ github.sha }}
  MYSQL_ROOT_PASSWORD: passwd
  MYSQL_ROOT_HOST: "%"
  MYSQL_PORT: 3306
  WESCALE_PORT: 15306
  MYSQL_VERSION: 8.0.32

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-mtr
  cancel-in-progress: true

jobs:
  build-image:
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/build_image.yml
    with:
      branch: ${{ github.ref }}
      image_name: ${{ github.repository_owner }}/wescale_ci_image
      tags: test-${{ github.sha }}
      registry: ghcr.io
      platforms: linux/amd64

  setup:
    name: "MTR Test - Ubuntu Docker Cluster"
    needs: build-image
    runs-on: ubuntu-latest

    steps:
      - name: Check if workflow needs to be skipped
        id: skip-workflow
        run: |
          skip='false'
          if [[ "${{github.event.pull_request}}" ==  "" ]] && [[ "${{github.ref}}" != "refs/heads/main" ]] && [[ ! "${{github.ref}}" =~ ^refs/heads/release-[0-9]+\.[0-9]$ ]] && [[ ! "${{github.ref}}" =~ "refs/tags/.*" ]]; then
            skip='true'
          fi
          echo Skip ${skip}
          echo "skip-workflow=${skip}" >> $GITHUB_OUTPUT

      - name: Checkout code
        if: steps.skip-workflow.outputs.skip-workflow == 'false'
        uses: actions/checkout@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}


      - name: Set up cluster
        run: |
          CONTAINER_NAME="mysql-server"
          DATA_DIR="$(pwd)/vtdataroot/mysql"
          CONFIG_FILE="$DATA_DIR/my.cnf"
          MYSQL_IMG="mysql/mysql-server:${{ env.MYSQL_VERSION }}"
          WESCALE_CI_IMAGE="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          
          mkdir -p "$DATA_DIR/data"
          mkdir -p "$DATA_DIR/log"
          
          if [ ! -f "$CONFIG_FILE" ]; then
          cat <<EOL > "$CONFIG_FILE"
          [mysqld]
          port=${{ env.MYSQL_PORT }}
          bind-address=0.0.0.0
          log-bin=binlog
          gtid_mode=ON
          enforce_gtid_consistency=ON
          log_replica_updates=ON
          binlog_format=ROW
          datadir=/data/mysql/data
          log-error=/data/mysql/log/mysqld-error.log
          EOL
          fi
          
          chmod -R 777 "$DATA_DIR"
          chmod 644 "$CONFIG_FILE"
          
          docker network create my-network
          
          docker run -itd --name $CONTAINER_NAME \
          --network my-network \
          -p ${{ env.MYSQL_PORT }}:${{ env.MYSQL_PORT }} \
          -v "$DATA_DIR":/data/mysql \
          -v "$CONFIG_FILE":/etc/my.cnf \
          -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }} \
          -e MYSQL_ROOT_HOST="${{ env.MYSQL_ROOT_HOST }}" \
          $MYSQL_IMG
          
          docker run -itd \
          --name wescale \
          --network my-network \
          -w /vt/examples/wesql-server \
          -e MYSQL_ROOT_USER=root \
          -e MYSQL_ROOT_PASSWORD=${{ env.MYSQL_ROOT_PASSWORD }} \
          -e MYSQL_PORT=${{ env.MYSQL_PORT }} \
          -e MYSQL_HOST=mysql-server \
          -p ${{ env.WESCALE_PORT }}:${{ env.WESCALE_PORT }} \
          $WESCALE_CI_IMAGE \
          /vt/examples/wesql-server/init_single_node_cluster.sh

      - name: Checkout mysql-tester code
        if: steps.skip-workflow.outputs.skip-workflow == 'false'
        uses: actions/checkout@v3
        with:
          repository: apecloud/mysql-tester
          path: './mysql-tester'

      - name: Build mysql-tester
        if: steps.skip-workflow.outputs.skip-workflow == 'false'
        run: |
          cd ./mysql-tester && \
          mkdir bin && \
          make build

      - name: Run MTR Tests
        if: steps.skip-workflow.outputs.skip-workflow == 'false'
        run: |
          cd ./mysql-tester && \
          eatmydata -- ./bin/mysql-tester -user root -port ${{ env.WESCALE_PORT }} -path testcase/wesql-scale 2>&1 | tee -a output.txt
          
          if grep -q -- 'level=error' output.txt; then
              echo "Testcase is failed"
              exit 1
          else
              echo "Testcase is successful"
          fi
      - name: Print Wescale logs
        run: |
          docker logs wescale

      - name: Clean up
        if: always()
        run: |
          TOKEN="${{ github.token }}"
          OWNER="${{ github.repository_owner }}"
          PACKAGE_NAME="${{ env.IMAGE_NAME }}"
          TAG="${{ env.IMAGE_TAG }}"

          VERSIONS_JSON=$(curl -s \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/$OWNER/packages/container/$PACKAGE_NAME/versions")

          PACKAGE_VERSION_ID=$(echo "$VERSIONS_JSON" | jq -r ".[] | select(.metadata.container.tags[] | contains(\"$TAG\")) | .id")

          if [ ! -z "$PACKAGE_VERSION_ID" ]; then
            echo "Found image version ID: $PACKAGE_VERSION_ID"

            DELETE_RESPONSE=$(curl -X DELETE -s -H "Authorization: Bearer $TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/orgs/$OWNER/packages/container/$PACKAGE_NAME/versions/$PACKAGE_VERSION_ID")

            if [ -z "$DELETE_RESPONSE" ]; then
              echo "✅ Successfully deleted image version: $PACKAGE_VERSION_ID"
            else
              echo "❌ Failed to delete image version. Response: $DELETE_RESPONSE"
              exit 1
            fi
          else
            echo "❌ Could not find image version with tag: $TAG"
            echo "Available versions:"
            echo "$VERSIONS_JSON" | jq -r '.[].names'
            exit 1
          fi