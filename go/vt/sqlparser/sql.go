/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const CODE = 57702
const COLLATION = 57703
const COLUMNS = 57704
const DATABASES = 57705
const ENGINES = 57706
const EVENT = 57707
const EXTENDED = 57708
const FIELDS = 57709
const FULL = 57710
const FUNCTION = 57711
const GTID_EXECUTED = 57712
const KEYSPACES = 57713
const OPEN = 57714
const PLUGINS = 57715
const PRIVILEGES = 57716
const PROCESSLIST = 57717
const SCHEMAS = 57718
const TABLES = 57719
const TRIGGERS = 57720
const USER = 57721
const VGTID_EXECUTED = 57722
const VITESS_KEYSPACES = 57723
const VITESS_METADATA = 57724
const VITESS_MIGRATIONS = 57725
const VITESS_REPLICATION_STATUS = 57726
const VITESS_SHARDS = 57727
const VITESS_TABLETS = 57728
const VITESS_TARGET = 57729
const VSCHEMA = 57730
const VITESS_THROTTLED_APPS = 57731
const WORKLOAD = 57732
const LASTSEENGTID = 57733
const NAMES = 57734
const GLOBAL = 57735
const SESSION = 57736
const ISOLATION = 57737
const LEVEL = 57738
const READ = 57739
const WRITE = 57740
const ONLY = 57741
const REPEATABLE = 57742
const COMMITTED = 57743
const UNCOMMITTED = 57744
const SERIALIZABLE = 57745
const CURRENT_TIMESTAMP = 57746
const DATABASE = 57747
const CURRENT_DATE = 57748
const NOW = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const CURRENT_USER = 57753
const UTC_DATE = 57754
const UTC_TIME = 57755
const UTC_TIMESTAMP = 57756
const DAY = 57757
const DAY_HOUR = 57758
const DAY_MICROSECOND = 57759
const DAY_MINUTE = 57760
const DAY_SECOND = 57761
const HOUR = 57762
const HOUR_MICROSECOND = 57763
const HOUR_MINUTE = 57764
const HOUR_SECOND = 57765
const MICROSECOND = 57766
const MINUTE = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const MONTH = 57770
const QUARTER = 57771
const SECOND = 57772
const SECOND_MICROSECOND = 57773
const YEAR_MONTH = 57774
const WEEK = 57775
const REPLACE = 57776
const CONVERT = 57777
const CAST = 57778
const SUBSTR = 57779
const SUBSTRING = 57780
const SEPARATOR = 57781
const TIMESTAMPADD = 57782
const TIMESTAMPDIFF = 57783
const WEIGHT_STRING = 57784
const LTRIM = 57785
const RTRIM = 57786
const TRIM = 57787
const JSON_ARRAY = 57788
const JSON_OBJECT = 57789
const JSON_QUOTE = 57790
const JSON_DEPTH = 57791
const JSON_TYPE = 57792
const JSON_LENGTH = 57793
const JSON_VALID = 57794
const JSON_ARRAY_APPEND = 57795
const JSON_ARRAY_INSERT = 57796
const JSON_INSERT = 57797
const JSON_MERGE = 57798
const JSON_MERGE_PATCH = 57799
const JSON_MERGE_PRESERVE = 57800
const JSON_REMOVE = 57801
const JSON_REPLACE = 57802
const JSON_SET = 57803
const JSON_UNQUOTE = 57804
const COUNT = 57805
const AVG = 57806
const MAX = 57807
const MIN = 57808
const SUM = 57809
const GROUP_CONCAT = 57810
const BIT_AND = 57811
const BIT_OR = 57812
const BIT_XOR = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const VARIANCE = 57820
const REGEXP_INSTR = 57821
const REGEXP_LIKE = 57822
const REGEXP_REPLACE = 57823
const REGEXP_SUBSTR = 57824
const ExtractValue = 57825
const UpdateXML = 57826
const GET_LOCK = 57827
const RELEASE_LOCK = 57828
const RELEASE_ALL_LOCKS = 57829
const IS_FREE_LOCK = 57830
const IS_USED_LOCK = 57831
const LOCATE = 57832
const POSITION = 57833
const MATCH = 57834
const AGAINST = 57835
const BOOLEAN = 57836
const LANGUAGE = 57837
const WITH = 57838
const QUERY = 57839
const EXPANSION = 57840
const WITHOUT = 57841
const VALIDATION = 57842
const UNUSED = 57843
const ARRAY = 57844
const BYTE = 57845
const CUME_DIST = 57846
const DESCRIPTION = 57847
const DENSE_RANK = 57848
const EMPTY = 57849
const EXCEPT = 57850
const FIRST_VALUE = 57851
const GROUPING = 57852
const GROUPS = 57853
const JSON_TABLE = 57854
const LAG = 57855
const LAST_VALUE = 57856
const LATERAL = 57857
const LEAD = 57858
const NTH_VALUE = 57859
const NTILE = 57860
const OF = 57861
const OVER = 57862
const PERCENT_RANK = 57863
const RANK = 57864
const RECURSIVE = 57865
const ROW_NUMBER = 57866
const SYSTEM = 57867
const WINDOW = 57868
const ACTIVE = 57869
const ADMIN = 57870
const AUTOEXTEND_SIZE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COLUMN_FORMAT = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const ENGINE_ATTRIBUTE = 57878
const EXCLUDE = 57879
const FOLLOWING = 57880
const GET_MASTER_PUBLIC_KEY = 57881
const HISTOGRAM = 57882
const HISTORY = 57883
const INACTIVE = 57884
const INVISIBLE = 57885
const LOCKED = 57886
const MASTER_COMPRESSION_ALGORITHMS = 57887
const MASTER_PUBLIC_KEY_PATH = 57888
const MASTER_TLS_CIPHERSUITES = 57889
const MASTER_ZSTD_COMPRESSION_LEVEL = 57890
const NESTED = 57891
const NETWORK_NAMESPACE = 57892
const NOWAIT = 57893
const NULLS = 57894
const OJ = 57895
const OLD = 57896
const OPTIONAL = 57897
const ORDINALITY = 57898
const ORGANIZATION = 57899
const OTHERS = 57900
const PARTIAL = 57901
const PATH = 57902
const PERSIST = 57903
const PERSIST_ONLY = 57904
const PRECEDING = 57905
const PRIVILEGE_CHECKS_USER = 57906
const PROCESS = 57907
const RANDOM = 57908
const REFERENCE = 57909
const REQUIRE_ROW_FORMAT = 57910
const RESOURCE = 57911
const RESPECT = 57912
const RESTART = 57913
const RETAIN = 57914
const REUSE = 57915
const ROLE = 57916
const SECONDARY = 57917
const SECONDARY_ENGINE = 57918
const SECONDARY_ENGINE_ATTRIBUTE = 57919
const SECONDARY_LOAD = 57920
const SECONDARY_UNLOAD = 57921
const SIMPLE = 57922
const SKIP = 57923
const SRID = 57924
const THREAD_PRIORITY = 57925
const TIES = 57926
const UNBOUNDED = 57927
const VCPU = 57928
const VISIBLE = 57929
const RETURNING = 57930
const FORMAT_BYTES = 57931
const FORMAT_PICO_TIME = 57932
const PS_CURRENT_THREAD_ID = 57933
const PS_THREAD_ID = 57934
const GTID_SUBSET = 57935
const GTID_SUBTRACT = 57936
const WAIT_FOR_EXECUTED_GTID_SET = 57937
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57938
const FORMAT = 57939
const TREE = 57940
const VITESS = 57941
const TRADITIONAL = 57942
const VTEXPLAIN = 57943
const VEXPLAIN = 57944
const PLAN = 57945
const LOCAL = 57946
const LOW_PRIORITY = 57947
const KILL = 57948
const NO_WRITE_TO_BINLOG = 57949
const LOGS = 57950
const ERROR = 57951
const GENERAL = 57952
const HOSTS = 57953
const OPTIMIZER_COSTS = 57954
const USER_RESOURCES = 57955
const SLOW = 57956
const CHANNEL = 57957
const RELAY = 57958
const EXPORT = 57959
const CURRENT = 57960
const ROW = 57961
const ROWS = 57962
const AVG_ROW_LENGTH = 57963
const CONNECTION = 57964
const CHECKSUM = 57965
const DELAY_KEY_WRITE = 57966
const ENCRYPTION = 57967
const ENGINE = 57968
const INSERT_METHOD = 57969
const MAX_ROWS = 57970
const MIN_ROWS = 57971
const PACK_KEYS = 57972
const PASSWORD = 57973
const FIXED = 57974
const DYNAMIC = 57975
const COMPRESSED = 57976
const REDUNDANT = 57977
const COMPACT = 57978
const ROW_FORMAT = 57979
const STATS_AUTO_RECALC = 57980
const STATS_PERSISTENT = 57981
const STATS_SAMPLE_PAGES = 57982
const STORAGE = 57983
const MEMORY = 57984
const DISK = 57985
const PARTITIONS = 57986
const LINEAR = 57987
const RANGE = 57988
const LIST = 57989
const SUBPARTITION = 57990
const SUBPARTITIONS = 57991
const HASH = 57992

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	668, 159,
	-2, 167,
	-1, 53,
	135, 167,
	176, 167,
	345, 167,
	-2, 521,
	-1, 62,
	36, 774,
	239, 774,
	250, 774,
	285, 788,
	286, 788,
	-2, 776,
	-1, 67,
	241, 812,
	-2, 810,
	-1, 122,
	238, 1464,
	-2, 133,
	-1, 124,
	1, 160,
	668, 160,
	-2, 167,
	-1, 135,
	136, 407,
	244, 407,
	-2, 510,
	-1, 154,
	135, 167,
	176, 167,
	345, 167,
	-2, 530,
	-1, 822,
	87, 1481,
	-2, 1335,
	-1, 823,
	87, 1482,
	221, 1486,
	-2, 1336,
	-1, 824,
	221, 1485,
	-2, 42,
	-1, 904,
	60, 886,
	-2, 901,
	-1, 990,
	249, 43,
	254, 43,
	-2, 418,
	-1, 1075,
	1, 578,
	668, 578,
	-2, 167,
	-1, 1378,
	221, 1486,
	-2, 1336,
	-1, 1526,
	60, 887,
	-2, 906,
	-1, 1527,
	60, 888,
	-2, 907,
	-1, 1578,
	135, 167,
	176, 167,
	345, 167,
	-2, 457,
	-1, 1659,
	136, 407,
	244, 407,
	-2, 510,
	-1, 1668,
	249, 44,
	254, 44,
	-2, 419,
	-1, 2027,
	221, 1490,
	-2, 1484,
	-1, 2028,
	221, 1486,
	-2, 1482,
	-1, 2128,
	135, 167,
	176, 167,
	345, 167,
	-2, 458,
	-1, 2135,
	26, 188,
	-2, 190,
	-1, 2502,
	78, 98,
	88, 98,
	-2, 965,
	-1, 2571,
	643, 694,
	-2, 668,
	-1, 2738,
	50, 1432,
	-2, 1426,
	-1, 3391,
	643, 694,
	-2, 682,
	-1, 3479,
	90, 626,
	95, 626,
	105, 626,
	178, 626,
	179, 626,
	180, 626,
	181, 626,
	182, 626,
	183, 626,
	184, 626,
	185, 626,
	186, 626,
	187, 626,
	188, 626,
	189, 626,
	190, 626,
	191, 626,
	192, 626,
	193, 626,
	194, 626,
	195, 626,
	196, 626,
	197, 626,
	198, 626,
	199, 626,
	200, 626,
	201, 626,
	202, 626,
	203, 626,
	204, 626,
	205, 626,
	206, 626,
	207, 626,
	208, 626,
	209, 626,
	210, 626,
	211, 626,
	212, 626,
	213, 626,
	214, 626,
	215, 626,
	216, 626,
	217, 626,
	218, 626,
	219, 626,
	-2, 1844,
}

const yyPrivate = 57344

const yyLast = 47841

var yyAct = [...]int{
	1534, 826, 823, 696, 833, 3550, 2125, 3456, 3519, 1581,
	3520, 3372, 2966, 3109, 2888, 3422, 3561, 2076, 3477, 3445,
	2056, 2790, 2797, 3140, 3356, 2848, 3304, 2839, 920, 2853,
	2850, 2849, 2847, 2852, 2851, 3354, 3139, 2751, 3138, 3096,
	792, 1142, 2402, 42, 897, 3168, 2754, 2058, 2868, 3344,
	2436, 1840, 675, 2697, 5, 2805, 2755, 678, 195, 2867,
	788, 195, 2752, 2199, 3005, 2632, 655, 1541, 3173, 706,
	2870, 661, 2999, 786, 2096, 2475, 3025, 793, 2099, 2749,
	2739, 2462, 195, 674, 825, 787, 2991, 2536, 1894, 2080,
	2018, 2162, 2616, 2537, 2894, 1022, 2538, 195, 2568, 1637,
	1090, 952, 2230, 2167, 2113, 2487, 2187, 1144, 676, 43,
	2454, 2101, 2468, 1528, 163, 2608, 2438, 2100, 1989, 1909,
	2208, 41, 661, 195, 661, 2023, 901, 921, 905, 1119,
	1890, 2015, 2088, 2186, 1848, 2247, 1666, 149, 899, 2169,
	2529, 1684, 980, 1570, 1550, 2504, 688, 923, 2103, 100,
	1508, 1390, 1504, 1913, 1867, 1787, 1303, 1318, 1783, 1673,
	959, 988, 2184, 956, 1765, 1988, 998, 991, 985, 960,
	104, 2158, 2159, 986, 987, 1569, 683, 1555, 2081, 938,
	940, 105, 911, 2024, 1985, 1374, 1350, 908, 99, 1839,
	85, 1133, 107, 1632, 1922, 1140, 1792, 907, 167, 127,
	933, 125, 126, 1658, 132, 133, 1071, 909, 84, 906,
	1398, 106, 682, 1394, 93, 3381, 665, 2561, 190, 98,
	3551, 2201, 2202, 2203, 3407, 3097, 2836, 2201, 670, 2591,
	2590, 928, 932, 2559, 2245, 3089, 605, 3503, 95, 95,
	95, 608, 129, 3052, 2624, 2625, 3402, 1024, 3143, 914,
	3408, 128, 1750, 3403, 1855, 172, 650, 134, 1870, 644,
	1041, 1042, 1043, 1854, 1046, 1047, 1048, 1049, 1853, 1027,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 2, 953, 915,
	666, 2858, 3143, 947, 900, 948, 898, 1852, 1001, 2858,
	978, 1851, 1850, 1002, 1823, 1535, 3498, 977, 842, 843,
	844, 169, 2855, 668, 170, 1314, 669, 1028, 1031, 1032,
	1319, 922, 2434, 128, 976, 1035, 975, 974, 2053, 2054,
	2290, 2735, 111, 112, 113, 3142, 116, 189, 190, 122,
	2464, 95, 191, 2234, 964, 599, 1044, 2856, 3403, 3523,
	946, 790, 791, 2581, 1335, 2856, 969, 1319, 663, 664,
	2701, 3507, 129, 3505, 151, 946, 790, 791, 893, 894,
	895, 896, 3571, 2862, 904, 172, 842, 843, 844, 3142,
	3518, 2862, 3541, 2971, 2970, 2584, 3506, 2233, 3504, 3357,
	2232, 128, 2403, 1860, 644, 2913, 3300, 3299, 644, 1026,
	1025, 3102, 935, 936, 3103, 3532, 162, 3310, 3501, 644,
	86, 2299, 150, 3121, 1305, 3110, 3446, 3453, 86, 86,
	2227, 3309, 3120, 1899, 3386, 3457, 86, 3482, 1329, 88,
	1647, 169, 3463, 2933, 170, 2787, 2788, 2598, 2599, 1571,
	2084, 1572, 2478, 968, 3487, 2513, 970, 2435, 2512, 173,
	2786, 2514, 2623, 138, 139, 161, 160, 189, 179, 3186,
	2120, 2121, 3485, 1832, 1833, 1329, 2296, 2479, 1126, 645,
	1128, 3491, 3492, 2119, 2607, 1137, 2297, 1109, 891, 2807,
	2808, 890, 1097, 3373, 1110, 2859, 3486, 1098, 95, 1332,
	1097, 1333, 1334, 2859, 1103, 1098, 95, 95, 1114, 1115,
	3463, 2525, 644, 1096, 95, 1095, 2562, 2921, 1125, 1127,
	2138, 2137, 2919, 1304, 2666, 973, 3002, 1080, 1081, 2890,
	644, 1831, 1074, 2471, 2472, 2288, 644, 1315, 658, 1567,
	2895, 2609, 1835, 662, 1325, 1512, 2055, 1317, 656, 1740,
	3524, 2569, 2209, 1045, 973, 3553, 965, 2883, 1070, 1083,
	3332, 2594, 3333, 967, 966, 2884, 155, 136, 158, 143,
	135, 3525, 156, 157, 2248, 1766, 2253, 1130, 2084, 173,
	1135, 1325, 1118, 971, 939, 2611, 1111, 1076, 179, 144,
	1112, 1113, 164, 1741, 3091, 1742, 1104, 2806, 1136, 2291,
	2292, 2294, 2293, 147, 145, 140, 141, 142, 146, 2809,
	1116, 195, 971, 195, 645, 137, 195, 195, 645, 1771,
	1117, 2891, 1123, 3090, 148, 2271, 1124, 1051, 2268, 645,
	2269, 2254, 2270, 1050, 2892, 2252, 1129, 3087, 3284, 2250,
	1011, 1009, 2082, 2083, 981, 2212, 3147, 2097, 982, 3499,
	982, 1651, 1020, 661, 1019, 661, 661, 1018, 1017, 1016,
	1015, 1014, 1122, 1013, 606, 2260, 2256, 2258, 2259, 2257,
	2261, 2262, 1365, 1008, 1515, 661, 195, 2251, 949, 943,
	941, 1021, 1365, 3572, 2178, 957, 2809, 973, 1069, 2667,
	994, 3530, 957, 949, 943, 941, 955, 993, 957, 1784,
	2185, 1107, 1672, 1030, 1378, 1351, 2612, 2172, 934, 993,
	972, 2238, 164, 1029, 2237, 2700, 2829, 2439, 2441, 1780,
	3565, 1093, 645, 1099, 1100, 1101, 1102, 2910, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1360, 1359, 1361, 1362, 972,
	645, 1306, 1038, 2593, 1645, 2579, 645, 1138, 1139, 1000,
	1644, 3086, 1073, 2229, 1643, 3380, 1781, 2560, 2628, 1641,
	1386, 604, 1376, 1568, 603, 598, 165, 3369, 2311, 1131,
	2082, 2083, 2606, 177, 3039, 2605, 979, 3021, 1324, 1321,
	1322, 1323, 1328, 1330, 1327, 2596, 1326, 1012, 1010, 607,
	1366, 1367, 159, 2527, 2509, 2474, 1320, 839, 839, 839,
	1296, 2411, 1902, 1368, 1369, 1370, 1371, 2297, 2563, 2231,
	1671, 1559, 1467, 1382, 185, 1324, 1321, 1322, 1323, 1328,
	1330, 1327, 3003, 1326, 3459, 1085, 2469, 2126, 1365, 2615,
	1362, 124, 1774, 1320, 1772, 1773, 2785, 1775, 1776, 917,
	1037, 1134, 3394, 1023, 3082, 3015, 1378, 1372, 1297, 1298,
	2249, 999, 3141, 152, 2171, 1072, 153, 3458, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 3119,
	3050, 3051, 972, 119, 184, 186, 187, 188, 89, 1752,
	1751, 1753, 1754, 1755, 2440, 1844, 165, 1770, 1777, 1502,
	942, 2583, 3459, 177, 1573, 1120, 3141, 2652, 1914, 1914,
	2328, 2860, 2861, 195, 1106, 942, 2552, 661, 661, 2860,
	2861, 2298, 3533, 3490, 2864, 1108, 1793, 1536, 1538, 1092,
	1334, 1313, 2864, 195, 94, 3458, 3182, 1923, 3057, 1396,
	1400, 1397, 94, 94, 185, 2582, 1516, 1333, 1334, 3563,
	94, 1924, 3564, 661, 3562, 120, 195, 2228, 3056, 1518,
	2216, 1000, 1681, 1522, 1079, 1519, 1680, 3489, 661, 901,
	1670, 2221, 1094, 2226, 195, 2955, 1082, 2224, 1011, 1009,
	1503, 2618, 3526, 1335, 2221, 1872, 2617, 3424, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 1873,
	1363, 1364, 1871, 2618, 184, 186, 187, 188, 2617, 913,
	2225, 661, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360,
	1359, 1361, 1362, 2223, 1378, 1473, 1474, 1475, 1476, 1477,
	661, 661, 3425, 661, 1075, 661, 661, 3573, 661, 661,
	661, 661, 661, 661, 1503, 1767, 3362, 1768, 3040, 1520,
	1769, 1378, 1121, 104, 1378, 661, 1378, 195, 3567, 1509,
	1521, 3292, 1335, 999, 105, 1036, 1496, 3537, 1535, 1033,
	3291, 1535, 1091, 1794, 3116, 107, 3117, 195, 1919, 1335,
	1921, 3282, 1678, 1862, 1864, 1865, 1000, 1920, 2911, 3132,
	661, 3363, 195, 1648, 1649, 1650, 1353, 1354, 1355, 1356,
	1357, 1358, 1360, 1359, 1361, 1362, 661, 1863, 195, 1713,
	1664, 3131, 1716, 3064, 1718, 1537, 3063, 2633, 1332, 3053,
	1333, 1334, 1735, 2837, 3574, 1335, 1506, 195, 2825, 2175,
	2534, 2533, 898, 1517, 195, 2532, 2181, 900, 1540, 1000,
	1761, 1760, 1657, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 661, 1335, 1717, 1676, 1564, 1565, 1758, 1745,
	1725, 1726, 2020, 3535, 1535, 1744, 1731, 1732, 1747, 2176,
	1686, 2887, 1687, 1335, 1689, 1691, 2174, 1675, 1695, 1697,
	1699, 1701, 1703, 1674, 1674, 2303, 2304, 2305, 999, 1743,
	1640, 842, 843, 844, 993, 996, 997, 1332, 957, 1333,
	1334, 2635, 990, 994, 1667, 1759, 2654, 1654, 1655, 1653,
	2177, 1523, 1733, 1789, 1332, 1727, 1333, 1334, 1000, 1724,
	2173, 1000, 1757, 989, 1797, 1357, 1358, 1360, 1359, 1361,
	1362, 1801, 1746, 1803, 1804, 1805, 1806, 1721, 1535, 1723,
	1810, 999, 1722, 1693, 1089, 1795, 1796, 993, 996, 997,
	1088, 957, 1822, 3047, 650, 990, 994, 3469, 1535, 1800,
	1332, 1785, 1333, 1334, 2516, 650, 1807, 1808, 1809, 1300,
	110, 2645, 2644, 2643, 2197, 2196, 2637, 1646, 2641, 650,
	2636, 109, 2634, 108, 2195, 2194, 1567, 2639, 1332, 3527,
	1333, 1334, 103, 1544, 128, 976, 2638, 975, 974, 1355,
	1356, 1357, 1358, 1360, 1359, 1361, 1362, 2793, 1332, 3389,
	1333, 1334, 1335, 3388, 2640, 2642, 2193, 2192, 661, 661,
	999, 3366, 1799, 999, 3365, 1003, 993, 3364, 1003, 993,
	1005, 661, 3287, 1005, 1006, 1004, 1351, 1006, 1004, 1545,
	195, 3271, 1821, 3270, 2020, 1820, 2460, 3552, 2017, 3181,
	1335, 1535, 2794, 3179, 1351, 1007, 2627, 2019, 2367, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1360, 1359, 1361, 1362,
	42, 837, 3128, 42, 2089, 2090, 2796, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1360, 1359, 1361, 1362, 661, 3514,
	1535, 1897, 1897, 1501, 2791, 1500, 3467, 1535, 1378, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1337, 1499, 101, 661,
	3061, 2807, 2808, 1331, 1535, 1378, 1917, 3046, 2792, 102,
	1918, 1875, 2896, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1351, 2893, 2310, 2828,
	661, 661, 1866, 2827, 1868, 2543, 1502, 1332, 2530, 1333,
	1334, 2798, 2460, 3452, 1981, 1498, 1376, 2460, 3432, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1360, 1359, 1361, 1362,
	110, 1895, 1895, 1915, 1535, 1535, 1898, 2243, 1876, 2460,
	3428, 109, 2013, 108, 2242, 1332, 101, 1333, 1334, 1335,
	2028, 3415, 1535, 103, 2079, 1335, 2061, 102, 2365, 3100,
	3379, 3382, 1977, 1824, 1335, 1790, 2363, 2042, 1331, 1535,
	3318, 1828, 1829, 1869, 1335, 1756, 1351, 85, 1335, 2806,
	85, 1748, 1845, 2928, 1536, 2049, 1738, 1503, 1335, 2025,
	1734, 2809, 1730, 195, 3295, 1535, 95, 1729, 661, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1360, 1359, 1361, 1362,
	103, 1535, 1535, 1335, 1874, 2460, 3283, 3317, 2073, 1728,
	1335, 1546, 195, 3100, 1535, 661, 2460, 3098, 2066, 2016,
	2067, 2221, 1535, 3465, 1535, 195, 3019, 1535, 3275, 661,
	1535, 1901, 2028, 195, 1335, 195, 1132, 195, 195, 1535,
	3274, 1908, 1910, 2376, 1535, 2027, 2818, 2817, 3341, 1535,
	1975, 3108, 661, 3528, 2815, 2816, 2813, 2814, 2135, 1535,
	1986, 2570, 3339, 1535, 2548, 2030, 2031, 1925, 1926, 1927,
	1928, 2025, 2813, 2812, 1332, 2107, 1333, 1334, 2484, 1535,
	1332, 1939, 1333, 1334, 2297, 2592, 2134, 3336, 1535, 1332,
	3014, 1333, 1334, 2026, 3322, 1535, 1335, 2795, 2780, 1332,
	104, 1333, 1334, 1332, 109, 1333, 1334, 1335, 2297, 661,
	2182, 105, 2072, 1332, 1331, 1333, 1334, 3016, 2990, 1535,
	104, 3420, 2029, 2505, 1335, 2032, 2033, 2505, 2050, 1636,
	2573, 105, 2566, 2567, 1986, 2476, 661, 2027, 1332, 2476,
	1333, 1334, 661, 2460, 2459, 1332, 1335, 1333, 1334, 2456,
	3393, 2130, 2144, 2145, 2146, 2147, 2139, 914, 2140, 2141,
	2142, 2143, 2048, 2129, 103, 2460, 2060, 2321, 1535, 1332,
	2111, 1333, 1334, 1331, 2150, 2151, 2152, 2153, 1335, 2071,
	2983, 1535, 2483, 1335, 2210, 2094, 2506, 1900, 1535, 661,
	2506, 3313, 2074, 2164, 661, 3065, 2508, 2222, 661, 661,
	2297, 1548, 1636, 1635, 2092, 1579, 1578, 2484, 2980, 1535,
	2750, 3014, 2170, 947, 2117, 948, 2116, 2115, 2133, 1335,
	2318, 3014, 2321, 2132, 2131, 2484, 1335, 2975, 2815, 2723,
	2317, 1332, 2118, 1333, 1334, 2207, 195, 2484, 2321, 1963,
	2180, 2376, 1332, 195, 1333, 1334, 3066, 3067, 3068, 2352,
	2351, 3495, 195, 195, 2221, 2221, 195, 2204, 195, 1332,
	2087, 1333, 1334, 3377, 1539, 195, 2165, 1547, 2154, 2156,
	2157, 2161, 195, 2051, 2799, 2183, 2179, 2215, 2803, 2191,
	2218, 1332, 2219, 1333, 1334, 2802, 1900, 1846, 2235, 1335,
	1830, 1779, 1566, 984, 1001, 983, 3435, 1335, 195, 1002,
	2214, 2165, 2217, 2978, 1535, 2213, 903, 661, 2236, 1674,
	2943, 1535, 3306, 1332, 1542, 1333, 1334, 3272, 1332, 2804,
	1333, 1334, 2239, 3193, 2800, 3081, 2240, 2241, 3078, 2801,
	1955, 1944, 1945, 1946, 1947, 1957, 1948, 1949, 1950, 1962,
	1958, 1951, 1952, 1959, 1960, 1961, 1953, 1954, 1956, 3059,
	2938, 2937, 1638, 2163, 1332, 2885, 1333, 1334, 2842, 2838,
	1335, 1332, 2574, 1333, 1334, 1709, 2281, 2282, 2246, 2160,
	1335, 2284, 2314, 1378, 3279, 2028, 2319, 2155, 2149, 2322,
	2285, 2323, 3083, 2148, 95, 1335, 2330, 1763, 1669, 1665,
	2332, 2333, 2334, 1634, 121, 2307, 2325, 2309, 2840, 2539,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2274, 2540, 3069, 1074, 2315, 2889, 1710, 1711, 1712, 1868,
	3026, 3027, 3307, 2178, 1332, 2064, 1333, 1334, 1826, 1335,
	1705, 2313, 1332, 3397, 1333, 1334, 2356, 2357, 2358, 2359,
	2360, 3547, 2362, 3032, 2926, 1535, 2364, 2540, 3545, 1335,
	2369, 2370, 2308, 2371, 2431, 1535, 2374, 2287, 2375, 3070,
	3071, 3072, 2378, 1335, 3521, 3401, 2382, 1335, 3327, 2324,
	2387, 2388, 2389, 2390, 2295, 1335, 3029, 1706, 1707, 1708,
	2027, 2834, 2833, 2401, 2832, 2404, 2405, 2750, 1869, 1335,
	1827, 2553, 2275, 2407, 2409, 1332, 2306, 1333, 1334, 3031,
	2412, 2413, 2414, 2415, 2416, 1332, 1335, 1333, 1334, 2769,
	1335, 2423, 2424, 3034, 2425, 1335, 2768, 2428, 2430, 2073,
	1332, 2432, 1333, 1334, 195, 1335, 3172, 3308, 2026, 2078,
	1335, 2444, 195, 2429, 1535, 2772, 2327, 1897, 1335, 1543,
	2773, 2770, 2070, 661, 1335, 2335, 2771, 2408, 1535, 1335,
	3020, 2391, 1535, 2774, 661, 2493, 2494, 2728, 2727, 2383,
	1535, 3163, 2350, 3162, 1332, 3361, 1333, 1334, 3007, 3174,
	2737, 1335, 3010, 2985, 1778, 889, 3006, 2443, 195, 2740,
	2742, 918, 2523, 195, 1332, 2811, 1333, 1334, 2743, 919,
	2981, 2544, 2361, 1040, 2953, 1039, 1335, 2904, 1332, 2949,
	1333, 1334, 1332, 2539, 1333, 1334, 2621, 42, 671, 2935,
	1332, 3161, 1333, 1334, 2934, 1335, 2498, 1895, 2480, 2500,
	1335, 2445, 2931, 2446, 1332, 2448, 1333, 1334, 1335, 2535,
	1299, 101, 2580, 2427, 129, 1923, 3012, 103, 1335, 2461,
	3559, 1332, 102, 1333, 1334, 1332, 1335, 1333, 1334, 1924,
	1332, 661, 1333, 1334, 2499, 2426, 2457, 195, 2089, 2090,
	1332, 3474, 1333, 1334, 195, 1332, 2470, 1333, 1334, 3378,
	1509, 2830, 2433, 1332, 2278, 1333, 1334, 3302, 661, 1332,
	2422, 1333, 1334, 1335, 1332, 661, 1333, 1334, 2810, 2497,
	2075, 2453, 2458, 2565, 661, 1335, 2267, 1503, 2266, 2421,
	2526, 2528, 2473, 2992, 2420, 2265, 1332, 1335, 1333, 1334,
	1378, 1335, 2419, 2519, 2264, 2503, 2589, 924, 2263, 1335,
	930, 930, 2418, 195, 195, 195, 195, 195, 2507, 2355,
	2417, 1332, 2510, 1333, 1334, 926, 927, 2542, 2726, 2301,
	2517, 108, 2545, 2546, 3349, 2170, 2725, 195, 195, 3348,
	1332, 110, 1333, 1334, 3330, 1332, 3180, 1333, 1334, 3178,
	2531, 3177, 109, 1332, 108, 1333, 1334, 2406, 2587, 2520,
	195, 1335, 3170, 1332, 3079, 1333, 1334, 3011, 2541, 2400,
	3009, 1332, 2843, 1333, 1334, 2549, 2205, 1335, 1652, 2550,
	925, 661, 2554, 2555, 2556, 2399, 109, 1335, 3169, 1533,
	1529, 1335, 110, 2398, 101, 2586, 2656, 2657, 2658, 2659,
	2660, 103, 1657, 109, 1530, 102, 3000, 2476, 1332, 3151,
	1333, 1334, 2456, 2575, 2576, 2665, 2585, 3549, 3548, 3548,
	1332, 2668, 1333, 1334, 2353, 2631, 2062, 1560, 661, 2068,
	2069, 1532, 1332, 1531, 1333, 1334, 1332, 110, 1333, 1334,
	1552, 3549, 2610, 2646, 1332, 2397, 1333, 1334, 109, 3367,
	108, 114, 115, 3045, 2629, 2661, 916, 1843, 3, 103,
	10, 2396, 1351, 97, 1, 1347, 661, 1348, 1302, 2613,
	2619, 2395, 1301, 2620, 661, 2394, 1841, 3049, 3484, 9,
	2630, 1349, 1363, 1364, 1346, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1360, 1359, 1361, 1362, 1332, 1842, 1333, 1334,
	8, 2649, 621, 2052, 1507, 661, 3522, 3480, 2702, 2647,
	1335, 3481, 1332, 2707, 1333, 1334, 1749, 1739, 3111, 195,
	1987, 2704, 1332, 661, 1333, 1334, 1332, 3303, 1333, 1334,
	2846, 2211, 2316, 2648, 3077, 2168, 992, 661, 154, 2127,
	2128, 1378, 2759, 3448, 661, 661, 1378, 195, 195, 195,
	195, 195, 2016, 118, 2016, 2676, 2670, 2107, 950, 195,
	2777, 117, 995, 1105, 2747, 195, 1335, 195, 2206, 3101,
	195, 195, 195, 2524, 2136, 1585, 2707, 1583, 1584, 1582,
	1587, 2762, 905, 2779, 1586, 2107, 2107, 2107, 2107, 2107,
	2730, 2912, 2678, 2354, 2680, 2731, 2706, 2954, 2703, 2753,
	2705, 1834, 657, 2496, 2753, 2107, 651, 192, 2107, 1574,
	2691, 2692, 2693, 2694, 2718, 1553, 195, 2756, 2686, 2687,
	2688, 2689, 2690, 2967, 2729, 1034, 611, 2819, 2244, 661,
	617, 2732, 1378, 1383, 1825, 2724, 2511, 661, 2744, 2745,
	945, 937, 195, 2781, 2722, 1332, 2782, 1333, 1334, 2063,
	2393, 907, 2866, 2447, 944, 3280, 195, 2764, 2765, 2758,
	2767, 2775, 2763, 906, 3004, 2766, 2719, 2720, 2721, 2736,
	2738, 2463, 2741, 2783, 2734, 195, 1335, 1789, 195, 3360,
	3171, 3433, 2521, 1549, 2761, 2974, 104, 2906, 2326, 1912,
	2845, 1373, 2822, 2789, 2821, 2823, 2824, 105, 2820, 2104,
	1335, 1332, 3146, 1333, 1334, 1861, 680, 2923, 2924, 2925,
	679, 2927, 2929, 677, 1335, 2874, 2449, 2477, 1335, 1338,
	827, 2437, 1335, 1561, 2488, 2936, 1335, 2873, 2844, 2486,
	2940, 2941, 2942, 2944, 2945, 2946, 2947, 2865, 2485, 2948,
	2170, 2950, 2951, 2952, 2880, 1335, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2276, 2112, 661, 3028,
	2392, 3024, 2900, 3476, 2972, 2897, 2899, 2976, 2106, 2977,
	2979, 2907, 2982, 2984, 1335, 2986, 2987, 2988, 2989, 2102,
	2902, 2903, 2455, 2995, 2386, 778, 777, 195, 689, 2917,
	681, 673, 776, 2914, 2915, 775, 2916, 2908, 2385, 2918,
	2969, 2920, 2384, 2922, 3042, 1335, 2381, 2973, 2872, 1335,
	2380, 1332, 3460, 1333, 1334, 2595, 2886, 2597, 3017, 3018,
	2522, 2882, 3022, 1316, 1525, 667, 963, 2909, 3384, 2379,
	2300, 1335, 2932, 1524, 1942, 1332, 1943, 1333, 1334, 3391,
	2854, 1335, 3095, 195, 2835, 1335, 2571, 2198, 70, 1332,
	1335, 1333, 1334, 1332, 46, 1333, 1334, 1332, 2377, 1333,
	1334, 1332, 3355, 1333, 1334, 2998, 3421, 2993, 2994, 774,
	771, 1336, 195, 3148, 2996, 3149, 3001, 3150, 2698, 3008,
	1332, 2107, 1333, 1334, 2699, 3404, 3405, 770, 3406, 2373,
	1970, 3013, 195, 2372, 1312, 195, 195, 195, 3023, 1309,
	1391, 3497, 1836, 3030, 3033, 661, 661, 96, 37, 1332,
	36, 1333, 1334, 35, 3035, 2368, 34, 3037, 3038, 3036,
	3084, 3085, 33, 3043, 3044, 2366, 27, 2874, 3099, 2331,
	26, 25, 24, 23, 2320, 20, 30, 3105, 3106, 2873,
	1332, 22, 1333, 1334, 1332, 21, 1333, 1334, 19, 18,
	2857, 3517, 661, 661, 661, 661, 3558, 123, 55, 3054,
	3055, 52, 3060, 50, 3062, 131, 1332, 130, 1333, 1334,
	3118, 53, 49, 3122, 1077, 47, 1332, 32, 1333, 1334,
	1332, 31, 1333, 1334, 17, 1332, 16, 1333, 1334, 15,
	14, 2489, 2492, 2493, 2494, 2490, 13, 2491, 2495, 12,
	3133, 3026, 3027, 11, 2489, 2492, 2493, 2494, 2490, 3107,
	2491, 2495, 3088, 1533, 1529, 3137, 3092, 3093, 3094, 7,
	6, 3127, 40, 39, 29, 38, 28, 3145, 1530, 4,
	2558, 2200, 0, 0, 0, 3152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1527, 1532, 0, 1531, 195, 0,
	0, 0, 0, 0, 0, 3123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3166, 1378, 0, 0,
	0, 3144, 661, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 1551, 0, 0, 3189, 3191, 3176,
	3187, 3167, 3175, 3185, 0, 2753, 0, 3183, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	838, 0, 0, 87, 2756, 0, 3294, 195, 2756, 3281,
	661, 1639, 3135, 3199, 0, 3301, 0, 0, 0, 0,
	0, 3196, 3197, 661, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 3195, 0, 3311, 3312, 0, 3314, 0,
	3315, 3316, 0, 0, 0, 3319, 3320, 3321, 3277, 3323,
	3326, 3276, 3293, 3278, 0, 0, 0, 0, 1897, 3298,
	0, 0, 3305, 0, 3297, 3335, 3337, 3338, 3340, 3342,
	3343, 3345, 3325, 661, 0, 3285, 0, 661, 661, 0,
	0, 0, 0, 0, 0, 3324, 902, 0, 87, 0,
	0, 0, 0, 0, 0, 3288, 3289, 3290, 0, 0,
	0, 3329, 0, 0, 0, 0, 661, 902, 0, 3375,
	0, 0, 3331, 0, 0, 0, 3334, 0, 0, 0,
	0, 3371, 962, 3353, 3350, 3351, 0, 3352, 0, 0,
	3370, 0, 0, 0, 0, 0, 0, 0, 1895, 0,
	0, 1791, 3328, 3368, 0, 0, 0, 0, 0, 0,
	0, 3374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3376, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3359, 3395, 3400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3390, 3387, 0, 0, 0,
	0, 0, 0, 42, 0, 3416, 0, 0, 0, 0,
	0, 3417, 3418, 0, 3392, 0, 0, 0, 0, 0,
	661, 0, 3383, 0, 0, 0, 0, 0, 0, 0,
	1378, 0, 661, 3429, 3410, 0, 0, 3411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3419,
	0, 0, 0, 0, 0, 0, 661, 661, 0, 3454,
	3455, 0, 0, 3431, 0, 3426, 0, 0, 3461, 3436,
	3462, 0, 0, 3464, 3466, 3468, 0, 3439, 661, 42,
	3447, 3444, 3441, 3440, 3438, 3443, 3442, 0, 2753, 0,
	3434, 0, 195, 661, 0, 3305, 3449, 0, 3496, 0,
	0, 0, 0, 0, 0, 3472, 0, 0, 0, 0,
	3475, 0, 0, 0, 3493, 3483, 3488, 0, 0, 3461,
	0, 3462, 0, 0, 0, 3502, 0, 3500, 0, 0,
	1856, 1857, 1858, 1859, 0, 3399, 661, 3513, 0, 0,
	0, 0, 0, 3409, 0, 0, 0, 0, 3516, 3511,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3534,
	3536, 3538, 0, 3529, 3531, 661, 1386, 661, 0, 1903,
	1904, 0, 1897, 3542, 1906, 3539, 930, 930, 1911, 3546,
	3544, 0, 1916, 3540, 0, 3461, 0, 3462, 0, 0,
	3557, 3554, 0, 0, 0, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 3560, 3569, 3570, 3568, 1964,
	1965, 1966, 1967, 1968, 1969, 1971, 3566, 1976, 0, 1978,
	1979, 1980, 0, 1982, 1983, 1984, 1897, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	3325, 2014, 1895, 2021, 2022, 930, 3543, 930, 930, 930,
	930, 930, 3577, 3578, 3576, 0, 0, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 0, 2043, 2044, 2045, 2046,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	3575, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 1141, 0, 1141, 1141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3217, 3219, 3218, 3236, 3237, 3238, 3239, 3240, 3241,
	3242, 728, 0, 2166, 0, 0, 0, 0, 0, 0,
	0, 902, 1375, 1380, 1381, 0, 1384, 0, 1385, 1387,
	1388, 1389, 0, 1392, 1393, 1395, 1395, 0, 1395, 1399,
	1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1590, 0, 0, 0,
	1466, 0, 1468, 1469, 1470, 1471, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 1399, 1399, 1399, 1399, 1399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 902,
	0, 0, 0, 902, 0, 3223, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3231, 3232, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 0,
	1625, 1626, 1628, 1629, 1627, 1630, 1631, 1604, 1605, 1606,
	1607, 1588, 1589, 1617, 0, 1591, 0, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 0, 0, 1601, 1608,
	1609, 1610, 1611, 2329, 1612, 1613, 1614, 1615, 0, 0,
	0, 0, 0, 0, 2336, 2337, 2338, 2339, 0, 0,
	0, 0, 0, 0, 794, 0, 707, 798, 709, 795,
	796, 0, 705, 708, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	726, 727, 3216, 3220, 3221, 3222, 3233, 3234, 3235, 3243,
	3245, 759, 3244, 3246, 3247, 3248, 3251, 3252, 3253, 3254,
	3249, 3250, 3255, 3200, 3204, 3201, 3202, 3203, 3215, 3205,
	3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3256,
	3257, 3258, 3259, 3260, 3261, 3226, 3230, 3229, 3227, 3228,
	3224, 3225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 799, 0, 800, 0, 0, 804,
	0, 0, 0, 806, 805, 0, 807, 773, 772, 0,
	0, 801, 802, 0, 803, 0, 0, 0, 0, 190,
	1618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1141, 0, 0, 129, 0, 151, 1551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3262,
	3263, 3264, 3265, 3266, 3267, 3268, 3269, 162, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 170, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 1660, 1661, 161, 160, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 660, 641, 0, 0, 1141, 1141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 190, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 1662, 158,
	0, 1659, 0, 156, 157, 129, 0, 0, 0, 0,
	173, 625, 0, 660, 0, 660, 0, 0, 172, 179,
	0, 2626, 0, 0, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 0, 0, 2650, 2651, 0, 0, 2653, 0, 0,
	2655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2518, 0, 0, 620, 0, 0, 0, 0, 0,
	2662, 2663, 2664, 635, 169, 0, 0, 170, 0, 0,
	0, 0, 2669, 0, 0, 2671, 2672, 2673, 630, 0,
	0, 2674, 2675, 0, 0, 1990, 2677, 0, 633, 2679,
	189, 0, 2681, 2682, 2683, 2684, 0, 0, 0, 0,
	2685, 1990, 1990, 1990, 1990, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 930,
	0, 645, 0, 0, 0, 0, 2708, 2709, 2710, 2711,
	2712, 2713, 0, 164, 0, 2714, 2715, 0, 2716, 0,
	2717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 612, 626, 0, 647,
	0, 646, 616, 0, 614, 618, 627, 619, 0, 613,
	0, 624, 0, 0, 615, 628, 629, 632, 636, 637,
	638, 634, 631, 639, 609, 2748, 622, 648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	2778, 179, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2841, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 150, 962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 177, 169, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 164, 0, 1660, 1661, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 2930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 649, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 0,
	155, 1662, 158, 0, 1659, 0, 156, 157, 0, 601,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 958, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 2302, 0, 0, 660, 1295, 660, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 3080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	2312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 0,
	3104, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 0, 0, 0, 0, 0, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3124, 0, 3125, 0, 0,
	3126, 0, 0, 3129, 3130, 0, 0, 0, 0, 0,
	0, 0, 3134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3136, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3153, 0, 2410, 3154, 0, 3155,
	3156, 0, 3157, 0, 3158, 0, 0, 0, 0, 3159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 0, 0, 1377, 2442, 86,
	44, 45, 88, 0, 3184, 0, 0, 152, 0, 0,
	153, 0, 0, 0, 0, 3192, 902, 0, 3194, 92,
	0, 0, 0, 48, 77, 78, 0, 75, 79, 0,
	3198, 0, 0, 0, 0, 0, 76, 2481, 2482, 0,
	165, 0, 0, 0, 0, 0, 2105, 177, 3273, 902,
	2501, 0, 0, 0, 0, 0, 3515, 0, 660, 660,
	0, 659, 0, 0, 0, 63, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 954, 0, 961, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 0, 0, 0, 0, 0, 184, 186,
	187, 188, 660, 0, 1668, 0, 0, 0, 3358, 0,
	0, 0, 1677, 2578, 0, 1377, 1679, 0, 0, 1682,
	1683, 660, 660, 0, 660, 0, 660, 660, 0, 660,
	660, 660, 660, 660, 660, 0, 0, 0, 0, 0,
	0, 0, 1377, 1714, 1715, 1377, 660, 1377, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 51, 54, 57, 56, 59,
	0, 74, 0, 0, 83, 80, 0, 0, 0, 0,
	0, 660, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 1782, 0, 0, 660, 62, 91,
	90, 0, 0, 72, 73, 58, 0, 0, 0, 0,
	0, 81, 82, 0, 0, 0, 0, 0, 0, 1078,
	0, 1084, 0, 0, 1086, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 1603, 0, 0, 0, 0, 0,
	0, 0, 3398, 64, 65, 0, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3412, 0, 0, 3413, 0,
	3414, 0, 0, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1616, 1619, 1620, 1621,
	1622, 1623, 1624, 0, 1625, 1626, 1628, 1629, 1627, 1630,
	1631, 1604, 1605, 1606, 1607, 1588, 1589, 1617, 0, 1591,
	0, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	0, 0, 1601, 1608, 1609, 1610, 1611, 2105, 1612, 1613,
	1614, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2757, 0, 87, 0, 3494, 2105, 2105, 2105, 2105, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 2105, 0, 0, 2105, 0,
	0, 0, 0, 0, 3508, 0, 3509, 0, 3510, 660,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 2863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2871, 0, 3555, 0, 3556, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	0, 0, 0, 0, 1618, 0, 0, 0, 1905, 0,
	660, 0, 0, 0, 0, 0, 1377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1563, 0, 0, 0, 0, 71,
	0, 0, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 1143, 0, 1143, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 2105, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3041, 0, 0, 0, 0, 0,
	1764, 0, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	660, 0, 0, 0, 0, 0, 0, 2188, 2189, 2190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 660, 1677, 0, 0, 1677, 0, 1677,
	0, 0, 0, 0, 0, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 660, 0, 1513, 1514, 660,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 3160, 0, 3164, 3165, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2757, 0, 87,
	0, 2757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 0, 0, 0, 0, 0, 0, 1849, 840,
	0, 2020, 0, 0, 841, 0, 0, 0, 660, 0,
	1685, 1685, 0, 1685, 1896, 1685, 1685, 0, 1694, 1685,
	1685, 1685, 1685, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 3286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 0, 0, 1377, 0, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 0,
	0, 0, 1143, 0, 0, 0, 0, 2757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 3385, 0, 0, 0, 0,
	0, 2095, 0, 2098, 660, 0, 1849, 0, 0, 0,
	0, 0, 0, 87, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1143, 1143,
	2515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3430, 0, 0, 0, 0, 87,
	0, 193, 0, 0, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1891, 0,
	912, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 660, 931, 931, 1907,
	1677, 1677, 0, 0, 0, 660, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 2588, 0, 0, 0, 0, 0, 0, 0,
	1940, 1941, 0, 0, 0, 3512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 2255, 0, 0, 0, 0, 0, 0, 0, 0,
	2272, 2273, 0, 0, 2277, 0, 0, 0, 0, 0,
	1143, 0, 0, 2280, 0, 0, 0, 0, 0, 0,
	2283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 1143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 954, 0, 0, 660, 840, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 0, 1377, 0, 0, 660, 660, 1377, 0, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 0, 0,
	0, 0, 961, 0, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 0, 0, 2826, 954,
	0, 0, 0, 0, 1891, 0, 0, 0, 1891, 1891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 1377, 0, 0, 0, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2502, 0, 0, 0, 0, 0, 0, 0, 2905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2551, 0, 0, 0, 660,
	0, 0, 0, 0, 602, 0, 602, 0, 0, 602,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2600, 2601, 2602, 2603, 2604, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 2614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 3048, 0, 0, 0, 0, 0, 2622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 660, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 840, 0, 0,
	0, 828, 841, 842, 843, 844, 829, 0, 0, 830,
	831, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 837, 845, 846, 0,
	0, 0, 0, 660, 660, 660, 660, 0, 0, 0,
	0, 0, 0, 2450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2875, 2876, 0, 0, 0, 0, 1379,
	0, 0, 0, 0, 0, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2547, 0, 0, 0, 0, 912, 0, 1377, 0,
	0, 0, 0, 660, 0, 660, 0, 0, 2877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 602,
	0, 0, 0, 0, 0, 2572, 0, 0, 0, 0,
	0, 0, 0, 0, 2577, 0, 0, 602, 0, 0,
	0, 0, 0, 0, 2831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	2869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 0, 2881, 2878, 2879, 1379, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 2898, 0, 0, 2901, 0, 0, 0,
	0, 0, 0, 0, 1379, 0, 0, 1379, 0, 1379,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 660, 0, 0, 0, 660, 660,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 660, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 1812, 602, 602,
	602, 602, 602, 602, 602, 2997, 2696, 0, 0, 0,
	0, 0, 0, 0, 1143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 660, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1143, 0, 0,
	660, 0, 0, 0, 2760, 1685, 0, 0, 0, 0,
	3058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3073, 0, 0, 3074, 3075, 3076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 660, 954,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 931, 0, 0, 0, 1379, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 931, 1788, 931, 931, 931, 931, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 0, 0, 1788, 602, 0, 602, 0,
	602, 2114, 0, 0, 0, 2077, 2077, 95, 0, 0,
	840, 0, 0, 0, 828, 841, 842, 843, 844, 829,
	0, 0, 830, 831, 0, 832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	845, 846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3112, 3113, 3114, 3115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2875, 2876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 3396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2877, 3188, 0, 3190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 602, 0, 0, 602,
	0, 2279, 0, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2878, 2879,
	3296, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3346, 0, 0, 0, 3346, 3346, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 1788, 0,
	0, 794, 0, 0, 798, 0, 795, 796, 0, 0,
	0, 797, 0, 0, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3427, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1143, 1143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 0, 0, 2557, 0, 0,
	0, 0, 0, 0, 0, 0, 3423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 2968, 0, 3478, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 602, 602, 602,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1379, 0, 0, 0, 0, 1379,
	602, 602, 602, 602, 602, 0, 0, 0, 0, 0,
	0, 0, 2776, 0, 0, 0, 0, 0, 1736, 0,
	602, 0, 0, 602, 2784, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 0,
	0, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 602, 602,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 0, 1277, 1262, 506, 0, 1205, 1280,
	1174, 1193, 1290, 1196, 1199, 1241, 1153, 1219, 406, 1190,
	1146, 1178, 1148, 1185, 1149, 1176, 1207, 264, 1173, 1264,
	1223, 1279, 357, 261, 1155, 1179, 420, 1195, 202, 1243,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 1286, 361, 1229, 0, 485, 391,
	0, 0, 0, 1209, 1268, 1217, 1255, 1204, 1242, 1163,
	1228, 1281, 1191, 1238, 1282, 316, 244, 318, 201, 403,
	486, 280, 0, 0, 1736, 0, 3450, 650, 0, 0,
	0, 0, 3451, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 602, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 1187, 1235, 1276, 1188, 1237, 259,
	314, 266, 258, 511, 1287, 1267, 1152, 1216, 1275, 0,
	0, 225, 1278, 1211, 0, 1240, 0, 1293, 1147, 1231,
	0, 1150, 1154, 1289, 1271, 1182, 269, 0, 0, 0,
	0, 0, 0, 0, 1208, 1218, 1252, 1256, 1202, 0,
	0, 0, 0, 1379, 0, 0, 1180, 0, 1227, 0,
	0, 0, 1159, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 1162, 0, 1181, 1253, 1736, 1145, 291, 1156, 392,
	251, 0, 442, 1260, 1270, 1203, 553, 1274, 1201, 1200,
	1247, 1160, 1266, 1194, 356, 1158, 323, 197, 221, 0,
	1192, 402, 450, 462, 1265, 1177, 1186, 249, 1184, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 1226,
	1245, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 574, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 569, 209,
	495, 526, 235, 472, 0, 0, 576, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 577, 224, 547,
	216, 1157, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 578, 230, 231, 233, 1172, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 1261,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 570, 568, 566, 567, 397, 304, 483, 326, 364,
	1250, 1292, 415, 461, 236, 533, 484, 1167, 1171, 1165,
	1232, 1166, 1221, 1222, 1168, 1283, 1284, 1285, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 0, 1254, 1161, 0,
	1169, 1170, 1263, 1272, 1273, 597, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 1225, 196, 217, 359, 1288,
	443, 282, 575, 543, 538, 203, 219, 1164, 256, 1175,
	1183, 0, 1189, 1197, 1198, 1210, 1212, 1213, 1214, 1215,
	1233, 1234, 1236, 1244, 1246, 1249, 1251, 1258, 1269, 1291,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 572, 573,
	293, 527, 557, 525, 571, 551, 428, 369, 1224, 1294,
	1230, 372, 275, 298, 313, 1239, 542, 490, 223, 455,
	284, 247, 1257, 1259, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 1220, 1248,
	367, 507, 508, 309, 387, 0, 0, 0, 1277, 1262,
	506, 0, 1205, 1280, 1174, 1193, 1290, 1196, 1199, 1241,
	1153, 1219, 406, 1190, 1146, 1178, 1148, 1185, 1149, 1176,
	1207, 264, 1173, 1264, 1223, 1279, 357, 261, 1155, 1179,
	420, 1195, 202, 1243, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 1286, 361,
	1229, 0, 485, 391, 0, 0, 0, 1209, 1268, 1217,
	1255, 1204, 1242, 1163, 1228, 1281, 1191, 1238, 1282, 316,
	244, 318, 201, 403, 486, 280, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 1187, 1235,
	1276, 1188, 1237, 259, 314, 266, 258, 511, 1287, 1267,
	1152, 1216, 1275, 0, 0, 225, 1278, 1211, 0, 1240,
	0, 1293, 1147, 1231, 0, 1150, 1154, 1289, 1271, 1182,
	269, 0, 0, 0, 0, 0, 0, 0, 1208, 1218,
	1252, 1256, 1202, 0, 0, 0, 0, 0, 2785, 0,
	1180, 0, 1227, 0, 0, 0, 1159, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 1162, 0, 1181, 1253, 0,
	1145, 291, 1156, 392, 251, 0, 442, 1260, 1270, 1203,
	553, 1274, 1201, 1200, 1247, 1160, 1266, 1194, 356, 1158,
	323, 197, 221, 0, 1192, 402, 450, 462, 1265, 1177,
	1186, 249, 1184, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 1226, 1245, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 574, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 569, 209, 495, 526, 235, 472, 0, 0,
	576, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 577, 224, 547, 216, 1157, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 578, 230, 231, 233,
	1172, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 1261, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 570, 568, 566, 567, 397,
	304, 483, 326, 364, 1250, 1292, 415, 461, 236, 533,
	484, 1167, 1171, 1165, 1232, 1166, 1221, 1222, 1168, 1283,
	1284, 1285, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	0, 1254, 1161, 0, 1169, 1170, 1263, 1272, 1273, 597,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 1225,
	196, 217, 359, 1288, 443, 282, 575, 543, 538, 203,
	219, 1164, 256, 1175, 1183, 0, 1189, 1197, 1198, 1210,
	1212, 1213, 1214, 1215, 1233, 1234, 1236, 1244, 1246, 1249,
	1251, 1258, 1269, 1291, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 572, 573, 293, 527, 557, 525, 571, 551,
	428, 369, 1224, 1294, 1230, 372, 275, 298, 313, 1239,
	542, 490, 223, 455, 284, 247, 1257, 1259, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 1220, 1248, 367, 507, 508, 309, 387, 0,
	0, 0, 1277, 1262, 506, 0, 1205, 1280, 1174, 1193,
	1290, 1196, 1199, 1241, 1153, 1219, 406, 1190, 1146, 1178,
	1148, 1185, 1149, 1176, 1207, 264, 1173, 1264, 1223, 1279,
	357, 261, 1155, 1179, 420, 1195, 202, 1243, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 1286, 361, 1229, 0, 485, 391, 0, 0,
	0, 1209, 1268, 1217, 1255, 1204, 1242, 1163, 1228, 1281,
	1191, 1238, 1282, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 1187, 1235, 1276, 1188, 1237, 259, 314, 266,
	258, 511, 1287, 1267, 1152, 1216, 1275, 0, 0, 225,
	1278, 1211, 0, 1240, 0, 1293, 1147, 1231, 0, 1150,
	1154, 1289, 1271, 1182, 269, 0, 0, 0, 0, 0,
	0, 0, 1208, 1218, 1252, 1256, 1202, 0, 0, 0,
	0, 0, 2746, 0, 1180, 0, 1227, 0, 0, 0,
	1159, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 1162,
	0, 1181, 1253, 0, 1145, 291, 1156, 392, 251, 0,
	442, 1260, 1270, 1203, 553, 1274, 1201, 1200, 1247, 1160,
	1266, 1194, 356, 1158, 323, 197, 221, 0, 1192, 402,
	450, 462, 1265, 1177, 1186, 249, 1184, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 1226, 1245, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 574, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 569, 209, 495, 526,
	235, 472, 0, 0, 576, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 577, 224, 547, 216, 1157,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	578, 230, 231, 233, 1172, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 1261, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 570,
	568, 566, 567, 397, 304, 483, 326, 364, 1250, 1292,
	415, 461, 236, 533, 484, 1167, 1171, 1165, 1232, 1166,
	1221, 1222, 1168, 1283, 1284, 1285, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 0, 1254, 1161, 0, 1169, 1170,
	1263, 1272, 1273, 597, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 1225, 196, 217, 359, 1288, 443, 282,
	575, 543, 538, 203, 219, 1164, 256, 1175, 1183, 0,
	1189, 1197, 1198, 1210, 1212, 1213, 1214, 1215, 1233, 1234,
	1236, 1244, 1246, 1249, 1251, 1258, 1269, 1291, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 572, 573, 293, 527,
	557, 525, 571, 551, 428, 369, 1224, 1294, 1230, 372,
	275, 298, 313, 1239, 542, 490, 223, 455, 284, 247,
	1257, 1259, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 1220, 1248, 367, 507,
	508, 309, 387, 0, 0, 0, 1277, 1262, 506, 0,
	1205, 1280, 1174, 1193, 1290, 1196, 1199, 1241, 1153, 1219,
	406, 1190, 1146, 1178, 1148, 1185, 1149, 1176, 1207, 264,
	1173, 1264, 1223, 1279, 357, 261, 1155, 1179, 420, 1195,
	202, 1243, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 1286, 361, 1229, 0,
	485, 391, 0, 0, 0, 1209, 1268, 1217, 1255, 1204,
	1242, 1163, 1228, 1281, 1191, 1238, 1282, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 1187, 1235, 1276, 1188,
	1237, 259, 314, 266, 258, 511, 1287, 1267, 1152, 1216,
	1275, 0, 0, 225, 1278, 1211, 0, 1240, 0, 1293,
	1147, 1231, 0, 1150, 1154, 1289, 1271, 1182, 269, 0,
	0, 0, 0, 0, 0, 0, 1208, 1218, 1252, 1256,
	1202, 0, 0, 0, 0, 0, 2093, 0, 1180, 0,
	1227, 0, 0, 0, 1159, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 1162, 0, 1181, 1253, 0, 1145, 291,
	1156, 392, 251, 0, 442, 1260, 1270, 1203, 553, 1274,
	1201, 1200, 1247, 1160, 1266, 1194, 356, 1158, 323, 197,
	221, 0, 1192, 402, 450, 462, 1265, 1177, 1186, 249,
	1184, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 1226, 1245, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 574, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	569, 209, 495, 526, 235, 472, 0, 0, 576, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 577,
	224, 547, 216, 1157, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 578, 230, 231, 233, 1172, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 1261, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 570, 568, 566, 567, 397, 304, 483,
	326, 364, 1250, 1292, 415, 461, 236, 533, 484, 1167,
	1171, 1165, 1232, 1166, 1221, 1222, 1168, 1283, 1284, 1285,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 0, 1254,
	1161, 0, 1169, 1170, 1263, 1272, 1273, 597, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 1225, 196, 217,
	359, 1288, 443, 282, 575, 543, 538, 203, 219, 1164,
	256, 1175, 1183, 0, 1189, 1197, 1198, 1210, 1212, 1213,
	1214, 1215, 1233, 1234, 1236, 1244, 1246, 1249, 1251, 1258,
	1269, 1291, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	572, 573, 293, 527, 557, 525, 571, 551, 428, 369,
	1224, 1294, 1230, 372, 275, 298, 313, 1239, 542, 490,
	223, 455, 284, 247, 1257, 1259, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	1220, 1248, 367, 507, 508, 309, 387, 0, 0, 0,
	1277, 1262, 506, 0, 1205, 1280, 1174, 1193, 1290, 1196,
	1199, 1241, 1153, 1219, 406, 1190, 1146, 1178, 1148, 1185,
	1149, 1176, 1207, 264, 1173, 1264, 1223, 1279, 357, 261,
	1155, 1179, 420, 1195, 202, 1243, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	1286, 361, 1229, 0, 485, 391, 0, 0, 0, 1209,
	1268, 1217, 1255, 1204, 1242, 1163, 1228, 1281, 1191, 1238,
	1282, 316, 244, 318, 201, 403, 486, 280, 0, 95,
	0, 0, 0, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	1187, 1235, 1276, 1188, 1237, 259, 314, 266, 258, 511,
	1287, 1267, 1152, 1216, 1275, 0, 0, 225, 1278, 1211,
	0, 1240, 0, 1293, 1147, 1231, 0, 1150, 1154, 1289,
	1271, 1182, 269, 0, 0, 0, 0, 0, 0, 0,
	1208, 1218, 1252, 1256, 1202, 0, 0, 0, 0, 0,
	0, 0, 1180, 0, 1227, 0, 0, 0, 1159, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 1162, 0, 1181,
	1253, 0, 1145, 291, 1156, 392, 251, 0, 442, 1260,
	1270, 1203, 553, 1274, 1201, 1200, 1247, 1160, 1266, 1194,
	356, 1158, 323, 197, 221, 0, 1192, 402, 450, 462,
	1265, 1177, 1186, 249, 1184, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 1226, 1245, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 574,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 569, 209, 495, 526, 235, 472,
	0, 0, 576, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 577, 224, 547, 216, 1157, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 578, 230,
	231, 233, 1172, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 1261, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 570, 568, 566,
	567, 397, 304, 483, 326, 364, 1250, 1292, 415, 461,
	236, 533, 484, 1167, 1171, 1165, 1232, 1166, 1221, 1222,
	1168, 1283, 1284, 1285, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 0, 1254, 1161, 0, 1169, 1170, 1263, 1272,
	1273, 597, 375, 474, 530, 328, 340, 343, 333, 352,
	0, 353, 329, 330, 335, 337, 338, 339, 344, 345,
	349, 355, 245, 207, 381, 389, 509, 305, 212, 213,
	214, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 286, 539, 302, 457, 456, 324, 325, 370,
	439, 1225, 196, 217, 359, 1288, 443, 282, 575, 543,
	538, 203, 219, 1164, 256, 1175, 1183, 0, 1189, 1197,
	1198, 1210, 1212, 1213, 1214, 1215, 1233, 1234, 1236, 1244,
	1246, 1249, 1251, 1258, 1269, 1291, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 294, 295,
	434, 435, 307, 308, 572, 573, 293, 527, 557, 525,
	571, 551, 428, 369, 1224, 1294, 1230, 372, 275, 298,
	313, 1239, 542, 490, 223, 455, 284, 247, 1257, 1259,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 1220, 1248, 367, 507, 508, 309,
	387, 0, 0, 0, 1277, 1262, 506, 0, 1205, 1280,
	1174, 1193, 1290, 1196, 1199, 1241, 1153, 1219, 406, 1190,
	1146, 1178, 1148, 1185, 1149, 1176, 1207, 264, 1173, 1264,
	1223, 1279, 357, 261, 1155, 1179, 420, 1195, 202, 1243,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 1286, 361, 1229, 0, 485, 391,
	0, 0, 0, 1209, 1268, 1217, 1255, 1204, 1242, 1163,
	1228, 1281, 1191, 1238, 1282, 316, 244, 318, 201, 403,
	486, 280, 0, 0, 0, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 1187, 1235, 1276, 1188, 1237, 259,
	314, 266, 258, 511, 1287, 1267, 1152, 1216, 1275, 0,
	0, 225, 1278, 1211, 0, 1240, 0, 1293, 1147, 1231,
	0, 1150, 1154, 1289, 1271, 1182, 269, 0, 0, 0,
	0, 0, 0, 0, 1208, 1218, 1252, 1256, 1202, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 1227, 0,
	0, 0, 1159, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 1162, 0, 1181, 1253, 0, 1145, 291, 1156, 392,
	251, 0, 442, 1260, 1270, 1203, 553, 1274, 1201, 1200,
	1247, 1160, 1266, 1194, 356, 1158, 323, 197, 221, 0,
	1192, 402, 450, 462, 1265, 1177, 1186, 249, 1184, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 1226,
	1245, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 574, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 569, 209,
	495, 526, 235, 472, 0, 0, 576, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 577, 224, 547,
	216, 1157, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 578, 230, 231, 233, 1172, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 1261,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 570, 568, 566, 567, 397, 304, 483, 326, 364,
	1250, 1292, 415, 461, 236, 533, 484, 1167, 1171, 1165,
	1232, 1166, 1221, 1222, 1168, 1283, 1284, 1285, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 0, 1254, 1161, 0,
	1169, 1170, 1263, 1272, 1273, 597, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 1225, 196, 217, 359, 1288,
	443, 282, 575, 543, 538, 203, 219, 1164, 256, 1175,
	1183, 0, 1189, 1197, 1198, 1210, 1212, 1213, 1214, 1215,
	1233, 1234, 1236, 1244, 1246, 1249, 1251, 1258, 1269, 1291,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 572, 573,
	293, 527, 557, 525, 571, 551, 428, 369, 1224, 1294,
	1230, 372, 275, 298, 313, 1239, 542, 490, 223, 455,
	284, 247, 1257, 1259, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 1220, 1248,
	367, 507, 508, 309, 387, 0, 0, 0, 1277, 1262,
	506, 0, 1205, 1280, 1174, 1193, 1290, 1196, 1199, 1241,
	1153, 1219, 406, 1190, 1146, 1178, 1148, 1185, 1149, 1176,
	1207, 264, 1173, 1264, 1223, 1279, 357, 261, 1155, 1179,
	420, 1195, 202, 1243, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 1286, 361,
	1229, 0, 485, 391, 0, 0, 0, 1209, 1268, 1217,
	1255, 1204, 1242, 1163, 1228, 1281, 1191, 1238, 1282, 316,
	244, 318, 201, 403, 486, 280, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 1187, 1235,
	1276, 1188, 1237, 259, 314, 266, 258, 511, 1287, 1267,
	1152, 1216, 1275, 0, 0, 225, 1278, 1211, 0, 1240,
	0, 1293, 1147, 1231, 0, 1150, 1154, 1289, 1271, 1182,
	269, 0, 0, 0, 0, 0, 0, 0, 1208, 1218,
	1252, 1256, 1202, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 1227, 0, 0, 0, 1159, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 1162, 0, 1181, 1253, 0,
	1145, 291, 1156, 392, 251, 0, 442, 1260, 1270, 1203,
	553, 1274, 1201, 1200, 1247, 1160, 1266, 1194, 356, 1158,
	323, 197, 221, 0, 1192, 402, 450, 462, 1265, 1177,
	1186, 249, 1184, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 1226, 1245, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 574, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 569, 209, 495, 526, 235, 472, 0, 0,
	576, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 577, 224, 547, 216, 1157, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 578, 230, 231, 233,
	1172, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 1261, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 570, 568, 566, 567, 397,
	304, 483, 326, 364, 1250, 1292, 415, 461, 236, 533,
	484, 1167, 1171, 1165, 1232, 1166, 1221, 1222, 1168, 1283,
	1284, 1285, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	0, 1254, 1161, 0, 1169, 1170, 1263, 1272, 1273, 597,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 1225,
	196, 217, 359, 1288, 443, 282, 575, 543, 538, 203,
	219, 1164, 256, 1175, 1183, 0, 1189, 1197, 1198, 1210,
	1212, 1213, 1214, 1215, 1233, 1234, 1236, 1244, 1246, 1249,
	1251, 1258, 1269, 1291, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 572, 573, 293, 527, 557, 525, 571, 551,
	428, 369, 1224, 1294, 1230, 372, 275, 298, 313, 1239,
	542, 490, 223, 455, 284, 247, 1257, 1259, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 1220, 1248, 367, 507, 508, 309, 387, 0,
	0, 0, 1277, 1262, 506, 0, 1205, 1280, 1174, 1193,
	1290, 1196, 1199, 1241, 1153, 1219, 406, 1190, 1146, 1178,
	1148, 1185, 1149, 1176, 1207, 264, 1173, 1264, 1223, 1279,
	357, 261, 1155, 1179, 420, 1195, 202, 1243, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 1286, 361, 1229, 0, 485, 391, 0, 0,
	0, 1209, 1268, 1217, 1255, 1204, 1242, 1163, 1228, 1281,
	1191, 1238, 1282, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 1187, 1235, 1276, 1188, 1237, 259, 314, 266,
	258, 511, 1287, 1267, 1152, 1216, 1275, 0, 0, 225,
	1278, 1211, 0, 1240, 0, 1293, 1147, 1231, 0, 1150,
	1154, 1289, 1271, 1182, 269, 0, 0, 0, 0, 0,
	0, 0, 1208, 1218, 1252, 1256, 1202, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 1227, 0, 0, 0,
	1159, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 1162,
	0, 1181, 1253, 0, 1145, 291, 1156, 392, 251, 0,
	442, 1260, 1270, 1203, 553, 1274, 1201, 1200, 1247, 1160,
	1266, 1194, 356, 1158, 323, 197, 221, 0, 1192, 402,
	450, 462, 1265, 1177, 1186, 249, 1184, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 1226, 1245, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 574, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 569, 209, 495, 526,
	235, 472, 0, 0, 576, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 577, 224, 547, 216, 1157,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	578, 230, 231, 233, 1172, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 1261, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 570,
	568, 566, 567, 397, 304, 483, 326, 364, 1250, 1292,
	415, 461, 236, 533, 484, 1167, 1171, 1165, 1232, 1166,
	1221, 1222, 1168, 1283, 1284, 1285, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 0, 1254, 1161, 0, 1169, 1170,
	1263, 1272, 1273, 597, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 1225, 196, 217, 359, 1288, 443, 282,
	575, 543, 538, 203, 219, 1164, 256, 1175, 1183, 0,
	1189, 1197, 1198, 1210, 1212, 1213, 1214, 1215, 1233, 1234,
	1236, 1244, 1246, 1249, 1251, 1258, 1269, 1291, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 572, 573, 293, 527,
	557, 525, 571, 551, 428, 369, 1224, 1294, 1230, 372,
	275, 298, 313, 1239, 542, 490, 223, 455, 284, 247,
	1257, 1259, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 1220, 1248, 367, 507,
	508, 309, 387, 0, 0, 0, 0, 0, 506, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 690, 0, 0, 0, 264,
	695, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 702, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 698, 699, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 95, 0, 0, 840, 824,
	790, 791, 828, 841, 842, 843, 844, 829, 0, 234,
	830, 831, 241, 832, 0, 789, 730, 732, 731, 749,
	750, 751, 752, 753, 754, 755, 728, 837, 845, 846,
	0, 259, 314, 266, 258, 511, 0, 0, 1972, 1973,
	1974, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 672, 687, 0, 701, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 684, 685, 0, 0, 0, 0,
	784, 0, 686, 0, 0, 694, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 783, 0, 0, 553, 0,
	0, 781, 0, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 834,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 574, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	569, 209, 495, 526, 235, 472, 0, 0, 576, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 835, 836, 250, 577,
	736, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 744, 745, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 578, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 570, 568, 566, 567, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 794,
	782, 707, 798, 709, 795, 796, 704, 705, 708, 797,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 0, 785,
	693, 692, 0, 700, 0, 726, 727, 729, 733, 734,
	735, 746, 747, 748, 756, 758, 759, 757, 760, 761,
	762, 765, 766, 767, 768, 763, 764, 769, 710, 714,
	711, 712, 713, 725, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 808, 809, 810, 811, 812, 813,
	739, 743, 742, 740, 741, 737, 738, 691, 196, 217,
	359, 0, 443, 282, 575, 543, 538, 203, 219, 799,
	256, 800, 0, 0, 804, 0, 0, 0, 806, 805,
	0, 807, 773, 772, 0, 0, 801, 802, 0, 803,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 814, 815, 816, 817, 818, 819,
	820, 821, 293, 527, 557, 525, 571, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 839, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	387, 0, 367, 507, 508, 309, 506, 0, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 690, 0, 0, 0, 264, 695, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 702, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 698, 699, 0, 0, 0,
	0, 0, 0, 2122, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 95, 0, 0, 840, 824, 790, 791,
	828, 841, 842, 843, 844, 829, 0, 234, 830, 831,
	241, 832, 0, 789, 730, 732, 731, 749, 750, 751,
	752, 753, 754, 755, 728, 837, 845, 846, 2123, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 672,
	687, 0, 701, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 684, 685, 0, 0, 0, 0, 784, 0,
	686, 0, 0, 694, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 783, 0, 0, 553, 0, 0, 781,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 834, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 574, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 569, 209,
	495, 526, 235, 472, 0, 0, 576, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 835, 836, 250, 577, 736, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 744, 745, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 578, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 570, 568, 566, 567, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 794, 782, 707,
	798, 709, 795, 796, 704, 705, 708, 797, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 0, 785, 693, 692,
	0, 700, 0, 726, 727, 729, 733, 734, 735, 746,
	747, 748, 756, 758, 759, 757, 760, 761, 762, 765,
	766, 767, 768, 763, 764, 769, 710, 714, 711, 712,
	713, 725, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 808, 809, 810, 811, 812, 813, 739, 743,
	742, 740, 741, 737, 738, 691, 196, 217, 359, 0,
	443, 282, 575, 543, 538, 203, 219, 799, 256, 800,
	0, 0, 804, 0, 0, 0, 806, 805, 0, 807,
	773, 772, 0, 0, 801, 802, 0, 803, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 814, 815, 816, 817, 818, 819, 820, 821,
	293, 527, 557, 525, 571, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 839, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 0, 387,
	367, 507, 508, 309, 86, 506, 0, 703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 690, 0, 0, 0, 264, 695, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 702, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 698, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 95, 0, 0, 840, 824, 790, 791, 828,
	841, 842, 843, 844, 829, 0, 234, 830, 831, 241,
	832, 0, 789, 730, 732, 731, 749, 750, 751, 752,
	753, 754, 755, 728, 837, 845, 846, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 672, 687,
	0, 701, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 684, 685, 0, 0, 0, 0, 784, 0, 686,
	0, 0, 694, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 783, 0, 0, 553, 0, 0, 781, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 834, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 835, 836, 250, 577, 736, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 744, 745, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 794, 782, 707, 798,
	709, 795, 796, 704, 705, 708, 797, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 785, 693, 692, 0,
	700, 0, 726, 727, 729, 733, 734, 735, 746, 747,
	748, 756, 758, 759, 757, 760, 761, 762, 765, 766,
	767, 768, 763, 764, 769, 710, 714, 711, 712, 713,
	725, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 808, 809, 810, 811, 812, 813, 739, 743, 742,
	740, 741, 737, 738, 691, 196, 217, 359, 94, 443,
	282, 575, 543, 538, 203, 219, 799, 256, 800, 0,
	0, 804, 0, 0, 0, 806, 805, 0, 807, 773,
	772, 0, 0, 801, 802, 0, 803, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 814, 815, 816, 817, 818, 819, 820, 821, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 839, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	690, 0, 0, 0, 264, 695, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 702, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 698, 699, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	95, 0, 0, 840, 824, 790, 791, 828, 841, 842,
	843, 844, 829, 0, 234, 830, 831, 241, 832, 0,
	789, 730, 732, 731, 749, 750, 751, 752, 753, 754,
	755, 728, 837, 845, 846, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 672, 687, 0, 701,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 684,
	685, 0, 0, 0, 0, 784, 0, 686, 0, 0,
	694, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	783, 0, 0, 553, 0, 0, 781, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 834, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 3437, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 835, 836, 250, 577, 736, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	744, 745, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 794, 782, 707, 798, 709, 795,
	796, 704, 705, 708, 797, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 785, 693, 692, 0, 700, 0,
	726, 727, 729, 733, 734, 735, 746, 747, 748, 756,
	758, 759, 757, 760, 761, 762, 765, 766, 767, 768,
	763, 764, 769, 710, 714, 711, 712, 713, 725, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 808,
	809, 810, 811, 812, 813, 739, 743, 742, 740, 741,
	737, 738, 691, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 799, 256, 800, 0, 0, 804,
	0, 0, 0, 806, 805, 0, 807, 773, 772, 0,
	0, 801, 802, 0, 803, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 814,
	815, 816, 817, 818, 819, 820, 821, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 839,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 690, 0,
	0, 0, 264, 695, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 702,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	698, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 95, 0,
	1535, 840, 824, 790, 791, 828, 841, 842, 843, 844,
	829, 0, 234, 830, 831, 241, 832, 0, 789, 730,
	732, 731, 749, 750, 751, 752, 753, 754, 755, 728,
	837, 845, 846, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 672, 687, 0, 701, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 684, 685, 0,
	0, 0, 0, 784, 0, 686, 0, 0, 694, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 783, 0,
	0, 553, 0, 0, 781, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 834, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 835,
	836, 250, 577, 736, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 744, 745,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 794, 782, 707, 798, 709, 795, 796, 704,
	705, 708, 797, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 785, 693, 692, 0, 700, 0, 726, 727,
	729, 733, 734, 735, 746, 747, 748, 756, 758, 759,
	757, 760, 761, 762, 765, 766, 767, 768, 763, 764,
	769, 710, 714, 711, 712, 713, 725, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 808, 809, 810,
	811, 812, 813, 739, 743, 742, 740, 741, 737, 738,
	691, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 799, 256, 800, 0, 0, 804, 0, 0,
	0, 806, 805, 0, 807, 773, 772, 0, 0, 801,
	802, 0, 803, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 814, 815, 816,
	817, 818, 819, 820, 821, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 839, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 690, 0, 0, 0,
	264, 695, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 702, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 698, 699,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 95, 0, 0, 840,
	824, 790, 791, 828, 841, 842, 843, 844, 829, 0,
	234, 830, 831, 241, 832, 0, 789, 730, 732, 731,
	749, 750, 751, 752, 753, 754, 755, 728, 837, 845,
	846, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 672, 687, 0, 701, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 684, 685, 929, 0, 0,
	0, 784, 0, 686, 0, 0, 694, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 783, 0, 0, 553,
	0, 0, 781, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	834, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 835, 836, 250,
	577, 736, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 744, 745, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	794, 782, 707, 798, 709, 795, 796, 704, 705, 708,
	797, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	785, 693, 692, 0, 700, 0, 726, 727, 729, 733,
	734, 735, 746, 747, 748, 756, 758, 759, 757, 760,
	761, 762, 765, 766, 767, 768, 763, 764, 769, 710,
	714, 711, 712, 713, 725, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 808, 809, 810, 811, 812,
	813, 739, 743, 742, 740, 741, 737, 738, 691, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	799, 256, 800, 0, 0, 804, 0, 0, 0, 806,
	805, 0, 807, 773, 772, 0, 0, 801, 802, 0,
	803, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 814, 815, 816, 817, 818,
	819, 820, 821, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 839, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 690, 0, 0, 0, 264, 695,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 702, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 698, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 95, 0, 0, 840, 824, 790,
	791, 828, 841, 842, 843, 844, 829, 0, 234, 830,
	831, 241, 832, 0, 789, 730, 732, 731, 749, 750,
	751, 752, 753, 754, 755, 728, 837, 845, 846, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	672, 687, 0, 701, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 684, 685, 0, 0, 0, 0, 784,
	0, 686, 0, 0, 694, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 783, 0, 0, 553, 0, 0,
	781, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 834, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 835, 836, 250, 577, 736,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 744, 745, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 794, 782,
	707, 798, 709, 795, 796, 704, 705, 708, 797, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 785, 693,
	692, 0, 700, 0, 726, 727, 729, 733, 734, 735,
	746, 747, 748, 756, 758, 759, 757, 760, 761, 762,
	765, 766, 767, 768, 763, 764, 769, 710, 714, 711,
	712, 713, 725, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 808, 809, 810, 811, 812, 813, 739,
	743, 742, 740, 741, 737, 738, 691, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 799, 256,
	800, 0, 0, 804, 0, 0, 0, 806, 805, 0,
	807, 773, 772, 0, 0, 801, 802, 0, 803, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 814, 815, 816, 817, 818, 819, 820,
	821, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 839, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 690, 0, 0, 0, 264, 695, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 702, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 698, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 95, 0, 0, 840, 824, 790, 791, 828,
	841, 842, 843, 844, 829, 0, 234, 830, 831, 241,
	832, 0, 789, 730, 732, 731, 749, 750, 751, 752,
	753, 754, 755, 728, 837, 845, 846, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 701, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 684, 685, 0, 0, 0, 0, 784, 0, 686,
	0, 0, 694, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 783, 0, 0, 553, 0, 0, 781, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 834, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 835, 836, 250, 577, 736, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 744, 745, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 794, 782, 707, 798,
	709, 795, 796, 704, 705, 708, 797, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 785, 693, 692, 0,
	700, 0, 726, 727, 729, 733, 734, 735, 746, 747,
	748, 756, 758, 759, 757, 760, 761, 762, 765, 766,
	767, 768, 763, 764, 769, 710, 714, 711, 712, 713,
	725, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 808, 809, 810, 811, 812, 813, 739, 743, 742,
	740, 741, 737, 738, 691, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 799, 256, 800, 0,
	0, 804, 0, 0, 0, 806, 805, 0, 807, 773,
	772, 0, 0, 801, 802, 0, 803, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 814, 815, 816, 817, 818, 819, 820, 821, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 839, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1360, 1359, 1361, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 1000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	999, 553, 0, 0, 0, 0, 0, 996, 997, 356,
	957, 323, 197, 221, 990, 994, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 1498,
	824, 0, 0, 1495, 0, 0, 0, 0, 1493, 0,
	234, 1494, 1492, 241, 1497, 0, 789, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 0, 387, 367, 507, 508, 309, 86, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 95, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 574, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	569, 209, 495, 526, 235, 472, 0, 0, 576, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 577,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 578, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 570, 568, 566, 567, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 597, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 0, 196, 217,
	359, 94, 443, 282, 575, 543, 538, 203, 219, 0,
	256, 0, 0, 0, 0, 0, 0, 2109, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	572, 573, 293, 527, 557, 525, 571, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 0, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	1554, 0, 367, 507, 508, 309, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 1556, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 0, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 0, 0, 0, 1558, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 0, 0, 0, 0, 0, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 1332, 0, 1333, 1334, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 249, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 574, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 569, 209,
	495, 526, 235, 472, 0, 0, 576, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 577, 224, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 578, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 570, 568, 566, 567, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 0, 196, 217, 359, 0,
	443, 282, 575, 543, 538, 203, 219, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 572, 573,
	293, 527, 557, 525, 571, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 0, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 0, 387,
	367, 507, 508, 309, 86, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 95, 0, 1535, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 94, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	95, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 2109, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 2059, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 1737, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 2057, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 957, 323,
	197, 221, 955, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 2059, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 1737, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 1535, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 3347,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 1892, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 2466, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 2451, 0, 0, 0, 0,
	234, 0, 0, 241, 2452, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 1577,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 1576, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 3471, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 1737, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 3347, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 95, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	2110, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 1558, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 1847, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 1838,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 1704, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 1702,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 1700, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 1698, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 1696, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 1692, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 1690,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 1688, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 1663, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 1562,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 95, 0, 0, 0, 824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 1310,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 910, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 600,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 574, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 569, 209, 495, 526, 235, 472, 0,
	0, 576, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 577, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 578, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 570, 568, 566, 567,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 575, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 572, 573, 293, 527, 557, 525, 571,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 574, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 569, 209, 495, 526, 235, 472, 0, 0, 576,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	577, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 578, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 570, 568, 566, 567, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 575, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 3479, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 572, 573, 293, 527, 557, 525, 571, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 574, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 569,
	209, 495, 526, 235, 472, 0, 0, 576, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 577, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 578, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 570, 568, 566, 567, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 575, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 572,
	573, 293, 527, 557, 525, 571, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 574, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 569, 209, 495,
	526, 235, 472, 0, 0, 576, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 577, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 578, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	570, 568, 566, 567, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 575, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 572, 573, 293,
	527, 557, 525, 571, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	574, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 569, 209, 495, 526, 235,
	472, 0, 0, 576, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 577, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 578,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 570, 568,
	566, 567, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 575,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 572, 573, 293, 527, 557,
	525, 571, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 0, 0, 367, 507, 508,
	309,
}

var yyPact = [...]int{
	-1000, -1000, 5140, -1000, -449, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2311, 2369, -1000, -1000, -1000, -1000, 2378, -1000, 776,
	1837, -1000, 2132, 330, -1000, 47173, 517, -1000, 44541, 516,
	513, 140, 4206, 30065, -1000, 223, -1000, 208, 45857, 215,
	-1000, -1000, -1000, -1000, -308, 18877, 2060, 87, 84, 47173,
	-1000, -1000, -1000, -1000, 2324, 1827, -1000, 410, -1000, -1000,
	-1000, -1000, -1000, -1000, 43883, -1000, 889, -1000, -1000, 2137,
	2138, 2383, 667, 2068, -1000, 2250, 1827, -1000, 18877, 2300,
	2241, 18219, 18219, 456, -1000, -1000, 259, -1000, -1000, 25459,
	47173, 32697, 307, -1000, 2132, -1000, -1000, -1000, 124, -1000,
	364, 1737, -1000, 1735, -1000, 929, 1061, 389, 504, 503,
	379, 377, 376, 375, 374, 373, 370, 368, 402, -1000,
	682, 682, -117, -118, 210, 454, 442, 442, 804, 491,
	2089, 2087, -1000, -1000, 682, 682, 682, 367, 682, 682,
	682, 682, 341, 335, 682, 682, 682, 682, 682, 682,
	682, 682, 682, 682, 682, 682, 682, 682, 682, 682,
	682, 440, 2132, 293, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47173, 278,
	47173, -1000, 594, 47173, 47173, -1000, 1134, 1128, 893, -1000,
	893, 111, 893, 893, 893, 893, 209, 655, 83, -1000,
	199, 295, 213, 287, 870, 230, -1000, -1000, 281, 870,
	1476, -1000, 672, 285, 194, -1000, 893, 893, -1000, -1000,
	12272, 165, 12272, 12272, -1000, 2127, -1000, -1000, -1000, -1000,
	-1000, 1157, -1000, -1000, -1000, -1000, 0, 490, -1000, -1000,
	-1000, -1000, 45857, 43225, 291, -1000, -1000, 143, -1000, -1000,
	1556, 1101, 18877, 1228, -1000, 2262, 642, -1000, -1000, -1000,
	-1000, -1000, 557, -1000, 19535, 19535, 19535, 19535, -1000, -1000,
	1429, 42567, 1429, 1429, 19535, 1429, -1000, 19535, 1429, 1429,
	1429, 18877, 1429, 1429, 1429, 1429, -1000, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, -1000, -1000, -1000, -1000, 1429,
	581, 1429, 1429, 1429, 1429, 1429, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1429, 1429, 1429, 1429, 1429, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21509, 1297, 1285, 1283, -1000, 16245, 1429,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47173, -1000, 1429, 233, 45857, 45857, 393, 2250, 1827, -1000,
	2324, 2273, 410, -1000, 2929, 1242, 1443, 1366, 1827, 1706,
	47173, -1000, 1757, -1000, -1000, -1000, -1000, 2007, 1229, 1451,
	-1000, -1000, -1000, -1000, 1709, 18877, -1000, -1000, 2365, -1000,
	22826, 580, 2352, 41909, -1000, 456, 456, 1734, 438, 27,
	-1000, -1000, -1000, -1000, 733, 29407, -1000, -1000, -1000, -1000,
	1647, 47173, -1000, -1000, 3689, 1168, -1000, 1836, -1000, 1644,
	-1000, 1795, 18877, 1861, 511, 1168, 505, 501, 495, -1000,
	-21, -1000, -1000, -1000, -1000, -1000, -1000, 682, 682, 682,
	-1000, 372, 2298, 330, 4644, -1000, -1000, -1000, 41251, 1832,
	1168, -1000, 1831, -1000, 813, 556, 602, 602, 1168, -1000,
	-1000, 46515, 1168, 809, 805, 1168, 1168, 45857, 45857, -1000,
	40593, -1000, 39935, 39277, 1127, 45857, 38619, 37961, 37303, 36645,
	35987, -1000, 1928, -1000, 1863, -1000, -1000, -1000, 46515, 1168,
	1168, 46515, 45857, 46515, 47173, 1168, -1000, -1000, 385, -1000,
	-1000, 1126, 1123, 1103, 682, 682, 1099, 1449, 1427, 1422,
	682, 682, 1096, 1420, 31381, 1416, 284, 1073, 1049, 1043,
	1116, 1411, 220, 1405, 1106, 1089, 1024, 45857, 1830, 47173,
	-1000, 276, 800, 519, 727, 2132, 2059, 1733, 468, 508,
	1168, 446, 446, 45857, -1000, 14264, -1000, -1000, -1000, -1000,
	-1000, 1395, 18877, -1000, 891, 870, 870, -1000, -1000, -1000,
	-1000, -1000, -1000, 893, 47173, 891, -1000, -1000, -1000, 870,
	893, 47173, 893, 893, 893, 893, 870, 870, 870, 893,
	47173, 47173, 47173, 47173, 47173, 47173, 47173, 47173, 47173, 12272,
	672, 893, -321, -1000, 1393, -1000, -1000, 1943, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12272, 12272, -1000, -1000, -1000,
	-1000, -1000, 1732, -1000, 200, 48, 214, -1000, 35329, 417,
	724, -1000, 417, -1000, -1000, -1000, 1729, 34671, -1000, -323,
	-324, -328, -357, -1000, -1000, -1000, -362, -371, -1000, -1000,
	-1000, 18877, 18877, 18877, 18877, -143, -1000, 944, 19535, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 152, 820, 19535, 19535,
	19535, 19535, 19535, 19535, 19535, 19535, 19535, 19535, 19535, 19535,
	19535, 19535, 19535, -1000, -1000, 27433, 6636, 6636, 642, 642,
	642, 642, -1000, -87, 1728, 46515, -1000, -1000, -1000, 571,
	18877, 18877, 642, -1000, 1168, 16245, 20193, 18219, 18219, 18877,
	742, 1101, 46515, 18877, -1000, 1366, -1000, -1000, -1000, 962,
	-1000, 892, 2140, 2140, 2140, 2140, 18877, 18877, 18877, 18877,
	18877, 18877, 18877, 18877, 18877, 18877, 2140, 45857, 45857, 1428,
	18877, 18877, 18877, 18877, 18877, 18877, 14928, 18877, 18877, 19535,
	18877, 18877, 18877, 1366, 18877, 18877, 18877, 18877, 18877, 18877,
	18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877,
	18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877,
	18877, 1366, 18877, 1232, 18877, 18877, 18219, 13600, 18219, 18219,
	18219, 18219, 18219, -1000, -1000, -1000, -1000, -1000, 18877, 18877,
	18877, 18877, 18877, 18877, 18877, 18877, 1366, 18877, 18877, 18877,
	18877, 18877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1442, 1365, 1305, 18877, -1000, 1715, -1000, -86,
	24801, 18877, 1386, 2351, 1877, 45857, -1000, -1000, -1000, 2250,
	-1000, 2250, 1442, 2305, 2012, 18219, -1000, -1000, 2305, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1500, -1000, 47173,
	1706, 2194, 45857, 1996, 1384, 391, -1000, 18877, 18877, 1702,
	-1000, 1326, 47173, -1000, -143, -1000, 34013, -1000, -1000, 11608,
	47173, 363, 47173, -1000, 24143, 33355, 274, -1000, 27, 1674,
	-1000, 60, 45, 15586, 641, -1000, -1000, -1000, 210, 20851,
	1527, 641, 136, -1000, -1000, -1000, 1795, -1000, 1795, 1795,
	1795, 1795, 391, 391, 391, 391, -1000, -1000, -1000, -1000,
	-1000, 1826, 1821, -1000, 1795, 1795, 1795, 1795, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1820, 1820, 1820, 1812, 1812,
	1796, 1796, 439, -1000, 18877, 596, 32697, 2160, 1020, 1129,
	276, 447, 1875, 1168, 1168, 1168, 447, -1000, 1206, 1174,
	1164, -1000, -441, 1699, -1000, -1000, 2296, -1000, -1000, 982,
	832, 831, 1064, 45857, 243, 361, -1000, 426, -1000, 32697,
	1168, 803, 602, 1168, -1000, 1168, -1000, -1000, -1000, -1000,
	-1000, 1168, -1000, -1000, 1696, -1000, 1697, 876, 830, 863,
	826, 1696, -1000, -1000, -93, 1696, -1000, 1696, -1000, 1696,
	-1000, 1696, -1000, 1696, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 710, 247, -217, 45857, 243, 463, -1000,
	460, 27433, -1000, -1000, -1000, 27433, 27433, -1000, -1000, -1000,
	-1000, 1374, 1367, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -424, 47173, -1000, 273, 689, 349, 387, 328,
	47173, 352, 2224, 2220, 2211, 2204, 2202, 326, 333, 47173,
	47173, 446, 1945, 47173, 2177, 47173, -1000, -1000, -1000, -1000,
	-1000, 1101, 47173, -1000, -1000, 893, 893, -1000, -1000, 47173,
	893, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 893,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47173, -1000, -1000, -1000, -1000,
	0, 203, -1000, -1000, 45857, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -26, -1000, 180, 52, 388, -1000,
	-1000, -1000, -1000, -1000, 2246, -1000, 1101, 786, 768, -1000,
	1429, -1000, -1000, 1046, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 152, 19535, 19535, 19535, 1276, 496, 1356, 829, 912,
	1113, 1113, 1037, 1037, 647, 647, 647, 647, 647, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1345, -1000, 1429,
	46515, 1629, 13600, 2446, 1672, 1366, 2786, -1000, 1609, -1000,
	1609, 1911, 741, -1000, 18877, 1366, 2781, -1000, -1000, 1366,
	1366, 1366, 18877, -1000, -1000, 18877, 18877, 18877, 18877, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 18877,
	1692, 1691, 2349, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2233, 1129, 1129, 1129, 1129, 1129,
	18877, 1471, -1000, -1000, -1000, 1400, 2777, 1176, 2767, 1129,
	1129, -1000, 1129, 2745, 2741, 1366, 1556, 1366, 1683, -1000,
	2710, 1129, 2681, 2662, 2658, 2001, 2654, 2650, 2636, 1129,
	1129, 1129, 1993, 2612, 2502, 2327, 2323, 2313, 2297, 2245,
	2237, 2221, 1129, -145, 1129, 1366, -1000, -1000, -1000, -1000,
	-1000, 2209, 1989, 1366, 1680, 1429, 570, -1000, -1000, 1609,
	1366, 1366, 1609, 1609, 2172, 2164, 2154, 2146, 2141, 2122,
	1129, 1129, -1000, 1129, 2097, 2075, 1975, 1896, 1366, -1000,
	1305, 47173, -1000, -299, -1000, 32, 632, 1429, -1000, 31381,
	1366, -1000, 6049, -1000, 1050, -1000, -1000, -1000, -1000, -1000,
	28749, 1664, 2305, -1000, -1000, 1429, 1585, -1000, -1000, 391,
	103, 28091, 639, 639, 154, 1101, 1101, 18877, -1000, -1000,
	-1000, -1000, -1000, -1000, 564, 2331, 409, 1429, -1000, 1679,
	2877, -1000, -1000, -1000, 2193, 22168, -1000, -1000, 1429, 1429,
	47173, 1642, 1638, -1000, 563, -1000, 1175, 1674, 27, 31,
	-1000, -1000, -1000, -1000, 1101, -1000, 1154, 366, 4393, -1000,
	433, -1000, -1000, -1000, -1000, 2071, 125, -1000, -1000, -1000,
	263, 391, -1000, -1000, -1000, -1000, -1000, -1000, 1338, 1338,
	-1000, -1000, -1000, -1000, -1000, 1019, -1000, -1000, -1000, -1000,
	1015, -1000, -1000, 1014, -1000, -1000, 2070, 1895, 596, -1000,
	-1000, 682, 1335, -1000, -1000, 2081, 682, 682, 45857, -1000,
	-1000, 1505, 2160, 273, 47173, 753, 1944, -1000, 1875, 1875,
	1875, 47173, -1000, -1000, -1000, -1000, -1000, -1000, -428, 80,
	419, -1000, -1000, -1000, 4191, 45857, 1574, -1000, 241, -1000,
	1502, -1000, 45857, -1000, 1571, 1805, 1168, 1168, -1000, -1000,
	-1000, 45857, 1429, -1000, -1000, -1000, -1000, 497, 2130, 321,
	-1000, -1000, -167, -1000, -1000, 243, 241, 46515, 1168, 641,
	-1000, -1000, -1000, -1000, -1000, -430, 1526, 493, 253, 347,
	47173, 47173, 47173, 47173, 47173, 535, -1000, -1000, 72, -1000,
	-1000, 221, -1000, -1000, -1000, -1000, 221, -1000, -1000, -1000,
	-1000, 292, 455, -1000, 47173, 47173, 731, -1000, -1000, -1000,
	870, -1000, -1000, 870, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2102, 47173, 38, -390,
	-1000, -387, 18877, -1000, -1000, -1000, -1000, 1194, 486, 1356,
	19535, 19535, 19535, -1000, -1000, -1000, 920, 920, 27433, -1000,
	18877, 18219, -1000, -1000, 18877, 18877, 737, -1000, 18877, 1038,
	-1000, 18877, -1000, -1000, -1000, 1305, 1129, 1129, 1129, 1129,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1615, 18877, 18877, 18877, 1366, 337, -1000, -1000, -1000, -1000,
	-1000, 2346, -1000, 18877, -1000, 27433, 18877, 18877, 18877, -1000,
	-1000, -1000, 18877, 18877, -1000, -1000, 18877, 18877, -1000, 18877,
	18877, 18877, -1000, 18877, 18877, 18877, 18877, -1000, -1000, -1000,
	-1000, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877, 18877,
	18877, -1000, -1000, 32697, 118, -145, 1232, 118, 1232, -1000,
	18219, 12936, -1000, -1000, -1000, -1000, -1000, 18877, 18877, 18877,
	18877, 18877, 18877, -1000, -1000, -1000, 18877, 18877, -1000, 18877,
	-1000, 18877, -1000, -1000, -1000, -1000, -1000, 632, -1000, 602,
	602, 602, 45857, -1000, -1000, -1000, -1000, 1671, -1000, 2253,
	-1000, 2030, 2029, 2337, 2331, -1000, 24143, 2305, -1000, -1000,
	45857, -283, -1000, 2053, 2061, 639, 639, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10944, 2250, 18877, 1940, 46515, 153,
	-1000, 23485, 45857, 46515, 24143, 24143, 24143, 24143, 24143, -1000,
	1979, 1972, -1000, 2004, 1998, 2016, 47173, -1000, 1442, 1520,
	-1000, 18877, 26117, 1550, 24143, -1000, -1000, 24143, 47173, 10280,
	-1000, -1000, 36, 17, -1000, -1000, -1000, -1000, 210, -1000,
	-1000, 1255, 2192, 2073, -1000, -1000, -1000, -1000, -1000, 1514,
	-1000, 1498, 1670, 1496, 1488, 247, -1000, 1859, 2099, 682,
	682, -1000, 1012, -1000, 1168, 1333, 1329, -1000, -1000, -1000,
	466, -1000, 2174, 47173, 1937, 1935, 1934, -1000, -439, 1007,
	1802, 1846, 18877, 1801, 2292, 1607, 45857, -1000, -1000, 46515,
	-1000, 254, -1000, 596, 45857, -1000, -1000, -1000, 361, 47173,
	-1000, 7077, -1000, -1000, -1000, 241, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47173, 258, -1000, 1798, 1059, -1000, -1000,
	1867, -1000, -1000, -1000, -1000, 239, 344, 1327, 219, 1312,
	219, -1000, 47173, 709, 1895, 47173, -1000, -1000, -1000, 893,
	893, -1000, -1000, 2093, -1000, 1168, 1129, 19535, 19535, -1000,
	642, 555, -124, 1795, 1795, -1000, 1795, 1796, -1000, 1795,
	184, 1795, 179, 1795, -1000, -1000, 1366, 1366, 1305, -1000,
	1886, 1480, -1000, 1101, 18877, 2064, -1000, -1000, -1000, -1000,
	-1000, -23, 2056, 2051, 1129, -1000, 1794, 1793, 18877, 1129,
	1366, 1752, 1129, 1129, 1129, 1129, -1000, 1101, 1305, 2041,
	1305, 1129, 1129, 2036, 350, 1129, 1485, 1485, 1485, 1485,
	1485, 1305, 1305, 1305, 1305, 45857, -1000, -145, -1000, -1000,
	-185, -186, -1000, 1366, -145, 1669, 1366, -1000, 1745, 1650,
	2032, 1622, 1129, 2015, 1129, 1129, 1129, 1560, -1000, 2210,
	2210, 2210, 1463, 1050, 47173, -1000, -1000, -1000, -1000, 2331,
	2329, 1667, -1000, -1000, 103, 464, -1000, 2050, 2061, -1000,
	2290, 2052, 2287, -1000, -1000, -1000, -1000, -1000, 1101, -1000,
	2135, 1663, -1000, 684, 1559, -1000, -1000, 17561, 1468, 2022,
	546, 1463, 1653, 2877, 1873, 1929, 2864, -1000, -1000, -1000,
	-1000, 1962, -1000, 1906, -1000, -1000, 1757, -1000, 1955, 363,
	24143, 1649, 1649, -1000, 543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 909, 7900, 2380, -1000, 1307, -1000, 1143, 211,
	1003, -1000, -1000, 682, 682, -1000, 801, 781, -1000, 47173,
	1792, -1000, 391, 1300, 391, 1000, -1000, -1000, 997, -1000,
	-1000, -1000, -1000, 1693, 1910, -1000, -1000, -1000, -1000, 47173,
	-1000, -1000, 47173, 47173, 47173, 1771, 2284, -1000, 18877, 1768,
	683, 1823, 45857, 45857, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 465, 682, -408, 331, 302,
	682, 682, 682, -440, -1000, -1000, 1458, 1455, -1000, -112,
	-1000, 18877, -1000, -1000, -1000, 1075, 1075, 1297, 1285, 1283,
	-1000, 1757, -1000, -1000, -1000, 1492, -1000, -1000, -98, 45857,
	45857, 45857, 45857, -1000, -1000, 958, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 642, 1366,
	348, -101, 1366, -1000, -1000, 391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18877, -1000, 18877, -1000,
	1101, 18877, 2250, 1262, 18877, 18877, -1000, 995, 973, 1129,
	-1000, -1000, -1000, 18877, -1000, -1000, -1000, -1000, -1000, 18877,
	-1000, -1000, -1000, 18877, 216, 920, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1366, 362, -1000, -1000,
	-1000, -1000, 2334, -1000, 1366, 18877, -1000, -1000, 18877, -1000,
	18877, 18877, -1000, 18877, -1000, 18877, -1000, -1000, -1000, -1000,
	18877, 1429, 2074, 1429, 1429, 26117, -1000, -1000, 2329, 2310,
	2282, 2002, 2046, 2046, 2050, -1000, 2271, 2269, -1000, 1243,
	2266, 1239, 779, -1000, 46515, 18877, 153, -1000, 401, 45857,
	153, 45857, -1000, 2307, -1000, -1000, 18877, 1766, -1000, 18877,
	-1000, -1000, -1000, -1000, 6636, 2331, 1649, -1000, -1000, 658,
	-1000, 18877, -1000, -1000, -1000, 3653, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1233, 1231, -1000, -1000, 1760, 18877,
	-1000, -1000, -1000, 1481, 1469, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1757, -1000, -1000, -1000, -1000, 361, -435,
	1815, 45857, 965, -1000, 1447, 1607, 351, 153, 1222, 682,
	682, 682, 954, 945, 31381, 1426, -1000, 45857, 420, -1000,
	361, -1000, -120, -121, 1129, -1000, -1000, 2181, -1000, -1000,
	12936, -1000, -1000, 1755, 1874, -1000, -1000, -1000, -1000, 1994,
	-91, -108, -1000, -1000, 1129, 1129, 1633, 1366, -1000, 1129,
	1129, 1448, 1401, -1000, 1129, 1305, 1536, -1000, 216, 1366,
	1921, -1000, -1000, 6636, -1000, -1000, 2307, 2264, 118, -1000,
	-1000, 251, 118, 1101, 1529, 1129, 1504, 1490, 1129, 1129,
	26775, -1000, 2259, 2254, 32039, 32039, 632, 2310, -154, 18877,
	18877, 2040, 949, -1000, -1000, -1000, -1000, 1217, 1214, -1000,
	1211, -1000, 2376, -1000, 1101, -1000, 153, -1000, 536, 1559,
	-1000, 2250, 1101, 45857, 1101, 104, 2307, -1000, 1129, -1000,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
	-1000, -1000, 45857, 1704, -1000, -1000, 2173, 1391, 78, -1000,
	1392, 1607, -1000, -1000, 151, -1000, 18877, -1000, 31381, 1203,
	1199, -1000, -1000, -1000, -1000, -440, -1000, -1000, -1000, -1000,
	-1000, -1000, 410, 1592, -1000, 681, 45857, 47173, -1000, 1900,
	-1000, -1000, -1000, 18877, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18877, -1000, 1366, 1918, -1000, -278, -1000, -413,
	18877, -145, -1000, -1000, -145, -1000, 18877, -1000, -1000, 18877,
	-1000, 18877, -1000, -1000, 1383, -1000, -1000, -1000, -1000, -1000,
	1383, 1383, -1000, -154, -1000, 1563, -1000, 45857, 1101, 1556,
	-1000, 890, -1000, -1000, -1000, -1000, -1000, 46515, 1559, 45857,
	-1000, 1371, 1366, 1429, 2250, -1000, 1349, -1000, 410, -1000,
	1739, 1846, -1000, -1000, -1000, 16903, -1000, -1000, -1000, -1000,
	-1000, 246, -97, 12936, 9616, 1344, -1000, -96, 1129, 1305,
	-1000, -373, -1000, -1000, -1000, -1000, 280, -1000, -1000, 1556,
	-1000, -1000, 1465, 1288, 1149, 30723, -1000, -1000, -1000, -1000,
	-154, -1000, -1000, 2165, -1000, -1000, 1532, -1000, -1000, 26117,
	45199, -1000, -82, 343, -97, 18877, 1694, 1366, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18, -1000, -1000, -1000,
	-1000, -1000, 1867, -106, -1000, -1000, -1000, 212, -399, -192,
	-194, -1000, -1000, 19535, -1000, 18877, -1000, 18877, -1000, 18877,
	-1000, -1000, -1000, 45857, 1429, -1000, 1281, -1000, 5183, -197,
	1917, -1000, -36, -1000, -1000, -1000, 843, 1179, -1000, -1000,
	-1000, -1000, -1000, -1000, 1494, 45857, -1000, 432, -1000, -1000,
	-98, -110, 760, -1000, -1000, -1000, -1000, -1000, 1055, 959,
	1129, -1000, 45857, -1000, 45199, -191, 641, 6636, -1000, 1901,
	1894, 2344, -1000, -1000, -1000, -1000, -1000, -1000, -446, 1238,
	255, -1000, -1000, 212, -1000, 18877, -1000, 18877, -1000, 1366,
	-1000, -1000, 2143, 104, -1000, 2368, -1000, 2345, 677, 677,
	-1000, 942, -446, -1000, -1000, 1129, 1129, -1000, -205, -1000,
	-1000, -1000, -1000, -1000, 422, 985, -1000, -1000, -1000, -1000,
	-1000, 6636, -1000, -1000, -1000, 260, 260, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2971, 2970, 27, 5, 34, 33, 2969, 40, 121,
	208, 51, 214, 109, 2966, 189, 2965, 2964, 2963, 2962,
	2960, 2959, 2437, 2416, 2397, 2943, 2939, 2936, 2930, 2929,
	2926, 2924, 2921, 2917, 2915, 187, 182, 207, 2914, 2912,
	2911, 137, 203, 93, 96, 205, 2907, 2905, 87, 2903,
	2901, 2898, 202, 201, 199, 821, 2897, 198, 120, 63,
	2896, 2891, 2890, 2889, 2888, 2885, 2881, 2876, 2875, 2873,
	2872, 2871, 2870, 2866, 2862, 2856, 2853, 2850, 2848, 287,
	2847, 2842, 19, 2841, 92, 2839, 2834, 2830, 2828, 2827,
	7, 2826, 2825, 12, 42, 2824, 2818, 53, 2817, 2815,
	2813, 2810, 2809, 15, 2806, 24, 2802, 35, 2794, 2788,
	142, 2787, 2786, 2784, 39, 2782, 2780, 2779, 2776, 2774,
	2773, 2772, 157, 2770, 2768, 2767, 194, 211, 2766, 2765,
	183, 125, 119, 2764, 2763, 113, 206, 2761, 135, 2760,
	2757, 2756, 164, 2755, 2138, 2752, 2748, 70, 85, 2744,
	52, 2735, 2732, 3, 108, 73, 1, 84, 88, 2731,
	2730, 69, 83, 2728, 131, 2726, 2725, 110, 78, 2722,
	117, 111, 2719, 2708, 18, 11, 2703, 36, 38, 23,
	76, 2701, 2699, 134, 2697, 2696, 2678, 105, 2669, 2664,
	4820, 2663, 104, 148, 116, 86, 2661, 50, 75, 2660,
	2659, 2657, 2656, 2653, 57, 2650, 2646, 2645, 154, 152,
	184, 2642, 46, 77, 56, 146, 2639, 60, 98, 212,
	185, 2631, 2629, 153, 151, 2628, 2625, 72, 45, 44,
	2623, 138, 144, 132, 28, 127, 149, 2622, 2621, 68,
	81, 2620, 2619, 2614, 2612, 186, 2611, 2610, 80, 2609,
	64, 2604, 188, 2599, 17, 67, 2595, 49, 176, 2594,
	90, 2593, 2589, 74, 141, 79, 37, 2581, 175, 180,
	143, 178, 2580, 2576, 62, 2575, 2574, 2573, 200, 340,
	2570, 2568, 100, 191, 158, 162, 102, 2567, 344, 2566,
	2565, 107, 2, 5142, 2563, 41, 177, 2555, 2549, 6415,
	155, 47, 20, 2547, 129, 2546, 2543, 2542, 2541, 216,
	195, 130, 179, 65, 2537, 2533, 2531, 9, 2524, 2520,
	2519, 2518, 2517, 2515, 99, 32, 31, 30, 210, 89,
	6, 112, 172, 171, 91, 2514, 2513, 2509, 140, 101,
	2508, 174, 173, 168, 166, 2503, 196, 159, 136, 2502,
	95, 29, 2501, 2498, 2493, 2483, 114, 2480, 2479, 2478,
	2476, 169, 160, 139, 106, 2475, 103, 133, 167, 163,
	59, 2474, 48, 2471, 2470, 25, 204, 26, 2467, 13,
	118, 165, 2460, 4313, 193, 2458, 14, 356, 161, 2457,
	2456, 16, 8, 10, 2451, 2447, 2446, 2444, 150, 2443,
	2442, 2418, 2417, 22, 55, 21, 4, 115, 94, 2412,
	2408, 156, 2404, 2403, 3090, 0, 145, 2398, 213,
}

//line sql.y:8028
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 412, 413, 413, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 383, 384, 384, 258, 258, 33, 74, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 108, 108, 23,
	24, 24, 24, 24, 416, 416, 185, 185, 183, 183,
	184, 184, 263, 263, 25, 267, 267, 269, 269, 269,
	269, 259, 259, 259, 26, 26, 268, 268, 270, 270,
	270, 273, 273, 273, 273, 312, 312, 312, 27, 27,
	27, 27, 27, 128, 128, 386, 386, 385, 379, 379,
	378, 378, 377, 382, 382, 381, 381, 380, 39, 40,
	49, 49, 49, 49, 50, 51, 387, 387, 352, 56,
	56, 55, 55, 55, 55, 55, 55, 57, 57, 53,
	53, 52, 52, 54, 54, 354, 354, 340, 340, 353,
	353, 353, 353, 353, 353, 353, 339, 339, 139, 139,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 402, 402, 402,
	401, 401, 238, 238, 238, 238, 238, 238, 238, 238,
	149, 149, 161, 161, 161, 161, 161, 147, 147, 148,
	146, 146, 146, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 160, 160, 156, 156, 156, 157, 157, 157,
	158, 158, 403, 403, 403, 403, 317, 317, 317, 317,
	320, 320, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 319, 319, 319, 319, 319, 319, 319, 321, 321,
	321, 321, 321, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 323,
	323, 323, 323, 323, 323, 323, 323, 338, 338, 324,
	324, 332, 332, 333, 333, 334, 334, 334, 335, 335,
	335, 336, 336, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 331, 331, 330, 330, 330, 341, 366, 366,
	365, 365, 363, 363, 363, 363, 363, 363, 363, 363,
	350, 350, 360, 360, 360, 360, 360, 349, 349, 345,
	345, 345, 346, 346, 347, 347, 344, 344, 348, 348,
	362, 362, 361, 361, 342, 342, 343, 343, 368, 404,
	404, 404, 404, 404, 405, 405, 369, 394, 396, 396,
	396, 395, 395, 392, 393, 391, 391, 391, 391, 391,
	84, 84, 84, 286, 286, 287, 287, 358, 358, 357,
	357, 357, 359, 359, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 281, 281, 281, 390, 390,
	390, 390, 390, 390, 389, 389, 389, 355, 355, 355,
	388, 388, 58, 58, 218, 218, 407, 407, 408, 408,
	408, 46, 46, 46, 46, 46, 46, 45, 45, 45,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 47, 47, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 110, 110, 111, 111, 111, 111, 113, 113, 113,
	371, 371, 59, 59, 3, 3, 173, 175, 176, 176,
	174, 174, 174, 174, 174, 174, 61, 61, 60, 60,
	178, 177, 179, 179, 179, 1, 1, 2, 2, 4,
	4, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 337, 337, 337, 370, 370, 372, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 116,
	115, 115, 114, 117, 117, 117, 117, 117, 117, 117,
	117, 374, 374, 374, 62, 62, 375, 325, 326, 327,
	5, 6, 351, 373, 124, 124, 29, 38, 38, 30,
	30, 30, 30, 31, 31, 63, 64, 68, 68, 68,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 280, 280, 289, 289, 279, 279,
	304, 304, 304, 282, 282, 282, 283, 283, 400, 400,
	400, 276, 276, 66, 66, 66, 305, 305, 305, 305,
	69, 69, 409, 409, 410, 410, 411, 411, 411, 70,
	71, 71, 307, 307, 308, 308, 72, 73, 85, 85,
	85, 85, 85, 85, 85, 86, 86, 86, 86, 109,
	109, 109, 15, 15, 15, 15, 81, 81, 81, 14,
	14, 17, 67, 67, 75, 397, 397, 398, 399, 399,
	399, 399, 76, 78, 32, 32, 32, 32, 32, 32,
	134, 134, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 129, 129, 129, 123, 123, 417,
	79, 80, 80, 127, 127, 127, 120, 120, 120, 126,
	126, 126, 16, 16, 18, 262, 262, 19, 19, 131,
	131, 133, 133, 133, 133, 133, 135, 135, 135, 135,
	135, 135, 135, 130, 130, 132, 132, 132, 132, 297,
	297, 297, 296, 296, 167, 167, 169, 168, 168, 170,
	170, 171, 171, 171, 171, 216, 216, 193, 193, 255,
	255, 256, 256, 254, 254, 261, 261, 257, 257, 257,
	257, 264, 264, 172, 172, 172, 172, 180, 180, 181,
	181, 182, 182, 306, 306, 302, 302, 302, 301, 301,
	186, 186, 186, 188, 187, 187, 187, 187, 189, 189,
	191, 191, 190, 190, 192, 197, 197, 196, 196, 194,
	194, 194, 194, 195, 195, 195, 195, 198, 198, 144,
	144, 144, 144, 144, 144, 144, 159, 159, 159, 159,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 245, 245, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 153, 221, 221, 220, 220, 87, 87, 87, 88,
	88, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 145, 145, 92, 92, 91, 91, 211, 211, 294,
	294, 93, 94, 94, 97, 97, 96, 95, 95, 101,
	101, 98, 98, 100, 100, 99, 102, 102, 103, 104,
	104, 277, 277, 199, 199, 207, 207, 207, 207, 200,
	200, 200, 200, 200, 200, 200, 208, 208, 208, 215,
	209, 209, 205, 205, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	164, 164, 164, 164, 226, 226, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 152, 152, 165, 165, 165, 165, 166, 166, 166,
	166, 166, 166, 166, 314, 314, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 418, 418, 328,
	328, 328, 328, 206, 206, 206, 206, 206, 125, 125,
	125, 125, 125, 311, 311, 311, 315, 315, 315, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 316, 316, 224, 224, 121, 121,
	222, 222, 223, 225, 225, 217, 217, 217, 217, 219,
	219, 202, 202, 202, 227, 227, 228, 228, 105, 106,
	106, 107, 107, 229, 229, 231, 230, 230, 232, 233,
	233, 233, 234, 234, 235, 235, 235, 48, 48, 48,
	48, 48, 43, 43, 43, 43, 44, 44, 44, 44,
	136, 136, 136, 136, 138, 138, 137, 137, 82, 82,
	83, 83, 83, 142, 142, 143, 143, 143, 140, 140,
	141, 141, 252, 252, 236, 236, 236, 243, 243, 243,
	239, 239, 241, 241, 241, 242, 242, 242, 240, 249,
	249, 251, 251, 250, 250, 246, 246, 247, 247, 248,
	248, 248, 244, 244, 201, 201, 201, 201, 201, 253,
	253, 253, 253, 265, 265, 212, 212, 214, 214, 213,
	213, 163, 266, 266, 274, 271, 271, 272, 272, 298,
	298, 298, 275, 275, 288, 288, 284, 284, 285, 285,
	278, 278, 290, 290, 290, 77, 210, 210, 367, 367,
	364, 293, 293, 295, 295, 299, 299, 303, 303, 300,
	300, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 414, 415, 309, 310, 310, 310,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 2, 0, 2,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 8, 5,
	5, 4, 4, 4, 6, 5, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	2, 4, 4, 3, 0, 1, 4, 3, 4, 4,
	3, 3, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 2, 3, 3,
	3, 2, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 5,
	2, 3, 3, 2, 2, 3, 4, 4, 4, 3,
	4, 4, 5, 3, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 3, 2, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 4,
	4, 4, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 1, 6, 3,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 8, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 6, 5, 9, 6, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -79, -417, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -65, -66, -69, -70, -71, -72, -73, -14, -17,
	-67, -32, -33, -74, -75, -76, -77, -78, -16, -18,
	-19, -9, -8, -13, 10, 11, -108, -34, 33, -39,
	-49, 225, -50, -40, 226, -51, 228, 227, 265, 229,
	249, 623, 258, 75, 313, 314, 316, 317, 318, 319,
	-109, 619, 263, 264, 231, 37, 46, 34, 35, 38,
	235, 271, 272, 234, -10, -35, 9, -414, 12, 451,
	260, 259, 29, -12, 513, 87, -80, -413, 668, -252,
	-236, 23, 34, 30, -235, -231, -127, -236, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -352, -354, 87,
	159, 87, -79, -56, -55, -53, -52, -54, -57, 32,
	-46, -47, -376, -45, -42, 230, 227, 275, 123, 124,
	265, 266, 267, 229, 249, 264, 268, 263, 284, -41,
	82, 34, 513, 516, -359, 226, 232, 233, 228, 452,
	126, 125, 76, -356, 372, 546, 638, -57, 640, 101,
	104, 639, 45, 239, 641, 642, 643, 553, 644, 248,
	645, 646, 647, 648, 654, 594, 655, 656, 657, 127,
	8, -79, -303, -299, 91, -292, 510, 251, 544, 545,
	300, 82, 42, 519, 369, 372, 546, 481, 638, 313,
	329, 323, 486, 487, 488, 352, 344, 511, 547, 520,
	303, 252, 288, 632, 342, 135, 640, 307, 548, 266,
	377, 378, 549, 379, 101, 316, 418, 653, 306, 550,
	651, 104, 639, 321, 80, 480, 52, 635, 45, 261,
	340, 234, 336, 641, 289, 551, 522, 282, 126, 123,
	660, 37, 332, 51, 31, 650, 125, 50, 642, 150,
	552, 643, 553, 381, 359, 626, 49, 382, 267, 554,
	85, 272, 515, 310, 634, 383, 500, 333, 384, 299,
	649, 231, 555, 614, 606, 607, 385, 386, 627, 364,
	360, 365, 502, 556, 410, 485, 387, 610, 611, 667,
	53, 557, 558, 628, 124, 559, 79, 644, 81, 327,
	328, 560, 297, 250, 505, 506, 412, 356, 463, 470,
	471, 111, 112, 466, 113, 472, 114, 473, 474, 475,
	464, 115, 108, 465, 476, 477, 357, 358, 116, 478,
	110, 109, 467, 469, 117, 479, 248, 36, 388, 512,
	301, 59, 305, 276, 413, 47, 362, 664, 46, 621,
	507, 561, 625, 355, 351, 460, 54, 562, 563, 564,
	565, 482, 645, 354, 326, 350, 659, 4, 294, 483,
	646, 63, 233, 367, 366, 368, 283, 409, 347, 566,
	567, 568, 255, 83, 569, 337, 22, 570, 571, 389,
	290, 572, 57, 573, 574, 416, 264, 575, 55, 647,
	40, 576, 269, 661, 648, 577, 578, 579, 620, 580,
	271, 581, 391, 582, 608, 609, 390, 361, 363, 508,
	278, 392, 236, 514, 583, 311, 331, 268, 652, 584,
	256, 496, 497, 498, 499, 633, 504, 503, 270, 275,
	263, 417, 257, 585, 586, 587, 588, 589, 304, 605,
	590, 591, 317, 654, 461, 44, 592, 593, 594, 595,
	596, 298, 293, 411, 420, 62, 84, 374, 597, 598,
	631, 325, 322, 291, 599, 314, 56, 655, 656, 657,
	285, 658, 489, 490, 491, 492, 10, 665, 666, 484,
	394, 127, 295, 296, 48, 348, 277, 600, 308, 601,
	338, 339, 353, 324, 349, 617, 315, 615, 279, 395,
	462, 265, 602, 419, 292, 370, 375, 309, 518, 501,
	284, 396, 630, 517, 493, 494, 346, 343, 286, 495,
	603, 619, 397, 240, 280, 281, 604, 616, 398, 399,
	302, 400, 401, 402, 403, 404, 407, 408, 406, 312,
	405, 618, 612, 613, 287, 516, 320, 341, 376, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 459, 238, -79,
	238, -190, -299, 238, 238, 96, 514, 639, -271, 408,
	378, -289, 380, 393, 388, 398, 386, -280, 389, 391,
	278, -400, 410, 238, 395, 225, 381, 390, 399, 400,
	302, 406, 401, 312, 405, 287, 402, 403, 404, 407,
	-383, 177, 643, 658, 135, 345, 385, 383, 411, 621,
	91, -305, 91, 92, 93, -292, 315, -307, 320, -293,
	-383, -292, 318, -79, -79, -309, -309, -129, 621, 624,
	-209, -144, 143, -159, -162, -150, -154, -203, -204, -205,
	-206, -160, -219, -258, 166, 167, 174, 144, -215, -163,
	27, 509, 453, 452, 177, 32, -153, 220, 69, 70,
	455, 146, 58, 12, 428, 429, -161, 423, 430, 425,
	480, 482, 483, 484, 481, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 485, 457, 458, 118, 459,
	108, 110, 109, 460, 461, 462, 342, 507, 508, 502,
	505, 506, 504, 503, 357, 358, 463, 464, 465, 111,
	112, 113, 114, 115, 116, 117, 466, 469, 467, 468,
	470, 471, 472, 477, 478, 473, 474, 475, 476, 479,
	-89, -101, 535, 534, -102, -151, -152, -165, -166, -293,
	-299, 243, 422, 237, 172, 451, -155, -148, -217, 107,
	92, 93, -8, -213, 421, 426, 427, 431, 424, 521,
	523, 538, 539, 541, 526, 531, 530, 533, 496, 497,
	498, 499, 500, 501, 606, 607, 608, 609, 610, 611,
	612, 613, -383, -292, 91, -157, -156, -199, 94, 99,
	102, 103, 105, -406, 261, 338, 339, 119, -414, 636,
	90, 95, 96, 97, 98, 120, 121, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 45,
	394, 394, -190, -79, -79, -79, -79, -229, -127, -231,
	-10, -8, -414, 9, -79, -8, -9, -13, -35, -37,
	540, -36, -299, 100, -236, -252, 13, 162, 43, 51,
	-234, -235, -12, -8, -144, 20, 24, 25, -132, 168,
	-144, -299, -132, -278, 242, -79, -79, -267, -312, 315,
	-269, 411, 621, 410, -259, -272, 91, -258, -271, 409,
	-353, 159, -339, -343, -293, 253, -369, 249, -190, -362,
	-361, -293, -414, -128, -288, 239, 247, 246, 136, -387,
	139, 295, 422, 237, -52, -53, -54, -271, 176, 642,
	-110, 270, 274, 88, 88, -343, -342, -341, -388, 274,
	253, -368, -360, 245, 254, -349, 246, 247, -344, 239,
	137, -388, -344, 244, 254, 249, 253, 274, 274, 127,
	274, 127, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 269, -350, 151, -350, 517, 517, -356, -388, 249,
	239, -388, -388, 245, -290, -344, 241, 26, 241, 36,
	36, -350, -350, -350, -271, 176, -350, -350, -350, -350,
	282, 282, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, 238,
	-387, -136, 405, 302, 82, -55, 284, -38, -190, -288,
	239, 240, -387, 271, -190, 221, -190, -190, 96, 96,
	-282, 159, 16, -282, -279, 394, 392, 379, 384, -282,
	-282, -282, -282, 285, 377, -345, 239, 36, 250, 394,
	285, 377, 285, 286, 285, 286, 387, 397, 285, -304,
	15, 162, 422, 382, 386, 278, 238, 279, 240, 396,
	286, -304, 90, -283, 159, 285, 394, 281, -282, -282,
	-310, -414, -295, -293, -291, 230, 24, 142, 26, 28,
	145, 177, 130, 20, 146, 38, 232, 345, 249, 176,
	245, 452, 225, 73, 521, 423, 425, 421, 428, 454,
	455, 422, 380, 32, 14, 523, 29, 259, 25, 39,
	170, 227, 149, 524, 262, 27, 260, 118, 121, 526,
	23, 76, 254, 15, 247, 41, 17, 527, 528, 18,
	243, 242, 162, 239, 71, 12, 220, 30, 158, 67,
	529, 137, 530, 531, 532, 533, 131, 69, 159, 21,
	662, 426, 427, 34, 622, 509, 273, 172, 74, 60,
	624, 143, 424, 534, 535, 119, 536, 122, 77, 629,
	139, 19, 72, 43, 537, 274, 538, 244, 663, 539,
	414, 540, 160, 228, 451, 70, 161, 636, 541, 637,
	237, 393, 9, 456, 33, 258, 246, 129, 68, 542,
	238, 148, 457, 458, 241, 132, 120, 8, 136, 35,
	13, 75, 78, 429, 430, 431, 58, 128, 513, 147,
	16, 543, 415, 141, 623, -383, 625, -310, -310, 33,
	92, -409, -410, -411, 513, 414, 241, -293, -190, -85,
	614, 229, -86, 620, 24, 236, -134, 394, -122, 177,
	643, 626, 627, 628, 625, 391, 633, 631, 629, 285,
	630, 88, 139, 141, 142, 4, -144, 158, -200, 151,
	152, 153, 154, 155, 156, 157, 162, 143, 145, 159,
	-245, 140, 163, 164, 165, 166, 167, 168, 169, 171,
	170, 172, 173, 160, 161, 176, 223, 224, -154, -154,
	-154, -154, -215, -221, -220, -414, -217, -383, -292, -299,
	-414, -414, -154, -277, -414, -414, -150, -414, -414, -414,
	-224, -144, -414, -414, -418, -414, -418, -418, -328, -414,
	-328, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, 221, -414, -414,
	-414, -414, -414, -328, -328, -328, -328, -328, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, 103, 99, 102, 94, -219, 105, 90, 90,
	90, 90, -8, -9, -209, -414, -309, -397, -398, -193,
	-190, -414, 302, -293, -293, 271, -234, -12, -8, -229,
	-235, -231, -8, -79, -120, -133, 64, 65, -135, 25,
	39, 68, 66, 24, -415, 89, -415, -252, -415, 88,
	-37, -255, 87, 62, 44, 90, 90, 88, 22, -230,
	-232, -144, 15, -297, 4, -296, 26, -293, 90, 221,
	15, -191, 30, -190, -278, -278, 88, 91, 315, -268,
	-270, 412, 414, 151, -298, -293, 90, 32, 89, 88,
	-190, -317, -320, -322, -321, -323, -318, -319, 342, 343,
	177, 346, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 359, 33, 261, 338, 339, 340, 341, 360, 361,
	362, 363, 365, 366, 367, 368, 323, 344, 511, 324,
	325, 326, 327, 328, 329, 331, 332, 335, 333, 334,
	336, 337, -384, -383, 87, 89, 88, -324, 87, -144,
	-136, 238, -383, 239, 239, 239, -79, 451, -350, -350,
	-350, 269, 20, -45, -42, -376, 19, -41, -42, 230,
	123, 124, 227, 87, -339, 87, -348, -384, -383, 87,
	137, 244, 136, -347, -344, -347, -348, -383, -217, -383,
	137, 137, -383, -383, -264, -293, -264, -264, 24, -264,
	24, -264, 24, 96, -293, -264, 24, -264, 24, -264,
	24, -264, 24, -264, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -217, -383, -383, -217, -339, -217, -190,
	-383, -271, 96, 96, 96, -350, -350, 96, 90, 90,
	90, -350, -350, 96, 90, -301, -299, 90, 90, -389,
	255, 299, 301, 96, 96, 96, 96, 32, 90, -390,
	32, 650, 649, 651, 652, 653, 90, 96, 32, 96,
	32, 96, -293, 87, -190, -142, 289, 225, 227, 230,
	77, 90, 305, 306, 303, 308, 309, 151, 45, 88,
	241, 238, -383, -284, 243, -284, -293, -300, -299, -291,
	90, -144, -346, 15, 162, -304, -304, -282, -190, -346,
	-304, -282, -190, -282, -282, -282, -282, -304, -304, -304,
	-282, -299, -299, -190, -190, -190, -190, -190, -190, -190,
	-310, -283, -282, 625, 90, -276, 15, 77, -310, -310,
	88, 321, 415, 416, -308, 318, -81, -293, 90, -15,
	-11, -23, -22, -24, 151, -15, 88, 513, -183, -190,
	625, 625, 625, 625, 625, 625, -144, -144, -144, -144,
	536, -207, 119, 143, 120, 121, -162, -208, -213, -215,
	106, 162, 145, 159, -245, -150, -154, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-311, -293, 90, 177, -158, -157, 105, -406, -158, 510,
	88, -220, 221, -144, -144, -383, -144, -293, -130, -132,
	-130, -144, -222, -223, 147, -217, -144, -415, -415, 96,
	105, 168, -126, 25, 39, -126, -126, -126, -126, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -126,
	-293, -293, -119, -118, 433, 434, 435, 436, 438, 439,
	440, 443, 444, 448, 449, 432, 450, 437, 442, 445,
	446, 447, 441, 341, -144, -144, -144, -144, -144, -144,
	-87, -144, 130, 131, 132, -209, -144, -150, -144, -144,
	-144, -415, -144, -144, -144, -210, -209, -382, -381, -380,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -415, -144, -164, -148, 96, -260, 105,
	92, -144, -144, -131, -130, -295, -300, -291, -292, -130,
	-131, -131, -130, -130, -144, -144, -144, -144, -144, -144,
	-144, -144, -415, -144, -144, -144, -144, -144, -252, -415,
	-209, 88, -399, 414, 415, 622, -302, 274, -301, 26,
	-210, 90, 15, -262, 78, -293, -234, -234, 64, 65,
	60, -130, -135, -415, -36, 26, -254, -293, 63, 90,
	-329, -271, 369, 370, 177, -144, -144, 88, -233, 28,
	29, -190, -296, 168, -300, -190, -263, 274, -190, -168,
	-170, -171, -172, -193, -216, -414, -173, -8, 532, 529,
	15, -183, -184, -192, -299, -269, -312, -268, 88, 413,
	415, 416, 77, 122, -144, -330, 176, -358, -357, -356,
	-339, -341, -342, -343, 89, -330, -335, 375, 374, -324,
	-324, -324, -324, -324, -329, -329, -329, -329, 87, 87,
	-324, -324, -324, -324, -332, 87, -332, -332, -333, -332,
	87, -333, -334, 87, -334, -369, -144, -366, -365, -363,
	-364, 248, 101, 604, 560, 513, 553, 594, 78, -361,
	-233, 96, -415, -142, -285, 243, -367, -364, -383, -383,
	-383, -285, 91, 90, 91, 90, 91, 90, -111, -59,
	-1, 662, 663, 664, 88, 20, -340, -339, -58, 299,
	-372, -373, 274, -368, -362, -348, 137, -347, -348, -348,
	-383, 88, 30, 127, 127, 127, 127, 513, 227, 33,
	-286, 552, 143, 604, 560, -339, -58, 241, 241, -311,
	-311, -311, 90, 90, -281, 658, -183, -138, 291, 151,
	280, 280, 238, 238, 293, -190, 304, 307, 305, 306,
	303, 308, 309, 24, 24, 24, 24, 24, 292, 294,
	296, 282, -190, -190, -284, 77, -185, -190, 27, -299,
	-190, -282, -282, -190, -282, -282, -190, -411, 322, -293,
	356, 615, 616, 618, 617, -122, 414, 88, 513, 23,
	-123, 23, -414, 119, 120, 121, -208, -150, -154, -150,
	142, 262, -414, -217, -415, -295, 26, 88, 78, -415,
	88, 88, -415, -415, 88, 15, -225, -223, 149, -144,
	-415, 88, -415, -415, -415, -209, -144, -144, -144, -144,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-209, 88, 88, 15, -315, 26, -415, -415, -415, -415,
	-415, -224, -415, 15, -415, 78, 88, 162, 88, -415,
	-415, -415, 88, 88, -415, -415, 88, 88, -415, 88,
	88, 88, -415, 88, 88, 88, 88, -415, -415, -415,
	-415, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, -415, -94, 537, -415, -415, 88, -415, 88, -415,
	-414, 221, -415, -415, -415, -415, -415, 88, 88, 88,
	88, 88, 88, -415, -415, -415, 88, 88, -415, 88,
	-415, 88, -415, -398, 621, 415, -197, -196, -194, 75,
	242, 76, -414, -301, -415, -158, -260, -261, -260, -202,
	-293, 96, 105, -236, -167, -169, 15, -135, -215, 89,
	88, -329, -240, -246, -279, -293, 90, 177, -331, 177,
	-331, 369, 370, -232, 221, -198, 16, -201, 33, 58,
	-11, -414, -414, 33, 88, -186, -188, -187, -189, 67,
	71, 73, 68, 69, 70, 74, -306, 26, -8, -168,
	-8, -414, -190, -183, -416, 15, 78, -416, 88, 221,
	-270, -273, 417, 414, 420, -383, 90, -110, 88, -356,
	-343, -237, -139, 41, -336, 376, -329, 520, -329, -338,
	90, -338, 96, 96, 96, 89, -48, -43, -44, 34,
	82, -363, -350, 90, 40, -350, -350, -293, 89, -233,
	-138, -190, 143, 77, -367, -367, -367, -299, -2, 661,
	667, 137, 87, 379, 19, -254, 88, 89, -218, 300,
	89, -112, -293, 89, 87, -348, -348, -293, -414, 238,
	32, 32, 604, 560, 552, -58, -218, -217, -383, -330,
	660, 659, 89, 240, 298, -143, 428, -140, 90, 91,
	-190, -190, -190, -190, -190, 230, 227, 402, -407, 310,
	-407, 283, 241, -183, -190, 88, -84, 257, 252, -304,
	-304, 34, -190, 414, 634, 632, -144, 142, 262, -162,
	-154, -150, -313, 177, 342, 261, 340, 336, 356, 347,
	374, 338, 375, 333, 332, 331, -313, -311, -209, -132,
	-144, -144, 150, -144, 148, -144, -415, -415, -415, -415,
	-415, -229, -144, -144, -144, -415, 177, 342, 15, -144,
	-311, -144, -144, -144, -144, -144, -380, -144, -209, -144,
	-209, -144, -144, -144, -144, -144, -381, -381, -381, -381,
	-381, -209, -209, -209, -209, -414, -293, -97, -96, -95,
	587, 242, -94, -164, -97, -164, -131, -295, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -194, -344,
	-344, -344, -264, 88, -275, 23, 15, 58, 58, -167,
	-198, -168, -135, -293, -243, 614, -249, 47, -247, -248,
	48, -244, 49, 57, -331, -331, 168, -234, -144, -265,
	77, -266, -274, -217, -212, -214, -213, -414, -253, -415,
	-293, -264, -266, -170, -171, -171, -170, -171, 67, 67,
	67, 72, 67, 72, 67, -187, -299, -415, -144, -302,
	78, -168, -168, -192, -299, 168, 414, 418, 419, -356,
	-405, 119, 143, 32, 77, 372, 101, -403, 176, 549,
	599, 604, 560, 553, 594, -404, 244, 136, 137, 256,
	26, 42, 89, 88, 89, 88, 89, 89, 88, -287,
	-286, -44, -43, -350, -350, 96, -383, 90, 90, 240,
	27, -190, 77, 77, 77, -113, 665, 96, 87, -3,
	82, -144, 87, 20, -339, -217, -374, -325, -375, -326,
	-327, -5, -6, -351, -116, 58, 101, -62, 45, 239,
	645, 646, 127, -414, 658, -366, -254, -370, -372, -190,
	-147, -414, -146, -148, -155, 166, 167, 261, 338, 339,
	-218, -190, -137, 289, 297, 87, -141, 92, -386, 78,
	280, 372, 280, 90, -408, 311, 90, -408, -190, -84,
	-48, -190, -282, -282, 34, -383, -415, -162, -154, -125,
	162, 513, -316, 519, -324, -324, -324, -334, -324, 328,
	-324, 328, -324, -415, -415, -415, 88, -415, 23, -415,
	-144, 88, -121, 456, 88, 88, -415, 87, 87, -144,
	-415, -415, -415, 88, -415, -415, -415, -415, -415, 88,
	-415, -415, -415, 88, -314, 605, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -93, -294, -293, -94,
	569, 569, -415, -94, -226, 88, -415, -415, 88, -415,
	88, 88, -415, 88, -415, 88, -415, -415, -415, -415,
	88, -195, 23, -195, -195, -415, -260, -190, -198, -227,
	17, -240, 52, 348, -251, -250, 56, 48, -248, 20,
	50, 20, 31, -265, 88, 151, 88, -415, -415, 88,
	58, 221, -415, -198, -181, -180, 77, 78, -182, 77,
	-180, 67, 67, -255, 88, -263, -168, -198, -198, 221,
	119, -414, -149, -161, -147, 13, 90, 90, -383, -402,
	649, 650, 32, 96, -350, -350, 137, 137, -190, 87,
	-329, 90, -329, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -190, -190, -190, -190, -371, 87, 20,
	-144, 87, 151, 89, -254, -254, 276, 162, -350, 643,
	282, 282, -350, -350, -350, -115, -114, 665, 89, -415,
	88, -337, 513, 516, -144, -156, -156, -255, 89, -379,
	513, -385, -293, -293, -293, -293, 96, 98, -415, 511,
	74, 514, -415, -329, -144, -144, -144, -234, 90, -144,
	-144, 96, 96, -415, -144, -209, -144, -415, -178, -177,
	-179, 626, 119, 32, -313, -415, -211, 274, -100, -99,
	-98, 15, -415, -144, -144, -144, -144, -144, -144, -144,
	-414, 67, 19, 17, -414, -414, -302, -227, -228, 18,
	20, -241, 54, -239, 53, -239, -250, 20, 20, 90,
	20, 90, 137, -274, -144, -214, 58, -11, -293, -212,
	-293, -229, -144, 87, -144, -158, -198, -198, -144, -204,
	480, 482, 483, 484, 481, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 485, 459, 108, 110, 109,
	460, 461, 462, 342, 507, 508, 502, 505, 506, 504,
	503, 357, 358, 463, 464, 465, 111, 112, 113, 114,
	115, 116, 117, 466, 469, 467, 470, 471, 472, 477,
	478, 473, 474, 475, 476, 479, 496, 497, 498, 499,
	500, 501, 606, 607, 608, 609, 610, 611, 612, 613,
	90, 90, 87, -144, 89, 89, -255, -370, -59, 89,
	-256, -254, 96, 89, 277, -213, -414, 90, -350, -350,
	-350, 96, 96, -301, -415, 88, -293, -404, -372, 517,
	517, -415, 26, -378, -377, -295, 87, 78, 63, 512,
	515, -415, -415, 88, -415, -415, -415, 89, 89, -415,
	-415, -415, 88, -415, -177, -179, -415, 77, -158, -229,
	20, -97, 299, 301, -97, -415, 88, -415, -415, 88,
	-415, 88, -415, -415, -257, -415, -293, 244, 20, 20,
	-257, -257, -197, -228, -107, -106, -105, 543, -144, -209,
	-242, 55, 77, 122, 90, 90, 90, 13, -212, 221,
	-234, -254, -175, 379, -229, -415, -254, 89, 26, 89,
	667, 137, 89, -213, -124, -414, 273, -301, 90, 90,
	-114, -117, -11, 88, 151, -254, -190, 63, -144, -209,
	-415, 77, 524, 626, -92, -91, -88, 637, 663, -209,
	-94, -94, -144, -144, -144, 88, -415, -415, -415, -107,
	88, -104, -103, -293, 77, 122, -266, -293, 89, -415,
	-414, -234, 89, -238, -11, 87, -3, 273, -325, -375,
	-326, -327, -5, -6, -351, -82, 513, -377, -355, -295,
	90, 96, 89, 513, -415, -415, -90, 145, 635, 602,
	-145, -156, -153, 220, -415, 88, -415, 88, -415, 88,
	-293, 244, -105, 88, 26, -302, -176, -174, -293, 566,
	-395, -394, 509, -405, -401, 119, 143, 101, -403, 604,
	560, 128, 129, -82, -144, 87, -415, -83, 288, 621,
	-386, 514, -90, 636, 580, 555, 580, 555, -144, -144,
	-144, -103, -414, -415, 88, 23, -317, -61, 577, -392,
	-393, 77, -396, 385, 576, 597, 119, 90, 89, -254,
	249, -379, 515, 142, -415, 88, -415, 88, -415, -93,
	-174, 573, -330, -158, -393, 77, -392, 77, 14, 13,
	-4, 666, 89, 290, -90, -144, -144, -415, -60, 27,
	-175, -391, 257, 252, 255, 33, -391, 96, -4, -415,
	-415, 577, 251, 32, 119, -158, -178, -177, -177,
}

var yyDef = [...]int{
	879, -2, -2, 881, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 879, 879, 879, 0, 879, 0,
	0, 879, -2, -2, 879, 1487, 0, 879, 0, 0,
	0, 0, -2, 794, 800, 0, 809, -2, 0, 0,
	879, 879, 2045, 2045, 874, 0, 0, 0, 0, 0,
	879, 879, 879, 879, 1353, 52, 879, 0, 87, 88,
	829, 830, 831, 67, 0, 2043, 880, 1, 3, 73,
	77, 0, 0, 0, 60, 1362, 0, 80, 0, 0,
	883, 0, 0, 1470, 879, 879, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	601, 524, 576, 522, 561, -2, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	400, 400, 0, 0, -2, 510, 510, 510, 1472, 0,
	0, 0, 558, 462, 400, 400, 400, 0, 400, 400,
	400, 400, 0, 0, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 1380, 167, 1488, 1485, 1486, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 0, 1464,
	0, 714, 982, 0, 0, 717, 0, 0, 783, 721,
	783, 0, 783, 783, 783, 783, 0, 0, 0, 731,
	0, 0, 0, 0, 780, 0, 747, 748, 0, 780,
	0, 754, 786, 0, 0, 760, 783, 783, 763, 764,
	2046, 0, 2046, 2046, 1455, 0, 777, 775, 789, 790,
	42, 793, 796, 797, 798, 799, 802, 0, 813, 816,
	1481, 1482, 0, 818, 825, 842, 843, 0, 875, 876,
	47, 1130, 0, 1004, 1009, 1020, 1035, 1036, 1037, 1038,
	1039, 1041, 1042, 1043, 0, 0, 0, 0, 1048, 1049,
	0, 0, 0, 0, 0, 1111, 1057, 0, 0, 0,
	0, 1326, 0, 0, 1287, 1287, 1145, 1287, 1289, 1289,
	1690, 1826, 1834, 1954, 1652, 1657, 1658, 1659, 1947, 1948,
	1949, 1950, 1989, 1990, 1994, 1750, 0, 0, 0, 2042,
	1787, 1795, 1796, 1820, 1919, 1975, 1669, 1815, 1884, 1747,
	1769, 1770, 1901, 1902, 1791, 1792, 1773, 1785, 1788, 1776,
	1777, 1779, 1781, 1786, 1793, 1799, 1778, 1798, 1797, 0,
	1774, 1775, 1780, 1790, 1794, 1782, 1783, 1784, 1789, 1800,
	0, 0, 0, 0, 0, 1226, 1227, 1228, 1229, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 1339, 1340,
	45, 46, 1129, 1451, 1289, 1289, 1289, 1289, 1289, 1071,
	1072, 1073, 1074, 1075, 1099, 1100, 1106, 1107, 1896, 1897,
	1898, 1899, 1731, 1984, 1739, 1740, 1879, 1880, 1752, 1753,
	2017, 2018, -2, -2, -2, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 1694, 1965, 1966, 229, 0, 0,
	297, 298, 294, 295, 296, 1113, 1114, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 290, 291, 2045,
	0, 852, 0, 0, 0, 0, 0, 1362, 0, 1354,
	1353, 65, 0, 879, -2, 0, 0, 0, 0, 49,
	0, 54, 939, 882, 79, 78, 1402, 0, 0, 0,
	61, 1363, 69, 71, 1364, 0, 884, 885, 0, 915,
	919, 0, 0, 0, 1471, 1470, 1470, 104, 0, 0,
	105, 125, 126, 127, 0, 0, 111, 112, 1457, 1458,
	0, 0, 179, 180, 0, 43, 427, 0, 175, 0,
	420, 359, 0, 1380, 0, 0, 0, 0, 0, 879,
	0, 1465, 156, 157, 164, 165, 166, 400, 400, 400,
	573, 0, 0, 167, 167, 531, 532, 533, 0, 0,
	-2, 425, 0, 511, 0, 0, 414, 414, 418, 416,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 401, 0, 571, 572, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 1473, 1474, 0, 548,
	549, 0, 0, 0, 400, 400, 0, 0, 0, 0,
	400, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 1393, 0, 0, 0, -2, 0, 706, 0, 0,
	0, 1466, 1466, 0, 713, 0, 715, 716, 718, 719,
	720, 0, 0, 722, 0, 780, 780, 778, 779, 724,
	725, 726, 727, 783, 0, 0, 409, 410, 411, 780,
	783, 0, 783, 783, 783, 783, 780, 780, 780, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	786, 783, 0, 755, 0, 756, 757, 758, 761, 762,
	765, 2047, 2048, 1483, 1484, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 2046, 2046, 769, 773, 1456,
	795, 801, 803, 804, 0, 0, 814, 817, 836, 51,
	1738, 824, 51, 826, 827, 828, 854, 855, 860, 0,
	0, 0, 0, 866, 867, 868, 0, 0, 871, 872,
	873, 0, 0, 0, 0, 0, 1002, 0, 0, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1021, 1022, 0, 0, 0, 1044, 1045,
	1046, 1047, 1050, 0, 1062, 0, 1064, 1335, -2, 0,
	0, 0, 1055, 1056, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 1143, 0, 1144, 1146, 1147, 0,
	1148, 889, 889, 889, 889, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1476, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 0, 0, 899,
	899, 0, 0, 222, 223, 224, 225, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 243, 244, 245, 246, 299, 247,
	248, 249, 1129, 0, 0, 0, 48, 844, 845, 0,
	965, 1476, 0, 0, 895, 0, 59, 68, 70, 1362,
	63, 1362, 0, 901, 0, 0, -2, -2, 902, 908,
	909, 910, 911, 912, 56, 2044, 57, 0, 76, 0,
	50, 0, 0, 0, 0, 373, 1405, 0, 0, 1355,
	1356, 1359, 0, 916, 1832, 920, 0, 922, 923, 0,
	0, 102, 0, 981, 0, 0, 0, 113, 0, 115,
	116, 0, 0, 0, 384, 1459, 1460, 1461, -2, 407,
	0, 384, 368, 307, 308, 309, 359, 311, 359, 359,
	359, 359, 373, 373, 373, 373, 342, 343, 344, 345,
	346, 0, 0, 328, 359, 359, 359, 359, 349, 350,
	351, 352, 353, 354, 355, 356, 312, 313, 314, 315,
	316, 317, 318, 319, 320, 361, 361, 361, 361, 361,
	365, 365, 0, 44, 0, 388, 0, 1359, 0, 0,
	1393, 1468, 1478, 0, 0, 0, 1468, 134, 0, 0,
	0, 574, 612, 525, 562, 575, 0, 528, 529, -2,
	0, 0, 510, 0, 512, 0, 408, 0, -2, 0,
	418, 0, 414, 418, 415, 418, 406, 419, 552, 553,
	554, 0, 556, 557, 642, 951, 0, 0, 0, 0,
	0, 648, 649, 650, 0, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 563, 564, 565, 566, 567,
	568, 569, 570, 0, 0, 0, 0, 512, 0, 559,
	0, 0, 464, 465, 466, 0, 0, 469, 470, 471,
	472, 0, 0, 475, 476, 477, 968, 969, 478, 479,
	504, 505, 506, 480, 481, 482, 483, 484, 485, 486,
	498, 499, 500, 501, 502, 503, 487, 488, 489, 490,
	491, 492, 495, 0, 149, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 0, 0, 0, 898, 983, 1489, 1490,
	784, 785, 0, 412, 413, 783, 783, 728, 770, 0,
	783, 732, 771, 733, 735, 734, 736, 749, 750, 783,
	739, 781, 782, 740, 741, 742, 743, 744, 745, 746,
	766, 751, 752, 753, 787, 0, 791, 792, 767, 768,
	0, 0, 807, 808, 0, 815, 839, 837, 838, 840,
	832, 833, 834, 835, 0, 841, 0, 0, 857, 98,
	862, 863, 864, 865, 877, 870, 1131, 999, 1000, 1001,
	0, 1003, 1006, 0, 1115, 1117, 1008, 1010, 1126, 1127,
	1128, 0, 0, 0, 0, 0, 1014, 1018, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1040, 1303, 1304, 1305, 1059, 300, 301, 0, 1060, 0,
	0, 0, 0, 0, 0, 0, 1130, 1061, 0, 913,
	0, 0, 1333, 1330, 0, 0, 0, 1288, 1290, 0,
	0, 0, 0, 890, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1306, 0, 0, 0, 0, 0,
	1326, 0, 1066, 1067, 1068, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 0, 1477, 0, 144, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 1231, 1232, 1233,
	41, 0, 0, 0, 900, 1337, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 0, 0, 0, 0, 0, 0, 1449,
	0, 0, 847, 848, 850, 0, 985, 0, 966, 0,
	0, 853, 0, 894, 0, 897, 62, 64, 906, 907,
	0, 924, 903, 58, 53, 0, 0, 943, 1403, 373,
	1425, 0, 382, 382, 379, 1365, 1366, 0, 1358, 1360,
	1361, 81, 921, 917, 0, 997, 0, 0, 980, 0,
	927, 929, 930, 931, 963, 0, 934, 935, 0, 0,
	0, 0, 0, 100, 982, 106, 0, 114, 0, 0,
	119, 120, 107, 108, 109, 110, 0, 601, -2, 459,
	181, 183, 184, 185, 176, -2, 371, 369, 370, 310,
	373, 373, 336, 337, 338, 339, 340, 341, 0, 0,
	329, 330, 331, 332, 321, 0, 322, 323, 324, 363,
	0, 325, 326, 0, 327, 426, 0, 1367, 389, 390,
	392, 400, 0, 395, 396, 0, 400, 400, 0, 421,
	422, 0, 1359, 1384, 0, 0, 0, 1479, 1478, 1478,
	1478, 0, 169, 170, 171, 172, 173, 174, 637, 0,
	0, 613, 635, 636, 167, 0, 0, 177, 514, 513,
	0, 669, 0, 424, 0, 0, 418, 418, 403, 404,
	555, 0, 0, 644, 645, 646, 647, 0, 0, 0,
	541, 453, 0, 542, 543, 512, 514, 0, 0, 384,
	467, 468, 473, 474, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 589, 590, 593,
	595, 516, 599, 592, 594, 596, 516, 600, 1381, 1382,
	1383, 0, 0, 707, 0, 0, 450, 96, 1467, 712,
	780, 738, 772, 780, 730, 737, 759, 805, 806, 811,
	819, 820, 821, 822, 823, 861, 0, 0, 0, 0,
	869, 0, 0, 1007, 1116, 1118, 1011, 0, 1015, 1019,
	0, 0, 0, 1065, 1063, 1337, 0, 0, 0, 1112,
	0, 0, 1134, 1135, 0, 0, 0, 1331, 0, 0,
	1141, 0, 1291, 1292, 1149, 0, 0, 0, 0, 0,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1353, 0, 0, 0, 0, 0, 1170, 1171, 1172, 1173,
	1174, 0, 1176, 0, 1177, 0, 0, 0, 0, 1184,
	1185, 1187, 0, 0, 1190, 1191, 0, 0, 1192, 0,
	0, 0, 1196, 0, 0, 0, 0, 1205, 1206, 1207,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 1220, 0, 1094, 0, 0, 1094, 0, 1132,
	899, 0, 1293, 1294, 1295, 1296, 1297, 0, 0, 0,
	0, 0, 0, 1253, 1254, 1256, 0, 0, 1259, 0,
	1261, 0, 1450, 846, 849, 851, 937, 986, 987, 0,
	0, 0, 0, 967, 1475, 892, 893, 896, 945, 0,
	1341, 0, 0, 924, 997, 925, 0, 904, 55, 940,
	0, 1407, 1406, 1419, 1432, 382, 382, 376, 377, 383,
	378, 380, 381, 1357, 0, 1362, 0, 1443, 0, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 973, 0, 0, 0, 0, 964, 935, 0,
	936, 0, -2, 0, 0, 94, 95, 0, 0, 0,
	117, 118, 0, 0, 124, 385, 386, 158, 167, 461,
	182, 434, 0, 0, 306, 372, 333, 334, 335, 0,
	357, 0, 0, 0, 0, 455, 130, 1371, 1370, 400,
	400, 391, 0, 394, 0, 0, 0, 1480, 360, 423,
	0, 148, 0, 0, 0, 0, 0, 154, 607, 0,
	0, 614, 0, 0, 0, 523, 0, 534, 535, 0,
	641, -2, 703, 388, 0, 402, 405, 952, 0, 0,
	536, 0, 539, 540, 454, 514, 545, 546, 560, 547,
	496, 497, 494, 0, 0, 1394, 1395, 1400, 1398, 1399,
	135, 581, 583, 582, 586, 0, 0, 0, 518, 0,
	518, 579, 0, 450, 1367, 0, 711, 451, 452, 783,
	783, 856, 99, 0, 859, 0, 0, 0, 0, 1012,
	1016, 1298, 1324, 359, 359, 1311, 359, 365, 1314, 359,
	1316, 359, 1319, 359, 1322, 1323, 0, 0, 0, 914,
	0, 0, 1140, 1334, 0, 0, 1150, 1151, 1152, 1153,
	1154, 1328, 0, 0, 0, 1169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 147, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 1093, 0, 1095, 1096,
	0, 0, 1222, 0, 0, 1234, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 993,
	993, 993, 0, 0, 0, 1462, 1463, 1342, 1343, 997,
	1344, 926, 905, 944, 1425, 0, 1418, 0, -2, 1427,
	0, 0, 0, 1433, 374, 375, 918, 82, 998, 85,
	0, 1443, 1452, 0, 1434, 1445, 1447, 0, 0, 0,
	1439, 0, 997, 928, 959, 961, 0, 956, 971, 972,
	974, 0, 976, 0, 978, 979, 939, 933, 0, 102,
	0, 997, 997, 101, 0, 984, 121, 122, 123, 460,
	186, 191, 0, 0, 0, 196, 0, 198, 0, 0,
	0, 203, 204, 400, 400, 435, 0, 303, 305, 0,
	0, 189, 373, 0, 373, 0, 364, 366, 0, 436,
	456, 1368, 1369, 0, 0, 393, 397, 398, 399, 0,
	1469, 150, 0, 0, 0, 610, 0, 638, 0, 0,
	0, 0, 0, 0, 178, 515, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 0, 400, 0, 0, 0,
	400, 400, 400, 0, 695, 387, 0, 0, 666, 663,
	537, 0, 227, 228, 230, 0, 0, 0, 0, 0,
	544, 939, 1385, 1386, 1387, 0, 1397, 1401, 138, 0,
	0, 0, 0, 591, 597, 0, 517, 598, 708, 709,
	710, 97, 723, 729, 858, 878, 1005, 1013, 1017, 0,
	0, 0, 0, 1325, 1309, 373, 1312, 1313, 1315, 1317,
	1318, 1320, 1321, 1053, 1054, 1058, 0, 1137, 0, 1139,
	1332, 0, 1362, 0, 0, 0, 1168, 0, 0, 0,
	1179, 1178, 1180, 0, 1182, 1183, 1188, 1189, 1193, 0,
	1195, 1197, 1198, 0, 0, 0, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 0, 1087, 1090, 1221,
	1097, 1098, 1103, 1224, 0, 0, 1133, 1236, 0, 1241,
	0, 0, 1247, 0, 1251, 0, 1257, 1258, 1260, 1262,
	0, 0, 0, 0, 0, 965, 946, 66, 1344, 1346,
	0, 1412, 1410, 1410, 1420, 1421, 0, 0, 1428, 0,
	0, 0, 0, 86, 0, 0, 0, 1448, 0, 0,
	0, 0, 103, 1353, 953, 960, 0, 0, 954, 0,
	955, 975, 977, 932, 0, 997, 997, 92, 93, 0,
	192, 0, 194, 220, 221, 0, 197, 199, 200, 201,
	207, 208, 209, 202, 0, 0, 302, 304, 0, 0,
	347, 358, 348, 0, 0, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 939, 151, 152, 153, 602, 0, 612,
	0, 941, 0, 605, 0, 526, 0, 0, 0, 400,
	400, 400, 0, 0, 0, 0, 680, 0, 0, 643,
	0, 651, 0, 0, 0, 231, 232, 0, 1396, 580,
	0, 136, 137, 0, 0, 585, 519, 520, 1051, 0,
	0, 0, 1052, 1310, 0, 0, 0, 0, 1329, 0,
	0, 0, 0, 1175, 0, 0, 0, 1201, 0, 0,
	0, 632, 633, 0, 1265, 1092, 1353, 0, 1094, 1104,
	1105, 0, 1094, 1235, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 985, 1346, 1351, 0,
	0, 1415, 0, 1408, 1411, 1409, 1422, 0, 0, 1429,
	0, 1431, 0, 1453, 1454, 1446, 0, 1438, 1441, 1437,
	1440, 1362, 957, 0, 962, 0, 1353, 91, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 0, 0, 362, 367, 0, 0, 0, 603,
	0, 942, 615, 606, 0, 693, 0, 697, 0, 0,
	0, 700, 701, 702, 679, 0, 683, 428, 667, 664,
	665, 538, 0, 139, 140, 0, 0, 0, 1299, 0,
	1302, 1136, 1138, 0, 1165, 1166, 1167, 1307, 1308, 1181,
	1194, 1199, 0, 1202, 0, 0, 1203, 0, 634, 1083,
	0, 0, 1101, 1102, 0, 1237, 0, 1242, 1243, 0,
	1248, 0, 1252, 1263, 0, 990, 947, 948, 995, 996,
	0, 0, 938, 1351, 84, 1352, 1349, 0, 1347, 1345,
	1404, 0, 1413, 1414, 1423, 1424, 1430, 0, 1436, 0,
	89, 0, 0, 0, 1362, 193, 0, 212, 0, 611,
	0, 614, 604, 691, 692, 0, 704, 696, 698, 699,
	681, -2, 1388, 0, 0, 0, 587, 1300, 0, 0,
	1204, 0, 630, 631, 1091, 1084, 0, 1069, 1070, 1088,
	1223, 1225, 0, 0, 0, 0, 989, 991, 992, 83,
	0, 1348, 1109, 0, 1416, 1417, 1444, 1442, 958, 965,
	0, 90, 441, 434, 1388, 0, 0, 0, 684, 685,
	686, 687, 688, 689, 690, 577, 1390, 141, 142, 507,
	508, 509, 135, 0, 1142, 1200, 1085, 0, 0, 0,
	0, 1081, 1082, 0, 1238, 0, 1244, 0, 1249, 0,
	949, 950, 1350, 0, 0, 616, 0, 618, 0, -2,
	429, 442, 0, 187, 213, 214, 0, 0, 217, 218,
	219, 210, 211, 131, 0, 0, 705, 0, 1391, 1392,
	138, 0, 0, 1076, 1077, 1078, 1079, 1080, 0, 0,
	0, 1110, 1089, 617, 0, 0, 384, 0, 627, 430,
	431, 0, 437, 438, 439, 440, 215, 216, 639, 0,
	0, 584, 1301, 0, 1239, 0, 1245, 0, 1250, 0,
	619, 620, 628, 0, 432, 0, 433, 0, 0, 0,
	608, 0, 639, 1389, 1086, 0, 0, 1108, 0, 629,
	625, 443, 445, 446, 0, 0, 444, 640, 609, 1240,
	1246, 0, 447, 448, 449, 621, 622, 623, 624,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 668,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:612
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:630
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:669
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:675
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:686
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:696
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:700
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:706
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:712
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:722
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:741
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:747
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:887
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:893
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:918
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:948
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:952
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:986
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:996
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1006
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1019
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1031
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1045
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1049
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1053
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1059
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1063
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1067
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1073
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1077
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1083
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1093
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1097
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1101
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1125
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1129
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1133
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1145
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1165
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1176
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1201
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1207
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1227
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1233
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1249
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1278
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1285
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1292
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1303
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1314
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1324
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1328
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1356
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1376
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1386
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1390
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1396
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1406
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1411
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1444
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1453
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1551
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1565
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1569
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1575
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1579
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1584
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1615
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1621
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1953
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1968
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1972
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1976
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2225
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2230
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2234
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2359
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2368
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2384
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2388
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2429
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2433
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2437
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2441
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2445
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2512
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2522
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2526
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2532
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2546
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2552
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2558
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2562
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2566
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2589
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2605
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2609
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2640
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2644
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2652
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2684
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2693
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2713
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2894
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2907
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2925
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2929
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2942
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2946
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2960
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3102
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3302
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3369
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3386
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3395
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3402
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3414
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3423
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3438
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3447
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3452
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3456
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3462
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3468
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3474
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3478
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3484
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3488
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3494
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3500
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3542
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3548
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3552
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3556
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3562
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3566
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3571
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3575
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3580
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3584
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3683
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3687
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3693
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3708
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3717
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3722
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3727
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3732
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3737
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3743
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3760
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3766
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3776
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3781
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3800
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3805
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3817
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3824
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3831
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3838
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3850
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3856
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3862
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3868
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3874
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3880
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3886
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3898
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3920
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3924
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = "extended "
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4223
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4227
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4247
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4261
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4265
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4275
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4281
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4352
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4358
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4368
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4372
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4376
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4420
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4424
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4428
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4432
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4436
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4440
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4444
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4449
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4453
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4457
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4461
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4516
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4528
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4532
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4544
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4554
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4560
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4564
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4568
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4572
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4584
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4606
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4610
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4620
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4697
		{
			setAllowComments(yylex, true)
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4707
		{
			yyVAL.strs = nil
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4711
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4721
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4725
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4730
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = SQLCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4743
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4747
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4757
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4761
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4771
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4780
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4786
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4790
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4799
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4804
		{
			yyVAL.strs = nil
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4820
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = SQLCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = DistinctStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = StraightJoinHint
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4856
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4866
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4870
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4874
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4878
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4883
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4898
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4903
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4907
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4913
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4919
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4933
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4937
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4941
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4945
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4951
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4955
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4961
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4965
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4983
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4989
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4999
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5009
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5013
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5021
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5027
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5044
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5048
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5052
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5056
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5064
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5068
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5074
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5076
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5079
		{
			yyVAL.empty = struct{}{}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5084
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5092
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5119
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5125
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5133
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5137
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5143
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5147
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5177
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5186
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5192
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5202
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5206
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5210
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5214
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5219
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5223
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5227
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5231
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5521
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5525
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5531
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5535
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5541
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5545
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5549
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5555
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5559
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5566
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5570
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5574
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5578
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5582
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5588
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5592
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5596
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5600
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5604
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5623
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5629
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5633
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5642
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5647
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5656
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5662
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5666
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5678
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5684
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5688
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5694
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5698
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5704
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5708
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5720
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5726
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5730
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5736
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5742
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5752
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5756
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5762
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5766
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5773
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5777
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5781
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5785
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5791
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5795
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5799
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5803
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5807
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5811
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5815
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5821
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5825
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5829
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5836
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5842
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5846
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6408
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6416
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6420
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6424
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6428
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6432
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6436
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6440
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6444
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6448
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6452
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6456
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6462
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6466
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6470
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6474
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6478
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6482
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6486
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6490
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6494
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6549
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6553
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6557
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6561
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6565
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6571
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6589
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6593
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6599
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6603
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6607
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6611
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6615
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6621
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6625
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6629
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6633
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6637
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6641
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6645
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6649
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6653
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6657
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6681
		{
			yyVAL.str = string("")
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6685
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6691
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6695
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6701
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6716
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6720
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6724
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6728
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6767
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6782
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6788
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6792
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6801
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6810
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6816
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6822
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6832
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6837
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6841
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6845
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6854
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6860
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6864
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6868
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6877
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6881
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6885
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6889
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6896
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6900
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6904
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6908
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6914
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6918
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6922
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6926
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6931
		{
			yyVAL.str = ""
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6939
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6943
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6948
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6952
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6958
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6967
		{
			yyVAL.str = ""
		}
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6971
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = "cascaded"
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6980
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6993
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6999
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7005
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7011
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7020
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7024
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7029
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7033
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7039
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7043
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7049
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7053
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7057
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7062
		{
			yyVAL.str = ""
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7066
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7070
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7075
		{
			yyVAL.str = ""
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7079
		{
			yyVAL.str = " header"
		}
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7084
		{
			yyVAL.str = ""
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7088
		{
			yyVAL.str = " manifest on"
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7092
		{
			yyVAL.str = " manifest off"
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = ""
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7101
		{
			yyVAL.str = " overwrite on"
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7105
		{
			yyVAL.str = " overwrite off"
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7111
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7116
		{
			yyVAL.str = ""
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7120
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7126
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7130
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7136
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7140
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7145
		{
			yyVAL.str = ""
		}
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7149
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7155
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7159
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7173
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7178
		{
			yyVAL.str = ""
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7182
		{
			yyVAL.str = " optionally"
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7195
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7199
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7203
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7207
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7211
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7217
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7221
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7225
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7229
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7238
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7244
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7248
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7254
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7258
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7264
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7268
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7273
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7283
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7287
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7293
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7300
		{
			yyVAL.str = "charset"
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7310
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7314
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7318
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7347
		{
			yyVAL.empty = struct{}{}
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7349
		{
			yyVAL.empty = struct{}{}
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7351
		{
			yyVAL.empty = struct{}{}
		}
	case 1475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7355
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7364
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7371
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7375
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7381
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7385
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7392
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7398
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7402
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7408
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7412
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7419
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7998
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8007
		{
			decNesting(yylex)
		}
	case 2045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8012
		{
			skipToEnd(yylex)
		}
	case 2046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8017
		{
			skipToEnd(yylex)
		}
	case 2047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8021
		{
			skipToEnd(yylex)
		}
	case 2048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8025
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
