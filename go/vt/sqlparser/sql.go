/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const PAUSE = 57637
const RESUME = 57638
const SCHEMA_MIGRATION = 57639
const VITESS_THROTTLER = 57640
const BEGIN = 57641
const START = 57642
const TRANSACTION = 57643
const COMMIT = 57644
const ROLLBACK = 57645
const SAVEPOINT = 57646
const RELEASE = 57647
const WORK = 57648
const CONSISTENT = 57649
const SNAPSHOT = 57650
const BIT = 57651
const TINYINT = 57652
const SMALLINT = 57653
const MEDIUMINT = 57654
const INT = 57655
const INTEGER = 57656
const BIGINT = 57657
const INTNUM = 57658
const REAL = 57659
const DOUBLE = 57660
const FLOAT_TYPE = 57661
const FLOAT4_TYPE = 57662
const FLOAT8_TYPE = 57663
const DECIMAL_TYPE = 57664
const NUMERIC = 57665
const TIME = 57666
const TIMESTAMP = 57667
const DATETIME = 57668
const YEAR = 57669
const CHAR = 57670
const VARCHAR = 57671
const BOOL = 57672
const CHARACTER = 57673
const VARBINARY = 57674
const NCHAR = 57675
const TEXT = 57676
const TINYTEXT = 57677
const MEDIUMTEXT = 57678
const LONGTEXT = 57679
const BLOB = 57680
const TINYBLOB = 57681
const MEDIUMBLOB = 57682
const LONGBLOB = 57683
const JSON = 57684
const JSON_SCHEMA_VALID = 57685
const JSON_SCHEMA_VALIDATION_REPORT = 57686
const ENUM = 57687
const GEOMETRY = 57688
const POINT = 57689
const LINESTRING = 57690
const POLYGON = 57691
const GEOMCOLLECTION = 57692
const GEOMETRYCOLLECTION = 57693
const MULTIPOINT = 57694
const MULTILINESTRING = 57695
const MULTIPOLYGON = 57696
const ASCII = 57697
const UNICODE = 57698
const NULLX = 57699
const AUTO_INCREMENT = 57700
const APPROXNUM = 57701
const SIGNED = 57702
const UNSIGNED = 57703
const ZEROFILL = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const WORKLOAD = 57735
const LASTSEENGTID = 57736
const FAILPOINTS = 57737
const NAMES = 57738
const GLOBAL = 57739
const SESSION = 57740
const ISOLATION = 57741
const LEVEL = 57742
const READ = 57743
const WRITE = 57744
const ONLY = 57745
const REPEATABLE = 57746
const COMMITTED = 57747
const UNCOMMITTED = 57748
const SERIALIZABLE = 57749
const FAST = 57750
const QUICK = 57751
const CHANGED = 57752
const MEDIUM = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_DATE = 57756
const NOW = 57757
const CURRENT_TIME = 57758
const LOCALTIME = 57759
const LOCALTIMESTAMP = 57760
const CURRENT_USER = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const DAY = 57765
const DAY_HOUR = 57766
const DAY_MICROSECOND = 57767
const DAY_MINUTE = 57768
const DAY_SECOND = 57769
const HOUR = 57770
const HOUR_MICROSECOND = 57771
const HOUR_MINUTE = 57772
const HOUR_SECOND = 57773
const MICROSECOND = 57774
const MINUTE = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const MONTH = 57778
const QUARTER = 57779
const SECOND = 57780
const SECOND_MICROSECOND = 57781
const YEAR_MONTH = 57782
const WEEK = 57783
const REPLACE = 57784
const CONVERT = 57785
const CAST = 57786
const SUBSTR = 57787
const SUBSTRING = 57788
const SEPARATOR = 57789
const TIMESTAMPADD = 57790
const TIMESTAMPDIFF = 57791
const WEIGHT_STRING = 57792
const LTRIM = 57793
const RTRIM = 57794
const TRIM = 57795
const JSON_ARRAY = 57796
const JSON_OBJECT = 57797
const JSON_QUOTE = 57798
const JSON_DEPTH = 57799
const JSON_TYPE = 57800
const JSON_LENGTH = 57801
const JSON_VALID = 57802
const JSON_ARRAY_APPEND = 57803
const JSON_ARRAY_INSERT = 57804
const JSON_INSERT = 57805
const JSON_MERGE = 57806
const JSON_MERGE_PATCH = 57807
const JSON_MERGE_PRESERVE = 57808
const JSON_REMOVE = 57809
const JSON_REPLACE = 57810
const JSON_SET = 57811
const JSON_UNQUOTE = 57812
const COUNT = 57813
const AVG = 57814
const MAX = 57815
const MIN = 57816
const SUM = 57817
const GROUP_CONCAT = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const STD = 57822
const STDDEV = 57823
const STDDEV_POP = 57824
const STDDEV_SAMP = 57825
const VAR_POP = 57826
const VAR_SAMP = 57827
const VARIANCE = 57828
const REGEXP_INSTR = 57829
const REGEXP_LIKE = 57830
const REGEXP_REPLACE = 57831
const REGEXP_SUBSTR = 57832
const ExtractValue = 57833
const UpdateXML = 57834
const GET_LOCK = 57835
const RELEASE_LOCK = 57836
const RELEASE_ALL_LOCKS = 57837
const IS_FREE_LOCK = 57838
const IS_USED_LOCK = 57839
const LOCATE = 57840
const POSITION = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const UNUSED = 57851
const ARRAY = 57852
const BYTE = 57853
const CUME_DIST = 57854
const DESCRIPTION = 57855
const DENSE_RANK = 57856
const EMPTY = 57857
const EXCEPT = 57858
const FIRST_VALUE = 57859
const GROUPING = 57860
const GROUPS = 57861
const JSON_TABLE = 57862
const LAG = 57863
const LAST_VALUE = 57864
const LATERAL = 57865
const LEAD = 57866
const NTH_VALUE = 57867
const NTILE = 57868
const OF = 57869
const OVER = 57870
const PERCENT_RANK = 57871
const RANK = 57872
const RECURSIVE = 57873
const ROW_NUMBER = 57874
const SYSTEM = 57875
const WINDOW = 57876
const ACTIVE = 57877
const ADMIN = 57878
const AUTOEXTEND_SIZE = 57879
const BUCKETS = 57880
const CLONE = 57881
const COLUMN_FORMAT = 57882
const COMPONENT = 57883
const DEFINITION = 57884
const ENFORCED = 57885
const ENGINE_ATTRIBUTE = 57886
const EXCLUDE = 57887
const FOLLOWING = 57888
const GET_MASTER_PUBLIC_KEY = 57889
const HISTOGRAM = 57890
const HISTORY = 57891
const INACTIVE = 57892
const INVISIBLE = 57893
const LOCKED = 57894
const MASTER_COMPRESSION_ALGORITHMS = 57895
const MASTER_PUBLIC_KEY_PATH = 57896
const MASTER_TLS_CIPHERSUITES = 57897
const MASTER_ZSTD_COMPRESSION_LEVEL = 57898
const NESTED = 57899
const NETWORK_NAMESPACE = 57900
const NOWAIT = 57901
const NULLS = 57902
const OJ = 57903
const OLD = 57904
const OPTIONAL = 57905
const ORDINALITY = 57906
const ORGANIZATION = 57907
const OTHERS = 57908
const PARTIAL = 57909
const PATH = 57910
const PERSIST = 57911
const PERSIST_ONLY = 57912
const PRECEDING = 57913
const PRIVILEGE_CHECKS_USER = 57914
const PROCESS = 57915
const RANDOM = 57916
const REFERENCE = 57917
const REQUIRE_ROW_FORMAT = 57918
const RESOURCE = 57919
const RESPECT = 57920
const RESTART = 57921
const RETAIN = 57922
const REUSE = 57923
const ROLE = 57924
const SECONDARY = 57925
const SECONDARY_ENGINE = 57926
const SECONDARY_ENGINE_ATTRIBUTE = 57927
const SECONDARY_LOAD = 57928
const SECONDARY_UNLOAD = 57929
const SIMPLE = 57930
const SKIP = 57931
const SRID = 57932
const THREAD_PRIORITY = 57933
const TIES = 57934
const UNBOUNDED = 57935
const VCPU = 57936
const VISIBLE = 57937
const RETURNING = 57938
const FORMAT_BYTES = 57939
const FORMAT_PICO_TIME = 57940
const PS_CURRENT_THREAD_ID = 57941
const PS_THREAD_ID = 57942
const GTID_SUBSET = 57943
const GTID_SUBTRACT = 57944
const WAIT_FOR_EXECUTED_GTID_SET = 57945
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57946
const FORMAT = 57947
const TREE = 57948
const VITESS = 57949
const TRADITIONAL = 57950
const VTEXPLAIN = 57951
const VEXPLAIN = 57952
const PLAN = 57953
const LOCAL = 57954
const LOW_PRIORITY = 57955
const KILL = 57956
const NO_WRITE_TO_BINLOG = 57957
const LOGS = 57958
const ERROR = 57959
const GENERAL = 57960
const HOSTS = 57961
const OPTIMIZER_COSTS = 57962
const USER_RESOURCES = 57963
const SLOW = 57964
const CHANNEL = 57965
const RELAY = 57966
const EXPORT = 57967
const CURRENT = 57968
const ROW = 57969
const ROWS = 57970
const AVG_ROW_LENGTH = 57971
const CONNECTION = 57972
const CHECKSUM = 57973
const DELAY_KEY_WRITE = 57974
const ENCRYPTION = 57975
const ENGINE = 57976
const INSERT_METHOD = 57977
const MAX_ROWS = 57978
const MIN_ROWS = 57979
const PACK_KEYS = 57980
const PASSWORD = 57981
const FIXED = 57982
const DYNAMIC = 57983
const COMPRESSED = 57984
const REDUNDANT = 57985
const COMPACT = 57986
const ROW_FORMAT = 57987
const STATS_AUTO_RECALC = 57988
const STATS_PERSISTENT = 57989
const STATS_SAMPLE_PAGES = 57990
const STORAGE = 57991
const MEMORY = 57992
const DISK = 57993
const PARTITIONS = 57994
const LINEAR = 57995
const RANGE = 57996
const LIST = 57997
const SUBPARTITION = 57998
const SUBPARTITIONS = 57999
const HASH = 58000

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 161,
	676, 161,
	-2, 169,
	-1, 53,
	135, 169,
	176, 169,
	348, 169,
	-2, 523,
	-1, 62,
	36, 802,
	239, 802,
	250, 802,
	285, 816,
	286, 816,
	-2, 804,
	-1, 67,
	241, 840,
	-2, 838,
	-1, 125,
	238, 1502,
	-2, 135,
	-1, 127,
	1, 162,
	676, 162,
	-2, 169,
	-1, 138,
	136, 409,
	244, 409,
	-2, 512,
	-1, 157,
	135, 169,
	176, 169,
	348, 169,
	-2, 532,
	-1, 831,
	87, 1519,
	-2, 1364,
	-1, 832,
	87, 1520,
	221, 1524,
	-2, 1365,
	-1, 833,
	221, 1523,
	-2, 42,
	-1, 912,
	60, 915,
	-2, 930,
	-1, 1000,
	249, 43,
	254, 43,
	-2, 420,
	-1, 1086,
	1, 580,
	676, 580,
	-2, 169,
	-1, 1396,
	221, 1524,
	-2, 1365,
	-1, 1544,
	60, 916,
	-2, 935,
	-1, 1545,
	60, 917,
	-2, 936,
	-1, 1596,
	135, 169,
	176, 169,
	348, 169,
	-2, 459,
	-1, 1679,
	136, 409,
	244, 409,
	-2, 512,
	-1, 1688,
	249, 44,
	254, 44,
	-2, 421,
	-1, 2068,
	221, 1528,
	-2, 1522,
	-1, 2069,
	221, 1524,
	-2, 1520,
	-1, 2168,
	135, 169,
	176, 169,
	348, 169,
	-2, 460,
	-1, 2175,
	26, 190,
	-2, 192,
	-1, 2565,
	78, 98,
	88, 98,
	-2, 994,
	-1, 2634,
	651, 717,
	-2, 691,
	-1, 2804,
	50, 1470,
	-2, 1464,
	-1, 3460,
	651, 717,
	-2, 705,
	-1, 3548,
	90, 649,
	95, 649,
	105, 649,
	178, 649,
	179, 649,
	180, 649,
	181, 649,
	182, 649,
	183, 649,
	184, 649,
	185, 649,
	186, 649,
	187, 649,
	188, 649,
	189, 649,
	190, 649,
	191, 649,
	192, 649,
	193, 649,
	194, 649,
	195, 649,
	196, 649,
	197, 649,
	198, 649,
	199, 649,
	200, 649,
	201, 649,
	202, 649,
	203, 649,
	204, 649,
	205, 649,
	206, 649,
	207, 649,
	208, 649,
	209, 649,
	210, 649,
	211, 649,
	212, 649,
	213, 649,
	214, 649,
	215, 649,
	216, 649,
	217, 649,
	218, 649,
	219, 649,
	-2, 1886,
}

const yyPrivate = 57344

const yyLast = 48257

var yyAct = [...]int{
	1552, 835, 832, 705, 842, 3619, 2165, 3525, 3588, 1599,
	3589, 3441, 3035, 3178, 2954, 3491, 3630, 2116, 3546, 3514,
	2097, 2856, 2863, 3209, 3425, 3373, 3207, 2905, 2914, 2919,
	2916, 2915, 3423, 2913, 2918, 2917, 3208, 2817, 1881, 3165,
	1156, 5, 2465, 2099, 906, 801, 802, 3237, 42, 2820,
	2871, 3413, 684, 928, 2499, 687, 2763, 2821, 198, 3068,
	2818, 198, 2239, 2698, 2934, 2933, 664, 1559, 3074, 715,
	2538, 670, 3242, 2936, 2136, 795, 797, 2815, 2139, 2805,
	3094, 2525, 198, 2059, 2120, 796, 2202, 3060, 834, 2960,
	2599, 2227, 2682, 2600, 1657, 2631, 2207, 198, 1935, 2601,
	2270, 685, 1032, 166, 683, 1102, 2153, 1158, 929, 2550,
	1546, 2141, 43, 961, 2140, 2056, 2517, 1931, 2531, 2501,
	2030, 1950, 1889, 2029, 670, 198, 908, 670, 2064, 2671,
	41, 910, 2248, 913, 152, 1131, 2226, 2128, 1008, 1686,
	2287, 2209, 2592, 990, 995, 1588, 1704, 1568, 2143, 100,
	2567, 104, 931, 697, 1526, 1408, 1954, 1817, 1336, 1321,
	1822, 969, 998, 1908, 1693, 1001, 1785, 2198, 965, 105,
	2224, 970, 1587, 1813, 996, 997, 946, 948, 1573, 919,
	2121, 692, 2065, 2026, 1392, 1368, 1963, 1147, 916, 1880,
	1831, 85, 107, 1650, 2199, 1154, 135, 170, 130, 128,
	915, 129, 99, 136, 1678, 1081, 941, 691, 917, 1412,
	3450, 2624, 98, 84, 3620, 2241, 2242, 2243, 914, 3166,
	2902, 2241, 106, 2654, 2653, 2285, 3476, 2622, 3158, 1770,
	1337, 612, 3572, 936, 940, 674, 3121, 95, 653, 2690,
	2691, 3472, 95, 615, 851, 852, 853, 1416, 3471, 922,
	131, 93, 3477, 1896, 1895, 1894, 1893, 1034, 137, 2,
	1892, 1037, 2924, 1891, 659, 1864, 962, 3212, 1863, 2353,
	1051, 1052, 1053, 1332, 1056, 1057, 1058, 1059, 1012, 988,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 956, 955, 909,
	1045, 119, 1011, 923, 111, 112, 113, 907, 116, 675,
	3212, 125, 987, 677, 194, 95, 678, 606, 2922, 2094,
	2095, 1038, 1041, 1042, 1522, 131, 986, 985, 1337, 984,
	672, 673, 3567, 2497, 1911, 851, 852, 853, 1347, 2801,
	902, 903, 904, 905, 2928, 2644, 912, 954, 799, 800,
	3472, 1054, 193, 2527, 3211, 2274, 2924, 2767, 930, 954,
	799, 800, 979, 2627, 3592, 974, 1353, 1553, 3532, 2921,
	3576, 3574, 958, 3640, 943, 944, 132, 3587, 154, 3610,
	3040, 3039, 2647, 968, 3526, 3426, 2272, 2466, 1901, 175,
	2982, 653, 3369, 131, 3368, 3575, 3573, 3211, 95, 2273,
	679, 3171, 1036, 653, 3172, 3601, 86, 653, 1035, 2218,
	3379, 2362, 2922, 3570, 3190, 3179, 86, 1323, 3515, 88,
	165, 3522, 86, 3455, 2267, 3378, 153, 1940, 3189, 3551,
	2541, 3002, 2212, 1667, 2853, 2854, 1347, 1589, 2928, 1590,
	86, 978, 2160, 2161, 980, 172, 2498, 1343, 173, 2124,
	1335, 654, 1873, 1874, 2852, 2542, 2925, 2689, 2359, 3532,
	3556, 2661, 2662, 983, 2159, 1091, 1092, 1680, 1681, 164,
	163, 192, 2674, 2670, 2576, 1151, 2360, 2575, 3554, 1121,
	2577, 900, 899, 1369, 95, 1333, 2625, 3560, 3561, 3255,
	3442, 1126, 1127, 1109, 95, 2873, 2874, 1094, 1110, 1122,
	95, 1350, 3555, 1351, 1352, 2979, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1378, 1377, 1379, 1380, 1115, 95, 659,
	1322, 981, 2588, 2990, 1109, 2004, 3071, 1823, 653, 1110,
	2732, 2096, 2988, 2354, 2355, 2357, 2356, 1108, 2351, 1107,
	2178, 2177, 983, 653, 975, 1343, 2956, 2534, 2535, 1872,
	2925, 977, 976, 667, 1876, 671, 665, 1080, 2961, 2249,
	3593, 1530, 2672, 653, 2632, 1760, 1585, 2657, 2288, 1055,
	158, 1682, 161, 1531, 1679, 3622, 159, 160, 3401, 2211,
	3402, 3594, 1823, 176, 1786, 2949, 947, 2293, 1142, 1124,
	1125, 1150, 182, 2950, 1123, 2328, 1128, 2329, 2342, 2330,
	981, 1149, 1130, 2872, 654, 650, 1129, 1087, 198, 1761,
	198, 1762, 1116, 198, 198, 2875, 654, 2677, 3160, 3159,
	654, 1996, 1985, 1986, 1987, 1988, 1998, 1989, 1990, 1991,
	2003, 1999, 1992, 1993, 2000, 2001, 2002, 1994, 1995, 1997,
	2331, 2957, 2294, 1061, 2122, 2123, 1060, 1821, 2958, 2290,
	3353, 2252, 670, 633, 670, 670, 982, 613, 2292, 3216,
	991, 3156, 1003, 653, 992, 2137, 631, 1534, 1021, 957,
	951, 949, 992, 3568, 670, 198, 1019, 1030, 1029, 1028,
	1027, 957, 951, 949, 1026, 1025, 1342, 1339, 1340, 1341,
	1346, 1348, 1345, 1024, 1344, 1023, 1018, 2875, 2733, 1138,
	2291, 1140, 1671, 1396, 1338, 2124, 628, 1031, 966, 3641,
	2766, 2360, 966, 1004, 3599, 644, 964, 966, 3634, 167,
	2681, 1814, 1383, 2225, 1105, 942, 1111, 1112, 1113, 1114,
	639, 2678, 1383, 1119, 2278, 982, 1692, 2502, 2504, 1137,
	1139, 654, 638, 642, 1040, 3438, 1665, 2277, 3449, 2623,
	1003, 1152, 1153, 989, 1039, 1810, 654, 1324, 3528, 1404,
	2316, 2312, 2314, 2315, 2313, 2319, 2320, 1048, 1664, 2317,
	2318, 2895, 1010, 1143, 1144, 3155, 654, 1394, 2656, 1663,
	2642, 2626, 614, 1085, 1342, 1339, 1340, 1341, 1346, 1348,
	1345, 3527, 1344, 1586, 848, 1386, 1387, 1388, 1389, 848,
	2590, 1811, 1338, 2271, 162, 1400, 1314, 2659, 2694, 618,
	1661, 620, 634, 611, 656, 1022, 655, 624, 2374, 622,
	626, 635, 627, 1020, 621, 3072, 632, 610, 605, 623,
	636, 637, 641, 645, 646, 647, 643, 640, 648, 616,
	617, 2269, 630, 657, 1691, 1396, 1135, 1315, 1316, 3528,
	1136, 3108, 2215, 1390, 1772, 1771, 1773, 1774, 1775, 3090,
	1141, 3119, 3120, 1790, 2980, 155, 89, 2572, 156, 3210,
	2926, 2927, 848, 3188, 1009, 2684, 654, 1331, 1384, 1385,
	2683, 2646, 3527, 2930, 2684, 950, 2537, 2474, 1799, 2683,
	1827, 1134, 2216, 1520, 1943, 1577, 1485, 950, 168, 2214,
	2122, 2123, 198, 1096, 2503, 180, 670, 670, 2669, 2361,
	2532, 2668, 3210, 2166, 1383, 1554, 1556, 127, 94, 1380,
	2851, 198, 925, 1104, 1414, 2645, 1415, 3559, 94, 1824,
	1825, 1828, 1826, 2217, 94, 1148, 1118, 3632, 983, 1079,
	3633, 670, 3631, 2213, 198, 1827, 188, 1120, 1132, 1832,
	3463, 1033, 94, 1537, 1538, 3151, 670, 1541, 3084, 2718,
	1535, 2289, 910, 198, 2926, 2927, 1418, 1885, 1807, 1093,
	1791, 3558, 1090, 1106, 1132, 3024, 1591, 2930, 1521, 1955,
	1955, 2391, 2615, 3602, 1824, 1825, 1828, 1826, 1351, 1352,
	169, 174, 171, 177, 178, 179, 181, 183, 184, 185,
	186, 670, 1352, 1083, 3251, 1047, 187, 189, 190, 191,
	1964, 1787, 3126, 1788, 1396, 1084, 1789, 2261, 3125, 1539,
	670, 670, 104, 670, 1965, 670, 670, 2256, 670, 670,
	670, 670, 670, 670, 1701, 2268, 1700, 1540, 1690, 2266,
	105, 1396, 1521, 1353, 1396, 670, 1396, 198, 1527, 1145,
	1514, 1491, 1492, 1493, 1494, 1495, 2265, 658, 2264, 1903,
	1905, 1906, 2997, 107, 1021, 1019, 1103, 198, 2300, 2296,
	2298, 2299, 2297, 2303, 2304, 2261, 123, 2301, 2302, 651,
	670, 3595, 198, 1904, 2366, 2367, 2368, 3109, 1698, 921,
	1668, 1669, 1670, 120, 652, 1133, 1833, 670, 1010, 198,
	3636, 1802, 3493, 1800, 1801, 3361, 1805, 1806, 1755, 1082,
	1803, 1804, 1684, 1086, 2263, 1733, 1010, 1555, 1736, 198,
	1738, 1133, 3360, 3431, 3642, 3351, 198, 1558, 1553, 1677,
	909, 982, 907, 3201, 1524, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 670, 1694, 1694, 3494, 1696, 3200,
	1582, 1583, 1780, 1962, 121, 1778, 1737, 1745, 1746, 1536,
	3185, 1010, 3186, 1751, 1752, 1706, 3133, 1707, 3432, 1709,
	1711, 3132, 1695, 1715, 1717, 1719, 1721, 1723, 1350, 1660,
	1351, 1352, 3122, 1794, 2903, 1792, 1793, 1010, 1797, 1798,
	1675, 2891, 1795, 1796, 1687, 2597, 1353, 1673, 1674, 2699,
	1009, 2596, 2595, 1010, 1819, 2221, 1003, 1006, 1007, 2061,
	966, 3643, 1353, 2058, 1000, 1004, 1779, 1353, 1009, 1777,
	1046, 1836, 2060, 1767, 1043, 1781, 122, 1765, 1840, 1741,
	1842, 1843, 1844, 1845, 2418, 999, 846, 1849, 1764, 1666,
	1353, 1763, 1753, 1834, 1835, 1913, 851, 852, 853, 1861,
	1862, 2061, 1747, 1744, 1743, 193, 1353, 1839, 1742, 1914,
	1381, 1382, 1912, 1009, 1846, 1847, 1848, 1815, 1013, 1003,
	1713, 1353, 1101, 1015, 1100, 1553, 2953, 1016, 1014, 132,
	3606, 1553, 1960, 2701, 131, 986, 985, 1766, 984, 1009,
	1318, 1961, 175, 2379, 659, 1003, 1006, 1007, 1017, 966,
	1585, 3604, 1553, 1000, 1004, 1009, 3116, 659, 1838, 3596,
	1013, 1003, 3458, 1353, 3457, 1015, 670, 670, 1353, 1016,
	1014, 1373, 1374, 1375, 1376, 1378, 1377, 1379, 1380, 670,
	1860, 1350, 3435, 1351, 1352, 2581, 3434, 1859, 198, 1375,
	1376, 1378, 1377, 1379, 1380, 2579, 659, 1350, 172, 1351,
	1352, 173, 1350, 110, 1351, 1352, 2711, 2710, 2709, 2237,
	2236, 2703, 3433, 2707, 109, 2702, 108, 2700, 3356, 1353,
	2235, 2234, 2705, 42, 192, 1350, 42, 1351, 1352, 1553,
	2426, 2704, 2233, 2232, 2720, 3340, 670, 2523, 3621, 1938,
	1938, 1350, 1353, 1351, 1352, 3339, 1396, 3538, 1553, 2706,
	2708, 3250, 3536, 1553, 3451, 101, 1350, 670, 1351, 1352,
	3248, 1909, 103, 1396, 1958, 3197, 102, 1353, 1959, 1916,
	1562, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1553, 3583, 1553, 1353, 670, 670,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1355, 1350, 1520,
	1351, 1352, 2022, 1350, 1553, 1351, 1352, 1349, 1553, 2523,
	3521, 1907, 2523, 3501, 2955, 3083, 1563, 1353, 110, 1917,
	1394, 1553, 2428, 1936, 1936, 1519, 3534, 1553, 3387, 109,
	2054, 108, 1349, 1553, 1939, 1518, 176, 1956, 2069, 1517,
	103, 2129, 2130, 2523, 3497, 182, 3484, 1553, 3169, 3448,
	2018, 3410, 1553, 3386, 1350, 2083, 1351, 1352, 3130, 1869,
	1870, 2381, 3364, 1553, 1353, 1369, 85, 2693, 1910, 85,
	1886, 2380, 1554, 2090, 3115, 101, 2066, 1350, 2964, 1351,
	1352, 198, 2523, 3352, 1521, 2962, 102, 670, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1378, 1377, 1379, 1380, 1553,
	3344, 1915, 1350, 3343, 1351, 1352, 2113, 3169, 1553, 3177,
	198, 2523, 3167, 670, 2261, 1553, 2633, 2057, 3088, 1553,
	2439, 1553, 1350, 198, 1351, 1352, 2959, 670, 1942, 2859,
	2069, 198, 2894, 198, 2893, 198, 198, 2606, 1949, 1951,
	1353, 1553, 2108, 2068, 2109, 1353, 2884, 2883, 3408, 1553,
	670, 2593, 1350, 1353, 1351, 1352, 2175, 1966, 1967, 1968,
	1969, 2881, 2882, 2879, 2880, 2611, 2071, 2072, 2066, 2879,
	2878, 1980, 167, 1516, 2860, 2547, 1553, 2174, 2147, 104,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1377, 1379,
	1380, 2360, 2655, 2067, 1656, 2636, 1349, 105, 2862, 1350,
	104, 1351, 1352, 2629, 2630, 2523, 2522, 2112, 2568, 670,
	2222, 1353, 2384, 1553, 1941, 1553, 2857, 1353, 105, 2070,
	2283, 2282, 2073, 2074, 3405, 1553, 95, 2119, 2103, 3391,
	1553, 3085, 2102, 2873, 2874, 2068, 670, 3059, 1553, 3489,
	2858, 2568, 670, 1865, 1829, 2184, 2185, 2186, 2187, 2179,
	2169, 2180, 2181, 2182, 2183, 922, 2151, 1776, 103, 1353,
	1768, 2170, 1758, 2101, 2519, 1754, 1750, 2190, 2191, 2192,
	2193, 2569, 1749, 2864, 2089, 1350, 2111, 1351, 1352, 103,
	1350, 2571, 1351, 1352, 1748, 2134, 2204, 2114, 1350, 670,
	1351, 1352, 2173, 1564, 670, 3052, 1553, 2210, 670, 670,
	2250, 3049, 1553, 2132, 2569, 1656, 1655, 1597, 1596, 2157,
	1146, 2156, 2155, 2816, 2360, 956, 955, 1553, 2846, 3462,
	2016, 2539, 2172, 2171, 3083, 2523, 2547, 2546, 2360, 3044,
	2027, 1353, 2881, 2539, 2262, 2789, 198, 2384, 1353, 2158,
	2384, 2872, 109, 198, 1553, 2220, 1350, 2247, 1351, 1352,
	2439, 168, 1350, 2875, 1351, 1352, 2906, 2415, 180, 2414,
	2261, 2244, 198, 198, 2127, 2201, 198, 1557, 198, 2205,
	2092, 1012, 1941, 3134, 198, 1887, 1871, 2223, 2219, 1809,
	2255, 1694, 2547, 2258, 198, 2259, 1584, 2231, 2194, 2196,
	2197, 198, 2261, 2547, 1350, 1011, 1351, 1352, 2091, 188,
	2275, 2254, 994, 2253, 2027, 3083, 2205, 2257, 1369, 2279,
	993, 1349, 3564, 2280, 2281, 3047, 1553, 3504, 1353, 198,
	2276, 123, 3012, 1553, 3135, 3136, 3137, 3375, 670, 1560,
	2430, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1377,
	1379, 1380, 3341, 169, 174, 171, 177, 178, 179, 181,
	183, 184, 185, 186, 3262, 1369, 2286, 2373, 3150, 187,
	189, 190, 191, 3147, 3128, 1353, 1350, 3007, 1351, 1352,
	3006, 1658, 2861, 1350, 2203, 1351, 1352, 2951, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1378, 1377, 1379, 1380, 2908,
	2344, 2345, 2904, 2377, 1396, 2347, 2069, 2382, 2637, 95,
	2385, 2603, 2386, 3597, 2348, 2200, 1353, 2393, 2195, 1909,
	2189, 2395, 2396, 2397, 1369, 2188, 2370, 2388, 2372, 1783,
	1689, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2340, 1685, 1353, 2378, 2334, 1652, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1378, 1377, 1379, 1380, 1085, 2995,
	1553, 124, 1353, 1350, 3376, 1351, 1352, 2419, 2420, 2421,
	2422, 2423, 2602, 2425, 3095, 3096, 2371, 2427, 2376, 2218,
	1353, 2432, 2433, 2106, 2434, 3616, 3614, 2437, 3590, 2438,
	3470, 2350, 3396, 2441, 1353, 3098, 2900, 2445, 3466, 1353,
	2387, 2450, 2451, 2452, 2453, 1729, 2358, 2899, 2898, 1867,
	1350, 2068, 1351, 1352, 2464, 3101, 2467, 2468, 2816, 2616,
	2603, 1353, 2335, 3100, 2470, 2472, 1910, 2494, 1553, 2835,
	2834, 2475, 2476, 2477, 2478, 2479, 2369, 1353, 3377, 2838,
	2118, 1353, 2486, 2487, 2839, 2488, 2492, 1553, 2491, 2493,
	2113, 1350, 2495, 1351, 1352, 198, 1730, 1731, 1732, 1561,
	1353, 2067, 2507, 198, 2865, 3446, 2110, 2836, 2869, 1938,
	2390, 1868, 2837, 670, 3089, 2868, 1353, 2794, 1350, 3348,
	1351, 1352, 1353, 3382, 670, 1371, 1372, 1373, 1374, 1375,
	1376, 1378, 1377, 1379, 1380, 3076, 2793, 1350, 3430, 1351,
	1352, 2806, 2808, 3075, 2506, 2471, 1553, 1353, 198, 2870,
	2809, 3241, 1353, 198, 2866, 1350, 3243, 1351, 1352, 2867,
	926, 2454, 1553, 3079, 1808, 2446, 1553, 2424, 927, 1350,
	1566, 1351, 1352, 2803, 1350, 2543, 1351, 1352, 898, 2877,
	2586, 3138, 42, 1050, 2607, 3152, 1353, 1964, 2509, 680,
	2511, 2561, 1049, 1936, 2563, 2973, 1350, 1725, 1351, 1352,
	3103, 1965, 101, 2508, 2524, 2602, 3054, 1353, 2840, 103,
	2556, 2557, 1350, 102, 1351, 1352, 1350, 2687, 1351, 1352,
	1317, 670, 2643, 2520, 2562, 132, 3081, 198, 3139, 3140,
	3141, 3050, 103, 1353, 198, 1350, 1565, 1351, 1352, 2129,
	2130, 1527, 2533, 1353, 1726, 1727, 1728, 2496, 670, 3628,
	1353, 1350, 2896, 1351, 1352, 670, 1353, 1350, 2338, 1351,
	1352, 2516, 3543, 2628, 670, 2589, 2591, 3447, 3371, 2521,
	3022, 2876, 2582, 2566, 1353, 2536, 1521, 2560, 1353, 3232,
	1396, 3231, 1350, 2115, 1351, 1352, 2652, 1350, 2398, 1351,
	1352, 3018, 1353, 198, 198, 198, 198, 198, 932, 1353,
	2210, 938, 938, 2570, 2573, 2413, 2327, 101, 1353, 934,
	935, 2580, 108, 2326, 2605, 2583, 2325, 3004, 102, 2608,
	2609, 1350, 2792, 1351, 1352, 2324, 1353, 3003, 3061, 3230,
	2791, 2364, 2594, 2323, 3000, 110, 1353, 198, 198, 2322,
	2321, 2598, 1350, 2311, 1351, 1352, 109, 2310, 108, 109,
	2604, 3238, 2309, 2308, 2650, 2307, 3418, 103, 2490, 2306,
	2612, 2305, 2489, 198, 2613, 2617, 2618, 2619, 1350, 3417,
	1351, 1352, 2649, 3399, 3249, 1353, 2485, 3247, 1350, 1677,
	1351, 1352, 1353, 2484, 670, 1350, 3246, 1351, 1352, 3239,
	3148, 1350, 2483, 1351, 1352, 3080, 2638, 2639, 3069, 2722,
	2723, 2724, 2725, 2726, 3078, 2909, 110, 2245, 2648, 1350,
	2482, 1351, 1352, 1350, 1672, 1351, 1352, 109, 2731, 108,
	2481, 1353, 110, 933, 2539, 3618, 3617, 1350, 2697, 1351,
	1352, 670, 3617, 109, 1350, 3220, 1351, 1352, 2519, 2734,
	2673, 2416, 2104, 1350, 2712, 1351, 1352, 1578, 1570, 2675,
	114, 115, 3618, 3436, 3114, 924, 2676, 2679, 2727, 2480,
	123, 1350, 3, 1351, 1352, 1369, 2469, 97, 1365, 670,
	1366, 1350, 1884, 1351, 1352, 10, 2696, 670, 2695, 2685,
	1882, 1, 2686, 9, 1367, 1381, 1382, 1364, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1378, 1377, 1379, 1380, 2713,
	1883, 1098, 1820, 8, 1320, 2463, 2715, 1319, 670, 3118,
	1350, 2768, 1351, 1352, 3553, 2773, 1353, 1350, 629, 1351,
	1352, 2093, 198, 1525, 3591, 3549, 670, 2770, 2552, 2555,
	2556, 2557, 2553, 3550, 2554, 2558, 1769, 1759, 3095, 3096,
	670, 3180, 2028, 3372, 1396, 2825, 2736, 670, 670, 1396,
	198, 198, 198, 198, 198, 2057, 1350, 2057, 1351, 1352,
	2742, 2912, 198, 2843, 2251, 2147, 1353, 3146, 198, 2208,
	198, 1002, 157, 198, 198, 198, 2167, 2168, 2773, 2752,
	2753, 2754, 2755, 2756, 2828, 2769, 2845, 2771, 2796, 2822,
	913, 3517, 2813, 2147, 2147, 2147, 2147, 2147, 2797, 118,
	2462, 959, 2772, 2552, 2555, 2556, 2557, 2553, 117, 2554,
	2558, 1005, 1117, 2147, 2246, 3170, 2147, 2587, 2819, 198,
	2784, 2176, 1603, 2819, 1601, 1602, 1600, 1605, 1604, 2981,
	2417, 2798, 670, 2795, 3023, 1396, 1875, 666, 2559, 660,
	670, 2785, 2786, 2787, 195, 198, 2847, 2810, 2811, 2848,
	2461, 1350, 2788, 1351, 1352, 2932, 1592, 915, 1571, 198,
	2830, 2831, 2829, 2833, 3036, 2832, 1044, 619, 2841, 2885,
	104, 2284, 625, 1401, 1866, 914, 2790, 2574, 2849, 953,
	1819, 198, 945, 2105, 198, 2855, 2510, 952, 105, 3349,
	2824, 3073, 2827, 2975, 2802, 2888, 1353, 2804, 2526, 2886,
	2887, 1350, 2807, 1351, 1352, 2889, 2890, 2800, 2714, 2911,
	3429, 3240, 3502, 2992, 2993, 2994, 2584, 2996, 2998, 1353,
	2940, 1567, 3043, 1353, 2389, 1953, 1391, 1353, 2210, 2144,
	2939, 3005, 1353, 2931, 3215, 1902, 3009, 3010, 3011, 3013,
	3014, 3015, 3016, 2910, 2946, 3017, 689, 3019, 3020, 3021,
	688, 1353, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032,
	3033, 3034, 686, 2963, 670, 2965, 2966, 2744, 2512, 2746,
	3041, 2969, 2968, 3045, 2540, 3046, 3048, 1356, 3051, 3053,
	2460, 3055, 3056, 3057, 3058, 2757, 2758, 2759, 2760, 3064,
	2986, 2971, 2972, 198, 2983, 2984, 2977, 2985, 2976, 836,
	2987, 1353, 2989, 2459, 2991, 2500, 3038, 2458, 1579, 2551,
	2549, 2457, 1353, 3042, 2548, 2336, 2456, 2152, 3097, 3093,
	3545, 2146, 2142, 2518, 3086, 3087, 787, 786, 3091, 698,
	690, 1350, 1353, 1351, 1352, 2455, 682, 785, 784, 1353,
	3111, 2938, 3529, 2658, 2952, 2660, 1353, 2585, 2948, 198,
	1334, 1543, 676, 1353, 1350, 973, 1351, 1352, 1350, 2978,
	1351, 1352, 1350, 3453, 1351, 1352, 3067, 1350, 1353, 1351,
	1352, 1354, 2363, 3065, 3062, 3063, 3001, 1542, 198, 1983,
	1984, 3460, 3070, 2920, 3077, 2449, 1350, 3164, 1351, 1352,
	2901, 2634, 2147, 2238, 70, 3082, 2448, 46, 198, 3092,
	1409, 198, 198, 198, 3424, 1353, 3490, 783, 780, 3217,
	3102, 670, 670, 3099, 1353, 3218, 2447, 3219, 3106, 3107,
	3104, 2764, 2765, 2444, 1353, 3105, 3153, 3154, 1353, 3112,
	2443, 3473, 3474, 3113, 3168, 2940, 1350, 2442, 1351, 1352,
	779, 3475, 1353, 3174, 3175, 2939, 2011, 1350, 1330, 1351,
	1352, 1327, 2440, 1551, 1547, 3566, 1877, 1353, 670, 670,
	670, 670, 96, 3129, 37, 3131, 36, 1350, 1548, 1351,
	1352, 35, 3123, 3124, 1350, 34, 1351, 1352, 33, 3187,
	27, 1350, 3191, 1351, 1352, 26, 25, 24, 1350, 2436,
	1351, 1352, 23, 1653, 1654, 1550, 20, 1549, 2435, 30,
	22, 21, 19, 1350, 18, 1351, 1352, 2923, 2431, 3202,
	3586, 3627, 2429, 126, 55, 3176, 52, 50, 134, 133,
	53, 49, 1088, 47, 3206, 3157, 2394, 32, 31, 3161,
	3162, 3163, 1551, 1547, 17, 16, 3214, 15, 14, 13,
	1350, 2383, 1351, 1352, 3221, 12, 11, 1548, 7, 1350,
	6, 1351, 1352, 40, 39, 3196, 29, 38, 28, 1350,
	4, 1351, 1352, 1350, 2621, 1351, 1352, 198, 2240, 3192,
	0, 0, 1544, 1545, 1550, 0, 1549, 1350, 0, 1351,
	1352, 0, 0, 0, 0, 3235, 1396, 0, 3213, 0,
	0, 670, 1350, 670, 1351, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 3256, 3236, 0, 0,
	0, 0, 2822, 42, 0, 0, 2822, 3260, 0, 3258,
	0, 0, 3245, 3254, 3252, 3244, 0, 0, 0, 0,
	0, 0, 847, 670, 0, 87, 0, 0, 0, 0,
	2819, 0, 1659, 0, 0, 3363, 198, 0, 3350, 670,
	3268, 0, 0, 0, 3370, 3265, 3266, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 3380, 3381, 0, 3383, 0, 3384,
	3385, 0, 3264, 3354, 3388, 3389, 3390, 3362, 3392, 3395,
	3345, 3347, 0, 3346, 0, 0, 0, 1938, 3366, 0,
	3374, 0, 0, 0, 3404, 3406, 3407, 3409, 3411, 3412,
	3414, 3394, 670, 0, 3367, 0, 670, 670, 911, 0,
	87, 0, 0, 0, 3393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 911,
	3398, 3357, 3358, 3359, 0, 670, 0, 0, 3444, 0,
	0, 0, 0, 0, 3400, 0, 0, 972, 3403, 0,
	3440, 0, 0, 0, 3422, 3419, 3420, 0, 0, 0,
	3421, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 1936, 2822, 0, 0, 3437, 0, 0, 0, 0,
	3443, 3397, 0, 0, 3439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3204, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3445,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3464, 3469, 0, 0, 0, 0, 0,
	3452, 3456, 0, 0, 3459, 0, 0, 0, 0, 0,
	3461, 0, 0, 0, 3485, 0, 0, 42, 0, 0,
	3486, 3487, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1396,
	0, 670, 3498, 3479, 0, 0, 3480, 0, 0, 0,
	0, 0, 0, 0, 0, 3488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 670, 0, 3523, 3524,
	0, 0, 0, 0, 3495, 0, 0, 3530, 3505, 3531,
	0, 0, 3533, 3535, 3537, 0, 3503, 670, 3516, 3508,
	3513, 3510, 3509, 42, 3507, 3512, 3511, 3500, 0, 0,
	0, 198, 670, 3374, 3518, 0, 0, 3565, 0, 0,
	0, 0, 0, 2819, 3541, 0, 0, 0, 0, 3544,
	0, 0, 0, 3562, 3552, 3557, 0, 0, 3530, 0,
	3531, 0, 0, 0, 3571, 0, 3569, 0, 0, 1897,
	1898, 1899, 1900, 0, 0, 670, 3582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3585, 3580, 0,
	0, 0, 0, 0, 3428, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3603, 3605,
	3607, 0, 3598, 3600, 670, 1404, 670, 0, 1944, 1945,
	0, 1938, 3611, 1947, 3608, 938, 938, 1952, 3615, 3613,
	0, 1957, 3609, 0, 3530, 0, 3531, 0, 0, 3626,
	3623, 0, 0, 0, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 3629, 3638, 3639, 3637, 2005, 2006,
	2007, 2008, 2009, 2010, 2012, 3635, 2017, 0, 2019, 2020,
	2021, 0, 2023, 2024, 2025, 1938, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 3394,
	2055, 3645, 2062, 2063, 938, 1936, 938, 938, 938, 938,
	938, 3646, 3647, 0, 0, 3612, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 0, 2084, 2085, 2086, 2087, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3468, 0, 0, 0,
	0, 0, 0, 0, 3478, 0, 0, 0, 0, 1936,
	0, 0, 0, 938, 0, 0, 0, 0, 0, 3644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2125, 2126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 1155, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 911, 1393, 1398, 1399, 0, 1402, 0, 1403,
	1405, 1406, 1407, 0, 1410, 1411, 1413, 1413, 0, 1413,
	1417, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 0, 0, 0,
	0, 1484, 0, 1486, 1487, 1488, 1489, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 1417, 1417, 1417,
	1417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 3286, 3288, 3287, 3305, 3306, 3307, 3308,
	3309, 3310, 3311, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	911, 0, 0, 0, 911, 0, 0, 0, 0, 911,
	0, 132, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 175, 0, 173, 0, 2392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2399, 2400, 2401, 2402,
	0, 0, 141, 142, 164, 163, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	173, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3300, 3301, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 139, 161, 146, 138,
	0, 159, 160, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 147, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 150, 148, 143, 144, 145, 149, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 1569, 0, 0,
	0, 0, 0, 151, 803, 0, 716, 807, 718, 804,
	805, 0, 714, 717, 806, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 736, 3285, 3289, 3290, 3291, 3302, 3303, 3304, 3312,
	3314, 768, 3313, 3315, 3316, 3317, 3320, 3321, 3322, 3323,
	3318, 3319, 3324, 3269, 3273, 3270, 3271, 3272, 3284, 3274,
	3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3325,
	3326, 3327, 3328, 3329, 3330, 3295, 3299, 3298, 3296, 3297,
	3293, 3294, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 808, 0, 809, 0, 0, 813,
	0, 0, 0, 815, 814, 0, 816, 782, 781, 0,
	0, 810, 811, 0, 812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 1155, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 87, 0, 0, 649, 0, 0, 0,
	0, 0, 669, 193, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 3331,
	3332, 3333, 3334, 3335, 3336, 3337, 3338, 132, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 2692, 0, 0, 0, 0,
	155, 165, 0, 156, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 938, 0, 0, 2716, 2717, 0,
	0, 2719, 0, 0, 2721, 0, 172, 0, 0, 173,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 2728, 2729, 2730, 0, 1680, 1681,
	164, 163, 192, 0, 0, 0, 2735, 0, 0, 2737,
	2738, 2739, 0, 0, 0, 2740, 2741, 0, 0, 2031,
	2743, 0, 0, 2745, 0, 0, 2747, 2748, 2749, 2750,
	0, 188, 0, 0, 2751, 2031, 2031, 2031, 2031, 2031,
	168, 0, 0, 0, 0, 0, 3584, 180, 0, 0,
	0, 0, 0, 938, 0, 0, 1620, 0, 0, 0,
	2774, 2775, 2776, 2777, 2778, 2779, 0, 0, 0, 2780,
	2781, 0, 2782, 0, 2783, 169, 174, 171, 177, 178,
	179, 181, 183, 184, 185, 186, 0, 0, 188, 0,
	0, 187, 189, 190, 191, 0, 0, 0, 0, 0,
	0, 158, 1682, 161, 0, 1679, 0, 159, 160, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 2814,
	0, 0, 0, 182, 0, 2145, 0, 0, 0, 0,
	0, 0, 169, 174, 171, 177, 178, 179, 181, 183,
	184, 185, 186, 0, 2844, 0, 0, 0, 187, 189,
	190, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 972,
	1608, 0, 0, 0, 0, 2907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	167, 0, 0, 86, 44, 45, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	901, 0, 0, 92, 0, 0, 0, 48, 77, 78,
	0, 75, 79, 0, 1621, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 3008, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	1637, 1638, 1639, 1640, 1641, 1642, 0, 1643, 1644, 1646,
	1647, 1645, 1648, 1649, 1622, 1623, 1624, 1625, 1606, 1607,
	1635, 0, 1609, 0, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 0, 0, 1619, 1626, 1627, 1628, 1629,
	0, 1630, 1631, 1632, 1633, 0, 155, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 2365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 1313, 669, 669, 0, 0, 51,
	54, 57, 56, 59, 0, 74, 0, 188, 83, 80,
	0, 0, 0, 2375, 3149, 669, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 91, 90, 0, 0, 72, 73, 58,
	0, 0, 0, 0, 1395, 81, 82, 3173, 0, 0,
	0, 169, 174, 171, 177, 178, 179, 181, 183, 184,
	185, 186, 0, 0, 0, 0, 0, 187, 189, 190,
	191, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 65, 0, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 3193, 0, 3194, 0, 0,
	3195, 0, 0, 3198, 3199, 0, 0, 0, 0, 0,
	0, 0, 3203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3205, 0, 0, 0, 0, 0, 0, 2473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3222, 788, 0, 3223, 0, 3224,
	3225, 0, 3226, 0, 3227, 0, 0, 0, 0, 3228,
	0, 2505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 0, 911, 0,
	0, 0, 0, 0, 3253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3261, 0, 0, 3263, 2544,
	2545, 0, 0, 0, 0, 0, 0, 0, 2145, 0,
	3267, 911, 2564, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 3342, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 669, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 963, 0, 0,
	971, 0, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 1089, 0, 1095, 0,
	0, 1097, 1099, 0, 0, 2641, 0, 0, 0, 0,
	0, 0, 669, 0, 1688, 0, 0, 0, 3427, 0,
	0, 0, 1697, 0, 0, 1395, 1699, 0, 0, 1702,
	1703, 669, 669, 0, 669, 0, 669, 669, 0, 669,
	669, 669, 669, 669, 669, 0, 0, 0, 0, 0,
	0, 0, 1395, 1734, 1735, 1395, 669, 1395, 0, 1740,
	0, 0, 0, 1326, 1608, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 3467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3481, 0, 0, 3482, 0,
	3483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2761,
	0, 0, 0, 1634, 1637, 1638, 1639, 1640, 1641, 1642,
	0, 1643, 1644, 1646, 1647, 1645, 1648, 1649, 1622, 1623,
	1624, 1625, 1606, 1607, 1635, 0, 1609, 0, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 0, 0, 1619,
	1626, 1627, 1628, 1629, 0, 1630, 1631, 1632, 1633, 0,
	0, 0, 2145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3563, 2823, 0, 87, 0, 0,
	2145, 2145, 2145, 2145, 2145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 0, 0, 2145, 3577, 0, 3578, 0, 3579, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 669, 0,
	0, 0, 1581, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2929, 0, 0,
	0, 0, 0, 0, 3624, 0, 3625, 2937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 1395, 0, 0,
	0, 0, 0, 0, 0, 0, 1946, 0, 669, 0,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1157, 0, 1157, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 0, 0, 95, 0, 0, 849, 0, 0,
	0, 837, 850, 851, 852, 853, 838, 0, 669, 839,
	840, 0, 841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 854, 855, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 2145,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3110, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 2941, 2942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 2228, 2229, 2230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 0, 0, 669, 1697, 0, 0, 1697, 2943, 1697,
	0, 0, 0, 0, 0, 2260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1890, 0, 0, 1532,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 669, 0, 0, 0, 669,
	669, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 2944, 2945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3229, 0, 3233, 3234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 963, 0, 0, 0, 2823, 0,
	87, 0, 2823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 1705, 0, 1705, 0, 1705, 1705,
	0, 1714, 1705, 1705, 1705, 1705, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 807,
	0, 804, 805, 0, 0, 0, 806, 0, 789, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3355,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 609, 0, 0,
	0, 0, 0, 0, 0, 1395, 0, 669, 0, 0,
	0, 2131, 0, 0, 0, 0, 0, 1157, 609, 2135,
	0, 2138, 0, 0, 1890, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2823, 0,
	939, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 1157,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 0, 0, 0, 0,
	2578, 2295, 0, 0, 0, 3499, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2332, 2333, 0, 0, 2337, 0, 0, 0, 0, 1932,
	0, 0, 2341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2343, 0, 0, 0, 849, 0, 2061, 2346,
	1948, 850, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2349, 0, 669,
	0, 1981, 1982, 0, 0, 0, 669, 0, 0, 0,
	1697, 1697, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3581, 0, 0, 0,
	0, 1395, 2651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 0, 0, 0, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2117, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	1575, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 971, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 609, 0, 609, 0, 0, 609,
	609, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	0, 0, 0, 0, 0, 971, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 0, 0,
	0, 2565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 1395, 0, 0, 669, 669,
	1395, 609, 963, 0, 0, 0, 0, 1932, 0, 0,
	0, 1932, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2614, 0, 0, 0, 0,
	0, 2892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 1395, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2663, 2664, 2665, 2666, 2667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2352, 0, 0, 0, 2974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1890, 2680, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 669, 0, 0, 0, 1397, 0, 0,
	1397, 0, 1397, 609, 0, 0, 2513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2528, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 669,
	669, 669, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 2897, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 1851, 609, 609, 609, 609, 609, 609, 609,
	849, 0, 0, 2935, 0, 850, 0, 0, 0, 0,
	0, 0, 0, 0, 2610, 1937, 0, 2947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2967,
	0, 2117, 2970, 0, 0, 0, 0, 0, 2635, 0,
	0, 0, 0, 0, 0, 0, 0, 2640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1395, 0, 0,
	0, 0, 669, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	0, 0, 0, 0, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 3066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 669, 669, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 3142, 0, 0, 3143,
	3144, 3145, 2762, 0, 939, 939, 0, 0, 0, 1397,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2799,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	2826, 1705, 0, 939, 1818, 939, 939, 939, 939, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	1395, 0, 669, 0, 0, 963, 0, 0, 0, 609,
	0, 0, 0, 2117, 0, 0, 1818, 609, 0, 609,
	0, 609, 2154, 0, 0, 0, 669, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 849, 669, 0, 0, 837, 850, 851, 852,
	853, 838, 0, 0, 839, 840, 0, 841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 846, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 3037, 2941, 2942,
	0, 0, 0, 0, 0, 669, 0, 669, 0, 0,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 609, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 2943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 609,
	0, 0, 609, 0, 2339, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 0, 0, 2117, 2117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 0, 0, 2944, 2945, 0, 0, 3465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3181, 3182, 3183, 3184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3257, 0, 3259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2117, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 3365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 0, 0, 0, 3415,
	3415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 0, 0,
	2620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1397, 2117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	609, 609, 609, 609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 3492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3496, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 3492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3037, 609, 3547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 1397, 609, 609, 609, 609,
	609, 0, 0, 0, 0, 0, 0, 0, 2842, 0,
	0, 0, 0, 0, 1756, 0, 609, 0, 0, 609,
	2850, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 609, 609, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 1291, 1276, 511, 0,
	1219, 1294, 1188, 1207, 1304, 1210, 1213, 1255, 1167, 1233,
	409, 1204, 1160, 1192, 1162, 1199, 1163, 1190, 1221, 267,
	1187, 1278, 1237, 1293, 360, 264, 1169, 1193, 423, 1209,
	205, 1257, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 1300, 364, 1243, 0,
	490, 394, 0, 0, 0, 1223, 1282, 1231, 1269, 1218,
	1256, 1177, 1242, 1295, 1205, 1252, 1296, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 1756, 0, 3519, 659,
	0, 0, 0, 0, 3520, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 609, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 1201, 1249, 1290, 1202,
	1251, 262, 317, 269, 261, 516, 1301, 1281, 1166, 1230,
	1289, 0, 0, 228, 1292, 1225, 0, 1254, 0, 1307,
	1161, 1245, 0, 1164, 1168, 1303, 1285, 1196, 272, 0,
	0, 0, 0, 0, 0, 0, 1222, 1232, 1266, 1270,
	1216, 0, 0, 0, 0, 1397, 0, 0, 1194, 0,
	1241, 0, 0, 0, 1173, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 1176, 0, 1195, 1267, 1756, 1159, 294,
	1170, 395, 254, 0, 447, 1274, 1284, 1217, 558, 1288,
	1215, 1214, 1261, 1174, 1280, 1208, 359, 1172, 326, 200,
	224, 0, 1206, 405, 455, 467, 1279, 1191, 1200, 252,
	1198, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 1240, 1259, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 581, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 567, 576, 212, 500, 531, 238, 477, 0,
	0, 583, 246, 497, 214, 528, 496, 387, 322, 323,
	213, 0, 451, 265, 290, 0, 0, 255, 408, 525,
	526, 253, 584, 227, 552, 219, 1171, 551, 401, 520,
	529, 388, 377, 218, 527, 386, 376, 330, 349, 350,
	277, 303, 442, 369, 443, 302, 304, 397, 396, 398,
	207, 540, 0, 208, 0, 492, 541, 585, 233, 234,
	236, 1186, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 441, 437, 446, 1275, 515, 534, 546, 557, 563,
	564, 566, 568, 569, 570, 571, 577, 575, 572, 573,
	574, 400, 307, 488, 329, 367, 1264, 1306, 418, 466,
	239, 538, 489, 1309, 1310, 1311, 1312, 1181, 1185, 1179,
	1246, 1180, 1235, 1236, 1182, 1297, 1298, 1299, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 0, 1268, 1175, 0,
	1183, 1184, 1277, 1286, 1287, 604, 378, 479, 535, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	514, 308, 215, 216, 217, 507, 508, 509, 510, 549,
	550, 554, 456, 457, 458, 459, 289, 544, 305, 462,
	461, 327, 328, 373, 444, 1239, 199, 220, 362, 1302,
	448, 285, 582, 548, 543, 206, 222, 1178, 259, 1189,
	1197, 0, 1203, 1211, 1212, 1224, 1226, 1227, 1228, 1229,
	1247, 1248, 1250, 1258, 1260, 1263, 1265, 1272, 1283, 1305,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 431, 432, 434, 436, 438, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 522, 524, 537, 555,
	561, 474, 297, 298, 439, 440, 310, 311, 579, 580,
	296, 532, 562, 530, 578, 556, 433, 372, 1238, 1308,
	1244, 375, 278, 301, 316, 1253, 547, 495, 226, 460,
	287, 250, 1271, 1273, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 453, 240,
	478, 502, 503, 504, 506, 389, 263, 426, 1234, 1262,
	370, 512, 513, 312, 390, 0, 0, 0, 1291, 1276,
	511, 0, 1219, 1294, 1188, 1207, 1304, 1210, 1213, 1255,
	1167, 1233, 409, 1204, 1160, 1192, 1162, 1199, 1163, 1190,
	1221, 267, 1187, 1278, 1237, 1293, 360, 264, 1169, 1193,
	423, 1209, 205, 1257, 480, 251, 371, 368, 519, 279,
	270, 266, 249, 313, 379, 421, 501, 415, 1300, 364,
	1243, 0, 490, 394, 0, 0, 0, 1223, 1282, 1231,
	1269, 1218, 1256, 1177, 1242, 1295, 1205, 1252, 1296, 319,
	247, 321, 204, 406, 491, 283, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 1201, 1249,
	1290, 1202, 1251, 262, 317, 269, 261, 516, 1301, 1281,
	1166, 1230, 1289, 0, 0, 228, 1292, 1225, 0, 1254,
	0, 1307, 1161, 1245, 0, 1164, 1168, 1303, 1285, 1196,
	272, 0, 0, 0, 0, 0, 0, 0, 1222, 1232,
	1266, 1270, 1216, 0, 0, 0, 0, 0, 2851, 0,
	1194, 0, 1241, 0, 0, 0, 1173, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 1176, 0, 1195, 1267, 0,
	1159, 294, 1170, 395, 254, 0, 447, 1274, 1284, 1217,
	558, 1288, 1215, 1214, 1261, 1174, 1280, 1208, 359, 1172,
	326, 200, 224, 0, 1206, 405, 455, 467, 1279, 1191,
	1200, 252, 1198, 465, 419, 536, 232, 281, 452, 425,
	463, 435, 284, 1240, 1259, 464, 366, 521, 445, 533,
	559, 560, 260, 399, 545, 505, 553, 581, 225, 257,
	413, 498, 539, 487, 391, 517, 518, 325, 486, 292,
	203, 363, 565, 223, 473, 365, 241, 230, 523, 542,
	286, 450, 429, 430, 567, 576, 212, 500, 531, 238,
	477, 0, 0, 583, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 525, 526, 253, 584, 227, 552, 219, 1171, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	349, 350, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 585,
	233, 234, 236, 1186, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 1275, 515, 534, 546,
	557, 563, 564, 566, 568, 569, 570, 571, 577, 575,
	572, 573, 574, 400, 307, 488, 329, 367, 1264, 1306,
	418, 466, 239, 538, 489, 1309, 1310, 1311, 1312, 1181,
	1185, 1179, 1246, 1180, 1235, 1236, 1182, 1297, 1298, 1299,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 0, 1268,
	1175, 0, 1183, 1184, 1277, 1286, 1287, 604, 378, 479,
	535, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 514, 308, 215, 216, 217, 507, 508, 509,
	510, 549, 550, 554, 456, 457, 458, 459, 289, 544,
	305, 462, 461, 327, 328, 373, 444, 1239, 199, 220,
	362, 1302, 448, 285, 582, 548, 543, 206, 222, 1178,
	259, 1189, 1197, 0, 1203, 1211, 1212, 1224, 1226, 1227,
	1228, 1229, 1247, 1248, 1250, 1258, 1260, 1263, 1265, 1272,
	1283, 1305, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 297, 298, 439, 440, 310, 311,
	579, 580, 296, 532, 562, 530, 578, 556, 433, 372,
	1238, 1308, 1244, 375, 278, 301, 316, 1253, 547, 495,
	226, 460, 287, 250, 1271, 1273, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	1234, 1262, 370, 512, 513, 312, 390, 0, 0, 0,
	1291, 1276, 511, 0, 1219, 1294, 1188, 1207, 1304, 1210,
	1213, 1255, 1167, 1233, 409, 1204, 1160, 1192, 1162, 1199,
	1163, 1190, 1221, 267, 1187, 1278, 1237, 1293, 360, 264,
	1169, 1193, 423, 1209, 205, 1257, 480, 251, 371, 368,
	519, 279, 270, 266, 249, 313, 379, 421, 501, 415,
	1300, 364, 1243, 0, 490, 394, 0, 0, 0, 1223,
	1282, 1231, 1269, 1218, 1256, 1177, 1242, 1295, 1205, 1252,
	1296, 319, 247, 321, 204, 406, 491, 283, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	1201, 1249, 1290, 1202, 1251, 262, 317, 269, 261, 516,
	1301, 1281, 1166, 1230, 1289, 0, 0, 228, 1292, 1225,
	0, 1254, 0, 1307, 1161, 1245, 0, 1164, 1168, 1303,
	1285, 1196, 272, 0, 0, 0, 0, 0, 0, 0,
	1222, 1232, 1266, 1270, 1216, 0, 0, 0, 0, 0,
	2812, 0, 1194, 0, 1241, 0, 0, 0, 1173, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 1176, 0, 1195,
	1267, 0, 1159, 294, 1170, 395, 254, 0, 447, 1274,
	1284, 1217, 558, 1288, 1215, 1214, 1261, 1174, 1280, 1208,
	359, 1172, 326, 200, 224, 0, 1206, 405, 455, 467,
	1279, 1191, 1200, 252, 1198, 465, 419, 536, 232, 281,
	452, 425, 463, 435, 284, 1240, 1259, 464, 366, 521,
	445, 533, 559, 560, 260, 399, 545, 505, 553, 581,
	225, 257, 413, 498, 539, 487, 391, 517, 518, 325,
	486, 292, 203, 363, 565, 223, 473, 365, 241, 230,
	523, 542, 286, 450, 429, 430, 567, 576, 212, 500,
	531, 238, 477, 0, 0, 583, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 584, 227, 552, 219,
	1171, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 585, 233, 234, 236, 1186, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 1275, 515,
	534, 546, 557, 563, 564, 566, 568, 569, 570, 571,
	577, 575, 572, 573, 574, 400, 307, 488, 329, 367,
	1264, 1306, 418, 466, 239, 538, 489, 1309, 1310, 1311,
	1312, 1181, 1185, 1179, 1246, 1180, 1235, 1236, 1182, 1297,
	1298, 1299, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	0, 1268, 1175, 0, 1183, 1184, 1277, 1286, 1287, 604,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 1239,
	199, 220, 362, 1302, 448, 285, 582, 548, 543, 206,
	222, 1178, 259, 1189, 1197, 0, 1203, 1211, 1212, 1224,
	1226, 1227, 1228, 1229, 1247, 1248, 1250, 1258, 1260, 1263,
	1265, 1272, 1283, 1305, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 579, 580, 296, 532, 562, 530, 578, 556,
	433, 372, 1238, 1308, 1244, 375, 278, 301, 316, 1253,
	547, 495, 226, 460, 287, 250, 1271, 1273, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 1234, 1262, 370, 512, 513, 312, 390, 0,
	0, 0, 1291, 1276, 511, 0, 1219, 1294, 1188, 1207,
	1304, 1210, 1213, 1255, 1167, 1233, 409, 1204, 1160, 1192,
	1162, 1199, 1163, 1190, 1221, 267, 1187, 1278, 1237, 1293,
	360, 264, 1169, 1193, 423, 1209, 205, 1257, 480, 251,
	371, 368, 519, 279, 270, 266, 249, 313, 379, 421,
	501, 415, 1300, 364, 1243, 0, 490, 394, 0, 0,
	0, 1223, 1282, 1231, 1269, 1218, 1256, 1177, 1242, 1295,
	1205, 1252, 1296, 319, 247, 321, 204, 406, 491, 283,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 1201, 1249, 1290, 1202, 1251, 262, 317, 269,
	261, 516, 1301, 1281, 1166, 1230, 1289, 0, 0, 228,
	1292, 1225, 0, 1254, 0, 1307, 1161, 1245, 0, 1164,
	1168, 1303, 1285, 1196, 272, 0, 0, 0, 0, 0,
	0, 0, 1222, 1232, 1266, 1270, 1216, 0, 0, 0,
	0, 0, 2133, 0, 1194, 0, 1241, 0, 0, 0,
	1173, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 1176,
	0, 1195, 1267, 0, 1159, 294, 1170, 395, 254, 0,
	447, 1274, 1284, 1217, 558, 1288, 1215, 1214, 1261, 1174,
	1280, 1208, 359, 1172, 326, 200, 224, 0, 1206, 405,
	455, 467, 1279, 1191, 1200, 252, 1198, 465, 419, 536,
	232, 281, 452, 425, 463, 435, 284, 1240, 1259, 464,
	366, 521, 445, 533, 559, 560, 260, 399, 545, 505,
	553, 581, 225, 257, 413, 498, 539, 487, 391, 517,
	518, 325, 486, 292, 203, 363, 565, 223, 473, 365,
	241, 230, 523, 542, 286, 450, 429, 430, 567, 576,
	212, 500, 531, 238, 477, 0, 0, 583, 246, 497,
	214, 528, 496, 387, 322, 323, 213, 0, 451, 265,
	290, 0, 0, 255, 408, 525, 526, 253, 584, 227,
	552, 219, 1171, 551, 401, 520, 529, 388, 377, 218,
	527, 386, 376, 330, 349, 350, 277, 303, 442, 369,
	443, 302, 304, 397, 396, 398, 207, 540, 0, 208,
	0, 492, 541, 585, 233, 234, 236, 1186, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 441, 437, 446,
	1275, 515, 534, 546, 557, 563, 564, 566, 568, 569,
	570, 571, 577, 575, 572, 573, 574, 400, 307, 488,
	329, 367, 1264, 1306, 418, 466, 239, 538, 489, 1309,
	1310, 1311, 1312, 1181, 1185, 1179, 1246, 1180, 1235, 1236,
	1182, 1297, 1298, 1299, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 0, 1268, 1175, 0, 1183, 1184, 1277, 1286,
	1287, 604, 378, 479, 535, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 514, 308, 215, 216,
	217, 507, 508, 509, 510, 549, 550, 554, 456, 457,
	458, 459, 289, 544, 305, 462, 461, 327, 328, 373,
	444, 1239, 199, 220, 362, 1302, 448, 285, 582, 548,
	543, 206, 222, 1178, 259, 1189, 1197, 0, 1203, 1211,
	1212, 1224, 1226, 1227, 1228, 1229, 1247, 1248, 1250, 1258,
	1260, 1263, 1265, 1272, 1283, 1305, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	431, 432, 434, 436, 438, 449, 454, 468, 469, 470,
	471, 472, 475, 476, 481, 482, 483, 484, 485, 493,
	494, 499, 522, 524, 537, 555, 561, 474, 297, 298,
	439, 440, 310, 311, 579, 580, 296, 532, 562, 530,
	578, 556, 433, 372, 1238, 1308, 1244, 375, 278, 301,
	316, 1253, 547, 495, 226, 460, 287, 250, 1271, 1273,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 453, 240, 478, 502, 503, 504,
	506, 389, 263, 426, 1234, 1262, 370, 512, 513, 312,
	390, 0, 0, 0, 1291, 1276, 511, 0, 1219, 1294,
	1188, 1207, 1304, 1210, 1213, 1255, 1167, 1233, 409, 1204,
	1160, 1192, 1162, 1199, 1163, 1190, 1221, 267, 1187, 1278,
	1237, 1293, 360, 264, 1169, 1193, 423, 1209, 205, 1257,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 1300, 364, 1243, 0, 490, 394,
	0, 0, 0, 1223, 1282, 1231, 1269, 1218, 1256, 1177,
	1242, 1295, 1205, 1252, 1296, 319, 247, 321, 204, 406,
	491, 283, 0, 95, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 1201, 1249, 1290, 1202, 1251, 262,
	317, 269, 261, 516, 1301, 1281, 1166, 1230, 1289, 0,
	0, 228, 1292, 1225, 0, 1254, 0, 1307, 1161, 1245,
	0, 1164, 1168, 1303, 1285, 1196, 272, 0, 0, 0,
	0, 0, 0, 0, 1222, 1232, 1266, 1270, 1216, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 1241, 0,
	0, 0, 1173, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 1176, 0, 1195, 1267, 0, 1159, 294, 1170, 395,
	254, 0, 447, 1274, 1284, 1217, 558, 1288, 1215, 1214,
	1261, 1174, 1280, 1208, 359, 1172, 326, 200, 224, 0,
	1206, 405, 455, 467, 1279, 1191, 1200, 252, 1198, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 1240,
	1259, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 581, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	567, 576, 212, 500, 531, 238, 477, 0, 0, 583,
	246, 497, 214, 528, 496, 387, 322, 323, 213, 0,
	451, 265, 290, 0, 0, 255, 408, 525, 526, 253,
	584, 227, 552, 219, 1171, 551, 401, 520, 529, 388,
	377, 218, 527, 386, 376, 330, 349, 350, 277, 303,
	442, 369, 443, 302, 304, 397, 396, 398, 207, 540,
	0, 208, 0, 492, 541, 585, 233, 234, 236, 1186,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 441,
	437, 446, 1275, 515, 534, 546, 557, 563, 564, 566,
	568, 569, 570, 571, 577, 575, 572, 573, 574, 400,
	307, 488, 329, 367, 1264, 1306, 418, 466, 239, 538,
	489, 1309, 1310, 1311, 1312, 1181, 1185, 1179, 1246, 1180,
	1235, 1236, 1182, 1297, 1298, 1299, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 0, 1268, 1175, 0, 1183, 1184,
	1277, 1286, 1287, 604, 378, 479, 535, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 514, 308,
	215, 216, 217, 507, 508, 509, 510, 549, 550, 554,
	456, 457, 458, 459, 289, 544, 305, 462, 461, 327,
	328, 373, 444, 1239, 199, 220, 362, 1302, 448, 285,
	582, 548, 543, 206, 222, 1178, 259, 1189, 1197, 0,
	1203, 1211, 1212, 1224, 1226, 1227, 1228, 1229, 1247, 1248,
	1250, 1258, 1260, 1263, 1265, 1272, 1283, 1305, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 431, 432, 434, 436, 438, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 522, 524, 537, 555, 561, 474,
	297, 298, 439, 440, 310, 311, 579, 580, 296, 532,
	562, 530, 578, 556, 433, 372, 1238, 1308, 1244, 375,
	278, 301, 316, 1253, 547, 495, 226, 460, 287, 250,
	1271, 1273, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 453, 240, 478, 502,
	503, 504, 506, 389, 263, 426, 1234, 1262, 370, 512,
	513, 312, 390, 0, 0, 0, 1291, 1276, 511, 0,
	1219, 1294, 1188, 1207, 1304, 1210, 1213, 1255, 1167, 1233,
	409, 1204, 1160, 1192, 1162, 1199, 1163, 1190, 1221, 267,
	1187, 1278, 1237, 1293, 360, 264, 1169, 1193, 423, 1209,
	205, 1257, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 1300, 364, 1243, 0,
	490, 394, 0, 0, 0, 1223, 1282, 1231, 1269, 1218,
	1256, 1177, 1242, 1295, 1205, 1252, 1296, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 1201, 1249, 1290, 1202,
	1251, 262, 317, 269, 261, 516, 1301, 1281, 1166, 1230,
	1289, 0, 0, 228, 1292, 1225, 0, 1254, 0, 1307,
	1161, 1245, 0, 1164, 1168, 1303, 1285, 1196, 272, 0,
	0, 0, 0, 0, 0, 0, 1222, 1232, 1266, 1270,
	1216, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	1241, 0, 0, 0, 1173, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 1176, 0, 1195, 1267, 0, 1159, 294,
	1170, 395, 254, 0, 447, 1274, 1284, 1217, 558, 1288,
	1215, 1214, 1261, 1174, 1280, 1208, 359, 1172, 326, 200,
	224, 0, 1206, 405, 455, 467, 1279, 1191, 1200, 252,
	1198, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 1240, 1259, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 581, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 567, 576, 212, 500, 531, 238, 477, 0,
	0, 583, 246, 497, 214, 528, 496, 387, 322, 323,
	213, 0, 451, 265, 290, 0, 0, 255, 408, 525,
	526, 253, 584, 227, 552, 219, 1171, 551, 401, 520,
	529, 388, 377, 218, 527, 386, 376, 330, 349, 350,
	277, 303, 442, 369, 443, 302, 304, 397, 396, 398,
	207, 540, 0, 208, 0, 492, 541, 585, 233, 234,
	236, 1186, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 441, 437, 446, 1275, 515, 534, 546, 557, 563,
	564, 566, 568, 569, 570, 571, 577, 575, 572, 573,
	574, 400, 307, 488, 329, 367, 1264, 1306, 418, 466,
	239, 538, 489, 1309, 1310, 1311, 1312, 1181, 1185, 1179,
	1246, 1180, 1235, 1236, 1182, 1297, 1298, 1299, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 0, 1268, 1175, 0,
	1183, 1184, 1277, 1286, 1287, 604, 378, 479, 535, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	514, 308, 215, 216, 217, 507, 508, 509, 510, 549,
	550, 554, 456, 457, 458, 459, 289, 544, 305, 462,
	461, 327, 328, 373, 444, 1239, 199, 220, 362, 1302,
	448, 285, 582, 548, 543, 206, 222, 1178, 259, 1189,
	1197, 0, 1203, 1211, 1212, 1224, 1226, 1227, 1228, 1229,
	1247, 1248, 1250, 1258, 1260, 1263, 1265, 1272, 1283, 1305,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 431, 432, 434, 436, 438, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 522, 524, 537, 555,
	561, 474, 297, 298, 439, 440, 310, 311, 579, 580,
	296, 532, 562, 530, 578, 556, 433, 372, 1238, 1308,
	1244, 375, 278, 301, 316, 1253, 547, 495, 226, 460,
	287, 250, 1271, 1273, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 453, 240,
	478, 502, 503, 504, 506, 389, 263, 426, 1234, 1262,
	370, 512, 513, 312, 390, 0, 0, 0, 1291, 1276,
	511, 0, 1219, 1294, 1188, 1207, 1304, 1210, 1213, 1255,
	1167, 1233, 409, 1204, 1160, 1192, 1162, 1199, 1163, 1190,
	1221, 267, 1187, 1278, 1237, 1293, 360, 264, 1169, 1193,
	423, 1209, 205, 1257, 480, 251, 371, 368, 519, 279,
	270, 266, 249, 313, 379, 421, 501, 415, 1300, 364,
	1243, 0, 490, 394, 0, 0, 0, 1223, 1282, 1231,
	1269, 1218, 1256, 1177, 1242, 1295, 1205, 1252, 1296, 319,
	247, 321, 204, 406, 491, 283, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 1201, 1249,
	1290, 1202, 1251, 262, 317, 269, 261, 516, 1301, 1281,
	1166, 1230, 1289, 0, 0, 228, 1292, 1225, 0, 1254,
	0, 1307, 1161, 1245, 0, 1164, 1168, 1303, 1285, 1196,
	272, 0, 0, 0, 0, 0, 0, 0, 1222, 1232,
	1266, 1270, 1216, 0, 0, 0, 0, 0, 0, 0,
	1194, 0, 1241, 0, 0, 0, 1173, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 1176, 0, 1195, 1267, 0,
	1159, 294, 1170, 395, 254, 0, 447, 1274, 1284, 1217,
	558, 1288, 1215, 1214, 1261, 1174, 1280, 1208, 359, 1172,
	326, 200, 224, 0, 1206, 405, 455, 467, 1279, 1191,
	1200, 252, 1198, 465, 419, 536, 232, 281, 452, 425,
	463, 435, 284, 1240, 1259, 464, 366, 521, 445, 533,
	559, 560, 260, 399, 545, 505, 553, 581, 225, 257,
	413, 498, 539, 487, 391, 517, 518, 325, 486, 292,
	203, 363, 565, 223, 473, 365, 241, 230, 523, 542,
	286, 450, 429, 430, 567, 576, 212, 500, 531, 238,
	477, 0, 0, 583, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 525, 526, 253, 584, 227, 552, 219, 1171, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	349, 350, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 585,
	233, 234, 236, 1186, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 1275, 515, 534, 546,
	557, 563, 564, 566, 568, 569, 570, 571, 577, 575,
	572, 573, 574, 400, 307, 488, 329, 367, 1264, 1306,
	418, 466, 239, 538, 489, 1309, 1310, 1311, 1312, 1181,
	1185, 1179, 1246, 1180, 1235, 1236, 1182, 1297, 1298, 1299,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 0, 1268,
	1175, 0, 1183, 1184, 1277, 1286, 1287, 604, 378, 479,
	535, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 514, 308, 215, 216, 217, 507, 508, 509,
	510, 549, 550, 554, 456, 457, 458, 459, 289, 544,
	305, 462, 461, 327, 328, 373, 444, 1239, 199, 220,
	362, 1302, 448, 285, 582, 548, 543, 206, 222, 1178,
	259, 1189, 1197, 0, 1203, 1211, 1212, 1224, 1226, 1227,
	1228, 1229, 1247, 1248, 1250, 1258, 1260, 1263, 1265, 1272,
	1283, 1305, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 297, 298, 439, 440, 310, 311,
	579, 580, 296, 532, 562, 530, 578, 556, 433, 372,
	1238, 1308, 1244, 375, 278, 301, 316, 1253, 547, 495,
	226, 460, 287, 250, 1271, 1273, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	1234, 1262, 370, 512, 513, 312, 390, 0, 0, 0,
	1291, 1276, 511, 0, 1219, 1294, 1188, 1207, 1304, 1210,
	1213, 1255, 1167, 1233, 409, 1204, 1160, 1192, 1162, 1199,
	1163, 1190, 1221, 267, 1187, 1278, 1237, 1293, 360, 264,
	1169, 1193, 423, 1209, 205, 1257, 480, 251, 371, 368,
	519, 279, 270, 266, 249, 313, 379, 421, 501, 415,
	1300, 364, 1243, 0, 490, 394, 0, 0, 0, 1223,
	1282, 1231, 1269, 1218, 1256, 1177, 1242, 1295, 1205, 1252,
	1296, 319, 247, 321, 204, 406, 491, 283, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	1201, 1249, 1290, 1202, 1251, 262, 317, 269, 261, 516,
	1301, 1281, 1166, 1230, 1289, 0, 0, 228, 1292, 1225,
	0, 1254, 0, 1307, 1161, 1245, 0, 1164, 1168, 1303,
	1285, 1196, 272, 0, 0, 0, 0, 0, 0, 0,
	1222, 1232, 1266, 1270, 1216, 0, 0, 0, 0, 0,
	0, 0, 1194, 0, 1241, 0, 0, 0, 1173, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 1176, 0, 1195,
	1267, 0, 1159, 294, 1170, 395, 254, 0, 447, 1274,
	1284, 1217, 558, 1288, 1215, 1214, 1261, 1174, 1280, 1208,
	359, 1172, 326, 200, 224, 0, 1206, 405, 455, 467,
	1279, 1191, 1200, 252, 1198, 465, 419, 536, 232, 281,
	452, 425, 463, 435, 284, 1240, 1259, 464, 366, 521,
	445, 533, 559, 560, 260, 399, 545, 505, 553, 581,
	225, 257, 413, 498, 539, 487, 391, 517, 518, 325,
	486, 292, 203, 363, 565, 223, 473, 365, 241, 230,
	523, 542, 286, 450, 429, 430, 567, 576, 212, 500,
	531, 238, 477, 0, 0, 583, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 584, 227, 552, 219,
	1171, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 585, 233, 234, 236, 1186, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 1275, 515,
	534, 546, 557, 563, 564, 566, 568, 569, 570, 571,
	577, 575, 572, 573, 574, 400, 307, 488, 329, 367,
	1264, 1306, 418, 466, 239, 538, 489, 1309, 1310, 1311,
	1312, 1181, 1185, 1179, 1246, 1180, 1235, 1236, 1182, 1297,
	1298, 1299, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	0, 1268, 1175, 0, 1183, 1184, 1277, 1286, 1287, 604,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 1239,
	199, 220, 362, 1302, 448, 285, 582, 548, 543, 206,
	222, 1178, 259, 1189, 1197, 0, 1203, 1211, 1212, 1224,
	1226, 1227, 1228, 1229, 1247, 1248, 1250, 1258, 1260, 1263,
	1265, 1272, 1283, 1305, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 579, 580, 296, 532, 562, 530, 578, 556,
	433, 372, 1238, 1308, 1244, 375, 278, 301, 316, 1253,
	547, 495, 226, 460, 287, 250, 1271, 1273, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 1234, 1262, 370, 512, 513, 312, 390, 0,
	0, 0, 0, 0, 511, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 699, 0, 0, 0, 267, 704, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 480, 251,
	371, 368, 519, 279, 270, 266, 249, 313, 379, 421,
	501, 415, 711, 364, 0, 0, 490, 394, 0, 0,
	0, 0, 0, 707, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 491, 283,
	0, 95, 0, 0, 849, 833, 799, 800, 837, 850,
	851, 852, 853, 838, 0, 237, 839, 840, 244, 841,
	0, 798, 739, 741, 740, 758, 759, 760, 761, 762,
	763, 764, 737, 846, 854, 855, 0, 262, 317, 269,
	261, 516, 0, 0, 2013, 2014, 2015, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 681, 696, 0,
	710, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	693, 694, 0, 0, 0, 0, 793, 0, 695, 0,
	0, 703, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	447, 792, 0, 0, 558, 0, 0, 790, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	455, 467, 0, 0, 0, 843, 0, 465, 419, 536,
	232, 281, 452, 425, 463, 435, 284, 0, 0, 464,
	366, 521, 445, 533, 559, 560, 260, 399, 545, 505,
	553, 581, 225, 257, 413, 498, 539, 487, 391, 517,
	518, 325, 486, 292, 203, 363, 565, 223, 473, 365,
	241, 230, 523, 542, 286, 450, 429, 430, 567, 576,
	212, 500, 531, 238, 477, 0, 0, 583, 246, 497,
	214, 528, 496, 387, 322, 323, 213, 0, 451, 265,
	290, 0, 0, 255, 408, 844, 845, 253, 584, 745,
	552, 219, 0, 551, 401, 520, 529, 388, 377, 218,
	527, 386, 376, 330, 753, 754, 277, 303, 442, 369,
	443, 302, 304, 397, 396, 398, 207, 540, 0, 208,
	0, 492, 541, 585, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 441, 437, 446,
	0, 515, 534, 546, 557, 563, 564, 566, 568, 569,
	570, 571, 577, 575, 572, 573, 574, 400, 307, 488,
	329, 367, 0, 0, 418, 466, 239, 538, 489, 0,
	0, 0, 0, 803, 791, 716, 807, 718, 804, 805,
	713, 714, 717, 806, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 0, 794, 702, 701, 0, 709, 0, 735,
	736, 738, 742, 743, 744, 755, 756, 757, 765, 767,
	768, 766, 769, 770, 771, 774, 775, 776, 777, 772,
	773, 778, 719, 723, 720, 721, 722, 734, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 817, 818,
	819, 820, 821, 822, 748, 752, 751, 749, 750, 746,
	747, 700, 199, 220, 362, 0, 448, 285, 582, 548,
	543, 206, 222, 808, 259, 809, 0, 0, 813, 0,
	0, 0, 815, 814, 0, 816, 782, 781, 0, 0,
	810, 811, 0, 812, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	431, 432, 434, 436, 438, 449, 454, 468, 469, 470,
	471, 472, 475, 476, 481, 482, 483, 484, 485, 493,
	494, 499, 522, 524, 537, 555, 561, 474, 823, 824,
	825, 826, 827, 828, 829, 830, 296, 532, 562, 530,
	578, 556, 433, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 547, 495, 226, 460, 287, 250, 848, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 453, 240, 478, 502, 503, 504,
	506, 389, 263, 426, 390, 0, 370, 512, 513, 312,
	511, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 699, 0, 0,
	0, 267, 704, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 480, 251, 371, 368, 519, 279,
	270, 266, 249, 313, 379, 421, 501, 415, 711, 364,
	0, 0, 490, 394, 0, 0, 0, 0, 0, 707,
	708, 0, 0, 0, 0, 0, 0, 2162, 0, 319,
	247, 321, 204, 406, 491, 283, 0, 95, 0, 0,
	849, 833, 799, 800, 837, 850, 851, 852, 853, 838,
	0, 237, 839, 840, 244, 841, 0, 798, 739, 741,
	740, 758, 759, 760, 761, 762, 763, 764, 737, 846,
	854, 855, 2163, 262, 317, 269, 261, 516, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 681, 696, 0, 710, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 694, 0, 0,
	0, 0, 793, 0, 695, 0, 0, 703, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 447, 792, 0, 0,
	558, 0, 0, 790, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 455, 467, 0, 0,
	0, 843, 0, 465, 419, 536, 232, 281, 452, 425,
	463, 435, 284, 0, 0, 464, 366, 521, 445, 533,
	559, 560, 260, 399, 545, 505, 553, 581, 225, 257,
	413, 498, 539, 487, 391, 517, 518, 325, 486, 292,
	203, 363, 565, 223, 473, 365, 241, 230, 523, 542,
	286, 450, 429, 430, 567, 576, 212, 500, 531, 238,
	477, 0, 0, 583, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 844, 845, 253, 584, 745, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	753, 754, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 585,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 568, 569, 570, 571, 577, 575,
	572, 573, 574, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 803,
	791, 716, 807, 718, 804, 805, 713, 714, 717, 806,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 0, 794,
	702, 701, 0, 709, 0, 735, 736, 738, 742, 743,
	744, 755, 756, 757, 765, 767, 768, 766, 769, 770,
	771, 774, 775, 776, 777, 772, 773, 778, 719, 723,
	720, 721, 722, 734, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 817, 818, 819, 820, 821, 822,
	748, 752, 751, 749, 750, 746, 747, 700, 199, 220,
	362, 0, 448, 285, 582, 548, 543, 206, 222, 808,
	259, 809, 0, 0, 813, 0, 0, 0, 815, 814,
	0, 816, 782, 781, 0, 0, 810, 811, 0, 812,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 823, 824, 825, 826, 827, 828,
	829, 830, 296, 532, 562, 530, 578, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 848, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	0, 390, 370, 512, 513, 312, 86, 511, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 699, 0, 0, 0, 267, 704,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 711, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 95, 0, 0, 849, 833, 799,
	800, 837, 850, 851, 852, 853, 838, 0, 237, 839,
	840, 244, 841, 0, 798, 739, 741, 740, 758, 759,
	760, 761, 762, 763, 764, 737, 846, 854, 855, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	681, 696, 0, 710, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 694, 0, 0, 0, 0, 793,
	0, 695, 0, 0, 703, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 792, 0, 0, 558, 0, 0,
	790, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 843, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 844, 845,
	253, 584, 745, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 753, 754, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 803, 791, 716, 807,
	718, 804, 805, 713, 714, 717, 806, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 794, 702, 701, 0,
	709, 0, 735, 736, 738, 742, 743, 744, 755, 756,
	757, 765, 767, 768, 766, 769, 770, 771, 774, 775,
	776, 777, 772, 773, 778, 719, 723, 720, 721, 722,
	734, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 817, 818, 819, 820, 821, 822, 748, 752, 751,
	749, 750, 746, 747, 700, 199, 220, 362, 94, 448,
	285, 582, 548, 543, 206, 222, 808, 259, 809, 0,
	0, 813, 0, 0, 0, 815, 814, 0, 816, 782,
	781, 0, 0, 810, 811, 0, 812, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 823, 824, 825, 826, 827, 828, 829, 830, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 848, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	699, 0, 0, 0, 267, 704, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 711, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 707, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	95, 0, 0, 849, 833, 799, 800, 837, 850, 851,
	852, 853, 838, 0, 237, 839, 840, 244, 841, 0,
	798, 739, 741, 740, 758, 759, 760, 761, 762, 763,
	764, 737, 846, 854, 855, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 681, 696, 0, 710,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	694, 0, 0, 0, 0, 793, 0, 695, 0, 0,
	703, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	792, 0, 0, 558, 0, 0, 790, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 843, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 3506, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 844, 845, 253, 584, 745, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 753, 754, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 803, 791, 716, 807, 718, 804, 805, 713,
	714, 717, 806, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 794, 702, 701, 0, 709, 0, 735, 736,
	738, 742, 743, 744, 755, 756, 757, 765, 767, 768,
	766, 769, 770, 771, 774, 775, 776, 777, 772, 773,
	778, 719, 723, 720, 721, 722, 734, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 817, 818, 819,
	820, 821, 822, 748, 752, 751, 749, 750, 746, 747,
	700, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 808, 259, 809, 0, 0, 813, 0, 0,
	0, 815, 814, 0, 816, 782, 781, 0, 0, 810,
	811, 0, 812, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 823, 824, 825,
	826, 827, 828, 829, 830, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 848, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 699, 0, 0, 0,
	267, 704, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 711, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 707, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 95, 0, 1553, 849,
	833, 799, 800, 837, 850, 851, 852, 853, 838, 0,
	237, 839, 840, 244, 841, 0, 798, 739, 741, 740,
	758, 759, 760, 761, 762, 763, 764, 737, 846, 854,
	855, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 681, 696, 0, 710, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 694, 0, 0, 0,
	0, 793, 0, 695, 0, 0, 703, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 792, 0, 0, 558,
	0, 0, 790, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	843, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	844, 845, 253, 584, 745, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 753,
	754, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 803, 791,
	716, 807, 718, 804, 805, 713, 714, 717, 806, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 794, 702,
	701, 0, 709, 0, 735, 736, 738, 742, 743, 744,
	755, 756, 757, 765, 767, 768, 766, 769, 770, 771,
	774, 775, 776, 777, 772, 773, 778, 719, 723, 720,
	721, 722, 734, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 817, 818, 819, 820, 821, 822, 748,
	752, 751, 749, 750, 746, 747, 700, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 808, 259,
	809, 0, 0, 813, 0, 0, 0, 815, 814, 0,
	816, 782, 781, 0, 0, 810, 811, 0, 812, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 823, 824, 825, 826, 827, 828, 829,
	830, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 848, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 699, 0, 0, 0, 267, 704, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 711, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 707, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 95, 0, 0, 849, 833, 799, 800, 837,
	850, 851, 852, 853, 838, 0, 237, 839, 840, 244,
	841, 0, 798, 739, 741, 740, 758, 759, 760, 761,
	762, 763, 764, 737, 846, 854, 855, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 681, 696,
	0, 710, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 694, 937, 0, 0, 0, 793, 0, 695,
	0, 0, 703, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 792, 0, 0, 558, 0, 0, 790, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 843, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 844, 845, 253, 584,
	745, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 753, 754, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 803, 791, 716, 807, 718, 804,
	805, 713, 714, 717, 806, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 794, 702, 701, 0, 709, 0,
	735, 736, 738, 742, 743, 744, 755, 756, 757, 765,
	767, 768, 766, 769, 770, 771, 774, 775, 776, 777,
	772, 773, 778, 719, 723, 720, 721, 722, 734, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 817,
	818, 819, 820, 821, 822, 748, 752, 751, 749, 750,
	746, 747, 700, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 808, 259, 809, 0, 0, 813,
	0, 0, 0, 815, 814, 0, 816, 782, 781, 0,
	0, 810, 811, 0, 812, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 823,
	824, 825, 826, 827, 828, 829, 830, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 848,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 699, 0,
	0, 0, 267, 704, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 711,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	707, 708, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 95, 0,
	0, 849, 833, 799, 800, 837, 850, 851, 852, 853,
	838, 0, 237, 839, 840, 244, 841, 0, 798, 739,
	741, 740, 758, 759, 760, 761, 762, 763, 764, 737,
	846, 854, 855, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 681, 696, 0, 710, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 694, 0,
	0, 0, 0, 793, 0, 695, 0, 0, 703, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 792, 0,
	0, 558, 0, 0, 790, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 843, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 844, 845, 253, 584, 745, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 753, 754, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	803, 791, 716, 807, 718, 804, 805, 713, 714, 717,
	806, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	794, 702, 701, 0, 709, 0, 735, 736, 738, 742,
	743, 744, 755, 756, 757, 765, 767, 768, 766, 769,
	770, 771, 774, 775, 776, 777, 772, 773, 778, 719,
	723, 720, 721, 722, 734, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 817, 818, 819, 820, 821,
	822, 748, 752, 751, 749, 750, 746, 747, 700, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	808, 259, 809, 0, 0, 813, 0, 0, 0, 815,
	814, 0, 816, 782, 781, 0, 0, 810, 811, 0,
	812, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 823, 824, 825, 826, 827,
	828, 829, 830, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 848, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 699, 0, 0, 0, 267, 704,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 711, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 707, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 95, 0, 0, 849, 833, 799,
	800, 837, 850, 851, 852, 853, 838, 0, 237, 839,
	840, 244, 841, 0, 798, 739, 741, 740, 758, 759,
	760, 761, 762, 763, 764, 737, 846, 854, 855, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 710, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 694, 0, 0, 0, 0, 793,
	0, 695, 0, 0, 703, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 792, 0, 0, 558, 0, 0,
	790, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 843, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 844, 845,
	253, 584, 745, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 753, 754, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 803, 791, 716, 807,
	718, 804, 805, 713, 714, 717, 806, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 794, 702, 701, 0,
	709, 0, 735, 736, 738, 742, 743, 744, 755, 756,
	757, 765, 767, 768, 766, 769, 770, 771, 774, 775,
	776, 777, 772, 773, 778, 719, 723, 720, 721, 722,
	734, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 817, 818, 819, 820, 821, 822, 748, 752, 751,
	749, 750, 746, 747, 700, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 808, 259, 809, 0,
	0, 813, 0, 0, 0, 815, 814, 0, 816, 782,
	781, 0, 0, 810, 811, 0, 812, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 823, 824, 825, 826, 827, 828, 829, 830, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 848, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1378, 1377, 1379, 1380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 1009, 558,
	0, 0, 0, 0, 0, 1006, 1007, 359, 966, 326,
	200, 224, 1000, 1004, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 1516, 833, 0, 0, 1513,
	0, 0, 0, 0, 1511, 0, 237, 1512, 1510, 244,
	1515, 0, 798, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 0, 390, 370, 512, 513,
	312, 86, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 480, 251, 371, 368,
	519, 279, 270, 266, 249, 313, 379, 421, 501, 415,
	0, 364, 0, 0, 490, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 491, 283, 0, 95,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 516,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 447, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 455, 467,
	0, 0, 0, 252, 0, 465, 419, 536, 232, 281,
	452, 425, 463, 435, 284, 0, 0, 464, 366, 521,
	445, 533, 559, 560, 260, 399, 545, 505, 553, 581,
	225, 257, 413, 498, 539, 487, 391, 517, 518, 325,
	486, 292, 203, 363, 565, 223, 473, 365, 241, 230,
	523, 542, 286, 450, 429, 430, 567, 576, 212, 500,
	531, 238, 477, 0, 0, 583, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 584, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 585, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 568, 569, 570, 571,
	577, 575, 572, 573, 574, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 604,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 94, 448, 285, 582, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 2149,
	0, 0, 2148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 579, 580, 296, 532, 562, 530, 578, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 1572, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 1574, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1576, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 1350, 0, 1351,
	1352, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 581, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 567, 576, 212, 500, 531, 238, 477, 0,
	0, 583, 246, 497, 214, 528, 496, 387, 322, 323,
	213, 0, 451, 265, 290, 0, 0, 255, 408, 525,
	526, 253, 584, 227, 552, 219, 0, 551, 401, 520,
	529, 388, 377, 218, 527, 386, 376, 330, 349, 350,
	277, 303, 442, 369, 443, 302, 304, 397, 396, 398,
	207, 540, 0, 208, 0, 492, 541, 585, 233, 234,
	236, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 441, 437, 446, 0, 515, 534, 546, 557, 563,
	564, 566, 568, 569, 570, 571, 577, 575, 572, 573,
	574, 400, 307, 488, 329, 367, 0, 0, 418, 466,
	239, 538, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 378, 479, 535, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	514, 308, 215, 216, 217, 507, 508, 509, 510, 549,
	550, 554, 456, 457, 458, 459, 289, 544, 305, 462,
	461, 327, 328, 373, 444, 0, 199, 220, 362, 0,
	448, 285, 582, 548, 543, 206, 222, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 431, 432, 434, 436, 438, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 522, 524, 537, 555,
	561, 474, 297, 298, 439, 440, 310, 311, 579, 580,
	296, 532, 562, 530, 578, 556, 433, 372, 0, 0,
	0, 375, 278, 301, 316, 0, 547, 495, 226, 460,
	287, 250, 0, 0, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 453, 240,
	478, 502, 503, 504, 506, 389, 263, 426, 0, 390,
	370, 512, 513, 312, 86, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 95, 0, 1553, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 94, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 95, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 2149, 0,
	0, 2148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 2100, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 1757, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 2098, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 966, 326, 200, 224, 964, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 2100, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 1757,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 1553, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 3416,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 1933, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 2529, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 2514,
	0, 0, 0, 0, 237, 0, 0, 244, 2515, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 1595, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 1594,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 661, 662, 663, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 3540, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 1757, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 3416, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 95, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	2150, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 1576, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 1888, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 1879, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 1724, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 1722,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 1720, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 1718, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1716, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 1712, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 1710,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 1708, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 1683, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 1580, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 95, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1329, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 1328, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 918,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 390, 0, 370, 512, 513, 312, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 607, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 581, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 567, 576, 212, 500, 531, 238, 477, 0, 0,
	583, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 584, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 585, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 568, 569, 570, 571, 577, 575, 572, 573, 574,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 582, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 579, 580, 296,
	532, 562, 530, 578, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	581, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 567, 576, 212,
	500, 531, 238, 477, 0, 0, 583, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 584, 227, 552,
	219, 0, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 585, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 0,
	515, 534, 546, 557, 563, 564, 566, 568, 569, 570,
	571, 577, 575, 572, 573, 574, 400, 307, 488, 329,
	367, 0, 0, 418, 466, 239, 538, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	0, 199, 220, 362, 0, 448, 285, 582, 548, 543,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 3548, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 579, 580, 296, 532, 562, 530, 578,
	556, 433, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 547, 495, 226, 460, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 390, 0, 370, 512, 513, 312, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 0, 364, 0,
	0, 490, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 516, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 447, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 455, 467, 0, 0, 0,
	252, 0, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 0, 0, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 581, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 567, 576, 212, 500, 531, 238, 477,
	0, 0, 583, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	525, 526, 253, 584, 227, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 349,
	350, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 585, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 568, 569, 570, 571, 577, 575, 572,
	573, 574, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 378, 479, 535,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 514, 308, 215, 216, 217, 507, 508, 509, 510,
	549, 550, 554, 456, 457, 458, 459, 289, 544, 305,
	462, 461, 327, 328, 373, 444, 0, 199, 220, 362,
	0, 448, 285, 582, 548, 543, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 297, 298, 439, 440, 310, 311, 579,
	580, 296, 532, 562, 530, 578, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 0, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 252, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 581, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 567,
	576, 212, 500, 531, 238, 477, 0, 0, 583, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 584,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 585, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 568,
	569, 570, 571, 577, 575, 572, 573, 574, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 604, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 582,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 579, 580, 296, 532, 562,
	530, 578, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 581, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 567, 576, 212, 500, 531,
	238, 477, 0, 0, 583, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 584, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	585, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 568, 569, 570, 571, 577,
	575, 572, 573, 574, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 582, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 579, 580, 296, 532, 562, 530, 578, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 0, 0, 370, 512, 513, 312,
}

var yyPact = [...]int{
	-1000, -1000, 4854, -1000, -464, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2179, 2327, -1000, -1000, -1000, -1000, 2437, -1000, 1067,
	1914, -1000, 2193, 4039, -1000, 47581, 590, -1000, 44917, 589,
	575, 135, 428, 30265, -1000, 238, -1000, 230, 46249, 234,
	-1000, -1000, -1000, -1000, -316, 18941, 2133, 85, 84, 47581,
	-1000, -1000, -1000, -1000, 2414, 1862, -1000, 413, -1000, -1000,
	-1000, -1000, -1000, -1000, 44251, -1000, 989, -1000, -1000, 2202,
	2284, 2442, 760, 2117, -1000, 2291, 1862, -1000, 18941, 2403,
	2285, 18275, 18275, 483, -1000, -1000, 268, -1000, -1000, -1000,
	2451, 25603, 47581, -1000, 32929, 305, -1000, 2193, -1000, -1000,
	-1000, 103, -1000, 390, 1772, -1000, 1764, -1000, 961, 1024,
	422, 549, 541, 421, 419, 411, 410, 406, 405, 404,
	403, 438, -1000, 800, 800, -117, -123, 4096, 505, 417,
	417, 979, 526, 2156, 2147, -1000, -1000, 800, 800, 800,
	393, 800, 800, 800, 800, 364, 361, 800, 800, 800,
	800, 800, 800, 800, 800, 800, 800, 800, 800, 800,
	800, 800, 800, 800, 701, 2193, 323, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47581, 226, 47581, -1000, 682,
	47581, 47581, -1000, 1178, 1176, 907, -1000, -1000, 907, 142,
	907, 907, 907, 907, 232, 697, 82, -1000, 214, 304,
	206, 317, 933, 461, -1000, -1000, 302, 933, 959, 1670,
	-1000, 776, 316, 194, -1000, 907, 907, -1000, -1000, 12256,
	173, 12256, 12256, -1000, 2187, -1000, -1000, -1000, -1000, -1000,
	1198, -1000, -1000, -1000, -1000, -1, 516, -1000, -1000, -1000,
	-1000, 46249, 43585, 249, -1000, -1000, 53, -1000, -1000, 1558,
	1252, 18941, 1289, -1000, 2325, 738, -1000, -1000, -1000, -1000,
	-1000, 655, -1000, 19607, 19607, 19607, 19607, -1000, -1000, 1589,
	42919, 1589, 1589, 19607, 1589, -1000, 19607, 1589, 1589, 1589,
	18941, 1589, 1589, 1589, 1589, -1000, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, -1000, -1000, -1000, -1000, 1589, 675,
	1589, 1589, 1589, 1589, 1589, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1589, 1589, 1589, 1589, 1589, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21605, 1399, 1395, 1385, -1000, 16277, 1589, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47581,
	-1000, 1589, 259, 46249, 46249, 396, 2291, 1862, -1000, 2414,
	2398, 413, 3008, 1460, 1382, 1290, 1862, 1729, 47581, -1000,
	1792, -1000, -1000, -1000, -1000, 2037, 1376, 1653, -1000, -1000,
	-1000, -1000, 2148, 18941, -1000, -1000, 2433, -1000, 22938, 674,
	2432, 42253, -1000, 483, 483, 1748, 475, 21, -1000, -1000,
	-1000, -1000, 825, 29599, -1000, -1000, -1000, -1000, -1000, 1669,
	47581, -1000, -1000, 5297, 1203, -1000, 1899, -1000, 2929, 1667,
	-1000, 1834, 18941, 1916, 572, 1203, 540, 529, 507, -1000,
	-26, -1000, -1000, -1000, -1000, -1000, -1000, 800, 800, 800,
	-1000, 433, 2394, 4039, 4485, -1000, -1000, -1000, 41587, 1895,
	1203, -1000, 1883, -1000, 901, 600, 635, 635, 1203, -1000,
	-1000, 46915, 1203, 899, 897, 1203, 1203, 46249, 46249, -1000,
	40921, -1000, 40255, 39589, 1174, 46249, 38923, 38257, 37591, 36925,
	36259, -1000, 2165, -1000, 2013, -1000, -1000, -1000, 46915, 1203,
	1203, 46915, 46249, 46915, 47581, 1203, -1000, -1000, 408, -1000,
	-1000, 1162, 1158, 1157, 800, 800, 1156, 1644, 1632, 1626,
	800, 800, 1146, 1625, 31597, 1622, 310, 1145, 1142, 1131,
	1191, 1620, 197, 1617, 1123, 1120, 1129, 46249, 1882, 47581,
	-1000, 295, 786, 880, 798, 817, 2193, 2119, 1741, 514,
	563, 1203, 478, 478, 46249, -1000, 14272, -1000, 559, -1000,
	-1000, -1000, -1000, 1604, 18941, -1000, 934, 933, 933, -1000,
	-1000, -1000, -1000, -1000, -1000, 907, 47581, 934, -1000, -1000,
	-1000, 933, 907, 47581, 907, 907, 907, 907, 933, 933,
	933, 907, 47581, 47581, 47581, 47581, 47581, 47581, 47581, 47581,
	47581, 12256, 776, 907, 907, -365, -368, -1000, 1603, -1000,
	-1000, 2034, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12256, 12256, -1000, -1000, -1000, -1000, -1000,
	1738, -1000, 225, 33, 233, -1000, 35593, 407, 816, -1000,
	407, -1000, -1000, -1000, 1737, 34927, -1000, -370, -373, -377,
	-378, -1000, -1000, -1000, -379, -380, -1000, -1000, -1000, 18941,
	18941, 18941, 18941, -156, -1000, 940, 19607, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 228, 1100, 19607, 19607, 19607, 19607,
	19607, 19607, 19607, 19607, 19607, 19607, 19607, 19607, 19607, 19607,
	19607, -1000, -1000, 27601, 7350, 7350, 738, 738, 738, 738,
	-1000, -91, 1734, 46915, -1000, -1000, -1000, 673, 18941, 18941,
	738, -1000, 1203, 16277, 20273, 18275, 18275, 18941, 833, 1252,
	46915, 18941, -1000, 1290, -1000, -1000, -1000, 1186, -1000, 985,
	2162, 2162, 2162, 2162, 18941, 18941, 18941, 18941, 18941, 18941,
	18941, 18941, 18941, 18941, 2162, 46249, 46249, 181, 18941, 18941,
	18941, 18941, 18941, 18941, 14944, 18941, 18941, 19607, 18941, 18941,
	18941, 1290, 18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941,
	18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941,
	18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941, 18941, 1290,
	18941, 1117, 18941, 18941, 18275, 13600, 18275, 18275, 18275, 18275,
	18275, -1000, -1000, -1000, -1000, -1000, 18941, 18941, 18941, 18941,
	18941, 18941, 18941, 18941, 1290, 18941, 18941, 18941, 18941, 18941,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1345, 1502, 1369, 18941, -1000, 1732, -1000, -99, 24937, 18941,
	1592, 1588, 2427, 1945, 46249, -1000, -1000, -1000, 2291, -1000,
	2291, 1345, 2046, 18275, -1000, -1000, 2929, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1678, -1000, 47581, 1729, 2257,
	46249, 2017, 1587, 528, -1000, 18941, 18941, 1726, -1000, 1463,
	47581, -1000, -156, -1000, 34261, -1000, -1000, 11584, 47581, 391,
	47581, -1000, 24271, 33595, 256, -1000, 21, 1701, -1000, 47,
	23, 15610, 737, -1000, -1000, -1000, 4096, 20939, 1538, 737,
	163, -1000, -1000, -1000, 1834, -1000, 1834, 1834, 1834, 1834,
	528, 528, 528, 528, -1000, -1000, -1000, -1000, -1000, 1878,
	1873, -1000, 1834, 1834, 1834, 1834, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1871, 1871, 1871, 1868, 1868, 1837, 1837,
	468, -1000, 18941, -1000, -1000, 331, 32929, 2211, 1109, 1705,
	295, 480, 1941, 1203, 1203, 1203, 480, -1000, 1292, 1280,
	1269, -1000, -455, 1723, -1000, -1000, 2387, -1000, -1000, 1050,
	938, 937, 1066, 46249, 260, 377, -1000, 459, -1000, 32929,
	1203, 890, 635, 1203, -1000, 1203, -1000, -1000, -1000, -1000,
	-1000, 1203, -1000, -1000, 1722, -1000, 1754, 987, 931, 929,
	912, 1722, -1000, -1000, -97, 1722, -1000, 1722, -1000, 1722,
	-1000, 1722, -1000, 1722, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 808, 243, -213, 46249, 260, 506, -1000,
	493, 27601, -1000, -1000, -1000, 27601, 27601, -1000, -1000, -1000,
	-1000, 1581, 1580, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -441, 47581, -1000, 277, 810, 369, 420, 349,
	47581, 765, 2337, 2335, 2331, 2329, 2328, 2323, 2319, 457,
	2316, 2315, 2309, 2301, 2292, 2289, 2282, 303, 358, 47581,
	47581, 478, 1985, 47581, 2231, 47581, -1000, -1000, -1000, -1000,
	504, 47581, -1000, 314, -1000, -1000, -1000, -1000, -1000, -1000,
	1252, 47581, -1000, -1000, 907, 907, -1000, -1000, 47581, 907,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 907, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47581, -1000, -1000, -1000,
	-1000, -1, 213, -1000, -1000, 46249, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -90, -1000, 151, 40, 388,
	-1000, -1000, -1000, -1000, -1000, 2308, -1000, 1252, 847, 860,
	-1000, 1589, -1000, -1000, 965, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 228, 19607, 19607, 19607, 1765, 556, 1824, 1467,
	1961, 1155, 1155, 1171, 1171, 746, 746, 746, 746, 746,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1533, -1000,
	1589, 46915, 1576, 13600, 1267, 1433, 1290, 2953, -1000, 1574,
	-1000, 1574, 1952, 832, -1000, 18941, 1290, 2938, -1000, -1000,
	1290, 1290, 1290, 18941, -1000, -1000, 18941, 18941, 18941, 18941,
	1705, 1705, 1705, 1705, 1705, 1705, 1705, 1705, 1705, 1705,
	18941, 1721, 1719, 2426, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1208, 1705, 1705, 1705, 1705,
	1705, 18941, 1365, -1000, -1000, -1000, 1394, 2924, 1718, 2920,
	1705, 1705, -1000, 1705, 2910, 2901, 1290, 1558, 1290, 1712,
	-1000, 2864, 1705, 2849, 2842, 2835, 2077, 2828, 2808, 2797,
	1705, 1705, 1705, 2073, 2747, 2728, 2723, 2719, 2715, 2692,
	2562, 2512, 2417, 1705, -158, 1705, 1290, -1000, -1000, -1000,
	-1000, -1000, 2378, 2057, 1290, 1702, 1589, 666, -1000, -1000,
	1574, 1290, 1290, 1574, 1574, 2371, 2332, 2322, 2304, 2295,
	2288, 1705, 1705, -1000, 1705, 2274, 2270, 1998, 1979, 1290,
	-1000, 1369, 47581, -1000, -296, -1000, 27, 662, 1589, -1000,
	31597, 1290, -1000, -1000, 6546, -1000, 1159, -1000, -1000, -1000,
	28933, 1699, 2929, -1000, -1000, 1589, 1567, -1000, -1000, 528,
	111, 28267, 733, 733, 175, 1252, 1252, 18941, -1000, -1000,
	-1000, -1000, -1000, -1000, 665, 2408, 397, 1589, -1000, 1744,
	2536, -1000, -1000, -1000, 2251, 22272, -1000, -1000, 1589, 1589,
	47581, 1676, 1643, -1000, 646, -1000, 1209, 1701, 21, 56,
	-1000, -1000, -1000, -1000, 1252, -1000, 1255, 398, 1247, -1000,
	463, -1000, -1000, -1000, -1000, 2139, 143, -1000, -1000, -1000,
	272, 528, -1000, -1000, -1000, -1000, -1000, -1000, 1511, 1511,
	-1000, -1000, -1000, -1000, -1000, 1106, -1000, -1000, -1000, -1000,
	1105, -1000, -1000, 1099, -1000, -1000, 2252, 1978, 331, -1000,
	-1000, 800, 1497, -1000, -1000, 2144, 800, 800, 46249, -1000,
	-1000, 1526, 2211, 277, 47581, 839, 1982, -1000, 1941, 1941,
	1941, 47581, -1000, -1000, -1000, -1000, -1000, -1000, -442, 74,
	399, -1000, -1000, -1000, 344, 46249, 1565, -1000, 264, -1000,
	1477, -1000, 46249, -1000, 1556, 1861, 1203, 1203, -1000, -1000,
	-1000, 46249, 1589, -1000, -1000, -1000, -1000, 542, 2190, 313,
	-1000, -1000, -178, -1000, -1000, 260, 264, 46915, 1203, 737,
	-1000, -1000, -1000, -1000, -1000, -444, 1553, 538, 269, 371,
	47581, 47581, 47581, 47581, 47581, 681, -1000, -1000, 68, -1000,
	-1000, -1000, -1000, 252, -1000, -1000, -1000, -1000, -1000, -1000,
	252, -1000, -1000, -1000, 67, -1000, -1000, -1000, -1000, 252,
	-1000, -1000, -1000, -1000, -1000, -1000, 252, -1000, -1000, -1000,
	-1000, 334, 490, -1000, 47581, 47581, 632, -1000, -1000, -1000,
	-1000, -1000, -1000, 933, -1000, -1000, 933, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2183,
	47581, 39, -403, -1000, -400, 18941, -1000, -1000, -1000, -1000,
	1375, 546, 1824, 19607, 19607, 19607, -1000, -1000, -1000, 1022,
	1022, 27601, -1000, 18941, 18275, -1000, -1000, 18941, 18941, 809,
	-1000, 18941, 1236, -1000, 18941, -1000, -1000, -1000, 1369, 1705,
	1705, 1705, 1705, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1773, 18941, 18941, 18941, 1290, 353, -1000,
	-1000, -1000, -1000, -1000, 2424, -1000, 18941, -1000, 27601, 18941,
	18941, 18941, -1000, -1000, -1000, 18941, 18941, -1000, -1000, 18941,
	18941, -1000, 18941, 18941, 18941, -1000, 18941, 18941, 18941, 18941,
	-1000, -1000, -1000, -1000, 18941, 18941, 18941, 18941, 18941, 18941,
	18941, 18941, 18941, 18941, -1000, -1000, 32929, 115, -158, 1117,
	115, 1117, -1000, 18275, 12928, -1000, -1000, -1000, -1000, -1000,
	18941, 18941, 18941, 18941, 18941, 18941, -1000, -1000, -1000, 18941,
	18941, -1000, 18941, -1000, 18941, -1000, -1000, -1000, -1000, -1000,
	662, -1000, 635, 635, 635, 46249, -1000, -1000, -1000, -1000,
	1697, -1000, 2307, -1000, 2078, 2059, 2423, 2408, -1000, 24271,
	2929, -1000, -1000, 46249, -283, -1000, 2126, 2093, 733, 733,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10912, 2291, 18941,
	1981, 46915, 155, -1000, 23605, 46249, 46915, 24271, 24271, 24271,
	24271, 24271, -1000, 2003, 2002, -1000, 2040, 2012, 2141, 47581,
	-1000, 1345, 1537, -1000, 18941, 26269, 1690, 24271, -1000, -1000,
	24271, 47581, 10240, -1000, -1000, 36, 12, -1000, -1000, -1000,
	-1000, 4096, -1000, -1000, 1547, 2245, 2137, -1000, -1000, -1000,
	-1000, -1000, 1531, -1000, 1525, 1694, 1523, 1508, 243, -1000,
	1869, 2171, 800, 800, -1000, 1095, -1000, 1203, 1494, 1492,
	-1000, -1000, -1000, 531, -1000, 2225, 47581, 1971, 1970, 1959,
	-1000, -453, 1088, 1855, 1724, 18941, 1852, 2385, 1687, 46249,
	-1000, -1000, 46915, -1000, 311, -1000, 331, 46249, -1000, -1000,
	-1000, 377, 47581, -1000, 7832, -1000, -1000, -1000, 264, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47581, 296, -1000, 1840,
	1184, -1000, -1000, 1386, -1000, -1000, -1000, -1000, 266, 368,
	1486, 247, 1445, 247, 1438, 247, 247, -1000, 47581, 623,
	1978, 47581, -1000, -1000, -1000, 907, 907, -1000, -1000, 2161,
	-1000, 1203, 1705, 19607, 19607, -1000, 738, 343, -137, 1834,
	1834, -1000, 1834, 1837, -1000, 1834, 201, 1834, 192, 1834,
	-1000, -1000, 1290, 1290, 1369, -1000, 1911, 1039, -1000, 1252,
	18941, 2246, -1000, -1000, -1000, -1000, -1000, -33, 2239, 2229,
	1705, -1000, 1833, 1830, 18941, 1705, 1290, 1784, 1705, 1705,
	1705, 1705, -1000, 1252, 1369, 2203, 1369, 1705, 1705, 2182,
	362, 1705, 1482, 1482, 1482, 1482, 1482, 1369, 1369, 1369,
	1369, 46249, -1000, -158, -1000, -1000, -196, -197, -1000, 1290,
	-158, 1691, 1290, -1000, 1777, 1663, 2143, 1657, 1705, 2118,
	1705, 1705, 1705, 1599, -1000, 2305, 2305, 2305, 1476, 1159,
	47581, -1000, -1000, -1000, -1000, 2408, 2381, 1688, -1000, -1000,
	111, 474, -1000, 2087, 2093, -1000, 2384, 2113, 2375, -1000,
	-1000, -1000, -1000, -1000, 1252, -1000, 2195, 1686, -1000, 807,
	1593, -1000, -1000, 17609, 1480, 2056, 638, 1476, 1767, 2536,
	1937, 1958, 2461, -1000, -1000, -1000, -1000, 1996, -1000, 1988,
	-1000, -1000, 1792, -1000, 2112, 391, 24271, 1755, 1755, -1000,
	630, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 968, 5857,
	2441, -1000, 1434, -1000, 1216, 204, 1086, -1000, -1000, 800,
	800, -1000, 881, 875, -1000, 47581, 1827, -1000, 528, 1418,
	528, 1075, -1000, -1000, 1070, -1000, -1000, -1000, -1000, 1791,
	2149, -1000, -1000, -1000, -1000, 47581, -1000, -1000, 47581, 47581,
	47581, 1826, 2370, -1000, 18941, 1821, 804, 2096, 46249, 46249,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 499, 800, -423, 337, 336, 800, 800, 800, -454,
	-1000, -1000, 1473, 1469, -1000, -120, -1000, 18941, -1000, -1000,
	-1000, 1150, 1150, 1399, 1395, 1385, -1000, 1792, -1000, -1000,
	-1000, 1470, -1000, -1000, -106, 46249, 46249, 46249, 46249, -1000,
	-1000, 1064, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 738, 1290, 354,
	-108, 1290, -1000, -1000, 528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18941, -1000, 18941, -1000, 1252,
	18941, 2291, 1325, 18941, 18941, -1000, 1053, 1037, 1705, -1000,
	-1000, -1000, 18941, -1000, -1000, -1000, -1000, -1000, 18941, -1000,
	-1000, -1000, 18941, 278, 1022, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1290, 385, -1000, -1000, -1000,
	-1000, 2420, -1000, 1290, 18941, -1000, -1000, 18941, -1000, 18941,
	18941, -1000, 18941, -1000, 18941, -1000, -1000, -1000, -1000, 18941,
	1589, 2262, 1589, 1589, 26269, -1000, -1000, 2381, 2333, 2369,
	2097, 2103, 2103, 2087, -1000, 2366, 2357, -1000, 1320, 2354,
	1311, 867, -1000, 46915, 18941, 155, -1000, 431, 46249, 155,
	46249, -1000, 2330, -1000, -1000, 18941, 1817, -1000, 18941, -1000,
	-1000, -1000, -1000, 7350, 2408, 1755, -1000, -1000, 752, -1000,
	18941, -1000, -1000, -1000, 3895, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1305, 1295, -1000, -1000, 1805, 18941, -1000,
	-1000, -1000, 1464, 1461, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1792, -1000, -1000, -1000, -1000, 377, -449, 2030,
	46249, 1029, -1000, 1444, 1687, 373, 155, 1278, 800, 800,
	800, 1026, 1009, 31597, 1424, -1000, 46249, 441, -1000, 377,
	-1000, -131, -133, 1705, -1000, -1000, 2242, -1000, -1000, 12928,
	-1000, -1000, 1790, 1926, -1000, -1000, -1000, -1000, 2015, -95,
	-113, -1000, -1000, 1705, 1705, 2035, 1290, -1000, 1705, 1705,
	1414, 1389, -1000, 1705, 1369, 1591, -1000, 278, 1290, 1955,
	-1000, -1000, 7350, -1000, -1000, 2330, 2353, 115, -1000, -1000,
	279, 115, 1252, 1586, 1705, 1510, 1413, 1705, 1705, 26935,
	-1000, 2349, 2336, 32263, 32263, 662, 2333, -166, 18941, 18941,
	2083, 1046, -1000, -1000, -1000, -1000, 1272, 1246, -1000, 1242,
	-1000, 2440, -1000, 1252, -1000, 155, -1000, 524, 1593, -1000,
	2291, 1252, 46249, 1252, 108, 2330, -1000, 1705, -1000, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
	1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, -1000,
	-1000, 46249, 2016, -1000, -1000, 2241, 1410, 73, -1000, 1315,
	1687, -1000, -1000, 150, -1000, 18941, -1000, 31597, 1224, 1222,
	-1000, -1000, -1000, -1000, -454, -1000, -1000, -1000, -1000, -1000,
	-1000, 413, 1681, -1000, 799, 46249, 47581, -1000, 1975, -1000,
	-1000, -1000, 18941, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18941, -1000, 1290, 1953, -1000, -284, -1000, -419, 18941,
	-158, -1000, -1000, -158, -1000, 18941, -1000, -1000, 18941, -1000,
	18941, -1000, -1000, 1408, -1000, -1000, -1000, -1000, -1000, 1408,
	1408, -1000, -166, -1000, 1601, -1000, 46249, 1252, 1558, -1000,
	1025, -1000, -1000, -1000, -1000, -1000, 46915, 1593, 46249, -1000,
	1405, 1290, 1589, 2291, -1000, 1374, -1000, 413, -1000, 1780,
	1724, -1000, -1000, -1000, 16943, -1000, -1000, -1000, -1000, -1000,
	217, -103, 12928, 9568, 1371, -1000, -100, 1705, 1369, -1000,
	-393, -1000, -1000, -1000, -1000, 239, -1000, -1000, 1558, -1000,
	-1000, 1388, 1314, 1309, 30931, -1000, -1000, -1000, -1000, -166,
	-1000, -1000, 2236, -1000, -1000, 1377, -1000, -1000, 26269, 45583,
	-1000, -88, 359, -103, 18941, 1775, 1290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 44, -1000, -1000, -1000, -1000,
	-1000, 1386, -109, -1000, -1000, -1000, 148, -412, -192, -193,
	-1000, -1000, 19607, -1000, 18941, -1000, 18941, -1000, 18941, -1000,
	-1000, -1000, 46249, 1589, -1000, 1347, -1000, 4633, -208, 1951,
	-1000, -24, -1000, -1000, -1000, 962, 1219, -1000, -1000, -1000,
	-1000, -1000, -1000, 1864, 46249, -1000, 465, -1000, -1000, -106,
	-118, 841, -1000, -1000, -1000, -1000, -1000, 1213, 1192, 1705,
	-1000, 46249, -1000, 45583, -202, 737, 7350, -1000, 1949, 1948,
	2412, -1000, -1000, -1000, -1000, -1000, -1000, -460, 1299, 285,
	-1000, -1000, 148, -1000, 18941, -1000, 18941, -1000, 1290, -1000,
	-1000, 2222, 108, -1000, 2439, -1000, 2418, 685, 685, -1000,
	1004, -460, -1000, -1000, 1705, 1705, -1000, -212, -1000, -1000,
	-1000, -1000, -1000, 458, 1092, -1000, -1000, -1000, -1000, -1000,
	7350, -1000, -1000, -1000, 235, 235, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3068, 3064, 27, 5, 35, 34, 3060, 45, 130,
	213, 38, 251, 112, 3058, 189, 3057, 3056, 3054, 3053,
	3050, 3048, 2500, 2480, 2472, 3046, 3045, 3039, 3038, 3037,
	3035, 3034, 3028, 3027, 3023, 188, 179, 208, 3022, 3021,
	3020, 134, 204, 93, 99, 203, 3019, 3018, 90, 3017,
	3016, 3014, 201, 199, 198, 917, 3013, 197, 132, 62,
	3011, 3010, 3007, 3004, 3002, 3001, 3000, 2999, 2996, 2992,
	2987, 2986, 2985, 2980, 2978, 2975, 2971, 2966, 2964, 259,
	2962, 2956, 19, 2955, 92, 2951, 2948, 2946, 2941, 2940,
	7, 2932, 2931, 12, 42, 2922, 2921, 56, 2917, 2915,
	2909, 2908, 2907, 15, 2906, 24, 2904, 32, 2897, 2894,
	143, 2893, 2891, 2890, 39, 2887, 2883, 2881, 2880, 2879,
	2877, 2876, 158, 2872, 2863, 2859, 186, 222, 2855, 2852,
	182, 128, 121, 2851, 2850, 110, 205, 2848, 140, 2847,
	2845, 2844, 166, 2843, 2189, 2842, 2841, 73, 85, 2840,
	52, 2838, 2837, 3, 101, 75, 1, 88, 98, 2836,
	2830, 69, 104, 2829, 115, 2827, 2826, 116, 78, 2823,
	114, 111, 2822, 2821, 18, 11, 2820, 36, 26, 23,
	80, 2819, 2818, 122, 2817, 2815, 2814, 109, 2810, 2809,
	4800, 2808, 106, 148, 119, 87, 2805, 54, 70, 2799,
	2777, 2774, 2768, 2762, 55, 2750, 2746, 2735, 163, 324,
	183, 2734, 49, 46, 57, 153, 2729, 76, 95, 207,
	184, 2726, 2725, 156, 155, 2724, 2722, 59, 47, 44,
	2721, 126, 147, 137, 53, 108, 149, 2716, 2712, 72,
	81, 2711, 2710, 2707, 2702, 185, 2698, 2697, 79, 2694,
	68, 2691, 202, 2690, 17, 67, 2689, 51, 181, 2687,
	83, 2686, 2683, 74, 146, 77, 37, 2682, 172, 177,
	145, 180, 2679, 2677, 60, 2676, 2674, 2673, 206, 353,
	2672, 2671, 105, 187, 173, 170, 100, 2669, 365, 2667,
	2666, 107, 2, 5235, 2664, 40, 178, 2658, 2656, 6298,
	157, 43, 20, 2644, 135, 2639, 2638, 2637, 2636, 235,
	195, 117, 176, 63, 2634, 2630, 2629, 9, 2628, 2627,
	2626, 2625, 2624, 2622, 94, 33, 31, 30, 247, 84,
	6, 118, 194, 167, 86, 2621, 2617, 2615, 142, 113,
	2614, 175, 174, 144, 138, 2612, 190, 164, 139, 2611,
	102, 29, 2608, 2601, 2599, 2591, 103, 2577, 2576, 2572,
	2571, 171, 161, 141, 91, 2569, 96, 136, 165, 168,
	65, 2567, 64, 2564, 2561, 28, 196, 25, 2543, 13,
	120, 123, 2542, 4423, 193, 2541, 14, 362, 162, 2537,
	2536, 16, 8, 10, 2533, 2525, 2524, 2523, 154, 2521,
	2518, 2514, 2509, 22, 50, 21, 4, 129, 89, 2507,
	2504, 159, 160, 2502, 2501, 2481, 2467, 3152, 0, 150,
	2462, 209,
}

//line sql.y:8265
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 415, 416, 416, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 383, 384, 384, 258, 258, 33, 74, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 108, 108, 23,
	24, 24, 24, 24, 419, 419, 185, 185, 183, 183,
	184, 184, 263, 263, 25, 267, 267, 269, 269, 269,
	269, 259, 259, 259, 26, 26, 268, 268, 270, 270,
	270, 273, 273, 273, 273, 312, 312, 312, 27, 27,
	27, 27, 27, 27, 27, 128, 128, 386, 386, 385,
	379, 379, 378, 378, 377, 382, 382, 381, 381, 380,
	39, 40, 49, 49, 49, 49, 50, 51, 387, 387,
	352, 56, 56, 55, 55, 55, 55, 55, 55, 57,
	57, 53, 53, 52, 52, 54, 54, 354, 354, 340,
	340, 353, 353, 353, 353, 353, 353, 353, 339, 339,
	139, 139, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 402,
	402, 402, 401, 401, 238, 238, 238, 238, 238, 238,
	238, 238, 149, 149, 161, 161, 161, 161, 161, 147,
	147, 148, 146, 146, 146, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 160, 160, 156, 156, 156, 157,
	157, 157, 158, 158, 403, 403, 403, 403, 317, 317,
	317, 317, 320, 320, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 319, 319, 319, 319, 319, 319, 319,
	321, 321, 321, 321, 321, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 323, 323, 323, 323, 323, 323, 323, 323, 338,
	338, 324, 324, 332, 332, 333, 333, 334, 334, 334,
	335, 335, 335, 336, 336, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 331, 331, 330, 330, 330, 341,
	366, 366, 365, 365, 363, 363, 363, 363, 363, 363,
	363, 363, 350, 350, 360, 360, 360, 360, 360, 349,
	349, 345, 345, 345, 346, 346, 347, 347, 344, 344,
	348, 348, 362, 362, 361, 361, 342, 342, 343, 343,
	368, 404, 404, 404, 404, 404, 405, 405, 369, 394,
	396, 396, 396, 395, 395, 392, 393, 391, 391, 391,
	391, 391, 84, 84, 84, 286, 286, 287, 287, 358,
	358, 357, 357, 357, 359, 359, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 281, 281, 281,
	390, 390, 390, 390, 390, 390, 389, 389, 389, 355,
	355, 355, 388, 388, 58, 58, 218, 218, 407, 407,
	408, 408, 408, 46, 46, 46, 46, 46, 46, 45,
	45, 45, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 47, 47, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 110, 110, 111, 111, 111, 111,
	113, 113, 113, 371, 371, 59, 59, 3, 3, 173,
	175, 176, 176, 174, 174, 174, 174, 174, 174, 61,
	61, 60, 60, 178, 177, 179, 179, 179, 1, 1,
	2, 2, 4, 4, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 337, 337, 337, 370,
	370, 372, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 116, 115, 115, 114, 117, 117, 117, 117,
	117, 117, 117, 117, 374, 374, 374, 62, 62, 375,
	325, 326, 327, 5, 6, 351, 373, 124, 124, 29,
	38, 38, 30, 30, 30, 30, 31, 31, 63, 64,
	414, 414, 68, 68, 68, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 280, 280, 289, 289, 279, 279, 304, 304,
	304, 282, 282, 282, 283, 283, 400, 400, 400, 276,
	276, 66, 66, 66, 305, 305, 305, 305, 69, 69,
	409, 409, 410, 410, 411, 411, 411, 70, 71, 71,
	307, 307, 308, 308, 72, 73, 85, 85, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 109, 109, 109,
	15, 15, 15, 15, 81, 81, 81, 14, 14, 17,
	67, 67, 75, 397, 397, 398, 399, 399, 399, 399,
	76, 78, 78, 32, 32, 32, 32, 32, 32, 134,
	134, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 129, 129, 129, 123, 123, 420, 79,
	80, 80, 127, 127, 127, 120, 120, 120, 126, 126,
	126, 16, 16, 18, 262, 262, 19, 19, 131, 131,
	133, 133, 133, 133, 133, 135, 135, 135, 135, 135,
	135, 135, 130, 130, 132, 132, 132, 132, 297, 297,
	297, 296, 296, 167, 167, 169, 168, 168, 170, 170,
	171, 171, 171, 171, 216, 216, 193, 193, 255, 255,
	256, 256, 254, 254, 261, 261, 257, 257, 257, 257,
	264, 264, 172, 172, 172, 172, 180, 180, 181, 181,
	182, 182, 306, 306, 302, 302, 302, 301, 301, 186,
	186, 186, 188, 187, 187, 187, 187, 189, 189, 191,
	191, 190, 190, 192, 197, 197, 196, 196, 194, 194,
	194, 194, 195, 195, 195, 195, 198, 198, 144, 144,
	144, 144, 144, 144, 144, 159, 159, 159, 159, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	245, 245, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	153, 221, 221, 220, 220, 87, 87, 87, 88, 88,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	145, 145, 92, 92, 91, 91, 211, 211, 294, 294,
	93, 94, 94, 97, 97, 96, 95, 95, 101, 101,
	98, 98, 100, 100, 99, 102, 102, 103, 104, 104,
	277, 277, 199, 199, 207, 207, 207, 207, 200, 200,
	200, 200, 200, 200, 200, 208, 208, 208, 215, 209,
	209, 205, 205, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 164,
	164, 164, 164, 226, 226, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	152, 152, 165, 165, 165, 165, 166, 166, 166, 166,
	166, 166, 166, 314, 314, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 421, 421, 328, 328,
	328, 328, 206, 206, 206, 206, 206, 125, 125, 125,
	125, 125, 311, 311, 311, 315, 315, 315, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 316, 316, 224, 224, 121, 121, 222,
	222, 223, 225, 225, 217, 217, 217, 217, 219, 219,
	202, 202, 202, 227, 227, 228, 228, 105, 106, 106,
	107, 107, 229, 229, 231, 230, 230, 232, 233, 233,
	233, 234, 234, 235, 235, 235, 48, 48, 48, 48,
	48, 43, 43, 43, 43, 44, 44, 44, 44, 136,
	136, 136, 136, 138, 138, 137, 137, 82, 82, 83,
	83, 83, 413, 413, 413, 412, 412, 412, 412, 412,
	412, 142, 142, 143, 143, 143, 140, 140, 141, 141,
	252, 252, 236, 236, 236, 243, 243, 243, 239, 239,
	241, 241, 241, 242, 242, 242, 240, 249, 249, 251,
	251, 250, 250, 246, 246, 247, 247, 248, 248, 248,
	244, 244, 201, 201, 201, 201, 201, 253, 253, 253,
	253, 265, 265, 212, 212, 214, 214, 213, 213, 163,
	266, 266, 274, 271, 271, 272, 272, 298, 298, 298,
	275, 275, 288, 288, 284, 284, 285, 285, 278, 278,
	290, 290, 290, 77, 210, 210, 367, 367, 364, 293,
	293, 295, 295, 299, 299, 303, 303, 300, 300, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 417,
	418, 309, 310, 310, 310,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	2, 3, 6, 12, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	6, 4, 7, 8, 8, 8, 6, 3, 1, 1,
	5, 0, 1, 1, 1, 1, 2, 2, 2, 0,
	1, 4, 4, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 3, 3, 2, 2, 4, 4, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 4,
	1, 3, 2, 3, 3, 3, 2, 2, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -415, -79, -420, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -65, -66, -69, -70, -71, -72, -73, -14, -17,
	-67, -32, -33, -74, -75, -76, -77, -78, -16, -18,
	-19, -9, -8, -13, 10, 11, -108, -34, 33, -39,
	-49, 225, -50, -40, 226, -51, 228, 227, 265, 229,
	249, 631, 258, 75, 316, 317, 319, 320, 321, 322,
	-109, 627, 263, 264, 231, 37, 46, 34, 35, 38,
	235, 271, 272, 234, -10, -35, 9, -417, 12, 459,
	260, 259, 29, -12, 521, 87, -80, -416, 676, -252,
	-236, 23, 34, 30, -235, -231, -127, -236, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -352, -354, -12,
	26, 87, 159, 9, 87, -79, -56, -55, -53, -52,
	-54, -57, 32, -46, -47, -376, -45, -42, 230, 227,
	275, 123, 124, 265, 266, 267, 229, 249, 264, 268,
	263, 284, -41, 82, 34, 521, 524, -359, 226, 232,
	233, 228, 460, 126, 125, 76, -356, 375, 554, 646,
	-57, 648, 101, 104, 647, 45, 239, 649, 650, 651,
	561, 652, 248, 653, 654, 655, 656, 662, 602, 663,
	664, 665, 127, 8, -79, -303, -299, 91, -292, 518,
	251, 552, 553, 300, 82, 42, 527, 372, 375, 554,
	489, 646, 316, 332, 326, 494, 495, 496, 355, 347,
	519, 555, 528, 303, 252, 288, 640, 345, 135, 648,
	307, 556, 266, 380, 381, 557, 382, 101, 319, 422,
	661, 306, 558, 659, 104, 647, 324, 80, 488, 52,
	643, 45, 261, 343, 234, 339, 649, 289, 559, 530,
	282, 126, 123, 668, 37, 335, 51, 31, 658, 125,
	50, 650, 150, 560, 651, 561, 384, 362, 634, 49,
	385, 267, 562, 85, 272, 523, 310, 642, 386, 508,
	336, 387, 299, 657, 231, 563, 622, 614, 615, 388,
	389, 635, 367, 363, 368, 510, 564, 414, 493, 390,
	618, 619, 675, 53, 565, 566, 636, 124, 567, 79,
	652, 81, 330, 331, 568, 297, 250, 513, 514, 416,
	359, 471, 478, 479, 111, 112, 474, 113, 480, 114,
	481, 482, 483, 472, 115, 108, 473, 484, 485, 360,
	361, 116, 486, 110, 109, 475, 477, 117, 487, 248,
	36, 391, 520, 301, 59, 305, 276, 417, 47, 365,
	672, 46, 629, 515, 569, 633, 358, 354, 468, 54,
	570, 571, 572, 573, 490, 653, 357, 329, 353, 667,
	4, 294, 491, 654, 63, 233, 370, 369, 371, 283,
	413, 350, 574, 575, 576, 255, 83, 577, 340, 22,
	578, 579, 392, 290, 580, 57, 581, 582, 420, 264,
	583, 55, 655, 40, 584, 269, 669, 656, 585, 312,
	313, 586, 587, 628, 588, 271, 589, 394, 590, 616,
	617, 393, 364, 366, 516, 278, 395, 236, 522, 591,
	311, 334, 268, 660, 592, 256, 504, 505, 506, 507,
	641, 512, 511, 270, 275, 263, 421, 257, 593, 594,
	595, 596, 597, 304, 613, 598, 599, 320, 662, 469,
	44, 600, 601, 602, 603, 604, 298, 293, 415, 424,
	62, 84, 377, 605, 606, 639, 328, 325, 291, 607,
	317, 56, 663, 664, 665, 285, 666, 497, 498, 499,
	500, 10, 673, 674, 492, 397, 127, 295, 296, 48,
	351, 277, 608, 308, 609, 341, 342, 356, 327, 352,
	625, 318, 623, 279, 398, 470, 265, 610, 423, 292,
	373, 378, 309, 526, 509, 284, 399, 638, 525, 501,
	502, 349, 346, 286, 503, 611, 627, 400, 240, 280,
	281, 612, 624, 401, 402, 302, 403, 314, 404, 405,
	406, 407, 410, 411, 412, 409, 315, 408, 626, 620,
	621, 287, 524, 323, 344, 379, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 467, 238, -79, 238, -190, -299,
	238, 238, 96, 522, 647, -271, 411, 412, 381, -289,
	383, 396, 391, 401, 389, -280, 392, 394, 278, -400,
	414, 238, 398, 225, 384, 393, 402, 403, 314, 302,
	409, 404, 315, 408, 287, 405, 406, 407, 410, -383,
	177, 651, 666, 135, 348, 388, 386, 415, 629, 91,
	-305, 91, 92, 93, -292, 318, -307, 323, -293, -383,
	-292, 321, -79, -79, -309, -309, -129, 629, 632, -209,
	-144, 143, -159, -162, -150, -154, -203, -204, -205, -206,
	-160, -219, -258, 166, 167, 174, 144, -215, -163, 27,
	517, 461, 460, 177, 32, -153, 220, 69, 70, 463,
	146, 58, 12, 436, 437, -161, 431, 438, 433, 488,
	490, 491, 492, 489, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 493, 465, 466, 118, 467, 108,
	110, 109, 468, 469, 470, 345, 515, 516, 510, 513,
	514, 512, 511, 360, 361, 471, 472, 473, 111, 112,
	113, 114, 115, 116, 117, 474, 477, 475, 476, 478,
	479, 480, 485, 486, 481, 482, 483, 484, 487, -89,
	-101, 543, 542, -102, -151, -152, -165, -166, -293, -299,
	243, 430, 237, 172, 459, -155, -148, -217, 107, 92,
	93, -8, -213, 429, 434, 435, 439, 432, 529, 531,
	546, 547, 549, 534, 539, 538, 541, 504, 505, 506,
	507, 508, 509, 614, 615, 616, 617, 618, 619, 620,
	621, -383, -292, 91, -157, -156, -199, 94, 99, 102,
	103, 105, -406, 261, 341, 342, 119, -417, 644, 90,
	95, 96, 97, 98, 120, 121, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 45, 397,
	397, -190, -79, -79, -79, -79, -229, -127, -231, -10,
	-8, -417, -79, -8, -9, -13, -35, -37, 548, -36,
	-299, 100, -236, -252, 13, 162, 43, 51, -234, -235,
	-12, -8, -144, 20, 24, 25, -132, 168, -144, -299,
	-132, -278, 242, -79, -79, -267, -312, 318, -269, 415,
	629, 414, -259, -272, 91, -258, -271, 413, -12, -353,
	159, -339, -343, -293, 253, -369, 249, -190, -79, -362,
	-361, -293, -417, -128, -288, 239, 247, 246, 136, -387,
	139, 295, 430, 237, -52, -53, -54, -271, 176, 650,
	-110, 270, 274, 88, 88, -343, -342, -341, -388, 274,
	253, -368, -360, 245, 254, -349, 246, 247, -344, 239,
	137, -388, -344, 244, 254, 249, 253, 274, 274, 127,
	274, 127, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 269, -350, 151, -350, 525, 525, -356, -388, 249,
	239, -388, -388, 245, -290, -344, 241, 26, 241, 36,
	36, -350, -350, -350, -271, 176, -350, -350, -350, -350,
	282, 282, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, 238,
	-387, -136, 408, 302, 314, 82, -55, 284, -38, -190,
	-288, 239, 240, -387, 271, -190, 221, -190, -414, -190,
	96, 96, -282, 159, 16, -282, -279, 397, 395, 382,
	387, -282, -282, -282, -282, 285, 380, -345, 239, 36,
	250, 397, 285, 380, 285, 286, 285, 286, 390, 400,
	285, -304, 15, 162, 430, 385, 389, 278, 238, 279,
	240, 399, 286, -304, -304, 90, 90, -283, 159, 285,
	397, 281, -282, -282, -310, -417, -295, -293, -291, 230,
	24, 142, 26, 28, 145, 177, 130, 20, 146, 38,
	232, 348, 249, 176, 245, 460, 225, 73, 529, 431,
	433, 429, 436, 462, 463, 430, 383, 32, 14, 531,
	29, 259, 25, 39, 170, 227, 149, 532, 262, 27,
	260, 118, 121, 534, 23, 76, 254, 15, 247, 41,
	17, 535, 536, 18, 243, 242, 162, 239, 71, 12,
	220, 30, 158, 67, 537, 137, 538, 539, 540, 541,
	131, 69, 159, 21, 670, 434, 435, 34, 630, 517,
	273, 172, 74, 60, 632, 143, 432, 542, 543, 119,
	544, 122, 77, 637, 139, 19, 72, 43, 545, 274,
	546, 244, 671, 547, 418, 548, 160, 228, 459, 70,
	161, 644, 549, 645, 237, 396, 9, 464, 33, 258,
	246, 129, 68, 550, 238, 148, 465, 466, 241, 132,
	120, 8, 136, 35, 13, 75, 78, 437, 438, 439,
	58, 128, 521, 147, 16, 551, 419, 141, 631, 425,
	426, 427, 428, -383, 633, -310, -310, 33, 92, -409,
	-410, -411, 521, 418, 241, -293, -190, -85, 622, 229,
	-86, 628, 24, 236, -134, 397, -122, 177, 651, 634,
	635, 636, 633, 394, 641, 639, 637, 285, 638, 88,
	139, 141, 142, 4, -144, 158, -200, 151, 152, 153,
	154, 155, 156, 157, 162, 143, 145, 159, -245, 140,
	163, 164, 165, 166, 167, 168, 169, 171, 170, 172,
	173, 160, 161, 176, 223, 224, -154, -154, -154, -154,
	-215, -221, -220, -417, -217, -383, -292, -299, -417, -417,
	-154, -277, -417, -417, -150, -417, -417, -417, -224, -144,
	-417, -417, -421, -417, -421, -421, -328, -417, -328, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, 221, -417, -417, -417, -417,
	-417, -328, -328, -328, -328, -328, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	103, 99, 102, 94, -219, 105, 90, 90, 90, 90,
	-8, -9, -209, -417, -309, -397, -398, -193, -190, -417,
	302, 314, -293, -293, 271, -234, -12, -8, -229, -235,
	-231, -8, -120, -133, 64, 65, -135, 25, 39, 68,
	66, 24, -418, 89, -418, -252, -418, 88, -37, -255,
	87, 62, 44, 90, 90, 88, 22, -230, -232, -144,
	15, -297, 4, -296, 26, -293, 90, 221, 15, -191,
	30, -190, -278, -278, 88, 91, 318, -268, -270, 416,
	418, 151, -298, -293, 90, 32, 89, 88, -190, -317,
	-320, -322, -321, -323, -318, -319, 345, 346, 177, 349,
	351, 352, 353, 354, 355, 356, 357, 358, 359, 362,
	33, 261, 341, 342, 343, 344, 363, 364, 365, 366,
	368, 369, 370, 371, 326, 347, 519, 327, 328, 329,
	330, 331, 332, 334, 335, 338, 336, 337, 339, 340,
	-384, -383, 87, 64, 65, 89, 88, -324, 87, -144,
	-136, 238, -383, 239, 239, 239, -79, 459, -350, -350,
	-350, 269, 20, -45, -42, -376, 19, -41, -42, 230,
	123, 124, 227, 87, -339, 87, -348, -384, -383, 87,
	137, 244, 136, -347, -344, -347, -348, -383, -217, -383,
	137, 137, -383, -383, -264, -293, -264, -264, 24, -264,
	24, -264, 24, 96, -293, -264, 24, -264, 24, -264,
	24, -264, 24, -264, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -217, -383, -383, -217, -339, -217, -190,
	-383, -271, 96, 96, 96, -350, -350, 96, 90, 90,
	90, -350, -350, 96, 90, -301, -299, 90, 90, -389,
	255, 299, 301, 96, 96, 96, 96, 32, 90, -390,
	32, 658, 657, 659, 660, 661, 90, 96, 32, 96,
	32, 96, -293, 87, -190, -142, 289, 225, 227, 230,
	77, 90, 305, 306, 303, 312, 313, 308, 309, 90,
	305, 306, 303, 312, 313, 308, 309, 151, 45, 88,
	241, 238, -383, -284, 243, -284, -293, -300, -299, -291,
	-413, 88, -412, 23, 425, 426, 428, 386, 427, 90,
	-144, -346, 15, 162, -304, -304, -282, -190, -346, -304,
	-282, -190, -282, -282, -282, -282, -304, -304, -304, -282,
	-299, -299, -190, -190, -190, -190, -190, -190, -190, -310,
	-283, -282, -282, 633, 633, 90, -276, 15, 77, -310,
	-310, 88, 324, 419, 420, -308, 321, -81, -293, 90,
	-15, -11, -23, -22, -24, 151, -15, 88, 521, -183,
	-190, 633, 633, 633, 633, 633, 633, -144, -144, -144,
	-144, 544, -207, 119, 143, 120, 121, -162, -208, -213,
	-215, 106, 162, 145, 159, -245, -150, -154, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -311, -293, 90, 177, -158, -157, 105, -406, -158,
	518, 88, -220, 221, -144, -144, -383, -144, -293, -130,
	-132, -130, -144, -222, -223, 147, -217, -144, -418, -418,
	96, 105, 168, -126, 25, 39, -126, -126, -126, -126,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-126, -293, -293, -119, -118, 441, 442, 443, 444, 446,
	447, 448, 451, 452, 456, 457, 440, 458, 445, 450,
	453, 454, 455, 449, 344, -144, -144, -144, -144, -144,
	-144, -87, -144, 130, 131, 132, -209, -144, -150, -144,
	-144, -144, -418, -144, -144, -144, -210, -209, -382, -381,
	-380, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -418, -144, -164, -148, 96, -260,
	105, 92, -144, -144, -131, -130, -295, -300, -291, -292,
	-130, -131, -131, -130, -130, -144, -144, -144, -144, -144,
	-144, -144, -144, -418, -144, -144, -144, -144, -144, -252,
	-418, -209, 88, -399, 418, 419, 630, -302, 274, -301,
	26, -210, 90, 90, 15, -262, 78, -293, -234, -234,
	60, -130, -135, -418, -36, 26, -254, -293, 63, 90,
	-329, -271, 372, 373, 177, -144, -144, 88, -233, 28,
	29, -190, -296, 168, -300, -190, -263, 274, -190, -168,
	-170, -171, -172, -193, -216, -417, -173, -8, 540, 537,
	15, -183, -184, -192, -299, -269, -312, -268, 88, 417,
	419, 420, 77, 122, -144, -330, 176, -358, -357, -356,
	-339, -341, -342, -343, 89, -330, -335, 378, 377, -324,
	-324, -324, -324, -324, -329, -329, -329, -329, 87, 87,
	-324, -324, -324, -324, -332, 87, -332, -332, -333, -332,
	87, -333, -334, 87, -334, -369, -144, -366, -365, -363,
	-364, 248, 101, 612, 568, 521, 561, 602, 78, -361,
	-233, 96, -418, -142, -285, 243, -367, -364, -383, -383,
	-383, -285, 91, 90, 91, 90, 91, 90, -111, -59,
	-1, 670, 671, 672, 88, 20, -340, -339, -58, 299,
	-372, -373, 274, -368, -362, -348, 137, -347, -348, -348,
	-383, 88, 30, 127, 127, 127, 127, 521, 227, 33,
	-286, 560, 143, 612, 568, -339, -58, 241, 241, -311,
	-311, -311, 90, 90, -281, 666, -183, -138, 291, 151,
	280, 280, 238, 238, 293, -190, 304, 307, 305, 306,
	303, 312, 313, 308, 309, 24, 24, 24, 24, 24,
	24, 24, 304, 307, 305, 306, 303, 312, 313, 308,
	309, 24, 24, 24, 24, 24, 24, 24, 292, 294,
	296, 282, -190, -190, -284, 77, -185, -190, 27, -299,
	-412, -190, 284, -190, -282, -282, -190, -282, -282, -190,
	-411, 325, -293, 359, 623, 624, 626, 625, -122, 418,
	88, 521, 23, -123, 23, -417, 119, 120, 121, -208,
	-150, -154, -150, 142, 262, -417, -217, -418, -295, 26,
	88, 78, -418, 88, 88, -418, -418, 88, 15, -225,
	-223, 149, -144, -418, 88, -418, -418, -418, -209, -144,
	-144, -144, -144, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -209, 88, 88, 15, -315, 26, -418,
	-418, -418, -418, -418, -224, -418, 15, -418, 78, 88,
	162, 88, -418, -418, -418, 88, 88, -418, -418, 88,
	88, -418, 88, 88, 88, -418, 88, 88, 88, 88,
	-418, -418, -418, -418, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, -418, -94, 545, -418, -418, 88,
	-418, 88, -418, -417, 221, -418, -418, -418, -418, -418,
	88, 88, 88, 88, 88, 88, -418, -418, -418, 88,
	88, -418, 88, -418, 88, -418, -398, 629, 419, -197,
	-196, -194, 75, 242, 76, -417, -301, -418, -158, -260,
	-261, -260, -202, -293, 96, 105, -236, -167, -169, 15,
	-135, -215, 89, 88, -329, -240, -246, -279, -293, 90,
	177, -331, 177, -331, 372, 373, -232, 221, -198, 16,
	-201, 33, 58, -11, -417, -417, 33, 88, -186, -188,
	-187, -189, 67, 71, 73, 68, 69, 70, 74, -306,
	26, -8, -168, -8, -417, -190, -183, -419, 15, 78,
	-419, 88, 221, -270, -273, 421, 418, 424, -383, 90,
	-110, 88, -356, -343, -237, -139, 41, -336, 379, -329,
	528, -329, -338, 90, -338, 96, 96, 96, 89, -48,
	-43, -44, 34, 82, -363, -350, 90, 40, -350, -350,
	-293, 89, -233, -138, -190, 143, 77, -367, -367, -367,
	-299, -2, 669, 675, 137, 87, 382, 19, -254, 88,
	89, -218, 300, 89, -112, -293, 89, 87, -348, -348,
	-293, -417, 238, 32, 32, 612, 568, 560, -58, -218,
	-217, -383, -330, 668, 667, 89, 240, 298, -143, 436,
	-140, 90, 91, -190, -190, -190, -190, -190, 230, 227,
	405, -407, 310, -407, 405, -407, -407, 283, 241, -183,
	-190, 88, -84, 257, 252, -304, -304, 34, -190, 418,
	642, 640, -144, 142, 262, -162, -154, -150, -313, 177,
	345, 261, 343, 339, 359, 350, 377, 341, 378, 336,
	335, 334, -313, -311, -209, -132, -144, -144, 150, -144,
	148, -144, -418, -418, -418, -418, -418, -229, -144, -144,
	-144, -418, 177, 345, 15, -144, -311, -144, -144, -144,
	-144, -144, -380, -144, -209, -144, -209, -144, -144, -144,
	-144, -144, -381, -381, -381, -381, -381, -209, -209, -209,
	-209, -417, -293, -97, -96, -95, 595, 242, -94, -164,
	-97, -164, -131, -295, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -194, -344, -344, -344, -264, 88,
	-275, 23, 15, 58, 58, -167, -198, -168, -135, -293,
	-243, 622, -249, 47, -247, -248, 48, -244, 49, 57,
	-331, -331, 168, -234, -144, -265, 77, -266, -274, -217,
	-212, -214, -213, -417, -253, -418, -293, -264, -266, -170,
	-171, -171, -170, -171, 67, 67, 67, 72, 67, 72,
	67, -187, -299, -418, -144, -302, 78, -168, -168, -192,
	-299, 168, 418, 422, 423, -356, -405, 119, 143, 32,
	77, 375, 101, -403, 176, 557, 607, 612, 568, 561,
	602, -404, 244, 136, 137, 256, 26, 42, 89, 88,
	89, 88, 89, 89, 88, -287, -286, -44, -43, -350,
	-350, 96, -383, 90, 90, 240, 27, -190, 77, 77,
	77, -113, 673, 96, 87, -3, 82, -144, 87, 20,
	-339, -217, -374, -325, -375, -326, -327, -5, -6, -351,
	-116, 58, 101, -62, 45, 239, 653, 654, 127, -417,
	666, -366, -254, -370, -372, -190, -147, -417, -146, -148,
	-155, 166, 167, 261, 341, 342, -218, -190, -137, 289,
	297, 87, -141, 92, -386, 78, 280, 375, 280, 90,
	-408, 311, 90, -408, 90, -408, -408, -190, -84, -48,
	-190, -282, -282, 34, -383, -418, -162, -154, -125, 162,
	521, -316, 527, -324, -324, -324, -334, -324, 331, -324,
	331, -324, -418, -418, -418, 88, -418, 23, -418, -144,
	88, -121, 464, 88, 88, -418, 87, 87, -144, -418,
	-418, -418, 88, -418, -418, -418, -418, -418, 88, -418,
	-418, -418, 88, -314, 613, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -93, -294, -293, -94, 577,
	577, -418, -94, -226, 88, -418, -418, 88, -418, 88,
	88, -418, 88, -418, 88, -418, -418, -418, -418, 88,
	-195, 23, -195, -195, -418, -260, -190, -198, -227, 17,
	-240, 52, 351, -251, -250, 56, 48, -248, 20, 50,
	20, 31, -265, 88, 151, 88, -418, -418, 88, 58,
	221, -418, -198, -181, -180, 77, 78, -182, 77, -180,
	67, 67, -255, 88, -263, -168, -198, -198, 221, 119,
	-417, -149, -161, -147, 13, 90, 90, -383, -402, 657,
	658, 32, 96, -350, -350, 137, 137, -190, 87, -329,
	90, -329, 96, 96, 32, 83, 84, 85, 32, 79,
	80, 81, -190, -190, -190, -190, -371, 87, 20, -144,
	87, 151, 89, -254, -254, 276, 162, -350, 651, 282,
	282, -350, -350, -350, -115, -114, 673, 89, -418, 88,
	-337, 521, 524, -144, -156, -156, -255, 89, -379, 521,
	-385, -293, -293, -293, -293, 96, 98, -418, 519, 74,
	522, -418, -329, -144, -144, -144, -234, 90, -144, -144,
	96, 96, -418, -144, -209, -144, -418, -178, -177, -179,
	634, 119, 32, -313, -418, -211, 274, -100, -99, -98,
	15, -418, -144, -144, -144, -144, -144, -144, -144, -417,
	67, 19, 17, -417, -417, -302, -227, -228, 18, 20,
	-241, 54, -239, 53, -239, -250, 20, 20, 90, 20,
	90, 137, -274, -144, -214, 58, -11, -293, -212, -293,
	-229, -144, 87, -144, -158, -198, -198, -144, -204, 488,
	490, 491, 492, 489, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 493, 467, 108, 110, 109, 468,
	469, 470, 345, 515, 516, 510, 513, 514, 512, 511,
	360, 361, 471, 472, 473, 111, 112, 113, 114, 115,
	116, 117, 474, 477, 475, 478, 479, 480, 485, 486,
	481, 482, 483, 484, 487, 504, 505, 506, 507, 508,
	509, 614, 615, 616, 617, 618, 619, 620, 621, 90,
	90, 87, -144, 89, 89, -255, -370, -59, 89, -256,
	-254, 96, 89, 277, -213, -417, 90, -350, -350, -350,
	96, 96, -301, -418, 88, -293, -404, -372, 525, 525,
	-418, 26, -378, -377, -295, 87, 78, 63, 520, 523,
	-418, -418, 88, -418, -418, -418, 89, 89, -418, -418,
	-418, 88, -418, -177, -179, -418, 77, -158, -229, 20,
	-97, 299, 301, -97, -418, 88, -418, -418, 88, -418,
	88, -418, -418, -257, -418, -293, 244, 20, 20, -257,
	-257, -197, -228, -107, -106, -105, 551, -144, -209, -242,
	55, 77, 122, 90, 90, 90, 13, -212, 221, -234,
	-254, -175, 382, -229, -418, -254, 89, 26, 89, 675,
	137, 89, -213, -124, -417, 273, -301, 90, 90, -114,
	-117, -11, 88, 151, -254, -190, 63, -144, -209, -418,
	77, 532, 634, -92, -91, -88, 645, 671, -209, -94,
	-94, -144, -144, -144, 88, -418, -418, -418, -107, 88,
	-104, -103, -293, 77, 122, -266, -293, 89, -418, -417,
	-234, 89, -238, -11, 87, -3, 273, -325, -375, -326,
	-327, -5, -6, -351, -82, 521, -377, -355, -295, 90,
	96, 89, 521, -418, -418, -90, 145, 643, 610, -145,
	-156, -153, 220, -418, 88, -418, 88, -418, 88, -293,
	244, -105, 88, 26, -302, -176, -174, -293, 574, -395,
	-394, 517, -405, -401, 119, 143, 101, -403, 612, 568,
	128, 129, -82, -144, 87, -418, -83, 288, 629, -386,
	522, -90, 644, 588, 563, 588, 563, -144, -144, -144,
	-103, -417, -418, 88, 23, -317, -61, 585, -392, -393,
	77, -396, 388, 584, 605, 119, 90, 89, -254, 249,
	-379, 523, 142, -418, 88, -418, 88, -418, -93, -174,
	581, -330, -158, -393, 77, -392, 77, 14, 13, -4,
	674, 89, 290, -90, -144, -144, -418, -60, 27, -175,
	-391, 257, 252, 255, 33, -391, 96, -4, -418, -418,
	585, 251, 32, 119, -158, -178, -177, -177,
}

var yyDef = [...]int{
	908, -2, -2, 910, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 908, 908, 908, 0, 908, 0,
	0, 908, -2, -2, 908, 1525, 0, 908, 0, 0,
	0, 0, -2, 822, 828, 0, 837, -2, 0, 0,
	908, 908, 2091, 2091, 903, 0, 0, 0, 0, 0,
	908, 908, 908, 908, 1382, 52, 908, 0, 87, 88,
	857, 858, 859, 67, 0, 2089, 909, 1, 3, 73,
	77, 0, 0, 0, 60, 1391, 0, 80, 0, 0,
	912, 0, 0, 1508, 908, 908, 0, 128, 129, 130,
	0, 0, 0, 908, 0, -2, 134, -2, 163, 164,
	165, 0, 170, 624, 526, 578, 524, 563, -2, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 402, 402, 0, 0, -2, 512, 512,
	512, 1510, 0, 0, 0, 560, 464, 402, 402, 402,
	0, 402, 402, 402, 402, 0, 0, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 1409, 169, 1526, 1523, 1524, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 0, 1502, 0, 737, 1011,
	0, 0, 742, 0, 0, 811, 746, 747, 811, 0,
	811, 811, 811, 811, 0, 0, 0, 757, 0, 0,
	0, 0, 808, 0, 773, 774, 0, 808, 808, 0,
	782, 814, 0, 0, 788, 811, 811, 791, 792, 2092,
	0, 2092, 2092, 1493, 0, 805, 803, 817, 818, 42,
	821, 824, 825, 826, 827, 830, 0, 841, 844, 1519,
	1520, 0, 846, 853, 870, 871, 0, 904, 905, 47,
	1159, 0, 1033, 1038, 1049, 1064, 1065, 1066, 1067, 1068,
	1070, 1071, 1072, 0, 0, 0, 0, 1077, 1078, 0,
	0, 0, 0, 0, 1140, 1086, 0, 0, 0, 0,
	1355, 0, 0, 1316, 1316, 1174, 1316, 1318, 1318, 1732,
	1868, 1876, 1998, 1694, 1699, 1700, 1701, 1991, 1992, 1993,
	1994, 2033, 2034, 2038, 1792, 0, 0, 0, 2088, 1829,
	1837, 1838, 1862, 1963, 2019, 1711, 1857, 1928, 1789, 1811,
	1812, 1945, 1946, 1833, 1834, 1815, 1827, 1830, 1818, 1819,
	1821, 1823, 1828, 1835, 1841, 1820, 1840, 1839, 0, 1816,
	1817, 1822, 1832, 1836, 1824, 1825, 1826, 1831, 1842, 0,
	0, 0, 0, 0, 1255, 1256, 1257, 1258, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 1368, 1369, 45,
	46, 1158, 1489, 1318, 1318, 1318, 1318, 1318, 1100, 1101,
	1102, 1103, 1104, 1128, 1129, 1135, 1136, 1940, 1941, 1942,
	1943, 1773, 2028, 1781, 1782, 1923, 1924, 1794, 1795, 2063,
	2064, -2, -2, -2, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 1736, 2009, 2010, 231, 0, 0, 299,
	300, 296, 297, 298, 1142, 1143, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 2091, 0,
	880, 0, 0, 0, 0, 0, 1391, 0, 1383, 1382,
	65, 0, -2, 0, 0, 0, 0, 49, 0, 54,
	968, 911, 79, 78, 1440, 0, 0, 0, 61, 1392,
	69, 71, 1393, 0, 913, 914, 0, 944, 948, 0,
	0, 0, 1509, 1508, 1508, 104, 0, 0, 105, 125,
	126, 127, 0, 0, 111, 112, 1495, 1496, 131, 0,
	0, 181, 182, 0, 43, 429, 0, 177, 930, 0,
	422, 361, 0, 1409, 0, 0, 0, 0, 0, 908,
	0, 1503, 158, 159, 166, 167, 168, 402, 402, 402,
	575, 0, 0, 169, 169, 533, 534, 535, 0, 0,
	-2, 427, 0, 513, 0, 0, 416, 416, 420, 418,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 403, 0, 573, 574, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 1512, 0, 550,
	551, 0, 0, 0, 402, 402, 0, 0, 0, 0,
	402, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 1431, 0, 0, 0, 0, -2, 0, 729, 0,
	0, 0, 1504, 1504, 0, 736, 0, 738, 1422, 740,
	743, 744, 745, 0, 0, 748, 0, 808, 808, 806,
	807, 750, 751, 752, 753, 811, 0, 0, 411, 412,
	413, 808, 811, 0, 811, 811, 811, 811, 808, 808,
	808, 811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2092, 814, 811, 811, 0, 0, 783, 0, 784,
	785, 786, 789, 790, 793, 2093, 2094, 1521, 1522, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 2092, 2092, 797, 801, 1494, 823, 829,
	831, 832, 0, 0, 842, 845, 864, 51, 1780, 852,
	51, 854, 855, 856, 883, 884, 889, 0, 0, 0,
	0, 895, 896, 897, 0, 0, 900, 901, 902, 0,
	0, 0, 0, 0, 1031, 0, 0, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 1051, 0, 0, 0, 1073, 1074, 1075, 1076,
	1079, 0, 1091, 0, 1093, 1364, -2, 0, 0, 0,
	1084, 1085, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 1172, 0, 1173, 1175, 1176, 0, 1177, 918,
	918, 918, 918, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 0, 0, 928, 928, 0,
	0, 224, 225, 226, 227, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 301, 249, 250, 251,
	1158, 0, 0, 0, 48, 872, 873, 0, 994, 1514,
	0, 0, 0, 924, 0, 59, 68, 70, 1391, 63,
	1391, 0, 0, 0, -2, -2, 931, 937, 938, 939,
	940, 941, 56, 2090, 57, 0, 76, 0, 50, 0,
	0, 0, 0, 375, 1443, 0, 0, 1384, 1385, 1388,
	0, 945, 1874, 949, 0, 951, 952, 0, 0, 102,
	0, 1010, 0, 0, 0, 113, 0, 115, 116, 0,
	0, 0, 386, 1497, 1498, 1499, -2, 409, 0, 386,
	370, 309, 310, 311, 361, 313, 361, 361, 361, 361,
	375, 375, 375, 375, 344, 345, 346, 347, 348, 0,
	0, 330, 361, 361, 361, 361, 351, 352, 353, 354,
	355, 356, 357, 358, 314, 315, 316, 317, 318, 319,
	320, 321, 322, 363, 363, 363, 363, 363, 367, 367,
	0, 44, 0, 935, 936, 390, 0, 1388, 0, 0,
	1431, 1506, 1516, 0, 0, 0, 1506, 136, 0, 0,
	0, 576, 635, 527, 564, 577, 0, 530, 531, -2,
	0, 0, 512, 0, 514, 0, 410, 0, -2, 0,
	420, 0, 416, 420, 417, 420, 408, 421, 554, 555,
	556, 0, 558, 559, 665, 980, 0, 0, 0, 0,
	0, 671, 672, 673, 0, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 565, 566, 567, 568, 569,
	570, 571, 572, 0, 0, 0, 0, 514, 0, 561,
	0, 0, 466, 467, 468, 0, 0, 471, 472, 473,
	474, 0, 0, 477, 478, 479, 997, 998, 480, 481,
	506, 507, 508, 482, 483, 484, 485, 486, 487, 488,
	500, 501, 502, 503, 504, 505, 489, 490, 491, 492,
	493, 494, 497, 0, 151, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 927, 1012, 1527, 1528,
	739, 0, 1423, 0, 1426, 1427, 1428, 1429, 1430, 812,
	813, 0, 414, 415, 811, 811, 754, 798, 0, 811,
	758, 799, 759, 761, 760, 762, 775, 776, 811, 765,
	809, 810, 766, 767, 768, 769, 770, 771, 772, 794,
	777, 778, 779, 781, 780, 815, 0, 819, 820, 795,
	796, 0, 0, 835, 836, 0, 843, 867, 865, 866,
	868, 860, 861, 862, 863, 0, 869, 0, 0, 886,
	98, 891, 892, 893, 894, 906, 899, 1160, 1028, 1029,
	1030, 0, 1032, 1035, 0, 1144, 1146, 1037, 1039, 1155,
	1156, 1157, 0, 0, 0, 0, 0, 1043, 1047, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1069, 1332, 1333, 1334, 1088, 302, 303, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 1159, 1090, 0,
	942, 0, 0, 1362, 1359, 0, 0, 0, 1317, 1319,
	0, 0, 0, 0, 919, 920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1335, 0, 0, 0, 0,
	0, 1355, 0, 1095, 1096, 1097, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 1515, 0, 146,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 1260, 1261,
	1262, 41, 0, 0, 0, 929, 1366, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 875, 876, 878, 0, 1014, 0, 995,
	0, 0, 881, 882, 0, 923, 0, 926, 62, 64,
	0, 953, 932, 58, 53, 0, 0, 972, 1441, 375,
	1463, 0, 384, 384, 381, 1394, 1395, 0, 1387, 1389,
	1390, 81, 950, 946, 0, 1026, 0, 0, 1009, 0,
	956, 958, 959, 960, 992, 0, 963, 964, 0, 0,
	0, 0, 0, 100, 1011, 106, 0, 114, 0, 0,
	119, 120, 107, 108, 109, 110, 0, 624, -2, 461,
	183, 185, 186, 187, 178, -2, 373, 371, 372, 312,
	375, 375, 338, 339, 340, 341, 342, 343, 0, 0,
	331, 332, 333, 334, 323, 0, 324, 325, 326, 365,
	0, 327, 328, 0, 329, 428, 0, 1396, 391, 392,
	394, 402, 0, 397, 398, 0, 402, 402, 0, 423,
	424, 0, 1388, 1413, 0, 0, 0, 1517, 1516, 1516,
	1516, 0, 171, 172, 173, 174, 175, 176, 660, 0,
	0, 636, 658, 659, 169, 0, 0, 179, 516, 515,
	0, 692, 0, 426, 0, 0, 420, 420, 405, 406,
	557, 0, 0, 667, 668, 669, 670, 0, 0, 0,
	543, 455, 0, 544, 545, 514, 516, 0, 0, 386,
	469, 470, 475, 476, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 595,
	597, 598, 599, 518, 605, 594, 596, 600, 601, 602,
	518, 606, 607, 608, 609, 612, 614, 615, 616, 518,
	622, 611, 613, 617, 618, 619, 518, 623, 1410, 1411,
	1412, 0, 0, 730, 0, 0, 452, 96, 1505, 735,
	1424, 741, 1425, 808, 764, 800, 808, 756, 763, 787,
	833, 834, 839, 847, 848, 849, 850, 851, 890, 0,
	0, 0, 0, 898, 0, 0, 1036, 1145, 1147, 1040,
	0, 1044, 1048, 0, 0, 0, 1094, 1092, 1366, 0,
	0, 0, 1141, 0, 0, 1163, 1164, 0, 0, 0,
	1360, 0, 0, 1170, 0, 1320, 1321, 1178, 0, 0,
	0, 0, 0, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1382, 0, 0, 0, 0, 0, 1199,
	1200, 1201, 1202, 1203, 0, 1205, 0, 1206, 0, 0,
	0, 0, 1213, 1214, 1216, 0, 0, 1219, 1220, 0,
	0, 1221, 0, 0, 0, 1225, 0, 0, 0, 0,
	1234, 1235, 1236, 1237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 1249, 0, 1123, 0, 0,
	1123, 0, 1161, 928, 0, 1322, 1323, 1324, 1325, 1326,
	0, 0, 0, 0, 0, 0, 1282, 1283, 1285, 0,
	0, 1288, 0, 1290, 0, 1488, 874, 877, 879, 966,
	1015, 1016, 0, 0, 0, 0, 996, 1513, 921, 922,
	925, 974, 0, 1370, 0, 0, 953, 1026, 954, 0,
	933, 55, 969, 0, 1445, 1444, 1457, 1470, 384, 384,
	378, 379, 385, 380, 382, 383, 1386, 0, 1391, 0,
	1481, 0, 0, 1473, 0, 0, 0, 0, 0, 0,
	0, 0, 999, 0, 0, 1002, 0, 0, 0, 0,
	993, 964, 0, 965, 0, -2, 0, 0, 94, 95,
	0, 0, 0, 117, 118, 0, 0, 124, 387, 388,
	160, 169, 463, 184, 436, 0, 0, 308, 374, 335,
	336, 337, 0, 359, 0, 0, 0, 0, 457, 132,
	1400, 1399, 402, 402, 393, 0, 396, 0, 0, 0,
	1518, 362, 425, 0, 150, 0, 0, 0, 0, 0,
	156, 630, 0, 0, 637, 0, 0, 0, 525, 0,
	536, 537, 0, 664, -2, 726, 390, 0, 404, 407,
	981, 0, 0, 538, 0, 541, 542, 456, 516, 547,
	548, 562, 549, 498, 499, 496, 0, 0, 1432, 1433,
	1438, 1436, 1437, 137, 583, 585, 584, 588, 0, 0,
	0, 520, 0, 520, 0, 520, 520, 581, 0, 452,
	1396, 0, 734, 453, 454, 811, 811, 885, 99, 0,
	888, 0, 0, 0, 0, 1041, 1045, 1327, 1353, 361,
	361, 1340, 361, 367, 1343, 361, 1345, 361, 1348, 361,
	1351, 1352, 0, 0, 0, 943, 0, 0, 1169, 1363,
	0, 0, 1179, 1180, 1181, 1182, 1183, 1357, 0, 0,
	0, 1198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 149, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1118, 1122, 0, 1124, 1125, 0, 0, 1251, 0,
	0, 1263, 0, 1367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1017, 1022, 1022, 1022, 0, 0,
	0, 1500, 1501, 1371, 1372, 1026, 1373, 955, 934, 973,
	1463, 0, 1456, 0, -2, 1465, 0, 0, 0, 1471,
	376, 377, 947, 82, 1027, 85, 0, 1481, 1490, 0,
	1472, 1483, 1485, 0, 0, 0, 1477, 0, 1026, 957,
	988, 990, 0, 985, 1000, 1001, 1003, 0, 1005, 0,
	1007, 1008, 968, 962, 0, 102, 0, 1026, 1026, 101,
	0, 1013, 121, 122, 123, 462, 188, 193, 0, 0,
	0, 198, 0, 200, 0, 0, 0, 205, 206, 402,
	402, 437, 0, 305, 307, 0, 0, 191, 375, 0,
	375, 0, 366, 368, 0, 438, 458, 1397, 1398, 0,
	0, 395, 399, 400, 401, 0, 1507, 152, 0, 0,
	0, 633, 0, 661, 0, 0, 0, 0, 0, 0,
	180, 517, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 0, 402, 0, 0, 0, 402, 402, 402, 0,
	718, 389, 0, 0, 689, 686, 539, 0, 229, 230,
	232, 0, 0, 0, 0, 0, 546, 968, 1414, 1415,
	1416, 0, 1435, 1439, 140, 0, 0, 0, 0, 593,
	603, 0, 519, 604, 610, 620, 621, 731, 732, 733,
	97, 749, 755, 887, 907, 1034, 1042, 1046, 0, 0,
	0, 0, 1354, 1338, 375, 1341, 1342, 1344, 1346, 1347,
	1349, 1350, 1082, 1083, 1087, 0, 1166, 0, 1168, 1361,
	0, 1391, 0, 0, 0, 1197, 0, 0, 0, 1208,
	1207, 1209, 0, 1211, 1212, 1217, 1218, 1222, 0, 1224,
	1226, 1227, 0, 0, 0, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 0, 1116, 1119, 1250, 1126,
	1127, 1132, 1253, 0, 0, 1162, 1265, 0, 1270, 0,
	0, 1276, 0, 1280, 0, 1286, 1287, 1289, 1291, 0,
	0, 0, 0, 0, 994, 975, 66, 1373, 1375, 0,
	1450, 1448, 1448, 1458, 1459, 0, 0, 1466, 0, 0,
	0, 0, 86, 0, 0, 0, 1486, 0, 0, 0,
	0, 103, 1382, 982, 989, 0, 0, 983, 0, 984,
	1004, 1006, 961, 0, 1026, 1026, 92, 93, 0, 194,
	0, 196, 222, 223, 0, 199, 201, 202, 203, 209,
	210, 211, 204, 0, 0, 304, 306, 0, 0, 349,
	360, 350, 0, 0, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 968, 153, 154, 155, 625, 0, 635, 0,
	970, 0, 628, 0, 528, 0, 0, 0, 402, 402,
	402, 0, 0, 0, 0, 703, 0, 0, 666, 0,
	674, 0, 0, 0, 233, 234, 0, 1434, 582, 0,
	138, 139, 0, 0, 587, 521, 522, 1080, 0, 0,
	0, 1081, 1339, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 1204, 0, 0, 0, 1230, 0, 0, 0,
	655, 656, 0, 1294, 1121, 1382, 0, 1123, 1133, 1134,
	0, 1123, 1264, 0, 0, 0, 0, 0, 0, 0,
	1023, 0, 0, 0, 0, 1014, 1375, 1380, 0, 0,
	1453, 0, 1446, 1449, 1447, 1460, 0, 0, 1467, 0,
	1469, 0, 1491, 1492, 1484, 0, 1476, 1479, 1475, 1478,
	1391, 986, 0, 991, 0, 1382, 91, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 0, 0, 364, 369, 0, 0, 0, 626, 0,
	971, 638, 629, 0, 716, 0, 720, 0, 0, 0,
	723, 724, 725, 702, 0, 706, 430, 690, 687, 688,
	540, 0, 141, 142, 0, 0, 0, 1328, 0, 1331,
	1165, 1167, 0, 1194, 1195, 1196, 1336, 1337, 1210, 1223,
	1228, 0, 1231, 0, 0, 1232, 0, 657, 1112, 0,
	0, 1130, 1131, 0, 1266, 0, 1271, 1272, 0, 1277,
	0, 1281, 1292, 0, 1019, 976, 977, 1024, 1025, 0,
	0, 967, 1380, 84, 1381, 1378, 0, 1376, 1374, 1442,
	0, 1451, 1452, 1461, 1462, 1468, 0, 1474, 0, 89,
	0, 0, 0, 1391, 195, 0, 214, 0, 634, 0,
	637, 627, 714, 715, 0, 727, 719, 721, 722, 704,
	-2, 1417, 0, 0, 0, 589, 1329, 0, 0, 1233,
	0, 653, 654, 1120, 1113, 0, 1098, 1099, 1117, 1252,
	1254, 0, 0, 0, 0, 1018, 1020, 1021, 83, 0,
	1377, 1138, 0, 1454, 1455, 1482, 1480, 987, 994, 0,
	90, 443, 436, 1417, 0, 0, 0, 707, 708, 709,
	710, 711, 712, 713, 579, 1419, 143, 144, 509, 510,
	511, 137, 0, 1171, 1229, 1114, 0, 0, 0, 0,
	1110, 1111, 0, 1267, 0, 1273, 0, 1278, 0, 978,
	979, 1379, 0, 0, 639, 0, 641, 0, -2, 431,
	444, 0, 189, 215, 216, 0, 0, 219, 220, 221,
	212, 213, 133, 0, 0, 728, 0, 1420, 1421, 140,
	0, 0, 1105, 1106, 1107, 1108, 1109, 0, 0, 0,
	1139, 1118, 640, 0, 0, 386, 0, 650, 432, 433,
	0, 439, 440, 441, 442, 217, 218, 662, 0, 0,
	586, 1330, 0, 1268, 0, 1274, 0, 1279, 0, 642,
	643, 651, 0, 434, 0, 435, 0, 0, 0, 631,
	0, 662, 1418, 1115, 0, 0, 1137, 0, 652, 648,
	445, 447, 448, 0, 0, 446, 663, 632, 1269, 1275,
	0, 449, 450, 451, 644, 645, 646, 647,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 676,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:695
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:705
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:750
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:756
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:957
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1005
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1015
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1180
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1184
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1215
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1226
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1246
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1252
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1268
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1304
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1311
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1322
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1339
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1343
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1347
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1395
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1399
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1405
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1409
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1415
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1425
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1439
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1462
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1471
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1563
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1579
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1583
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1587
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1593
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1597
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1623
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1628
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1633
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1763
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = Utf8Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1961
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1986
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1994
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2243
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2282
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2377
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2392
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = "key"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2530
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2540
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2544
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2560
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2570
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2584
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2601
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2607
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2619
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2632
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2662
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2717
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2731
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2925
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2943
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2947
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2978
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3120
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3378
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3408
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3512
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3531
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3540
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3548
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3557
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3564
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3576
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3585
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3600
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3605
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3609
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3614
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3618
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3624
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3630
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3636
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3646
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3650
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3656
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3662
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3668
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3674
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3684
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3688
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3698
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3704
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3710
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3714
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3718
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3724
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3728
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3733
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3737
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3742
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3746
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3752
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3756
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3760
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3764
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3768
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3772
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3776
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3780
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3784
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3788
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3792
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3796
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3800
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3804
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3808
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3812
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3816
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3820
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3824
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3828
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3832
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3836
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3845
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3849
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3855
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3865
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3870
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3874
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3879
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3884
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3889
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3894
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3899
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3905
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3911
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3916
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3922
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3928
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3938
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3943
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3947
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3952
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3957
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3962
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3967
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3973
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3979
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3986
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3993
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4000
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4018
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4024
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4030
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4036
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4042
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4048
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4060
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4070
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4082
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4086
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4137
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4141
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4254
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4346
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = ""
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = "extended "
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4405
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4409
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4443
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4447
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4457
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4463
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4495
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4540
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4550
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4554
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4558
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4580
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4585
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4602
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4606
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4610
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4614
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4618
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4622
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4626
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4631
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4635
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4639
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4643
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = yyDollar[1].str
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = yyDollar[1].str
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = yyDollar[1].str
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4675
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4694
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4698
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4704
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4710
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4714
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4720
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4726
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4736
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4742
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4746
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4750
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4754
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4766
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4770
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4780
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4788
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4792
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4796
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4852
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4861
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4883
		{
			setAllowComments(yylex, true)
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4887
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4893
		{
			yyVAL.strs = nil
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4916
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.str = SQLCacheStr
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4937
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4943
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4947
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4957
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4966
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4972
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4976
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4985
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4990
		{
			yyVAL.strs = nil
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4998
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5006
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = SQLCacheStr
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = DistinctStr
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = DistinctStr
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = StraightJoinHint
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5042
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5052
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5056
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5060
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5064
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5069
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5077
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5089
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5093
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5099
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5105
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5119
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5123
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5127
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5131
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5137
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5141
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5147
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5151
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5160
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5169
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5175
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5185
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5195
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5199
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5207
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5213
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5217
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5230
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5234
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5238
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5242
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5248
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5250
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5256
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5260
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5262
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5265
		{
			yyVAL.empty = struct{}{}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.empty = struct{}{}
		}
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5270
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5274
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5291
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5295
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5299
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5305
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5311
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5315
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5319
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5323
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5329
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5333
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5343
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5357
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5363
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5372
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5378
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5388
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5392
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5396
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5400
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5405
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5409
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5413
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5417
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5528
		{
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5577
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5707
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5711
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5717
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5721
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5727
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5731
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5735
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5741
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5745
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5752
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5756
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5760
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5764
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5768
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5774
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5778
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5782
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5786
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5790
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5809
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5815
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5819
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5828
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5833
		{
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5836
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5842
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5848
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5852
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5864
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5870
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5874
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5880
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5884
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5890
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5894
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5906
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5912
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5916
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5922
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5928
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5948
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5952
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5959
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5963
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5967
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5971
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5977
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5981
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5985
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5989
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5993
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5997
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6001
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6007
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6011
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6015
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6022
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6028
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6594
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6600
		{
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6602
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6606
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6610
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6614
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6618
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6622
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6626
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6630
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6634
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6638
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6642
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6648
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6652
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6656
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6660
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6664
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6668
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6672
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6676
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6680
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6735
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6739
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6743
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6747
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6751
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6757
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6761
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6775
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6779
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6785
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6789
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6793
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6797
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6801
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6807
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6811
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6815
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6819
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6823
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6827
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6831
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6835
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6839
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6843
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6853
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6867
		{
			yyVAL.str = string("")
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6871
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6877
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6881
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6887
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6902
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6906
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6910
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6914
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6953
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6962
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6968
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6974
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6978
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6987
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6996
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7002
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7008
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7012
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7018
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7023
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7027
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7031
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7040
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7046
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7050
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7054
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7063
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7067
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7071
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7075
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7085
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7089
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7093
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7097
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7103
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7107
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7111
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7115
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7120
		{
			yyVAL.str = ""
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7124
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7128
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7132
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7137
		{
			yyVAL.str = ""
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7141
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7156
		{
			yyVAL.str = ""
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7160
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = "cascaded"
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7182
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7186
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7192
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7196
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7200
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7204
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7208
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7212
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7222
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7228
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7234
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7240
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7249
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7253
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7258
		{
			yyVAL.str = ""
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7262
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7268
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7272
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7278
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7282
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7286
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7291
		{
			yyVAL.str = ""
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7295
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7299
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7304
		{
			yyVAL.str = ""
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7308
		{
			yyVAL.str = " header"
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7313
		{
			yyVAL.str = ""
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7317
		{
			yyVAL.str = " manifest on"
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7321
		{
			yyVAL.str = " manifest off"
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7326
		{
			yyVAL.str = ""
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7330
		{
			yyVAL.str = " overwrite on"
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7334
		{
			yyVAL.str = " overwrite off"
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7340
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7345
		{
			yyVAL.str = ""
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7349
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7355
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7359
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7365
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7369
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7374
		{
			yyVAL.str = ""
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7378
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7388
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7394
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7398
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7402
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7407
		{
			yyVAL.str = ""
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7411
		{
			yyVAL.str = " optionally"
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7424
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7428
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7432
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7436
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7440
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7446
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7450
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7454
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7458
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7467
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7473
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7477
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7483
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7487
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7493
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7497
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7502
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7512
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7516
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7522
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = "charset"
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7539
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7543
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7547
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7561
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7563
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7568
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7576
		{
			yyVAL.empty = struct{}{}
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7578
		{
			yyVAL.empty = struct{}{}
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.empty = struct{}{}
		}
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7584
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7593
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7600
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7604
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7610
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7614
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7621
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7627
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7631
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7637
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7641
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7648
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8235
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8244
		{
			decNesting(yylex)
		}
	case 2091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8249
		{
			skipToEnd(yylex)
		}
	case 2092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8254
		{
			skipToEnd(yylex)
		}
	case 2093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8258
		{
			skipToEnd(yylex)
		}
	case 2094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8262
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
