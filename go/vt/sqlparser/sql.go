/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const PAUSE = 57638
const RESUME = 57639
const SCHEMA_MIGRATION = 57640
const VITESS_THROTTLER = 57641
const DML_JOB = 57642
const DETAILS = 57643
const TIME_PERIOD = 57644
const BEGIN = 57645
const START = 57646
const TRANSACTION = 57647
const COMMIT = 57648
const ROLLBACK = 57649
const SAVEPOINT = 57650
const RELEASE = 57651
const WORK = 57652
const CONSISTENT = 57653
const SNAPSHOT = 57654
const BIT = 57655
const TINYINT = 57656
const SMALLINT = 57657
const MEDIUMINT = 57658
const INT = 57659
const INTEGER = 57660
const BIGINT = 57661
const INTNUM = 57662
const REAL = 57663
const DOUBLE = 57664
const FLOAT_TYPE = 57665
const FLOAT4_TYPE = 57666
const FLOAT8_TYPE = 57667
const DECIMAL_TYPE = 57668
const NUMERIC = 57669
const TIME = 57670
const TIMESTAMP = 57671
const DATETIME = 57672
const YEAR = 57673
const CHAR = 57674
const VARCHAR = 57675
const BOOL = 57676
const CHARACTER = 57677
const VARBINARY = 57678
const NCHAR = 57679
const TEXT = 57680
const TINYTEXT = 57681
const MEDIUMTEXT = 57682
const LONGTEXT = 57683
const BLOB = 57684
const TINYBLOB = 57685
const MEDIUMBLOB = 57686
const LONGBLOB = 57687
const JSON = 57688
const JSON_SCHEMA_VALID = 57689
const JSON_SCHEMA_VALIDATION_REPORT = 57690
const ENUM = 57691
const GEOMETRY = 57692
const POINT = 57693
const LINESTRING = 57694
const POLYGON = 57695
const GEOMCOLLECTION = 57696
const GEOMETRYCOLLECTION = 57697
const MULTIPOINT = 57698
const MULTILINESTRING = 57699
const MULTIPOLYGON = 57700
const ASCII = 57701
const UNICODE = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const CODE = 57709
const COLLATION = 57710
const COLUMNS = 57711
const DATABASES = 57712
const ENGINES = 57713
const EVENT = 57714
const EXTENDED = 57715
const FIELDS = 57716
const FULL = 57717
const FUNCTION = 57718
const GTID_EXECUTED = 57719
const KEYSPACES = 57720
const OPEN = 57721
const PLUGINS = 57722
const PRIVILEGES = 57723
const PROCESSLIST = 57724
const SCHEMAS = 57725
const TABLES = 57726
const TRIGGERS = 57727
const USER = 57728
const VGTID_EXECUTED = 57729
const VITESS_KEYSPACES = 57730
const VITESS_METADATA = 57731
const VITESS_MIGRATIONS = 57732
const VITESS_REPLICATION_STATUS = 57733
const VITESS_SHARDS = 57734
const VITESS_TABLETS = 57735
const VITESS_TARGET = 57736
const VSCHEMA = 57737
const VITESS_THROTTLED_APPS = 57738
const WORKLOAD = 57739
const LASTSEENGTID = 57740
const FAILPOINTS = 57741
const DML_JOBS = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const FAST = 57755
const QUICK = 57756
const CHANGED = 57757
const MEDIUM = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_DATE = 57761
const NOW = 57762
const CURRENT_TIME = 57763
const LOCALTIME = 57764
const LOCALTIMESTAMP = 57765
const CURRENT_USER = 57766
const UTC_DATE = 57767
const UTC_TIME = 57768
const UTC_TIMESTAMP = 57769
const DAY = 57770
const DAY_HOUR = 57771
const DAY_MICROSECOND = 57772
const DAY_MINUTE = 57773
const DAY_SECOND = 57774
const HOUR = 57775
const HOUR_MICROSECOND = 57776
const HOUR_MINUTE = 57777
const HOUR_SECOND = 57778
const MICROSECOND = 57779
const MINUTE = 57780
const MINUTE_MICROSECOND = 57781
const MINUTE_SECOND = 57782
const MONTH = 57783
const QUARTER = 57784
const SECOND = 57785
const SECOND_MICROSECOND = 57786
const YEAR_MONTH = 57787
const WEEK = 57788
const REPLACE = 57789
const CONVERT = 57790
const CAST = 57791
const SUBSTR = 57792
const SUBSTRING = 57793
const SEPARATOR = 57794
const TIMESTAMPADD = 57795
const TIMESTAMPDIFF = 57796
const WEIGHT_STRING = 57797
const LTRIM = 57798
const RTRIM = 57799
const TRIM = 57800
const JSON_ARRAY = 57801
const JSON_OBJECT = 57802
const JSON_QUOTE = 57803
const JSON_DEPTH = 57804
const JSON_TYPE = 57805
const JSON_LENGTH = 57806
const JSON_VALID = 57807
const JSON_ARRAY_APPEND = 57808
const JSON_ARRAY_INSERT = 57809
const JSON_INSERT = 57810
const JSON_MERGE = 57811
const JSON_MERGE_PATCH = 57812
const JSON_MERGE_PRESERVE = 57813
const JSON_REMOVE = 57814
const JSON_REPLACE = 57815
const JSON_SET = 57816
const JSON_UNQUOTE = 57817
const COUNT = 57818
const AVG = 57819
const MAX = 57820
const MIN = 57821
const SUM = 57822
const GROUP_CONCAT = 57823
const BIT_AND = 57824
const BIT_OR = 57825
const BIT_XOR = 57826
const STD = 57827
const STDDEV = 57828
const STDDEV_POP = 57829
const STDDEV_SAMP = 57830
const VAR_POP = 57831
const VAR_SAMP = 57832
const VARIANCE = 57833
const REGEXP_INSTR = 57834
const REGEXP_LIKE = 57835
const REGEXP_REPLACE = 57836
const REGEXP_SUBSTR = 57837
const ExtractValue = 57838
const UpdateXML = 57839
const GET_LOCK = 57840
const RELEASE_LOCK = 57841
const RELEASE_ALL_LOCKS = 57842
const IS_FREE_LOCK = 57843
const IS_USED_LOCK = 57844
const LOCATE = 57845
const POSITION = 57846
const MATCH = 57847
const AGAINST = 57848
const BOOLEAN = 57849
const LANGUAGE = 57850
const WITH = 57851
const QUERY = 57852
const EXPANSION = 57853
const WITHOUT = 57854
const VALIDATION = 57855
const UNUSED = 57856
const ARRAY = 57857
const BYTE = 57858
const CUME_DIST = 57859
const DESCRIPTION = 57860
const DENSE_RANK = 57861
const EMPTY = 57862
const EXCEPT = 57863
const FIRST_VALUE = 57864
const GROUPING = 57865
const GROUPS = 57866
const JSON_TABLE = 57867
const LAG = 57868
const LAST_VALUE = 57869
const LATERAL = 57870
const LEAD = 57871
const NTH_VALUE = 57872
const NTILE = 57873
const OF = 57874
const OVER = 57875
const PERCENT_RANK = 57876
const RANK = 57877
const RECURSIVE = 57878
const ROW_NUMBER = 57879
const SYSTEM = 57880
const WINDOW = 57881
const ACTIVE = 57882
const ADMIN = 57883
const AUTOEXTEND_SIZE = 57884
const BUCKETS = 57885
const CLONE = 57886
const COLUMN_FORMAT = 57887
const COMPONENT = 57888
const DEFINITION = 57889
const ENFORCED = 57890
const ENGINE_ATTRIBUTE = 57891
const EXCLUDE = 57892
const FOLLOWING = 57893
const GET_MASTER_PUBLIC_KEY = 57894
const HISTOGRAM = 57895
const HISTORY = 57896
const INACTIVE = 57897
const INVISIBLE = 57898
const LOCKED = 57899
const MASTER_COMPRESSION_ALGORITHMS = 57900
const MASTER_PUBLIC_KEY_PATH = 57901
const MASTER_TLS_CIPHERSUITES = 57902
const MASTER_ZSTD_COMPRESSION_LEVEL = 57903
const NESTED = 57904
const NETWORK_NAMESPACE = 57905
const NOWAIT = 57906
const NULLS = 57907
const OJ = 57908
const OLD = 57909
const OPTIONAL = 57910
const ORDINALITY = 57911
const ORGANIZATION = 57912
const OTHERS = 57913
const PARTIAL = 57914
const PATH = 57915
const PERSIST = 57916
const PERSIST_ONLY = 57917
const PRECEDING = 57918
const PRIVILEGE_CHECKS_USER = 57919
const PROCESS = 57920
const RANDOM = 57921
const REFERENCE = 57922
const REQUIRE_ROW_FORMAT = 57923
const RESOURCE = 57924
const RESPECT = 57925
const RESTART = 57926
const RETAIN = 57927
const REUSE = 57928
const ROLE = 57929
const SECONDARY = 57930
const SECONDARY_ENGINE = 57931
const SECONDARY_ENGINE_ATTRIBUTE = 57932
const SECONDARY_LOAD = 57933
const SECONDARY_UNLOAD = 57934
const SIMPLE = 57935
const SKIP = 57936
const SRID = 57937
const THREAD_PRIORITY = 57938
const TIES = 57939
const UNBOUNDED = 57940
const VCPU = 57941
const VISIBLE = 57942
const RETURNING = 57943
const FORMAT_BYTES = 57944
const FORMAT_PICO_TIME = 57945
const PS_CURRENT_THREAD_ID = 57946
const PS_THREAD_ID = 57947
const GTID_SUBSET = 57948
const GTID_SUBTRACT = 57949
const WAIT_FOR_EXECUTED_GTID_SET = 57950
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57951
const FORMAT = 57952
const TREE = 57953
const VITESS = 57954
const TRADITIONAL = 57955
const VTEXPLAIN = 57956
const VEXPLAIN = 57957
const PLAN = 57958
const LOCAL = 57959
const LOW_PRIORITY = 57960
const KILL = 57961
const USERS = 57962
const NO_WRITE_TO_BINLOG = 57963
const LOGS = 57964
const ERROR = 57965
const GENERAL = 57966
const HOSTS = 57967
const OPTIMIZER_COSTS = 57968
const USER_RESOURCES = 57969
const SLOW = 57970
const CHANNEL = 57971
const RELAY = 57972
const EXPORT = 57973
const CURRENT = 57974
const ROW = 57975
const ROWS = 57976
const AVG_ROW_LENGTH = 57977
const CONNECTION = 57978
const CHECKSUM = 57979
const DELAY_KEY_WRITE = 57980
const ENCRYPTION = 57981
const ENGINE = 57982
const INSERT_METHOD = 57983
const MAX_ROWS = 57984
const MIN_ROWS = 57985
const PACK_KEYS = 57986
const PASSWORD = 57987
const FIXED = 57988
const DYNAMIC = 57989
const COMPRESSED = 57990
const REDUNDANT = 57991
const COMPACT = 57992
const ROW_FORMAT = 57993
const STATS_AUTO_RECALC = 57994
const STATS_PERSISTENT = 57995
const STATS_SAMPLE_PAGES = 57996
const STORAGE = 57997
const MEMORY = 57998
const DISK = 57999
const PARTITIONS = 58000
const LINEAR = 58001
const RANGE = 58002
const LIST = 58003
const SUBPARTITION = 58004
const SUBPARTITIONS = 58005
const HASH = 58006

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 53,
	1, 162,
	682, 162,
	-2, 170,
	-1, 54,
	135, 170,
	176, 170,
	352, 170,
	-2, 524,
	-1, 64,
	36, 822,
	240, 822,
	251, 822,
	286, 836,
	287, 836,
	-2, 824,
	-1, 69,
	242, 860,
	-2, 858,
	-1, 127,
	239, 1523,
	-2, 136,
	-1, 129,
	1, 163,
	682, 163,
	-2, 170,
	-1, 140,
	136, 410,
	245, 410,
	-2, 513,
	-1, 159,
	135, 170,
	176, 170,
	352, 170,
	-2, 533,
	-1, 842,
	87, 1540,
	-2, 1385,
	-1, 843,
	87, 1541,
	221, 1545,
	-2, 1386,
	-1, 844,
	221, 1544,
	-2, 43,
	-1, 923,
	60, 936,
	-2, 951,
	-1, 1011,
	250, 44,
	255, 44,
	-2, 421,
	-1, 1098,
	1, 581,
	682, 581,
	-2, 170,
	-1, 1412,
	221, 1545,
	-2, 1386,
	-1, 1560,
	60, 937,
	-2, 956,
	-1, 1561,
	60, 938,
	-2, 957,
	-1, 1612,
	135, 170,
	176, 170,
	352, 170,
	-2, 460,
	-1, 1695,
	136, 410,
	245, 410,
	-2, 513,
	-1, 1704,
	250, 45,
	255, 45,
	-2, 422,
	-1, 2093,
	221, 1549,
	-2, 1543,
	-1, 2094,
	221, 1545,
	-2, 1541,
	-1, 2193,
	135, 170,
	176, 170,
	352, 170,
	-2, 461,
	-1, 2200,
	26, 191,
	-2, 193,
	-1, 2603,
	78, 99,
	88, 99,
	-2, 1015,
	-1, 2672,
	657, 732,
	-2, 706,
	-1, 2845,
	50, 1491,
	-2, 1485,
	-1, 3505,
	657, 732,
	-2, 720,
	-1, 3593,
	90, 664,
	95, 664,
	105, 664,
	178, 664,
	179, 664,
	180, 664,
	181, 664,
	182, 664,
	183, 664,
	184, 664,
	185, 664,
	186, 664,
	187, 664,
	188, 664,
	189, 664,
	190, 664,
	191, 664,
	192, 664,
	193, 664,
	194, 664,
	195, 664,
	196, 664,
	197, 664,
	198, 664,
	199, 664,
	200, 664,
	201, 664,
	202, 664,
	203, 664,
	204, 664,
	205, 664,
	206, 664,
	207, 664,
	208, 664,
	209, 664,
	210, 664,
	211, 664,
	212, 664,
	213, 664,
	214, 664,
	215, 664,
	216, 664,
	217, 664,
	218, 664,
	219, 664,
	-2, 1908,
}

const yyPrivate = 57344

const yyLast = 48371

var yyAct = [...]int{
	1568, 846, 843, 716, 853, 3664, 2190, 3570, 3633, 1615,
	3634, 3486, 3079, 3222, 2995, 3536, 3675, 3559, 3591, 2897,
	2141, 2904, 3470, 3254, 2122, 3418, 3252, 2946, 2955, 2960,
	2957, 2956, 2954, 2959, 2958, 2858, 3253, 3468, 3209, 2124,
	1170, 917, 2503, 2861, 3282, 3458, 2537, 2975, 2804, 1575,
	1906, 2912, 939, 5, 695, 2264, 2862, 698, 3118, 200,
	2974, 2859, 200, 3287, 807, 2739, 806, 3112, 675, 2161,
	2856, 2576, 726, 681, 3138, 2977, 2145, 813, 2164, 2846,
	2563, 2084, 2227, 694, 200, 3104, 2723, 2669, 2637, 2252,
	696, 3001, 2232, 2638, 1673, 2295, 2639, 2178, 845, 200,
	2165, 168, 1172, 1043, 1114, 940, 2588, 1960, 972, 44,
	1562, 2555, 2166, 808, 2569, 2539, 2081, 2055, 1975, 2153,
	2273, 2089, 2709, 919, 1914, 2251, 681, 200, 42, 681,
	1956, 1143, 2234, 154, 2312, 2630, 2605, 1001, 1006, 1584,
	1604, 1702, 2168, 2054, 102, 1424, 708, 1720, 1542, 106,
	1979, 1538, 1840, 1933, 1336, 976, 1836, 1351, 1012, 1709,
	980, 1009, 1845, 2249, 981, 1801, 2223, 107, 1007, 1008,
	1603, 2224, 1589, 957, 1019, 959, 930, 2051, 1408, 1384,
	1988, 1168, 1905, 703, 1161, 2146, 927, 1854, 109, 87,
	172, 132, 1666, 1694, 137, 130, 131, 138, 1092, 926,
	928, 1432, 101, 952, 95, 702, 2090, 1428, 3495, 2662,
	100, 3665, 3210, 86, 2266, 2267, 2268, 3521, 925, 108,
	2943, 2266, 2692, 2691, 2310, 2660, 664, 1786, 3202, 690,
	3617, 97, 947, 951, 685, 3165, 619, 97, 862, 863,
	864, 97, 2731, 3522, 133, 2732, 933, 3257, 139, 3516,
	624, 3517, 1921, 670, 1920, 121, 1936, 1919, 2965, 1918,
	1045, 1048, 973, 1917, 1916, 1889, 1886, 999, 862, 863,
	864, 623, 688, 1062, 1063, 1064, 689, 1067, 1068, 1069,
	1070, 3612, 3257, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	2, 920, 966, 1022, 967, 934, 918, 2119, 2120, 2535,
	686, 1347, 812, 941, 2963, 43, 1023, 3571, 2565, 998,
	133, 997, 1049, 1052, 1053, 996, 995, 969, 2842, 3621,
	2682, 195, 2299, 670, 3256, 2391, 990, 2808, 1056, 1569,
	2969, 3685, 3637, 985, 3632, 3619, 113, 114, 115, 1369,
	118, 3655, 3517, 127, 3620, 134, 196, 156, 1065, 613,
	3084, 3083, 3577, 2297, 965, 810, 811, 2685, 177, 3256,
	3618, 3471, 2504, 683, 684, 1926, 2298, 664, 3026, 3414,
	3413, 2965, 1047, 913, 914, 915, 916, 3215, 133, 923,
	3216, 88, 3577, 88, 2962, 1046, 90, 3646, 3424, 167,
	921, 3615, 924, 3235, 1338, 155, 3223, 88, 664, 3560,
	3423, 88, 3567, 2292, 1965, 2579, 3596, 954, 955, 661,
	3046, 942, 1683, 97, 174, 3234, 979, 175, 3500, 2894,
	2895, 2400, 2699, 2700, 2185, 2186, 994, 2963, 1103, 1104,
	2580, 1898, 1899, 665, 2536, 2893, 143, 144, 166, 165,
	194, 2730, 2397, 2966, 88, 45, 46, 90, 2614, 2184,
	3300, 2613, 2715, 2969, 2615, 2708, 664, 642, 1133, 97,
	1106, 97, 3487, 1605, 94, 1606, 1352, 911, 49, 79,
	80, 640, 77, 81, 1366, 97, 1367, 1368, 1165, 97,
	910, 78, 1121, 2663, 992, 1134, 2398, 1122, 1138, 1139,
	1127, 1121, 2626, 965, 810, 811, 1122, 1337, 2149, 664,
	622, 2203, 2202, 2997, 1120, 3115, 1119, 2572, 2573, 2121,
	65, 637, 3034, 664, 1348, 3032, 2389, 2773, 1897, 678,
	655, 1546, 97, 1091, 1150, 1901, 1152, 1888, 3002, 3638,
	676, 682, 1601, 1547, 2710, 650, 3446, 664, 3447, 160,
	141, 163, 148, 140, 2670, 161, 162, 647, 653, 649,
	3639, 2274, 2990, 178, 1066, 2695, 1776, 664, 2318, 2313,
	2991, 3667, 184, 149, 1149, 1151, 2966, 2366, 1802, 2367,
	1154, 2368, 1136, 1137, 3204, 1363, 1163, 152, 150, 145,
	146, 147, 151, 1135, 665, 958, 2380, 1846, 1128, 142,
	2392, 2393, 2395, 2394, 1142, 1099, 1140, 1164, 153, 2149,
	1777, 2998, 1778, 2999, 2718, 200, 1141, 200, 3203, 2315,
	200, 200, 2369, 2319, 1072, 665, 3613, 627, 1032, 629,
	643, 1071, 667, 993, 666, 633, 2317, 631, 635, 644,
	636, 3398, 630, 3200, 641, 2277, 3261, 632, 645, 646,
	652, 656, 657, 658, 654, 651, 659, 625, 626, 648,
	1097, 639, 668, 681, 1002, 681, 681, 620, 1003, 2162,
	52, 55, 58, 57, 60, 1030, 76, 1550, 2316, 85,
	63, 82, 1003, 665, 1147, 681, 200, 1687, 1148, 1041,
	1040, 968, 962, 960, 2807, 61, 1039, 1358, 1153, 2774,
	1350, 1038, 169, 1037, 64, 93, 92, 2147, 2148, 74,
	75, 59, 1846, 1036, 1412, 1035, 1034, 83, 84, 195,
	1042, 1029, 2398, 1399, 989, 2243, 665, 991, 2916, 3686,
	1146, 1708, 1117, 1399, 1123, 1124, 1125, 1126, 977, 977,
	665, 3644, 975, 134, 1015, 1051, 2722, 1000, 2237, 977,
	1131, 1014, 3494, 2661, 1014, 1050, 177, 3573, 3199, 1837,
	2250, 1166, 1167, 953, 665, 66, 67, 2719, 68, 69,
	70, 71, 1420, 1602, 2303, 2302, 1033, 1844, 1155, 1156,
	1158, 2540, 2542, 2697, 665, 2296, 1833, 3573, 164, 2680,
	2936, 3572, 2664, 621, 859, 1402, 1403, 1404, 1405, 2619,
	859, 1329, 1339, 1059, 859, 1416, 2694, 1681, 2147, 2148,
	2735, 1680, 174, 1679, 1834, 175, 994, 1090, 3116, 1021,
	2412, 3572, 1677, 1031, 618, 1410, 994, 2294, 986, 617,
	968, 962, 960, 612, 2707, 988, 987, 2706, 194, 1352,
	1707, 1400, 1401, 3483, 1330, 1331, 3152, 3134, 91, 157,
	2610, 2575, 158, 2512, 1968, 3255, 1412, 1406, 1788, 1787,
	1789, 1790, 1791, 3679, 2628, 1593, 3163, 3164, 2570, 1501,
	3601, 2684, 2967, 2968, 1108, 3233, 669, 2191, 1399, 936,
	1396, 1094, 170, 2892, 992, 2971, 129, 2725, 3599, 182,
	3255, 1144, 2724, 1096, 1162, 1095, 2236, 3605, 3606, 662,
	1144, 3508, 1855, 1044, 3195, 2914, 2915, 961, 96, 91,
	96, 2725, 3600, 200, 663, 2683, 2724, 681, 681, 1116,
	1346, 3128, 1020, 2314, 96, 1910, 1570, 1572, 96, 1830,
	190, 1434, 200, 1430, 2399, 1431, 1359, 1607, 1357, 1354,
	1355, 1356, 1362, 1364, 1361, 2759, 1360, 1118, 1363, 2541,
	1105, 178, 681, 1980, 1130, 200, 1353, 1102, 2653, 1980,
	184, 2429, 1554, 3068, 1850, 1132, 1157, 681, 1367, 1368,
	1551, 96, 3296, 3647, 200, 171, 176, 173, 179, 180,
	181, 183, 185, 186, 187, 188, 1989, 1537, 1368, 3170,
	1093, 189, 191, 192, 193, 2967, 2968, 3169, 1822, 2281,
	1990, 1717, 1716, 1706, 1847, 1848, 1851, 1849, 2971, 2291,
	1815, 2286, 681, 993, 2913, 2286, 1507, 1508, 1509, 1510,
	1511, 2293, 2289, 993, 1032, 1412, 2916, 1555, 1030, 3538,
	106, 681, 681, 3640, 681, 3476, 681, 681, 1145, 681,
	681, 681, 681, 681, 681, 1556, 961, 1145, 107, 1856,
	2290, 1537, 1412, 1543, 2288, 1412, 681, 1412, 200, 1530,
	1358, 2338, 1115, 2337, 3153, 932, 2341, 2342, 3681, 109,
	2339, 2340, 3406, 3687, 3539, 1806, 2343, 73, 200, 1850,
	3477, 62, 2086, 3677, 1098, 3229, 3678, 3230, 3676, 3405,
	169, 681, 1021, 200, 1389, 1390, 1391, 1392, 1394, 1393,
	1395, 1396, 1684, 1685, 1686, 2404, 2405, 2406, 1796, 681,
	1569, 200, 1369, 3396, 3246, 1771, 125, 1985, 1700, 1847,
	1848, 1851, 1849, 1552, 3245, 3177, 1986, 1058, 1571, 1987,
	1574, 200, 1807, 122, 3176, 3166, 1714, 2994, 200, 1693,
	918, 920, 2944, 2932, 1540, 2635, 1333, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 681, 2634, 1598, 1599,
	3688, 1712, 1753, 1749, 2633, 2246, 1752, 1797, 1754, 1761,
	1762, 1536, 1795, 2240, 1781, 1767, 1768, 1722, 1711, 1723,
	1780, 1725, 1727, 1676, 1779, 1731, 1733, 1735, 1737, 1739,
	1769, 1794, 1710, 1710, 123, 1020, 1763, 670, 1690, 1691,
	1024, 1014, 1689, 1783, 1703, 1026, 862, 863, 864, 1027,
	1025, 1842, 1825, 2241, 1823, 1824, 1760, 1828, 1829, 1759,
	2239, 1826, 1827, 1803, 1817, 1804, 1816, 2740, 1805, 1820,
	1821, 1553, 1859, 1818, 1819, 1557, 1758, 1729, 1021, 1863,
	921, 1865, 1866, 1867, 1868, 1757, 1113, 1366, 1872, 1367,
	1368, 1857, 1858, 1112, 2242, 1793, 2761, 3160, 670, 1601,
	1884, 1885, 1838, 1887, 2238, 1862, 124, 1782, 2617, 670,
	170, 3641, 1869, 1870, 1871, 2262, 2261, 182, 2354, 2350,
	2352, 2353, 2351, 2357, 2358, 2260, 2259, 2355, 2356, 133,
	997, 1682, 2258, 2257, 996, 995, 2561, 3666, 1021, 1359,
	2466, 1357, 1354, 1355, 1356, 1362, 1364, 1361, 1578, 1360,
	1365, 1569, 2742, 1928, 1930, 1931, 3503, 1861, 190, 1353,
	2325, 2321, 2323, 2324, 2322, 2328, 2329, 1369, 3502, 2326,
	2327, 681, 681, 3480, 103, 1882, 3479, 1929, 3478, 1883,
	3401, 1020, 3604, 1057, 681, 104, 1810, 1054, 1808, 1809,
	3385, 1813, 1814, 200, 1579, 1811, 1812, 3628, 1569, 1569,
	1021, 1938, 3384, 171, 176, 173, 179, 180, 181, 183,
	185, 186, 187, 188, 3295, 1939, 1397, 1398, 1937, 189,
	191, 192, 193, 2086, 1365, 1569, 3603, 2083, 2752, 2751,
	2750, 2561, 3566, 2744, 3293, 2748, 2085, 2743, 3242, 2741,
	1569, 1020, 681, 3231, 2746, 1963, 1963, 1014, 1017, 1018,
	857, 977, 1412, 2745, 112, 1011, 1015, 1021, 2561, 3546,
	3496, 1369, 1535, 681, 1534, 111, 1533, 110, 3174, 1412,
	1983, 2747, 2749, 3159, 1984, 3008, 1010, 1941, 3006, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 2561, 3542, 681, 681, 1932, 1385, 1934, 3529,
	1569, 3432, 1366, 1020, 1367, 1368, 3213, 3493, 2047, 1014,
	1017, 1018, 3003, 977, 1942, 3409, 1569, 1011, 1015, 3023,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1393, 1395,
	1396, 2561, 3397, 3213, 1569, 1569, 2079, 3000, 1369, 1961,
	1961, 2935, 1369, 2934, 2094, 3651, 1569, 2561, 3211, 1964,
	1894, 1895, 1391, 1392, 1394, 1393, 1395, 1396, 2043, 2713,
	1020, 2108, 2644, 1410, 2631, 1024, 1014, 1935, 1911, 87,
	1026, 1532, 87, 2308, 1027, 1025, 2286, 1569, 1570, 2115,
	1981, 2307, 2091, 3132, 1569, 1369, 2144, 200, 1537, 105,
	1369, 2477, 1569, 681, 2128, 1028, 1366, 1369, 1367, 1368,
	2127, 1940, 2082, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1371, 1890, 2138, 1852, 2154, 2155, 200, 2925, 2924, 681,
	2922, 2923, 3649, 1569, 2920, 2921, 3583, 1569, 1967, 200,
	2920, 2919, 1369, 681, 2585, 1569, 2094, 200, 1792, 200,
	1784, 200, 200, 1774, 2093, 2398, 2693, 2133, 1569, 2134,
	1770, 3041, 1766, 2041, 1672, 2674, 681, 1991, 1992, 1993,
	1994, 1765, 2200, 2052, 1764, 2096, 2097, 2606, 1974, 1976,
	1569, 2005, 1580, 1366, 2091, 1367, 1368, 1366, 2606, 1367,
	1368, 3427, 106, 1387, 1388, 1389, 1390, 1391, 1392, 1394,
	1393, 1395, 1396, 1369, 2092, 43, 1160, 1369, 43, 103,
	107, 1369, 1159, 106, 2667, 2668, 105, 2561, 2560, 1369,
	104, 3431, 2426, 2137, 2557, 681, 2247, 1569, 2422, 1569,
	1366, 107, 1367, 1368, 3389, 1366, 1369, 1367, 1368, 105,
	2607, 2116, 1366, 3388, 1367, 1368, 2093, 2052, 1966, 1569,
	2609, 2607, 681, 2209, 2210, 2211, 2212, 2577, 681, 2095,
	3221, 2398, 2098, 2099, 2194, 2204, 933, 2205, 2206, 2207,
	2208, 2887, 2195, 2126, 2176, 1569, 2671, 1366, 2577, 1367,
	1368, 2398, 1536, 2215, 2216, 2217, 2218, 3581, 1569, 2649,
	2114, 3579, 1569, 2287, 1369, 2425, 2159, 2422, 2229, 2275,
	2139, 2857, 2198, 3455, 1569, 681, 1672, 1671, 1613, 1612,
	681, 2235, 3127, 2157, 681, 681, 2136, 1369, 2199, 3127,
	3453, 1569, 1369, 2182, 2181, 111, 2180, 1365, 2464, 2585,
	3129, 3534, 2197, 2196, 966, 3507, 967, 1385, 1366, 2734,
	1367, 1368, 1366, 2245, 1367, 1368, 1366, 2561, 1367, 1368,
	3127, 2286, 200, 2584, 1366, 2585, 1367, 1368, 2272, 200,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1393, 1395,
	1396, 1366, 2230, 1367, 1368, 3178, 3088, 112, 2029, 3642,
	2226, 2219, 2221, 2222, 2922, 200, 200, 2244, 111, 200,
	110, 200, 2248, 3024, 1365, 2830, 2256, 200, 2280, 105,
	2183, 2283, 1569, 2284, 2422, 2477, 3147, 200, 2585, 2230,
	1022, 2300, 2278, 2453, 200, 2452, 2279, 2286, 2282, 2947,
	2269, 2152, 1573, 1023, 2301, 1369, 3179, 3180, 3181, 1366,
	2117, 1367, 1368, 1710, 1966, 1912, 1896, 1832, 2304, 1600,
	1385, 1005, 2305, 2306, 200, 125, 1004, 97, 3609, 3549,
	3420, 1576, 1366, 681, 1367, 1368, 1369, 1366, 1569, 1367,
	1368, 2172, 2468, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1394, 1393, 1395, 1396, 2311, 2021, 2010, 2011, 2012, 2013,
	2023, 2014, 2015, 2016, 2028, 2024, 2017, 2018, 2025, 2026,
	2027, 2019, 2020, 2022, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1394, 1393, 1395, 1396, 3386, 3307, 3194, 2641, 3450,
	1569, 3191, 2382, 2383, 3172, 3051, 1369, 2385, 2415, 1412,
	3050, 2094, 2420, 97, 1369, 2423, 2386, 2424, 1674, 2228,
	2419, 1369, 2431, 2992, 1582, 2949, 2433, 2434, 2435, 1097,
	2418, 2372, 2945, 2408, 1385, 2410, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2378, 2675, 1369, 2416,
	1366, 2225, 1367, 1368, 2220, 1934, 2214, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1394, 1393, 1395, 1396, 2213, 1799,
	2409, 1705, 2457, 2458, 2459, 2460, 2461, 1701, 2463, 1668,
	126, 1366, 2465, 1367, 1368, 2996, 2470, 2471, 3661, 2472,
	1581, 2388, 2475, 3421, 2476, 3139, 3140, 2243, 2479, 3491,
	2131, 3659, 2483, 3635, 3515, 3098, 2488, 2489, 2490, 2491,
	2396, 2093, 1745, 3441, 3142, 2941, 2940, 1892, 2640, 2502,
	2414, 2505, 2506, 2939, 1935, 2857, 2654, 1369, 3182, 2508,
	2510, 2407, 3436, 1569, 2373, 1369, 2513, 2514, 2515, 2516,
	2517, 1366, 2135, 1367, 1368, 1741, 3145, 2524, 2525, 1366,
	2526, 1367, 1368, 2529, 2531, 2138, 1366, 2533, 1367, 1368,
	200, 2092, 3144, 1746, 1747, 1748, 2641, 2545, 200, 2428,
	1369, 3277, 2876, 3276, 1963, 3183, 3184, 3185, 681, 1893,
	2436, 1369, 2879, 1366, 2875, 1367, 1368, 2880, 3511, 681,
	3422, 2877, 1742, 1743, 1744, 2143, 2878, 2451, 1577, 1369,
	2881, 3133, 2594, 2595, 1385, 2544, 1369, 1381, 2835, 1382,
	2834, 3103, 1569, 200, 3475, 1385, 3286, 2411, 200, 3096,
	1569, 3275, 2462, 1383, 1397, 1398, 1380, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1394, 1393, 1395, 1396, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1394, 1393, 1395, 1396, 3120,
	3288, 2547, 2581, 2549, 3093, 1569, 3123, 3119, 691, 937,
	2844, 2562, 1366, 1369, 1367, 1368, 3393, 938, 1961, 1831,
	1366, 909, 1367, 1368, 2918, 2624, 2645, 2546, 1061, 1060,
	1989, 2681, 3017, 3091, 1569, 2640, 681, 1369, 2558, 2600,
	3056, 1569, 200, 1369, 1990, 2847, 2849, 1369, 2728, 200,
	1543, 103, 1332, 2571, 2850, 1366, 2534, 1367, 1368, 1369,
	105, 134, 104, 681, 1369, 3125, 1366, 103, 1367, 1368,
	681, 2554, 2627, 2629, 105, 2154, 2155, 2559, 104, 681,
	3673, 2666, 2574, 1369, 1366, 2620, 1367, 1368, 2937, 1537,
	2604, 1366, 2376, 1367, 1368, 1412, 3588, 3039, 1569, 3492,
	3416, 2690, 1369, 2917, 2608, 3105, 1369, 2598, 200, 200,
	200, 200, 200, 2235, 2611, 1369, 2140, 945, 946, 943,
	2618, 3094, 949, 949, 2621, 1369, 2402, 2532, 1569, 2833,
	2643, 2530, 1569, 2365, 2364, 2646, 2647, 2832, 3463, 2363,
	2632, 2362, 112, 2509, 1569, 110, 2361, 2360, 1366, 3196,
	1367, 1368, 2359, 111, 1369, 110, 2642, 2650, 3283, 2349,
	2348, 1369, 2347, 2346, 105, 200, 200, 2492, 1569, 2655,
	2656, 2657, 1366, 2651, 1367, 1368, 1369, 2345, 1366, 2687,
	1367, 1368, 1366, 1369, 1367, 1368, 2484, 1569, 1369, 2344,
	3066, 200, 2336, 1693, 1366, 1369, 1367, 1368, 2456, 1366,
	2636, 1367, 1368, 2577, 2335, 2334, 2688, 2333, 3462, 3062,
	2332, 2686, 681, 2676, 2677, 3444, 2331, 2330, 1366, 3294,
	1367, 1368, 112, 1369, 3292, 3291, 3284, 2763, 2764, 2765,
	2766, 2767, 1369, 111, 111, 110, 3192, 1366, 3048, 1367,
	1368, 1366, 3124, 1367, 1368, 3047, 2772, 3122, 2711, 2950,
	1366, 1369, 1367, 1368, 2712, 2270, 1688, 1369, 2738, 681,
	1366, 2714, 1367, 1368, 43, 944, 3113, 3044, 3662, 112,
	2716, 3265, 2528, 2599, 2753, 2557, 2601, 2717, 2775, 2527,
	111, 3663, 3662, 2768, 2454, 2736, 2129, 2720, 1594, 1366,
	1586, 1367, 1368, 2737, 116, 117, 1366, 681, 1367, 1368,
	1369, 3663, 3481, 2726, 3158, 681, 2727, 2523, 935, 125,
	3, 1366, 99, 1367, 1368, 1369, 2522, 1, 1366, 1909,
	1367, 1368, 10, 1366, 1110, 1367, 1368, 1369, 1843, 1335,
	1366, 2756, 1367, 1368, 1907, 2521, 681, 9, 1334, 2809,
	2754, 2520, 1908, 2814, 3162, 8, 3598, 2811, 638, 2118,
	200, 1541, 3636, 3594, 681, 3595, 1785, 1775, 1366, 3224,
	1367, 1368, 2082, 2755, 2082, 2053, 3417, 1366, 681, 1367,
	1368, 2953, 1412, 2866, 2276, 681, 681, 1412, 200, 200,
	200, 200, 200, 3190, 2519, 2783, 1366, 2777, 1367, 1368,
	200, 2884, 1366, 2233, 1367, 1368, 200, 1013, 200, 2518,
	159, 200, 200, 200, 2192, 2193, 2814, 3562, 120, 970,
	2869, 2507, 119, 1016, 2810, 1369, 2812, 2837, 2886, 2854,
	1129, 2271, 2785, 2813, 2787, 3214, 2838, 2793, 2794, 2795,
	2796, 2797, 2625, 2201, 1619, 1366, 1617, 1367, 1368, 1618,
	2798, 2799, 2800, 2801, 2825, 1616, 1621, 200, 2863, 1620,
	1366, 3025, 1367, 1368, 2455, 3067, 2836, 1900, 677, 2839,
	681, 2597, 1366, 1412, 1367, 1368, 671, 197, 681, 1608,
	1587, 2851, 2852, 200, 2888, 3080, 2870, 2889, 1055, 2873,
	628, 2829, 926, 2860, 2926, 2309, 2973, 200, 2860, 2871,
	2872, 634, 2874, 2882, 1417, 106, 1891, 2890, 2831, 2501,
	2612, 925, 964, 1842, 956, 2826, 2827, 2828, 1369, 2130,
	2548, 2896, 200, 107, 963, 200, 3394, 2865, 3117, 2843,
	2845, 2868, 2927, 2929, 3019, 2928, 2564, 1369, 2848, 2841,
	2417, 3474, 3285, 3547, 2930, 2931, 2622, 2980, 1583, 2981,
	3087, 2427, 1978, 1407, 3036, 3037, 3038, 2169, 3040, 3042,
	1366, 3260, 1367, 1368, 2235, 1927, 700, 2972, 1369, 699,
	697, 2550, 3049, 2578, 2987, 1372, 2951, 3053, 3054, 3055,
	3057, 3058, 3059, 3060, 2952, 847, 3061, 2538, 3063, 3064,
	3065, 1595, 2589, 3069, 3070, 3071, 3072, 3073, 3074, 3075,
	3076, 3077, 3078, 3004, 3005, 681, 3007, 3012, 3009, 3010,
	3013, 3085, 1369, 2587, 3089, 2586, 3090, 3092, 3020, 3095,
	3097, 2500, 3099, 3100, 3101, 3102, 3021, 3030, 2374, 2177,
	3108, 3015, 3016, 3141, 200, 3027, 3028, 3137, 3029, 3590,
	2171, 3031, 1369, 3033, 2167, 3035, 2556, 3082, 798, 797,
	709, 1369, 2499, 1366, 3086, 1367, 1368, 2590, 2593, 2594,
	2595, 2591, 701, 2592, 2596, 3130, 3131, 3139, 3140, 3135,
	2172, 1369, 1366, 693, 1367, 1368, 2590, 2593, 2594, 2595,
	2591, 796, 2592, 2596, 1369, 795, 3155, 2979, 3574, 2696,
	200, 2993, 2698, 2623, 1369, 924, 2498, 2989, 2172, 2172,
	2172, 2172, 2172, 1366, 1349, 1367, 1368, 1369, 3111, 1559,
	687, 1370, 3109, 3106, 3107, 984, 3022, 3498, 2172, 200,
	1369, 2172, 3114, 2401, 3045, 3121, 2497, 1369, 1558, 3126,
	2008, 2009, 3505, 3146, 2961, 2496, 3208, 2942, 2672, 200,
	1425, 3136, 200, 200, 200, 2263, 1369, 1366, 3143, 1367,
	1368, 72, 681, 681, 47, 2495, 3148, 1369, 3469, 3535,
	3150, 3151, 1369, 794, 791, 2980, 3149, 2981, 2494, 3262,
	3197, 3198, 1369, 3156, 3263, 3212, 3157, 1366, 2493, 1367,
	1368, 3264, 1369, 2805, 3218, 3219, 1366, 2806, 1367, 1368,
	1369, 2487, 3518, 3519, 1369, 790, 3173, 3520, 3175, 681,
	681, 681, 681, 1369, 2486, 2036, 1366, 1369, 1367, 1368,
	1345, 2485, 1369, 1342, 3167, 3168, 3611, 1902, 98, 1366,
	38, 1367, 1368, 3232, 37, 36, 3236, 35, 34, 1366,
	2482, 1367, 1368, 28, 27, 1567, 1563, 26, 3220, 25,
	24, 2481, 1366, 21, 1367, 1368, 2480, 20, 31, 23,
	1564, 22, 19, 3247, 18, 1366, 2478, 1367, 1368, 2964,
	3631, 3672, 1366, 128, 1367, 1368, 2474, 3201, 3251, 56,
	53, 3205, 3206, 3207, 2473, 1669, 1670, 1566, 2469, 1565,
	3259, 1366, 51, 1367, 1368, 136, 135, 2467, 3266, 54,
	50, 2432, 1366, 1100, 1367, 1368, 2421, 1366, 3241, 1367,
	1368, 48, 33, 32, 17, 3237, 16, 1366, 15, 1367,
	1368, 200, 14, 13, 12, 11, 7, 1366, 6, 1367,
	1368, 41, 40, 30, 39, 1366, 29, 1367, 1368, 1366,
	1412, 1367, 1368, 3280, 3258, 681, 4, 681, 1366, 2659,
	1367, 1368, 1366, 2265, 1367, 1368, 0, 1366, 0, 1367,
	1368, 0, 1963, 0, 1567, 1563, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 1564,
	858, 0, 0, 89, 0, 0, 3290, 3303, 3305, 3281,
	3289, 0, 3301, 0, 0, 0, 3299, 0, 0, 3297,
	0, 0, 0, 0, 1560, 1561, 1566, 681, 1565, 0,
	2172, 0, 1675, 0, 0, 0, 0, 2863, 0, 3408,
	200, 2863, 0, 681, 3249, 3395, 3313, 0, 3415, 0,
	3310, 3311, 0, 0, 0, 0, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3390, 0, 0, 3425,
	3426, 2860, 3428, 0, 3429, 3430, 1961, 3407, 3392, 3433,
	3434, 3435, 3391, 3437, 3440, 3309, 0, 0, 922, 0,
	89, 3412, 1963, 3411, 3419, 0, 0, 0, 0, 3449,
	3451, 3452, 3454, 3456, 3457, 3459, 3439, 681, 3399, 922,
	0, 681, 681, 0, 0, 0, 0, 0, 0, 3438,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 3443, 0, 0, 0, 3402, 3403, 3404, 0,
	681, 3445, 0, 3489, 0, 3448, 0, 0, 0, 0,
	0, 0, 0, 0, 3464, 3465, 3467, 3466, 3485, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 3482, 0, 0, 0, 0, 0,
	0, 0, 3488, 0, 0, 0, 1961, 0, 3484, 0,
	0, 0, 0, 0, 0, 3442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 3490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 681, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3473, 0, 842, 3514,
	0, 3509, 3501, 0, 43, 0, 0, 0, 3504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3530,
	0, 0, 0, 0, 0, 3531, 3532, 3506, 0, 0,
	0, 0, 0, 0, 681, 0, 3497, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 681, 3543, 3524, 0,
	0, 3525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 0, 3533, 0, 0, 0, 680,
	681, 681, 0, 3568, 3569, 0, 0, 3540, 0, 0,
	0, 0, 3575, 3550, 3576, 0, 0, 3578, 3580, 3582,
	0, 0, 681, 3561, 3553, 3558, 3555, 3554, 3552, 3557,
	3556, 3545, 0, 3548, 0, 0, 200, 681, 3419, 3563,
	0, 0, 3610, 0, 0, 0, 0, 3586, 0, 0,
	0, 0, 680, 0, 0, 680, 3607, 3597, 3589, 3602,
	0, 0, 0, 3575, 0, 3576, 0, 0, 0, 3616,
	0, 3614, 0, 0, 1922, 1923, 1924, 1925, 3513, 0,
	681, 3627, 0, 0, 0, 2860, 3523, 0, 0, 0,
	0, 0, 3630, 3625, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3648, 3650, 3652, 0, 0, 3645, 681,
	3643, 681, 1420, 1969, 1970, 0, 1963, 3656, 1972, 3653,
	949, 949, 1977, 3660, 3658, 0, 1982, 3654, 0, 3575,
	0, 3576, 0, 0, 3671, 3668, 0, 0, 0, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 3674,
	3683, 3684, 3682, 2030, 2031, 2032, 2033, 2034, 2035, 2037,
	3680, 2042, 0, 2044, 2045, 2046, 0, 2048, 2049, 2050,
	1963, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 3439, 2080, 3690, 2087, 2088, 949,
	0, 949, 949, 949, 949, 949, 3691, 3692, 0, 43,
	1961, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 3657,
	2109, 2110, 2111, 2112, 2113, 0, 0, 860, 0, 2086,
	0, 0, 861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 3689, 0, 0, 0, 0, 0, 0,
	2150, 2151, 0, 0, 0, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2189, 0, 0, 0,
	0, 1169, 0, 1169, 1169, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 0, 0, 0,
	0, 922, 1409, 1414, 1415, 0, 1418, 2231, 1419, 1421,
	1422, 1423, 0, 1426, 1427, 1429, 1429, 0, 1429, 1433,
	1433, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 0, 0, 2900, 0,
	1500, 0, 1502, 1503, 1504, 1505, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 1433, 1433, 1433, 1433, 1433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 2901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 0, 2903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2914, 2915, 0, 0, 0, 0, 0, 2899,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 922, 0, 0, 0, 0, 922, 680,
	1328, 680, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 2905, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 2665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 2913, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 2916, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 174, 0, 0, 175, 0, 0,
	2437, 2438, 2439, 2440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 1697, 166, 165,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2902, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 160,
	1698, 163, 0, 1695, 0, 161, 162, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 680, 680, 0, 0, 174, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	0, 1411, 1715, 0, 0, 1718, 1719, 680, 680, 0,
	680, 0, 680, 680, 0, 680, 680, 680, 680, 680,
	680, 0, 169, 0, 0, 0, 0, 0, 1411, 1750,
	1751, 1411, 680, 1411, 0, 1756, 178, 0, 2906, 1169,
	1169, 0, 2910, 0, 0, 184, 799, 0, 0, 2909,
	0, 0, 0, 89, 0, 0, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 2911, 0, 680, 0, 0, 2907, 0,
	0, 0, 0, 2908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 1692, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 156,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2733, 0, 0, 0, 0, 0, 0, 157,
	974, 167, 158, 982, 0, 169, 0, 155, 0, 0,
	0, 949, 0, 0, 2757, 2758, 0, 0, 2760, 0,
	0, 2762, 0, 0, 0, 0, 174, 0, 0, 175,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 182,
	0, 2769, 2770, 2771, 0, 0, 0, 0, 1696, 1697,
	166, 165, 194, 2776, 0, 0, 2778, 2779, 2780, 0,
	0, 0, 2781, 2782, 0, 0, 2056, 2784, 0, 0,
	2786, 0, 0, 2788, 2789, 2790, 2791, 0, 0, 0,
	190, 2792, 2056, 2056, 2056, 2056, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 2815, 2816, 2817,
	2818, 2819, 2820, 0, 0, 0, 2821, 2822, 0, 2823,
	0, 2824, 0, 0, 0, 171, 176, 173, 179, 180,
	181, 183, 185, 186, 187, 188, 0, 680, 680, 2170,
	0, 189, 191, 192, 193, 0, 0, 0, 0, 0,
	680, 160, 1698, 163, 0, 1695, 0, 161, 162, 0,
	0, 0, 0, 0, 0, 178, 2855, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 2885, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 983, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 680,
	0, 0, 0, 190, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 983, 0, 0, 0,
	0, 0, 2948, 0, 0, 0, 0, 0, 0, 0,
	680, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 176,
	173, 179, 180, 181, 183, 185, 186, 187, 188, 0,
	0, 0, 0, 0, 189, 191, 192, 193, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1544, 0, 0, 0, 0,
	3043, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 3052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 680, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2403, 0, 0,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 170, 0, 0, 0, 2253, 2254,
	2255, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2413, 0, 680, 0,
	0, 0, 0, 0, 680, 1713, 0, 0, 1713, 0,
	1713, 0, 0, 0, 0, 0, 2285, 0, 0, 0,
	0, 0, 190, 0, 3193, 0, 0, 1171, 0, 1171,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 680, 0, 0, 0, 0, 680, 3217, 0, 0,
	680, 680, 0, 0, 0, 0, 0, 171, 176, 173,
	179, 180, 181, 183, 185, 186, 187, 188, 0, 0,
	0, 0, 0, 189, 191, 192, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3238, 0,
	3239, 0, 2511, 3240, 0, 0, 3243, 3244, 0, 0,
	0, 0, 0, 0, 0, 3248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3250, 0, 0, 0, 0,
	0, 0, 0, 0, 2543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3267, 0, 0,
	3268, 922, 3269, 3270, 0, 3271, 0, 3272, 0, 0,
	0, 0, 3273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2582, 2583, 0, 0, 0, 0, 0, 680,
	0, 2170, 0, 0, 922, 2602, 0, 3298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3306, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 0, 2679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 1721, 0, 1721, 0,
	1721, 1721, 0, 1730, 1721, 1721, 1721, 1721, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 1101, 0,
	1107, 0, 0, 1109, 1111, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 3526,
	0, 0, 3527, 0, 3528, 2802, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	1713, 1713, 0, 0, 0, 680, 0, 0, 2170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 2689, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 89, 0, 0, 2170, 2170, 2170, 2170,
	2170, 0, 0, 0, 0, 0, 0, 0, 3608, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 0, 2170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3622, 0,
	3623, 0, 3624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 1171, 0, 0, 0,
	0, 0, 0, 2970, 0, 0, 0, 0, 1903, 0,
	0, 0, 0, 2978, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3669, 0,
	3670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 1597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 1614, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 2006, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 1411, 800,
	0, 680, 680, 1411, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2132, 2170, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 3154, 0, 0, 0, 0, 198, 0, 0, 616,
	0, 0, 0, 2142, 2933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	1171, 616, 0, 0, 1860, 0, 680, 0, 0, 1411,
	0, 1864, 0, 0, 680, 0, 931, 0, 0, 0,
	974, 0, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 0,
	0, 0, 0, 950, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3018, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	0, 0, 982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 974,
	0, 0, 0, 0, 1957, 0, 0, 0, 1957, 1957,
	0, 0, 0, 0, 0, 3274, 0, 3278, 3279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2864, 0, 89, 0, 2864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 680, 680, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 0, 0, 0, 0, 0,
	0, 0, 2156, 0, 0, 0, 1411, 0, 0, 3499,
	2160, 680, 2163, 680, 0, 1915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 680, 616, 0, 0, 616, 616, 0,
	0, 0, 2551, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 2566, 0, 0, 0, 0, 3544, 0,
	0, 0, 680, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 680, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	2648, 0, 0, 0, 0, 0, 0, 0, 0, 3626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1915, 0, 2142, 0, 0,
	0, 0, 2320, 0, 2673, 0, 0, 0, 0, 0,
	0, 0, 0, 2678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2370, 2371,
	0, 0, 2375, 0, 0, 0, 0, 0, 0, 0,
	2379, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	2381, 0, 0, 0, 0, 0, 0, 2384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 2387, 0, 0,
	0, 0, 0, 1413, 0, 3331, 3333, 3332, 3350, 3351,
	3352, 3353, 3354, 3355, 3356, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 680, 0, 0, 0, 1957, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 680, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 616, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2803, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 680, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 680, 2840, 1413,
	0, 0, 1413, 0, 1413, 616, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 0, 0, 0, 0, 2867,
	1721, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 3337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1841, 0,
	0, 3345, 3346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 2603, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 1874, 616, 616, 616, 616,
	616, 616, 616, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 814, 0, 727, 818, 729, 815, 816, 0, 725,
	728, 817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3629, 0, 0, 2652, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 746, 747, 3330,
	3334, 3335, 3336, 3347, 3348, 3349, 3357, 3359, 779, 3358,
	3360, 3361, 3362, 3365, 3366, 3367, 3368, 3363, 3364, 3369,
	3314, 3318, 3315, 3316, 3317, 3329, 3319, 3320, 3321, 3322,
	3323, 3324, 3325, 3326, 3327, 3328, 3370, 3371, 3372, 3373,
	3374, 3375, 3340, 3344, 3343, 3341, 3342, 3338, 3339, 0,
	0, 2701, 2702, 2703, 2704, 2705, 0, 0, 0, 0,
	0, 819, 0, 820, 0, 0, 824, 0, 0, 3081,
	826, 825, 0, 827, 793, 792, 0, 0, 821, 822,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1915, 2721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 2729, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3376, 3377, 3378, 3379,
	3380, 3381, 3382, 3383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 950, 950, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2142, 2142, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3225, 3226, 3227, 3228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 1841, 950, 950, 950, 950, 950, 0, 0, 1650,
	1653, 1654, 1655, 1656, 1657, 1658, 0, 1659, 1660, 1662,
	1663, 1661, 1664, 1665, 1638, 1639, 1640, 1641, 1622, 1623,
	1651, 0, 1625, 0, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 0, 1772, 1635, 1642, 1643, 1644, 1645,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 1624, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 1841, 616, 0, 616, 0, 616, 2179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2938, 0, 0, 0, 0, 0, 0, 0, 0, 3302,
	0, 3304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2976, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 0, 0, 0, 0,
	2988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3011, 0, 0, 3014, 0,
	0, 2142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3410, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	1171, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 0, 1659,
	1660, 1662, 1663, 1661, 1664, 1665, 1638, 1639, 1640, 1641,
	1622, 1623, 1651, 0, 1625, 0, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 0, 0, 1635, 1642, 1643,
	1644, 1645, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 3460, 0, 0, 0, 3460, 3460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3110, 0, 0,
	0, 0, 0, 0, 2142, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 616, 0, 0, 616, 0, 2377, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3171, 2142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 3186, 0, 0, 3187, 3188, 3189, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 2142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 860, 0, 0, 0, 848, 861,
	862, 863, 864, 849, 0, 0, 850, 851, 3537, 852,
	0, 0, 0, 0, 0, 0, 1413, 0, 1841, 0,
	3541, 0, 0, 857, 865, 866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3584, 0, 0, 0,
	2982, 2983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3592, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 3537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 3081, 860, 3592, 2984, 616, 848, 861,
	862, 863, 864, 849, 0, 1772, 850, 851, 0, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 857, 865, 866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2982, 2983, 0, 0, 0, 0, 0, 0, 0, 2985,
	2986, 0, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 2658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2984, 0, 814, 0,
	0, 818, 0, 815, 816, 0, 0, 0, 817, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 616, 616, 616, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2985,
	2986, 0, 616, 616, 0, 0, 0, 3510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 1413, 616, 616, 616, 616, 616,
	0, 0, 0, 0, 0, 0, 0, 2883, 0, 0,
	0, 0, 0, 1772, 0, 616, 0, 0, 616, 2891,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 616,
	616, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 1305, 1290, 513, 0, 1233, 1308, 1202, 1221,
	1318, 1224, 1227, 1269, 1181, 1247, 411, 1218, 1174, 1206,
	1176, 1213, 1177, 1204, 1235, 269, 1201, 1292, 1251, 1307,
	362, 266, 1183, 1207, 425, 1223, 207, 1271, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1314, 366, 1257, 0, 492, 396, 0, 0,
	0, 1237, 1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309,
	1219, 1266, 1310, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 1772, 0, 3564, 670, 0, 0, 0, 0,
	3565, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 616, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1215, 1263, 1304, 1216, 1265, 264, 319, 271,
	263, 518, 1315, 1295, 1180, 1244, 1303, 0, 0, 230,
	1306, 1239, 0, 1268, 0, 1321, 1175, 1259, 0, 1178,
	1182, 1317, 1299, 1210, 274, 0, 0, 0, 0, 0,
	0, 0, 1236, 1246, 1280, 1284, 1230, 0, 0, 0,
	0, 1413, 0, 0, 1208, 0, 1255, 0, 0, 0,
	1187, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 1190,
	0, 1209, 1281, 1772, 1173, 296, 1184, 397, 256, 1327,
	0, 449, 1288, 1298, 1231, 561, 1302, 1229, 1228, 1275,
	1188, 1294, 1222, 361, 1186, 328, 202, 226, 0, 1220,
	407, 457, 469, 1293, 1205, 1214, 254, 1212, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1254, 1273,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 591, 229, 555, 221, 1185, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 1200, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 1289, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 1278, 1320, 420,
	468, 241, 540, 491, 1323, 1324, 1325, 1326, 1195, 1199,
	1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312, 1313, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 1282, 1189,
	0, 1197, 1198, 1291, 1300, 1301, 611, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 1253, 201, 222, 364,
	1316, 450, 287, 589, 551, 545, 208, 224, 1192, 261,
	1203, 1211, 0, 1217, 1225, 1226, 1238, 1240, 1241, 1242,
	1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297,
	1319, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 586,
	587, 298, 534, 565, 532, 585, 559, 435, 374, 1252,
	1322, 549, 1258, 377, 280, 303, 318, 1267, 550, 497,
	228, 462, 289, 252, 1285, 1287, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	1248, 1276, 372, 514, 515, 314, 392, 0, 0, 0,
	1305, 1290, 513, 0, 1233, 1308, 1202, 1221, 1318, 1224,
	1227, 1269, 1181, 1247, 411, 1218, 1174, 1206, 1176, 1213,
	1177, 1204, 1235, 269, 1201, 1292, 1251, 1307, 362, 266,
	1183, 1207, 425, 1223, 207, 1271, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	1314, 366, 1257, 0, 492, 396, 0, 0, 0, 1237,
	1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266,
	1310, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1215, 1263, 1304, 1216, 1265, 264, 319, 271, 263, 518,
	1315, 1295, 1180, 1244, 1303, 0, 0, 230, 1306, 1239,
	0, 1268, 0, 1321, 1175, 1259, 0, 1178, 1182, 1317,
	1299, 1210, 274, 0, 0, 0, 0, 0, 0, 0,
	1236, 1246, 1280, 1284, 1230, 0, 0, 0, 0, 0,
	2892, 0, 1208, 0, 1255, 0, 0, 0, 1187, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 1190, 0, 1209,
	1281, 0, 1173, 296, 1184, 397, 256, 1327, 0, 449,
	1288, 1298, 1231, 561, 1302, 1229, 1228, 1275, 1188, 1294,
	1222, 361, 1186, 328, 202, 226, 0, 1220, 407, 457,
	469, 1293, 1205, 1214, 254, 1212, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 1254, 1273, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	588, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 583, 571,
	573, 574, 214, 502, 533, 240, 479, 0, 0, 590,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	591, 229, 555, 221, 1185, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 592, 235, 236, 238, 1200,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 1289, 517, 536, 548, 560, 566, 567, 569,
	575, 576, 577, 578, 584, 582, 579, 580, 581, 572,
	402, 309, 490, 331, 369, 1278, 1320, 420, 468, 241,
	540, 491, 1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260,
	1194, 1249, 1250, 1196, 1311, 1312, 1313, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 1282, 1189, 0, 1197,
	1198, 1291, 1300, 1301, 611, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 1253, 201, 222, 364, 1316, 450,
	287, 589, 551, 545, 208, 224, 1192, 261, 1203, 1211,
	0, 1217, 1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261,
	1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297, 1319, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 586, 587, 298,
	534, 565, 532, 585, 559, 435, 374, 1252, 1322, 549,
	1258, 377, 280, 303, 318, 1267, 550, 497, 228, 462,
	289, 252, 1285, 1287, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 1248, 1276,
	372, 514, 515, 314, 392, 0, 0, 0, 1305, 1290,
	513, 0, 1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269,
	1181, 1247, 411, 1218, 1174, 1206, 1176, 1213, 1177, 1204,
	1235, 269, 1201, 1292, 1251, 1307, 362, 266, 1183, 1207,
	425, 1223, 207, 1271, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 1314, 366,
	1257, 0, 492, 396, 0, 0, 0, 1237, 1296, 1245,
	1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266, 1310, 321,
	249, 323, 206, 408, 493, 285, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1215, 1263,
	1304, 1216, 1265, 264, 319, 271, 263, 518, 1315, 1295,
	1180, 1244, 1303, 0, 0, 230, 1306, 1239, 0, 1268,
	0, 1321, 1175, 1259, 0, 1178, 1182, 1317, 1299, 1210,
	274, 0, 0, 0, 0, 0, 0, 0, 1236, 1246,
	1280, 1284, 1230, 0, 0, 0, 0, 0, 2853, 0,
	1208, 0, 1255, 0, 0, 0, 1187, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 1190, 0, 1209, 1281, 0,
	1173, 296, 1184, 397, 256, 1327, 0, 449, 1288, 1298,
	1231, 561, 1302, 1229, 1228, 1275, 1188, 1294, 1222, 361,
	1186, 328, 202, 226, 0, 1220, 407, 457, 469, 1293,
	1205, 1214, 254, 1212, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 1254, 1273, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 588, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 583, 571, 573, 574,
	214, 502, 533, 240, 479, 0, 0, 590, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 591, 229,
	555, 221, 1185, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 592, 235, 236, 238, 1200, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	1289, 517, 536, 548, 560, 566, 567, 569, 575, 576,
	577, 578, 584, 582, 579, 580, 581, 572, 402, 309,
	490, 331, 369, 1278, 1320, 420, 468, 241, 540, 491,
	1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249,
	1250, 1196, 1311, 1312, 1313, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 1282, 1189, 0, 1197, 1198, 1291,
	1300, 1301, 611, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 1253, 201, 222, 364, 1316, 450, 287, 589,
	551, 545, 208, 224, 1192, 261, 1203, 1211, 0, 1217,
	1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264,
	1272, 1274, 1277, 1279, 1286, 1297, 1319, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 586, 587, 298, 534, 565,
	532, 585, 559, 435, 374, 1252, 1322, 549, 1258, 377,
	280, 303, 318, 1267, 550, 497, 228, 462, 289, 252,
	1285, 1287, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 1248, 1276, 372, 514,
	515, 314, 392, 0, 0, 0, 1305, 1290, 513, 0,
	1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247,
	411, 1218, 1174, 1206, 1176, 1213, 1177, 1204, 1235, 269,
	1201, 1292, 1251, 1307, 362, 266, 1183, 1207, 425, 1223,
	207, 1271, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 1314, 366, 1257, 0,
	492, 396, 0, 0, 0, 1237, 1296, 1245, 1283, 1232,
	1270, 1191, 1256, 1309, 1219, 1266, 1310, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1215, 1263, 1304, 1216,
	1265, 264, 319, 271, 263, 518, 1315, 1295, 1180, 1244,
	1303, 0, 0, 230, 1306, 1239, 0, 1268, 0, 1321,
	1175, 1259, 0, 1178, 1182, 1317, 1299, 1210, 274, 0,
	0, 0, 0, 0, 0, 0, 1236, 1246, 1280, 1284,
	1230, 0, 0, 0, 0, 0, 2158, 0, 1208, 0,
	1255, 0, 0, 0, 1187, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 1190, 0, 1209, 1281, 0, 1173, 296,
	1184, 397, 256, 1327, 0, 449, 1288, 1298, 1231, 561,
	1302, 1229, 1228, 1275, 1188, 1294, 1222, 361, 1186, 328,
	202, 226, 0, 1220, 407, 457, 469, 1293, 1205, 1214,
	254, 1212, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 1254, 1273, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 588, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 583, 571, 573, 574, 214, 502,
	533, 240, 479, 0, 0, 590, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 591, 229, 555, 221,
	1185, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 592, 235, 236, 238, 1200, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 1289, 517,
	536, 548, 560, 566, 567, 569, 575, 576, 577, 578,
	584, 582, 579, 580, 581, 572, 402, 309, 490, 331,
	369, 1278, 1320, 420, 468, 241, 540, 491, 1323, 1324,
	1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196,
	1311, 1312, 1313, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 1282, 1189, 0, 1197, 1198, 1291, 1300, 1301,
	611, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	1253, 201, 222, 364, 1316, 450, 287, 589, 551, 545,
	208, 224, 1192, 261, 1203, 1211, 0, 1217, 1225, 1226,
	1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274,
	1277, 1279, 1286, 1297, 1319, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 586, 587, 298, 534, 565, 532, 585,
	559, 435, 374, 1252, 1322, 549, 1258, 377, 280, 303,
	318, 1267, 550, 497, 228, 462, 289, 252, 1285, 1287,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 1248, 1276, 372, 514, 515, 314,
	392, 0, 0, 0, 1305, 1290, 513, 0, 1233, 1308,
	1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247, 411, 1218,
	1174, 1206, 1176, 1213, 1177, 1204, 1235, 269, 1201, 1292,
	1251, 1307, 362, 266, 1183, 1207, 425, 1223, 207, 1271,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 1314, 366, 1257, 0, 492, 396,
	0, 0, 0, 1237, 1296, 1245, 1283, 1232, 1270, 1191,
	1256, 1309, 1219, 1266, 1310, 321, 249, 323, 206, 408,
	493, 285, 0, 97, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 1215, 1263, 1304, 1216, 1265, 264,
	319, 271, 263, 518, 1315, 1295, 1180, 1244, 1303, 0,
	0, 230, 1306, 1239, 0, 1268, 0, 1321, 1175, 1259,
	0, 1178, 1182, 1317, 1299, 1210, 274, 0, 0, 0,
	0, 0, 0, 0, 1236, 1246, 1280, 1284, 1230, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 1255, 0,
	0, 0, 1187, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 1190, 0, 1209, 1281, 0, 1173, 296, 1184, 397,
	256, 1327, 0, 449, 1288, 1298, 1231, 561, 1302, 1229,
	1228, 1275, 1188, 1294, 1222, 361, 1186, 328, 202, 226,
	0, 1220, 407, 457, 469, 1293, 1205, 1214, 254, 1212,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	1254, 1273, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 588, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 583, 571, 573, 574, 214, 502, 533, 240,
	479, 0, 0, 590, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 591, 229, 555, 221, 1185, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 592,
	235, 236, 238, 1200, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1289, 517, 536, 548,
	560, 566, 567, 569, 575, 576, 577, 578, 584, 582,
	579, 580, 581, 572, 402, 309, 490, 331, 369, 1278,
	1320, 420, 468, 241, 540, 491, 1323, 1324, 1325, 1326,
	1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312,
	1313, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	1282, 1189, 0, 1197, 1198, 1291, 1300, 1301, 611, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1253, 201,
	222, 364, 1316, 450, 287, 589, 551, 545, 208, 224,
	1192, 261, 1203, 1211, 0, 1217, 1225, 1226, 1238, 1240,
	1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279,
	1286, 1297, 1319, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 586, 587, 298, 534, 565, 532, 585, 559, 435,
	374, 1252, 1322, 549, 1258, 377, 280, 303, 318, 1267,
	550, 497, 228, 462, 289, 252, 1285, 1287, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1248, 1276, 372, 514, 515, 314, 392, 0,
	0, 0, 1305, 1290, 513, 0, 1233, 1308, 1202, 1221,
	1318, 1224, 1227, 1269, 1181, 1247, 411, 1218, 1174, 1206,
	1176, 1213, 1177, 1204, 1235, 269, 1201, 1292, 1251, 1307,
	362, 266, 1183, 1207, 425, 1223, 207, 1271, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1314, 366, 1257, 0, 492, 396, 0, 0,
	0, 1237, 1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309,
	1219, 1266, 1310, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1215, 1263, 1304, 1216, 1265, 264, 319, 271,
	263, 518, 1315, 1295, 1180, 1244, 1303, 0, 0, 230,
	1306, 1239, 0, 1268, 0, 1321, 1175, 1259, 0, 1178,
	1182, 1317, 1299, 1210, 274, 0, 0, 0, 0, 0,
	0, 0, 1236, 1246, 1280, 1284, 1230, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 1255, 0, 0, 0,
	1187, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 1190,
	0, 1209, 1281, 0, 1173, 296, 1184, 397, 256, 1327,
	0, 449, 1288, 1298, 1231, 561, 1302, 1229, 1228, 1275,
	1188, 1294, 1222, 361, 1186, 328, 202, 226, 0, 1220,
	407, 457, 469, 1293, 1205, 1214, 254, 1212, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1254, 1273,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 591, 229, 555, 221, 1185, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 1200, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 1289, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 1278, 1320, 420,
	468, 241, 540, 491, 1323, 1324, 1325, 1326, 1195, 1199,
	1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312, 1313, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 1282, 1189,
	0, 1197, 1198, 1291, 1300, 1301, 611, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 1253, 201, 222, 364,
	1316, 450, 287, 589, 551, 545, 208, 224, 1192, 261,
	1203, 1211, 0, 1217, 1225, 1226, 1238, 1240, 1241, 1242,
	1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297,
	1319, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 586,
	587, 298, 534, 565, 532, 585, 559, 435, 374, 1252,
	1322, 549, 1258, 377, 280, 303, 318, 1267, 550, 497,
	228, 462, 289, 252, 1285, 1287, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	1248, 1276, 372, 514, 515, 314, 392, 0, 0, 0,
	1305, 1290, 513, 0, 1233, 1308, 1202, 1221, 1318, 1224,
	1227, 1269, 1181, 1247, 411, 1218, 1174, 1206, 1176, 1213,
	1177, 1204, 1235, 269, 1201, 1292, 1251, 1307, 362, 266,
	1183, 1207, 425, 1223, 207, 1271, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	1314, 366, 1257, 0, 492, 396, 0, 0, 0, 1237,
	1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266,
	1310, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1215, 1263, 1304, 1216, 1265, 264, 319, 271, 263, 518,
	1315, 1295, 1180, 1244, 1303, 0, 0, 230, 1306, 1239,
	0, 1268, 0, 1321, 1175, 1259, 0, 1178, 1182, 1317,
	1299, 1210, 274, 0, 0, 0, 0, 0, 0, 0,
	1236, 1246, 1280, 1284, 1230, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 1255, 0, 0, 0, 1187, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 1190, 0, 1209,
	1281, 0, 1173, 296, 1184, 397, 256, 1327, 0, 449,
	1288, 1298, 1231, 561, 1302, 1229, 1228, 1275, 1188, 1294,
	1222, 361, 1186, 328, 202, 226, 0, 1220, 407, 457,
	469, 1293, 1205, 1214, 254, 1212, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 1254, 1273, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	588, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 583, 571,
	573, 574, 214, 502, 533, 240, 479, 0, 0, 590,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	591, 229, 555, 221, 1185, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 592, 235, 236, 238, 1200,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 1289, 517, 536, 548, 560, 566, 567, 569,
	575, 576, 577, 578, 584, 582, 579, 580, 581, 572,
	402, 309, 490, 331, 369, 1278, 1320, 420, 468, 241,
	540, 491, 1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260,
	1194, 1249, 1250, 1196, 1311, 1312, 1313, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 1282, 1189, 0, 1197,
	1198, 1291, 1300, 1301, 611, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 1253, 201, 222, 364, 1316, 450,
	287, 589, 551, 545, 208, 224, 1192, 261, 1203, 1211,
	0, 1217, 1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261,
	1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297, 1319, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 586, 587, 298,
	534, 565, 532, 585, 559, 435, 374, 1252, 1322, 549,
	1258, 377, 280, 303, 318, 1267, 550, 497, 228, 462,
	289, 252, 1285, 1287, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 1248, 1276,
	372, 514, 515, 314, 392, 0, 0, 0, 1305, 1290,
	513, 0, 1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269,
	1181, 1247, 411, 1218, 1174, 1206, 1176, 1213, 1177, 1204,
	1235, 269, 1201, 1292, 1251, 1307, 362, 266, 1183, 1207,
	425, 1223, 207, 1271, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 1314, 366,
	1257, 0, 492, 396, 0, 0, 0, 1237, 1296, 1245,
	1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266, 1310, 321,
	249, 323, 206, 408, 493, 285, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1215, 1263,
	1304, 1216, 1265, 264, 319, 271, 263, 518, 1315, 1295,
	1180, 1244, 1303, 0, 0, 230, 1306, 1239, 0, 1268,
	0, 1321, 1175, 1259, 0, 1178, 1182, 1317, 1299, 1210,
	274, 0, 0, 0, 0, 0, 0, 0, 1236, 1246,
	1280, 1284, 1230, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 1255, 0, 0, 0, 1187, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 1190, 0, 1209, 1281, 0,
	1173, 296, 1184, 397, 256, 1327, 0, 449, 1288, 1298,
	1231, 561, 1302, 1229, 1228, 1275, 1188, 1294, 1222, 361,
	1186, 328, 202, 226, 0, 1220, 407, 457, 469, 1293,
	1205, 1214, 254, 1212, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 1254, 1273, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 588, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 583, 571, 573, 574,
	214, 502, 533, 240, 479, 0, 0, 590, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 591, 229,
	555, 221, 1185, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 592, 235, 236, 238, 1200, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	1289, 517, 536, 548, 560, 566, 567, 569, 575, 576,
	577, 578, 584, 582, 579, 580, 581, 572, 402, 309,
	490, 331, 369, 1278, 1320, 420, 468, 241, 540, 491,
	1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249,
	1250, 1196, 1311, 1312, 1313, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 1282, 1189, 0, 1197, 1198, 1291,
	1300, 1301, 611, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 1253, 201, 222, 364, 1316, 450, 287, 589,
	551, 545, 208, 224, 1192, 261, 1203, 1211, 0, 1217,
	1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264,
	1272, 1274, 1277, 1279, 1286, 1297, 1319, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 586, 587, 298, 534, 565,
	532, 585, 559, 435, 374, 1252, 1322, 549, 1258, 377,
	280, 303, 318, 1267, 550, 497, 228, 462, 289, 252,
	1285, 1287, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 1248, 1276, 372, 514,
	515, 314, 392, 0, 0, 0, 0, 0, 513, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 710, 0, 0, 0, 269,
	715, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 722, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 97, 0, 0, 860, 844,
	810, 811, 848, 861, 862, 863, 864, 849, 0, 239,
	850, 851, 246, 852, 0, 809, 750, 752, 751, 769,
	770, 771, 772, 773, 774, 775, 748, 857, 865, 866,
	0, 264, 319, 271, 263, 518, 0, 0, 2038, 2039,
	2040, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 692, 707, 0, 721, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 705, 0, 0, 0, 0,
	804, 0, 706, 0, 0, 714, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 803, 0, 0, 561,
	0, 0, 801, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	854, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 588, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 583, 571, 573, 574, 214, 502,
	533, 240, 479, 0, 0, 590, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 855, 856, 255, 591, 756, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 764, 765, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 592, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 575, 576, 577, 578,
	584, 582, 579, 580, 581, 572, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 814, 802, 727, 818, 729, 815, 816, 724,
	725, 728, 817, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 805, 713, 712, 0, 720, 0, 746, 747,
	749, 753, 754, 755, 766, 767, 768, 776, 778, 779,
	777, 780, 781, 782, 785, 786, 787, 788, 783, 784,
	789, 730, 734, 731, 732, 733, 745, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 828, 829, 830,
	831, 832, 833, 759, 763, 762, 760, 761, 757, 758,
	711, 201, 222, 364, 0, 450, 287, 589, 551, 545,
	208, 224, 819, 261, 820, 0, 0, 824, 0, 0,
	0, 826, 825, 0, 827, 793, 792, 0, 0, 821,
	822, 0, 823, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 834, 835, 836,
	837, 838, 839, 840, 841, 298, 534, 565, 532, 585,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 859, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 392, 0, 372, 514, 515, 314,
	513, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 710, 0, 0,
	0, 269, 715, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 722, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 0, 0, 2187, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 97, 0, 0,
	860, 844, 810, 811, 848, 861, 862, 863, 864, 849,
	0, 239, 850, 851, 246, 852, 0, 809, 750, 752,
	751, 769, 770, 771, 772, 773, 774, 775, 748, 857,
	865, 866, 2188, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 692, 707, 0, 721, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 705, 0, 0,
	0, 0, 804, 0, 706, 0, 0, 714, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 803, 0,
	0, 561, 0, 0, 801, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 854, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 588, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 583, 571, 573, 574,
	214, 502, 533, 240, 479, 0, 0, 590, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 855, 856, 255, 591, 756,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 764, 765, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 592, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 575, 576,
	577, 578, 584, 582, 579, 580, 581, 572, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 814, 802, 727, 818, 729, 815,
	816, 724, 725, 728, 817, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 805, 713, 712, 0, 720, 0,
	746, 747, 749, 753, 754, 755, 766, 767, 768, 776,
	778, 779, 777, 780, 781, 782, 785, 786, 787, 788,
	783, 784, 789, 730, 734, 731, 732, 733, 745, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 828,
	829, 830, 831, 832, 833, 759, 763, 762, 760, 761,
	757, 758, 711, 201, 222, 364, 0, 450, 287, 589,
	551, 545, 208, 224, 819, 261, 820, 0, 0, 824,
	0, 0, 0, 826, 825, 0, 827, 793, 792, 0,
	0, 821, 822, 0, 823, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 834,
	835, 836, 837, 838, 839, 840, 841, 298, 534, 565,
	532, 585, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	859, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 0, 392, 372, 514,
	515, 314, 88, 513, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	710, 0, 0, 0, 269, 715, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 722, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	97, 0, 0, 860, 844, 810, 811, 848, 861, 862,
	863, 864, 849, 0, 239, 850, 851, 246, 852, 0,
	809, 750, 752, 751, 769, 770, 771, 772, 773, 774,
	775, 748, 857, 865, 866, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 692, 707, 0, 721,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	705, 0, 0, 0, 0, 804, 0, 706, 0, 0,
	714, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 803, 0, 0, 561, 0, 0, 801, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 854, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 855, 856,
	255, 591, 756, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 764, 765, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 814, 802, 727,
	818, 729, 815, 816, 724, 725, 728, 817, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 805, 713, 712,
	0, 720, 0, 746, 747, 749, 753, 754, 755, 766,
	767, 768, 776, 778, 779, 777, 780, 781, 782, 785,
	786, 787, 788, 783, 784, 789, 730, 734, 731, 732,
	733, 745, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 828, 829, 830, 831, 832, 833, 759, 763,
	762, 760, 761, 757, 758, 711, 201, 222, 364, 96,
	450, 287, 589, 551, 545, 208, 224, 819, 261, 820,
	0, 0, 824, 0, 0, 0, 826, 825, 0, 827,
	793, 792, 0, 0, 821, 822, 0, 823, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 834, 835, 836, 837, 838, 839, 840, 841,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 859, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 710, 0, 0, 0, 269, 715, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 722, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 718, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 860, 844, 810, 811, 848,
	861, 862, 863, 864, 849, 0, 239, 850, 851, 246,
	852, 0, 809, 750, 752, 751, 769, 770, 771, 772,
	773, 774, 775, 748, 857, 865, 866, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 692, 707,
	0, 721, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 705, 0, 0, 0, 0, 804, 0, 706,
	0, 0, 714, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 803, 0, 0, 561, 0, 0, 801,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 854, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 3551,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	855, 856, 255, 591, 756, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 764,
	765, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 814,
	802, 727, 818, 729, 815, 816, 724, 725, 728, 817,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 805,
	713, 712, 0, 720, 0, 746, 747, 749, 753, 754,
	755, 766, 767, 768, 776, 778, 779, 777, 780, 781,
	782, 785, 786, 787, 788, 783, 784, 789, 730, 734,
	731, 732, 733, 745, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 828, 829, 830, 831, 832, 833,
	759, 763, 762, 760, 761, 757, 758, 711, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 819,
	261, 820, 0, 0, 824, 0, 0, 0, 826, 825,
	0, 827, 793, 792, 0, 0, 821, 822, 0, 823,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 834, 835, 836, 837, 838, 839,
	840, 841, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 859, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 710, 0, 0, 0, 269, 715,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 722, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 97, 0, 1569, 860, 844, 810,
	811, 848, 861, 862, 863, 864, 849, 0, 239, 850,
	851, 246, 852, 0, 809, 750, 752, 751, 769, 770,
	771, 772, 773, 774, 775, 748, 857, 865, 866, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	692, 707, 0, 721, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 705, 0, 0, 0, 0, 804,
	0, 706, 0, 0, 714, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 803, 0, 0, 561, 0,
	0, 801, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 854,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 855, 856, 255, 591, 756, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 764, 765, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 814, 802, 727, 818, 729, 815, 816, 724, 725,
	728, 817, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 805, 713, 712, 0, 720, 0, 746, 747, 749,
	753, 754, 755, 766, 767, 768, 776, 778, 779, 777,
	780, 781, 782, 785, 786, 787, 788, 783, 784, 789,
	730, 734, 731, 732, 733, 745, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 828, 829, 830, 831,
	832, 833, 759, 763, 762, 760, 761, 757, 758, 711,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 819, 261, 820, 0, 0, 824, 0, 0, 0,
	826, 825, 0, 827, 793, 792, 0, 0, 821, 822,
	0, 823, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 834, 835, 836, 837,
	838, 839, 840, 841, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 859, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 710, 0, 0, 0,
	269, 715, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 722, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 860,
	844, 810, 811, 848, 861, 862, 863, 864, 849, 0,
	239, 850, 851, 246, 852, 0, 809, 750, 752, 751,
	769, 770, 771, 772, 773, 774, 775, 748, 857, 865,
	866, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 692, 707, 0, 721, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 705, 948, 0, 0,
	0, 804, 0, 706, 0, 0, 714, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 803, 0, 0,
	561, 0, 0, 801, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 854, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 855, 856, 255, 591, 756, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 764, 765, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 814, 802, 727, 818, 729, 815, 816,
	724, 725, 728, 817, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 805, 713, 712, 0, 720, 0, 746,
	747, 749, 753, 754, 755, 766, 767, 768, 776, 778,
	779, 777, 780, 781, 782, 785, 786, 787, 788, 783,
	784, 789, 730, 734, 731, 732, 733, 745, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 828, 829,
	830, 831, 832, 833, 759, 763, 762, 760, 761, 757,
	758, 711, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 819, 261, 820, 0, 0, 824, 0,
	0, 0, 826, 825, 0, 827, 793, 792, 0, 0,
	821, 822, 0, 823, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 834, 835,
	836, 837, 838, 839, 840, 841, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 859,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 710, 0,
	0, 0, 269, 715, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 722,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 97, 0,
	0, 860, 844, 810, 811, 848, 861, 862, 863, 864,
	849, 0, 239, 850, 851, 246, 852, 0, 809, 750,
	752, 751, 769, 770, 771, 772, 773, 774, 775, 748,
	857, 865, 866, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 692, 707, 0, 721, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 705, 0,
	0, 0, 0, 804, 0, 706, 0, 0, 714, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 803,
	0, 0, 561, 0, 0, 801, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 854, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 855, 856, 255, 591,
	756, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 764, 765, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 814, 802, 727, 818, 729,
	815, 816, 724, 725, 728, 817, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 805, 713, 712, 0, 720,
	0, 746, 747, 749, 753, 754, 755, 766, 767, 768,
	776, 778, 779, 777, 780, 781, 782, 785, 786, 787,
	788, 783, 784, 789, 730, 734, 731, 732, 733, 745,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	828, 829, 830, 831, 832, 833, 759, 763, 762, 760,
	761, 757, 758, 711, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 819, 261, 820, 0, 0,
	824, 0, 0, 0, 826, 825, 0, 827, 793, 792,
	0, 0, 821, 822, 0, 823, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	834, 835, 836, 837, 838, 839, 840, 841, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 859, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	710, 0, 0, 0, 269, 715, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 722, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	97, 0, 0, 860, 844, 810, 811, 848, 861, 862,
	863, 864, 849, 0, 239, 850, 851, 246, 852, 0,
	809, 750, 752, 751, 769, 770, 771, 772, 773, 774,
	775, 748, 857, 865, 866, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 721,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	705, 0, 0, 0, 0, 804, 0, 706, 0, 0,
	714, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 803, 0, 0, 561, 0, 0, 801, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 854, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 855, 856,
	255, 591, 756, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 764, 765, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 814, 802, 727,
	818, 729, 815, 816, 724, 725, 728, 817, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 805, 713, 712,
	0, 720, 0, 746, 747, 749, 753, 754, 755, 766,
	767, 768, 776, 778, 779, 777, 780, 781, 782, 785,
	786, 787, 788, 783, 784, 789, 730, 734, 731, 732,
	733, 745, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 828, 829, 830, 831, 832, 833, 759, 763,
	762, 760, 761, 757, 758, 711, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 819, 261, 820,
	0, 0, 824, 0, 0, 0, 826, 825, 0, 827,
	793, 792, 0, 0, 821, 822, 0, 823, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 834, 835, 836, 837, 838, 839, 840, 841,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 859, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1394, 1393, 1395, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 1021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 1020, 561, 0,
	0, 0, 0, 0, 1017, 1018, 361, 977, 328, 202,
	226, 1011, 1015, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1532,
	844, 0, 0, 1529, 0, 0, 0, 0, 1527, 0,
	239, 1528, 1526, 246, 1531, 0, 809, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 0, 392, 372, 514, 515,
	314, 88, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	0, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 97,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 518,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 254, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	588, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 583, 571,
	573, 574, 214, 502, 533, 240, 479, 0, 0, 590,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	591, 229, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 592, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	575, 576, 577, 578, 584, 582, 579, 580, 581, 572,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 0, 201, 222, 364, 96, 450,
	287, 589, 551, 545, 208, 224, 0, 261, 0, 0,
	0, 0, 0, 0, 2174, 0, 0, 2173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 586, 587, 298,
	534, 565, 532, 585, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 0, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 1588, 0,
	372, 514, 515, 314, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	1590, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 0, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 1592, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 1366, 0, 1367, 1368, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 0, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 254, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 591, 229, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 0, 201, 222, 364,
	0, 450, 287, 589, 551, 545, 208, 224, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 586,
	587, 298, 534, 565, 532, 585, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 0, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	0, 392, 372, 514, 515, 314, 88, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 97, 0, 1569, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 96, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 2174, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 2125, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 1773, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 2123, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 977, 328, 202, 226, 975, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 2125, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 1773, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 1569, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 3461, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1958,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 2567, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 2552,
	0, 0, 0, 0, 239, 0, 0, 246, 2553, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 1611, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 1610, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 672, 673,
	674, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 3585, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 1773, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 3461, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 2175, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1592,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 1913, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1904, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 1740,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 1738, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1736, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 1734, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 1732, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 1728,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 1726, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1724, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 1699, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 1596, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 1343, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	614, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 3593, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 0, 0, 372, 514, 515,
	314,
}

var yyPact = [...]int{
	-1000, -1000, 445, -1000, -472, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2254, 2344, -1000, -1000, -1000, -1000, 2491, -1000,
	1107, 1953, -1000, 2239, 323, -1000, 47689, 594, -1000, 45001,
	590, 585, 140, -127, 242, 30217, -1000, 218, -1000, 202,
	46345, 216, -1000, -1000, -1000, -1000, -362, 18791, 2186, 89,
	76, 47689, -1000, -1000, -1000, -1000, 2471, 1886, -1000, 398,
	-1000, -1000, -1000, -1000, -1000, -1000, 44329, -1000, 965, -1000,
	-1000, 2240, 2238, 2505, 717, 2176, -1000, 2334, 1886, -1000,
	18791, 2455, 2303, 18119, 18119, 520, -1000, -1000, 273, -1000,
	-1000, -1000, 2510, 25513, 47689, -1000, 32905, 588, -1000, 2239,
	-1000, -1000, -1000, 91, -1000, 393, 1808, -1000, 1803, -1000,
	1161, 1280, 446, 548, 501, 441, 440, 438, 428, 426,
	421, 415, 414, 450, -1000, 752, 752, -135, -148, 4256,
	505, 508, 508, 1101, 561, 2203, 2202, -1000, -1000, 752,
	752, 752, 388, 752, 752, 752, 752, 348, 341, 752,
	752, 752, 752, 752, 752, 752, 752, 752, 752, 752,
	752, 752, 752, 752, 752, 752, 578, 2239, 320, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47689, 198, 47689, -1000, 653, 47689, 47689, -1000,
	1157, 1150, -1000, -1000, 903, -1000, -1000, 903, 115, 903,
	903, 903, 903, 214, 714, 67, -1000, 209, 296, 212,
	318, 885, 295, -1000, -1000, 293, 885, 876, 885, 1572,
	1566, -1000, 735, 300, 206, -1000, 903, 903, -1000, -1000,
	12046, 162, 12046, 12046, -1000, 2229, -1000, -1000, -1000, -1000,
	-1000, 1054, -1000, -1000, -1000, -1000, -19, 560, -1000, -1000,
	-1000, -1000, 46345, 43657, 287, -1000, -1000, 299, -1000, -1000,
	1689, 1323, 18791, 1412, -1000, 2024, 702, -1000, -1000, -1000,
	-1000, -1000, 618, -1000, 19463, 19463, 19463, 19463, -1000, -1000,
	1810, 42985, 1810, 1810, 19463, 1810, -1000, 19463, 1810, 1810,
	1810, 18791, 1810, 1810, 1810, 1810, -1000, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, -1000, -1000, -1000, -1000, 1810,
	648, 1810, 1810, 1810, 1810, 1810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1810, 1810, 1810, 1810, 1810, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21479, 1336, 1334, 1332, -1000, 16103, 1810,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47689, -1000, 1810, 228, 46345, 46345, 405, 2334, 1886, -1000,
	2471, 2424, 398, 3130, 1819, 1636, 1270, 1886, 1784, 47689,
	-1000, 1814, -1000, -1000, -1000, -1000, 2096, 1264, 1542, -1000,
	-1000, -1000, -1000, 1962, 18791, -1000, -1000, 2485, -1000, 22824,
	644, 2483, 42313, -1000, 520, 520, 1801, 451, 52, -1000,
	-1000, -1000, -1000, 786, 29545, -1000, -1000, -1000, -1000, -1000,
	1670, 47689, -1000, -1000, 7401, 1106, -1000, 1952, -1000, 3011,
	1668, -1000, 1891, 18791, 1907, 583, 1106, 573, 571, 567,
	-1000, -42, -1000, -1000, -1000, -1000, -1000, -1000, 752, 752,
	752, -1000, 417, 2446, 323, 4555, -1000, -1000, -1000, 41641,
	1950, 1106, -1000, 1944, -1000, 866, 595, 682, 682, 1106,
	-1000, -1000, 47017, 1106, 865, 864, 1106, 1106, 46345, 46345,
	-1000, 40969, -1000, 40297, 39625, 1141, 46345, 38953, 38281, 37609,
	36937, 36265, -1000, 2073, -1000, 2040, -1000, -1000, -1000, 47017,
	1106, 1106, 47017, 46345, 47017, 47689, 1106, -1000, -1000, 374,
	-1000, -1000, 1140, 1123, 1120, 752, 752, 1100, 1534, 1531,
	1522, 752, 752, 1094, 1520, 31561, 1513, 310, 1088, 1084,
	1078, 1171, 1510, 195, 1508, 1159, 1076, 1071, 46345, 1942,
	47689, -1000, 288, 998, 1042, 920, 908, 778, 2239, 2184,
	1799, 544, 575, 1106, 515, 515, 46345, -1000, 14080, -1000,
	689, -1000, -1000, -1000, -1000, 1483, 18791, -1000, 887, 885,
	885, -1000, -1000, -1000, -1000, -1000, -1000, 903, 47689, 887,
	-1000, -1000, -1000, 885, 903, 47689, 903, 903, 903, 903,
	885, 885, 885, 903, 47689, 47689, 47689, 47689, 47689, 47689,
	47689, 47689, 47689, 12046, 735, 903, 903, -373, 903, 219,
	-374, -1000, 1481, -1000, -1000, 2062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12046, 12046,
	-1000, -1000, -1000, -1000, -1000, 1798, -1000, 200, 17, 210,
	-1000, 35593, 384, 774, -1000, 384, -1000, -1000, -1000, 1797,
	34921, -1000, -375, -376, -380, -382, -1000, -1000, -1000, -1000,
	-385, -387, -1000, -1000, -1000, 18791, 18791, 18791, 18791, -174,
	-1000, 1194, 19463, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	150, 1216, 19463, 19463, 19463, 19463, 19463, 19463, 19463, 19463,
	19463, 19463, 19463, 19463, 19463, 19463, 19463, -1000, -1000, 27529,
	8265, 8265, 702, 702, 702, 702, -1000, -109, 1796, 47017,
	-1000, -1000, -1000, 633, 18791, 18791, 702, -1000, 1106, 16103,
	20135, 18119, 18119, 18791, 806, 1323, 47017, 18791, -1000, 1270,
	-1000, -1000, -1000, 1021, -1000, 961, 2215, 2215, 2215, 2215,
	18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	2215, 46345, 46345, 1480, 18791, 18791, 18791, 18791, 18791, 18791,
	14758, 18791, 18791, 19463, 18791, 18791, 18791, 1270, 18791, 18791,
	18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	18791, 18791, 18791, 18791, 18791, 1270, 18791, 1291, 18791, 18791,
	18119, 13402, 18119, 18119, 18119, 18119, 18119, -1000, -1000, -1000,
	-1000, -1000, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	1270, 18791, 18791, 18791, 18791, 18791, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1406, 1311, 1296, 18791,
	-1000, 1792, -1000, -116, 24841, 18791, 1470, 1464, 2481, 1982,
	46345, -1000, -1000, -1000, 2334, -1000, 2334, 1406, 2042, 18119,
	-1000, -1000, 3011, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1519, -1000, 47689, 1784, 2300, 46345, 2092, 1456, 432,
	-1000, 18791, 18791, 1783, -1000, 1546, 47689, -1000, -174, -1000,
	34249, -1000, -1000, 11368, 47689, 394, 47689, -1000, 24169, 33577,
	412, -1000, 52, 1762, -1000, 37, 10, 15430, 701, -1000,
	-1000, -1000, 4256, 20807, 1679, 701, 130, -1000, -1000, -1000,
	1891, -1000, 1891, 1891, 1891, 1891, 432, 432, 432, 432,
	-1000, -1000, -1000, -1000, -1000, 1941, 1929, -1000, 1891, 1891,
	1891, 1891, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1927,
	1927, 1927, 1924, 1924, 1892, 1892, 499, -1000, 18791, -1000,
	-1000, 647, 32905, 2257, 1069, 1541, 288, 516, 1979, 1106,
	1106, 1106, 516, -1000, 1202, 1195, 1185, -1000, -462, 1782,
	-1000, -1000, 2445, -1000, -1000, 1223, 901, 897, 955, 46345,
	261, 370, -1000, 489, -1000, 32905, 1106, 862, 682, 1106,
	-1000, 1106, -1000, -1000, -1000, -1000, -1000, 1106, -1000, -1000,
	1779, -1000, 1713, 927, 895, 923, 882, 1779, -1000, -1000,
	-113, 1779, -1000, 1779, -1000, 1779, -1000, 1779, -1000, 1779,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 794,
	220, -241, 46345, 261, 533, -1000, 532, 27529, -1000, -1000,
	-1000, 27529, 27529, -1000, -1000, -1000, -1000, 1451, 1443, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -448, 47689,
	-1000, 277, 772, 338, 397, 329, 47689, 1016, 2403, 2402,
	2396, 2393, 2391, 2390, 2378, 757, 2375, 2363, 2349, 2348,
	2346, 2345, 974, 2338, 2333, 2332, 2327, 2325, 2320, 2319,
	284, 339, 47689, 47689, 515, 2017, 47689, 2275, 47689, -1000,
	-1000, -1000, -1000, 574, 47689, -1000, 311, -1000, -1000, -1000,
	-1000, -1000, -1000, 1323, 47689, -1000, -1000, 903, 903, -1000,
	-1000, 47689, 903, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 903, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47689, -1000, -1000, -1000, -1000, -19, 197, -1000, -1000,
	46345, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-28, -1000, 662, 29, 408, -1000, -1000, -1000, -1000, -1000,
	2313, -1000, 1323, 827, 846, -1000, 1810, -1000, -1000, 986,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 150, 19463, 19463,
	19463, 2035, 557, 1854, 1781, 1479, 928, 928, 1344, 1344,
	707, 707, 707, 707, 707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1441, -1000, 1810, 47017, 1610, 13402, 2714,
	1902, 1270, 3008, -1000, 1590, -1000, 1590, 1657, 812, -1000,
	18791, 1270, 3003, -1000, -1000, 1270, 1270, 1270, 18791, -1000,
	-1000, 18791, 18791, 18791, 18791, 1541, 1541, 1541, 1541, 1541,
	1541, 1541, 1541, 1541, 1541, 18791, 1777, 1775, 2479, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2382, 1541, 1541, 1541, 1541, 1541, 18791, 1763, -1000, -1000,
	-1000, 1222, 2999, 1750, 2990, 1541, 1541, -1000, 1541, 2986,
	2978, 1270, 1689, 1270, 1767, -1000, 2968, 1541, 2958, 2953,
	2942, 2308, 2923, 2916, 2903, 1541, 1541, 1541, 2289, 2890,
	2880, 2867, 2847, 2838, 2808, 2764, 2733, 2621, 1541, -178,
	1541, 1270, -1000, -1000, -1000, -1000, -1000, 2533, 2265, 1270,
	1766, 1810, 632, -1000, -1000, 1590, 1270, 1270, 1590, 1590,
	2521, 2506, 2463, 2457, 2438, 2429, 1541, 1541, -1000, 1541,
	2401, 2394, 2253, 2249, 1270, -1000, 1296, 47689, -1000, -325,
	-1000, 20, 706, 1810, -1000, 31561, 1270, -1000, -1000, 3657,
	-1000, 990, -1000, -1000, -1000, 28873, 1659, 3011, -1000, -1000,
	1810, 1579, -1000, -1000, 432, 106, 28201, 691, 691, 141,
	1323, 1323, 18791, -1000, -1000, -1000, -1000, -1000, -1000, 630,
	2397, 382, 1810, -1000, 1770, 2809, -1000, -1000, -1000, 2291,
	22152, -1000, -1000, 1810, 1810, 47689, 1623, 1612, -1000, 629,
	-1000, 1168, 1762, 52, 35, -1000, -1000, -1000, -1000, 1323,
	-1000, 1178, 407, 711, -1000, 488, -1000, -1000, -1000, -1000,
	2194, 119, -1000, -1000, -1000, 331, 432, -1000, -1000, -1000,
	-1000, -1000, -1000, 1434, 1434, -1000, -1000, -1000, -1000, -1000,
	1068, -1000, -1000, -1000, -1000, 1061, -1000, -1000, 1049, -1000,
	-1000, 2321, 2044, 647, -1000, -1000, 752, 1432, -1000, -1000,
	2196, 752, 752, 46345, -1000, -1000, 1650, 2257, 277, 47689,
	815, 2009, -1000, 1979, 1979, 1979, 47689, -1000, -1000, -1000,
	-1000, -1000, -1000, -450, 72, 406, -1000, -1000, -1000, 4103,
	46345, 1576, -1000, 253, -1000, 1637, -1000, 46345, -1000, 1526,
	1920, 1106, 1106, -1000, -1000, -1000, 46345, 1810, -1000, -1000,
	-1000, -1000, 550, 2209, 298, -1000, -1000, -198, -1000, -1000,
	261, 253, 47017, 1106, 701, -1000, -1000, -1000, -1000, -1000,
	-451, 1517, 565, 266, 342, 47689, 47689, 47689, 47689, 47689,
	607, -1000, -1000, 56, -1000, -1000, -1000, -1000, 233, -1000,
	-1000, -1000, -1000, -1000, -1000, 233, -1000, -1000, -1000, -1000,
	-1000, 233, -1000, 1429, -1000, -1000, -1000, -1000, 233, -1000,
	-1000, -1000, 53, -1000, -1000, -1000, -1000, 233, -1000, -1000,
	-1000, -1000, -1000, -1000, 233, -1000, -1000, -1000, -1000, 330,
	525, -1000, 47689, 47689, 658, -1000, -1000, -1000, -1000, -1000,
	-1000, 885, -1000, -1000, 885, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2224, 47689, 28,
	-406, -1000, -401, 18791, -1000, -1000, -1000, -1000, 1647, 547,
	1854, 19463, 19463, 19463, -1000, -1000, -1000, 1050, 1050, 27529,
	-1000, 18791, 18119, -1000, -1000, 18791, 18791, 795, -1000, 18791,
	1108, -1000, 18791, -1000, -1000, -1000, 1296, 1541, 1541, 1541,
	1541, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1756, 18791, 18791, 18791, 1270, 350, -1000, -1000, -1000,
	-1000, -1000, 2473, -1000, 18791, -1000, 27529, 18791, 18791, 18791,
	-1000, -1000, -1000, 18791, 18791, -1000, -1000, 18791, 18791, -1000,
	18791, 18791, 18791, -1000, 18791, 18791, 18791, 18791, -1000, -1000,
	-1000, -1000, 18791, 18791, 18791, 18791, 18791, 18791, 18791, 18791,
	18791, 18791, -1000, -1000, 32905, 94, -178, 1291, 94, 1291,
	-1000, 18119, 12724, -1000, -1000, -1000, -1000, -1000, 18791, 18791,
	18791, 18791, 18791, 18791, -1000, -1000, -1000, 18791, 18791, -1000,
	18791, -1000, 18791, -1000, -1000, -1000, -1000, -1000, 706, -1000,
	682, 682, 682, 46345, -1000, -1000, -1000, -1000, 1757, -1000,
	2324, -1000, 2112, 2110, 2470, 2397, -1000, 24169, 3011, -1000,
	-1000, 46345, -299, -1000, 2173, 2207, 691, 691, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10690, 2334, 18791, 2008, 47017,
	144, -1000, 23497, 46345, 47017, 24169, 24169, 24169, 24169, 24169,
	-1000, 2077, 2065, -1000, 2084, 2075, 2093, 47689, -1000, 1406,
	1506, -1000, 18791, 26185, 1643, 24169, -1000, -1000, 24169, 47689,
	10012, -1000, -1000, 22, 2, -1000, -1000, -1000, -1000, 4256,
	-1000, -1000, 3936, 2287, 2192, -1000, -1000, -1000, -1000, -1000,
	1502, -1000, 1496, 1746, 1492, 1489, 220, -1000, 1876, 2211,
	752, 752, -1000, 1047, -1000, 1106, 1413, 1411, -1000, -1000,
	-1000, 549, -1000, 2271, 47689, 2006, 1999, 1998, -1000, -459,
	1046, 1905, 1787, 18791, 1898, 2439, 1709, 46345, -1000, -1000,
	47017, -1000, 336, -1000, 647, 46345, -1000, -1000, -1000, 370,
	47689, -1000, 8044, -1000, -1000, -1000, 253, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47689, 272, -1000, 1896, 1045, -1000,
	-1000, 1967, -1000, -1000, -1000, -1000, 232, 332, 1407, 226,
	1382, 226, 226, 1348, 226, 1345, 226, 226, -1000, 47689,
	634, 2044, 47689, -1000, -1000, -1000, 903, 903, -1000, -1000,
	2208, -1000, 1106, 1541, 19463, 19463, -1000, 702, 1317, -154,
	1891, 1891, -1000, 1891, 1892, -1000, 1891, 190, 1891, 187,
	1891, -1000, -1000, 1270, 1270, 1296, -1000, 2219, 1588, -1000,
	1323, 18791, 2389, -1000, -1000, -1000, -1000, -1000, -49, 2367,
	2360, 1541, -1000, 1883, 1878, 18791, 1541, 1270, 2162, 1541,
	1541, 1541, 1541, -1000, 1323, 1296, 2331, 1296, 1541, 1541,
	2312, 345, 1541, 1463, 1463, 1463, 1463, 1463, 1296, 1296,
	1296, 1296, 46345, -1000, -178, -1000, -1000, -221, -222, -1000,
	1270, -178, 1738, 1270, -1000, 2155, 2126, 2243, 2091, 1541,
	1977, 1541, 1541, 1541, 2083, -1000, 2292, 2292, 2292, 1448,
	990, 47689, -1000, -1000, -1000, -1000, 2397, 2459, 1717, -1000,
	-1000, 106, 463, -1000, 2161, 2207, -1000, 2437, 2166, 2432,
	-1000, -1000, -1000, -1000, -1000, 1323, -1000, 2244, 1674, -1000,
	770, 1692, -1000, -1000, 17447, 1455, 2103, 626, 1448, 1712,
	2809, 1978, 1997, 2790, -1000, -1000, -1000, -1000, 2055, -1000,
	2039, -1000, -1000, 1814, -1000, 1768, 394, 24169, 1691, 1691,
	-1000, 625, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 945,
	7874, 2501, -1000, 1343, -1000, 1167, 203, 1039, -1000, -1000,
	752, 752, -1000, 860, 852, -1000, 47689, 1877, -1000, 432,
	1338, 432, 1038, -1000, -1000, 1029, -1000, -1000, -1000, -1000,
	1793, 2056, -1000, -1000, -1000, -1000, 47689, -1000, -1000, 47689,
	47689, 47689, 1874, 2426, -1000, 18791, 1870, 753, 2270, 46345,
	46345, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 481, 752, -429, 335, 301, 752, 752, 752,
	-467, -1000, -1000, 1419, 1405, -1000, -139, -1000, 18791, -1000,
	-1000, -1000, 1110, 1110, 1336, 1334, 1332, -1000, 1814, -1000,
	-1000, -1000, 1621, -1000, -1000, -120, 46345, 46345, 46345, 46345,
	-1000, -1000, 989, -1000, -1000, -1000, 1313, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 702, 1270, 351, -124, 1270, -1000, -1000, 432, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18791,
	-1000, 18791, -1000, 1323, 18791, 2334, 1308, 18791, 18791, -1000,
	1028, 1018, 1541, -1000, -1000, -1000, 18791, -1000, -1000, -1000,
	-1000, -1000, 18791, -1000, -1000, -1000, 18791, 250, 1050, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1270,
	371, -1000, -1000, -1000, -1000, 2466, -1000, 1270, 18791, -1000,
	-1000, 18791, -1000, 18791, 18791, -1000, 18791, -1000, 18791, -1000,
	-1000, -1000, -1000, 18791, 1810, 2114, 1810, 1810, 26185, -1000,
	-1000, 2459, 2350, 2416, 2122, 2157, 2157, 2161, -1000, 2415,
	2414, -1000, 1304, 2409, 1284, 835, -1000, 47017, 18791, 144,
	-1000, 402, 46345, 144, 46345, -1000, 2425, -1000, -1000, 18791,
	1869, -1000, 18791, -1000, -1000, -1000, -1000, 8265, 2397, 1691,
	-1000, -1000, 715, -1000, 18791, -1000, -1000, -1000, 6767, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1272, 1260, -1000,
	-1000, 1868, 18791, -1000, -1000, -1000, 1604, 1595, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1814, -1000, -1000, -1000,
	-1000, 370, -455, 2137, 46345, 1017, -1000, 1403, 1709, 363,
	144, 1250, 752, 752, 752, 993, 976, 31561, 1387, -1000,
	46345, 471, -1000, 370, -1000, -150, -151, 1541, -1000, -1000,
	2284, -1000, -1000, 12724, -1000, -1000, 1813, 1975, -1000, -1000,
	-1000, -1000, -1000, 2087, -115, -130, -1000, -1000, 1541, 1541,
	1553, 1270, -1000, 1541, 1541, 1582, 1372, -1000, 1541, 1296,
	2004, -1000, 250, 1270, 1996, -1000, -1000, 8265, -1000, -1000,
	2425, 2405, 94, -1000, -1000, 246, 94, 1323, 1871, 1541,
	1682, 1665, 1541, 1541, 26857, -1000, 2398, 2328, 32233, 32233,
	706, 2350, -185, 18791, 18791, 2119, 958, -1000, -1000, -1000,
	-1000, 1248, 1246, -1000, 1243, -1000, 2499, -1000, 1323, -1000,
	144, -1000, 622, 1692, -1000, 2334, 1323, 46345, 1323, 86,
	2425, -1000, 1541, -1000, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, -1000, -1000, 46345, 1970, -1000, -1000,
	2283, 1378, 71, -1000, 1331, 1709, -1000, -1000, 154, -1000,
	18791, -1000, 31561, 1238, 1226, -1000, -1000, -1000, -1000, -467,
	-1000, -1000, -1000, -1000, -1000, -1000, 398, 1697, -1000, 750,
	46345, 47689, -1000, 2085, -1000, -1000, -1000, 18791, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18791, -1000, 1270, 1987,
	-1000, -288, -1000, -434, 18791, -178, -1000, -1000, -178, -1000,
	18791, -1000, -1000, 18791, -1000, 18791, -1000, -1000, 1371, -1000,
	-1000, -1000, -1000, -1000, 1371, 1371, -1000, -185, -1000, 1693,
	-1000, 46345, 1323, 1689, -1000, 952, -1000, -1000, -1000, -1000,
	-1000, 47017, 1692, 46345, -1000, 1364, 1270, 1810, 2334, -1000,
	1330, -1000, 398, -1000, 1812, 1787, -1000, -1000, -1000, 16775,
	-1000, -1000, -1000, -1000, -1000, 213, -117, 12724, 9334, 1303,
	-1000, -114, 1541, 1296, -1000, -389, -1000, -1000, -1000, -1000,
	172, -1000, -1000, 1689, -1000, -1000, 1653, 1649, 1498, 30889,
	-1000, -1000, -1000, -1000, -185, -1000, -1000, 2280, -1000, -1000,
	1681, -1000, -1000, 26185, 45673, -1000, -106, 769, -117, 18791,
	1811, 1270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-8, -1000, -1000, -1000, -1000, -1000, 1967, -126, -1000, -1000,
	-1000, 142, -420, -223, -239, -1000, -1000, 19463, -1000, 18791,
	-1000, 18791, -1000, 18791, -1000, -1000, -1000, 46345, 1810, -1000,
	1269, -1000, 7199, -246, 1986, -1000, -50, -1000, -1000, -1000,
	914, 1181, -1000, -1000, -1000, -1000, -1000, -1000, 1740, 46345,
	-1000, 491, -1000, -1000, -120, -131, 831, -1000, -1000, -1000,
	-1000, -1000, 1494, 1417, 1541, -1000, 46345, -1000, 45673, -235,
	701, 8265, -1000, 1984, 1971, 2478, -1000, -1000, -1000, -1000,
	-1000, -1000, -469, 1208, 280, -1000, -1000, 142, -1000, 18791,
	-1000, 18791, -1000, 1270, -1000, -1000, 2263, 86, -1000, 2498,
	-1000, 2464, 830, 830, -1000, 972, -469, -1000, -1000, 1541,
	1541, -1000, -249, -1000, -1000, -1000, -1000, -1000, 477, 1041,
	-1000, -1000, -1000, -1000, -1000, 8265, -1000, -1000, -1000, 215,
	215, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3143, 3139, 27, 5, 34, 33, 3136, 312, 128,
	213, 50, 204, 109, 3126, 182, 3124, 3123, 3122, 3121,
	3118, 3116, 2552, 2544, 2529, 3115, 3114, 3113, 3112, 3108,
	3106, 3104, 3103, 3102, 3101, 186, 176, 200, 3093, 3090,
	3089, 133, 193, 93, 96, 197, 3086, 3085, 88, 3082,
	3070, 3069, 196, 195, 191, 886, 3063, 190, 120, 55,
	3061, 3060, 3059, 3054, 3052, 3051, 3049, 3048, 3047, 3043,
	3040, 3039, 3037, 3034, 3033, 3028, 3027, 3025, 3024, 3020,
	300, 3018, 3017, 17, 3016, 86, 3013, 3010, 3005, 2997,
	2995, 7, 2993, 2992, 12, 42, 2987, 2983, 48, 2981,
	2974, 2969, 2964, 2963, 15, 2959, 22, 2958, 37, 2954,
	2951, 137, 2945, 2938, 2937, 38, 2936, 2934, 2932, 2931,
	2930, 2928, 2924, 157, 2923, 2917, 2916, 180, 219, 2915,
	2910, 206, 121, 118, 2909, 2904, 110, 198, 2897, 134,
	2893, 2892, 2891, 165, 2889, 2218, 2888, 2887, 75, 64,
	2886, 54, 2885, 2881, 3, 90, 66, 1, 98, 107,
	2873, 2862, 72, 83, 2850, 116, 2849, 2848, 111, 78,
	2846, 100, 112, 2844, 2840, 18, 11, 2839, 36, 26,
	23, 74, 2837, 2833, 124, 2829, 2828, 2815, 106, 2813,
	2792, 4975, 2791, 97, 142, 115, 85, 2787, 46, 71,
	2785, 2775, 2773, 2771, 2770, 57, 2769, 2766, 2765, 153,
	151, 177, 2761, 43, 77, 56, 146, 2757, 113, 87,
	205, 178, 2753, 2752, 150, 145, 2751, 2750, 67, 44,
	41, 2748, 123, 139, 119, 52, 105, 144, 2746, 2743,
	63, 80, 2742, 2741, 2739, 2738, 179, 2736, 2730, 79,
	2729, 58, 2728, 202, 2727, 20, 49, 2726, 45, 183,
	2724, 81, 2720, 2719, 69, 147, 70, 35, 2714, 170,
	175, 140, 185, 2712, 2710, 61, 2708, 2706, 2704, 203,
	318, 2701, 2695, 104, 184, 156, 163, 95, 2694, 343,
	2690, 2688, 102, 2, 4506, 2685, 40, 172, 2680, 2679,
	6019, 152, 39, 24, 2677, 131, 2676, 2671, 2668, 2667,
	234, 181, 130, 173, 65, 2665, 2664, 2661, 9, 2659,
	2656, 2655, 2649, 2646, 2644, 94, 32, 31, 30, 201,
	76, 6, 114, 171, 166, 82, 2643, 2642, 2635, 135,
	108, 2631, 169, 168, 138, 174, 2630, 187, 159, 141,
	2623, 103, 29, 2622, 2619, 2618, 2617, 101, 2615, 2614,
	2610, 2607, 164, 160, 132, 89, 2603, 92, 125, 158,
	155, 60, 2593, 47, 2584, 2581, 28, 194, 25, 2576,
	13, 117, 143, 2575, 3438, 192, 2569, 14, 336, 161,
	2567, 2566, 16, 8, 10, 2565, 2563, 2562, 2561, 148,
	2559, 2558, 2556, 2554, 21, 51, 19, 4, 122, 91,
	2548, 2539, 154, 162, 2538, 2534, 2527, 2522, 3170, 0,
	136, 2520, 207,
}

//line sql.y:8419
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 261, 384, 385, 385, 259, 259, 33, 75,
	35, 35, 34, 34, 37, 37, 36, 8, 8, 8,
	9, 9, 9, 9, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 11, 11, 11, 11, 13, 13, 13,
	13, 13, 20, 21, 12, 12, 22, 22, 109, 109,
	23, 24, 24, 24, 24, 420, 420, 186, 186, 184,
	184, 185, 185, 264, 264, 25, 268, 268, 270, 270,
	270, 270, 260, 260, 260, 26, 26, 269, 269, 271,
	271, 271, 274, 274, 274, 274, 313, 313, 313, 27,
	27, 27, 27, 27, 27, 27, 129, 129, 387, 387,
	386, 380, 380, 379, 379, 378, 383, 383, 382, 382,
	381, 39, 40, 49, 49, 49, 49, 50, 51, 388,
	388, 353, 56, 56, 55, 55, 55, 55, 55, 55,
	57, 57, 53, 53, 52, 52, 54, 54, 355, 355,
	341, 341, 354, 354, 354, 354, 354, 354, 354, 340,
	340, 140, 140, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	403, 403, 403, 402, 402, 239, 239, 239, 239, 239,
	239, 239, 239, 150, 150, 162, 162, 162, 162, 162,
	148, 148, 149, 147, 147, 147, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 161, 161, 157, 157, 157,
	158, 158, 158, 159, 159, 404, 404, 404, 404, 318,
	318, 318, 318, 321, 321, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 322, 322, 322, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 324,
	339, 339, 325, 325, 333, 333, 334, 334, 335, 335,
	335, 336, 336, 336, 337, 337, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 332, 332, 331, 331, 331,
	342, 367, 367, 366, 366, 364, 364, 364, 364, 364,
	364, 364, 364, 351, 351, 361, 361, 361, 361, 361,
	350, 350, 346, 346, 346, 347, 347, 348, 348, 345,
	345, 349, 349, 363, 363, 362, 362, 343, 343, 344,
	344, 369, 405, 405, 405, 405, 405, 406, 406, 370,
	395, 397, 397, 397, 396, 396, 393, 394, 392, 392,
	392, 392, 392, 85, 85, 85, 287, 287, 288, 288,
	359, 359, 358, 358, 358, 360, 360, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 282, 282,
	282, 391, 391, 391, 391, 391, 391, 390, 390, 390,
	356, 356, 356, 389, 389, 58, 58, 219, 219, 408,
	408, 409, 409, 409, 46, 46, 46, 46, 46, 46,
	45, 45, 45, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 47, 47, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 111,
	111, 112, 112, 112, 112, 114, 114, 114, 372, 372,
	59, 59, 3, 3, 174, 176, 177, 177, 175, 175,
	175, 175, 175, 175, 61, 61, 60, 60, 179, 178,
	180, 180, 180, 1, 1, 2, 2, 4, 4, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 338, 338, 338, 371, 371, 373, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 117, 116, 116,
	115, 118, 118, 118, 118, 118, 118, 118, 118, 375,
	375, 375, 62, 62, 376, 326, 327, 328, 5, 6,
	352, 374, 125, 125, 29, 38, 38, 30, 30, 30,
	30, 31, 31, 63, 64, 415, 415, 68, 68, 68,
	69, 69, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 281, 281, 290, 290, 280, 280, 305, 305,
	305, 283, 283, 283, 284, 284, 401, 401, 401, 277,
	277, 66, 66, 66, 306, 306, 306, 306, 70, 70,
	410, 410, 411, 411, 412, 412, 412, 71, 72, 72,
	308, 308, 309, 309, 73, 74, 86, 86, 86, 86,
	86, 86, 86, 87, 87, 87, 87, 110, 110, 110,
	15, 15, 15, 15, 82, 82, 82, 14, 14, 17,
	67, 67, 76, 398, 398, 399, 400, 400, 400, 400,
	77, 79, 79, 32, 32, 32, 32, 32, 32, 135,
	135, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 130, 130, 130, 124, 124, 421,
	80, 81, 81, 128, 128, 128, 121, 121, 121, 127,
	127, 127, 16, 16, 18, 263, 263, 19, 19, 132,
	132, 134, 134, 134, 134, 134, 136, 136, 136, 136,
	136, 136, 136, 131, 131, 133, 133, 133, 133, 298,
	298, 298, 297, 297, 168, 168, 170, 169, 169, 171,
	171, 172, 172, 172, 172, 217, 217, 194, 194, 256,
	256, 257, 257, 255, 255, 262, 262, 258, 258, 258,
	258, 265, 265, 173, 173, 173, 173, 181, 181, 182,
	182, 183, 183, 307, 307, 303, 303, 303, 302, 302,
	187, 187, 187, 189, 188, 188, 188, 188, 190, 190,
	192, 192, 191, 191, 193, 198, 198, 197, 197, 195,
	195, 195, 195, 196, 196, 196, 196, 199, 199, 145,
	145, 145, 145, 145, 145, 145, 160, 160, 160, 160,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 246, 246, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 154, 222, 222, 221, 221, 88, 88, 88, 89,
	89, 90, 90, 90, 90, 90, 91, 91, 91, 91,
	91, 146, 146, 93, 93, 92, 92, 212, 212, 295,
	295, 94, 95, 95, 98, 98, 97, 96, 96, 102,
	102, 99, 99, 101, 101, 100, 103, 103, 104, 105,
	105, 278, 278, 200, 200, 208, 208, 208, 208, 201,
	201, 201, 201, 201, 201, 201, 209, 209, 209, 216,
	210, 210, 206, 206, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	165, 165, 165, 165, 227, 227, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 153, 153, 166, 166, 166, 166, 167, 167, 167,
	167, 167, 167, 167, 315, 315, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 422, 422, 329,
	329, 329, 329, 207, 207, 207, 207, 207, 126, 126,
	126, 126, 126, 312, 312, 312, 316, 316, 316, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 317, 317, 225, 225, 122, 122,
	223, 223, 224, 226, 226, 218, 218, 218, 218, 220,
	220, 203, 203, 203, 228, 228, 229, 229, 106, 107,
	107, 108, 108, 230, 230, 232, 231, 231, 233, 234,
	234, 234, 235, 235, 236, 236, 236, 48, 48, 48,
	48, 48, 43, 43, 43, 43, 44, 44, 44, 44,
	137, 137, 137, 137, 139, 139, 138, 138, 83, 83,
	84, 84, 84, 414, 414, 414, 413, 413, 413, 413,
	413, 413, 143, 143, 144, 144, 144, 141, 141, 142,
	142, 253, 253, 237, 237, 237, 244, 244, 244, 240,
	240, 242, 242, 242, 243, 243, 243, 241, 250, 250,
	252, 252, 251, 251, 247, 247, 248, 248, 249, 249,
	249, 245, 245, 202, 202, 202, 202, 202, 254, 254,
	254, 254, 266, 266, 213, 213, 215, 215, 214, 214,
	164, 267, 267, 275, 272, 272, 273, 273, 299, 299,
	299, 276, 276, 289, 289, 285, 285, 286, 286, 279,
	279, 291, 291, 291, 78, 211, 211, 368, 368, 365,
	294, 294, 296, 296, 300, 300, 304, 304, 301, 301,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 418, 419, 310, 311,
	311, 311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 2, 3, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 0, 1, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 1, 2, 2, 2,
	0, 1, 4, 4, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 5,
	10, 0, 2, 0, 2, 3, 5, 3, 4, 2,
	3, 2, 3, 3, 3, 3, 2, 2, 4, 4,
	1, 1, 1, 1, 1, 0, 2, 2, 3, 3,
	2, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	7, 8, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 4, 1, 3, 2, 3, 3,
	2, 2, 3, 2, 2, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 4, 3, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 1, 6, 3,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 8, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 6, 5, 9, 6, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 1, 2, 2, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -416, -80, -421, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -69, -65, -66, -70, -71, -72, -73, -74, -14,
	-17, -67, -32, -33, -75, -76, -77, -78, -79, -16,
	-18, -19, -9, -8, -13, 10, 11, -109, -34, 33,
	-39, -49, 225, -50, -40, 226, -51, 228, 227, 266,
	229, 250, 636, 235, 259, 75, 320, 321, 323, 324,
	325, 326, -110, 632, 264, 265, 231, 37, 46, 34,
	35, 38, 236, 272, 273, 234, -10, -35, 9, -418,
	12, 464, 261, 260, 29, -12, 526, 87, -81, -417,
	682, -253, -237, 23, 34, 30, -236, -232, -128, -237,
	21, 19, 8, -80, -80, -80, 13, 14, -80, -353,
	-355, -12, 26, 87, 159, 9, 87, -80, -56, -55,
	-53, -52, -54, -57, 32, -46, -47, -377, -45, -42,
	230, 227, 276, 123, 124, 266, 267, 268, 229, 250,
	265, 269, 264, 285, -41, 82, 34, 526, 529, -360,
	226, 232, 233, 228, 465, 126, 125, 76, -357, 379,
	559, 652, -57, 654, 101, 104, 653, 45, 240, 655,
	656, 657, 566, 658, 249, 659, 660, 661, 662, 668,
	607, 669, 670, 671, 127, 8, -80, -304, -300, 91,
	-293, 523, 252, 557, 558, 301, 82, 42, 532, 376,
	379, 559, 494, 652, 320, 336, 330, 499, 500, 501,
	359, 351, 524, 560, 533, 304, 253, 289, 646, 349,
	135, 654, 308, 561, 267, 384, 385, 562, 386, 101,
	323, 427, 667, 307, 563, 665, 104, 653, 328, 80,
	493, 52, 649, 45, 262, 347, 234, 343, 655, 290,
	564, 535, 283, 126, 123, 674, 37, 339, 51, 31,
	664, 125, 50, 656, 150, 565, 657, 566, 388, 366,
	640, 49, 389, 268, 567, 85, 273, 528, 311, 648,
	390, 513, 340, 391, 300, 663, 231, 568, 627, 619,
	620, 392, 393, 641, 371, 367, 372, 515, 569, 419,
	498, 394, 623, 624, 681, 53, 570, 571, 642, 124,
	572, 79, 658, 81, 334, 335, 573, 298, 251, 518,
	519, 421, 363, 476, 483, 484, 111, 112, 479, 113,
	485, 114, 486, 487, 488, 477, 115, 108, 478, 489,
	490, 364, 365, 116, 491, 110, 109, 480, 482, 117,
	492, 249, 36, 395, 525, 302, 59, 306, 277, 422,
	47, 369, 678, 46, 634, 520, 574, 639, 362, 358,
	473, 54, 575, 576, 577, 578, 495, 659, 361, 333,
	357, 673, 4, 295, 496, 660, 63, 233, 374, 373,
	375, 284, 418, 354, 579, 580, 581, 256, 83, 582,
	344, 22, 583, 584, 396, 291, 585, 57, 586, 587,
	425, 265, 588, 55, 661, 40, 589, 270, 675, 662,
	590, 313, 314, 591, 592, 633, 593, 272, 594, 398,
	595, 621, 622, 397, 368, 370, 521, 279, 399, 237,
	527, 596, 312, 338, 269, 666, 597, 257, 509, 510,
	511, 512, 647, 517, 516, 271, 276, 264, 426, 258,
	598, 599, 600, 601, 602, 305, 618, 603, 604, 324,
	668, 474, 44, 605, 606, 607, 608, 609, 299, 294,
	420, 429, 62, 84, 381, 610, 611, 645, 332, 329,
	292, 612, 321, 56, 669, 670, 671, 286, 672, 502,
	503, 504, 505, 10, 679, 680, 497, 401, 127, 296,
	297, 48, 355, 278, 613, 309, 614, 345, 346, 360,
	331, 356, 630, 322, 628, 280, 402, 475, 266, 615,
	428, 293, 377, 382, 310, 531, 514, 285, 403, 637,
	644, 530, 506, 507, 353, 350, 287, 508, 616, 632,
	404, 241, 281, 282, 617, 629, 405, 406, 303, 407,
	315, 317, 417, 318, 319, 408, 409, 410, 411, 414,
	415, 416, 413, 316, 412, 631, 625, 626, 288, 529,
	327, 348, 383, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 472, 239, -80, 239, -191, -300, 239, 239, 96,
	527, 653, 637, 398, -272, 415, 416, 385, -290, 387,
	400, 395, 405, 393, -281, 396, 398, 279, -401, 419,
	239, 402, 225, 388, 397, 406, 407, 315, 417, 317,
	303, 413, 408, 316, 412, 288, 409, 410, 411, 414,
	-384, 177, 657, 672, 135, 352, 392, 390, 420, 634,
	91, -306, 91, 92, 93, -293, 322, -308, 327, -294,
	-384, -293, 325, -80, -80, -310, -310, -130, 634, 638,
	-210, -145, 143, -160, -163, -151, -155, -204, -205, -206,
	-207, -161, -220, -259, 166, 167, 174, 144, -216, -164,
	27, 522, 466, 465, 177, 32, -154, 220, 69, 70,
	468, 146, 58, 12, 441, 442, -162, 436, 443, 438,
	493, 495, 496, 497, 494, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 498, 470, 471, 118, 472,
	108, 110, 109, 473, 474, 475, 349, 520, 521, 515,
	518, 519, 517, 516, 364, 365, 476, 477, 478, 111,
	112, 113, 114, 115, 116, 117, 479, 482, 480, 481,
	483, 484, 485, 490, 491, 486, 487, 488, 489, 492,
	-90, -102, 548, 547, -103, -152, -153, -166, -167, -294,
	-300, 244, 435, 238, 172, 464, -156, -149, -218, 107,
	92, 93, -8, -214, 434, 439, 440, 444, 437, 534,
	536, 551, 552, 554, 539, 544, 543, 546, 509, 510,
	511, 512, 513, 514, 619, 620, 621, 622, 623, 624,
	625, 626, -384, -293, 91, -158, -157, -200, 94, 99,
	102, 103, 105, -407, 262, 345, 346, 119, -418, 650,
	90, 95, 96, 97, 98, 120, 121, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 45,
	401, 401, -191, -80, -80, -80, -80, -230, -128, -232,
	-10, -8, -418, -80, -8, -9, -13, -35, -37, 553,
	-36, -300, 100, -237, -253, 13, 162, 43, 51, -235,
	-236, -12, -8, -145, 20, 24, 25, -133, 168, -145,
	-300, -133, -279, 243, -80, -80, -268, -313, 322, -270,
	420, 634, 419, -260, -273, 91, -259, -272, 418, -12,
	-354, 159, -340, -344, -294, 254, -370, 250, -191, -80,
	-363, -362, -294, -418, -129, -289, 240, 248, 247, 136,
	-388, 139, 296, 435, 238, -52, -53, -54, -272, 176,
	656, -111, 271, 275, 88, 88, -344, -343, -342, -389,
	275, 254, -369, -361, 246, 255, -350, 247, 248, -345,
	240, 137, -389, -345, 245, 255, 250, 254, 275, 275,
	127, 275, 127, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 270, -351, 151, -351, 530, 530, -357, -389,
	250, 240, -389, -389, 246, -291, -345, 242, 26, 242,
	36, 36, -351, -351, -351, -272, 176, -351, -351, -351,
	-351, 283, 283, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	239, -388, -137, 412, 303, 317, 315, 82, -55, 285,
	-38, -191, -289, 240, 241, -388, 272, -191, 221, -191,
	-415, -191, 96, 96, -283, 159, 16, -283, -280, 401,
	399, 386, 391, -283, -283, -283, -283, 286, 384, -346,
	240, 36, 251, 401, 286, 384, 286, 287, 286, 287,
	394, 404, 286, -305, 15, 162, 435, 389, 393, 279,
	239, 280, 241, 403, 287, -305, -305, 90, -305, 90,
	90, -284, 159, 286, 401, 282, -283, -283, -311, -418,
	-296, -294, -292, 230, 24, 142, 26, 28, 145, 177,
	130, 20, 146, 38, 232, 352, 250, 176, 246, 465,
	225, 73, 534, 436, 438, 434, 441, 467, 468, 435,
	387, 32, 14, 536, 29, 260, 25, 39, 170, 227,
	149, 537, 263, 27, 261, 118, 121, 539, 23, 76,
	255, 15, 248, 41, 17, 540, 541, 18, 244, 243,
	162, 240, 71, 12, 220, 30, 158, 67, 542, 137,
	543, 544, 545, 546, 131, 69, 159, 21, 676, 439,
	440, 34, 635, 522, 274, 172, 74, 60, 638, 143,
	437, 547, 548, 119, 549, 122, 77, 643, 139, 19,
	72, 43, 550, 275, 551, 245, 677, 552, 423, 553,
	160, 228, 464, 70, 161, 650, 554, 651, 238, 400,
	9, 469, 33, 259, 247, 129, 68, 555, 239, 148,
	470, 471, 242, 132, 120, 8, 136, 35, 13, 75,
	78, 442, 443, 444, 58, 128, 526, 147, 16, 556,
	424, 141, 636, 430, 431, 432, 433, 235, -384, 639,
	-311, -311, 33, 92, -410, -411, -412, 526, 423, 242,
	-294, -191, -86, 627, 229, -87, 633, 24, 237, -135,
	401, -123, 177, 657, 640, 641, 642, 639, 398, 637,
	647, 645, 643, 286, 644, 88, 139, 141, 142, 4,
	-145, 158, -201, 151, 152, 153, 154, 155, 156, 157,
	162, 143, 145, 159, -246, 140, 163, 164, 165, 166,
	167, 168, 169, 171, 170, 172, 173, 160, 161, 176,
	223, 224, -155, -155, -155, -155, -216, -222, -221, -418,
	-218, -384, -293, -300, -418, -418, -155, -278, -418, -418,
	-151, -418, -418, -418, -225, -145, -418, -418, -422, -418,
	-422, -422, -329, -418, -329, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, 221, -418, -418, -418, -418, -418, -329, -329, -329,
	-329, -329, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, 103, 99, 102, 94,
	-220, 105, 90, 90, 90, 90, -8, -9, -210, -418,
	-310, -398, -399, -194, -191, -418, 303, 315, -294, -294,
	272, -235, -12, -8, -230, -236, -232, -8, -121, -134,
	64, 65, -136, 25, 39, 68, 66, 24, -419, 89,
	-419, -253, -419, 88, -37, -256, 87, 62, 44, 90,
	90, 88, 22, -231, -233, -145, 15, -298, 4, -297,
	26, -294, 90, 221, 15, -192, 30, -191, -279, -279,
	88, 91, 322, -269, -271, 421, 423, 151, -299, -294,
	90, 32, 89, 88, -191, -318, -321, -323, -322, -324,
	-319, -320, 349, 350, 177, 353, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 366, 33, 262, 345, 346,
	347, 348, 367, 368, 369, 370, 372, 373, 374, 375,
	330, 351, 524, 331, 332, 333, 334, 335, 336, 338,
	339, 342, 340, 341, 343, 344, -385, -384, 87, 64,
	65, 89, 88, -325, 87, -145, -137, 239, -384, 240,
	240, 240, -80, 464, -351, -351, -351, 270, 20, -45,
	-42, -377, 19, -41, -42, 230, 123, 124, 227, 87,
	-340, 87, -349, -385, -384, 87, 137, 245, 136, -348,
	-345, -348, -349, -384, -218, -384, 137, 137, -384, -384,
	-265, -294, -265, -265, 24, -265, 24, -265, 24, 96,
	-294, -265, 24, -265, 24, -265, 24, -265, 24, -265,
	24, 32, 79, 80, 81, 32, 83, 84, 85, -218,
	-384, -384, -218, -340, -218, -191, -384, -272, 96, 96,
	96, -351, -351, 96, 90, 90, 90, -351, -351, 96,
	90, -302, -300, 90, 90, -390, 256, 300, 302, 96,
	96, 96, 96, 32, 90, -391, 32, 664, 663, 665,
	666, 667, 90, 96, 32, 96, 32, 96, -294, 87,
	-191, -143, 290, 225, 227, 230, 77, 90, 306, 307,
	304, 313, 314, 309, 310, 90, 306, 304, 313, 314,
	309, 310, 90, 306, 307, 304, 313, 314, 309, 310,
	151, 45, 88, 242, 239, -384, -285, 244, -285, -294,
	-301, -300, -292, -414, 88, -413, 23, 430, 431, 433,
	390, 432, 90, -145, -347, 15, 162, -305, -305, -283,
	-191, -347, -305, -283, -191, -283, -283, -283, -283, -305,
	-305, -305, -283, -300, -300, -191, -191, -191, -191, -191,
	-191, -191, -311, -284, -283, -283, 639, -283, 318, 639,
	90, -277, 15, 77, -311, -311, 88, 328, 424, 425,
	-309, 325, -82, -294, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 526, -184, -191, 639, 639, 639, 639,
	639, 639, -145, -145, -145, -145, 549, -208, 119, 143,
	120, 121, -163, -209, -214, -216, 106, 162, 145, 159,
	-246, -151, -155, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -312, -294, 90, 177,
	-159, -158, 105, -407, -159, 523, 88, -221, 221, -145,
	-145, -384, -145, -294, -131, -133, -131, -145, -223, -224,
	147, -218, -145, -419, -419, 96, 105, 168, -127, 25,
	39, -127, -127, -127, -127, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -127, -294, -294, -120, -119,
	446, 447, 448, 449, 451, 452, 453, 456, 457, 461,
	462, 445, 463, 450, 455, 458, 459, 460, 454, 348,
	-145, -145, -145, -145, -145, -145, -88, -145, 130, 131,
	132, -210, -145, -151, -145, -145, -145, -419, -145, -145,
	-145, -211, -210, -383, -382, -381, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -419,
	-145, -165, -149, 96, -261, 105, 92, -145, -145, -132,
	-131, -296, -301, -292, -293, -131, -132, -132, -131, -131,
	-145, -145, -145, -145, -145, -145, -145, -145, -419, -145,
	-145, -145, -145, -145, -253, -419, -210, 88, -400, 423,
	424, 635, -303, 275, -302, 26, -211, 90, 90, 15,
	-263, 78, -294, -235, -235, 60, -131, -136, -419, -36,
	26, -255, -294, 63, 90, -330, -272, 376, 377, 177,
	-145, -145, 88, -234, 28, 29, -191, -297, 168, -301,
	-191, -264, 275, -191, -169, -171, -172, -173, -194, -217,
	-418, -174, -8, 545, 542, 15, -184, -185, -193, -300,
	-270, -313, -269, 88, 422, 424, 425, 77, 122, -145,
	-331, 176, -359, -358, -357, -340, -342, -343, -344, 89,
	-331, -336, 382, 381, -325, -325, -325, -325, -325, -330,
	-330, -330, -330, 87, 87, -325, -325, -325, -325, -333,
	87, -333, -333, -334, -333, 87, -334, -335, 87, -335,
	-370, -145, -367, -366, -364, -365, 249, 101, 617, 573,
	526, 566, 607, 78, -362, -234, 96, -419, -143, -286,
	244, -368, -365, -384, -384, -384, -286, 91, 90, 91,
	90, 91, 90, -112, -59, -1, 676, 677, 678, 88,
	20, -341, -340, -58, 300, -373, -374, 275, -369, -363,
	-349, 137, -348, -349, -349, -384, 88, 30, 127, 127,
	127, 127, 526, 227, 33, -287, 565, 143, 617, 573,
	-340, -58, 242, 242, -312, -312, -312, 90, 90, -282,
	672, -184, -139, 292, 151, 281, 281, 239, 239, 294,
	-191, 305, 308, 306, 307, 304, 313, 314, 309, 310,
	24, 24, 24, 24, 24, 24, 24, 306, 304, 313,
	314, 309, 310, 319, 24, 24, 24, 24, 24, 24,
	305, 308, 306, 307, 304, 313, 314, 309, 310, 24,
	24, 24, 24, 24, 24, 24, 293, 295, 297, 283,
	-191, -191, -285, 77, -186, -191, 27, -300, -413, -191,
	285, -191, -283, -283, -191, -283, -283, -191, -412, 329,
	-294, 363, 628, 629, 631, 630, -123, 423, 88, 526,
	23, -124, 23, -418, 119, 120, 121, -209, -151, -155,
	-151, 142, 263, -418, -218, -419, -296, 26, 88, 78,
	-419, 88, 88, -419, -419, 88, 15, -226, -224, 149,
	-145, -419, 88, -419, -419, -419, -210, -145, -145, -145,
	-145, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -210, 88, 88, 15, -316, 26, -419, -419, -419,
	-419, -419, -225, -419, 15, -419, 78, 88, 162, 88,
	-419, -419, -419, 88, 88, -419, -419, 88, 88, -419,
	88, 88, 88, -419, 88, 88, 88, 88, -419, -419,
	-419, -419, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, -419, -95, 550, -419, -419, 88, -419, 88,
	-419, -418, 221, -419, -419, -419, -419, -419, 88, 88,
	88, 88, 88, 88, -419, -419, -419, 88, 88, -419,
	88, -419, 88, -419, -399, 634, 424, -198, -197, -195,
	75, 243, 76, -418, -302, -419, -159, -261, -262, -261,
	-203, -294, 96, 105, -237, -168, -170, 15, -136, -216,
	89, 88, -330, -241, -247, -280, -294, 90, 177, -332,
	177, -332, 376, 377, -233, 221, -199, 16, -202, 33,
	58, -11, -418, -418, 33, 88, -187, -189, -188, -190,
	67, 71, 73, 68, 69, 70, 74, -307, 26, -8,
	-169, -8, -418, -191, -184, -420, 15, 78, -420, 88,
	221, -271, -274, 426, 423, 429, -384, 90, -111, 88,
	-357, -344, -238, -140, 41, -337, 383, -330, 533, -330,
	-339, 90, -339, 96, 96, 96, 89, -48, -43, -44,
	34, 82, -364, -351, 90, 40, -351, -351, -294, 89,
	-234, -139, -191, 143, 77, -368, -368, -368, -300, -2,
	675, 681, 137, 87, 386, 19, -255, 88, 89, -219,
	301, 89, -113, -294, 89, 87, -349, -349, -294, -418,
	239, 32, 32, 617, 573, 565, -58, -219, -218, -384,
	-331, 674, 673, 89, 241, 299, -144, 441, -141, 90,
	91, -191, -191, -191, -191, -191, 230, 227, 409, -408,
	311, -408, -408, 90, -408, 409, -408, -408, 284, 242,
	-184, -191, 88, -85, 258, 253, -305, -305, 34, -191,
	423, 648, 646, -145, 142, 263, -163, -155, -151, -314,
	177, 349, 262, 347, 343, 363, 354, 381, 345, 382,
	340, 339, 338, -314, -312, -210, -133, -145, -145, 150,
	-145, 148, -145, -419, -419, -419, -419, -419, -230, -145,
	-145, -145, -419, 177, 349, 15, -145, -312, -145, -145,
	-145, -145, -145, -381, -145, -210, -145, -210, -145, -145,
	-145, -145, -145, -382, -382, -382, -382, -382, -210, -210,
	-210, -210, -418, -294, -98, -97, -96, 600, 243, -95,
	-165, -98, -165, -132, -296, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -195, -345, -345, -345, -265,
	88, -276, 23, 15, 58, 58, -168, -199, -169, -136,
	-294, -244, 627, -250, 47, -248, -249, 48, -245, 49,
	57, -332, -332, 168, -235, -145, -266, 77, -267, -275,
	-218, -213, -215, -214, -418, -254, -419, -294, -265, -267,
	-171, -172, -172, -171, -172, 67, 67, 67, 72, 67,
	72, 67, -188, -300, -419, -145, -303, 78, -169, -169,
	-193, -300, 168, 423, 427, 428, -357, -406, 119, 143,
	32, 77, 379, 101, -404, 176, 562, 612, 617, 573,
	566, 607, -405, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -288, -287, -44, -43,
	-351, -351, 96, -384, 90, 90, 241, 27, -191, 77,
	77, 77, -114, 679, 96, 87, -3, 82, -145, 87,
	20, -340, -218, -375, -326, -376, -327, -328, -5, -6,
	-352, -117, 58, 101, -62, 45, 240, 659, 660, 127,
	-418, 672, -367, -255, -371, -373, -191, -148, -418, -147,
	-149, -156, 166, 167, 262, 345, 346, -219, -191, -138,
	290, 298, 87, -142, 92, -387, 78, 281, 379, 281,
	90, -409, 312, 90, -409, -409, 90, -409, 90, -409,
	-409, -191, -85, -48, -191, -283, -283, 34, -384, -419,
	-163, -155, -126, 162, 526, -317, 532, -325, -325, -325,
	-335, -325, 335, -325, 335, -325, -419, -419, -419, 88,
	-419, 23, -419, -145, 88, -122, 469, 88, 88, -419,
	87, 87, -145, -419, -419, -419, 88, -419, -419, -419,
	-419, -419, 88, -419, -419, -419, 88, -315, 618, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -94,
	-295, -294, -95, 582, 582, -419, -95, -227, 88, -419,
	-419, 88, -419, 88, 88, -419, 88, -419, 88, -419,
	-419, -419, -419, 88, -196, 23, -196, -196, -419, -261,
	-191, -199, -228, 17, -241, 52, 355, -252, -251, 56,
	48, -249, 20, 50, 20, 31, -266, 88, 151, 88,
	-419, -419, 88, 58, 221, -419, -199, -182, -181, 77,
	78, -183, 77, -181, 67, 67, -256, 88, -264, -169,
	-199, -199, 221, 119, -418, -150, -162, -148, 13, 90,
	90, -384, -403, 663, 664, 32, 96, -351, -351, 137,
	137, -191, 87, -330, 90, -330, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -191, -191, -191, -191,
	-372, 87, 20, -145, 87, 151, 89, -255, -255, 277,
	162, -351, 657, 283, 283, -351, -351, -351, -116, -115,
	679, 89, -419, 88, -338, 526, 529, -145, -157, -157,
	-256, 89, -380, 526, -386, -294, -294, -294, -294, 96,
	98, 90, -419, 524, 74, 527, -419, -330, -145, -145,
	-145, -235, 90, -145, -145, 96, 96, -419, -145, -210,
	-145, -419, -179, -178, -180, 640, 119, 32, -314, -419,
	-212, 275, -101, -100, -99, 15, -419, -145, -145, -145,
	-145, -145, -145, -145, -418, 67, 19, 17, -418, -418,
	-303, -228, -229, 18, 20, -242, 54, -240, 53, -240,
	-251, 20, 20, 90, 20, 90, 137, -275, -145, -215,
	58, -11, -294, -213, -294, -230, -145, 87, -145, -159,
	-199, -199, -145, -205, 493, 495, 496, 497, 494, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 498,
	472, 108, 110, 109, 473, 474, 475, 349, 520, 521,
	515, 518, 519, 517, 516, 364, 365, 476, 477, 478,
	111, 112, 113, 114, 115, 116, 117, 479, 482, 480,
	483, 484, 485, 490, 491, 486, 487, 488, 489, 492,
	509, 510, 511, 512, 513, 514, 619, 620, 621, 622,
	623, 624, 625, 626, 90, 90, 87, -145, 89, 89,
	-256, -371, -59, 89, -257, -255, 96, 89, 278, -214,
	-418, 90, -351, -351, -351, 96, 96, -302, -419, 88,
	-294, -405, -373, 530, 530, -419, 26, -379, -378, -296,
	87, 78, 63, 525, 528, -419, -419, 88, -419, -419,
	-419, 89, 89, -419, -419, -419, 88, -419, -178, -180,
	-419, 77, -159, -230, 20, -98, 300, 302, -98, -419,
	88, -419, -419, 88, -419, 88, -419, -419, -258, -419,
	-294, 245, 20, 20, -258, -258, -198, -229, -108, -107,
	-106, 556, -145, -210, -243, 55, 77, 122, 90, 90,
	90, 13, -213, 221, -235, -255, -176, 386, -230, -419,
	-255, 89, 26, 89, 681, 137, 89, -214, -125, -418,
	274, -302, 90, 90, -115, -118, -11, 88, 151, -255,
	-191, 63, -145, -210, -419, 77, 537, 640, -93, -92,
	-89, 651, 677, -210, -95, -95, -145, -145, -145, 88,
	-419, -419, -419, -108, 88, -105, -104, -294, 77, 122,
	-267, -294, 89, -419, -418, -235, 89, -239, -11, 87,
	-3, 274, -326, -376, -327, -328, -5, -6, -352, -83,
	526, -378, -356, -296, 90, 96, 89, 526, -419, -419,
	-91, 145, 649, 615, -146, -157, -154, 220, -419, 88,
	-419, 88, -419, 88, -294, 245, -106, 88, 26, -303,
	-177, -175, -294, 579, -396, -395, 522, -406, -402, 119,
	143, 101, -404, 617, 573, 128, 129, -83, -145, 87,
	-419, -84, 289, 634, -387, 527, -91, 650, 593, 568,
	593, 568, -145, -145, -145, -104, -418, -419, 88, 23,
	-318, -61, 590, -393, -394, 77, -397, 392, 589, 610,
	119, 90, 89, -255, 250, -380, 528, 142, -419, 88,
	-419, 88, -419, -94, -175, 586, -331, -159, -394, 77,
	-393, 77, 14, 13, -4, 680, 89, 291, -91, -145,
	-145, -419, -60, 27, -176, -392, 258, 253, 256, 33,
	-392, 96, -4, -419, -419, 590, 252, 32, 119, -159,
	-179, -178, -178,
}

var yyDef = [...]int{
	929, -2, -2, 931, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 929, 929, 929, 0, 929,
	0, 0, 929, -2, -2, 929, 1546, 0, 929, 0,
	0, 0, 0, 0, -2, 842, 848, 0, 857, -2,
	0, 0, 929, 929, 2118, 2118, 924, 0, 0, 0,
	0, 0, 929, 929, 929, 929, 1403, 53, 929, 0,
	88, 89, 877, 878, 879, 68, 0, 2116, 930, 1,
	3, 74, 78, 0, 0, 0, 61, 1412, 0, 81,
	0, 0, 933, 0, 0, 1529, 929, 929, 0, 129,
	130, 131, 0, 0, 0, 929, 0, -2, 135, -2,
	164, 165, 166, 0, 171, 639, 527, 579, 525, 564,
	-2, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 403, 403, 0, 0, -2,
	513, 513, 513, 1531, 0, 0, 0, 561, 465, 403,
	403, 403, 0, 403, 403, 403, 403, 0, 0, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 1430, 170, 1547, 1544,
	1545, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 0, 1523, 0, 752, 1032, 0, 0, 757,
	0, 0, 760, 761, 831, 763, 764, 831, 0, 831,
	831, 831, 831, 0, 0, 0, 774, 0, 0, 0,
	0, 828, 0, 790, 791, 0, 828, 828, 828, 0,
	0, 802, 834, 0, 0, 808, 831, 831, 811, 812,
	2119, 0, 2119, 2119, 1514, 0, 825, 823, 837, 838,
	43, 841, 844, 845, 846, 847, 850, 0, 861, 864,
	1540, 1541, 0, 866, 873, 890, 891, 0, 925, 926,
	48, 1180, 0, 1054, 1059, 1070, 1085, 1086, 1087, 1088,
	1089, 1091, 1092, 1093, 0, 0, 0, 0, 1098, 1099,
	0, 0, 0, 0, 0, 1161, 1107, 0, 0, 0,
	0, 1376, 0, 0, 1337, 1337, 1195, 1337, 1339, 1339,
	1754, 1890, 1898, 2020, 1716, 1721, 1722, 1723, 2013, 2014,
	2015, 2016, 2056, 2057, 2061, 1814, 0, 0, 0, 2115,
	1851, 1859, 1860, 1884, 1985, 2041, 1733, 1879, 1950, 1811,
	1833, 1834, 1967, 1968, 1855, 1856, 1837, 1849, 1852, 1840,
	1841, 1843, 1845, 1850, 1857, 1863, 1842, 1862, 1861, 0,
	1838, 1839, 1844, 1854, 1858, 1846, 1847, 1848, 1853, 1864,
	0, 0, 0, 0, 0, 1276, 1277, 1278, 1279, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 1389, 1390,
	46, 47, 1179, 1510, 1339, 1339, 1339, 1339, 1339, 1121,
	1122, 1123, 1124, 1125, 1149, 1150, 1156, 1157, 1962, 1963,
	1964, 1965, 1795, 2050, 1803, 1804, 1945, 1946, 1816, 1817,
	2090, 2091, -2, -2, -2, 236, 237, 238, 239, 240,
	241, 242, 243, 0, 1758, 2031, 2032, 232, 0, 0,
	300, 301, 297, 298, 299, 1163, 1164, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 294, 2118,
	0, 900, 0, 0, 0, 0, 0, 1412, 0, 1404,
	1403, 66, 0, -2, 0, 0, 0, 0, 50, 0,
	55, 989, 932, 80, 79, 1461, 0, 0, 0, 62,
	1413, 70, 72, 1414, 0, 934, 935, 0, 965, 969,
	0, 0, 0, 1530, 1529, 1529, 105, 0, 0, 106,
	126, 127, 128, 0, 0, 112, 113, 1516, 1517, 132,
	0, 0, 182, 183, 0, 44, 430, 0, 178, 951,
	0, 423, 362, 0, 1430, 0, 0, 0, 0, 0,
	929, 0, 1524, 159, 160, 167, 168, 169, 403, 403,
	403, 576, 0, 0, 170, 170, 534, 535, 536, 0,
	0, -2, 428, 0, 514, 0, 0, 417, 417, 421,
	419, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 700, 0, 404, 0, 574, 575, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 1533, 0,
	551, 552, 0, 0, 0, 403, 403, 0, 0, 0,
	0, 403, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 1452, 0, 0, 0, 0, 0, -2, 0,
	744, 0, 0, 0, 1525, 1525, 0, 751, 0, 753,
	1443, 755, 758, 759, 762, 0, 0, 765, 0, 828,
	828, 826, 827, 767, 768, 769, 770, 831, 0, 0,
	412, 413, 414, 828, 831, 0, 831, 831, 831, 831,
	828, 828, 828, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 834, 831, 831, 0, 831, 798,
	0, 803, 0, 804, 805, 806, 809, 810, 813, 2120,
	2121, 1542, 1543, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 2119, 2119,
	817, 821, 1515, 843, 849, 851, 852, 0, 0, 862,
	865, 884, 52, 1802, 872, 52, 874, 875, 876, 903,
	904, 909, 0, 0, 0, 0, 915, 916, 917, 918,
	0, 0, 921, 922, 923, 0, 0, 0, 0, 0,
	1052, 0, 0, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 1072, 0,
	0, 0, 1094, 1095, 1096, 1097, 1100, 0, 1112, 0,
	1114, 1385, -2, 0, 0, 0, 1105, 1106, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 1193, 0,
	1194, 1196, 1197, 0, 1198, 939, 939, 939, 939, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1535, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 949, 949, 0, 0, 225, 226, 227,
	228, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 302, 250, 251, 252, 1179, 0, 0, 0,
	49, 892, 893, 0, 1015, 1535, 0, 0, 0, 945,
	0, 60, 69, 71, 1412, 64, 1412, 0, 0, 0,
	-2, -2, 952, 958, 959, 960, 961, 962, 57, 2117,
	58, 0, 77, 0, 51, 0, 0, 0, 0, 376,
	1464, 0, 0, 1405, 1406, 1409, 0, 966, 1896, 970,
	0, 972, 973, 0, 0, 103, 0, 1031, 0, 0,
	0, 114, 0, 116, 117, 0, 0, 0, 387, 1518,
	1519, 1520, -2, 410, 0, 387, 371, 310, 311, 312,
	362, 314, 362, 362, 362, 362, 376, 376, 376, 376,
	345, 346, 347, 348, 349, 0, 0, 331, 362, 362,
	362, 362, 352, 353, 354, 355, 356, 357, 358, 359,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 364,
	364, 364, 364, 364, 368, 368, 0, 45, 0, 956,
	957, 391, 0, 1409, 0, 0, 1452, 1527, 1537, 0,
	0, 0, 1527, 137, 0, 0, 0, 577, 650, 528,
	565, 578, 0, 531, 532, -2, 0, 0, 513, 0,
	515, 0, 411, 0, -2, 0, 421, 0, 417, 421,
	418, 421, 409, 422, 555, 556, 557, 0, 559, 560,
	680, 1001, 0, 0, 0, 0, 0, 686, 687, 688,
	0, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 515, 0, 562, 0, 0, 467, 468,
	469, 0, 0, 472, 473, 474, 475, 0, 0, 478,
	479, 480, 1018, 1019, 481, 482, 507, 508, 509, 483,
	484, 485, 486, 487, 488, 489, 501, 502, 503, 504,
	505, 506, 490, 491, 492, 493, 494, 495, 498, 0,
	152, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 0, 0, 0, 948,
	1033, 1548, 1549, 754, 0, 1444, 0, 1447, 1448, 1449,
	1450, 1451, 832, 833, 0, 415, 416, 831, 831, 771,
	818, 0, 831, 775, 819, 776, 778, 777, 779, 792,
	793, 831, 782, 829, 830, 783, 784, 785, 786, 787,
	788, 789, 814, 794, 795, 796, 801, 797, 799, 800,
	835, 0, 839, 840, 815, 816, 0, 0, 855, 856,
	0, 863, 887, 885, 886, 888, 880, 881, 882, 883,
	0, 889, 0, 0, 906, 99, 911, 912, 913, 914,
	927, 920, 1181, 1049, 1050, 1051, 0, 1053, 1056, 0,
	1165, 1167, 1058, 1060, 1176, 1177, 1178, 0, 0, 0,
	0, 0, 1064, 1068, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1090, 1353, 1354, 1355,
	1109, 303, 304, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 1180, 1111, 0, 963, 0, 0, 1383, 1380,
	0, 0, 0, 1338, 1340, 0, 0, 0, 0, 940,
	941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1356, 0, 0, 0, 0, 0, 1376, 0, 1116, 1117,
	1118, 0, 0, 0, 0, 0, 0, 1236, 0, 0,
	0, 0, 1536, 0, 147, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 1281, 1282, 1283, 42, 0, 0, 0,
	950, 1387, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 895, 896,
	898, 0, 1035, 0, 1016, 0, 0, 901, 902, 0,
	944, 0, 947, 63, 65, 0, 974, 953, 59, 54,
	0, 0, 993, 1462, 376, 1484, 0, 385, 385, 382,
	1415, 1416, 0, 1408, 1410, 1411, 82, 971, 967, 0,
	1047, 0, 0, 1030, 0, 977, 979, 980, 981, 1013,
	0, 984, 985, 0, 0, 0, 0, 0, 101, 1032,
	107, 0, 115, 0, 0, 120, 121, 108, 109, 110,
	111, 0, 639, -2, 462, 184, 186, 187, 188, 179,
	-2, 374, 372, 373, 313, 376, 376, 339, 340, 341,
	342, 343, 344, 0, 0, 332, 333, 334, 335, 324,
	0, 325, 326, 327, 366, 0, 328, 329, 0, 330,
	429, 0, 1417, 392, 393, 395, 403, 0, 398, 399,
	0, 403, 403, 0, 424, 425, 0, 1409, 1434, 0,
	0, 0, 1538, 1537, 1537, 1537, 0, 172, 173, 174,
	175, 176, 177, 675, 0, 0, 651, 673, 674, 170,
	0, 0, 180, 517, 516, 0, 707, 0, 427, 0,
	0, 421, 421, 406, 407, 558, 0, 0, 682, 683,
	684, 685, 0, 0, 0, 544, 456, 0, 545, 546,
	515, 517, 0, 0, 387, 470, 471, 476, 477, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 592, 593, 596, 598, 599, 600, 519, 606,
	595, 597, 601, 602, 603, 519, 607, 608, 610, 611,
	612, 519, 618, 0, 609, 613, 614, 615, 519, 619,
	622, 623, 624, 627, 629, 630, 631, 519, 637, 626,
	628, 632, 633, 634, 519, 638, 1431, 1432, 1433, 0,
	0, 745, 0, 0, 453, 97, 1526, 750, 1445, 756,
	1446, 828, 781, 820, 828, 773, 780, 807, 853, 854,
	859, 867, 868, 869, 870, 871, 910, 0, 0, 0,
	0, 919, 0, 0, 1057, 1166, 1168, 1061, 0, 1065,
	1069, 0, 0, 0, 1115, 1113, 1387, 0, 0, 0,
	1162, 0, 0, 1184, 1185, 0, 0, 0, 1381, 0,
	0, 1191, 0, 1341, 1342, 1199, 0, 0, 0, 0,
	0, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1403, 0, 0, 0, 0, 0, 1220, 1221, 1222,
	1223, 1224, 0, 1226, 0, 1227, 0, 0, 0, 0,
	1234, 1235, 1237, 0, 0, 1240, 1241, 0, 0, 1242,
	0, 0, 0, 1246, 0, 0, 0, 0, 1255, 1256,
	1257, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 1270, 0, 1144, 0, 0, 1144, 0,
	1182, 949, 0, 1343, 1344, 1345, 1346, 1347, 0, 0,
	0, 0, 0, 0, 1303, 1304, 1306, 0, 0, 1309,
	0, 1311, 0, 1509, 894, 897, 899, 987, 1036, 1037,
	0, 0, 0, 0, 1017, 1534, 942, 943, 946, 995,
	0, 1391, 0, 0, 974, 1047, 975, 0, 954, 56,
	990, 0, 1466, 1465, 1478, 1491, 385, 385, 379, 380,
	386, 381, 383, 384, 1407, 0, 1412, 0, 1502, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	1020, 0, 0, 1023, 0, 0, 0, 0, 1014, 985,
	0, 986, 0, -2, 0, 0, 95, 96, 0, 0,
	0, 118, 119, 0, 0, 125, 388, 389, 161, 170,
	464, 185, 437, 0, 0, 309, 375, 336, 337, 338,
	0, 360, 0, 0, 0, 0, 458, 133, 1421, 1420,
	403, 403, 394, 0, 397, 0, 0, 0, 1539, 363,
	426, 0, 151, 0, 0, 0, 0, 0, 157, 645,
	0, 0, 652, 0, 0, 0, 526, 0, 537, 538,
	0, 679, -2, 741, 391, 0, 405, 408, 1002, 0,
	0, 539, 0, 542, 543, 457, 517, 548, 549, 563,
	550, 499, 500, 497, 0, 0, 1453, 1454, 1459, 1457,
	1458, 138, 584, 586, 585, 589, 0, 0, 0, 521,
	0, 521, 521, 0, 521, 0, 521, 521, 582, 0,
	453, 1417, 0, 749, 454, 455, 831, 831, 905, 100,
	0, 908, 0, 0, 0, 0, 1062, 1066, 1348, 1374,
	362, 362, 1361, 362, 368, 1364, 362, 1366, 362, 1369,
	362, 1372, 1373, 0, 0, 0, 964, 0, 0, 1190,
	1384, 0, 0, 1200, 1201, 1202, 1203, 1204, 1378, 0,
	0, 0, 1219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 150, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1139, 1143, 0, 1145, 1146, 0, 0, 1272,
	0, 0, 1284, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 1043, 1043, 1043, 0,
	0, 0, 1521, 1522, 1392, 1393, 1047, 1394, 976, 955,
	994, 1484, 0, 1477, 0, -2, 1486, 0, 0, 0,
	1492, 377, 378, 968, 83, 1048, 86, 0, 1502, 1511,
	0, 1493, 1504, 1506, 0, 0, 0, 1498, 0, 1047,
	978, 1009, 1011, 0, 1006, 1021, 1022, 1024, 0, 1026,
	0, 1028, 1029, 989, 983, 0, 103, 0, 1047, 1047,
	102, 0, 1034, 122, 123, 124, 463, 189, 194, 0,
	0, 0, 199, 0, 201, 0, 0, 0, 206, 207,
	403, 403, 438, 0, 306, 308, 0, 0, 192, 376,
	0, 376, 0, 367, 369, 0, 439, 459, 1418, 1419,
	0, 0, 396, 400, 401, 402, 0, 1528, 153, 0,
	0, 0, 648, 0, 676, 0, 0, 0, 0, 0,
	0, 181, 518, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 0, 403, 0, 0, 0, 403, 403, 403,
	0, 733, 390, 0, 0, 704, 701, 540, 0, 230,
	231, 233, 0, 0, 0, 0, 0, 547, 989, 1435,
	1436, 1437, 0, 1456, 1460, 141, 0, 0, 0, 0,
	594, 604, 0, 520, 605, 616, 620, 617, 625, 635,
	636, 746, 747, 748, 98, 766, 772, 907, 928, 1055,
	1063, 1067, 0, 0, 0, 0, 1375, 1359, 376, 1362,
	1363, 1365, 1367, 1368, 1370, 1371, 1103, 1104, 1108, 0,
	1187, 0, 1189, 1382, 0, 1412, 0, 0, 0, 1218,
	0, 0, 0, 1229, 1228, 1230, 0, 1232, 1233, 1238,
	1239, 1243, 0, 1245, 1247, 1248, 0, 0, 0, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 0,
	1137, 1140, 1271, 1147, 1148, 1153, 1274, 0, 0, 1183,
	1286, 0, 1291, 0, 0, 1297, 0, 1301, 0, 1307,
	1308, 1310, 1312, 0, 0, 0, 0, 0, 1015, 996,
	67, 1394, 1396, 0, 1471, 1469, 1469, 1479, 1480, 0,
	0, 1487, 0, 0, 0, 0, 87, 0, 0, 0,
	1507, 0, 0, 0, 0, 104, 1403, 1003, 1010, 0,
	0, 1004, 0, 1005, 1025, 1027, 982, 0, 1047, 1047,
	93, 94, 0, 195, 0, 197, 223, 224, 0, 200,
	202, 203, 204, 210, 211, 212, 205, 0, 0, 305,
	307, 0, 0, 350, 361, 351, 0, 0, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 989, 154, 155, 156,
	640, 0, 650, 0, 991, 0, 643, 0, 529, 0,
	0, 0, 403, 403, 403, 0, 0, 0, 0, 718,
	0, 0, 681, 0, 689, 0, 0, 0, 234, 235,
	0, 1455, 583, 0, 139, 140, 0, 0, 588, 522,
	523, 621, 1101, 0, 0, 0, 1102, 1360, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 1225, 0, 0,
	0, 1251, 0, 0, 0, 670, 671, 0, 1315, 1142,
	1403, 0, 1144, 1154, 1155, 0, 1144, 1285, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	1035, 1396, 1401, 0, 0, 1474, 0, 1467, 1470, 1468,
	1481, 0, 0, 1488, 0, 1490, 0, 1512, 1513, 1505,
	0, 1497, 1500, 1496, 1499, 1412, 1007, 0, 1012, 0,
	1403, 92, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 209, 0, 0, 365, 370,
	0, 0, 0, 641, 0, 992, 653, 644, 0, 731,
	0, 735, 0, 0, 0, 738, 739, 740, 717, 0,
	721, 431, 705, 702, 703, 541, 0, 142, 143, 0,
	0, 0, 1349, 0, 1352, 1186, 1188, 0, 1215, 1216,
	1217, 1357, 1358, 1231, 1244, 1249, 0, 1252, 0, 0,
	1253, 0, 672, 1133, 0, 0, 1151, 1152, 0, 1287,
	0, 1292, 1293, 0, 1298, 0, 1302, 1313, 0, 1040,
	997, 998, 1045, 1046, 0, 0, 988, 1401, 85, 1402,
	1399, 0, 1397, 1395, 1463, 0, 1472, 1473, 1482, 1483,
	1489, 0, 1495, 0, 90, 0, 0, 0, 1412, 196,
	0, 215, 0, 649, 0, 652, 642, 729, 730, 0,
	742, 734, 736, 737, 719, -2, 1438, 0, 0, 0,
	590, 1350, 0, 0, 1254, 0, 668, 669, 1141, 1134,
	0, 1119, 1120, 1138, 1273, 1275, 0, 0, 0, 0,
	1039, 1041, 1042, 84, 0, 1398, 1159, 0, 1475, 1476,
	1503, 1501, 1008, 1015, 0, 91, 444, 437, 1438, 0,
	0, 0, 722, 723, 724, 725, 726, 727, 728, 580,
	1440, 144, 145, 510, 511, 512, 138, 0, 1192, 1250,
	1135, 0, 0, 0, 0, 1131, 1132, 0, 1288, 0,
	1294, 0, 1299, 0, 999, 1000, 1400, 0, 0, 654,
	0, 656, 0, -2, 432, 445, 0, 190, 216, 217,
	0, 0, 220, 221, 222, 213, 214, 134, 0, 0,
	743, 0, 1441, 1442, 141, 0, 0, 1126, 1127, 1128,
	1129, 1130, 0, 0, 0, 1160, 1139, 655, 0, 0,
	387, 0, 665, 433, 434, 0, 440, 441, 442, 443,
	218, 219, 677, 0, 0, 587, 1351, 0, 1289, 0,
	1295, 0, 1300, 0, 657, 658, 666, 0, 435, 0,
	436, 0, 0, 0, 646, 0, 677, 1439, 1136, 0,
	0, 1158, 0, 667, 663, 446, 448, 449, 0, 0,
	447, 678, 647, 1290, 1296, 0, 450, 451, 452, 659,
	660, 661, 662,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 682,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:640
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:685
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:702
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:712
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:716
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:728
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:747
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:763
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:892
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:964
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:968
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:992
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1002
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1012
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1022
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1035
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1047
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1057
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1061
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1065
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1069
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1075
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1079
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1083
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1093
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1099
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1103
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1109
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1113
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1117
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1141
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1145
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1149
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1168
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1173
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1178
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1187
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1191
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1222
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1227
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1233
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1253
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1259
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1275
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1289
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1294
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1299
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1304
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1311
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1318
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1329
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1340
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1346
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1350
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1354
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1386
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1396
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1412
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1416
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1422
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1432
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1437
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1446
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1469
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1478
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1564
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1570
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1586
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1590
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1594
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1600
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1604
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1618
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1630
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1635
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1640
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1646
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Armscii8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = ASCIIStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Big5Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = UBinaryStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp1250Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp1251Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp1256Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp1257Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Cp850Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Cp852Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Cp866Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Cp932Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Dec8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = EucjpmsStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = EuckrStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Gb18030Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Gb2312Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = GbkStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Geostd8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = GreekStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = HebrewStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Hp8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Keybcs2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Koi8rStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Koi8uStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Latin1Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Latin2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Latin5Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Latin7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = MacceStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = MacromanStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = SjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Swe7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Tis620Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Ucs2Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = UjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf16Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf16leStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Utf32Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = Utf8mb4Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = Utf8Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1968
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1972
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1978
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1982
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1997
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2001
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2250
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2279
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2289
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2384
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2393
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2399
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2438
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2470
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = yyDollar[2].str
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = "key"
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2537
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2547
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2551
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2557
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2561
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2567
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2571
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2577
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2599
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2614
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2634
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2643
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2655
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2677
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2709
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2718
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2724
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2738
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2932
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2950
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2954
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2967
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2979
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2985
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3127
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3161
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3165
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3169
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3173
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3394
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3537
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3653
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3662
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3670
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3679
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3686
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3698
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3707
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3722
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3736
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3740
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3746
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3752
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3758
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3768
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3772
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3778
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3784
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3790
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3796
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3802
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3806
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3820
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3826
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3832
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3836
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3840
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3846
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3850
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3855
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3859
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3864
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3868
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3874
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3878
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3882
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3886
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3890
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3894
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3898
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3902
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3906
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3910
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3914
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3918
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3922
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3926
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3930
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3934
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3938
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3942
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3946
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3950
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3954
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3958
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3963
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3977
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3992
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3996
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4001
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4006
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4011
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4016
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4021
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4027
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4033
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4038
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4044
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4050
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4060
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4065
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4069
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4074
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4079
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4084
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4089
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4095
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4101
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4108
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4115
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4122
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4140
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4146
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4152
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4158
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4164
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4170
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4182
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4204
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4208
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 747:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4259
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4301
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4333
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4417
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4433
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4437
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4516
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4520
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4524
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4528
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4532
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = ""
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = "extended "
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4552
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4568
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4576
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4586
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4590
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4600
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4606
		{
			yyVAL.empty = struct{}{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.empty = struct{}{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.empty = struct{}{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4664
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4668
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4677
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4683
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4687
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4693
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4697
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4701
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4708
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4714
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4718
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4723
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4728
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4734
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4740
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4745
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4749
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4753
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4757
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4761
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4765
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4769
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4774
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4778
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4782
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4786
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.str = yyDollar[1].str
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = yyDollar[1].str
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = yyDollar[1].str
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4806
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4818
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4837
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4841
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4853
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4857
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4863
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4869
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4879
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4885
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4889
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4893
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4897
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4903
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4909
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4913
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4919
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4923
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4927
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4931
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4935
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4939
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4955
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4963
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4967
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4991
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5003
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5021
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5030
		{
			setAllowComments(yylex, true)
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5034
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.strs = nil
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5044
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5050
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5054
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5058
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5063
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = SQLCacheStr
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5084
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5090
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5094
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5104
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5113
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5119
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5123
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5137
		{
			yyVAL.strs = nil
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5145
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5153
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = SQLCacheStr
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = DistinctStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = DistinctStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = StraightJoinHint
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5189
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5199
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5203
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5207
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5211
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5216
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5224
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5236
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5240
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5246
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5252
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5256
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5266
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5270
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5274
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5278
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5284
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5288
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5294
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5298
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5307
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5316
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5322
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5326
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5332
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5336
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5342
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5346
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5350
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5360
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5364
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5377
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5381
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5385
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5389
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5395
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5397
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5401
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5407
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5409
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5412
		{
			yyVAL.empty = struct{}{}
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.empty = struct{}{}
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5417
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5425
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5438
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5442
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5446
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5452
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5458
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5462
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5466
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5470
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5476
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5480
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5490
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5504
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5510
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5519
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5525
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5535
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5539
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5543
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5547
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5552
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5556
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5560
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5564
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5597
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5854
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5858
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5864
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5868
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5874
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5878
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5882
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5888
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5892
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5899
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5903
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5907
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5911
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5915
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5921
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5925
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5929
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5933
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5937
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5956
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5962
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5966
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5975
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5980
		{
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5989
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5995
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5999
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6011
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6017
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6021
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6027
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6031
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6037
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6041
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6053
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6059
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6063
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6069
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6075
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6085
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6095
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6099
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6106
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6110
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6114
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6118
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6124
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6128
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6132
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6136
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6140
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6144
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6148
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6154
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6158
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6162
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6169
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6175
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6741
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6749
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6753
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6757
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6761
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6765
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6769
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6773
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6777
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6781
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6785
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6789
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6795
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6799
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6803
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6807
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6811
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6815
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6819
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6823
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6827
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6849
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6882
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6886
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6890
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6894
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6898
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6912
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6922
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6926
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6932
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6936
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6940
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6954
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6958
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6962
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7014
		{
			yyVAL.str = string("")
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7018
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7024
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7028
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7034
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7049
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7053
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7057
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7061
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7067
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7071
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7086
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7090
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7100
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7109
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7115
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7121
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7125
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7134
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7143
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7149
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7155
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7159
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7165
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7170
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7174
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7178
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7187
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7193
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7197
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7201
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7210
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7214
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7218
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7222
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7232
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7236
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7240
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7244
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7250
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7254
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7258
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7262
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7267
		{
			yyVAL.str = ""
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7271
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7275
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7279
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7284
		{
			yyVAL.str = ""
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7288
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7294
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7303
		{
			yyVAL.str = ""
		}
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7307
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7312
		{
			yyVAL.str = "cascaded"
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7329
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7333
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7339
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7343
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7347
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7351
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7355
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7359
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7369
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7375
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7381
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7387
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7396
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7400
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7405
		{
			yyVAL.str = ""
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7409
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7415
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7419
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7425
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7429
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7433
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7438
		{
			yyVAL.str = ""
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7442
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7446
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7451
		{
			yyVAL.str = ""
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7455
		{
			yyVAL.str = " header"
		}
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7460
		{
			yyVAL.str = ""
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7464
		{
			yyVAL.str = " manifest on"
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7468
		{
			yyVAL.str = " manifest off"
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7473
		{
			yyVAL.str = ""
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7477
		{
			yyVAL.str = " overwrite on"
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7481
		{
			yyVAL.str = " overwrite off"
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7487
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7492
		{
			yyVAL.str = ""
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7496
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7502
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7506
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7512
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7516
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7521
		{
			yyVAL.str = ""
		}
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7525
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7531
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7535
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7541
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7545
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7549
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = ""
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7558
		{
			yyVAL.str = " optionally"
		}
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7571
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7575
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7579
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7583
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7587
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7593
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7597
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7601
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7605
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7614
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7620
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7624
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7630
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7634
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7640
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7644
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7649
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7659
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7663
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7669
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7676
		{
			yyVAL.str = "charset"
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7690
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7694
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7713
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7718
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7723
		{
			yyVAL.empty = struct{}{}
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7725
		{
			yyVAL.empty = struct{}{}
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7727
		{
			yyVAL.empty = struct{}{}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7731
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7740
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7747
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7751
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7757
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7761
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7774
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7778
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7784
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7788
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7795
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8389
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8398
		{
			decNesting(yylex)
		}
	case 2118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8403
		{
			skipToEnd(yylex)
		}
	case 2119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8408
		{
			skipToEnd(yylex)
		}
	case 2120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8412
		{
			skipToEnd(yylex)
		}
	case 2121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8416
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
