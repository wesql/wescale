// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const PAUSE = 57638
const RESUME = 57639
const SCHEMA_MIGRATION = 57640
const VITESS_THROTTLER = 57641
const BEGIN = 57642
const START = 57643
const TRANSACTION = 57644
const COMMIT = 57645
const ROLLBACK = 57646
const SAVEPOINT = 57647
const RELEASE = 57648
const WORK = 57649
const CONSISTENT = 57650
const SNAPSHOT = 57651
const BIT = 57652
const TINYINT = 57653
const SMALLINT = 57654
const MEDIUMINT = 57655
const INT = 57656
const INTEGER = 57657
const BIGINT = 57658
const INTNUM = 57659
const REAL = 57660
const DOUBLE = 57661
const FLOAT_TYPE = 57662
const FLOAT4_TYPE = 57663
const FLOAT8_TYPE = 57664
const DECIMAL_TYPE = 57665
const NUMERIC = 57666
const TIME = 57667
const TIMESTAMP = 57668
const DATETIME = 57669
const YEAR = 57670
const CHAR = 57671
const VARCHAR = 57672
const BOOL = 57673
const CHARACTER = 57674
const VARBINARY = 57675
const NCHAR = 57676
const TEXT = 57677
const TINYTEXT = 57678
const MEDIUMTEXT = 57679
const LONGTEXT = 57680
const BLOB = 57681
const TINYBLOB = 57682
const MEDIUMBLOB = 57683
const LONGBLOB = 57684
const JSON = 57685
const JSON_SCHEMA_VALID = 57686
const JSON_SCHEMA_VALIDATION_REPORT = 57687
const ENUM = 57688
const GEOMETRY = 57689
const POINT = 57690
const LINESTRING = 57691
const POLYGON = 57692
const GEOMCOLLECTION = 57693
const GEOMETRYCOLLECTION = 57694
const MULTIPOINT = 57695
const MULTILINESTRING = 57696
const MULTIPOLYGON = 57697
const ASCII = 57698
const UNICODE = 57699
const NULLX = 57700
const AUTO_INCREMENT = 57701
const APPROXNUM = 57702
const SIGNED = 57703
const UNSIGNED = 57704
const ZEROFILL = 57705
const CODE = 57706
const COLLATION = 57707
const COLUMNS = 57708
const DATABASES = 57709
const ENGINES = 57710
const EVENT = 57711
const EXTENDED = 57712
const FIELDS = 57713
const FULL = 57714
const FUNCTION = 57715
const GTID_EXECUTED = 57716
const KEYSPACES = 57717
const OPEN = 57718
const PLUGINS = 57719
const PRIVILEGES = 57720
const PROCESSLIST = 57721
const SCHEMAS = 57722
const TABLES = 57723
const TRIGGERS = 57724
const USER = 57725
const VGTID_EXECUTED = 57726
const VITESS_KEYSPACES = 57727
const VITESS_METADATA = 57728
const VITESS_MIGRATIONS = 57729
const VITESS_REPLICATION_STATUS = 57730
const VITESS_SHARDS = 57731
const VITESS_TABLETS = 57732
const VITESS_TARGET = 57733
const VSCHEMA = 57734
const VITESS_THROTTLED_APPS = 57735
const WORKLOAD = 57736
const LASTSEENGTID = 57737
const FAILPOINTS = 57738
const DML_JOBS = 57739
const NAMES = 57740
const GLOBAL = 57741
const SESSION = 57742
const ISOLATION = 57743
const LEVEL = 57744
const READ = 57745
const WRITE = 57746
const ONLY = 57747
const REPEATABLE = 57748
const COMMITTED = 57749
const UNCOMMITTED = 57750
const SERIALIZABLE = 57751
const FAST = 57752
const QUICK = 57753
const CHANGED = 57754
const MEDIUM = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const NOW = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const CURRENT_USER = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const DAY = 57767
const DAY_HOUR = 57768
const DAY_MICROSECOND = 57769
const DAY_MINUTE = 57770
const DAY_SECOND = 57771
const HOUR = 57772
const HOUR_MICROSECOND = 57773
const HOUR_MINUTE = 57774
const HOUR_SECOND = 57775
const MICROSECOND = 57776
const MINUTE = 57777
const MINUTE_MICROSECOND = 57778
const MINUTE_SECOND = 57779
const MONTH = 57780
const QUARTER = 57781
const SECOND = 57782
const SECOND_MICROSECOND = 57783
const YEAR_MONTH = 57784
const WEEK = 57785
const REPLACE = 57786
const CONVERT = 57787
const CAST = 57788
const SUBSTR = 57789
const SUBSTRING = 57790
const SEPARATOR = 57791
const TIMESTAMPADD = 57792
const TIMESTAMPDIFF = 57793
const WEIGHT_STRING = 57794
const LTRIM = 57795
const RTRIM = 57796
const TRIM = 57797
const JSON_ARRAY = 57798
const JSON_OBJECT = 57799
const JSON_QUOTE = 57800
const JSON_DEPTH = 57801
const JSON_TYPE = 57802
const JSON_LENGTH = 57803
const JSON_VALID = 57804
const JSON_ARRAY_APPEND = 57805
const JSON_ARRAY_INSERT = 57806
const JSON_INSERT = 57807
const JSON_MERGE = 57808
const JSON_MERGE_PATCH = 57809
const JSON_MERGE_PRESERVE = 57810
const JSON_REMOVE = 57811
const JSON_REPLACE = 57812
const JSON_SET = 57813
const JSON_UNQUOTE = 57814
const COUNT = 57815
const AVG = 57816
const MAX = 57817
const MIN = 57818
const SUM = 57819
const GROUP_CONCAT = 57820
const BIT_AND = 57821
const BIT_OR = 57822
const BIT_XOR = 57823
const STD = 57824
const STDDEV = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const VAR_POP = 57828
const VAR_SAMP = 57829
const VARIANCE = 57830
const REGEXP_INSTR = 57831
const REGEXP_LIKE = 57832
const REGEXP_REPLACE = 57833
const REGEXP_SUBSTR = 57834
const ExtractValue = 57835
const UpdateXML = 57836
const GET_LOCK = 57837
const RELEASE_LOCK = 57838
const RELEASE_ALL_LOCKS = 57839
const IS_FREE_LOCK = 57840
const IS_USED_LOCK = 57841
const LOCATE = 57842
const POSITION = 57843
const MATCH = 57844
const AGAINST = 57845
const BOOLEAN = 57846
const LANGUAGE = 57847
const WITH = 57848
const QUERY = 57849
const EXPANSION = 57850
const WITHOUT = 57851
const VALIDATION = 57852
const UNUSED = 57853
const ARRAY = 57854
const BYTE = 57855
const CUME_DIST = 57856
const DESCRIPTION = 57857
const DENSE_RANK = 57858
const EMPTY = 57859
const EXCEPT = 57860
const FIRST_VALUE = 57861
const GROUPING = 57862
const GROUPS = 57863
const JSON_TABLE = 57864
const LAG = 57865
const LAST_VALUE = 57866
const LATERAL = 57867
const LEAD = 57868
const NTH_VALUE = 57869
const NTILE = 57870
const OF = 57871
const OVER = 57872
const PERCENT_RANK = 57873
const RANK = 57874
const RECURSIVE = 57875
const ROW_NUMBER = 57876
const SYSTEM = 57877
const WINDOW = 57878
const ACTIVE = 57879
const ADMIN = 57880
const AUTOEXTEND_SIZE = 57881
const BUCKETS = 57882
const CLONE = 57883
const COLUMN_FORMAT = 57884
const COMPONENT = 57885
const DEFINITION = 57886
const ENFORCED = 57887
const ENGINE_ATTRIBUTE = 57888
const EXCLUDE = 57889
const FOLLOWING = 57890
const GET_MASTER_PUBLIC_KEY = 57891
const HISTOGRAM = 57892
const HISTORY = 57893
const INACTIVE = 57894
const INVISIBLE = 57895
const LOCKED = 57896
const MASTER_COMPRESSION_ALGORITHMS = 57897
const MASTER_PUBLIC_KEY_PATH = 57898
const MASTER_TLS_CIPHERSUITES = 57899
const MASTER_ZSTD_COMPRESSION_LEVEL = 57900
const NESTED = 57901
const NETWORK_NAMESPACE = 57902
const NOWAIT = 57903
const NULLS = 57904
const OJ = 57905
const OLD = 57906
const OPTIONAL = 57907
const ORDINALITY = 57908
const ORGANIZATION = 57909
const OTHERS = 57910
const PARTIAL = 57911
const PATH = 57912
const PERSIST = 57913
const PERSIST_ONLY = 57914
const PRECEDING = 57915
const PRIVILEGE_CHECKS_USER = 57916
const PROCESS = 57917
const RANDOM = 57918
const REFERENCE = 57919
const REQUIRE_ROW_FORMAT = 57920
const RESOURCE = 57921
const RESPECT = 57922
const RESTART = 57923
const RETAIN = 57924
const REUSE = 57925
const ROLE = 57926
const SECONDARY = 57927
const SECONDARY_ENGINE = 57928
const SECONDARY_ENGINE_ATTRIBUTE = 57929
const SECONDARY_LOAD = 57930
const SECONDARY_UNLOAD = 57931
const SIMPLE = 57932
const SKIP = 57933
const SRID = 57934
const THREAD_PRIORITY = 57935
const TIES = 57936
const UNBOUNDED = 57937
const VCPU = 57938
const VISIBLE = 57939
const RETURNING = 57940
const FORMAT_BYTES = 57941
const FORMAT_PICO_TIME = 57942
const PS_CURRENT_THREAD_ID = 57943
const PS_THREAD_ID = 57944
const GTID_SUBSET = 57945
const GTID_SUBTRACT = 57946
const WAIT_FOR_EXECUTED_GTID_SET = 57947
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57948
const FORMAT = 57949
const TREE = 57950
const VITESS = 57951
const TRADITIONAL = 57952
const VTEXPLAIN = 57953
const VEXPLAIN = 57954
const PLAN = 57955
const LOCAL = 57956
const LOW_PRIORITY = 57957
const KILL = 57958
const USERS = 57959
const NO_WRITE_TO_BINLOG = 57960
const LOGS = 57961
const ERROR = 57962
const GENERAL = 57963
const HOSTS = 57964
const OPTIMIZER_COSTS = 57965
const USER_RESOURCES = 57966
const SLOW = 57967
const CHANNEL = 57968
const RELAY = 57969
const EXPORT = 57970
const CURRENT = 57971
const ROW = 57972
const ROWS = 57973
const AVG_ROW_LENGTH = 57974
const CONNECTION = 57975
const CHECKSUM = 57976
const DELAY_KEY_WRITE = 57977
const ENCRYPTION = 57978
const ENGINE = 57979
const INSERT_METHOD = 57980
const MAX_ROWS = 57981
const MIN_ROWS = 57982
const PACK_KEYS = 57983
const PASSWORD = 57984
const FIXED = 57985
const DYNAMIC = 57986
const COMPRESSED = 57987
const REDUNDANT = 57988
const COMPACT = 57989
const ROW_FORMAT = 57990
const STATS_AUTO_RECALC = 57991
const STATS_PERSISTENT = 57992
const STATS_SAMPLE_PAGES = 57993
const STORAGE = 57994
const MEMORY = 57995
const DISK = 57996
const PARTITIONS = 57997
const LINEAR = 57998
const RANGE = 57999
const LIST = 58000
const SUBPARTITION = 58001
const SUBPARTITIONS = 58002
const HASH = 58003

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 53,
	1, 162,
	679, 162,
	-2, 170,
	-1, 54,
	135, 170,
	176, 170,
	349, 170,
	-2, 524,
	-1, 64,
	36, 806,
	240, 806,
	251, 806,
	286, 820,
	287, 820,
	-2, 808,
	-1, 69,
	242, 844,
	-2, 842,
	-1, 127,
	239, 1507,
	-2, 136,
	-1, 129,
	1, 163,
	679, 163,
	-2, 170,
	-1, 140,
	136, 410,
	245, 410,
	-2, 513,
	-1, 159,
	135, 170,
	176, 170,
	349, 170,
	-2, 533,
	-1, 838,
	87, 1524,
	-2, 1369,
	-1, 839,
	87, 1525,
	221, 1529,
	-2, 1370,
	-1, 840,
	221, 1528,
	-2, 43,
	-1, 919,
	60, 920,
	-2, 935,
	-1, 1007,
	250, 44,
	255, 44,
	-2, 421,
	-1, 1093,
	1, 581,
	679, 581,
	-2, 170,
	-1, 1406,
	221, 1529,
	-2, 1370,
	-1, 1554,
	60, 921,
	-2, 940,
	-1, 1555,
	60, 922,
	-2, 941,
	-1, 1606,
	135, 170,
	176, 170,
	349, 170,
	-2, 460,
	-1, 1689,
	136, 410,
	245, 410,
	-2, 513,
	-1, 1698,
	250, 45,
	255, 45,
	-2, 422,
	-1, 2079,
	221, 1533,
	-2, 1527,
	-1, 2080,
	221, 1529,
	-2, 1525,
	-1, 2179,
	135, 170,
	176, 170,
	349, 170,
	-2, 461,
	-1, 2186,
	26, 191,
	-2, 193,
	-1, 2576,
	78, 99,
	88, 99,
	-2, 999,
	-1, 2645,
	654, 718,
	-2, 692,
	-1, 2815,
	50, 1475,
	-2, 1469,
	-1, 3471,
	654, 718,
	-2, 706,
	-1, 3559,
	90, 650,
	95, 650,
	105, 650,
	178, 650,
	179, 650,
	180, 650,
	181, 650,
	182, 650,
	183, 650,
	184, 650,
	185, 650,
	186, 650,
	187, 650,
	188, 650,
	189, 650,
	190, 650,
	191, 650,
	192, 650,
	193, 650,
	194, 650,
	195, 650,
	196, 650,
	197, 650,
	198, 650,
	199, 650,
	200, 650,
	201, 650,
	202, 650,
	203, 650,
	204, 650,
	205, 650,
	206, 650,
	207, 650,
	208, 650,
	209, 650,
	210, 650,
	211, 650,
	212, 650,
	213, 650,
	214, 650,
	215, 650,
	216, 650,
	217, 650,
	218, 650,
	219, 650,
	-2, 1892,
}

const yyPrivate = 57344

const yyLast = 48762

var yyAct = [...]int{
	1562, 3630, 839, 849, 3452, 3641, 3220, 3599, 3536, 3218,
	3600, 3557, 842, 712, 3046, 3189, 2127, 1609, 2176, 3502,
	2965, 3525, 2108, 2867, 2874, 3436, 1892, 3384, 2916, 5,
	2925, 2930, 3434, 2927, 2926, 2924, 2929, 2928, 2828, 3176,
	2831, 1164, 3424, 2476, 3248, 808, 2510, 2882, 43, 2110,
	913, 2549, 2774, 3219, 691, 2944, 694, 2829, 2250, 200,
	2832, 2945, 200, 804, 3085, 2709, 3253, 935, 671, 2131,
	722, 803, 3079, 677, 2147, 802, 2947, 3105, 809, 1569,
	2150, 2816, 2536, 2070, 200, 692, 2826, 3071, 2610, 2971,
	2238, 1667, 2213, 2218, 690, 2642, 2611, 2693, 2612, 200,
	2164, 2281, 936, 1039, 915, 968, 1166, 168, 2561, 2542,
	1556, 2152, 44, 841, 1946, 2075, 2528, 2151, 2041, 2512,
	1961, 1900, 2682, 1696, 42, 154, 677, 200, 2237, 677,
	2259, 2067, 2139, 917, 2220, 920, 1138, 2298, 1942, 1015,
	2603, 997, 1002, 1598, 1536, 1578, 106, 1109, 107, 1714,
	2578, 102, 2154, 704, 938, 1418, 1965, 1827, 1345, 1330,
	976, 1703, 1005, 1919, 1832, 1008, 2040, 1795, 2235, 972,
	977, 1003, 1004, 2209, 1597, 953, 1583, 1823, 955, 926,
	2037, 2132, 699, 2076, 1402, 2210, 1378, 923, 1841, 1974,
	87, 1891, 1155, 1660, 1162, 109, 172, 132, 130, 131,
	1088, 1688, 922, 101, 137, 138, 948, 95, 924, 1422,
	698, 3461, 2635, 100, 921, 108, 3631, 86, 2252, 2253,
	2254, 3487, 3177, 2913, 2252, 2665, 2664, 2296, 2633, 1346,
	660, 3169, 3583, 97, 943, 947, 616, 2701, 97, 1780,
	2702, 858, 859, 860, 97, 3132, 621, 3488, 3482, 3483,
	133, 1426, 1922, 929, 2935, 681, 139, 1346, 121, 1907,
	1041, 2, 666, 1906, 1905, 1904, 969, 1044, 1903, 1902,
	3223, 995, 1875, 1058, 1059, 1060, 3223, 1063, 1064, 1065,
	1066, 1019, 1873, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	963, 962, 914, 1052, 1018, 916, 930, 113, 114, 115,
	2933, 118, 620, 2364, 127, 994, 937, 196, 684, 1341,
	610, 3578, 685, 1045, 1048, 1049, 133, 993, 992, 991,
	965, 682, 666, 1563, 679, 680, 2939, 2508, 1357, 858,
	859, 860, 1532, 195, 909, 910, 911, 912, 2105, 2106,
	919, 3483, 2538, 2812, 1061, 1363, 2655, 3222, 3603, 2778,
	981, 2285, 986, 3222, 3587, 3543, 1357, 134, 3585, 156,
	3651, 2935, 3567, 3598, 3051, 3621, 660, 3050, 950, 951,
	177, 2658, 3437, 2283, 2932, 2477, 1912, 975, 3537, 3586,
	3565, 2993, 3380, 3584, 133, 3379, 1043, 1042, 2229, 3571,
	3572, 3612, 961, 806, 807, 2284, 3182, 2884, 2885, 3183,
	3390, 167, 2373, 97, 3566, 3581, 88, 155, 657, 3201,
	686, 2223, 1332, 3190, 3526, 3466, 3533, 2933, 2278, 88,
	3389, 1951, 88, 3200, 3562, 88, 174, 3013, 90, 175,
	961, 806, 807, 1677, 661, 2509, 660, 1352, 2863, 2936,
	1344, 2672, 2673, 2939, 2864, 2865, 2552, 2700, 143, 144,
	166, 165, 194, 3543, 2587, 3266, 639, 2586, 2370, 660,
	2588, 2171, 2172, 1379, 1599, 1352, 1600, 2371, 1884, 1885,
	637, 2553, 2170, 990, 660, 1098, 1099, 2685, 2681, 1128,
	1360, 907, 1361, 1362, 97, 2990, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1388, 1387, 1389, 1390, 97, 1159, 1092,
	97, 2135, 1833, 97, 1116, 906, 2883, 1101, 3453, 1117,
	634, 1116, 1133, 1134, 2636, 1331, 1117, 2599, 2886, 651,
	2189, 2188, 1342, 3082, 1115, 2743, 1114, 1129, 2545, 2546,
	660, 988, 3001, 2999, 646, 660, 1122, 2967, 1145, 2362,
	1147, 619, 1883, 660, 674, 3604, 644, 649, 672, 1087,
	2107, 160, 141, 163, 148, 140, 2936, 161, 162, 2222,
	1887, 678, 2260, 2972, 2683, 178, 3605, 1831, 2365, 2366,
	2368, 2367, 195, 1595, 184, 149, 1540, 2135, 1144, 1146,
	661, 3412, 1833, 3413, 1062, 2643, 2668, 2299, 1541, 152,
	150, 145, 146, 147, 151, 1809, 134, 2960, 1149, 3633,
	2353, 142, 200, 1796, 200, 2961, 1157, 200, 200, 177,
	153, 2304, 1137, 624, 1158, 626, 640, 1135, 663, 1094,
	662, 630, 1130, 628, 632, 641, 633, 1136, 627, 2688,
	638, 1123, 2968, 629, 642, 643, 648, 652, 653, 654,
	650, 647, 655, 622, 623, 645, 1770, 636, 664, 677,
	661, 677, 677, 3579, 617, 990, 1086, 2339, 954, 2340,
	3171, 2341, 1131, 1132, 3170, 174, 2305, 989, 175, 2342,
	1068, 677, 200, 661, 1067, 2969, 1353, 2303, 1351, 1348,
	1349, 1350, 1356, 1358, 1355, 1142, 1354, 2301, 661, 1143,
	1771, 194, 1772, 3364, 2744, 2263, 1347, 2133, 2134, 1148,
	1406, 169, 195, 2777, 1353, 3167, 1351, 1348, 1349, 1350,
	1356, 1358, 1355, 1544, 1354, 3227, 964, 958, 956, 2302,
	1090, 1028, 2148, 998, 1347, 999, 134, 999, 1801, 1037,
	1026, 1141, 1091, 1036, 1035, 1034, 1033, 1032, 996, 177,
	1031, 1030, 3460, 2634, 661, 1025, 1681, 3539, 1038, 661,
	1393, 1393, 2371, 2886, 964, 958, 956, 661, 1414, 3652,
	2692, 1404, 1112, 973, 1118, 1119, 1120, 1121, 1011, 3610,
	1150, 1151, 1153, 2133, 2134, 973, 1396, 1397, 1398, 1399,
	618, 3538, 2592, 855, 1702, 1010, 1410, 164, 855, 2670,
	1160, 1161, 2282, 949, 855, 174, 3645, 1323, 175, 973,
	1824, 1596, 2236, 971, 178, 2689, 2653, 2289, 2288, 1812,
	2637, 1810, 1811, 184, 1815, 1816, 1017, 2906, 1813, 1814,
	3166, 194, 1047, 3083, 1675, 1820, 1089, 1333, 1010, 1055,
	1126, 3570, 1046, 2226, 2667, 1674, 1673, 2705, 2385, 2513,
	2515, 1821, 1406, 1324, 1325, 3539, 2991, 1054, 157, 989,
	1400, 158, 1671, 615, 2601, 2937, 2938, 1782, 1781, 1783,
	1784, 1785, 665, 3130, 3131, 3221, 1837, 614, 2941, 1029,
	3199, 3221, 609, 2227, 3449, 3569, 3119, 91, 1027, 3538,
	2225, 170, 3101, 2680, 2657, 658, 2679, 1800, 182, 2583,
	1530, 2280, 2543, 1701, 1394, 1395, 2548, 2485, 1954, 200,
	659, 1587, 2372, 677, 677, 1495, 1834, 1835, 1838, 1836,
	1103, 129, 1564, 1566, 2228, 1340, 2177, 2695, 200, 1016,
	96, 1424, 2694, 1425, 2224, 2695, 1393, 1390, 2656, 190,
	2694, 932, 957, 96, 178, 2862, 96, 1139, 677, 96,
	169, 200, 1804, 184, 1802, 1803, 1837, 1807, 1808, 1156,
	1547, 1805, 1806, 677, 1551, 1111, 3035, 1548, 1017, 917,
	200, 1097, 3474, 1100, 1040, 1017, 1842, 1428, 1113, 1531,
	957, 1545, 2937, 2938, 171, 176, 173, 179, 180, 181,
	183, 185, 186, 187, 188, 2941, 1834, 1835, 1838, 1836,
	189, 191, 192, 193, 3162, 3095, 2300, 1896, 677, 2327,
	2323, 2325, 2326, 2324, 2330, 2331, 1139, 2514, 2328, 2329,
	1549, 1406, 1550, 106, 125, 107, 3643, 677, 677, 3644,
	677, 3642, 677, 677, 1817, 677, 677, 677, 677, 677,
	677, 122, 1601, 1531, 1125, 1797, 2729, 1798, 1406, 1966,
	1799, 1406, 677, 1406, 200, 1127, 1975, 2626, 3613, 1537,
	1524, 1362, 1501, 1502, 1503, 1504, 1505, 1966, 3262, 2402,
	1976, 1016, 109, 1053, 200, 1361, 1362, 1050, 1016, 3137,
	169, 3136, 1708, 2267, 1010, 1013, 1014, 677, 973, 200,
	1711, 1152, 1007, 1011, 1140, 2279, 1710, 1700, 1678, 1679,
	1680, 1924, 123, 2277, 677, 2275, 200, 1028, 1110, 1743,
	1026, 1694, 1746, 1006, 1748, 1925, 1391, 1392, 1923, 1093,
	3653, 1765, 1546, 1843, 1363, 1565, 200, 1687, 3504, 2272,
	170, 2272, 914, 200, 1568, 3606, 3120, 182, 928, 1706,
	3647, 916, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 677, 3372, 1704, 1704, 1747, 3371, 1592, 1593, 1363,
	3196, 1534, 3197, 1140, 985, 1755, 1756, 987, 2276, 3362,
	2274, 1761, 1762, 3505, 124, 1716, 1705, 1717, 190, 1719,
	1721, 1670, 3212, 1725, 1727, 1729, 1731, 1733, 2311, 2307,
	2309, 2310, 2308, 2314, 2315, 3211, 1563, 2312, 2313, 1973,
	1790, 1697, 1684, 1971, 3442, 1685, 1683, 3654, 3617, 1563,
	1829, 1363, 1972, 3144, 1017, 1383, 1384, 1385, 1386, 1388,
	1387, 1389, 1390, 171, 176, 173, 179, 180, 181, 183,
	185, 186, 187, 188, 2377, 2378, 2379, 1751, 1363, 189,
	191, 192, 193, 3143, 3133, 1914, 1916, 1917, 1676, 3443,
	1788, 1844, 1845, 1385, 1386, 1388, 1387, 1389, 1390, 1360,
	170, 1361, 1362, 2914, 1789, 1849, 990, 182, 982, 1915,
	1846, 1017, 1856, 1857, 1858, 984, 983, 1850, 1825, 1852,
	1853, 1854, 1855, 2902, 2608, 2392, 1859, 858, 859, 860,
	133, 993, 992, 991, 1360, 2391, 1361, 1362, 1871, 1872,
	1777, 1874, 1017, 2731, 2607, 2606, 2232, 2072, 190, 1791,
	1775, 2069, 2710, 1848, 1787, 1774, 1773, 1016, 1763, 1363,
	2071, 1757, 1020, 1010, 988, 677, 677, 1022, 1754, 1753,
	2072, 1023, 1021, 1752, 853, 1723, 1108, 1107, 677, 3127,
	666, 666, 1870, 1869, 2964, 1363, 1360, 200, 1361, 1362,
	2590, 666, 1024, 171, 176, 173, 179, 180, 181, 183,
	185, 186, 187, 188, 1776, 2248, 2247, 2246, 2245, 189,
	191, 192, 193, 1360, 1016, 1361, 1362, 2244, 2243, 1020,
	1010, 1327, 43, 1595, 1022, 43, 1572, 3607, 1023, 1021,
	2439, 2534, 3632, 3594, 1563, 1563, 677, 2712, 1949, 1949,
	1359, 1563, 3462, 3615, 1563, 1016, 1406, 1363, 1359, 1563,
	3398, 1010, 1013, 1014, 3469, 973, 3468, 677, 3446, 1007,
	1011, 2534, 3532, 1406, 1969, 2534, 3512, 3397, 1970, 3549,
	1563, 1927, 1573, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 2534, 3508, 677, 677,
	3495, 1563, 3355, 1920, 1360, 112, 1361, 1362, 3445, 1530,
	989, 1918, 2033, 1928, 3444, 112, 111, 1404, 110, 1363,
	2722, 2721, 2720, 3367, 1363, 2714, 111, 2718, 110, 2713,
	1360, 2711, 1361, 1362, 1967, 3351, 2716, 105, 3180, 3459,
	2065, 3547, 1563, 2140, 2141, 2715, 2429, 3350, 2080, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1365, 3261, 1947, 1947,
	1950, 3259, 2029, 2717, 2719, 2094, 3208, 1880, 1881, 3375,
	1563, 2534, 3363, 103, 87, 1529, 1379, 87, 1921, 1528,
	105, 1897, 1564, 2101, 104, 1527, 1563, 2077, 1531, 3141,
	1363, 200, 1360, 3126, 1361, 1362, 1563, 677, 2441, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389, 1390,
	1363, 103, 1926, 2068, 3180, 1563, 2124, 2534, 3178, 3354,
	200, 2975, 104, 677, 2272, 1563, 3188, 3099, 1563, 2450,
	1563, 2644, 2390, 200, 2973, 2970, 2905, 677, 1953, 1563,
	2080, 200, 2904, 200, 2617, 200, 200, 2895, 2894, 1960,
	1962, 1363, 2079, 2604, 1360, 1363, 1361, 1362, 1526, 1360,
	677, 1361, 1362, 2082, 2083, 2294, 2119, 1379, 2120, 2704,
	1977, 1978, 1979, 1980, 3545, 1563, 2622, 1563, 2186, 2077,
	2293, 1363, 2130, 106, 1991, 107, 2114, 1363, 2158, 2113,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389,
	1390, 2892, 2893, 2078, 106, 2579, 107, 1381, 1382, 1383,
	1384, 1385, 1386, 1388, 1387, 1389, 1390, 2123, 1876, 677,
	2233, 2890, 2891, 2890, 2889, 1360, 1839, 1361, 1362, 1363,
	2081, 2558, 1563, 2084, 2085, 3421, 1563, 2371, 2666, 3393,
	2195, 2196, 2197, 2198, 2079, 1360, 677, 1361, 1362, 1666,
	2647, 105, 677, 2640, 2641, 2185, 2190, 1786, 2191, 2192,
	2193, 2194, 1363, 2181, 2180, 2162, 1563, 929, 2580, 1778,
	2112, 3419, 1563, 3094, 2201, 2202, 2203, 2204, 2582, 2534,
	2533, 3008, 2395, 1563, 1363, 2100, 1360, 2122, 1361, 1362,
	1360, 1768, 1361, 1362, 1764, 2145, 1760, 2125, 2579, 677,
	2184, 1759, 2215, 1758, 677, 1574, 2221, 2261, 677, 677,
	1563, 2143, 1379, 3416, 1563, 1375, 1360, 1376, 1361, 1362,
	2167, 2168, 1360, 2166, 1361, 1362, 963, 962, 1154, 2183,
	2182, 1377, 1391, 1392, 1374, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 200, 1563, 2027, 2258,
	2231, 1952, 1563, 200, 1666, 1665, 1607, 1606, 2038, 2827,
	2530, 2580, 2870, 2550, 1360, 2550, 1361, 1362, 3402, 1563,
	3094, 2371, 200, 200, 2266, 105, 200, 2269, 200, 2270,
	2216, 2212, 1019, 2015, 200, 2273, 2857, 2230, 2234, 2205,
	2207, 2208, 1704, 111, 200, 2242, 2371, 1360, 1359, 1361,
	1362, 200, 2286, 3096, 3500, 1018, 2557, 2871, 3473, 2534,
	2265, 2558, 3055, 2264, 2268, 2892, 1363, 2216, 97, 1360,
	2800, 1361, 1362, 2169, 2395, 1363, 2102, 1379, 2287, 2384,
	200, 2873, 2038, 2395, 2450, 2558, 2426, 3094, 2425, 677,
	2290, 2272, 1363, 2272, 2291, 2292, 2255, 2138, 1567, 2868,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389,
	1390, 2558, 1359, 3145, 2103, 2297, 2884, 2885, 1952, 1898,
	1882, 1363, 1819, 2869, 1594, 1363, 1001, 1000, 3575, 125,
	2007, 1996, 1997, 1998, 1999, 2009, 2000, 2001, 2002, 2014,
	2010, 2003, 2004, 2011, 2012, 2013, 2005, 2006, 2008, 2917,
	3070, 1563, 3515, 3386, 2388, 1406, 2875, 2080, 2393, 3063,
	1563, 2396, 1570, 2397, 3146, 3147, 3148, 1363, 2404, 3352,
	3273, 3161, 2406, 2407, 2408, 2966, 3060, 1563, 2399, 2381,
	3158, 2383, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2355, 2356, 1363, 2351, 2389, 2358, 3139, 2345,
	3018, 1360, 1920, 1361, 1362, 3114, 2359, 97, 2614, 3065,
	1360, 2382, 1361, 1362, 3017, 1668, 2387, 2214, 2430, 2431,
	2432, 2433, 2434, 2962, 2436, 2883, 2919, 1360, 2438, 1361,
	1362, 2915, 2443, 2444, 2648, 2445, 2211, 2886, 2448, 1739,
	2449, 2206, 2361, 2200, 2452, 2199, 1793, 1699, 2456, 1695,
	1092, 2398, 2461, 2462, 2463, 2464, 1360, 2369, 1361, 1362,
	1360, 2079, 1361, 1362, 1662, 2475, 126, 2478, 2479, 3149,
	3106, 3107, 3387, 1363, 2229, 2481, 2483, 1921, 3058, 1563,
	2613, 1363, 2486, 2487, 2488, 2489, 2490, 2380, 1363, 2117,
	1740, 1741, 1742, 2497, 2498, 3627, 2499, 3625, 1878, 2502,
	2504, 2124, 1360, 2506, 1361, 1362, 200, 3601, 3481, 3407,
	3109, 2911, 2078, 2518, 200, 1379, 3150, 3151, 3152, 1949,
	1363, 2401, 1735, 3477, 677, 2910, 2909, 2827, 2614, 1360,
	1363, 1361, 1362, 2627, 2346, 677, 3388, 3112, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389, 1390, 2849,
	2129, 1363, 3111, 2846, 2850, 1363, 2872, 3023, 1563, 200,
	1879, 2517, 1363, 2847, 200, 3006, 1563, 2845, 2848, 1736,
	1737, 1738, 2505, 1563, 2554, 1571, 3100, 2121, 2435, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1388, 1387, 1389, 1390,
	2805, 2804, 1363, 43, 2851, 3441, 2567, 2568, 3087, 2520,
	2535, 2522, 2572, 2437, 3061, 2574, 3086, 687, 1360, 1363,
	1361, 1362, 2817, 2819, 2503, 1563, 1360, 3252, 1361, 1362,
	3254, 2820, 3090, 1360, 2814, 1361, 1362, 1363, 1818, 1947,
	2519, 905, 677, 2888, 2531, 2482, 1563, 2573, 200, 2465,
	1563, 1363, 2597, 2618, 2544, 200, 2457, 1563, 2507, 1975,
	1363, 3243, 933, 3242, 1057, 1360, 1537, 1361, 1362, 677,
	934, 2600, 2602, 1976, 1056, 1360, 677, 1361, 1362, 2984,
	1363, 103, 2613, 2639, 2527, 677, 2698, 1563, 105, 2654,
	2532, 1531, 104, 2577, 2547, 103, 1360, 2593, 1361, 1362,
	1360, 1406, 1361, 1362, 3608, 134, 104, 1360, 1363, 1361,
	1362, 3241, 1363, 1326, 200, 200, 200, 200, 200, 2663,
	2221, 1363, 3457, 2584, 2581, 3092, 1576, 2409, 939, 105,
	2591, 945, 945, 3639, 2594, 3033, 2616, 1360, 2907, 1361,
	1362, 2619, 2620, 2349, 2424, 3359, 2140, 2141, 3554, 2876,
	3458, 2605, 3382, 2880, 1360, 2887, 1361, 1362, 200, 200,
	2879, 2571, 2661, 2126, 2615, 3163, 941, 942, 1561, 1557,
	2338, 1363, 1360, 2337, 1361, 1362, 2623, 1363, 2628, 2629,
	2630, 1363, 2624, 1558, 200, 1363, 1360, 3072, 1361, 1362,
	1363, 1687, 1575, 2660, 2881, 1360, 3029, 1361, 1362, 2877,
	2336, 2649, 2650, 2335, 2878, 677, 2609, 2334, 1663, 1664,
	1560, 1363, 1559, 2333, 2332, 1360, 1363, 1361, 1362, 2322,
	2733, 2734, 2735, 2736, 2737, 2321, 2320, 2659, 2319, 2318,
	2563, 2566, 2567, 2568, 2564, 2317, 2565, 2569, 2316, 2742,
	3106, 3107, 2375, 1360, 110, 1361, 1362, 1360, 3429, 1361,
	1362, 2708, 677, 3428, 2684, 3015, 1360, 3410, 1361, 1362,
	112, 3014, 3260, 2686, 2803, 3011, 1363, 2723, 3258, 2501,
	2687, 111, 2802, 110, 2500, 112, 3257, 2690, 3250, 3159,
	3091, 2707, 105, 3089, 2920, 2738, 111, 111, 110, 2706,
	677, 2256, 1682, 940, 112, 2496, 3249, 3080, 677, 2550,
	2495, 2696, 3629, 3628, 2697, 111, 1360, 3231, 1361, 1362,
	2530, 2745, 1360, 1363, 1361, 1362, 1360, 2427, 1361, 1362,
	1360, 2115, 1361, 1362, 3628, 1360, 2726, 1361, 1362, 677,
	1588, 1580, 3629, 2779, 116, 117, 1363, 2784, 3447, 3125,
	931, 2724, 125, 200, 2781, 3, 1360, 677, 1361, 1362,
	2494, 1360, 1895, 1361, 1362, 10, 1893, 1894, 99, 9,
	8, 677, 2068, 1, 2068, 1406, 2836, 1105, 677, 677,
	1406, 200, 200, 200, 200, 200, 1830, 1329, 1328, 2753,
	3129, 3564, 635, 200, 2854, 2104, 2158, 1535, 2747, 200,
	2807, 200, 3602, 3560, 200, 200, 200, 2493, 3561, 1779,
	2784, 1360, 1769, 1361, 1362, 3191, 2839, 1363, 2039, 2856,
	2783, 920, 3383, 2923, 2158, 2158, 2158, 2158, 2158, 2262,
	2492, 2808, 2780, 3157, 2782, 2219, 2830, 2824, 1009, 159,
	2178, 2830, 2179, 3528, 2158, 120, 966, 2158, 119, 1012,
	200, 2795, 2833, 2763, 2764, 2765, 2766, 2767, 1360, 1124,
	1361, 1362, 2809, 677, 2806, 2257, 1406, 3181, 2598, 2821,
	2822, 677, 2187, 2796, 2797, 2798, 200, 1613, 1611, 2858,
	1612, 1360, 2859, 1361, 1362, 2943, 2799, 1610, 922, 1615,
	200, 2841, 2842, 1614, 2844, 106, 2840, 107, 2852, 2843,
	921, 2491, 2992, 2860, 2428, 3034, 1886, 673, 2570, 1363,
	1829, 667, 200, 197, 1363, 200, 1602, 1581, 3047, 1051,
	2866, 625, 2896, 2295, 2986, 631, 2838, 2922, 1411, 2899,
	2898, 2897, 1877, 1363, 2801, 2585, 960, 2900, 2901, 952,
	2116, 2521, 959, 3360, 3003, 3004, 3005, 2950, 3007, 3009,
	2835, 2951, 1360, 3084, 1361, 1362, 1363, 2725, 2221, 2813,
	2815, 2942, 3016, 2537, 1363, 2818, 2921, 3020, 3021, 3022,
	3024, 3025, 3026, 3027, 2811, 2957, 3028, 3440, 3030, 3031,
	3032, 3251, 3513, 3036, 3037, 3038, 3039, 3040, 3041, 3042,
	3043, 3044, 3045, 2480, 2974, 677, 2976, 2977, 2474, 2595,
	2980, 3052, 1363, 1577, 3056, 3054, 3057, 3059, 2979, 3062,
	3064, 2988, 3066, 3067, 3068, 3069, 2755, 2473, 2757, 2987,
	3075, 2400, 2994, 2995, 200, 2996, 1964, 2997, 2998, 1401,
	3000, 2155, 3002, 3226, 2768, 2769, 2770, 2771, 3049, 1913,
	2472, 696, 695, 693, 1360, 3053, 1361, 1362, 2471, 1360,
	2523, 1361, 1362, 2551, 1366, 3097, 3098, 843, 2511, 3102,
	1363, 1589, 2562, 2560, 2982, 2983, 2559, 2347, 1360, 2163,
	1361, 1362, 3108, 3104, 3556, 2157, 2153, 2529, 3078, 1363,
	200, 794, 793, 705, 1363, 697, 2470, 689, 1363, 792,
	791, 1360, 1363, 1361, 1362, 3122, 1363, 2949, 3540, 1360,
	1363, 1361, 1362, 2669, 3076, 3073, 3074, 2963, 2671, 200,
	1363, 3103, 2596, 2959, 3081, 1363, 1364, 3088, 2563, 2566,
	2567, 2568, 2564, 2158, 2565, 2569, 1343, 1553, 683, 200,
	3117, 3118, 200, 200, 200, 3093, 1363, 1360, 980, 1361,
	1362, 3110, 677, 677, 2469, 1419, 2989, 3464, 2374, 3012,
	1552, 3115, 1363, 3113, 1994, 1995, 3164, 3165, 3116, 1363,
	3471, 3123, 2950, 2468, 2931, 3179, 2951, 3124, 2467, 3175,
	1363, 2912, 2466, 2645, 2249, 1363, 2460, 72, 47, 3140,
	2459, 3142, 3435, 3501, 2458, 3185, 3186, 790, 1363, 677,
	677, 677, 677, 1363, 2455, 1360, 787, 1361, 1362, 2454,
	3228, 3229, 1363, 3230, 3134, 3135, 2775, 2776, 3484, 3485,
	3198, 786, 3486, 3202, 1360, 2022, 1361, 1362, 1339, 1360,
	2453, 1361, 1362, 1360, 1336, 1361, 1362, 1360, 3577, 1361,
	1362, 1360, 1888, 1361, 1362, 1360, 2451, 1361, 1362, 98,
	3213, 38, 37, 2447, 36, 1360, 35, 1361, 1362, 34,
	1360, 28, 1361, 1362, 2446, 3217, 27, 3168, 3187, 2442,
	26, 3172, 3173, 3174, 25, 24, 21, 3225, 20, 31,
	23, 1360, 2440, 1361, 1362, 3232, 22, 2405, 19, 18,
	2934, 3597, 3638, 128, 56, 3203, 2394, 1360, 53, 1361,
	1362, 51, 136, 135, 1360, 54, 1361, 1362, 200, 50,
	3207, 1095, 48, 33, 32, 1360, 17, 1361, 1362, 16,
	1360, 15, 1361, 1362, 1561, 1557, 14, 1406, 3246, 13,
	12, 3224, 677, 1360, 677, 1361, 1362, 11, 1360, 1558,
	1361, 1362, 7, 6, 41, 40, 30, 1360, 1949, 1361,
	1362, 39, 29, 4, 2632, 3267, 2251, 0, 0, 0,
	0, 0, 0, 0, 1554, 1555, 1560, 0, 1559, 0,
	0, 3269, 0, 0, 43, 0, 0, 0, 1579, 3256,
	3255, 3247, 3263, 0, 3271, 0, 0, 3265, 2830, 0,
	0, 0, 0, 0, 677, 0, 0, 3276, 3277, 0,
	0, 0, 0, 0, 0, 2833, 3374, 200, 3361, 2833,
	677, 0, 3279, 0, 0, 3381, 0, 1669, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3391, 3392, 0, 3394, 854,
	3395, 3396, 89, 0, 3357, 3399, 3400, 3401, 3358, 3403,
	3406, 0, 0, 0, 3373, 3405, 3377, 1949, 1947, 3275,
	0, 1538, 3385, 3356, 0, 3415, 3417, 3418, 3420, 3422,
	3423, 3425, 3378, 677, 0, 0, 3365, 677, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3404, 3368, 3369, 3370, 677, 3409, 0, 3455,
	0, 3411, 0, 0, 0, 3414, 0, 3430, 3431, 0,
	3451, 612, 3433, 3432, 0, 0, 0, 918, 0, 89,
	0, 0, 0, 0, 0, 0, 0, 3448, 0, 0,
	0, 0, 0, 908, 0, 0, 0, 0, 918, 1840,
	0, 0, 0, 0, 0, 0, 0, 3454, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 1947, 3408, 3450,
	0, 0, 0, 0, 0, 2833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 677, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3456,
	0, 200, 3215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 677,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3475, 0, 3480, 0, 0, 0, 3472,
	0, 0, 0, 0, 0, 3470, 0, 0, 3467, 0,
	0, 0, 0, 0, 0, 3496, 0, 0, 43, 0,
	0, 3497, 3498, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 3463, 0, 0, 0, 0, 0, 0,
	1406, 0, 677, 3509, 0, 3490, 0, 0, 3491, 0,
	0, 0, 0, 0, 0, 0, 3499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 677, 677, 0, 3534,
	3535, 0, 0, 0, 0, 3514, 3506, 0, 0, 0,
	3516, 0, 0, 3544, 3546, 3548, 0, 0, 677, 3541,
	3542, 3527, 3519, 3524, 43, 3521, 3520, 3518, 3523, 3522,
	0, 2830, 200, 677, 0, 3385, 3529, 0, 3576, 0,
	0, 0, 3511, 0, 0, 0, 3552, 0, 0, 0,
	0, 0, 3555, 0, 0, 0, 3573, 3563, 3568, 0,
	0, 0, 0, 0, 0, 0, 3582, 0, 0, 0,
	3541, 3542, 0, 3580, 0, 0, 677, 3593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1908, 1909, 1910,
	1911, 0, 0, 3591, 0, 0, 3596, 0, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3614,
	3616, 3618, 3609, 3439, 0, 677, 3611, 677, 1414, 0,
	0, 1949, 0, 0, 0, 0, 3620, 3619, 3626, 0,
	3624, 0, 0, 0, 0, 3622, 1955, 1956, 0, 0,
	3637, 1958, 3634, 945, 945, 1963, 3541, 3542, 3640, 1968,
	0, 0, 0, 0, 3648, 3646, 3649, 3650, 0, 0,
	0, 0, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 0, 0, 0, 1949, 2016, 2017, 2018, 2019,
	2020, 2021, 2023, 3405, 2028, 3656, 2030, 2031, 2032, 0,
	2034, 2035, 2036, 0, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 0, 2066, 0,
	2073, 2074, 945, 0, 945, 945, 945, 945, 945, 3657,
	3658, 1947, 3623, 0, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 0, 2095, 2096, 2097, 2098, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3479, 0, 0, 0, 0,
	0, 0, 0, 3489, 0, 0, 0, 0, 0, 0,
	0, 945, 0, 0, 0, 1947, 3655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2136, 2137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 1102, 0, 0, 1104, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 1163, 1163,
	2217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3595, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 1630, 0, 0, 0, 918, 1403, 1408, 1409,
	0, 1412, 0, 1413, 1415, 1416, 1417, 0, 1420, 1421,
	1423, 1423, 0, 1423, 1427, 1427, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 0, 0, 0, 0, 1494, 0, 1496, 1497, 1498,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	1427, 1427, 1427, 1427, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 1630, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 918, 0, 0, 0, 918, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 0,
	0, 1631, 167, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	175, 0, 0, 0, 2403, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 0, 2410, 2411, 2412, 2413, 1690,
	1691, 166, 165, 194, 0, 0, 0, 0, 0, 1608,
	0, 0, 0, 0, 0, 0, 1644, 1647, 1648, 1649,
	1650, 1651, 1652, 0, 1653, 1654, 1656, 1657, 1655, 1658,
	1659, 1632, 1633, 1634, 1635, 1616, 1617, 1645, 0, 1619,
	1419, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	0, 0, 1629, 1636, 1637, 1638, 1639, 0, 1640, 1641,
	1642, 1643, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 1686, 0, 0,
	0, 0, 160, 1692, 163, 0, 1689, 0, 161, 162,
	134, 0, 156, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 177, 0, 184, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 167, 0, 1579, 0, 0, 0,
	155, 0, 0, 0, 0, 1847, 0, 0, 1163, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 175, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 1691, 166, 165, 194, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 1644, 1647, 1648,
	1649, 1650, 1651, 1652, 0, 1653, 1654, 1656, 1657, 1655,
	1658, 1659, 1632, 1633, 1634, 1635, 1616, 1617, 1645, 0,
	1619, 0, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 0, 169, 1629, 1636, 1637, 1638, 1639, 0, 1640,
	1641, 1642, 1643, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 1692, 163, 0, 1689, 0,
	161, 162, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 676, 164, 0,
	0, 0, 1163, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 89,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1901, 0, 0, 0,
	676, 0, 0, 676, 2703, 0, 0, 0, 0, 157,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 945, 0, 0, 2727, 2728, 0, 0,
	2730, 0, 0, 2732, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 2739, 2740, 2741, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 2746, 0, 0, 2748, 2749,
	2750, 0, 0, 0, 2751, 2752, 0, 0, 2042, 2754,
	0, 0, 2756, 0, 0, 2758, 2759, 2760, 2761, 0,
	190, 0, 0, 2762, 2042, 2042, 2042, 2042, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 2785,
	2786, 2787, 2788, 2789, 2790, 0, 0, 0, 2791, 2792,
	0, 2793, 0, 2794, 0, 171, 176, 173, 179, 180,
	181, 183, 185, 186, 187, 188, 0, 0, 0, 0,
	164, 189, 191, 192, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2855, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 0,
	2146, 0, 2149, 0, 170, 1901, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 190, 0, 856, 0, 979, 0, 844, 857,
	858, 859, 860, 845, 0, 0, 846, 847, 0, 848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 853, 861, 862, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 171, 176, 173,
	179, 180, 181, 183, 185, 186, 187, 188, 0, 0,
	0, 0, 0, 189, 191, 192, 193, 0, 0, 3010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2952, 2953, 0, 3019, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	0, 0, 2306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2954, 0, 0, 0,
	0, 2343, 2344, 0, 0, 2348, 0, 0, 0, 0,
	0, 0, 0, 2352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2354, 0, 0, 0, 0, 97, 0,
	2357, 856, 0, 0, 0, 844, 857, 858, 859, 860,
	845, 0, 0, 846, 847, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2360,
	853, 861, 862, 676, 1322, 676, 676, 0, 0, 0,
	0, 0, 2376, 3160, 0, 0, 2955, 2956, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3184, 2952, 2953, 0,
	0, 2386, 0, 0, 1405, 0, 0, 0, 0, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 0, 0, 0, 3204, 810, 3205, 0, 814, 3206,
	811, 812, 3209, 3210, 0, 813, 0, 0, 0, 0,
	0, 3214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3233, 0, 0, 3234, 0, 3235, 3236,
	0, 3237, 0, 3238, 0, 0, 0, 0, 3239, 0,
	0, 0, 0, 0, 0, 0, 0, 2484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3264, 0, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 3272, 0, 795, 3274, 0, 2516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3278,
	0, 0, 0, 2955, 2956, 0, 918, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2555, 2556, 0,
	0, 0, 0, 0, 0, 0, 2156, 676, 676, 918,
	2575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 0, 0, 2576, 0, 88, 45, 46, 90, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 676, 0, 49,
	79, 80, 0, 77, 81, 0, 0, 0, 1661, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 1672,
	970, 0, 0, 978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3438, 0, 0,
	0, 65, 676, 0, 1698, 0, 0, 2625, 0, 0,
	0, 0, 1707, 97, 0, 1405, 1709, 0, 0, 1712,
	1713, 676, 676, 2652, 676, 0, 676, 676, 0, 676,
	676, 676, 676, 676, 676, 0, 0, 0, 0, 0,
	0, 0, 1405, 1744, 1745, 1405, 676, 1405, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2674, 2675, 2676, 2677, 2678, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 2691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3478, 0, 2699, 0, 676, 0, 0, 0, 0,
	0, 52, 55, 58, 57, 60, 0, 76, 0, 0,
	85, 63, 82, 0, 3492, 0, 0, 3493, 0, 3494,
	0, 0, 0, 0, 0, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 64, 93, 92, 0, 0,
	74, 75, 59, 0, 0, 0, 0, 0, 83, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 67, 0, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3588, 0, 3589, 0, 3590, 0, 0,
	0, 0, 0, 2834, 0, 89, 0, 0, 2156, 2156,
	2156, 2156, 2156, 0, 0, 0, 0, 0, 0, 676,
	676, 0, 0, 0, 0, 0, 0, 0, 2156, 0,
	0, 2156, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3635, 0, 3636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	676, 0, 0, 0, 0, 2940, 0, 0, 0, 2908,
	1405, 0, 0, 0, 0, 2948, 0, 0, 0, 1957,
	0, 676, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 2946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2958,
	0, 0, 676, 676, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2978, 0, 0, 2981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 1165, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 3077, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 2156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3138, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	2239, 2240, 2241, 0, 0, 0, 0, 0, 3153, 0,
	0, 3154, 3155, 3156, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 676, 1707, 0, 0,
	1707, 0, 1707, 0, 0, 0, 0, 0, 2271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 676, 0,
	0, 0, 676, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 3240, 0, 3244, 3245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2834, 0, 89, 0,
	2834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 856, 0, 2072, 0, 0, 857, 0,
	0, 1715, 1715, 676, 1715, 0, 1715, 1715, 1948, 1724,
	1715, 1715, 1715, 1715, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 676, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3465, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 3476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2589, 0, 0, 0, 0, 1165,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3510, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 198, 0, 856, 613, 0,
	0, 0, 857, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 676, 0, 927, 0, 0, 0, 0,
	676, 0, 0, 0, 1707, 1707, 0, 0, 0, 676,
	0, 1959, 946, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 613, 0, 1405, 2662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 1993, 3592, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2128, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 1585, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 1405,
	970, 0, 676, 676, 1405, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 970, 0, 0, 0, 0, 1943, 0,
	0, 0, 1943, 1943, 0, 2903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	1405, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 676,
	613, 0, 0, 613, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 3128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 676, 676, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 2621, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 676, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 0, 2128, 0, 0, 0, 0, 0, 0,
	2646, 0, 0, 0, 0, 0, 613, 0, 0, 2651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 1407, 0, 1407,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 676, 676, 0, 0, 613, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 0, 0, 1943, 0, 1860, 1861,
	613, 613, 613, 613, 613, 613, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2773, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 2810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 2837, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 970, 0, 0,
	0, 0, 0, 613, 0, 2128, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 946, 946, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 946, 1828, 946, 946, 946, 946, 946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 0, 0, 1828, 613, 0, 613,
	0, 613, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2128, 2128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3297,
	3299, 3298, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3192, 3193, 3194, 3195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 3268, 0, 3270, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 613,
	0, 0, 613, 0, 2350, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 0, 0, 0, 3303, 0, 0,
	0, 0, 0, 0, 3376, 0, 613, 0, 0, 0,
	0, 0, 3311, 3312, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3426, 0, 0,
	0, 3426, 3426, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 810, 1828, 723, 814, 725, 811, 812, 0,
	721, 724, 813, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 742, 743,
	3296, 3300, 3301, 3302, 3313, 3314, 3315, 3323, 3325, 775,
	3324, 3326, 3327, 3328, 3331, 3332, 3333, 3334, 3329, 3330,
	3335, 3280, 3284, 3281, 3282, 3283, 3295, 3285, 3286, 3287,
	3288, 3289, 3290, 3291, 3292, 3293, 3294, 3336, 3337, 3338,
	3339, 3340, 3341, 3306, 3310, 3309, 3307, 3308, 3304, 3305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2128,
	0, 0, 815, 0, 816, 0, 0, 820, 0, 0,
	0, 822, 821, 0, 823, 789, 788, 0, 0, 817,
	818, 0, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3503, 0, 0, 3342, 3343, 3344,
	3345, 3346, 3347, 3348, 3349, 0, 3507, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 0,
	0, 2631, 0, 0, 0, 0, 0, 0, 0, 0,
	3503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 3048,
	0, 3558, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 613, 613, 613, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 1407, 613, 613, 613,
	613, 613, 0, 0, 0, 0, 0, 0, 0, 2853,
	0, 0, 0, 0, 0, 1766, 0, 613, 0, 0,
	613, 2861, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 0,
	0, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 613, 613,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 1299, 1284, 513,
	0, 1227, 1302, 1196, 1215, 1312, 1218, 1221, 1263, 1175,
	1241, 411, 1212, 1168, 1200, 1170, 1207, 1171, 1198, 1229,
	269, 1195, 1286, 1245, 1301, 362, 266, 1177, 1201, 425,
	1217, 207, 1265, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 1308, 366, 1251,
	0, 492, 396, 0, 0, 0, 1231, 1290, 1239, 1277,
	1226, 1264, 1185, 1250, 1303, 1213, 1260, 1304, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 1766, 0, 3530,
	666, 0, 0, 0, 0, 3531, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 613, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1209, 1257, 1298,
	1210, 1259, 264, 319, 271, 263, 518, 1309, 1289, 1174,
	1238, 1297, 0, 0, 230, 1300, 1233, 0, 1262, 0,
	1315, 1169, 1253, 0, 1172, 1176, 1311, 1293, 1204, 274,
	0, 0, 0, 0, 0, 0, 0, 1230, 1240, 1274,
	1278, 1224, 0, 0, 0, 0, 1407, 0, 0, 1202,
	0, 1249, 0, 0, 0, 1181, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 1184, 0, 1203, 1275, 1766, 1167,
	296, 1178, 397, 256, 1321, 0, 449, 1282, 1292, 1225,
	561, 1296, 1223, 1222, 1269, 1182, 1288, 1216, 361, 1180,
	328, 202, 226, 0, 1214, 407, 457, 469, 1287, 1199,
	1208, 254, 1206, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 1248, 1267, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 1179, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 1194, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1283, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 1272,
	1314, 420, 468, 241, 540, 491, 1317, 1318, 1319, 1320,
	1189, 1193, 1187, 1254, 1188, 1243, 1244, 1190, 1305, 1306,
	1307, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	1276, 1183, 0, 1191, 1192, 1285, 1294, 1295, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1247, 201,
	222, 364, 1310, 450, 287, 586, 551, 545, 208, 224,
	1186, 261, 1197, 1205, 0, 1211, 1219, 1220, 1232, 1234,
	1235, 1236, 1237, 1255, 1256, 1258, 1266, 1268, 1271, 1273,
	1280, 1291, 1313, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 1246, 1316, 549, 1252, 377, 280, 303, 318, 1261,
	550, 497, 228, 462, 289, 252, 1279, 1281, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1242, 1270, 372, 514, 515, 314, 392, 0,
	0, 0, 1299, 1284, 513, 0, 1227, 1302, 1196, 1215,
	1312, 1218, 1221, 1263, 1175, 1241, 411, 1212, 1168, 1200,
	1170, 1207, 1171, 1198, 1229, 269, 1195, 1286, 1245, 1301,
	362, 266, 1177, 1201, 425, 1217, 207, 1265, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1308, 366, 1251, 0, 492, 396, 0, 0,
	0, 1231, 1290, 1239, 1277, 1226, 1264, 1185, 1250, 1303,
	1213, 1260, 1304, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1209, 1257, 1298, 1210, 1259, 264, 319, 271,
	263, 518, 1309, 1289, 1174, 1238, 1297, 0, 0, 230,
	1300, 1233, 0, 1262, 0, 1315, 1169, 1253, 0, 1172,
	1176, 1311, 1293, 1204, 274, 0, 0, 0, 0, 0,
	0, 0, 1230, 1240, 1274, 1278, 1224, 0, 0, 0,
	0, 0, 2862, 0, 1202, 0, 1249, 0, 0, 0,
	1181, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 1184,
	0, 1203, 1275, 0, 1167, 296, 1178, 397, 256, 1321,
	0, 449, 1282, 1292, 1225, 561, 1296, 1223, 1222, 1269,
	1182, 1288, 1216, 361, 1180, 328, 202, 226, 0, 1214,
	407, 457, 469, 1287, 1199, 1208, 254, 1206, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1248, 1267,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 1179, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 1194, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 1283, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 1272, 1314, 420, 468, 241, 540,
	491, 1317, 1318, 1319, 1320, 1189, 1193, 1187, 1254, 1188,
	1243, 1244, 1190, 1305, 1306, 1307, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 1276, 1183, 0, 1191, 1192,
	1285, 1294, 1295, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 1247, 201, 222, 364, 1310, 450, 287,
	586, 551, 545, 208, 224, 1186, 261, 1197, 1205, 0,
	1211, 1219, 1220, 1232, 1234, 1235, 1236, 1237, 1255, 1256,
	1258, 1266, 1268, 1271, 1273, 1280, 1291, 1313, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 1246, 1316, 549, 1252,
	377, 280, 303, 318, 1261, 550, 497, 228, 462, 289,
	252, 1279, 1281, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 1242, 1270, 372,
	514, 515, 314, 392, 0, 0, 0, 1299, 1284, 513,
	0, 1227, 1302, 1196, 1215, 1312, 1218, 1221, 1263, 1175,
	1241, 411, 1212, 1168, 1200, 1170, 1207, 1171, 1198, 1229,
	269, 1195, 1286, 1245, 1301, 362, 266, 1177, 1201, 425,
	1217, 207, 1265, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 1308, 366, 1251,
	0, 492, 396, 0, 0, 0, 1231, 1290, 1239, 1277,
	1226, 1264, 1185, 1250, 1303, 1213, 1260, 1304, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1209, 1257, 1298,
	1210, 1259, 264, 319, 271, 263, 518, 1309, 1289, 1174,
	1238, 1297, 0, 0, 230, 1300, 1233, 0, 1262, 0,
	1315, 1169, 1253, 0, 1172, 1176, 1311, 1293, 1204, 274,
	0, 0, 0, 0, 0, 0, 0, 1230, 1240, 1274,
	1278, 1224, 0, 0, 0, 0, 0, 2823, 0, 1202,
	0, 1249, 0, 0, 0, 1181, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 1184, 0, 1203, 1275, 0, 1167,
	296, 1178, 397, 256, 1321, 0, 449, 1282, 1292, 1225,
	561, 1296, 1223, 1222, 1269, 1182, 1288, 1216, 361, 1180,
	328, 202, 226, 0, 1214, 407, 457, 469, 1287, 1199,
	1208, 254, 1206, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 1248, 1267, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 1179, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 1194, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1283, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 1272,
	1314, 420, 468, 241, 540, 491, 1317, 1318, 1319, 1320,
	1189, 1193, 1187, 1254, 1188, 1243, 1244, 1190, 1305, 1306,
	1307, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	1276, 1183, 0, 1191, 1192, 1285, 1294, 1295, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1247, 201,
	222, 364, 1310, 450, 287, 586, 551, 545, 208, 224,
	1186, 261, 1197, 1205, 0, 1211, 1219, 1220, 1232, 1234,
	1235, 1236, 1237, 1255, 1256, 1258, 1266, 1268, 1271, 1273,
	1280, 1291, 1313, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 1246, 1316, 549, 1252, 377, 280, 303, 318, 1261,
	550, 497, 228, 462, 289, 252, 1279, 1281, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1242, 1270, 372, 514, 515, 314, 392, 0,
	0, 0, 1299, 1284, 513, 0, 1227, 1302, 1196, 1215,
	1312, 1218, 1221, 1263, 1175, 1241, 411, 1212, 1168, 1200,
	1170, 1207, 1171, 1198, 1229, 269, 1195, 1286, 1245, 1301,
	362, 266, 1177, 1201, 425, 1217, 207, 1265, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1308, 366, 1251, 0, 492, 396, 0, 0,
	0, 1231, 1290, 1239, 1277, 1226, 1264, 1185, 1250, 1303,
	1213, 1260, 1304, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1209, 1257, 1298, 1210, 1259, 264, 319, 271,
	263, 518, 1309, 1289, 1174, 1238, 1297, 0, 0, 230,
	1300, 1233, 0, 1262, 0, 1315, 1169, 1253, 0, 1172,
	1176, 1311, 1293, 1204, 274, 0, 0, 0, 0, 0,
	0, 0, 1230, 1240, 1274, 1278, 1224, 0, 0, 0,
	0, 0, 2144, 0, 1202, 0, 1249, 0, 0, 0,
	1181, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 1184,
	0, 1203, 1275, 0, 1167, 296, 1178, 397, 256, 1321,
	0, 449, 1282, 1292, 1225, 561, 1296, 1223, 1222, 1269,
	1182, 1288, 1216, 361, 1180, 328, 202, 226, 0, 1214,
	407, 457, 469, 1287, 1199, 1208, 254, 1206, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1248, 1267,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 1179, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 1194, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 1283, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 1272, 1314, 420, 468, 241, 540,
	491, 1317, 1318, 1319, 1320, 1189, 1193, 1187, 1254, 1188,
	1243, 1244, 1190, 1305, 1306, 1307, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 1276, 1183, 0, 1191, 1192,
	1285, 1294, 1295, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 1247, 201, 222, 364, 1310, 450, 287,
	586, 551, 545, 208, 224, 1186, 261, 1197, 1205, 0,
	1211, 1219, 1220, 1232, 1234, 1235, 1236, 1237, 1255, 1256,
	1258, 1266, 1268, 1271, 1273, 1280, 1291, 1313, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 1246, 1316, 549, 1252,
	377, 280, 303, 318, 1261, 550, 497, 228, 462, 289,
	252, 1279, 1281, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 1242, 1270, 372,
	514, 515, 314, 392, 0, 0, 0, 1299, 1284, 513,
	0, 1227, 1302, 1196, 1215, 1312, 1218, 1221, 1263, 1175,
	1241, 411, 1212, 1168, 1200, 1170, 1207, 1171, 1198, 1229,
	269, 1195, 1286, 1245, 1301, 362, 266, 1177, 1201, 425,
	1217, 207, 1265, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 1308, 366, 1251,
	0, 492, 396, 0, 0, 0, 1231, 1290, 1239, 1277,
	1226, 1264, 1185, 1250, 1303, 1213, 1260, 1304, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1209, 1257, 1298,
	1210, 1259, 264, 319, 271, 263, 518, 1309, 1289, 1174,
	1238, 1297, 0, 0, 230, 1300, 1233, 0, 1262, 0,
	1315, 1169, 1253, 0, 1172, 1176, 1311, 1293, 1204, 274,
	0, 0, 0, 0, 0, 0, 0, 1230, 1240, 1274,
	1278, 1224, 0, 0, 0, 0, 0, 0, 0, 1202,
	0, 1249, 0, 0, 0, 1181, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 1184, 0, 1203, 1275, 0, 1167,
	296, 1178, 397, 256, 1321, 0, 449, 1282, 1292, 1225,
	561, 1296, 1223, 1222, 1269, 1182, 1288, 1216, 361, 1180,
	328, 202, 226, 0, 1214, 407, 457, 469, 1287, 1199,
	1208, 254, 1206, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 1248, 1267, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 1179, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 1194, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1283, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 1272,
	1314, 420, 468, 241, 540, 491, 1317, 1318, 1319, 1320,
	1189, 1193, 1187, 1254, 1188, 1243, 1244, 1190, 1305, 1306,
	1307, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	1276, 1183, 0, 1191, 1192, 1285, 1294, 1295, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1247, 201,
	222, 364, 1310, 450, 287, 586, 551, 545, 208, 224,
	1186, 261, 1197, 1205, 0, 1211, 1219, 1220, 1232, 1234,
	1235, 1236, 1237, 1255, 1256, 1258, 1266, 1268, 1271, 1273,
	1280, 1291, 1313, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 1246, 1316, 549, 1252, 377, 280, 303, 318, 1261,
	550, 497, 228, 462, 289, 252, 1279, 1281, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1242, 1270, 372, 514, 515, 314, 392, 0,
	0, 0, 1299, 1284, 513, 0, 1227, 1302, 1196, 1215,
	1312, 1218, 1221, 1263, 1175, 1241, 411, 1212, 1168, 1200,
	1170, 1207, 1171, 1198, 1229, 269, 1195, 1286, 1245, 1301,
	362, 266, 1177, 1201, 425, 1217, 207, 1265, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1308, 366, 1251, 0, 492, 396, 0, 0,
	0, 1231, 1290, 1239, 1277, 1226, 1264, 1185, 1250, 1303,
	1213, 1260, 1304, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1209, 1257, 1298, 1210, 1259, 264, 319, 271,
	263, 518, 1309, 1289, 1174, 1238, 1297, 0, 0, 230,
	1300, 1233, 0, 1262, 0, 1315, 1169, 1253, 0, 1172,
	1176, 1311, 1293, 1204, 274, 0, 0, 0, 0, 0,
	0, 0, 1230, 1240, 1274, 1278, 1224, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 1249, 0, 0, 0,
	1181, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 1184,
	0, 1203, 1275, 0, 1167, 296, 1178, 397, 256, 1321,
	0, 449, 1282, 1292, 1225, 561, 1296, 1223, 1222, 1269,
	1182, 1288, 1216, 361, 1180, 328, 202, 226, 0, 1214,
	407, 457, 469, 1287, 1199, 1208, 254, 1206, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1248, 1267,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 1179, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 1194, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 1283, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 1272, 1314, 420, 468, 241, 540,
	491, 1317, 1318, 1319, 1320, 1189, 1193, 1187, 1254, 1188,
	1243, 1244, 1190, 1305, 1306, 1307, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 1276, 1183, 0, 1191, 1192,
	1285, 1294, 1295, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 1247, 201, 222, 364, 1310, 450, 287,
	586, 551, 545, 208, 224, 1186, 261, 1197, 1205, 0,
	1211, 1219, 1220, 1232, 1234, 1235, 1236, 1237, 1255, 1256,
	1258, 1266, 1268, 1271, 1273, 1280, 1291, 1313, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 1246, 1316, 549, 1252,
	377, 280, 303, 318, 1261, 550, 497, 228, 462, 289,
	252, 1279, 1281, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 1242, 1270, 372,
	514, 515, 314, 392, 0, 0, 0, 1299, 1284, 513,
	0, 1227, 1302, 1196, 1215, 1312, 1218, 1221, 1263, 1175,
	1241, 411, 1212, 1168, 1200, 1170, 1207, 1171, 1198, 1229,
	269, 1195, 1286, 1245, 1301, 362, 266, 1177, 1201, 425,
	1217, 207, 1265, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 1308, 366, 1251,
	0, 492, 396, 0, 0, 0, 1231, 1290, 1239, 1277,
	1226, 1264, 1185, 1250, 1303, 1213, 1260, 1304, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1209, 1257, 1298,
	1210, 1259, 264, 319, 271, 263, 518, 1309, 1289, 1174,
	1238, 1297, 0, 0, 230, 1300, 1233, 0, 1262, 0,
	1315, 1169, 1253, 0, 1172, 1176, 1311, 1293, 1204, 274,
	0, 0, 0, 0, 0, 0, 0, 1230, 1240, 1274,
	1278, 1224, 0, 0, 0, 0, 0, 0, 0, 1202,
	0, 1249, 0, 0, 0, 1181, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 1184, 0, 1203, 1275, 0, 1167,
	296, 1178, 397, 256, 1321, 0, 449, 1282, 1292, 1225,
	561, 1296, 1223, 1222, 1269, 1182, 1288, 1216, 361, 1180,
	328, 202, 226, 0, 1214, 407, 457, 469, 1287, 1199,
	1208, 254, 1206, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 1248, 1267, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 1179, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 1194, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1283, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 1272,
	1314, 420, 468, 241, 540, 491, 1317, 1318, 1319, 1320,
	1189, 1193, 1187, 1254, 1188, 1243, 1244, 1190, 1305, 1306,
	1307, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	1276, 1183, 0, 1191, 1192, 1285, 1294, 1295, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1247, 201,
	222, 364, 1310, 450, 287, 586, 551, 545, 208, 224,
	1186, 261, 1197, 1205, 0, 1211, 1219, 1220, 1232, 1234,
	1235, 1236, 1237, 1255, 1256, 1258, 1266, 1268, 1271, 1273,
	1280, 1291, 1313, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 1246, 1316, 549, 1252, 377, 280, 303, 318, 1261,
	550, 497, 228, 462, 289, 252, 1279, 1281, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1242, 1270, 372, 514, 515, 314, 392, 0,
	0, 0, 1299, 1284, 513, 0, 1227, 1302, 1196, 1215,
	1312, 1218, 1221, 1263, 1175, 1241, 411, 1212, 1168, 1200,
	1170, 1207, 1171, 1198, 1229, 269, 1195, 1286, 1245, 1301,
	362, 266, 1177, 1201, 425, 1217, 207, 1265, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1308, 366, 1251, 0, 492, 396, 0, 0,
	0, 1231, 1290, 1239, 1277, 1226, 1264, 1185, 1250, 1303,
	1213, 1260, 1304, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1209, 1257, 1298, 1210, 1259, 264, 319, 271,
	263, 518, 1309, 1289, 1174, 1238, 1297, 0, 0, 230,
	1300, 1233, 0, 1262, 0, 1315, 1169, 1253, 0, 1172,
	1176, 1311, 1293, 1204, 274, 0, 0, 0, 0, 0,
	0, 0, 1230, 1240, 1274, 1278, 1224, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 1249, 0, 0, 0,
	1181, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 1184,
	0, 1203, 1275, 0, 1167, 296, 1178, 397, 256, 1321,
	0, 449, 1282, 1292, 1225, 561, 1296, 1223, 1222, 1269,
	1182, 1288, 1216, 361, 1180, 328, 202, 226, 0, 1214,
	407, 457, 469, 1287, 1199, 1208, 254, 1206, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1248, 1267,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 1179, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 1194, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 1283, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 1272, 1314, 420, 468, 241, 540,
	491, 1317, 1318, 1319, 1320, 1189, 1193, 1187, 1254, 1188,
	1243, 1244, 1190, 1305, 1306, 1307, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 1276, 1183, 0, 1191, 1192,
	1285, 1294, 1295, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 1247, 201, 222, 364, 1310, 450, 287,
	586, 551, 545, 208, 224, 1186, 261, 1197, 1205, 0,
	1211, 1219, 1220, 1232, 1234, 1235, 1236, 1237, 1255, 1256,
	1258, 1266, 1268, 1271, 1273, 1280, 1291, 1313, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 1246, 1316, 549, 1252,
	377, 280, 303, 318, 1261, 550, 497, 228, 462, 289,
	252, 1279, 1281, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 1242, 1270, 372,
	514, 515, 314, 392, 0, 0, 0, 0, 0, 513,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 706, 0, 0, 0,
	269, 711, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 718, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 714, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 856,
	840, 806, 807, 844, 857, 858, 859, 860, 845, 0,
	239, 846, 847, 246, 848, 0, 805, 746, 748, 747,
	765, 766, 767, 768, 769, 770, 771, 744, 853, 861,
	862, 0, 264, 319, 271, 263, 518, 0, 0, 2024,
	2025, 2026, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 688, 703, 0, 717, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 700, 701, 0, 0, 0,
	0, 800, 0, 702, 0, 0, 710, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 799, 0, 0,
	561, 0, 0, 797, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 850, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 851, 852, 255, 588, 752, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	760, 761, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	810, 798, 723, 814, 725, 811, 812, 720, 721, 724,
	813, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	801, 709, 708, 0, 716, 0, 742, 743, 745, 749,
	750, 751, 762, 763, 764, 772, 774, 775, 773, 776,
	777, 778, 781, 782, 783, 784, 779, 780, 785, 726,
	730, 727, 728, 729, 741, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 824, 825, 826, 827, 828,
	829, 755, 759, 758, 756, 757, 753, 754, 707, 201,
	222, 364, 0, 450, 287, 586, 551, 545, 208, 224,
	815, 261, 816, 0, 0, 820, 0, 0, 0, 822,
	821, 0, 823, 789, 788, 0, 0, 817, 818, 0,
	819, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 830, 831, 832, 833, 834,
	835, 836, 837, 298, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 855, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 392, 0, 372, 514, 515, 314, 513, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 706, 0, 0, 0, 269,
	711, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 718, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 714, 715, 0,
	0, 0, 0, 0, 0, 2173, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 97, 0, 0, 856, 840,
	806, 807, 844, 857, 858, 859, 860, 845, 0, 239,
	846, 847, 246, 848, 0, 805, 746, 748, 747, 765,
	766, 767, 768, 769, 770, 771, 744, 853, 861, 862,
	2174, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 688, 703, 0, 717, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 701, 0, 0, 0, 0,
	800, 0, 702, 0, 0, 710, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 799, 0, 0, 561,
	0, 0, 797, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	850, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	851, 852, 255, 588, 752, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 760,
	761, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 810,
	798, 723, 814, 725, 811, 812, 720, 721, 724, 813,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 801,
	709, 708, 0, 716, 0, 742, 743, 745, 749, 750,
	751, 762, 763, 764, 772, 774, 775, 773, 776, 777,
	778, 781, 782, 783, 784, 779, 780, 785, 726, 730,
	727, 728, 729, 741, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 824, 825, 826, 827, 828, 829,
	755, 759, 758, 756, 757, 753, 754, 707, 201, 222,
	364, 0, 450, 287, 586, 551, 545, 208, 224, 815,
	261, 816, 0, 0, 820, 0, 0, 0, 822, 821,
	0, 823, 789, 788, 0, 0, 817, 818, 0, 819,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 830, 831, 832, 833, 834, 835,
	836, 837, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 855, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 0, 392, 372, 514, 515, 314, 88, 513, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 706, 0, 0, 0, 269,
	711, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 718, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 714, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 97, 0, 0, 856, 840,
	806, 807, 844, 857, 858, 859, 860, 845, 0, 239,
	846, 847, 246, 848, 0, 805, 746, 748, 747, 765,
	766, 767, 768, 769, 770, 771, 744, 853, 861, 862,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 688, 703, 0, 717, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 701, 0, 0, 0, 0,
	800, 0, 702, 0, 0, 710, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 799, 0, 0, 561,
	0, 0, 797, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	850, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	851, 852, 255, 588, 752, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 760,
	761, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 810,
	798, 723, 814, 725, 811, 812, 720, 721, 724, 813,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 801,
	709, 708, 0, 716, 0, 742, 743, 745, 749, 750,
	751, 762, 763, 764, 772, 774, 775, 773, 776, 777,
	778, 781, 782, 783, 784, 779, 780, 785, 726, 730,
	727, 728, 729, 741, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 824, 825, 826, 827, 828, 829,
	755, 759, 758, 756, 757, 753, 754, 707, 201, 222,
	364, 96, 450, 287, 586, 551, 545, 208, 224, 815,
	261, 816, 0, 0, 820, 0, 0, 0, 822, 821,
	0, 823, 789, 788, 0, 0, 817, 818, 0, 819,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 830, 831, 832, 833, 834, 835,
	836, 837, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 855, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 706, 0, 0, 0, 269, 711,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 718, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 714, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 97, 0, 0, 856, 840, 806,
	807, 844, 857, 858, 859, 860, 845, 0, 239, 846,
	847, 246, 848, 0, 805, 746, 748, 747, 765, 766,
	767, 768, 769, 770, 771, 744, 853, 861, 862, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	688, 703, 0, 717, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 701, 0, 0, 0, 0, 800,
	0, 702, 0, 0, 710, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 799, 0, 0, 561, 0,
	0, 797, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 850,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 3517, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 585, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 580, 214, 502, 533, 240, 479, 0,
	0, 587, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 851,
	852, 255, 588, 752, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 760, 761,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 589, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 572, 573, 574, 575, 581, 579, 576, 577,
	578, 571, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 810, 798,
	723, 814, 725, 811, 812, 720, 721, 724, 813, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 0, 801, 709,
	708, 0, 716, 0, 742, 743, 745, 749, 750, 751,
	762, 763, 764, 772, 774, 775, 773, 776, 777, 778,
	781, 782, 783, 784, 779, 780, 785, 726, 730, 727,
	728, 729, 741, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 824, 825, 826, 827, 828, 829, 755,
	759, 758, 756, 757, 753, 754, 707, 201, 222, 364,
	0, 450, 287, 586, 551, 545, 208, 224, 815, 261,
	816, 0, 0, 820, 0, 0, 0, 822, 821, 0,
	823, 789, 788, 0, 0, 817, 818, 0, 819, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 830, 831, 832, 833, 834, 835, 836,
	837, 298, 534, 565, 532, 582, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 855, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	392, 0, 372, 514, 515, 314, 513, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 706, 0, 0, 0, 269, 711, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 718, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 714, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 97, 0, 1563, 856, 840, 806, 807,
	844, 857, 858, 859, 860, 845, 0, 239, 846, 847,
	246, 848, 0, 805, 746, 748, 747, 765, 766, 767,
	768, 769, 770, 771, 744, 853, 861, 862, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 688,
	703, 0, 717, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 700, 701, 0, 0, 0, 0, 800, 0,
	702, 0, 0, 710, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 799, 0, 0, 561, 0, 0,
	797, 0, 0, 0, 0, 361, 0, 328, 202, 226,
	0, 0, 407, 457, 469, 0, 0, 0, 850, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 585, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 580, 214, 502, 533, 240, 479, 0, 0,
	587, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 851, 852,
	255, 588, 752, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 760, 761, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 589, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 572, 573, 574, 575, 581, 579, 576, 577, 578,
	571, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 810, 798, 723,
	814, 725, 811, 812, 720, 721, 724, 813, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 801, 709, 708,
	0, 716, 0, 742, 743, 745, 749, 750, 751, 762,
	763, 764, 772, 774, 775, 773, 776, 777, 778, 781,
	782, 783, 784, 779, 780, 785, 726, 730, 727, 728,
	729, 741, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 824, 825, 826, 827, 828, 829, 755, 759,
	758, 756, 757, 753, 754, 707, 201, 222, 364, 0,
	450, 287, 586, 551, 545, 208, 224, 815, 261, 816,
	0, 0, 820, 0, 0, 0, 822, 821, 0, 823,
	789, 788, 0, 0, 817, 818, 0, 819, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 830, 831, 832, 833, 834, 835, 836, 837,
	298, 534, 565, 532, 582, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 855, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 706, 0, 0, 0, 269, 711, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 718, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 714, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 856, 840, 806, 807, 844,
	857, 858, 859, 860, 845, 0, 239, 846, 847, 246,
	848, 0, 805, 746, 748, 747, 765, 766, 767, 768,
	769, 770, 771, 744, 853, 861, 862, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 688, 703,
	0, 717, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 700, 701, 944, 0, 0, 0, 800, 0, 702,
	0, 0, 710, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 799, 0, 0, 561, 0, 0, 797,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 850, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 585, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 580, 214, 502, 533, 240, 479, 0, 0, 587,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 851, 852, 255,
	588, 752, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 760, 761, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 589, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	572, 573, 574, 575, 581, 579, 576, 577, 578, 571,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 810, 798, 723, 814,
	725, 811, 812, 720, 721, 724, 813, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 0, 801, 709, 708, 0,
	716, 0, 742, 743, 745, 749, 750, 751, 762, 763,
	764, 772, 774, 775, 773, 776, 777, 778, 781, 782,
	783, 784, 779, 780, 785, 726, 730, 727, 728, 729,
	741, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 824, 825, 826, 827, 828, 829, 755, 759, 758,
	756, 757, 753, 754, 707, 201, 222, 364, 0, 450,
	287, 586, 551, 545, 208, 224, 815, 261, 816, 0,
	0, 820, 0, 0, 0, 822, 821, 0, 823, 789,
	788, 0, 0, 817, 818, 0, 819, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 830, 831, 832, 833, 834, 835, 836, 837, 298,
	534, 565, 532, 582, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 855, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 706, 0, 0, 0, 269, 711, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 718, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 714, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 97, 0, 0, 856, 840, 806, 807, 844, 857,
	858, 859, 860, 845, 0, 239, 846, 847, 246, 848,
	0, 805, 746, 748, 747, 765, 766, 767, 768, 769,
	770, 771, 744, 853, 861, 862, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 688, 703, 0,
	717, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	700, 701, 0, 0, 0, 0, 800, 0, 702, 0,
	0, 710, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 799, 0, 0, 561, 0, 0, 797, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 850, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 851, 852, 255, 588,
	752, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 760, 761, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 810, 798, 723, 814, 725,
	811, 812, 720, 721, 724, 813, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 801, 709, 708, 0, 716,
	0, 742, 743, 745, 749, 750, 751, 762, 763, 764,
	772, 774, 775, 773, 776, 777, 778, 781, 782, 783,
	784, 779, 780, 785, 726, 730, 727, 728, 729, 741,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	824, 825, 826, 827, 828, 829, 755, 759, 758, 756,
	757, 753, 754, 707, 201, 222, 364, 0, 450, 287,
	586, 551, 545, 208, 224, 815, 261, 816, 0, 0,
	820, 0, 0, 0, 822, 821, 0, 823, 789, 788,
	0, 0, 817, 818, 0, 819, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	830, 831, 832, 833, 834, 835, 836, 837, 298, 534,
	565, 532, 582, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 855, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	706, 0, 0, 0, 269, 711, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 718, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 714, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	97, 0, 0, 856, 840, 806, 807, 844, 857, 858,
	859, 860, 845, 0, 239, 846, 847, 246, 848, 0,
	805, 746, 748, 747, 765, 766, 767, 768, 769, 770,
	771, 744, 853, 861, 862, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 0, 717,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 700,
	701, 0, 0, 0, 0, 800, 0, 702, 0, 0,
	710, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 799, 0, 0, 561, 0, 0, 797, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 850, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 585, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 580,
	214, 502, 533, 240, 479, 0, 0, 587, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 851, 852, 255, 588, 752,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 760, 761, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 589, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 572, 573,
	574, 575, 581, 579, 576, 577, 578, 571, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 810, 798, 723, 814, 725, 811,
	812, 720, 721, 724, 813, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 801, 709, 708, 0, 716, 0,
	742, 743, 745, 749, 750, 751, 762, 763, 764, 772,
	774, 775, 773, 776, 777, 778, 781, 782, 783, 784,
	779, 780, 785, 726, 730, 727, 728, 729, 741, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 824,
	825, 826, 827, 828, 829, 755, 759, 758, 756, 757,
	753, 754, 707, 201, 222, 364, 0, 450, 287, 586,
	551, 545, 208, 224, 815, 261, 816, 0, 0, 820,
	0, 0, 0, 822, 821, 0, 823, 789, 788, 0,
	0, 817, 818, 0, 819, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 830,
	831, 832, 833, 834, 835, 836, 837, 298, 534, 565,
	532, 582, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	855, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 392, 0, 372, 514,
	515, 314, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	0, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 518,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1388, 1387, 1389, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 254, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	585, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 580, 214,
	502, 533, 240, 479, 0, 0, 587, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 588, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 589, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 572, 573, 574,
	575, 581, 579, 576, 577, 578, 571, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 586, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 583, 584, 298, 534, 565, 532,
	582, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 1016, 561, 0, 0, 0, 0, 0, 1013, 1014,
	361, 973, 328, 202, 226, 1007, 1011, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 585,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 580, 214, 502,
	533, 240, 479, 0, 0, 587, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 588, 229, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 589, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 572, 573, 574, 575,
	581, 579, 576, 577, 578, 571, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	0, 201, 222, 364, 0, 450, 287, 586, 551, 545,
	208, 224, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 583, 584, 298, 534, 565, 532, 582,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 0, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 392, 0, 372, 514, 515, 314,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 0, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 0, 0, 0,
	1526, 840, 0, 0, 1523, 0, 0, 0, 0, 1521,
	0, 239, 1522, 1520, 246, 1525, 0, 805, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 254, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 585, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 580, 214, 502, 533,
	240, 479, 0, 0, 587, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 588, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	589, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 572, 573, 574, 575, 581,
	579, 576, 577, 578, 571, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 586, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 583, 584, 298, 534, 565, 532, 582, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 0, 392, 372, 514, 515, 314, 88,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 0, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 97, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 254, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 585, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 580, 214, 502, 533,
	240, 479, 0, 0, 587, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 588, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	589, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 572, 573, 574, 575, 581,
	579, 576, 577, 578, 571, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 96, 450, 287, 586, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 2160,
	0, 0, 2159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 583, 584, 298, 534, 565, 532, 582, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 1582, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 1584, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1586,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 1360, 0,
	1361, 1362, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 0, 450, 287, 586, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 0, 392, 372, 514, 515, 314, 88, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 1563, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 96, 450, 287, 586, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 392, 0, 372, 514, 515, 314, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 0, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 97, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	254, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 588, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 586, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 2160, 0, 0,
	2159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	583, 584, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 2111, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 1767, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 2109, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 585, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 580, 214, 502, 533, 240, 479, 0,
	0, 587, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 588, 229, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 589, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 572, 573, 574, 575, 581, 579, 576, 577,
	578, 571, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 0, 201, 222, 364,
	0, 450, 287, 586, 551, 545, 208, 224, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 583,
	584, 298, 534, 565, 532, 582, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 0, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	392, 0, 372, 514, 515, 314, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 0, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 361, 973, 328, 202, 226,
	971, 0, 407, 457, 469, 0, 0, 0, 254, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 585, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 580, 214, 502, 533, 240, 479, 0, 0,
	587, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 588, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 589, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 572, 573, 574, 575, 581, 579, 576, 577, 578,
	571, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 586, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 583, 584,
	298, 534, 565, 532, 582, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 2111, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 1767, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 585, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 580, 214, 502, 533, 240, 479, 0, 0, 587,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	588, 229, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 589, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	572, 573, 574, 575, 581, 579, 576, 577, 578, 571,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 0, 201, 222, 364, 0, 450,
	287, 586, 551, 545, 208, 224, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 583, 584, 298,
	534, 565, 532, 582, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 0, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 0, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 1563, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 0, 0, 0, 561, 0, 0, 0, 3427,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 254, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	586, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1944, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 585, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 580,
	214, 502, 533, 240, 479, 0, 0, 587, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 588, 229,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 589, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 572, 573,
	574, 575, 581, 579, 576, 577, 578, 571, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 0, 201, 222, 364, 0, 450, 287, 586,
	551, 545, 208, 224, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 583, 584, 298, 534, 565,
	532, 582, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	0, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 392, 0, 372, 514,
	515, 314, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	0, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 2540, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 518,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 254, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	585, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 580, 214,
	502, 533, 240, 479, 0, 0, 587, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 588, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 589, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 572, 573, 574,
	575, 581, 579, 576, 577, 578, 571, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 586, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 583, 584, 298, 534, 565, 532,
	582, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 2525, 0, 0,
	0, 0, 239, 0, 0, 246, 2526, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 585,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 580, 214, 502,
	533, 240, 479, 0, 0, 587, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 588, 229, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 589, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 572, 573, 574, 575,
	581, 579, 576, 577, 578, 571, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	0, 201, 222, 364, 0, 450, 287, 586, 551, 545,
	208, 224, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 583, 584, 298, 534, 565, 532, 582,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 0, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 392, 0, 372, 514, 515, 314,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 1605, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 0, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 0, 0, 0,
	1604, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 254, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 585, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 580, 214, 502, 533,
	240, 479, 0, 0, 587, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 588, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	589, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 572, 573, 574, 575, 581,
	579, 576, 577, 578, 571, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 586, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 583, 584, 298, 534, 565, 532, 582, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	668, 669, 670, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 0, 450, 287, 586, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 392, 0, 372, 514, 515, 314, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 0, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 0, 0, 0, 561,
	0, 0, 0, 3551, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	254, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 588, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 586, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	583, 584, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 1767, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 585, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 580, 214, 502, 533, 240, 479, 0,
	0, 587, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 588, 229, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 589, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 572, 573, 574, 575, 581, 579, 576, 577,
	578, 571, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 0, 201, 222, 364,
	0, 450, 287, 586, 551, 545, 208, 224, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 583,
	584, 298, 534, 565, 532, 582, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 0, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	392, 0, 372, 514, 515, 314, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 0, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 0, 0, 0, 561, 0, 0,
	0, 3427, 0, 0, 0, 361, 0, 328, 202, 226,
	0, 0, 407, 457, 469, 0, 0, 0, 254, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 585, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 580, 214, 502, 533, 240, 479, 0, 0,
	587, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 588, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 589, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 572, 573, 574, 575, 581, 579, 576, 577, 578,
	571, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 586, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 583, 584,
	298, 534, 565, 532, 582, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 585, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 580, 214, 502, 533, 240, 479, 0, 0, 587,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	588, 229, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 589, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	572, 573, 574, 575, 581, 579, 576, 577, 578, 571,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 0, 201, 222, 364, 0, 450,
	287, 586, 551, 545, 208, 224, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 583, 584, 298,
	534, 565, 532, 582, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 0, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 0, 0, 0, 2161,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 0, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 0, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 254, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	586, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1586, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 585, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 580,
	214, 502, 533, 240, 479, 0, 0, 587, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 588, 229,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 589, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 572, 573,
	574, 575, 581, 579, 576, 577, 578, 571, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 0, 201, 222, 364, 0, 450, 287, 586,
	551, 545, 208, 224, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 583, 584, 298, 534, 565,
	532, 582, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	0, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 392, 0, 372, 514,
	515, 314, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	0, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 518,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 254, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	585, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 580, 214,
	502, 533, 240, 479, 0, 0, 587, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 588, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 589, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 572, 573, 574,
	575, 581, 579, 576, 577, 578, 571, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 1899, 450, 287, 586, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 583, 584, 298, 534, 565, 532,
	582, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 1890, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 585,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 580, 214, 502,
	533, 240, 479, 0, 0, 587, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 588, 229, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 589, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 572, 573, 574, 575,
	581, 579, 576, 577, 578, 571, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	0, 201, 222, 364, 0, 450, 287, 586, 551, 545,
	208, 224, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 583, 584, 298, 534, 565, 532, 582,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 0, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 392, 0, 372, 514, 515, 314,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1734, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 0, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 254, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 585, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 580, 214, 502, 533,
	240, 479, 0, 0, 587, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 588, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	589, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 572, 573, 574, 575, 581,
	579, 576, 577, 578, 571, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 586, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 583, 584, 298, 534, 565, 532, 582, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1732, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 0, 450, 287, 586, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 298, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 392, 0, 372, 514, 515, 314, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1730, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 0, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	254, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 588, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 586, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	583, 584, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 1728, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 585, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 580, 214, 502, 533, 240, 479, 0,
	0, 587, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 588, 229, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 589, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 572, 573, 574, 575, 581, 579, 576, 577,
	578, 571, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 0, 201, 222, 364,
	0, 450, 287, 586, 551, 545, 208, 224, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 583,
	584, 298, 534, 565, 532, 582, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 0, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	392, 0, 372, 514, 515, 314, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1726, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 0, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 202, 226,
	0, 0, 407, 457, 469, 0, 0, 0, 254, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 585, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 580, 214, 502, 533, 240, 479, 0, 0,
	587, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 588, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 589, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 572, 573, 574, 575, 581, 579, 576, 577, 578,
	571, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 586, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 583, 584,
	298, 534, 565, 532, 582, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 1722,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 585, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 580, 214, 502, 533, 240, 479, 0, 0, 587,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	588, 229, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 589, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	572, 573, 574, 575, 581, 579, 576, 577, 578, 571,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 0, 201, 222, 364, 0, 450,
	287, 586, 551, 545, 208, 224, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 583, 584, 298,
	534, 565, 532, 582, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 0, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1720, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 0, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 0, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 254, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	586, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 1718, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 585, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 580,
	214, 502, 533, 240, 479, 0, 0, 587, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 588, 229,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 589, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 572, 573,
	574, 575, 581, 579, 576, 577, 578, 571, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 0, 201, 222, 364, 0, 450, 287, 586,
	551, 545, 208, 224, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 583, 584, 298, 534, 565,
	532, 582, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	0, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 392, 0, 372, 514,
	515, 314, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	0, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 1693,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 518,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 254, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	585, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 580, 214,
	502, 533, 240, 479, 0, 0, 587, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 588, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 589, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 572, 573, 574,
	575, 581, 579, 576, 577, 578, 571, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 586, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 583, 584, 298, 534, 565, 532,
	582, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 1590, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 585,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 580, 214, 502,
	533, 240, 479, 0, 0, 587, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 588, 229, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 589, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 572, 573, 574, 575,
	581, 579, 576, 577, 578, 571, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	0, 201, 222, 364, 0, 450, 287, 586, 551, 545,
	208, 224, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 583, 584, 298, 534, 565, 532, 582,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 0, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 392, 0, 372, 514, 515, 314,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 207, 0, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 0, 366,
	0, 0, 492, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	249, 323, 206, 408, 493, 285, 0, 97, 0, 0,
	0, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 518, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 0, 449, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 202, 226, 0, 0, 407, 457, 469, 0,
	0, 0, 254, 0, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 0, 0, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 585, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 580, 214, 502, 533,
	240, 479, 0, 0, 587, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 588, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	589, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 572, 573, 574, 575, 581,
	579, 576, 577, 578, 571, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 586, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 583, 584, 298, 534, 565, 532, 582, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1338, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 585, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 580, 214, 502, 533, 240,
	479, 0, 0, 587, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 588, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 589,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 572, 573, 574, 575, 581, 579,
	576, 577, 578, 571, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 0, 450, 287, 586, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 583, 584, 1337, 534, 565, 532, 582, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 392, 0, 372, 514, 515, 314, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 0, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	254, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 585, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 580, 214, 502, 533, 240, 479,
	0, 0, 587, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 588, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 589, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 572, 573, 574, 575, 581, 579, 576,
	577, 578, 571, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 586, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 925, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	583, 584, 298, 534, 565, 532, 582, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 611, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 585, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 580, 214, 502, 533, 240, 479, 0,
	0, 587, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 588, 229, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 589, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 572, 573, 574, 575, 581, 579, 576, 577,
	578, 571, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 0, 201, 222, 364,
	0, 450, 287, 586, 551, 545, 208, 224, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 583,
	584, 298, 534, 565, 532, 582, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 0, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	392, 0, 372, 514, 515, 314, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 0, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 202, 226,
	0, 0, 407, 457, 469, 0, 0, 0, 254, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 585, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 580, 214, 502, 533, 240, 479, 0, 0,
	587, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 588, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 589, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 572, 573, 574, 575, 581, 579, 576, 577, 578,
	571, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 586, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 3559, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 583, 584,
	298, 534, 565, 532, 582, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 585, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 580, 214, 502, 533, 240, 479, 0, 0, 587,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	588, 229, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 589, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	572, 573, 574, 575, 581, 579, 576, 577, 578, 571,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 0, 201, 222, 364, 0, 450,
	287, 586, 551, 545, 208, 224, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 583, 584, 298,
	534, 565, 532, 582, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 0, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 0, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 0, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 254, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 585, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	580, 214, 502, 533, 240, 479, 0, 0, 587, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 588,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 589, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 572,
	573, 574, 575, 581, 579, 576, 577, 578, 571, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	586, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 583, 584, 298, 534,
	565, 532, 582, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 585, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 580,
	214, 502, 533, 240, 479, 0, 0, 587, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 588, 229,
	555, 221, 0, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 589, 235, 236, 238, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	0, 517, 536, 548, 560, 566, 567, 569, 572, 573,
	574, 575, 581, 579, 576, 577, 578, 571, 402, 309,
	490, 331, 369, 0, 0, 420, 468, 241, 540, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 0, 201, 222, 364, 0, 450, 287, 586,
	551, 545, 208, 224, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 583, 584, 298, 534, 565,
	532, 582, 559, 435, 374, 0, 0, 549, 0, 377,
	280, 303, 318, 0, 550, 497, 228, 462, 289, 252,
	0, 0, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 0, 0, 372, 514,
	515, 314,
}

var yyPact = [...]int{
	-1000, -1000, 5386, -1000, -466, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2248, 2442, -1000, -1000, -1000, -1000, 2511, -1000,
	1015, 1979, -1000, 2263, 335, -1000, 48083, 643, -1000, 45407,
	638, 624, 140, -83, 241, 30689, -1000, 239, -1000, 230,
	46745, 249, -1000, -1000, -1000, -1000, -313, 19314, 2186, 117,
	93, 48083, -1000, -1000, -1000, -1000, 2476, 1920, -1000, 420,
	-1000, -1000, -1000, -1000, -1000, -1000, 44738, -1000, 1038, -1000,
	-1000, 2289, 2262, 2517, 779, 2209, -1000, 2413, 1920, -1000,
	19314, 2463, 2332, 18645, 18645, 560, -1000, -1000, 349, -1000,
	-1000, -1000, 2523, 26006, 48083, -1000, 33365, 1028, -1000, 2263,
	-1000, -1000, -1000, 95, -1000, 462, 1839, -1000, 1838, -1000,
	838, 1077, 480, 613, 604, 476, 475, 472, 471, 470,
	469, 468, 464, 488, -1000, 823, 823, -130, -131, 574,
	592, 549, 549, 831, 597, 2228, 2218, -1000, -1000, 823,
	823, 823, 418, 823, 823, 823, 823, 401, 397, 823,
	823, 823, 823, 823, 823, 823, 823, 823, 823, 823,
	823, 823, 823, 823, 823, 823, 427, 2263, 344, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48083,
	245, 48083, -1000, 699, 48083, 48083, -1000, 1241, 1240, -1000,
	-1000, 949, -1000, -1000, 949, 138, 949, 949, 949, 949,
	260, 804, 91, -1000, 251, 386, 236, 336, 932, 309,
	-1000, -1000, 321, 932, 1001, 932, 1688, -1000, 800, 330,
	226, -1000, 949, 949, -1000, -1000, 12599, 171, 12599, 12599,
	-1000, 2270, -1000, -1000, -1000, -1000, -1000, 1289, -1000, -1000,
	-1000, -1000, 2, 595, -1000, -1000, -1000, -1000, 46745, 44069,
	295, -1000, -1000, 52, -1000, -1000, 1760, 1234, 19314, 1348,
	-1000, 1622, 760, -1000, -1000, -1000, -1000, -1000, 681, -1000,
	19983, 19983, 19983, 19983, -1000, -1000, 1781, 43400, 1781, 1781,
	19983, 1781, -1000, 19983, 1781, 1781, 1781, 19314, 1781, 1781,
	1781, 1781, -1000, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, -1000, -1000, -1000, -1000, 1781, 694, 1781, 1781, 1781,
	1781, 1781, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1781, 1781, 1781, 1781, 1781, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21990,
	1445, 1439, 1435, -1000, 16638, 1781, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48083, -1000, 1781, 283,
	46745, 46745, 451, 2413, 1920, -1000, 2476, 2457, 420, 3070,
	1457, 1500, 1306, 1920, 1810, 48083, -1000, 1875, -1000, -1000,
	-1000, -1000, 2113, 1342, 1665, -1000, -1000, -1000, -1000, 2294,
	19314, -1000, -1000, 2506, -1000, 23329, 690, 2505, 42731, -1000,
	560, 560, 1836, 492, 56, -1000, -1000, -1000, -1000, 891,
	30020, -1000, -1000, -1000, -1000, -1000, 1718, 48083, -1000, -1000,
	4080, 1250, -1000, 1977, -1000, 2334, 1716, -1000, 1928, 19314,
	1968, 623, 1250, 606, 605, 594, -1000, -18, -1000, -1000,
	-1000, -1000, -1000, -1000, 823, 823, 823, -1000, 486, 2462,
	335, 4268, -1000, -1000, -1000, 42062, 1962, 1250, -1000, 1960,
	-1000, 960, 658, 689, 689, 1250, -1000, -1000, 47414, 1250,
	959, 953, 1250, 1250, 46745, 46745, -1000, 41393, -1000, 40724,
	40055, 1239, 46745, 39386, 38717, 38048, 37379, 36710, -1000, 2090,
	-1000, 2007, -1000, -1000, -1000, 47414, 1250, 1250, 47414, 46745,
	47414, 48083, 1250, -1000, -1000, 405, -1000, -1000, 1237, 1233,
	1232, 823, 823, 1225, 1663, 1661, 1656, 823, 823, 1222,
	1654, 32027, 1651, 400, 1220, 1219, 1214, 1268, 1629, 207,
	1617, 1218, 1168, 1213, 46745, 1959, 48083, -1000, 323, 820,
	648, 515, 883, 2263, 2183, 1834, 593, 612, 1250, 566,
	566, 46745, -1000, 14624, -1000, 489, -1000, -1000, -1000, -1000,
	1586, 19314, -1000, 961, 932, 932, -1000, -1000, -1000, -1000,
	-1000, -1000, 949, 48083, 961, -1000, -1000, -1000, 932, 949,
	48083, 949, 949, 949, 949, 932, 932, 932, 949, 48083,
	48083, 48083, 48083, 48083, 48083, 48083, 48083, 48083, 12599, 800,
	949, 949, -354, 949, -364, -1000, 1578, -1000, -1000, 2083,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12599, 12599, -1000, -1000, -1000, -1000, -1000, 1832,
	-1000, 227, 57, 248, -1000, 36041, 426, 856, -1000, 426,
	-1000, -1000, -1000, 1831, 35372, -1000, -367, -368, -371, -372,
	-1000, -1000, -1000, -1000, -373, -377, -1000, -1000, -1000, 19314,
	19314, 19314, 19314, -160, -1000, 1126, 19983, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 146, 956, 19983, 19983, 19983, 19983,
	19983, 19983, 19983, 19983, 19983, 19983, 19983, 19983, 19983, 19983,
	19983, -1000, -1000, 28013, 6587, 6587, 760, 760, 760, 760,
	-1000, -89, 1830, 47414, -1000, -1000, -1000, 687, 19314, 19314,
	760, -1000, 1250, 16638, 20652, 18645, 18645, 19314, 902, 1234,
	47414, 19314, -1000, 1306, -1000, -1000, -1000, 1107, -1000, 1031,
	2224, 2224, 2224, 2224, 19314, 19314, 19314, 19314, 19314, 19314,
	19314, 19314, 19314, 19314, 2224, 46745, 46745, 1488, 19314, 19314,
	19314, 19314, 19314, 19314, 15299, 19314, 19314, 19983, 19314, 19314,
	19314, 1306, 19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314,
	19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314,
	19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314, 19314, 1306,
	19314, 1215, 19314, 19314, 18645, 13949, 18645, 18645, 18645, 18645,
	18645, -1000, -1000, -1000, -1000, -1000, 19314, 19314, 19314, 19314,
	19314, 19314, 19314, 19314, 1306, 19314, 19314, 19314, 19314, 19314,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1447, 1538, 1320, 19314, -1000, 1826, -1000, -72, 25337, 19314,
	1549, 1546, 2496, 2011, 46745, -1000, -1000, -1000, 2413, -1000,
	2413, 1447, 2117, 18645, -1000, -1000, 2334, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1671, -1000, 48083, 1810, 2327,
	46745, 2087, 1542, 410, -1000, 19314, 19314, 1809, -1000, 1465,
	48083, -1000, -160, -1000, 34703, -1000, -1000, 11924, 48083, 457,
	48083, -1000, 24668, 34034, 311, -1000, 56, 1785, -1000, 63,
	50, 15968, 750, -1000, -1000, -1000, 574, 21321, 1616, 750,
	152, -1000, -1000, -1000, 1928, -1000, 1928, 1928, 1928, 1928,
	410, 410, 410, 410, -1000, -1000, -1000, -1000, -1000, 1958,
	1956, -1000, 1928, 1928, 1928, 1928, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1954, 1954, 1954, 1949, 1949, 1930, 1930,
	535, -1000, 19314, -1000, -1000, 320, 33365, 2308, 1210, 1627,
	323, 568, 1996, 1250, 1250, 1250, 568, -1000, 1287, 1277,
	1275, -1000, -455, 1808, -1000, -1000, 2461, -1000, -1000, 1165,
	983, 980, 1134, 46745, 272, 430, -1000, 523, -1000, 33365,
	1250, 946, 689, 1250, -1000, 1250, -1000, -1000, -1000, -1000,
	-1000, 1250, -1000, -1000, 1803, -1000, 1805, 1043, 978, 1041,
	976, 1803, -1000, -1000, -95, 1803, -1000, 1803, -1000, 1803,
	-1000, 1803, -1000, 1803, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 868, 240, -209, 46745, 272, 576, -1000,
	575, 28013, -1000, -1000, -1000, 28013, 28013, -1000, -1000, -1000,
	-1000, 1540, 1525, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -442, 48083, -1000, 305, 855, 416, 448, 382,
	48083, 884, 2404, 2401, 2395, 2394, 2392, 2391, 2385, 705,
	2380, 2379, 2373, 2369, 2366, 2339, 2336, 374, 396, 48083,
	48083, 566, 2057, 48083, 2306, 48083, -1000, -1000, -1000, -1000,
	569, 48083, -1000, 325, -1000, -1000, -1000, -1000, -1000, -1000,
	1234, 48083, -1000, -1000, 949, 949, -1000, -1000, 48083, 949,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 949, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48083, -1000, -1000,
	-1000, -1000, 2, 223, -1000, -1000, 46745, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -47, -1000, 80, 48,
	389, -1000, -1000, -1000, -1000, -1000, 2409, -1000, 1234, 934,
	919, -1000, 1781, -1000, -1000, 1115, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 146, 19983, 19983, 19983, 1737, 585, 1975,
	2016, 1493, 1049, 1049, 1085, 1085, 764, 764, 764, 764,
	764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1518,
	-1000, 1781, 47414, 1713, 13949, 1556, 1207, 1306, 2978, -1000,
	1644, -1000, 1644, 1963, 920, -1000, 19314, 1306, 2969, -1000,
	-1000, 1306, 1306, 1306, 19314, -1000, -1000, 19314, 19314, 19314,
	19314, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
	1627, 19314, 1800, 1798, 2492, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1470, 1627, 1627, 1627,
	1627, 1627, 19314, 2188, -1000, -1000, -1000, 1312, 2964, 1386,
	2951, 1627, 1627, -1000, 1627, 2946, 2935, 1306, 1760, 1306,
	1796, -1000, 2928, 1627, 2912, 2891, 2886, 2158, 2876, 2872,
	2868, 1627, 1627, 1627, 2151, 2864, 2860, 2855, 2836, 2778,
	2740, 2732, 2709, 2690, 1627, -162, 1627, 1306, -1000, -1000,
	-1000, -1000, -1000, 2685, 2147, 1306, 1786, 1781, 686, -1000,
	-1000, 1644, 1306, 1306, 1644, 1644, 2593, 2522, 2499, 2452,
	2402, 2397, 1627, 1627, -1000, 1627, 2376, 2371, 2126, 2084,
	1306, -1000, 1320, 48083, -1000, -294, -1000, 24, 774, 1781,
	-1000, 32027, 1306, -1000, -1000, 6243, -1000, 1238, -1000, -1000,
	-1000, 29351, 1795, 2334, -1000, -1000, 1781, 1641, -1000, -1000,
	410, 131, 28682, 725, 725, 165, 1234, 1234, 19314, -1000,
	-1000, -1000, -1000, -1000, -1000, 685, 2473, 423, 1781, -1000,
	1823, 2831, -1000, -1000, -1000, 2325, 22660, -1000, -1000, 1781,
	1781, 48083, 1733, 1640, -1000, 678, -1000, 1292, 1785, 56,
	44, -1000, -1000, -1000, -1000, 1234, -1000, 1260, 460, 704,
	-1000, 559, -1000, -1000, -1000, -1000, 2201, 147, -1000, -1000,
	-1000, 334, 410, -1000, -1000, -1000, -1000, -1000, -1000, 1513,
	1513, -1000, -1000, -1000, -1000, -1000, 1209, -1000, -1000, -1000,
	-1000, 1208, -1000, -1000, 1188, -1000, -1000, 2307, 2046, 320,
	-1000, -1000, 823, 1504, -1000, -1000, 2203, 823, 823, 46745,
	-1000, -1000, 1537, 2308, 305, 48083, 914, 2056, -1000, 1996,
	1996, 1996, 48083, -1000, -1000, -1000, -1000, -1000, -1000, -444,
	75, 437, -1000, -1000, -1000, 4066, 46745, 1615, -1000, 294,
	-1000, 1492, -1000, 46745, -1000, 1611, 1947, 1250, 1250, -1000,
	-1000, -1000, 46745, 1781, -1000, -1000, -1000, -1000, 577, 2247,
	324, -1000, -1000, -181, -1000, -1000, 272, 294, 47414, 1250,
	750, -1000, -1000, -1000, -1000, -1000, -445, 1599, 603, 297,
	361, 48083, 48083, 48083, 48083, 48083, 666, -1000, -1000, 82,
	-1000, -1000, -1000, -1000, 263, -1000, -1000, -1000, -1000, -1000,
	-1000, 263, -1000, -1000, -1000, 81, -1000, -1000, -1000, -1000,
	263, -1000, -1000, -1000, -1000, -1000, -1000, 263, -1000, -1000,
	-1000, -1000, 355, 573, -1000, 48083, 48083, 682, -1000, -1000,
	-1000, -1000, -1000, -1000, 932, -1000, -1000, 932, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2242, 48083, 37, -408, -1000, -403, 19314, -1000, -1000, -1000,
	-1000, 1477, 584, 1975, 19983, 19983, 19983, -1000, -1000, -1000,
	1135, 1135, 28013, -1000, 19314, 18645, -1000, -1000, 19314, 19314,
	896, -1000, 19314, 1155, -1000, 19314, -1000, -1000, -1000, 1320,
	1627, 1627, 1627, 1627, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1824, 19314, 19314, 19314, 1306, 358,
	-1000, -1000, -1000, -1000, -1000, 2486, -1000, 19314, -1000, 28013,
	19314, 19314, 19314, -1000, -1000, -1000, 19314, 19314, -1000, -1000,
	19314, 19314, -1000, 19314, 19314, 19314, -1000, 19314, 19314, 19314,
	19314, -1000, -1000, -1000, -1000, 19314, 19314, 19314, 19314, 19314,
	19314, 19314, 19314, 19314, 19314, -1000, -1000, 33365, 116, -162,
	1215, 116, 1215, -1000, 18645, 13274, -1000, -1000, -1000, -1000,
	-1000, 19314, 19314, 19314, 19314, 19314, 19314, -1000, -1000, -1000,
	19314, 19314, -1000, 19314, -1000, 19314, -1000, -1000, -1000, -1000,
	-1000, 774, -1000, 689, 689, 689, 46745, -1000, -1000, -1000,
	-1000, 1782, -1000, 2439, -1000, 2133, 2132, 2485, 2473, -1000,
	24668, 2334, -1000, -1000, 46745, -271, -1000, 2177, 2164, 725,
	725, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11249, 2413,
	19314, 2050, 47414, 157, -1000, 23999, 46745, 47414, 24668, 24668,
	24668, 24668, 24668, -1000, 2100, 2086, -1000, 2096, 2082, 2127,
	48083, -1000, 1447, 1593, -1000, 19314, 26675, 1758, 24668, -1000,
	-1000, 24668, 48083, 10574, -1000, -1000, 28, 30, -1000, -1000,
	-1000, -1000, 574, -1000, -1000, 1780, 2319, 2191, -1000, -1000,
	-1000, -1000, -1000, 1585, -1000, 1583, 1777, 1563, 1509, 240,
	-1000, 1926, 2238, 823, 823, -1000, 1187, -1000, 1250, 1502,
	1496, -1000, -1000, -1000, 586, -1000, 2301, 48083, 2049, 2048,
	2034, -1000, -453, 1167, 1944, 1867, 19314, 1939, 2454, 1771,
	46745, -1000, -1000, 47414, -1000, 326, -1000, 320, 46745, -1000,
	-1000, -1000, 430, 48083, -1000, 4991, -1000, -1000, -1000, 294,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48083, 317, -1000,
	1936, 1252, -1000, -1000, 1897, -1000, -1000, -1000, -1000, 266,
	404, 1495, 261, 1494, 261, 1481, 261, 261, -1000, 48083,
	674, 2046, 48083, -1000, -1000, -1000, 949, 949, -1000, -1000,
	2235, -1000, 1250, 1627, 19983, 19983, -1000, 760, 333, -138,
	1928, 1928, -1000, 1928, 1930, -1000, 1928, 211, 1928, 210,
	1928, -1000, -1000, 1306, 1306, 1320, -1000, 2077, 1708, -1000,
	1234, 19314, 2367, -1000, -1000, -1000, -1000, -1000, -29, 2363,
	2357, 1627, -1000, 1927, 1913, 19314, 1627, 1306, 2069, 1627,
	1627, 1627, 1627, -1000, 1234, 1320, 2298, 1320, 1627, 1627,
	2237, 351, 1627, 1491, 1491, 1491, 1491, 1491, 1320, 1320,
	1320, 1320, 46745, -1000, -162, -1000, -1000, -202, -205, -1000,
	1306, -162, 1774, 1306, -1000, 1990, 1888, 2116, 1871, 1627,
	1921, 1627, 1627, 1627, 1862, -1000, 2354, 2354, 2354, 1486,
	1238, 48083, -1000, -1000, -1000, -1000, 2473, 2470, 1773, -1000,
	-1000, 131, 481, -1000, 2150, 2164, -1000, 2453, 2172, 2450,
	-1000, -1000, -1000, -1000, -1000, 1234, -1000, 2284, 1732, -1000,
	854, 1765, -1000, -1000, 17976, 1489, 2118, 671, 1486, 1799,
	2831, 1993, 2033, 2353, -1000, -1000, -1000, -1000, 2085, -1000,
	2070, -1000, -1000, 1875, -1000, 1917, 457, 24668, 1797, 1797,
	-1000, 665, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1017,
	4784, 2516, -1000, 1453, -1000, 1249, 213, 1148, -1000, -1000,
	823, 823, -1000, 944, 942, -1000, 48083, 1911, -1000, 410,
	1449, 410, 1147, -1000, -1000, 1117, -1000, -1000, -1000, -1000,
	1881, 2037, -1000, -1000, -1000, -1000, 48083, -1000, -1000, 48083,
	48083, 48083, 1893, 2449, -1000, 19314, 1884, 853, 2266, 46745,
	46745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 553, 823, -423, 391, 387, 823, 823, 823,
	-454, -1000, -1000, 1479, 1476, -1000, -117, -1000, 19314, -1000,
	-1000, -1000, 1191, 1191, 1445, 1439, 1435, -1000, 1875, -1000,
	-1000, -1000, 1487, -1000, -1000, -100, 46745, 46745, 46745, 46745,
	-1000, -1000, 1064, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 760, 1306,
	359, -105, 1306, -1000, -1000, 410, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19314, -1000, 19314, -1000,
	1234, 19314, 2413, 1426, 19314, 19314, -1000, 1099, 1086, 1627,
	-1000, -1000, -1000, 19314, -1000, -1000, -1000, -1000, -1000, 19314,
	-1000, -1000, -1000, 19314, 244, 1135, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1306, 450, -1000, -1000,
	-1000, -1000, 2482, -1000, 1306, 19314, -1000, -1000, 19314, -1000,
	19314, 19314, -1000, 19314, -1000, 19314, -1000, -1000, -1000, -1000,
	19314, 1781, 2234, 1781, 1781, 26675, -1000, -1000, 2470, 2468,
	2448, 2163, 2167, 2167, 2150, -1000, 2446, 2438, -1000, 1421,
	2432, 1417, 931, -1000, 47414, 19314, 157, -1000, 407, 46745,
	157, 46745, -1000, 2458, -1000, -1000, 19314, 1883, -1000, 19314,
	-1000, -1000, -1000, -1000, 6587, 2473, 1797, -1000, -1000, 777,
	-1000, 19314, -1000, -1000, -1000, 8141, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1407, 1395, -1000, -1000, 1882, 19314,
	-1000, -1000, -1000, 1480, 1363, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1875, -1000, -1000, -1000, -1000, 430, -449,
	2246, 46745, 1073, -1000, 1433, 1771, 425, 157, 1383, 823,
	823, 823, 1060, 1056, 32027, 1431, -1000, 46745, 506, -1000,
	430, -1000, -132, -135, 1627, -1000, -1000, 2316, -1000, -1000,
	13274, -1000, -1000, 1866, 1994, -1000, -1000, -1000, -1000, 2073,
	-92, -115, -1000, -1000, 1627, 1627, 1601, 1306, -1000, 1627,
	1627, 1338, 1321, -1000, 1627, 1320, 1730, -1000, 244, 1306,
	2032, -1000, -1000, 6587, -1000, -1000, 2458, 2427, 116, -1000,
	-1000, 291, 116, 1234, 1675, 1627, 1633, 1597, 1627, 1627,
	27344, -1000, 2423, 2418, 32696, 32696, 774, 2468, -171, 19314,
	19314, 2140, 1127, -1000, -1000, -1000, -1000, 1374, 1368, -1000,
	1328, -1000, 2515, -1000, 1234, -1000, 157, -1000, 663, 1765,
	-1000, 2413, 1234, 46745, 1234, 135, 2458, -1000, 1627, -1000,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
	-1000, -1000, 46745, 2223, -1000, -1000, 2314, 1400, 74, -1000,
	1313, 1771, -1000, -1000, 151, -1000, 19314, -1000, 32027, 1326,
	1324, -1000, -1000, -1000, -1000, -454, -1000, -1000, -1000, -1000,
	-1000, -1000, 420, 1770, -1000, 821, 46745, 48083, -1000, 2060,
	-1000, -1000, -1000, 19314, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19314, -1000, 1306, 2031, -1000, -286, -1000, -427,
	19314, -162, -1000, -1000, -162, -1000, 19314, -1000, -1000, 19314,
	-1000, 19314, -1000, -1000, 1362, -1000, -1000, -1000, -1000, -1000,
	1362, 1362, -1000, -171, -1000, 1766, -1000, 46745, 1234, 1760,
	-1000, 1051, -1000, -1000, -1000, -1000, -1000, 47414, 1765, 46745,
	-1000, 1358, 1306, 1781, 2413, -1000, 1337, -1000, 420, -1000,
	1865, 1867, -1000, -1000, -1000, 17307, -1000, -1000, -1000, -1000,
	-1000, 209, -99, 13274, 9899, 1333, -1000, -97, 1627, 1320,
	-1000, -388, -1000, -1000, -1000, -1000, 243, -1000, -1000, 1760,
	-1000, -1000, 1536, 1403, 1341, 31358, -1000, -1000, -1000, -1000,
	-171, -1000, -1000, 2312, -1000, -1000, 1635, -1000, -1000, 26675,
	46076, -1000, -85, 271, -99, 19314, 1841, 1306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 32, -1000, -1000, -1000,
	-1000, -1000, 1897, -109, -1000, -1000, -1000, 145, -415, -197,
	-201, -1000, -1000, 19983, -1000, 19314, -1000, 19314, -1000, 19314,
	-1000, -1000, -1000, 46745, 1781, -1000, 1305, -1000, 3879, -214,
	2030, -1000, -31, -1000, -1000, -1000, 1016, 1297, -1000, -1000,
	-1000, -1000, -1000, -1000, 2205, 46745, -1000, 529, -1000, -1000,
	-100, -124, 916, -1000, -1000, -1000, -1000, -1000, 1315, 1120,
	1627, -1000, 46745, -1000, 46076, -208, 750, 6587, -1000, 2020,
	2018, 2479, -1000, -1000, -1000, -1000, -1000, -1000, -461, 1303,
	318, -1000, -1000, 145, -1000, 19314, -1000, 19314, -1000, 1306,
	-1000, -1000, 2296, 135, -1000, 2509, -1000, 2500, 773, 773,
	-1000, 1044, -461, -1000, -1000, 1627, 1627, -1000, -217, -1000,
	-1000, -1000, -1000, -1000, 517, 1088, -1000, -1000, -1000, -1000,
	-1000, 6587, -1000, -1000, -1000, 238, 238, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3126, 3124, 28, 1, 37, 36, 3123, 45, 124,
	217, 26, 207, 112, 3122, 191, 3121, 3116, 3115, 3114,
	3113, 3112, 2547, 2546, 2542, 3107, 3100, 3099, 3096, 3091,
	3089, 3086, 3084, 3083, 3082, 187, 179, 208, 3081, 3079,
	3075, 125, 201, 96, 98, 205, 3073, 3072, 88, 3071,
	3068, 3064, 199, 198, 197, 921, 3063, 196, 130, 58,
	3062, 3061, 3060, 3059, 3058, 3056, 3050, 3049, 3048, 3046,
	3045, 3044, 3040, 3036, 3031, 3029, 3026, 3024, 3022, 3021,
	261, 3019, 3012, 21, 3008, 97, 3004, 2998, 2995, 2992,
	2991, 8, 2989, 2988, 14, 43, 2987, 2986, 52, 2983,
	2981, 2980, 2976, 2967, 19, 2963, 25, 2962, 32, 2958,
	2957, 141, 2954, 2953, 2951, 39, 2949, 2944, 2940, 2935,
	2934, 2930, 2929, 158, 2928, 2927, 2926, 189, 215, 2918,
	2908, 183, 115, 120, 2907, 2906, 110, 200, 2893, 137,
	2892, 2888, 2887, 167, 2883, 2207, 2878, 2877, 76, 71,
	2875, 54, 2870, 2869, 13, 85, 75, 12, 113, 114,
	2867, 2865, 70, 94, 2863, 131, 2862, 2861, 116, 80,
	2857, 117, 111, 2856, 2855, 11, 4, 2854, 53, 9,
	6, 77, 2853, 2852, 121, 2849, 2847, 2846, 108, 2843,
	2842, 3231, 2841, 100, 152, 119, 87, 2838, 46, 51,
	2837, 2834, 2833, 2830, 2823, 56, 2822, 2821, 2819, 163,
	342, 180, 2813, 40, 78, 60, 153, 2811, 63, 95,
	210, 184, 2809, 2806, 156, 155, 2801, 2785, 72, 44,
	50, 2783, 104, 145, 132, 67, 102, 151, 2779, 2762,
	66, 82, 2761, 2757, 2754, 2745, 186, 2743, 2740, 81,
	2739, 64, 2733, 203, 2730, 16, 79, 2723, 42, 182,
	2722, 83, 2721, 2720, 74, 149, 86, 38, 2719, 174,
	178, 143, 181, 2716, 2715, 57, 2714, 2712, 2708, 206,
	352, 2705, 2703, 147, 192, 177, 168, 101, 2702, 360,
	2701, 2699, 106, 2, 5316, 2698, 41, 176, 2697, 2696,
	6618, 157, 49, 22, 2693, 136, 2691, 2688, 2687, 2686,
	255, 194, 138, 175, 65, 2685, 2684, 2682, 17, 2673,
	2669, 2667, 2660, 2658, 2657, 91, 35, 34, 33, 251,
	69, 18, 109, 185, 173, 92, 2652, 2648, 2647, 140,
	105, 2645, 172, 171, 142, 139, 2639, 188, 161, 123,
	2629, 103, 31, 2628, 2626, 2625, 2623, 107, 2622, 2620,
	2619, 2618, 170, 160, 134, 90, 2615, 93, 128, 165,
	169, 55, 2613, 61, 2609, 2603, 30, 204, 27, 2602,
	15, 118, 166, 2598, 4456, 193, 2595, 20, 362, 162,
	2592, 2589, 5, 7, 10, 2588, 2583, 2582, 2577, 144,
	2575, 2572, 2571, 2570, 24, 47, 23, 3, 122, 89,
	2568, 2567, 159, 164, 2566, 2557, 2553, 2548, 3209, 0,
	150, 2535, 209,
}

//line sql.y:8291
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 261, 384, 385, 385, 259, 259, 33, 75,
	35, 35, 34, 34, 37, 37, 36, 8, 8, 8,
	9, 9, 9, 9, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 11, 11, 11, 11, 13, 13, 13,
	13, 13, 20, 21, 12, 12, 22, 22, 109, 109,
	23, 24, 24, 24, 24, 420, 420, 186, 186, 184,
	184, 185, 185, 264, 264, 25, 268, 268, 270, 270,
	270, 270, 260, 260, 260, 26, 26, 269, 269, 271,
	271, 271, 274, 274, 274, 274, 313, 313, 313, 27,
	27, 27, 27, 27, 27, 27, 129, 129, 387, 387,
	386, 380, 380, 379, 379, 378, 383, 383, 382, 382,
	381, 39, 40, 49, 49, 49, 49, 50, 51, 388,
	388, 353, 56, 56, 55, 55, 55, 55, 55, 55,
	57, 57, 53, 53, 52, 52, 54, 54, 355, 355,
	341, 341, 354, 354, 354, 354, 354, 354, 354, 340,
	340, 140, 140, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	403, 403, 403, 402, 402, 239, 239, 239, 239, 239,
	239, 239, 239, 150, 150, 162, 162, 162, 162, 162,
	148, 148, 149, 147, 147, 147, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 161, 161, 157, 157, 157,
	158, 158, 158, 159, 159, 404, 404, 404, 404, 318,
	318, 318, 318, 321, 321, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 322, 322, 322, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 324,
	339, 339, 325, 325, 333, 333, 334, 334, 335, 335,
	335, 336, 336, 336, 337, 337, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 332, 332, 331, 331, 331,
	342, 367, 367, 366, 366, 364, 364, 364, 364, 364,
	364, 364, 364, 351, 351, 361, 361, 361, 361, 361,
	350, 350, 346, 346, 346, 347, 347, 348, 348, 345,
	345, 349, 349, 363, 363, 362, 362, 343, 343, 344,
	344, 369, 405, 405, 405, 405, 405, 406, 406, 370,
	395, 397, 397, 397, 396, 396, 393, 394, 392, 392,
	392, 392, 392, 85, 85, 85, 287, 287, 288, 288,
	359, 359, 358, 358, 358, 360, 360, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 282, 282,
	282, 391, 391, 391, 391, 391, 391, 390, 390, 390,
	356, 356, 356, 389, 389, 58, 58, 219, 219, 408,
	408, 409, 409, 409, 46, 46, 46, 46, 46, 46,
	45, 45, 45, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 47, 47, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 111, 111, 112, 112, 112,
	112, 114, 114, 114, 372, 372, 59, 59, 3, 3,
	174, 176, 177, 177, 175, 175, 175, 175, 175, 175,
	61, 61, 60, 60, 179, 178, 180, 180, 180, 1,
	1, 2, 2, 4, 4, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 338, 338, 338,
	371, 371, 373, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 117, 116, 116, 115, 118, 118, 118,
	118, 118, 118, 118, 118, 375, 375, 375, 62, 62,
	376, 326, 327, 328, 5, 6, 352, 374, 125, 125,
	29, 38, 38, 30, 30, 30, 30, 31, 31, 63,
	64, 415, 415, 68, 68, 68, 69, 69, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 281, 281, 290, 290,
	280, 280, 305, 305, 305, 283, 283, 283, 284, 284,
	401, 401, 401, 277, 277, 66, 66, 66, 306, 306,
	306, 306, 70, 70, 410, 410, 411, 411, 412, 412,
	412, 71, 72, 72, 308, 308, 309, 309, 73, 74,
	86, 86, 86, 86, 86, 86, 86, 87, 87, 87,
	87, 110, 110, 110, 15, 15, 15, 15, 82, 82,
	82, 14, 14, 17, 67, 67, 76, 398, 398, 399,
	400, 400, 400, 400, 77, 79, 79, 32, 32, 32,
	32, 32, 32, 135, 135, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 130, 130,
	130, 124, 124, 421, 80, 81, 81, 128, 128, 128,
	121, 121, 121, 127, 127, 127, 16, 16, 18, 263,
	263, 19, 19, 132, 132, 134, 134, 134, 134, 134,
	136, 136, 136, 136, 136, 136, 136, 131, 131, 133,
	133, 133, 133, 298, 298, 298, 297, 297, 168, 168,
	170, 169, 169, 171, 171, 172, 172, 172, 172, 217,
	217, 194, 194, 256, 256, 257, 257, 255, 255, 262,
	262, 258, 258, 258, 258, 265, 265, 173, 173, 173,
	173, 181, 181, 182, 182, 183, 183, 307, 307, 303,
	303, 303, 302, 302, 187, 187, 187, 189, 188, 188,
	188, 188, 190, 190, 192, 192, 191, 191, 193, 198,
	198, 197, 197, 195, 195, 195, 195, 196, 196, 196,
	196, 199, 199, 145, 145, 145, 145, 145, 145, 145,
	160, 160, 160, 160, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 246, 246, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 154, 222, 222, 221, 221,
	88, 88, 88, 89, 89, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 146, 146, 93, 93, 92,
	92, 212, 212, 295, 295, 94, 95, 95, 98, 98,
	97, 96, 96, 102, 102, 99, 99, 101, 101, 100,
	103, 103, 104, 105, 105, 278, 278, 200, 200, 208,
	208, 208, 208, 201, 201, 201, 201, 201, 201, 201,
	209, 209, 209, 216, 210, 210, 206, 206, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 165, 165, 165, 165, 227, 227,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 153, 153, 166, 166, 166,
	166, 167, 167, 167, 167, 167, 167, 167, 315, 315,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 422, 422, 329, 329, 329, 329, 207, 207, 207,
	207, 207, 126, 126, 126, 126, 126, 312, 312, 312,
	316, 316, 316, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 317, 317,
	225, 225, 122, 122, 223, 223, 224, 226, 226, 218,
	218, 218, 218, 220, 220, 203, 203, 203, 228, 228,
	229, 229, 106, 107, 107, 108, 108, 230, 230, 232,
	231, 231, 233, 234, 234, 234, 235, 235, 236, 236,
	236, 48, 48, 48, 48, 48, 43, 43, 43, 43,
	44, 44, 44, 44, 137, 137, 137, 137, 139, 139,
	138, 138, 83, 83, 84, 84, 84, 414, 414, 414,
	413, 413, 413, 413, 413, 413, 143, 143, 144, 144,
	144, 141, 141, 142, 142, 253, 253, 237, 237, 237,
	244, 244, 244, 240, 240, 242, 242, 242, 243, 243,
	243, 241, 250, 250, 252, 252, 251, 251, 247, 247,
	248, 248, 249, 249, 249, 245, 245, 202, 202, 202,
	202, 202, 254, 254, 254, 254, 266, 266, 213, 213,
	215, 215, 214, 214, 164, 267, 267, 275, 272, 272,
	273, 273, 299, 299, 299, 276, 276, 289, 289, 285,
	285, 286, 286, 279, 279, 291, 291, 291, 78, 211,
	211, 368, 368, 365, 294, 294, 296, 296, 300, 300,
	304, 304, 301, 301, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 418, 419, 310,
	311, 311, 311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 2, 3, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 0, 1, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 1, 2, 2, 2,
	0, 1, 4, 4, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 5,
	10, 0, 2, 0, 2, 3, 5, 3, 4, 2,
	3, 2, 3, 3, 3, 3, 2, 2, 4, 4,
	1, 1, 1, 1, 1, 0, 2, 2, 3, 3,
	2, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	4, 1, 3, 2, 3, 3, 2, 2, 3, 2,
	2, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	3, 5, 2, 3, 3, 2, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 6,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 1, 6, 3, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 8,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 9, 6, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 2,
	2, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -80, -421, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -69, -65, -66, -70, -71, -72, -73, -74, -14,
	-17, -67, -32, -33, -75, -76, -77, -78, -79, -16,
	-18, -19, -9, -8, -13, 10, 11, -109, -34, 33,
	-39, -49, 225, -50, -40, 226, -51, 228, 227, 266,
	229, 250, 633, 235, 259, 75, 317, 318, 320, 321,
	322, 323, -110, 629, 264, 265, 231, 37, 46, 34,
	35, 38, 236, 272, 273, 234, -10, -35, 9, -418,
	12, 461, 261, 260, 29, -12, 523, 87, -81, -417,
	679, -253, -237, 23, 34, 30, -236, -232, -128, -237,
	21, 19, 8, -80, -80, -80, 13, 14, -80, -353,
	-355, -12, 26, 87, 159, 9, 87, -80, -56, -55,
	-53, -52, -54, -57, 32, -46, -47, -377, -45, -42,
	230, 227, 276, 123, 124, 266, 267, 268, 229, 250,
	265, 269, 264, 285, -41, 82, 34, 523, 526, -360,
	226, 232, 233, 228, 462, 126, 125, 76, -357, 376,
	556, 649, -57, 651, 101, 104, 650, 45, 240, 652,
	653, 654, 563, 655, 249, 656, 657, 658, 659, 665,
	604, 666, 667, 668, 127, 8, -80, -304, -300, 91,
	-293, 520, 252, 554, 555, 301, 82, 42, 529, 373,
	376, 556, 491, 649, 317, 333, 327, 496, 497, 498,
	356, 348, 521, 557, 530, 304, 253, 289, 643, 346,
	135, 651, 308, 558, 267, 381, 382, 559, 383, 101,
	320, 424, 664, 307, 560, 662, 104, 650, 325, 80,
	490, 52, 646, 45, 262, 344, 234, 340, 652, 290,
	561, 532, 283, 126, 123, 671, 37, 336, 51, 31,
	661, 125, 50, 653, 150, 562, 654, 563, 385, 363,
	637, 49, 386, 268, 564, 85, 273, 525, 311, 645,
	387, 510, 337, 388, 300, 660, 231, 565, 624, 616,
	617, 389, 390, 638, 368, 364, 369, 512, 566, 416,
	495, 391, 620, 621, 678, 53, 567, 568, 639, 124,
	569, 79, 655, 81, 331, 332, 570, 298, 251, 515,
	516, 418, 360, 473, 480, 481, 111, 112, 476, 113,
	482, 114, 483, 484, 485, 474, 115, 108, 475, 486,
	487, 361, 362, 116, 488, 110, 109, 477, 479, 117,
	489, 249, 36, 392, 522, 302, 59, 306, 277, 419,
	47, 366, 675, 46, 631, 517, 571, 636, 359, 355,
	470, 54, 572, 573, 574, 575, 492, 656, 358, 330,
	354, 670, 4, 295, 493, 657, 63, 233, 371, 370,
	372, 284, 415, 351, 576, 577, 578, 256, 83, 579,
	341, 22, 580, 581, 393, 291, 582, 57, 583, 584,
	422, 265, 585, 55, 658, 40, 586, 270, 672, 659,
	587, 313, 314, 588, 589, 630, 590, 272, 591, 395,
	592, 618, 619, 394, 365, 367, 518, 279, 396, 237,
	524, 593, 312, 335, 269, 663, 594, 257, 506, 507,
	508, 509, 644, 514, 513, 271, 276, 264, 423, 258,
	595, 596, 597, 598, 599, 305, 615, 600, 601, 321,
	665, 471, 44, 602, 603, 604, 605, 606, 299, 294,
	417, 426, 62, 84, 378, 607, 608, 642, 329, 326,
	292, 609, 318, 56, 666, 667, 668, 286, 669, 499,
	500, 501, 502, 10, 676, 677, 494, 398, 127, 296,
	297, 48, 352, 278, 610, 309, 611, 342, 343, 357,
	328, 353, 627, 319, 625, 280, 399, 472, 266, 612,
	425, 293, 374, 379, 310, 528, 511, 285, 400, 634,
	641, 527, 503, 504, 350, 347, 287, 505, 613, 629,
	401, 241, 281, 282, 614, 626, 402, 403, 303, 404,
	315, 414, 405, 406, 407, 408, 411, 412, 413, 410,
	316, 409, 628, 622, 623, 288, 526, 324, 345, 380,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 469, 239,
	-80, 239, -191, -300, 239, 239, 96, 524, 650, 634,
	395, -272, 412, 413, 382, -290, 384, 397, 392, 402,
	390, -281, 393, 395, 279, -401, 416, 239, 399, 225,
	385, 394, 403, 404, 315, 414, 303, 410, 405, 316,
	409, 288, 406, 407, 408, 411, -384, 177, 654, 669,
	135, 349, 389, 387, 417, 631, 91, -306, 91, 92,
	93, -293, 319, -308, 324, -294, -384, -293, 322, -80,
	-80, -310, -310, -130, 631, 635, -210, -145, 143, -160,
	-163, -151, -155, -204, -205, -206, -207, -161, -220, -259,
	166, 167, 174, 144, -216, -164, 27, 519, 463, 462,
	177, 32, -154, 220, 69, 70, 465, 146, 58, 12,
	438, 439, -162, 433, 440, 435, 490, 492, 493, 494,
	491, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 495, 467, 468, 118, 469, 108, 110, 109, 470,
	471, 472, 346, 517, 518, 512, 515, 516, 514, 513,
	361, 362, 473, 474, 475, 111, 112, 113, 114, 115,
	116, 117, 476, 479, 477, 478, 480, 481, 482, 487,
	488, 483, 484, 485, 486, 489, -90, -102, 545, 544,
	-103, -152, -153, -166, -167, -294, -300, 244, 432, 238,
	172, 461, -156, -149, -218, 107, 92, 93, -8, -214,
	431, 436, 437, 441, 434, 531, 533, 548, 549, 551,
	536, 541, 540, 543, 506, 507, 508, 509, 510, 511,
	616, 617, 618, 619, 620, 621, 622, 623, -384, -293,
	91, -158, -157, -200, 94, 99, 102, 103, 105, -407,
	262, 342, 343, 119, -418, 647, 90, 95, 96, 97,
	98, 120, 121, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 45, 398, 398, -191, -80,
	-80, -80, -80, -230, -128, -232, -10, -8, -418, -80,
	-8, -9, -13, -35, -37, 550, -36, -300, 100, -237,
	-253, 13, 162, 43, 51, -235, -236, -12, -8, -145,
	20, 24, 25, -133, 168, -145, -300, -133, -279, 243,
	-80, -80, -268, -313, 319, -270, 417, 631, 416, -260,
	-273, 91, -259, -272, 415, -12, -354, 159, -340, -344,
	-294, 254, -370, 250, -191, -80, -363, -362, -294, -418,
	-129, -289, 240, 248, 247, 136, -388, 139, 296, 432,
	238, -52, -53, -54, -272, 176, 653, -111, 271, 275,
	88, 88, -344, -343, -342, -389, 275, 254, -369, -361,
	246, 255, -350, 247, 248, -345, 240, 137, -389, -345,
	245, 255, 250, 254, 275, 275, 127, 275, 127, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 270, -351,
	151, -351, 527, 527, -357, -389, 250, 240, -389, -389,
	246, -291, -345, 242, 26, 242, 36, 36, -351, -351,
	-351, -272, 176, -351, -351, -351, -351, 283, 283, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, 239, -388, -137, 409,
	303, 315, 82, -55, 285, -38, -191, -289, 240, 241,
	-388, 272, -191, 221, -191, -415, -191, 96, 96, -283,
	159, 16, -283, -280, 398, 396, 383, 388, -283, -283,
	-283, -283, 286, 381, -346, 240, 36, 251, 398, 286,
	381, 286, 287, 286, 287, 391, 401, 286, -305, 15,
	162, 432, 386, 390, 279, 239, 280, 241, 400, 287,
	-305, -305, 90, -305, 90, -284, 159, 286, 398, 282,
	-283, -283, -311, -418, -296, -294, -292, 230, 24, 142,
	26, 28, 145, 177, 130, 20, 146, 38, 232, 349,
	250, 176, 246, 462, 225, 73, 531, 433, 435, 431,
	438, 464, 465, 432, 384, 32, 14, 533, 29, 260,
	25, 39, 170, 227, 149, 534, 263, 27, 261, 118,
	121, 536, 23, 76, 255, 15, 248, 41, 17, 537,
	538, 18, 244, 243, 162, 240, 71, 12, 220, 30,
	158, 67, 539, 137, 540, 541, 542, 543, 131, 69,
	159, 21, 673, 436, 437, 34, 632, 519, 274, 172,
	74, 60, 635, 143, 434, 544, 545, 119, 546, 122,
	77, 640, 139, 19, 72, 43, 547, 275, 548, 245,
	674, 549, 420, 550, 160, 228, 461, 70, 161, 647,
	551, 648, 238, 397, 9, 466, 33, 259, 247, 129,
	68, 552, 239, 148, 467, 468, 242, 132, 120, 8,
	136, 35, 13, 75, 78, 439, 440, 441, 58, 128,
	523, 147, 16, 553, 421, 141, 633, 427, 428, 429,
	430, 235, -384, 636, -311, -311, 33, 92, -410, -411,
	-412, 523, 420, 242, -294, -191, -86, 624, 229, -87,
	630, 24, 237, -135, 398, -123, 177, 654, 637, 638,
	639, 636, 395, 634, 644, 642, 640, 286, 641, 88,
	139, 141, 142, 4, -145, 158, -201, 151, 152, 153,
	154, 155, 156, 157, 162, 143, 145, 159, -246, 140,
	163, 164, 165, 166, 167, 168, 169, 171, 170, 172,
	173, 160, 161, 176, 223, 224, -155, -155, -155, -155,
	-216, -222, -221, -418, -218, -384, -293, -300, -418, -418,
	-155, -278, -418, -418, -151, -418, -418, -418, -225, -145,
	-418, -418, -422, -418, -422, -422, -329, -418, -329, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, 221, -418, -418, -418, -418,
	-418, -329, -329, -329, -329, -329, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	103, 99, 102, 94, -220, 105, 90, 90, 90, 90,
	-8, -9, -210, -418, -310, -398, -399, -194, -191, -418,
	303, 315, -294, -294, 272, -235, -12, -8, -230, -236,
	-232, -8, -121, -134, 64, 65, -136, 25, 39, 68,
	66, 24, -419, 89, -419, -253, -419, 88, -37, -256,
	87, 62, 44, 90, 90, 88, 22, -231, -233, -145,
	15, -298, 4, -297, 26, -294, 90, 221, 15, -192,
	30, -191, -279, -279, 88, 91, 319, -269, -271, 418,
	420, 151, -299, -294, 90, 32, 89, 88, -191, -318,
	-321, -323, -322, -324, -319, -320, 346, 347, 177, 350,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 363,
	33, 262, 342, 343, 344, 345, 364, 365, 366, 367,
	369, 370, 371, 372, 327, 348, 521, 328, 329, 330,
	331, 332, 333, 335, 336, 339, 337, 338, 340, 341,
	-385, -384, 87, 64, 65, 89, 88, -325, 87, -145,
	-137, 239, -384, 240, 240, 240, -80, 461, -351, -351,
	-351, 270, 20, -45, -42, -377, 19, -41, -42, 230,
	123, 124, 227, 87, -340, 87, -349, -385, -384, 87,
	137, 245, 136, -348, -345, -348, -349, -384, -218, -384,
	137, 137, -384, -384, -265, -294, -265, -265, 24, -265,
	24, -265, 24, 96, -294, -265, 24, -265, 24, -265,
	24, -265, 24, -265, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -218, -384, -384, -218, -340, -218, -191,
	-384, -272, 96, 96, 96, -351, -351, 96, 90, 90,
	90, -351, -351, 96, 90, -302, -300, 90, 90, -390,
	256, 300, 302, 96, 96, 96, 96, 32, 90, -391,
	32, 661, 660, 662, 663, 664, 90, 96, 32, 96,
	32, 96, -294, 87, -191, -143, 290, 225, 227, 230,
	77, 90, 306, 307, 304, 313, 314, 309, 310, 90,
	306, 307, 304, 313, 314, 309, 310, 151, 45, 88,
	242, 239, -384, -285, 244, -285, -294, -301, -300, -292,
	-414, 88, -413, 23, 427, 428, 430, 387, 429, 90,
	-145, -347, 15, 162, -305, -305, -283, -191, -347, -305,
	-283, -191, -283, -283, -283, -283, -305, -305, -305, -283,
	-300, -300, -191, -191, -191, -191, -191, -191, -191, -311,
	-284, -283, -283, 636, -283, 636, 90, -277, 15, 77,
	-311, -311, 88, 325, 421, 422, -309, 322, -82, -294,
	90, -15, -11, -23, -22, -24, 151, -15, 88, 523,
	-184, -191, 636, 636, 636, 636, 636, 636, -145, -145,
	-145, -145, 546, -208, 119, 143, 120, 121, -163, -209,
	-214, -216, 106, 162, 145, 159, -246, -151, -155, -151,
	-151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -312, -294, 90, 177, -159, -158, 105, -407,
	-159, 520, 88, -221, 221, -145, -145, -384, -145, -294,
	-131, -133, -131, -145, -223, -224, 147, -218, -145, -419,
	-419, 96, 105, 168, -127, 25, 39, -127, -127, -127,
	-127, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -127, -294, -294, -120, -119, 443, 444, 445, 446,
	448, 449, 450, 453, 454, 458, 459, 442, 460, 447,
	452, 455, 456, 457, 451, 345, -145, -145, -145, -145,
	-145, -145, -88, -145, 130, 131, 132, -210, -145, -151,
	-145, -145, -145, -419, -145, -145, -145, -211, -210, -383,
	-382, -381, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -419, -145, -165, -149, 96,
	-261, 105, 92, -145, -145, -132, -131, -296, -301, -292,
	-293, -131, -132, -132, -131, -131, -145, -145, -145, -145,
	-145, -145, -145, -145, -419, -145, -145, -145, -145, -145,
	-253, -419, -210, 88, -400, 420, 421, 632, -303, 275,
	-302, 26, -211, 90, 90, 15, -263, 78, -294, -235,
	-235, 60, -131, -136, -419, -36, 26, -255, -294, 63,
	90, -330, -272, 373, 374, 177, -145, -145, 88, -234,
	28, 29, -191, -297, 168, -301, -191, -264, 275, -191,
	-169, -171, -172, -173, -194, -217, -418, -174, -8, 542,
	539, 15, -184, -185, -193, -300, -270, -313, -269, 88,
	419, 421, 422, 77, 122, -145, -331, 176, -359, -358,
	-357, -340, -342, -343, -344, 89, -331, -336, 379, 378,
	-325, -325, -325, -325, -325, -330, -330, -330, -330, 87,
	87, -325, -325, -325, -325, -333, 87, -333, -333, -334,
	-333, 87, -334, -335, 87, -335, -370, -145, -367, -366,
	-364, -365, 249, 101, 614, 570, 523, 563, 604, 78,
	-362, -234, 96, -419, -143, -286, 244, -368, -365, -384,
	-384, -384, -286, 91, 90, 91, 90, 91, 90, -112,
	-59, -1, 673, 674, 675, 88, 20, -341, -340, -58,
	300, -373, -374, 275, -369, -363, -349, 137, -348, -349,
	-349, -384, 88, 30, 127, 127, 127, 127, 523, 227,
	33, -287, 562, 143, 614, 570, -340, -58, 242, 242,
	-312, -312, -312, 90, 90, -282, 669, -184, -139, 292,
	151, 281, 281, 239, 239, 294, -191, 305, 308, 306,
	307, 304, 313, 314, 309, 310, 24, 24, 24, 24,
	24, 24, 24, 305, 308, 306, 307, 304, 313, 314,
	309, 310, 24, 24, 24, 24, 24, 24, 24, 293,
	295, 297, 283, -191, -191, -285, 77, -186, -191, 27,
	-300, -413, -191, 285, -191, -283, -283, -191, -283, -283,
	-191, -412, 326, -294, 360, 625, 626, 628, 627, -123,
	420, 88, 523, 23, -124, 23, -418, 119, 120, 121,
	-209, -151, -155, -151, 142, 263, -418, -218, -419, -296,
	26, 88, 78, -419, 88, 88, -419, -419, 88, 15,
	-226, -224, 149, -145, -419, 88, -419, -419, -419, -210,
	-145, -145, -145, -145, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -210, 88, 88, 15, -316, 26,
	-419, -419, -419, -419, -419, -225, -419, 15, -419, 78,
	88, 162, 88, -419, -419, -419, 88, 88, -419, -419,
	88, 88, -419, 88, 88, 88, -419, 88, 88, 88,
	88, -419, -419, -419, -419, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, -419, -95, 547, -419, -419,
	88, -419, 88, -419, -418, 221, -419, -419, -419, -419,
	-419, 88, 88, 88, 88, 88, 88, -419, -419, -419,
	88, 88, -419, 88, -419, 88, -419, -399, 631, 421,
	-198, -197, -195, 75, 243, 76, -418, -302, -419, -159,
	-261, -262, -261, -203, -294, 96, 105, -237, -168, -170,
	15, -136, -216, 89, 88, -330, -241, -247, -280, -294,
	90, 177, -332, 177, -332, 373, 374, -233, 221, -199,
	16, -202, 33, 58, -11, -418, -418, 33, 88, -187,
	-189, -188, -190, 67, 71, 73, 68, 69, 70, 74,
	-307, 26, -8, -169, -8, -418, -191, -184, -420, 15,
	78, -420, 88, 221, -271, -274, 423, 420, 426, -384,
	90, -111, 88, -357, -344, -238, -140, 41, -337, 380,
	-330, 530, -330, -339, 90, -339, 96, 96, 96, 89,
	-48, -43, -44, 34, 82, -364, -351, 90, 40, -351,
	-351, -294, 89, -234, -139, -191, 143, 77, -368, -368,
	-368, -300, -2, 672, 678, 137, 87, 383, 19, -255,
	88, 89, -219, 301, 89, -113, -294, 89, 87, -349,
	-349, -294, -418, 239, 32, 32, 614, 570, 562, -58,
	-219, -218, -384, -331, 671, 670, 89, 241, 299, -144,
	438, -141, 90, 91, -191, -191, -191, -191, -191, 230,
	227, 406, -408, 311, -408, 406, -408, -408, 284, 242,
	-184, -191, 88, -85, 258, 253, -305, -305, 34, -191,
	420, 645, 643, -145, 142, 263, -163, -155, -151, -314,
	177, 346, 262, 344, 340, 360, 351, 378, 342, 379,
	337, 336, 335, -314, -312, -210, -133, -145, -145, 150,
	-145, 148, -145, -419, -419, -419, -419, -419, -230, -145,
	-145, -145, -419, 177, 346, 15, -145, -312, -145, -145,
	-145, -145, -145, -381, -145, -210, -145, -210, -145, -145,
	-145, -145, -145, -382, -382, -382, -382, -382, -210, -210,
	-210, -210, -418, -294, -98, -97, -96, 597, 243, -95,
	-165, -98, -165, -132, -296, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -195, -345, -345, -345, -265,
	88, -276, 23, 15, 58, 58, -168, -199, -169, -136,
	-294, -244, 624, -250, 47, -248, -249, 48, -245, 49,
	57, -332, -332, 168, -235, -145, -266, 77, -267, -275,
	-218, -213, -215, -214, -418, -254, -419, -294, -265, -267,
	-171, -172, -172, -171, -172, 67, 67, 67, 72, 67,
	72, 67, -188, -300, -419, -145, -303, 78, -169, -169,
	-193, -300, 168, 420, 424, 425, -357, -406, 119, 143,
	32, 77, 376, 101, -404, 176, 559, 609, 614, 570,
	563, 604, -405, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -288, -287, -44, -43,
	-351, -351, 96, -384, 90, 90, 241, 27, -191, 77,
	77, 77, -114, 676, 96, 87, -3, 82, -145, 87,
	20, -340, -218, -375, -326, -376, -327, -328, -5, -6,
	-352, -117, 58, 101, -62, 45, 240, 656, 657, 127,
	-418, 669, -367, -255, -371, -373, -191, -148, -418, -147,
	-149, -156, 166, 167, 262, 342, 343, -219, -191, -138,
	290, 298, 87, -142, 92, -387, 78, 281, 376, 281,
	90, -409, 312, 90, -409, 90, -409, -409, -191, -85,
	-48, -191, -283, -283, 34, -384, -419, -163, -155, -126,
	162, 523, -317, 529, -325, -325, -325, -335, -325, 332,
	-325, 332, -325, -419, -419, -419, 88, -419, 23, -419,
	-145, 88, -122, 466, 88, 88, -419, 87, 87, -145,
	-419, -419, -419, 88, -419, -419, -419, -419, -419, 88,
	-419, -419, -419, 88, -315, 615, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -94, -295, -294, -95,
	579, 579, -419, -95, -227, 88, -419, -419, 88, -419,
	88, 88, -419, 88, -419, 88, -419, -419, -419, -419,
	88, -196, 23, -196, -196, -419, -261, -191, -199, -228,
	17, -241, 52, 352, -252, -251, 56, 48, -249, 20,
	50, 20, 31, -266, 88, 151, 88, -419, -419, 88,
	58, 221, -419, -199, -182, -181, 77, 78, -183, 77,
	-181, 67, 67, -256, 88, -264, -169, -199, -199, 221,
	119, -418, -150, -162, -148, 13, 90, 90, -384, -403,
	660, 661, 32, 96, -351, -351, 137, 137, -191, 87,
	-330, 90, -330, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -191, -191, -191, -191, -372, 87, 20,
	-145, 87, 151, 89, -255, -255, 277, 162, -351, 654,
	283, 283, -351, -351, -351, -116, -115, 676, 89, -419,
	88, -338, 523, 526, -145, -157, -157, -256, 89, -380,
	523, -386, -294, -294, -294, -294, 96, 98, -419, 521,
	74, 524, -419, -330, -145, -145, -145, -235, 90, -145,
	-145, 96, 96, -419, -145, -210, -145, -419, -179, -178,
	-180, 637, 119, 32, -314, -419, -212, 275, -101, -100,
	-99, 15, -419, -145, -145, -145, -145, -145, -145, -145,
	-418, 67, 19, 17, -418, -418, -303, -228, -229, 18,
	20, -242, 54, -240, 53, -240, -251, 20, 20, 90,
	20, 90, 137, -275, -145, -215, 58, -11, -294, -213,
	-294, -230, -145, 87, -145, -159, -199, -199, -145, -205,
	490, 492, 493, 494, 491, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 495, 469, 108, 110, 109,
	470, 471, 472, 346, 517, 518, 512, 515, 516, 514,
	513, 361, 362, 473, 474, 475, 111, 112, 113, 114,
	115, 116, 117, 476, 479, 477, 480, 481, 482, 487,
	488, 483, 484, 485, 486, 489, 506, 507, 508, 509,
	510, 511, 616, 617, 618, 619, 620, 621, 622, 623,
	90, 90, 87, -145, 89, 89, -256, -371, -59, 89,
	-257, -255, 96, 89, 278, -214, -418, 90, -351, -351,
	-351, 96, 96, -302, -419, 88, -294, -405, -373, 527,
	527, -419, 26, -379, -378, -296, 87, 78, 63, 522,
	525, -419, -419, 88, -419, -419, -419, 89, 89, -419,
	-419, -419, 88, -419, -178, -180, -419, 77, -159, -230,
	20, -98, 300, 302, -98, -419, 88, -419, -419, 88,
	-419, 88, -419, -419, -258, -419, -294, 245, 20, 20,
	-258, -258, -198, -229, -108, -107, -106, 553, -145, -210,
	-243, 55, 77, 122, 90, 90, 90, 13, -213, 221,
	-235, -255, -176, 383, -230, -419, -255, 89, 26, 89,
	678, 137, 89, -214, -125, -418, 274, -302, 90, 90,
	-115, -118, -11, 88, 151, -255, -191, 63, -145, -210,
	-419, 77, 534, 637, -93, -92, -89, 648, 674, -210,
	-95, -95, -145, -145, -145, 88, -419, -419, -419, -108,
	88, -105, -104, -294, 77, 122, -267, -294, 89, -419,
	-418, -235, 89, -239, -11, 87, -3, 274, -326, -376,
	-327, -328, -5, -6, -352, -83, 523, -378, -356, -296,
	90, 96, 89, 523, -419, -419, -91, 145, 646, 612,
	-146, -157, -154, 220, -419, 88, -419, 88, -419, 88,
	-294, 245, -106, 88, 26, -303, -177, -175, -294, 576,
	-396, -395, 519, -406, -402, 119, 143, 101, -404, 614,
	570, 128, 129, -83, -145, 87, -419, -84, 289, 631,
	-387, 524, -91, 647, 590, 565, 590, 565, -145, -145,
	-145, -104, -418, -419, 88, 23, -318, -61, 587, -393,
	-394, 77, -397, 389, 586, 607, 119, 90, 89, -255,
	250, -380, 525, 142, -419, 88, -419, 88, -419, -94,
	-175, 583, -331, -159, -394, 77, -393, 77, 14, 13,
	-4, 677, 89, 291, -91, -145, -145, -419, -60, 27,
	-176, -392, 258, 253, 256, 33, -392, 96, -4, -419,
	-419, 587, 252, 32, 119, -159, -179, -178, -178,
}

var yyDef = [...]int{
	913, -2, -2, 915, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 913, 913, 913, 0, 913,
	0, 0, 913, -2, -2, 913, 1530, 0, 913, 0,
	0, 0, 0, 0, -2, 826, 832, 0, 841, -2,
	0, 0, 913, 913, 2099, 2099, 908, 0, 0, 0,
	0, 0, 913, 913, 913, 913, 1387, 53, 913, 0,
	88, 89, 861, 862, 863, 68, 0, 2097, 914, 1,
	3, 74, 78, 0, 0, 0, 61, 1396, 0, 81,
	0, 0, 917, 0, 0, 1513, 913, 913, 0, 129,
	130, 131, 0, 0, 0, 913, 0, -2, 135, -2,
	164, 165, 166, 0, 171, 625, 527, 579, 525, 564,
	-2, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 403, 403, 0, 0, -2,
	513, 513, 513, 1515, 0, 0, 0, 561, 465, 403,
	403, 403, 0, 403, 403, 403, 403, 0, 0, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 1414, 170, 1531, 1528,
	1529, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 0,
	1507, 0, 738, 1016, 0, 0, 743, 0, 0, 746,
	747, 815, 749, 750, 815, 0, 815, 815, 815, 815,
	0, 0, 0, 760, 0, 0, 0, 0, 812, 0,
	776, 777, 0, 812, 812, 812, 0, 786, 818, 0,
	0, 792, 815, 815, 795, 796, 2100, 0, 2100, 2100,
	1498, 0, 809, 807, 821, 822, 43, 825, 828, 829,
	830, 831, 834, 0, 845, 848, 1524, 1525, 0, 850,
	857, 874, 875, 0, 909, 910, 48, 1164, 0, 1038,
	1043, 1054, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077,
	0, 0, 0, 0, 1082, 1083, 0, 0, 0, 0,
	0, 1145, 1091, 0, 0, 0, 0, 1360, 0, 0,
	1321, 1321, 1179, 1321, 1323, 1323, 1738, 1874, 1882, 2004,
	1700, 1705, 1706, 1707, 1997, 1998, 1999, 2000, 2040, 2041,
	2045, 1798, 0, 0, 0, 2096, 1835, 1843, 1844, 1868,
	1969, 2025, 1717, 1863, 1934, 1795, 1817, 1818, 1951, 1952,
	1839, 1840, 1821, 1833, 1836, 1824, 1825, 1827, 1829, 1834,
	1841, 1847, 1826, 1846, 1845, 0, 1822, 1823, 1828, 1838,
	1842, 1830, 1831, 1832, 1837, 1848, 0, 0, 0, 0,
	0, 1260, 1261, 1262, 1263, 0, 0, 0, 0, 0,
	0, 0, 295, 296, 1373, 1374, 46, 47, 1163, 1494,
	1323, 1323, 1323, 1323, 1323, 1105, 1106, 1107, 1108, 1109,
	1133, 1134, 1140, 1141, 1946, 1947, 1948, 1949, 1779, 2034,
	1787, 1788, 1929, 1930, 1800, 1801, 2071, 2072, -2, -2,
	-2, 236, 237, 238, 239, 240, 241, 242, 243, 0,
	1742, 2015, 2016, 232, 0, 0, 300, 301, 297, 298,
	299, 1147, 1148, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 289,
	290, 291, 292, 293, 294, 2099, 0, 884, 0, 0,
	0, 0, 0, 1396, 0, 1388, 1387, 66, 0, -2,
	0, 0, 0, 0, 50, 0, 55, 973, 916, 80,
	79, 1445, 0, 0, 0, 62, 1397, 70, 72, 1398,
	0, 918, 919, 0, 949, 953, 0, 0, 0, 1514,
	1513, 1513, 105, 0, 0, 106, 126, 127, 128, 0,
	0, 112, 113, 1500, 1501, 132, 0, 0, 182, 183,
	0, 44, 430, 0, 178, 935, 0, 423, 362, 0,
	1414, 0, 0, 0, 0, 0, 913, 0, 1508, 159,
	160, 167, 168, 169, 403, 403, 403, 576, 0, 0,
	170, 170, 534, 535, 536, 0, 0, -2, 428, 0,
	514, 0, 0, 417, 417, 421, 419, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	404, 0, 574, 575, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 1517, 0, 551, 552, 0, 0,
	0, 403, 403, 0, 0, 0, 0, 403, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 1436, 0,
	0, 0, 0, -2, 0, 730, 0, 0, 0, 1509,
	1509, 0, 737, 0, 739, 1427, 741, 744, 745, 748,
	0, 0, 751, 0, 812, 812, 810, 811, 753, 754,
	755, 756, 815, 0, 0, 412, 413, 414, 812, 815,
	0, 815, 815, 815, 815, 812, 812, 812, 815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2100, 818,
	815, 815, 0, 815, 0, 787, 0, 788, 789, 790,
	793, 794, 797, 2101, 2102, 1526, 1527, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 2100, 2100, 801, 805, 1499, 827, 833, 835,
	836, 0, 0, 846, 849, 868, 52, 1786, 856, 52,
	858, 859, 860, 887, 888, 893, 0, 0, 0, 0,
	899, 900, 901, 902, 0, 0, 905, 906, 907, 0,
	0, 0, 0, 0, 1036, 0, 0, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 1078, 1079, 1080, 1081,
	1084, 0, 1096, 0, 1098, 1369, -2, 0, 0, 0,
	1089, 1090, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 1177, 0, 1178, 1180, 1181, 0, 1182, 923,
	923, 923, 923, 923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 933, 933, 0,
	0, 225, 226, 227, 228, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 302, 250, 251, 252,
	1163, 0, 0, 0, 49, 876, 877, 0, 999, 1519,
	0, 0, 0, 929, 0, 60, 69, 71, 1396, 64,
	1396, 0, 0, 0, -2, -2, 936, 942, 943, 944,
	945, 946, 57, 2098, 58, 0, 77, 0, 51, 0,
	0, 0, 0, 376, 1448, 0, 0, 1389, 1390, 1393,
	0, 950, 1880, 954, 0, 956, 957, 0, 0, 103,
	0, 1015, 0, 0, 0, 114, 0, 116, 117, 0,
	0, 0, 387, 1502, 1503, 1504, -2, 410, 0, 387,
	371, 310, 311, 312, 362, 314, 362, 362, 362, 362,
	376, 376, 376, 376, 345, 346, 347, 348, 349, 0,
	0, 331, 362, 362, 362, 362, 352, 353, 354, 355,
	356, 357, 358, 359, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 364, 364, 364, 364, 364, 368, 368,
	0, 45, 0, 940, 941, 391, 0, 1393, 0, 0,
	1436, 1511, 1521, 0, 0, 0, 1511, 137, 0, 0,
	0, 577, 636, 528, 565, 578, 0, 531, 532, -2,
	0, 0, 513, 0, 515, 0, 411, 0, -2, 0,
	421, 0, 417, 421, 418, 421, 409, 422, 555, 556,
	557, 0, 559, 560, 666, 985, 0, 0, 0, 0,
	0, 672, 673, 674, 0, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 0, 0, 0, 515, 0, 562,
	0, 0, 467, 468, 469, 0, 0, 472, 473, 474,
	475, 0, 0, 478, 479, 480, 1002, 1003, 481, 482,
	507, 508, 509, 483, 484, 485, 486, 487, 488, 489,
	501, 502, 503, 504, 505, 506, 490, 491, 492, 493,
	494, 495, 498, 0, 152, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 932, 1017, 1532, 1533,
	740, 0, 1428, 0, 1431, 1432, 1433, 1434, 1435, 816,
	817, 0, 415, 416, 815, 815, 757, 802, 0, 815,
	761, 803, 762, 764, 763, 765, 778, 779, 815, 768,
	813, 814, 769, 770, 771, 772, 773, 774, 775, 798,
	780, 781, 782, 785, 783, 784, 819, 0, 823, 824,
	799, 800, 0, 0, 839, 840, 0, 847, 871, 869,
	870, 872, 864, 865, 866, 867, 0, 873, 0, 0,
	890, 99, 895, 896, 897, 898, 911, 904, 1165, 1033,
	1034, 1035, 0, 1037, 1040, 0, 1149, 1151, 1042, 1044,
	1160, 1161, 1162, 0, 0, 0, 0, 0, 1048, 1052,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1074, 1337, 1338, 1339, 1093, 303, 304, 0,
	1094, 0, 0, 0, 0, 0, 0, 0, 1164, 1095,
	0, 947, 0, 0, 1367, 1364, 0, 0, 0, 1322,
	1324, 0, 0, 0, 0, 924, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1340, 0, 0, 0,
	0, 0, 1360, 0, 1100, 1101, 1102, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 0, 0, 1520, 0,
	147, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 1265,
	1266, 1267, 42, 0, 0, 0, 934, 1371, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 879, 880, 882, 0, 1019, 0,
	1000, 0, 0, 885, 886, 0, 928, 0, 931, 63,
	65, 0, 958, 937, 59, 54, 0, 0, 977, 1446,
	376, 1468, 0, 385, 385, 382, 1399, 1400, 0, 1392,
	1394, 1395, 82, 955, 951, 0, 1031, 0, 0, 1014,
	0, 961, 963, 964, 965, 997, 0, 968, 969, 0,
	0, 0, 0, 0, 101, 1016, 107, 0, 115, 0,
	0, 120, 121, 108, 109, 110, 111, 0, 625, -2,
	462, 184, 186, 187, 188, 179, -2, 374, 372, 373,
	313, 376, 376, 339, 340, 341, 342, 343, 344, 0,
	0, 332, 333, 334, 335, 324, 0, 325, 326, 327,
	366, 0, 328, 329, 0, 330, 429, 0, 1401, 392,
	393, 395, 403, 0, 398, 399, 0, 403, 403, 0,
	424, 425, 0, 1393, 1418, 0, 0, 0, 1522, 1521,
	1521, 1521, 0, 172, 173, 174, 175, 176, 177, 661,
	0, 0, 637, 659, 660, 170, 0, 0, 180, 517,
	516, 0, 693, 0, 427, 0, 0, 421, 421, 406,
	407, 558, 0, 0, 668, 669, 670, 671, 0, 0,
	0, 544, 456, 0, 545, 546, 515, 517, 0, 0,
	387, 470, 471, 476, 477, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 592, 593,
	596, 598, 599, 600, 519, 606, 595, 597, 601, 602,
	603, 519, 607, 608, 609, 610, 613, 615, 616, 617,
	519, 623, 612, 614, 618, 619, 620, 519, 624, 1415,
	1416, 1417, 0, 0, 731, 0, 0, 453, 97, 1510,
	736, 1429, 742, 1430, 812, 767, 804, 812, 759, 766,
	791, 837, 838, 843, 851, 852, 853, 854, 855, 894,
	0, 0, 0, 0, 903, 0, 0, 1041, 1150, 1152,
	1045, 0, 1049, 1053, 0, 0, 0, 1099, 1097, 1371,
	0, 0, 0, 1146, 0, 0, 1168, 1169, 0, 0,
	0, 1365, 0, 0, 1175, 0, 1325, 1326, 1183, 0,
	0, 0, 0, 0, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1387, 0, 0, 0, 0, 0,
	1204, 1205, 1206, 1207, 1208, 0, 1210, 0, 1211, 0,
	0, 0, 0, 1218, 1219, 1221, 0, 0, 1224, 1225,
	0, 0, 1226, 0, 0, 0, 1230, 0, 0, 0,
	0, 1239, 1240, 1241, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1253, 1254, 0, 1128, 0,
	0, 1128, 0, 1166, 933, 0, 1327, 1328, 1329, 1330,
	1331, 0, 0, 0, 0, 0, 0, 1287, 1288, 1290,
	0, 0, 1293, 0, 1295, 0, 1493, 878, 881, 883,
	971, 1020, 1021, 0, 0, 0, 0, 1001, 1518, 926,
	927, 930, 979, 0, 1375, 0, 0, 958, 1031, 959,
	0, 938, 56, 974, 0, 1450, 1449, 1462, 1475, 385,
	385, 379, 380, 386, 381, 383, 384, 1391, 0, 1396,
	0, 1486, 0, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 1004, 0, 0, 1007, 0, 0, 0,
	0, 998, 969, 0, 970, 0, -2, 0, 0, 95,
	96, 0, 0, 0, 118, 119, 0, 0, 125, 388,
	389, 161, 170, 464, 185, 437, 0, 0, 309, 375,
	336, 337, 338, 0, 360, 0, 0, 0, 0, 458,
	133, 1405, 1404, 403, 403, 394, 0, 397, 0, 0,
	0, 1523, 363, 426, 0, 151, 0, 0, 0, 0,
	0, 157, 631, 0, 0, 638, 0, 0, 0, 526,
	0, 537, 538, 0, 665, -2, 727, 391, 0, 405,
	408, 986, 0, 0, 539, 0, 542, 543, 457, 517,
	548, 549, 563, 550, 499, 500, 497, 0, 0, 1437,
	1438, 1443, 1441, 1442, 138, 584, 586, 585, 589, 0,
	0, 0, 521, 0, 521, 0, 521, 521, 582, 0,
	453, 1401, 0, 735, 454, 455, 815, 815, 889, 100,
	0, 892, 0, 0, 0, 0, 1046, 1050, 1332, 1358,
	362, 362, 1345, 362, 368, 1348, 362, 1350, 362, 1353,
	362, 1356, 1357, 0, 0, 0, 948, 0, 0, 1174,
	1368, 0, 0, 1184, 1185, 1186, 1187, 1188, 1362, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 150, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 1127, 0, 1129, 1130, 0, 0, 1256,
	0, 0, 1268, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1022, 1027, 1027, 1027, 0,
	0, 0, 1505, 1506, 1376, 1377, 1031, 1378, 960, 939,
	978, 1468, 0, 1461, 0, -2, 1470, 0, 0, 0,
	1476, 377, 378, 952, 83, 1032, 86, 0, 1486, 1495,
	0, 1477, 1488, 1490, 0, 0, 0, 1482, 0, 1031,
	962, 993, 995, 0, 990, 1005, 1006, 1008, 0, 1010,
	0, 1012, 1013, 973, 967, 0, 103, 0, 1031, 1031,
	102, 0, 1018, 122, 123, 124, 463, 189, 194, 0,
	0, 0, 199, 0, 201, 0, 0, 0, 206, 207,
	403, 403, 438, 0, 306, 308, 0, 0, 192, 376,
	0, 376, 0, 367, 369, 0, 439, 459, 1402, 1403,
	0, 0, 396, 400, 401, 402, 0, 1512, 153, 0,
	0, 0, 634, 0, 662, 0, 0, 0, 0, 0,
	0, 181, 518, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 0, 403, 0, 0, 0, 403, 403, 403,
	0, 719, 390, 0, 0, 690, 687, 540, 0, 230,
	231, 233, 0, 0, 0, 0, 0, 547, 973, 1419,
	1420, 1421, 0, 1440, 1444, 141, 0, 0, 0, 0,
	594, 604, 0, 520, 605, 611, 621, 622, 732, 733,
	734, 98, 752, 758, 891, 912, 1039, 1047, 1051, 0,
	0, 0, 0, 1359, 1343, 376, 1346, 1347, 1349, 1351,
	1352, 1354, 1355, 1087, 1088, 1092, 0, 1171, 0, 1173,
	1366, 0, 1396, 0, 0, 0, 1202, 0, 0, 0,
	1213, 1212, 1214, 0, 1216, 1217, 1222, 1223, 1227, 0,
	1229, 1231, 1232, 0, 0, 0, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 0, 1121, 1124, 1255,
	1131, 1132, 1137, 1258, 0, 0, 1167, 1270, 0, 1275,
	0, 0, 1281, 0, 1285, 0, 1291, 1292, 1294, 1296,
	0, 0, 0, 0, 0, 999, 980, 67, 1378, 1380,
	0, 1455, 1453, 1453, 1463, 1464, 0, 0, 1471, 0,
	0, 0, 0, 87, 0, 0, 0, 1491, 0, 0,
	0, 0, 104, 1387, 987, 994, 0, 0, 988, 0,
	989, 1009, 1011, 966, 0, 1031, 1031, 93, 94, 0,
	195, 0, 197, 223, 224, 0, 200, 202, 203, 204,
	210, 211, 212, 205, 0, 0, 305, 307, 0, 0,
	350, 361, 351, 0, 0, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 973, 154, 155, 156, 626, 0, 636,
	0, 975, 0, 629, 0, 529, 0, 0, 0, 403,
	403, 403, 0, 0, 0, 0, 704, 0, 0, 667,
	0, 675, 0, 0, 0, 234, 235, 0, 1439, 583,
	0, 139, 140, 0, 0, 588, 522, 523, 1085, 0,
	0, 0, 1086, 1344, 0, 0, 0, 0, 1363, 0,
	0, 0, 0, 1209, 0, 0, 0, 1235, 0, 0,
	0, 656, 657, 0, 1299, 1126, 1387, 0, 1128, 1138,
	1139, 0, 1128, 1269, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 0, 0, 0, 1019, 1380, 1385, 0,
	0, 1458, 0, 1451, 1454, 1452, 1465, 0, 0, 1472,
	0, 1474, 0, 1496, 1497, 1489, 0, 1481, 1484, 1480,
	1483, 1396, 991, 0, 996, 0, 1387, 92, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 209, 0, 0, 365, 370, 0, 0, 0, 627,
	0, 976, 639, 630, 0, 717, 0, 721, 0, 0,
	0, 724, 725, 726, 703, 0, 707, 431, 691, 688,
	689, 541, 0, 142, 143, 0, 0, 0, 1333, 0,
	1336, 1170, 1172, 0, 1199, 1200, 1201, 1341, 1342, 1215,
	1228, 1233, 0, 1236, 0, 0, 1237, 0, 658, 1117,
	0, 0, 1135, 1136, 0, 1271, 0, 1276, 1277, 0,
	1282, 0, 1286, 1297, 0, 1024, 981, 982, 1029, 1030,
	0, 0, 972, 1385, 85, 1386, 1383, 0, 1381, 1379,
	1447, 0, 1456, 1457, 1466, 1467, 1473, 0, 1479, 0,
	90, 0, 0, 0, 1396, 196, 0, 215, 0, 635,
	0, 638, 628, 715, 716, 0, 728, 720, 722, 723,
	705, -2, 1422, 0, 0, 0, 590, 1334, 0, 0,
	1238, 0, 654, 655, 1125, 1118, 0, 1103, 1104, 1122,
	1257, 1259, 0, 0, 0, 0, 1023, 1025, 1026, 84,
	0, 1382, 1143, 0, 1459, 1460, 1487, 1485, 992, 999,
	0, 91, 444, 437, 1422, 0, 0, 0, 708, 709,
	710, 711, 712, 713, 714, 580, 1424, 144, 145, 510,
	511, 512, 138, 0, 1176, 1234, 1119, 0, 0, 0,
	0, 1115, 1116, 0, 1272, 0, 1278, 0, 1283, 0,
	983, 984, 1384, 0, 0, 640, 0, 642, 0, -2,
	432, 445, 0, 190, 216, 217, 0, 0, 220, 221,
	222, 213, 214, 134, 0, 0, 729, 0, 1425, 1426,
	141, 0, 0, 1110, 1111, 1112, 1113, 1114, 0, 0,
	0, 1144, 1123, 641, 0, 0, 387, 0, 651, 433,
	434, 0, 440, 441, 442, 443, 218, 219, 663, 0,
	0, 587, 1335, 0, 1273, 0, 1279, 0, 1284, 0,
	643, 644, 652, 0, 435, 0, 436, 0, 0, 0,
	632, 0, 663, 1423, 1120, 0, 0, 1142, 0, 653,
	649, 446, 448, 449, 0, 0, 447, 664, 633, 1274,
	1280, 0, 450, 451, 452, 645, 646, 647, 648,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 679,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:638
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:643
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:683
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:689
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:714
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:720
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:726
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:745
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:755
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:761
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:895
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:907
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:928
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:932
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:962
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:966
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:986
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1000
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1010
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1020
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1033
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1039
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1045
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1055
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1059
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1063
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1067
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1073
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1077
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1081
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1087
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1091
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1097
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1107
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1111
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1115
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1129
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1139
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1143
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1147
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1176
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1185
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1189
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1215
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1225
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1231
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1251
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1257
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1273
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1302
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1309
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1316
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1327
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1338
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1344
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1348
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1352
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1384
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1390
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1400
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1410
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1414
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1420
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1435
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1467
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1476
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1562
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1568
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1584
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1588
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1592
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1598
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1602
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1622
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1628
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1633
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1638
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1644
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1739
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1747
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1760
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Armscii8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = ASCIIStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Big5Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = UBinaryStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp1250Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp1251Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Cp1256Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Cp1257Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Cp850Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Cp852Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Cp866Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Cp932Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Dec8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = EucjpmsStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = EuckrStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Gb18030Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Gb2312Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = GbkStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Geostd8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = GreekStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = HebrewStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Hp8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Keybcs2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Koi8rStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Koi8uStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Latin1Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Latin2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Latin5Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Latin7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = MacceStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = MacromanStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = SjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Swe7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Tis620Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Ucs2Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = UjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = Utf16Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = Utf16leStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = Utf32Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = Utf8mb4Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = Utf8Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1980
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1987
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1991
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1995
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1999
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2248
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2257
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2308
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2312
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2368
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2382
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2391
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2397
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2401
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2416
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2420
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2424
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2428
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2432
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2436
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2452
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2456
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2460
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2464
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2468
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[2].str
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = "key"
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2535
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2545
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2549
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2555
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2559
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2565
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2569
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2575
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2581
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2593
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2597
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2606
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2612
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2628
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2632
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2637
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2641
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2647
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2659
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2663
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2667
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2671
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2675
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2698
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2707
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2716
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2722
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2736
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2834
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2838
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2842
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2846
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2850
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2854
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2858
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2862
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2866
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2930
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2948
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2952
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2961
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2965
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2969
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2977
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2983
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3125
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3392
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3509
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3536
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3545
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3553
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3562
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3569
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3581
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3590
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3605
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3619
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3623
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3629
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3635
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3641
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3645
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3651
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3655
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3661
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3667
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3673
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3679
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3703
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3709
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3715
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3719
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3723
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3729
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3733
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3738
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3742
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3747
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3751
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3757
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3761
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3765
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3769
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3773
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3777
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3781
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3785
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3789
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3793
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3797
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3801
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3805
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3809
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3813
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3817
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3821
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3825
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3829
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3833
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3837
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3841
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3850
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3854
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3860
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3864
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3870
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3875
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3879
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3884
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3889
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3894
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3899
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3904
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3910
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3916
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3921
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3927
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3933
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3943
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3948
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3952
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3957
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3962
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3967
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3972
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3978
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3984
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3991
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3998
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4005
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4023
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4029
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4035
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4041
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4047
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4053
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4065
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4087
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4091
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4142
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4288
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4292
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Show{&ShowBasic{Command: DMLJobs, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4336
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4352
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4368
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4391
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4403
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = "extended "
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4461
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4465
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4475
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4552
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4558
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4568
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4572
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4576
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4598
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4603
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4615
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4620
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4624
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4628
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4632
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4636
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4640
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4644
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4649
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4653
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4657
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4661
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = yyDollar[1].str
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = yyDollar[1].str
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = yyDollar[1].str
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4681
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4685
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4689
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4693
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4712
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4716
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4722
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4738
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4744
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4748
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4754
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4760
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4764
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4768
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4772
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4778
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4788
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4794
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4798
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4802
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4806
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4883
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4887
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4891
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4896
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4905
		{
			setAllowComments(yylex, true)
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4909
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4915
		{
			yyVAL.strs = nil
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4942
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = SQLCacheStr
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4965
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4969
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4979
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4988
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4994
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4998
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5007
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.strs = nil
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5028
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = SQLCacheStr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = DistinctStr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = DistinctStr
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = StraightJoinHint
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5064
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5068
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5074
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5078
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5082
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5086
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5091
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5106
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5111
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5115
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5121
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5127
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5131
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5141
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5145
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5149
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5159
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5163
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5169
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5173
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5182
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5191
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5197
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5201
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5207
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5211
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5217
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5221
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5225
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5235
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5252
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5256
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5260
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5264
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5270
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5272
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5282
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5284
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5287
		{
			yyVAL.empty = struct{}{}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.empty = struct{}{}
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5292
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5313
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5317
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5321
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5327
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5333
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5337
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5341
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5345
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5351
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5355
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5365
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5379
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5385
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5400
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5404
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5410
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5414
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5418
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5422
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5427
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5431
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5435
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5439
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5729
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5733
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5739
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5749
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5753
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5757
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5763
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5767
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5774
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5778
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5782
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5786
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5790
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5796
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5800
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5804
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5808
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5812
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5831
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5837
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5841
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5850
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5855
		{
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5858
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5864
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5870
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5874
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5886
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5892
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5896
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5902
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5906
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5912
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5916
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5928
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5934
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5938
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5944
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5950
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = ""
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5970
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5974
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5981
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5985
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5989
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5993
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5999
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6003
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6007
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6011
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6015
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6019
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6023
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6029
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6033
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6037
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6044
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6050
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6616
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6622
		{
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6624
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6628
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6632
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6636
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6640
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6644
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6648
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6652
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6656
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6660
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6664
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6670
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6674
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6678
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6682
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6686
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6690
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6694
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6698
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6702
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6757
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6761
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6765
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6769
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6773
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6797
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6801
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6807
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6811
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6815
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6819
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6823
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6837
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6841
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6845
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6849
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6853
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6857
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6861
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6865
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6871
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6889
		{
			yyVAL.str = string("")
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6893
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6899
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6903
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6909
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6924
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6928
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6932
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6936
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6942
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6946
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6961
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6965
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6975
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6990
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6996
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7000
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7009
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7018
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7024
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7030
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7034
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7040
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7045
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7049
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7053
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7062
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7068
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7072
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7076
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7085
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7089
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7093
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7097
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7107
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7111
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7115
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7119
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7125
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7129
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7133
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7137
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7142
		{
			yyVAL.str = ""
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7146
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7150
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7159
		{
			yyVAL.str = ""
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7163
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7178
		{
			yyVAL.str = ""
		}
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7182
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7187
		{
			yyVAL.str = "cascaded"
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7191
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7195
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7204
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7208
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7214
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7218
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7222
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7226
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7230
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7234
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7244
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7250
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7256
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7262
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7271
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7275
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7280
		{
			yyVAL.str = ""
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7284
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7290
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7294
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7300
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7304
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7308
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7313
		{
			yyVAL.str = ""
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7317
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7321
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7326
		{
			yyVAL.str = ""
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7330
		{
			yyVAL.str = " header"
		}
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7335
		{
			yyVAL.str = ""
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7339
		{
			yyVAL.str = " manifest on"
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7343
		{
			yyVAL.str = " manifest off"
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7348
		{
			yyVAL.str = ""
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7352
		{
			yyVAL.str = " overwrite on"
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7356
		{
			yyVAL.str = " overwrite off"
		}
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7362
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7367
		{
			yyVAL.str = ""
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7371
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7381
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7387
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7391
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7396
		{
			yyVAL.str = ""
		}
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7400
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7406
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7410
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7429
		{
			yyVAL.str = ""
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7433
		{
			yyVAL.str = " optionally"
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7446
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7450
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7454
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7458
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7462
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7468
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7472
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7476
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7480
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7489
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7495
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7499
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7505
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7509
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7515
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7519
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7524
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7534
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7538
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7544
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = "charset"
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7561
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7565
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7569
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7580
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7583
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7590
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7598
		{
			yyVAL.empty = struct{}{}
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7600
		{
			yyVAL.empty = struct{}{}
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7602
		{
			yyVAL.empty = struct{}{}
		}
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7606
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7615
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7622
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7626
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7632
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7636
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7643
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7649
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7653
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7659
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7663
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7670
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8261
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8270
		{
			decNesting(yylex)
		}
	case 2099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8275
		{
			skipToEnd(yylex)
		}
	case 2100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8280
		{
			skipToEnd(yylex)
		}
	case 2101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8284
		{
			skipToEnd(yylex)
		}
	case 2102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8288
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
