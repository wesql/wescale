// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const PAUSE = 57638
const RESUME = 57639
const SCHEMA_MIGRATION = 57640
const VITESS_THROTTLER = 57641
const DML_JOB = 57642
const DETAILS = 57643
const TIME_PERIOD = 57644
const BEGIN = 57645
const START = 57646
const TRANSACTION = 57647
const COMMIT = 57648
const ROLLBACK = 57649
const SAVEPOINT = 57650
const RELEASE = 57651
const WORK = 57652
const CONSISTENT = 57653
const SNAPSHOT = 57654
const BIT = 57655
const TINYINT = 57656
const SMALLINT = 57657
const MEDIUMINT = 57658
const INT = 57659
const INTEGER = 57660
const BIGINT = 57661
const INTNUM = 57662
const REAL = 57663
const DOUBLE = 57664
const FLOAT_TYPE = 57665
const FLOAT4_TYPE = 57666
const FLOAT8_TYPE = 57667
const DECIMAL_TYPE = 57668
const NUMERIC = 57669
const TIME = 57670
const TIMESTAMP = 57671
const DATETIME = 57672
const YEAR = 57673
const CHAR = 57674
const VARCHAR = 57675
const BOOL = 57676
const CHARACTER = 57677
const VARBINARY = 57678
const NCHAR = 57679
const TEXT = 57680
const TINYTEXT = 57681
const MEDIUMTEXT = 57682
const LONGTEXT = 57683
const BLOB = 57684
const TINYBLOB = 57685
const MEDIUMBLOB = 57686
const LONGBLOB = 57687
const JSON = 57688
const JSON_SCHEMA_VALID = 57689
const JSON_SCHEMA_VALIDATION_REPORT = 57690
const ENUM = 57691
const GEOMETRY = 57692
const POINT = 57693
const LINESTRING = 57694
const POLYGON = 57695
const GEOMCOLLECTION = 57696
const GEOMETRYCOLLECTION = 57697
const MULTIPOINT = 57698
const MULTILINESTRING = 57699
const MULTIPOLYGON = 57700
const ASCII = 57701
const UNICODE = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const CODE = 57709
const COLLATION = 57710
const COLUMNS = 57711
const DATABASES = 57712
const ENGINES = 57713
const EVENT = 57714
const EXTENDED = 57715
const FIELDS = 57716
const FULL = 57717
const FUNCTION = 57718
const GTID_EXECUTED = 57719
const KEYSPACES = 57720
const OPEN = 57721
const PLUGINS = 57722
const PRIVILEGES = 57723
const PROCESSLIST = 57724
const SCHEMAS = 57725
const TABLES = 57726
const TRIGGERS = 57727
const USER = 57728
const VGTID_EXECUTED = 57729
const VITESS_KEYSPACES = 57730
const VITESS_METADATA = 57731
const VITESS_MIGRATIONS = 57732
const VITESS_REPLICATION_STATUS = 57733
const VITESS_SHARDS = 57734
const VITESS_TABLETS = 57735
const VITESS_TARGET = 57736
const VSCHEMA = 57737
const VITESS_THROTTLED_APPS = 57738
const WORKLOAD = 57739
const LASTSEENGTID = 57740
const FAILPOINTS = 57741
const DML_JOBS = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const FAST = 57755
const QUICK = 57756
const CHANGED = 57757
const MEDIUM = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_DATE = 57761
const NOW = 57762
const CURRENT_TIME = 57763
const LOCALTIME = 57764
const LOCALTIMESTAMP = 57765
const CURRENT_USER = 57766
const UTC_DATE = 57767
const UTC_TIME = 57768
const UTC_TIMESTAMP = 57769
const DAY = 57770
const DAY_HOUR = 57771
const DAY_MICROSECOND = 57772
const DAY_MINUTE = 57773
const DAY_SECOND = 57774
const HOUR = 57775
const HOUR_MICROSECOND = 57776
const HOUR_MINUTE = 57777
const HOUR_SECOND = 57778
const MICROSECOND = 57779
const MINUTE = 57780
const MINUTE_MICROSECOND = 57781
const MINUTE_SECOND = 57782
const MONTH = 57783
const QUARTER = 57784
const SECOND = 57785
const SECOND_MICROSECOND = 57786
const YEAR_MONTH = 57787
const WEEK = 57788
const REPLACE = 57789
const CONVERT = 57790
const CAST = 57791
const SUBSTR = 57792
const SUBSTRING = 57793
const SEPARATOR = 57794
const TIMESTAMPADD = 57795
const TIMESTAMPDIFF = 57796
const WEIGHT_STRING = 57797
const LTRIM = 57798
const RTRIM = 57799
const TRIM = 57800
const JSON_ARRAY = 57801
const JSON_OBJECT = 57802
const JSON_QUOTE = 57803
const JSON_DEPTH = 57804
const JSON_TYPE = 57805
const JSON_LENGTH = 57806
const JSON_VALID = 57807
const JSON_ARRAY_APPEND = 57808
const JSON_ARRAY_INSERT = 57809
const JSON_INSERT = 57810
const JSON_MERGE = 57811
const JSON_MERGE_PATCH = 57812
const JSON_MERGE_PRESERVE = 57813
const JSON_REMOVE = 57814
const JSON_REPLACE = 57815
const JSON_SET = 57816
const JSON_UNQUOTE = 57817
const COUNT = 57818
const AVG = 57819
const MAX = 57820
const MIN = 57821
const SUM = 57822
const GROUP_CONCAT = 57823
const BIT_AND = 57824
const BIT_OR = 57825
const BIT_XOR = 57826
const STD = 57827
const STDDEV = 57828
const STDDEV_POP = 57829
const STDDEV_SAMP = 57830
const VAR_POP = 57831
const VAR_SAMP = 57832
const VARIANCE = 57833
const REGEXP_INSTR = 57834
const REGEXP_LIKE = 57835
const REGEXP_REPLACE = 57836
const REGEXP_SUBSTR = 57837
const ExtractValue = 57838
const UpdateXML = 57839
const GET_LOCK = 57840
const RELEASE_LOCK = 57841
const RELEASE_ALL_LOCKS = 57842
const IS_FREE_LOCK = 57843
const IS_USED_LOCK = 57844
const LOCATE = 57845
const POSITION = 57846
const MATCH = 57847
const AGAINST = 57848
const BOOLEAN = 57849
const LANGUAGE = 57850
const WITH = 57851
const QUERY = 57852
const EXPANSION = 57853
const WITHOUT = 57854
const VALIDATION = 57855
const UNUSED = 57856
const ARRAY = 57857
const BYTE = 57858
const CUME_DIST = 57859
const DESCRIPTION = 57860
const DENSE_RANK = 57861
const EMPTY = 57862
const EXCEPT = 57863
const FIRST_VALUE = 57864
const GROUPING = 57865
const GROUPS = 57866
const JSON_TABLE = 57867
const LAG = 57868
const LAST_VALUE = 57869
const LATERAL = 57870
const LEAD = 57871
const NTH_VALUE = 57872
const NTILE = 57873
const OF = 57874
const OVER = 57875
const PERCENT_RANK = 57876
const RANK = 57877
const RECURSIVE = 57878
const ROW_NUMBER = 57879
const SYSTEM = 57880
const WINDOW = 57881
const ACTIVE = 57882
const ADMIN = 57883
const AUTOEXTEND_SIZE = 57884
const BUCKETS = 57885
const CLONE = 57886
const COLUMN_FORMAT = 57887
const COMPONENT = 57888
const DEFINITION = 57889
const ENFORCED = 57890
const ENGINE_ATTRIBUTE = 57891
const EXCLUDE = 57892
const FOLLOWING = 57893
const GET_MASTER_PUBLIC_KEY = 57894
const HISTOGRAM = 57895
const HISTORY = 57896
const INACTIVE = 57897
const INVISIBLE = 57898
const LOCKED = 57899
const MASTER_COMPRESSION_ALGORITHMS = 57900
const MASTER_PUBLIC_KEY_PATH = 57901
const MASTER_TLS_CIPHERSUITES = 57902
const MASTER_ZSTD_COMPRESSION_LEVEL = 57903
const NESTED = 57904
const NETWORK_NAMESPACE = 57905
const NOWAIT = 57906
const NULLS = 57907
const OJ = 57908
const OLD = 57909
const OPTIONAL = 57910
const ORDINALITY = 57911
const ORGANIZATION = 57912
const OTHERS = 57913
const PARTIAL = 57914
const PATH = 57915
const PERSIST = 57916
const PERSIST_ONLY = 57917
const PRECEDING = 57918
const PRIVILEGE_CHECKS_USER = 57919
const PROCESS = 57920
const RANDOM = 57921
const REFERENCE = 57922
const REQUIRE_ROW_FORMAT = 57923
const RESOURCE = 57924
const RESPECT = 57925
const RESTART = 57926
const RETAIN = 57927
const REUSE = 57928
const ROLE = 57929
const SECONDARY = 57930
const SECONDARY_ENGINE = 57931
const SECONDARY_ENGINE_ATTRIBUTE = 57932
const SECONDARY_LOAD = 57933
const SECONDARY_UNLOAD = 57934
const SIMPLE = 57935
const SKIP = 57936
const SRID = 57937
const THREAD_PRIORITY = 57938
const TIES = 57939
const UNBOUNDED = 57940
const VCPU = 57941
const VISIBLE = 57942
const RETURNING = 57943
const FORMAT_BYTES = 57944
const FORMAT_PICO_TIME = 57945
const PS_CURRENT_THREAD_ID = 57946
const PS_THREAD_ID = 57947
const GTID_SUBSET = 57948
const GTID_SUBTRACT = 57949
const WAIT_FOR_EXECUTED_GTID_SET = 57950
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57951
const FORMAT = 57952
const TREE = 57953
const VITESS = 57954
const TRADITIONAL = 57955
const VTEXPLAIN = 57956
const VEXPLAIN = 57957
const PLAN = 57958
const LOCAL = 57959
const LOW_PRIORITY = 57960
const KILL = 57961
const USERS = 57962
const NO_WRITE_TO_BINLOG = 57963
const LOGS = 57964
const ERROR = 57965
const GENERAL = 57966
const HOSTS = 57967
const OPTIMIZER_COSTS = 57968
const USER_RESOURCES = 57969
const SLOW = 57970
const CHANNEL = 57971
const RELAY = 57972
const EXPORT = 57973
const CURRENT = 57974
const ROW = 57975
const ROWS = 57976
const AVG_ROW_LENGTH = 57977
const CONNECTION = 57978
const CHECKSUM = 57979
const DELAY_KEY_WRITE = 57980
const ENCRYPTION = 57981
const ENGINE = 57982
const INSERT_METHOD = 57983
const MAX_ROWS = 57984
const MIN_ROWS = 57985
const PACK_KEYS = 57986
const PASSWORD = 57987
const FIXED = 57988
const DYNAMIC = 57989
const COMPRESSED = 57990
const REDUNDANT = 57991
const COMPACT = 57992
const ROW_FORMAT = 57993
const STATS_AUTO_RECALC = 57994
const STATS_PERSISTENT = 57995
const STATS_SAMPLE_PAGES = 57996
const STORAGE = 57997
const MEMORY = 57998
const DISK = 57999
const PARTITIONS = 58000
const LINEAR = 58001
const RANGE = 58002
const LIST = 58003
const SUBPARTITION = 58004
const SUBPARTITIONS = 58005
const HASH = 58006

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 52,
	14, 52,
	-2, 41,
	-1, 53,
	1, 162,
	682, 162,
	-2, 170,
	-1, 54,
	135, 170,
	176, 170,
	352, 170,
	-2, 524,
	-1, 64,
	36, 821,
	240, 821,
	251, 821,
	286, 835,
	287, 835,
	-2, 823,
	-1, 69,
	242, 859,
	-2, 857,
	-1, 127,
	239, 1522,
	-2, 136,
	-1, 129,
	1, 163,
	682, 163,
	-2, 170,
	-1, 140,
	136, 410,
	245, 410,
	-2, 513,
	-1, 159,
	135, 170,
	176, 170,
	352, 170,
	-2, 533,
	-1, 842,
	87, 1539,
	-2, 1384,
	-1, 843,
	87, 1540,
	221, 1544,
	-2, 1385,
	-1, 844,
	221, 1543,
	-2, 43,
	-1, 923,
	60, 935,
	-2, 950,
	-1, 1011,
	250, 44,
	255, 44,
	-2, 421,
	-1, 1098,
	1, 581,
	682, 581,
	-2, 170,
	-1, 1412,
	221, 1544,
	-2, 1385,
	-1, 1560,
	60, 936,
	-2, 955,
	-1, 1561,
	60, 937,
	-2, 956,
	-1, 1612,
	135, 170,
	176, 170,
	352, 170,
	-2, 460,
	-1, 1695,
	136, 410,
	245, 410,
	-2, 513,
	-1, 1704,
	250, 45,
	255, 45,
	-2, 422,
	-1, 2093,
	221, 1548,
	-2, 1542,
	-1, 2094,
	221, 1544,
	-2, 1540,
	-1, 2193,
	135, 170,
	176, 170,
	352, 170,
	-2, 461,
	-1, 2200,
	26, 191,
	-2, 193,
	-1, 2603,
	78, 99,
	88, 99,
	-2, 1014,
	-1, 2672,
	657, 731,
	-2, 705,
	-1, 2845,
	50, 1490,
	-2, 1484,
	-1, 3504,
	657, 731,
	-2, 719,
	-1, 3592,
	90, 663,
	95, 663,
	105, 663,
	178, 663,
	179, 663,
	180, 663,
	181, 663,
	182, 663,
	183, 663,
	184, 663,
	185, 663,
	186, 663,
	187, 663,
	188, 663,
	189, 663,
	190, 663,
	191, 663,
	192, 663,
	193, 663,
	194, 663,
	195, 663,
	196, 663,
	197, 663,
	198, 663,
	199, 663,
	200, 663,
	201, 663,
	202, 663,
	203, 663,
	204, 663,
	205, 663,
	206, 663,
	207, 663,
	208, 663,
	209, 663,
	210, 663,
	211, 663,
	212, 663,
	213, 663,
	214, 663,
	215, 663,
	216, 663,
	217, 663,
	218, 663,
	219, 663,
	-2, 1907,
}

const yyPrivate = 57344

const yyLast = 48365

var yyAct = [...]int{
	1568, 3663, 843, 853, 846, 3674, 2141, 3569, 3632, 716,
	3633, 2190, 3222, 1615, 3535, 2995, 3558, 3590, 2897, 2904,
	3079, 3485, 3469, 3417, 2122, 2946, 939, 2955, 2960, 3251,
	2957, 2956, 2954, 2959, 2958, 3252, 3253, 2858, 3467, 3209,
	1170, 2861, 2503, 2124, 917, 3281, 813, 2975, 2804, 3457,
	695, 2912, 812, 2974, 2537, 43, 698, 2862, 1906, 200,
	2859, 5, 200, 2739, 2264, 3118, 3112, 1575, 675, 3286,
	806, 1538, 726, 681, 808, 2977, 2145, 2161, 2576, 2846,
	3138, 845, 2856, 1960, 200, 2563, 2164, 2084, 807, 2723,
	696, 1673, 3104, 2637, 2252, 1043, 2227, 2669, 2232, 200,
	2638, 1114, 694, 2639, 2295, 1172, 972, 2178, 168, 2588,
	42, 2166, 2569, 940, 2165, 1562, 2555, 2539, 2089, 44,
	1975, 2081, 1914, 919, 2055, 2709, 681, 200, 1956, 681,
	2273, 3001, 2251, 154, 1143, 2234, 2153, 2630, 1702, 1006,
	921, 2312, 924, 1720, 1584, 1604, 1001, 2605, 2168, 690,
	708, 2054, 1542, 1424, 1840, 102, 1979, 106, 1351, 1336,
	1836, 942, 1845, 1933, 980, 976, 1009, 107, 1019, 1709,
	1012, 2249, 1801, 981, 2223, 1007, 1008, 2146, 1603, 703,
	1589, 957, 2224, 959, 930, 1408, 2090, 1384, 2051, 1905,
	1161, 101, 1988, 1854, 927, 1168, 172, 87, 1666, 109,
	925, 132, 137, 130, 131, 1092, 1694, 138, 952, 926,
	928, 702, 108, 86, 1428, 100, 3494, 2662, 3664, 2266,
	2267, 2268, 3520, 3210, 685, 2943, 2266, 2692, 2691, 2310,
	2660, 3165, 1352, 664, 947, 951, 3202, 1786, 97, 2965,
	3616, 97, 624, 619, 2731, 97, 95, 2732, 3521, 3256,
	133, 1432, 1045, 3515, 3516, 1921, 1920, 933, 1352, 1919,
	1936, 139, 670, 973, 1918, 1062, 1063, 1064, 1048, 1067,
	1068, 1069, 1070, 3256, 999, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 2, 1917, 934, 2963, 967, 121, 966, 918,
	686, 920, 862, 863, 864, 1916, 1569, 2965, 1022, 1889,
	1023, 998, 862, 863, 864, 1886, 623, 3611, 688, 1347,
	2962, 2969, 689, 2119, 2120, 2391, 133, 1049, 1052, 1053,
	2535, 997, 1056, 996, 995, 2565, 3255, 2842, 113, 114,
	115, 1363, 118, 1369, 2299, 127, 195, 990, 196, 97,
	1065, 613, 965, 810, 811, 941, 3516, 3636, 2682, 985,
	3255, 3570, 2808, 2963, 3600, 683, 684, 1363, 3620, 969,
	134, 3684, 156, 3618, 3631, 913, 914, 915, 916, 3654,
	3084, 923, 3598, 177, 3083, 2685, 3470, 2297, 2298, 2969,
	2243, 3604, 3605, 3619, 133, 2504, 664, 1926, 3617, 2914,
	2915, 664, 3026, 3413, 3412, 3215, 3599, 1047, 3216, 954,
	955, 1046, 3645, 2237, 167, 965, 810, 811, 979, 88,
	155, 88, 90, 3423, 3614, 3499, 3576, 2400, 3234, 3223,
	1338, 3559, 3566, 88, 2966, 2292, 3576, 88, 3422, 174,
	3233, 3595, 175, 2149, 1385, 1965, 3046, 1683, 2894, 2895,
	665, 2699, 2700, 1358, 2185, 2186, 1350, 2579, 1605, 664,
	1606, 143, 144, 166, 165, 194, 3023, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1394, 1393, 1395, 1396, 1366, 1358,
	1367, 1368, 2580, 2536, 1846, 2893, 3299, 1150, 2730, 1152,
	2397, 994, 2398, 1103, 1104, 2614, 2184, 97, 2613, 97,
	2715, 2615, 2966, 2708, 1138, 1139, 1898, 1899, 2913, 1121,
	1165, 97, 1133, 911, 1122, 97, 910, 2663, 1121, 3486,
	2916, 1134, 1120, 1122, 1119, 1106, 1127, 1149, 1151, 2626,
	2203, 2202, 1348, 1337, 3115, 2121, 2997, 3034, 664, 2572,
	2573, 2773, 3032, 989, 1091, 1901, 991, 1897, 664, 992,
	664, 2389, 1097, 678, 3637, 622, 682, 1601, 676, 3002,
	1888, 2236, 1546, 2710, 160, 141, 163, 148, 140, 2670,
	161, 162, 2274, 2990, 1547, 3638, 2695, 2313, 178, 1846,
	2149, 2991, 3666, 958, 1776, 2318, 1802, 184, 149, 1066,
	2392, 2393, 2395, 2394, 3445, 2366, 3446, 2367, 1154, 2368,
	1136, 1137, 152, 150, 145, 146, 147, 151, 1163, 1142,
	2380, 2718, 1140, 665, 142, 200, 1099, 200, 665, 1135,
	200, 200, 1141, 153, 1128, 1815, 3204, 3203, 1777, 1164,
	1778, 2369, 1072, 1071, 2998, 2317, 2999, 1147, 2315, 1550,
	2319, 1148, 2147, 2148, 1844, 994, 3397, 986, 3200, 1002,
	2277, 1153, 3260, 1003, 988, 987, 2162, 1003, 1032, 1041,
	1040, 1039, 3612, 681, 1030, 681, 681, 1038, 1037, 1036,
	1035, 1687, 1034, 1029, 620, 1042, 665, 2316, 3678, 968,
	962, 960, 1399, 1146, 1399, 681, 200, 977, 993, 2916,
	3685, 975, 1359, 1014, 1357, 1354, 1355, 1356, 1362, 1364,
	1361, 977, 1360, 992, 3643, 1131, 1015, 977, 994, 1090,
	1708, 1837, 1353, 2774, 1412, 1021, 2250, 169, 1359, 2807,
	1357, 1354, 1355, 1356, 1362, 1364, 1361, 195, 1360, 1117,
	1051, 1123, 1124, 1125, 1126, 953, 1014, 2398, 1353, 2719,
	1050, 2303, 968, 962, 960, 2722, 2302, 2338, 2936, 2337,
	2694, 134, 2341, 2342, 1000, 665, 2339, 2340, 1166, 1167,
	3493, 2661, 2343, 3199, 177, 665, 1833, 665, 1420, 2735,
	1339, 2412, 1059, 1094, 1021, 3482, 1681, 2570, 1680, 2147,
	2148, 1155, 1156, 1158, 1679, 1096, 1410, 1095, 1602, 2680,
	1834, 1677, 2540, 2542, 618, 1402, 1403, 1404, 1405, 2628,
	621, 859, 2697, 164, 859, 1416, 1033, 2619, 859, 2296,
	1329, 617, 1031, 3152, 612, 3134, 2664, 2294, 1020, 1707,
	174, 3572, 2610, 175, 1014, 1017, 1018, 2575, 977, 1806,
	3024, 3572, 1011, 1015, 1400, 1401, 3603, 3116, 2240, 1817,
	2707, 1816, 993, 2706, 1820, 1821, 194, 2512, 1818, 1819,
	1968, 1850, 1593, 2967, 2968, 3571, 1412, 3254, 1330, 1331,
	1501, 1406, 3163, 3164, 157, 3571, 2971, 158, 1788, 1787,
	1789, 1790, 1791, 1108, 91, 2191, 129, 1020, 2241, 1399,
	3602, 3254, 1093, 1396, 2892, 2239, 1989, 936, 1162, 3507,
	3232, 1847, 1848, 1851, 1849, 961, 1044, 170, 3676, 2684,
	1990, 3677, 2725, 3675, 182, 993, 3195, 2724, 1116, 1130,
	2725, 1536, 3128, 200, 2314, 2724, 1058, 681, 681, 2242,
	1132, 2967, 2968, 1910, 1144, 1855, 1570, 1572, 1346, 2238,
	2399, 1830, 200, 1607, 2971, 2759, 96, 1980, 96, 2429,
	1430, 1980, 1431, 2683, 1551, 190, 1850, 2653, 3646, 1369,
	96, 1368, 681, 3295, 96, 200, 3170, 3068, 961, 178,
	2541, 1105, 1367, 1368, 1118, 1554, 3169, 681, 184, 1537,
	2281, 1553, 1021, 1102, 200, 1557, 1717, 1803, 1144, 1804,
	921, 1434, 1805, 1716, 1706, 2286, 1847, 1848, 1851, 1849,
	171, 176, 173, 179, 180, 181, 183, 185, 186, 187,
	188, 1822, 1928, 1930, 1931, 1021, 189, 191, 192, 193,
	2286, 2293, 681, 2354, 2350, 2352, 2353, 2351, 2357, 2358,
	2291, 2289, 2355, 2356, 2290, 1412, 1929, 1021, 3686, 1987,
	1032, 681, 681, 1537, 681, 1555, 681, 681, 106, 681,
	681, 681, 681, 681, 681, 1556, 1938, 1030, 107, 2288,
	3639, 1115, 1412, 1157, 3153, 1412, 681, 1412, 200, 1543,
	1939, 1397, 1398, 1937, 932, 1530, 1507, 1508, 1509, 1510,
	1511, 1145, 1856, 1807, 1098, 1020, 3537, 3229, 200, 3230,
	109, 1014, 1017, 1018, 1366, 977, 1367, 1368, 3680, 1011,
	1015, 681, 3475, 200, 1684, 1685, 1686, 1714, 169, 1389,
	1390, 1391, 1392, 1394, 1393, 1395, 1396, 3405, 1020, 681,
	1010, 200, 1796, 1024, 1014, 3687, 1700, 1571, 1026, 1771,
	3404, 3538, 1027, 1025, 1749, 1145, 1369, 1752, 3395, 1754,
	1020, 200, 1057, 918, 1540, 1794, 1054, 3476, 200, 1693,
	1574, 920, 3245, 1028, 2404, 2405, 2406, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 681, 2086, 1712, 3244,
	1753, 1761, 1762, 1598, 1599, 1552, 3177, 1767, 1768, 862,
	863, 864, 3176, 1722, 3166, 1723, 1795, 1725, 1727, 1783,
	2740, 1731, 1733, 1735, 1737, 1739, 1710, 1710, 1711, 2944,
	1676, 2325, 2321, 2323, 2324, 2322, 2328, 2329, 1021, 1793,
	2326, 2327, 1369, 2932, 2635, 2634, 125, 1691, 2633, 2246,
	1703, 1690, 1689, 2426, 1842, 1825, 1797, 1823, 1824, 1781,
	1828, 1829, 1780, 122, 1826, 1827, 1779, 1769, 1763, 1859,
	1391, 1392, 1394, 1393, 1395, 1396, 1863, 1757, 1865, 1866,
	1867, 1868, 1760, 1782, 1759, 1872, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1371, 1857, 1858, 1758, 1884, 1885, 1729,
	1887, 1366, 1369, 1367, 1368, 2742, 1838, 195, 1862, 1113,
	2761, 1112, 1569, 1369, 2994, 1869, 1870, 1871, 170, 1985,
	1333, 3041, 670, 1682, 123, 182, 2425, 1810, 1986, 1808,
	1809, 134, 1813, 1814, 1601, 133, 1811, 1812, 3160, 670,
	997, 1020, 996, 995, 177, 3640, 1024, 1014, 2086, 2617,
	670, 1026, 2083, 2262, 2261, 1027, 1025, 2260, 2259, 2258,
	2257, 2085, 1578, 1861, 3502, 112, 190, 2561, 3665, 3627,
	1569, 681, 681, 1365, 1569, 857, 111, 1366, 110, 1367,
	1368, 2752, 2751, 2750, 681, 1883, 2744, 1569, 2748, 1882,
	2743, 2466, 2741, 200, 2561, 3565, 124, 2746, 1569, 103,
	174, 1365, 1569, 175, 3501, 1369, 2745, 3479, 1579, 3478,
	104, 171, 176, 173, 179, 180, 181, 183, 185, 186,
	187, 188, 2561, 3545, 2747, 2749, 194, 189, 191, 192,
	193, 2561, 3541, 3528, 1569, 43, 3477, 1366, 43, 1367,
	1368, 3400, 681, 3384, 1963, 1963, 1569, 1569, 1366, 3383,
	1367, 1368, 1412, 1387, 1388, 1389, 1390, 1391, 1392, 1394,
	1393, 1395, 1396, 681, 3294, 1569, 3495, 1934, 3292, 1412,
	1983, 3213, 3492, 1941, 1984, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 3241, 3650,
	1569, 3408, 1569, 3431, 681, 681, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1394, 1393, 1395, 1396, 112, 2047, 1535,
	103, 1534, 1536, 1533, 1942, 1932, 3174, 105, 111, 3159,
	110, 104, 1961, 1961, 1410, 1964, 2561, 3396, 3430, 105,
	3213, 1569, 2561, 3211, 2286, 1569, 2079, 3008, 1369, 178,
	1366, 1981, 1367, 1368, 2094, 3132, 1569, 1369, 184, 2477,
	1569, 97, 3006, 3003, 2043, 3000, 2935, 2934, 2925, 2924,
	1369, 2108, 2154, 2155, 1894, 1895, 2922, 2923, 1369, 2713,
	1537, 1935, 1385, 2041, 2734, 1911, 1569, 87, 1570, 2115,
	87, 2644, 2091, 2052, 2631, 1369, 1532, 200, 1569, 2920,
	2921, 2920, 2919, 681, 2308, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1394, 1393, 1395, 1396, 2307, 2456, 2144, 1940,
	2585, 1569, 2138, 2398, 2693, 2557, 200, 1672, 2674, 681,
	2128, 2133, 105, 2134, 2667, 2668, 2082, 2127, 1369, 200,
	105, 3648, 1569, 681, 1890, 1967, 2094, 200, 1852, 200,
	1369, 200, 200, 1792, 3582, 1569, 1369, 2093, 1974, 1976,
	1784, 2116, 3580, 1569, 2606, 1774, 681, 2052, 2561, 2560,
	2422, 1569, 2096, 2097, 1966, 1569, 3388, 2200, 1770, 1991,
	1992, 1993, 1994, 1366, 2091, 1367, 1368, 2606, 169, 1369,
	1766, 1569, 1366, 2005, 1367, 1368, 1765, 1764, 2422, 1580,
	106, 2172, 1672, 1671, 3387, 1366, 2092, 1367, 1368, 1160,
	107, 1613, 1612, 1366, 1159, 1367, 1368, 2577, 3221, 2671,
	1369, 106, 3578, 1569, 2649, 681, 2247, 2607, 2137, 1369,
	1366, 107, 1367, 1368, 3454, 1569, 2199, 2609, 1582, 2095,
	3452, 1569, 2098, 2099, 2287, 3127, 2857, 2577, 1365, 2093,
	2607, 2887, 681, 2209, 2210, 2211, 2212, 3127, 681, 3129,
	2398, 2398, 2204, 3533, 2205, 2206, 2207, 2208, 1369, 3506,
	2195, 2194, 2176, 1366, 3641, 1367, 1368, 933, 2584, 2114,
	2215, 2216, 2217, 2218, 2126, 1366, 2561, 1367, 1368, 2585,
	2585, 1366, 111, 1367, 1368, 1369, 2136, 3088, 2159, 2275,
	1369, 2922, 2286, 2198, 1581, 681, 2830, 2183, 2139, 2422,
	681, 2477, 2229, 3426, 681, 681, 2235, 1369, 1385, 3127,
	2411, 2157, 2417, 2453, 1366, 3178, 1367, 1368, 967, 2452,
	966, 2182, 2181, 2585, 2180, 2286, 2269, 2152, 1369, 2197,
	2196, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1393,
	1395, 1396, 200, 3490, 1573, 1366, 2272, 1367, 1368, 200,
	2245, 1365, 2117, 1966, 1366, 1369, 1367, 1368, 170, 1912,
	1896, 1832, 1600, 125, 1005, 182, 3179, 3180, 3181, 3449,
	1569, 3608, 2230, 1004, 2029, 200, 200, 3548, 2226, 200,
	3419, 200, 2219, 2221, 2222, 2280, 2244, 200, 2283, 2248,
	2284, 3435, 1569, 1366, 2256, 1367, 1368, 200, 1576, 2300,
	3385, 3306, 3194, 3191, 200, 1022, 190, 1023, 3172, 2230,
	2279, 2996, 3103, 1569, 2278, 3051, 3050, 1710, 2282, 1674,
	1366, 2228, 1367, 1368, 2301, 1366, 2304, 1367, 1368, 2992,
	2305, 2306, 2949, 2945, 200, 2675, 2225, 2220, 2947, 3096,
	1569, 97, 1366, 681, 1367, 1368, 2214, 2213, 1799, 1705,
	1745, 171, 176, 173, 179, 180, 181, 183, 185, 186,
	187, 188, 2311, 1366, 1701, 1367, 1368, 189, 191, 192,
	193, 2021, 2010, 2011, 2012, 2013, 2023, 2014, 2015, 2016,
	2028, 2024, 2017, 2018, 2025, 2026, 2027, 2019, 2020, 2022,
	1366, 1668, 1367, 1368, 126, 2641, 1097, 3139, 3140, 2382,
	2383, 1746, 1747, 1748, 2385, 3420, 2243, 2131, 2415, 1412,
	3660, 2094, 2420, 2386, 1369, 2423, 2640, 2424, 3182, 3658,
	3634, 1369, 2431, 3514, 1934, 2464, 2433, 2434, 2435, 2408,
	1385, 2410, 3440, 3142, 2941, 2372, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2378, 1369, 1892, 2416,
	2940, 2939, 2468, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1394, 1393, 1395, 1396, 2641, 3183, 3184, 3185, 2857, 2654,
	2409, 2373, 2457, 2458, 2459, 2460, 2461, 1369, 2463, 2879,
	3145, 2414, 2465, 2877, 2880, 1369, 2470, 2471, 2878, 2472,
	3144, 2876, 2475, 2875, 2476, 2419, 2388, 1741, 2479, 1569,
	2436, 2881, 2483, 2594, 2595, 2418, 2488, 2489, 2490, 2491,
	1893, 2396, 3510, 3421, 2093, 2143, 3276, 2451, 3275, 2502,
	1577, 2505, 2506, 2135, 2847, 2849, 3474, 3133, 1935, 2508,
	2510, 3093, 1569, 2850, 1369, 2835, 2513, 2514, 2515, 2516,
	2517, 2407, 1369, 2834, 1742, 1743, 1744, 2524, 2525, 1366,
	2526, 1367, 1368, 2529, 2531, 2138, 1366, 2533, 1367, 1368,
	200, 3091, 1569, 2092, 3120, 1369, 3274, 2545, 200, 3056,
	1569, 1385, 3119, 1963, 1381, 2428, 1382, 1369, 681, 3285,
	3287, 1369, 1366, 3123, 1367, 1368, 2844, 1831, 909, 681,
	1383, 1397, 1398, 1380, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1394, 1393, 1395, 1396, 2918, 1369, 2624, 1385, 2544,
	2645, 1369, 1366, 200, 1367, 1368, 1061, 937, 200, 3392,
	1366, 1060, 1367, 1368, 3017, 938, 3039, 1569, 1989, 2640,
	2462, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1393,
	1395, 1396, 1990, 2728, 103, 1332, 3672, 2681, 134, 2532,
	1569, 1961, 1369, 2546, 43, 104, 691, 2547, 3125, 2549,
	2581, 2562, 3196, 2599, 105, 3147, 2601, 1369, 2937, 1366,
	2376, 1367, 1368, 1369, 2154, 2155, 3587, 1366, 3491, 1367,
	1368, 2590, 2593, 2594, 2595, 2591, 681, 2592, 2596, 2365,
	2530, 1569, 200, 2558, 3415, 2509, 1569, 2600, 1369, 200,
	1366, 2571, 1367, 1368, 2917, 2598, 1543, 1369, 2140, 2364,
	2534, 1369, 1366, 681, 1367, 1368, 1366, 2666, 1367, 1368,
	681, 1537, 2627, 2629, 945, 946, 2833, 3105, 1369, 681,
	2363, 2559, 2554, 2362, 2832, 1369, 3098, 2574, 2604, 2361,
	2360, 1366, 2620, 1367, 1368, 1412, 1366, 1369, 1367, 1368,
	2359, 2492, 1569, 1369, 2349, 2402, 2690, 3094, 200, 200,
	200, 200, 200, 2348, 2347, 2608, 2346, 943, 2235, 2611,
	949, 949, 2643, 1369, 103, 2621, 2345, 2646, 2647, 2618,
	1369, 105, 2484, 1569, 2344, 104, 2336, 1366, 2335, 1367,
	1368, 3066, 2632, 2577, 2334, 3062, 2333, 2332, 2331, 2330,
	110, 3462, 1366, 1369, 1367, 1368, 3461, 3443, 1366, 2642,
	1367, 1368, 3048, 1369, 3293, 200, 200, 2688, 3291, 3047,
	3290, 112, 3283, 3192, 2650, 3124, 2655, 2656, 2657, 1369,
	2651, 3044, 111, 1366, 110, 1367, 1368, 1369, 2636, 2687,
	3122, 200, 1366, 1693, 1367, 1368, 1366, 1369, 1367, 1368,
	2950, 2270, 1688, 3282, 944, 111, 112, 2528, 3113, 3264,
	2676, 2677, 681, 1366, 2527, 1367, 1368, 111, 1369, 2557,
	1366, 2686, 1367, 1368, 3662, 3661, 3661, 2763, 2764, 2765,
	2766, 2767, 1366, 2775, 1367, 1368, 2454, 2523, 1366, 2129,
	1367, 1368, 1594, 1586, 116, 117, 2772, 2522, 3662, 3480,
	3158, 2711, 935, 125, 2738, 3, 99, 2712, 1366, 681,
	1367, 1368, 1, 2521, 2714, 1366, 1909, 1367, 1368, 10,
	1110, 2520, 2753, 2716, 1907, 1908, 1843, 9, 8, 1335,
	2717, 2519, 1334, 2755, 3162, 2720, 2768, 3597, 1366, 638,
	1367, 1368, 2118, 2737, 1541, 3635, 3593, 681, 1366, 112,
	1367, 1368, 2518, 3594, 2736, 681, 2726, 1785, 1775, 2727,
	111, 3224, 110, 2053, 1366, 1369, 1367, 1368, 3416, 2953,
	1369, 105, 1366, 2276, 1367, 1368, 3190, 2233, 1013, 159,
	2192, 2193, 1366, 2756, 1367, 1368, 681, 3561, 2754, 2809,
	120, 970, 2785, 2814, 2787, 119, 1016, 2811, 1129, 2271,
	200, 3214, 2625, 1366, 681, 1367, 1368, 2201, 1619, 1617,
	2798, 2799, 2800, 2801, 1618, 1616, 1621, 1620, 681, 1567,
	1563, 3025, 1412, 2866, 2455, 681, 681, 1412, 200, 200,
	200, 200, 200, 3067, 1564, 2777, 2082, 1900, 2082, 677,
	200, 2884, 2783, 2854, 2597, 671, 200, 197, 200, 2507,
	2172, 200, 200, 200, 2501, 1608, 2814, 1587, 3080, 1669,
	1670, 1566, 2869, 1565, 1055, 628, 2926, 2863, 2886, 2810,
	2813, 2812, 2309, 634, 2837, 924, 1417, 1891, 2172, 2172,
	2172, 2172, 2172, 2831, 2838, 2793, 2794, 2795, 2796, 2797,
	2612, 964, 956, 2130, 2860, 2548, 2825, 200, 2172, 2860,
	1366, 2172, 1367, 1368, 963, 1366, 3393, 1367, 1368, 2865,
	681, 2836, 3117, 1412, 2839, 2843, 2845, 2564, 681, 2851,
	2852, 2848, 2973, 200, 2841, 3473, 3284, 2829, 3546, 1567,
	1563, 2622, 2888, 925, 1583, 2889, 3087, 200, 2871, 2872,
	2870, 2874, 926, 2873, 1564, 2427, 2882, 1978, 1407, 2826,
	2827, 2828, 2169, 106, 3259, 1927, 1842, 2890, 700, 699,
	1369, 697, 200, 107, 1369, 200, 2550, 2868, 2896, 1560,
	1561, 1566, 2578, 1565, 3019, 1372, 2930, 2931, 847, 2538,
	2929, 2927, 2928, 1595, 2589, 2952, 2587, 1369, 2586, 2374,
	2177, 3141, 3137, 2981, 3036, 3037, 3038, 3589, 3040, 3042,
	2171, 2167, 2556, 798, 797, 709, 1369, 701, 693, 2235,
	796, 2980, 3049, 2972, 2951, 795, 3155, 3053, 3054, 3055,
	3057, 3058, 3059, 3060, 2987, 2979, 3061, 3573, 3063, 3064,
	3065, 2900, 2696, 3069, 3070, 3071, 3072, 3073, 3074, 3075,
	3076, 3077, 3078, 2993, 2500, 681, 2698, 2623, 2499, 2989,
	3012, 3085, 1349, 1559, 3089, 3013, 3090, 3092, 687, 3095,
	3097, 984, 3099, 3100, 3101, 3102, 3021, 3022, 3015, 3016,
	3108, 2498, 3027, 3028, 200, 3029, 2901, 3020, 3031, 3497,
	3033, 3030, 3035, 3004, 3005, 1369, 3007, 3082, 3009, 3010,
	2497, 2401, 3045, 1558, 3086, 1366, 2008, 1367, 1368, 1366,
	2903, 1367, 1368, 2009, 3504, 3130, 3131, 2961, 3208, 3135,
	2942, 2672, 2263, 72, 1369, 47, 3468, 3534, 2898, 794,
	791, 3261, 1366, 3262, 1367, 1368, 3263, 2805, 2806, 3517,
	200, 3518, 790, 1369, 3519, 2914, 2915, 1369, 2036, 1345,
	1342, 1366, 2899, 1367, 1368, 3610, 1369, 1902, 98, 1370,
	1369, 38, 37, 36, 35, 3111, 34, 28, 3109, 200,
	3106, 3107, 27, 26, 25, 3121, 24, 3114, 21, 2496,
	20, 31, 23, 22, 19, 2905, 1369, 18, 1425, 200,
	2172, 3126, 200, 200, 200, 2964, 3630, 3671, 3136, 1369,
	128, 3146, 681, 681, 3143, 1369, 3197, 3198, 2495, 56,
	53, 51, 1369, 136, 3148, 135, 1369, 3150, 3151, 54,
	50, 2981, 1100, 3156, 3149, 3212, 3157, 2494, 1369, 48,
	1366, 2493, 1367, 1368, 33, 1369, 32, 3218, 3219, 2980,
	2487, 1369, 17, 16, 2486, 15, 3173, 14, 3175, 681,
	681, 681, 681, 13, 2913, 1369, 3167, 3168, 12, 1366,
	1369, 1367, 1368, 11, 7, 6, 2916, 41, 1369, 40,
	2485, 30, 39, 3231, 29, 4, 3235, 2659, 1366, 2265,
	1367, 1368, 1366, 2482, 1367, 1368, 0, 0, 0, 2481,
	0, 1366, 0, 1367, 1368, 1366, 2480, 1367, 1368, 0,
	2478, 0, 0, 3246, 0, 0, 3220, 0, 0, 3201,
	0, 0, 2474, 3205, 3206, 3207, 0, 0, 3250, 2473,
	0, 1366, 3240, 1367, 1368, 2469, 0, 0, 0, 0,
	3258, 0, 0, 0, 1366, 0, 1367, 1368, 3265, 2467,
	1366, 0, 1367, 1368, 2432, 0, 0, 1366, 0, 1367,
	1368, 1366, 2421, 1367, 1368, 3236, 0, 0, 0, 0,
	0, 200, 0, 1366, 0, 1367, 1368, 0, 0, 0,
	1366, 0, 1367, 1368, 0, 0, 1366, 0, 1367, 1368,
	1412, 0, 3257, 3279, 3248, 681, 0, 681, 2902, 0,
	1366, 0, 1367, 1368, 0, 1366, 0, 1367, 1368, 0,
	0, 1963, 0, 1366, 0, 1367, 1368, 0, 0, 0,
	0, 1585, 0, 0, 1544, 0, 0, 0, 858, 0,
	0, 89, 0, 0, 0, 3302, 2863, 0, 3280, 0,
	2863, 3304, 0, 3289, 43, 0, 3288, 3298, 3296, 0,
	3300, 0, 0, 0, 0, 0, 0, 681, 0, 0,
	1675, 3394, 2860, 0, 0, 0, 0, 0, 0, 3407,
	200, 0, 0, 681, 0, 3312, 0, 0, 3414, 0,
	0, 0, 0, 0, 615, 0, 681, 3309, 3310, 1961,
	0, 3308, 0, 0, 0, 0, 0, 0, 3424, 3425,
	0, 3427, 0, 3428, 3429, 3390, 912, 3398, 3432, 3433,
	3434, 3406, 3436, 3439, 3389, 0, 922, 3391, 89, 0,
	1963, 3411, 0, 3410, 3418, 0, 0, 0, 3448, 3450,
	3451, 3453, 3455, 3456, 3458, 0, 681, 922, 0, 0,
	681, 681, 0, 0, 0, 0, 0, 3437, 3438, 978,
	0, 0, 0, 0, 0, 983, 0, 0, 3401, 3402,
	3403, 0, 0, 0, 3442, 0, 0, 0, 0, 681,
	3444, 0, 3488, 3484, 3447, 0, 0, 0, 0, 0,
	0, 2906, 0, 0, 0, 2910, 3466, 3463, 3464, 0,
	0, 3483, 2909, 1853, 3465, 0, 0, 0, 1961, 0,
	3441, 3481, 0, 0, 0, 0, 2863, 0, 0, 0,
	0, 0, 0, 0, 3487, 3472, 0, 2590, 2593, 2594,
	2595, 2591, 0, 2592, 2596, 0, 2911, 3139, 3140, 0,
	0, 2907, 0, 0, 0, 0, 2908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 0,
	0, 0, 3489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 200, 0, 0, 3508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3513, 0,
	0, 0, 0, 0, 3496, 3500, 0, 0, 3503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3529, 0,
	0, 0, 0, 0, 3530, 3531, 0, 0, 43, 0,
	0, 0, 0, 681, 3505, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 681, 3542, 3523, 0, 0,
	3524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3532, 0, 3512, 0, 681,
	681, 0, 3567, 3568, 3544, 3522, 0, 0, 3539, 0,
	3549, 0, 0, 0, 3574, 0, 3577, 3579, 3581, 3575,
	3560, 681, 3552, 3557, 0, 3554, 3553, 3551, 3556, 3555,
	0, 0, 0, 0, 43, 200, 681, 3418, 3562, 0,
	3547, 3609, 0, 0, 0, 2860, 3585, 0, 0, 0,
	0, 0, 0, 0, 3606, 3596, 3601, 3588, 0, 0,
	0, 0, 0, 0, 0, 3574, 0, 0, 3615, 0,
	3575, 3613, 1922, 1923, 1924, 1925, 0, 0, 0, 681,
	3626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3624, 0, 0, 0, 3629, 0, 0, 0, 0,
	0, 681, 0, 0, 0, 3642, 0, 0, 0, 0,
	0, 0, 3647, 3649, 3651, 0, 3644, 1420, 681, 0,
	681, 1969, 1970, 0, 1963, 0, 1972, 0, 949, 949,
	1977, 3655, 3659, 3657, 1982, 3653, 3652, 0, 0, 0,
	0, 3574, 0, 3670, 3667, 0, 3575, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 3681, 3679, 3682,
	3683, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 3673, 2042,
	0, 2044, 2045, 2046, 0, 2048, 2049, 2050, 1963, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 1961, 2080, 3656, 2087, 2088, 949, 3689, 949,
	949, 949, 949, 949, 3690, 3691, 3438, 0, 0, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 0, 2109, 2110,
	2111, 2112, 2113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 3688, 0,
	0, 0, 0, 0, 0, 0, 949, 1101, 0, 1107,
	0, 0, 1109, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2150, 2151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 1169,
	0, 1169, 1169, 0, 3628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 922,
	1409, 1414, 1415, 0, 1418, 2231, 1419, 1421, 1422, 1423,
	0, 1426, 1427, 1429, 1429, 0, 1429, 1433, 1433, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 0, 0, 0, 0, 1500, 0,
	1502, 1503, 1504, 1505, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 1433, 1433, 1433, 1433, 1433, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 3330, 3332, 3331, 3349, 3350, 3351, 3352, 3353, 3354,
	3355, 748, 0, 0, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 922, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 1650, 1653, 1654, 1655, 1656, 1657, 1658, 842, 1659,
	1660, 1662, 1663, 1661, 1664, 1665, 1638, 1639, 1640, 1641,
	1622, 1623, 1651, 0, 1625, 0, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 0, 0, 1635, 1642, 1643,
	1644, 1645, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2437, 2438,
	2439, 2440, 0, 660, 0, 0, 0, 0, 0, 680,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3336, 1425, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3344, 3345, 0,
	0, 0, 680, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 0, 0,
	0, 0, 1169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 814, 0, 727,
	818, 729, 815, 816, 0, 725, 728, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 0, 746, 747, 3329, 3333, 3334, 3335, 3346,
	3347, 3348, 3356, 3358, 779, 3357, 3359, 3360, 3361, 3364,
	3365, 3366, 3367, 3362, 3363, 3368, 3313, 3317, 3314, 3315,
	3316, 3328, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325,
	3326, 3327, 3369, 3370, 3371, 3372, 3373, 3374, 3339, 3343,
	3342, 3340, 3341, 3337, 3338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 820,
	0, 0, 824, 0, 0, 0, 826, 825, 0, 827,
	793, 792, 0, 0, 821, 822, 0, 823, 97, 0,
	0, 860, 0, 0, 0, 848, 861, 862, 863, 864,
	849, 0, 0, 850, 851, 0, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 865, 866, 0, 0, 0, 0, 1169, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 89, 1915, 0, 0, 0, 0,
	0, 0, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382,
	0, 0, 0, 0, 0, 0, 0, 2982, 2983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 0, 0, 0, 0, 0, 0, 0, 88, 45,
	46, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	2733, 0, 49, 79, 80, 0, 77, 81, 0, 0,
	0, 0, 0, 2984, 0, 78, 0, 0, 0, 949,
	0, 0, 2757, 2758, 0, 0, 2760, 0, 0, 2762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 2769,
	2770, 2771, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 2776, 0, 0, 2778, 2779, 2780, 0, 0, 0,
	2781, 2782, 0, 0, 2056, 2784, 0, 0, 2786, 0,
	0, 2788, 2789, 2790, 2791, 0, 0, 0, 0, 2792,
	2056, 2056, 2056, 2056, 2056, 0, 2985, 2986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 2815, 2816, 2817, 2818, 2819,
	2820, 0, 0, 0, 2821, 2822, 0, 2823, 0, 2824,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 2160,
	0, 2163, 0, 0, 1915, 0, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	1328, 680, 680, 0, 52, 55, 58, 57, 60, 2885,
	76, 0, 0, 85, 63, 82, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 61,
	0, 983, 0, 0, 0, 0, 0, 0, 64, 93,
	92, 0, 0, 74, 75, 59, 0, 0, 0, 0,
	1411, 83, 84, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 983, 2665, 0, 0, 0, 0,
	2948, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 66,
	67, 0, 68, 69, 70, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	175, 0, 0, 0, 1915, 0, 0, 0, 0, 0,
	0, 2320, 0, 0, 0, 0, 0, 0, 3043, 1696,
	1697, 166, 165, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 0, 0, 2370, 2371, 0,
	0, 2375, 1411, 0, 0, 0, 0, 0, 0, 2379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2381,
	0, 0, 0, 0, 0, 0, 2384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 2387, 0, 0, 0,
	0, 0, 0, 680, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 1698, 163, 0, 1695, 0, 161, 162,
	0, 0, 0, 0, 0, 2403, 178, 0, 680, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2413, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	1704, 0, 3193, 0, 0, 0, 0, 0, 1713, 0,
	0, 1411, 1715, 0, 0, 1718, 1719, 680, 680, 0,
	680, 0, 680, 680, 0, 680, 680, 680, 680, 680,
	680, 0, 0, 0, 0, 3217, 0, 0, 1411, 1750,
	1751, 1411, 680, 1411, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 680, 3237, 0, 3238, 0,
	2511, 3239, 0, 0, 3242, 3243, 0, 0, 0, 0,
	0, 0, 0, 3247, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 3249, 0, 0, 0, 0, 0, 0,
	0, 0, 2543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 3266, 0, 0, 3267, 922,
	3268, 3269, 0, 3270, 0, 3271, 0, 0, 0, 0,
	3272, 164, 0, 0, 0, 195, 0, 0, 0, 0,
	2582, 2583, 0, 0, 0, 0, 1692, 0, 0, 2170,
	2603, 0, 922, 2602, 0, 3297, 0, 0, 0, 134,
	0, 156, 0, 679, 0, 0, 3305, 0, 0, 3307,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 3311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 158, 670, 0, 0, 3386,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 982,
	0, 0, 0, 0, 2652, 170, 0, 0, 174, 0,
	0, 175, 182, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 1697, 166, 165, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 0, 0, 0, 680, 680, 0,
	2701, 2702, 2703, 2704, 2705, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 3471,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 176,
	173, 179, 180, 181, 183, 185, 186, 187, 188, 0,
	642, 0, 0, 0, 189, 191, 192, 193, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 1915, 2721, 0,
	0, 0, 0, 160, 1698, 163, 0, 1695, 680, 161,
	162, 0, 0, 0, 0, 0, 0, 178, 1411, 0,
	0, 0, 0, 2729, 0, 0, 184, 1971, 0, 680,
	0, 0, 0, 0, 637, 1411, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 0,
	680, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 653, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3511, 0, 0, 0, 665, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3525, 0, 0, 3526,
	0, 3527, 0, 2802, 0, 0, 0, 0, 0, 0,
	627, 0, 629, 643, 0, 667, 0, 666, 633, 0,
	631, 635, 644, 636, 0, 630, 169, 641, 0, 680,
	632, 645, 646, 652, 656, 657, 658, 654, 651, 659,
	625, 626, 648, 0, 639, 668, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 680, 2170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 2864,
	0, 89, 0, 0, 2170, 2170, 2170, 2170, 2170, 0,
	0, 0, 680, 0, 0, 3607, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 0, 0, 2170, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3621, 0, 3622, 0, 3623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2938,
	0, 680, 0, 0, 0, 0, 0, 0, 2253, 2254,
	2255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2970, 0, 157, 0, 2976, 158, 0, 680, 0,
	0, 2978, 0, 0, 680, 1713, 0, 0, 1713, 2988,
	1713, 0, 1624, 0, 0, 3668, 2285, 3669, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 182, 3011, 0, 0, 3014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 680, 0, 0, 0,
	680, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 1171, 1171, 1637, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 663, 0, 171,
	176, 173, 179, 180, 181, 183, 185, 186, 187, 188,
	0, 0, 0, 0, 0, 189, 191, 192, 193, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 800, 1650, 1653, 1654, 1655, 1656,
	1657, 1658, 0, 1659, 1660, 1662, 1663, 1661, 1664, 1665,
	1638, 1639, 1640, 1641, 1622, 1623, 1651, 0, 1625, 0,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 680,
	0, 1635, 1642, 1643, 1644, 1645, 2170, 1646, 1647, 1648,
	1649, 860, 0, 2086, 0, 0, 861, 0, 0, 3154,
	0, 198, 0, 0, 616, 0, 1962, 0, 0, 0,
	0, 3171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 3186, 0, 0, 3187, 3188, 3189, 0, 0, 0,
	0, 931, 0, 0, 0, 1411, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 0, 0, 0, 0, 0, 0, 1548, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3273, 0, 3277, 3278, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 680, 0, 0, 2864, 0,
	89, 0, 2864, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 1721, 0, 1721, 0, 1721, 1721, 0, 1730,
	1721, 1721, 1721, 1721, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	2616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3399,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	1713, 1713, 0, 0, 0, 680, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 2689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3498, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 3509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 1171, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 616, 0, 616,
	0, 0, 616, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 3543, 0, 0, 0, 0,
	89, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 1413, 0, 1411, 0,
	0, 680, 680, 1411, 2006, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 1411,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 2132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2142,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 1591, 0, 0, 1171, 0, 0, 0,
	0, 3018, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	0, 860, 0, 0, 0, 0, 861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 616, 0, 982, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 0, 0, 0, 0, 974, 0, 1413, 0, 0,
	1957, 0, 0, 0, 1957, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 3161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 1413, 0, 1413,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 680, 680,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 680, 680, 680, 680, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1874, 616, 616, 616, 616, 616, 616, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 860, 0, 0, 0,
	848, 861, 862, 863, 864, 849, 0, 0, 850, 851,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 865, 866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2982, 2983, 0, 0, 1411, 0, 0, 0,
	0, 680, 0, 680, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 616, 0, 0, 2984, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2551, 0,
	0, 0, 680, 0, 1413, 0, 680, 680, 0, 2566,
	0, 0, 0, 0, 0, 0, 950, 950, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2985, 2986, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 1841, 950, 950, 950,
	950, 950, 0, 0, 0, 0, 2648, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	814, 0, 0, 818, 0, 815, 816, 0, 0, 0,
	817, 0, 0, 2142, 0, 0, 0, 0, 0, 1772,
	2673, 0, 0, 0, 0, 0, 0, 0, 680, 2678,
	0, 0, 0, 0, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 1841, 616,
	0, 616, 0, 616, 2179, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2803, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2840, 0, 0, 616, 616, 0,
	0, 616, 0, 2377, 0, 0, 0, 0, 1171, 616,
	0, 0, 0, 0, 0, 2867, 1721, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 0, 0, 0, 0, 0, 0, 0, 2142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2142, 2142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 2658, 0, 0, 0, 0, 0, 0, 0, 3225,
	3226, 3227, 3228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 616, 616, 616, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 3301, 0, 3303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3459, 0, 0, 0,
	3459, 3459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2142,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 1413,
	616, 616, 616, 616, 616, 0, 0, 0, 0, 0,
	0, 0, 2883, 0, 0, 0, 0, 0, 1772, 0,
	616, 0, 0, 616, 2891, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2142, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 616, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1171,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 3081, 0,
	3591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 616, 616, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 1305, 1290, 513, 0,
	1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247,
	411, 1218, 1174, 1206, 1176, 1213, 1177, 1204, 1235, 269,
	1201, 1292, 1251, 1307, 362, 266, 1183, 1207, 425, 1223,
	207, 1271, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 1314, 366, 1257, 0,
	492, 396, 0, 0, 0, 1237, 1296, 1245, 1283, 1232,
	1270, 1191, 1256, 1309, 1219, 1266, 1310, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 1772, 0, 3563, 670,
	0, 0, 0, 0, 3564, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 616, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1215, 1263, 1304, 1216,
	1265, 264, 319, 271, 263, 518, 1315, 1295, 1180, 1244,
	1303, 0, 0, 230, 1306, 1239, 0, 1268, 0, 1321,
	1175, 1259, 0, 1178, 1182, 1317, 1299, 1210, 274, 0,
	0, 0, 0, 0, 0, 0, 1236, 1246, 1280, 1284,
	1230, 0, 0, 0, 0, 1413, 0, 0, 1208, 0,
	1255, 0, 0, 0, 1187, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 1190, 0, 1209, 1281, 1772, 1173, 296,
	1184, 397, 256, 1327, 0, 449, 1288, 1298, 1231, 561,
	1302, 1229, 1228, 1275, 1188, 1294, 1222, 361, 1186, 328,
	202, 226, 0, 1220, 407, 457, 469, 1293, 1205, 1214,
	254, 1212, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 1254, 1273, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 588, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 583, 571, 573, 574, 214, 502,
	533, 240, 479, 0, 0, 590, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 591, 229, 555, 221,
	1185, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 592, 235, 236, 238, 1200, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 1289, 517,
	536, 548, 560, 566, 567, 569, 575, 576, 577, 578,
	584, 582, 579, 580, 581, 572, 402, 309, 490, 331,
	369, 1278, 1320, 420, 468, 241, 540, 491, 1323, 1324,
	1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196,
	1311, 1312, 1313, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 1282, 1189, 0, 1197, 1198, 1291, 1300, 1301,
	611, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	1253, 201, 222, 364, 1316, 450, 287, 589, 551, 545,
	208, 224, 1192, 261, 1203, 1211, 0, 1217, 1225, 1226,
	1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274,
	1277, 1279, 1286, 1297, 1319, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 586, 587, 298, 534, 565, 532, 585,
	559, 435, 374, 1252, 1322, 549, 1258, 377, 280, 303,
	318, 1267, 550, 497, 228, 462, 289, 252, 1285, 1287,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 1248, 1276, 372, 514, 515, 314,
	392, 0, 0, 0, 1305, 1290, 513, 0, 1233, 1308,
	1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247, 411, 1218,
	1174, 1206, 1176, 1213, 1177, 1204, 1235, 269, 1201, 1292,
	1251, 1307, 362, 266, 1183, 1207, 425, 1223, 207, 1271,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 1314, 366, 1257, 0, 492, 396,
	0, 0, 0, 1237, 1296, 1245, 1283, 1232, 1270, 1191,
	1256, 1309, 1219, 1266, 1310, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 1215, 1263, 1304, 1216, 1265, 264,
	319, 271, 263, 518, 1315, 1295, 1180, 1244, 1303, 0,
	0, 230, 1306, 1239, 0, 1268, 0, 1321, 1175, 1259,
	0, 1178, 1182, 1317, 1299, 1210, 274, 0, 0, 0,
	0, 0, 0, 0, 1236, 1246, 1280, 1284, 1230, 0,
	0, 0, 0, 0, 2892, 0, 1208, 0, 1255, 0,
	0, 0, 1187, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 1190, 0, 1209, 1281, 0, 1173, 296, 1184, 397,
	256, 1327, 0, 449, 1288, 1298, 1231, 561, 1302, 1229,
	1228, 1275, 1188, 1294, 1222, 361, 1186, 328, 202, 226,
	0, 1220, 407, 457, 469, 1293, 1205, 1214, 254, 1212,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	1254, 1273, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 588, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 583, 571, 573, 574, 214, 502, 533, 240,
	479, 0, 0, 590, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 591, 229, 555, 221, 1185, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 592,
	235, 236, 238, 1200, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1289, 517, 536, 548,
	560, 566, 567, 569, 575, 576, 577, 578, 584, 582,
	579, 580, 581, 572, 402, 309, 490, 331, 369, 1278,
	1320, 420, 468, 241, 540, 491, 1323, 1324, 1325, 1326,
	1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312,
	1313, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	1282, 1189, 0, 1197, 1198, 1291, 1300, 1301, 611, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1253, 201,
	222, 364, 1316, 450, 287, 589, 551, 545, 208, 224,
	1192, 261, 1203, 1211, 0, 1217, 1225, 1226, 1238, 1240,
	1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279,
	1286, 1297, 1319, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 586, 587, 298, 534, 565, 532, 585, 559, 435,
	374, 1252, 1322, 549, 1258, 377, 280, 303, 318, 1267,
	550, 497, 228, 462, 289, 252, 1285, 1287, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1248, 1276, 372, 514, 515, 314, 392, 0,
	0, 0, 1305, 1290, 513, 0, 1233, 1308, 1202, 1221,
	1318, 1224, 1227, 1269, 1181, 1247, 411, 1218, 1174, 1206,
	1176, 1213, 1177, 1204, 1235, 269, 1201, 1292, 1251, 1307,
	362, 266, 1183, 1207, 425, 1223, 207, 1271, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1314, 366, 1257, 0, 492, 396, 0, 0,
	0, 1237, 1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309,
	1219, 1266, 1310, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1215, 1263, 1304, 1216, 1265, 264, 319, 271,
	263, 518, 1315, 1295, 1180, 1244, 1303, 0, 0, 230,
	1306, 1239, 0, 1268, 0, 1321, 1175, 1259, 0, 1178,
	1182, 1317, 1299, 1210, 274, 0, 0, 0, 0, 0,
	0, 0, 1236, 1246, 1280, 1284, 1230, 0, 0, 0,
	0, 0, 2853, 0, 1208, 0, 1255, 0, 0, 0,
	1187, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 1190,
	0, 1209, 1281, 0, 1173, 296, 1184, 397, 256, 1327,
	0, 449, 1288, 1298, 1231, 561, 1302, 1229, 1228, 1275,
	1188, 1294, 1222, 361, 1186, 328, 202, 226, 0, 1220,
	407, 457, 469, 1293, 1205, 1214, 254, 1212, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1254, 1273,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 591, 229, 555, 221, 1185, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 1200, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 1289, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 1278, 1320, 420,
	468, 241, 540, 491, 1323, 1324, 1325, 1326, 1195, 1199,
	1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312, 1313, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 1282, 1189,
	0, 1197, 1198, 1291, 1300, 1301, 611, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 1253, 201, 222, 364,
	1316, 450, 287, 589, 551, 545, 208, 224, 1192, 261,
	1203, 1211, 0, 1217, 1225, 1226, 1238, 1240, 1241, 1242,
	1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297,
	1319, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 586,
	587, 298, 534, 565, 532, 585, 559, 435, 374, 1252,
	1322, 549, 1258, 377, 280, 303, 318, 1267, 550, 497,
	228, 462, 289, 252, 1285, 1287, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	1248, 1276, 372, 514, 515, 314, 392, 0, 0, 0,
	1305, 1290, 513, 0, 1233, 1308, 1202, 1221, 1318, 1224,
	1227, 1269, 1181, 1247, 411, 1218, 1174, 1206, 1176, 1213,
	1177, 1204, 1235, 269, 1201, 1292, 1251, 1307, 362, 266,
	1183, 1207, 425, 1223, 207, 1271, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	1314, 366, 1257, 0, 492, 396, 0, 0, 0, 1237,
	1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266,
	1310, 321, 249, 323, 206, 408, 493, 285, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1215, 1263, 1304, 1216, 1265, 264, 319, 271, 263, 518,
	1315, 1295, 1180, 1244, 1303, 0, 0, 230, 1306, 1239,
	0, 1268, 0, 1321, 1175, 1259, 0, 1178, 1182, 1317,
	1299, 1210, 274, 0, 0, 0, 0, 0, 0, 0,
	1236, 1246, 1280, 1284, 1230, 0, 0, 0, 0, 0,
	2158, 0, 1208, 0, 1255, 0, 0, 0, 1187, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 1190, 0, 1209,
	1281, 0, 1173, 296, 1184, 397, 256, 1327, 0, 449,
	1288, 1298, 1231, 561, 1302, 1229, 1228, 1275, 1188, 1294,
	1222, 361, 1186, 328, 202, 226, 0, 1220, 407, 457,
	469, 1293, 1205, 1214, 254, 1212, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 1254, 1273, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	588, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 583, 571,
	573, 574, 214, 502, 533, 240, 479, 0, 0, 590,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 527, 528, 255,
	591, 229, 555, 221, 1185, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 351, 352, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 592, 235, 236, 238, 1200,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 1289, 517, 536, 548, 560, 566, 567, 569,
	575, 576, 577, 578, 584, 582, 579, 580, 581, 572,
	402, 309, 490, 331, 369, 1278, 1320, 420, 468, 241,
	540, 491, 1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260,
	1194, 1249, 1250, 1196, 1311, 1312, 1313, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 1282, 1189, 0, 1197,
	1198, 1291, 1300, 1301, 611, 380, 481, 537, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 250, 212, 386, 394, 516,
	310, 217, 218, 219, 509, 510, 511, 512, 552, 553,
	557, 458, 459, 460, 461, 291, 546, 307, 464, 463,
	329, 330, 375, 446, 1253, 201, 222, 364, 1316, 450,
	287, 589, 551, 545, 208, 224, 1192, 261, 1203, 1211,
	0, 1217, 1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261,
	1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297, 1319, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 299, 300, 441, 442, 312, 313, 586, 587, 298,
	534, 565, 532, 585, 559, 435, 374, 1252, 1322, 549,
	1258, 377, 280, 303, 318, 1267, 550, 497, 228, 462,
	289, 252, 1285, 1287, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 1248, 1276,
	372, 514, 515, 314, 392, 0, 0, 0, 1305, 1290,
	513, 0, 1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269,
	1181, 1247, 411, 1218, 1174, 1206, 1176, 1213, 1177, 1204,
	1235, 269, 1201, 1292, 1251, 1307, 362, 266, 1183, 1207,
	425, 1223, 207, 1271, 482, 253, 373, 370, 521, 281,
	272, 268, 251, 315, 381, 423, 503, 417, 1314, 366,
	1257, 0, 492, 396, 0, 0, 0, 1237, 1296, 1245,
	1283, 1232, 1270, 1191, 1256, 1309, 1219, 1266, 1310, 321,
	249, 323, 206, 408, 493, 285, 0, 97, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1215, 1263,
	1304, 1216, 1265, 264, 319, 271, 263, 518, 1315, 1295,
	1180, 1244, 1303, 0, 0, 230, 1306, 1239, 0, 1268,
	0, 1321, 1175, 1259, 0, 1178, 1182, 1317, 1299, 1210,
	274, 0, 0, 0, 0, 0, 0, 0, 1236, 1246,
	1280, 1284, 1230, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 1255, 0, 0, 0, 1187, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 1190, 0, 1209, 1281, 0,
	1173, 296, 1184, 397, 256, 1327, 0, 449, 1288, 1298,
	1231, 561, 1302, 1229, 1228, 1275, 1188, 1294, 1222, 361,
	1186, 328, 202, 226, 0, 1220, 407, 457, 469, 1293,
	1205, 1214, 254, 1212, 467, 421, 538, 234, 283, 454,
	427, 465, 437, 286, 1254, 1273, 466, 368, 523, 447,
	535, 562, 563, 262, 401, 547, 507, 556, 588, 227,
	259, 415, 500, 541, 489, 393, 519, 520, 327, 488,
	294, 205, 365, 568, 225, 475, 367, 243, 232, 525,
	544, 288, 452, 431, 432, 570, 583, 571, 573, 574,
	214, 502, 533, 240, 479, 0, 0, 590, 248, 499,
	216, 530, 498, 389, 324, 325, 215, 0, 453, 267,
	292, 0, 0, 257, 410, 527, 528, 255, 591, 229,
	555, 221, 1185, 554, 403, 522, 531, 390, 379, 220,
	529, 388, 378, 332, 351, 352, 279, 305, 444, 371,
	445, 304, 306, 399, 398, 400, 209, 542, 0, 210,
	0, 494, 543, 592, 235, 236, 238, 1200, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 443, 439, 448,
	1289, 517, 536, 548, 560, 566, 567, 569, 575, 576,
	577, 578, 584, 582, 579, 580, 581, 572, 402, 309,
	490, 331, 369, 1278, 1320, 420, 468, 241, 540, 491,
	1323, 1324, 1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249,
	1250, 1196, 1311, 1312, 1313, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 1282, 1189, 0, 1197, 1198, 1291,
	1300, 1301, 611, 380, 481, 537, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 250, 212, 386, 394, 516, 310, 217,
	218, 219, 509, 510, 511, 512, 552, 553, 557, 458,
	459, 460, 461, 291, 546, 307, 464, 463, 329, 330,
	375, 446, 1253, 201, 222, 364, 1316, 450, 287, 589,
	551, 545, 208, 224, 1192, 261, 1203, 1211, 0, 1217,
	1225, 1226, 1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264,
	1272, 1274, 1277, 1279, 1286, 1297, 1319, 203, 204, 211,
	223, 233, 237, 244, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 433, 434, 436, 438, 440, 451, 456, 470, 471,
	472, 473, 474, 477, 478, 483, 484, 485, 486, 487,
	495, 496, 501, 524, 526, 539, 558, 564, 476, 299,
	300, 441, 442, 312, 313, 586, 587, 298, 534, 565,
	532, 585, 559, 435, 374, 1252, 1322, 549, 1258, 377,
	280, 303, 318, 1267, 550, 497, 228, 462, 289, 252,
	1285, 1287, 213, 247, 231, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 245, 455, 242, 480, 504,
	505, 506, 508, 391, 265, 428, 1248, 1276, 372, 514,
	515, 314, 392, 0, 0, 0, 1305, 1290, 513, 0,
	1233, 1308, 1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247,
	411, 1218, 1174, 1206, 1176, 1213, 1177, 1204, 1235, 269,
	1201, 1292, 1251, 1307, 362, 266, 1183, 1207, 425, 1223,
	207, 1271, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 1314, 366, 1257, 0,
	492, 396, 0, 0, 0, 1237, 1296, 1245, 1283, 1232,
	1270, 1191, 1256, 1309, 1219, 1266, 1310, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1215, 1263, 1304, 1216,
	1265, 264, 319, 271, 263, 518, 1315, 1295, 1180, 1244,
	1303, 0, 0, 230, 1306, 1239, 0, 1268, 0, 1321,
	1175, 1259, 0, 1178, 1182, 1317, 1299, 1210, 274, 0,
	0, 0, 0, 0, 0, 0, 1236, 1246, 1280, 1284,
	1230, 0, 0, 0, 0, 0, 0, 0, 1208, 0,
	1255, 0, 0, 0, 1187, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 1190, 0, 1209, 1281, 0, 1173, 296,
	1184, 397, 256, 1327, 0, 449, 1288, 1298, 1231, 561,
	1302, 1229, 1228, 1275, 1188, 1294, 1222, 361, 1186, 328,
	202, 226, 0, 1220, 407, 457, 469, 1293, 1205, 1214,
	254, 1212, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 1254, 1273, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 588, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 583, 571, 573, 574, 214, 502,
	533, 240, 479, 0, 0, 590, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 591, 229, 555, 221,
	1185, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 592, 235, 236, 238, 1200, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 1289, 517,
	536, 548, 560, 566, 567, 569, 575, 576, 577, 578,
	584, 582, 579, 580, 581, 572, 402, 309, 490, 331,
	369, 1278, 1320, 420, 468, 241, 540, 491, 1323, 1324,
	1325, 1326, 1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196,
	1311, 1312, 1313, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 1282, 1189, 0, 1197, 1198, 1291, 1300, 1301,
	611, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	1253, 201, 222, 364, 1316, 450, 287, 589, 551, 545,
	208, 224, 1192, 261, 1203, 1211, 0, 1217, 1225, 1226,
	1238, 1240, 1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274,
	1277, 1279, 1286, 1297, 1319, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 586, 587, 298, 534, 565, 532, 585,
	559, 435, 374, 1252, 1322, 549, 1258, 377, 280, 303,
	318, 1267, 550, 497, 228, 462, 289, 252, 1285, 1287,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 1248, 1276, 372, 514, 515, 314,
	392, 0, 0, 0, 1305, 1290, 513, 0, 1233, 1308,
	1202, 1221, 1318, 1224, 1227, 1269, 1181, 1247, 411, 1218,
	1174, 1206, 1176, 1213, 1177, 1204, 1235, 269, 1201, 1292,
	1251, 1307, 362, 266, 1183, 1207, 425, 1223, 207, 1271,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 1314, 366, 1257, 0, 492, 396,
	0, 0, 0, 1237, 1296, 1245, 1283, 1232, 1270, 1191,
	1256, 1309, 1219, 1266, 1310, 321, 249, 323, 206, 408,
	493, 285, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 1215, 1263, 1304, 1216, 1265, 264,
	319, 271, 263, 518, 1315, 1295, 1180, 1244, 1303, 0,
	0, 230, 1306, 1239, 0, 1268, 0, 1321, 1175, 1259,
	0, 1178, 1182, 1317, 1299, 1210, 274, 0, 0, 0,
	0, 0, 0, 0, 1236, 1246, 1280, 1284, 1230, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 1255, 0,
	0, 0, 1187, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 1190, 0, 1209, 1281, 0, 1173, 296, 1184, 397,
	256, 1327, 0, 449, 1288, 1298, 1231, 561, 1302, 1229,
	1228, 1275, 1188, 1294, 1222, 361, 1186, 328, 202, 226,
	0, 1220, 407, 457, 469, 1293, 1205, 1214, 254, 1212,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	1254, 1273, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 588, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 583, 571, 573, 574, 214, 502, 533, 240,
	479, 0, 0, 590, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 591, 229, 555, 221, 1185, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 592,
	235, 236, 238, 1200, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 1289, 517, 536, 548,
	560, 566, 567, 569, 575, 576, 577, 578, 584, 582,
	579, 580, 581, 572, 402, 309, 490, 331, 369, 1278,
	1320, 420, 468, 241, 540, 491, 1323, 1324, 1325, 1326,
	1195, 1199, 1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312,
	1313, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	1282, 1189, 0, 1197, 1198, 1291, 1300, 1301, 611, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 1253, 201,
	222, 364, 1316, 450, 287, 589, 551, 545, 208, 224,
	1192, 261, 1203, 1211, 0, 1217, 1225, 1226, 1238, 1240,
	1241, 1242, 1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279,
	1286, 1297, 1319, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 586, 587, 298, 534, 565, 532, 585, 559, 435,
	374, 1252, 1322, 549, 1258, 377, 280, 303, 318, 1267,
	550, 497, 228, 462, 289, 252, 1285, 1287, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1248, 1276, 372, 514, 515, 314, 392, 0,
	0, 0, 1305, 1290, 513, 0, 1233, 1308, 1202, 1221,
	1318, 1224, 1227, 1269, 1181, 1247, 411, 1218, 1174, 1206,
	1176, 1213, 1177, 1204, 1235, 269, 1201, 1292, 1251, 1307,
	362, 266, 1183, 1207, 425, 1223, 207, 1271, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 1314, 366, 1257, 0, 492, 396, 0, 0,
	0, 1237, 1296, 1245, 1283, 1232, 1270, 1191, 1256, 1309,
	1219, 1266, 1310, 321, 249, 323, 206, 408, 493, 285,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1215, 1263, 1304, 1216, 1265, 264, 319, 271,
	263, 518, 1315, 1295, 1180, 1244, 1303, 0, 0, 230,
	1306, 1239, 0, 1268, 0, 1321, 1175, 1259, 0, 1178,
	1182, 1317, 1299, 1210, 274, 0, 0, 0, 0, 0,
	0, 0, 1236, 1246, 1280, 1284, 1230, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 1255, 0, 0, 0,
	1187, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 1190,
	0, 1209, 1281, 0, 1173, 296, 1184, 397, 256, 1327,
	0, 449, 1288, 1298, 1231, 561, 1302, 1229, 1228, 1275,
	1188, 1294, 1222, 361, 1186, 328, 202, 226, 0, 1220,
	407, 457, 469, 1293, 1205, 1214, 254, 1212, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 1254, 1273,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 527,
	528, 255, 591, 229, 555, 221, 1185, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 351, 352,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 1200, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 1289, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 1278, 1320, 420,
	468, 241, 540, 491, 1323, 1324, 1325, 1326, 1195, 1199,
	1193, 1260, 1194, 1249, 1250, 1196, 1311, 1312, 1313, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 1282, 1189,
	0, 1197, 1198, 1291, 1300, 1301, 611, 380, 481, 537,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 250, 212, 386,
	394, 516, 310, 217, 218, 219, 509, 510, 511, 512,
	552, 553, 557, 458, 459, 460, 461, 291, 546, 307,
	464, 463, 329, 330, 375, 446, 1253, 201, 222, 364,
	1316, 450, 287, 589, 551, 545, 208, 224, 1192, 261,
	1203, 1211, 0, 1217, 1225, 1226, 1238, 1240, 1241, 1242,
	1243, 1261, 1262, 1264, 1272, 1274, 1277, 1279, 1286, 1297,
	1319, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 299, 300, 441, 442, 312, 313, 586,
	587, 298, 534, 565, 532, 585, 559, 435, 374, 1252,
	1322, 549, 1258, 377, 280, 303, 318, 1267, 550, 497,
	228, 462, 289, 252, 1285, 1287, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	1248, 1276, 372, 514, 515, 314, 392, 0, 0, 0,
	0, 0, 513, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 710,
	0, 0, 0, 269, 715, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 207, 0, 482, 253, 373, 370,
	521, 281, 272, 268, 251, 315, 381, 423, 503, 417,
	722, 366, 0, 0, 492, 396, 0, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 249, 323, 206, 408, 493, 285, 0, 97,
	0, 0, 860, 844, 810, 811, 848, 861, 862, 863,
	864, 849, 0, 239, 850, 851, 246, 852, 0, 809,
	750, 752, 751, 769, 770, 771, 772, 773, 774, 775,
	748, 857, 865, 866, 0, 264, 319, 271, 263, 518,
	0, 0, 2038, 2039, 2040, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 692, 707, 0, 721, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 705,
	0, 0, 0, 0, 804, 0, 706, 0, 0, 714,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 0, 449,
	803, 0, 0, 561, 0, 0, 801, 0, 0, 0,
	0, 361, 0, 328, 202, 226, 0, 0, 407, 457,
	469, 0, 0, 0, 854, 0, 467, 421, 538, 234,
	283, 454, 427, 465, 437, 286, 0, 0, 466, 368,
	523, 447, 535, 562, 563, 262, 401, 547, 507, 556,
	588, 227, 259, 415, 500, 541, 489, 393, 519, 520,
	327, 488, 294, 205, 365, 568, 225, 475, 367, 243,
	232, 525, 544, 288, 452, 431, 432, 570, 583, 571,
	573, 574, 214, 502, 533, 240, 479, 0, 0, 590,
	248, 499, 216, 530, 498, 389, 324, 325, 215, 0,
	453, 267, 292, 0, 0, 257, 410, 855, 856, 255,
	591, 756, 555, 221, 0, 554, 403, 522, 531, 390,
	379, 220, 529, 388, 378, 332, 764, 765, 279, 305,
	444, 371, 445, 304, 306, 399, 398, 400, 209, 542,
	0, 210, 0, 494, 543, 592, 235, 236, 238, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 443,
	439, 448, 0, 517, 536, 548, 560, 566, 567, 569,
	575, 576, 577, 578, 584, 582, 579, 580, 581, 572,
	402, 309, 490, 331, 369, 0, 0, 420, 468, 241,
	540, 491, 0, 0, 0, 0, 814, 802, 727, 818,
	729, 815, 816, 724, 725, 728, 817, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 805, 713, 712, 0,
	720, 0, 746, 747, 749, 753, 754, 755, 766, 767,
	768, 776, 778, 779, 777, 780, 781, 782, 785, 786,
	787, 788, 783, 784, 789, 730, 734, 731, 732, 733,
	745, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 828, 829, 830, 831, 832, 833, 759, 763, 762,
	760, 761, 757, 758, 711, 201, 222, 364, 0, 450,
	287, 589, 551, 545, 208, 224, 819, 261, 820, 0,
	0, 824, 0, 0, 0, 826, 825, 0, 827, 793,
	792, 0, 0, 821, 822, 0, 823, 0, 0, 203,
	204, 211, 223, 233, 237, 244, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 433, 434, 436, 438, 440, 451, 456,
	470, 471, 472, 473, 474, 477, 478, 483, 484, 485,
	486, 487, 495, 496, 501, 524, 526, 539, 558, 564,
	476, 834, 835, 836, 837, 838, 839, 840, 841, 298,
	534, 565, 532, 585, 559, 435, 374, 0, 0, 549,
	0, 377, 280, 303, 318, 0, 550, 497, 228, 462,
	289, 252, 859, 0, 213, 247, 231, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 245, 455, 242,
	480, 504, 505, 506, 508, 391, 265, 428, 392, 0,
	372, 514, 515, 314, 513, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 710, 0, 0, 0, 269, 715, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 207, 0, 482, 253,
	373, 370, 521, 281, 272, 268, 251, 315, 381, 423,
	503, 417, 722, 366, 0, 0, 492, 396, 0, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 0,
	0, 2187, 0, 321, 249, 323, 206, 408, 493, 285,
	0, 97, 0, 0, 860, 844, 810, 811, 848, 861,
	862, 863, 864, 849, 0, 239, 850, 851, 246, 852,
	0, 809, 750, 752, 751, 769, 770, 771, 772, 773,
	774, 775, 748, 857, 865, 866, 2188, 264, 319, 271,
	263, 518, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 692, 707, 0,
	721, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 705, 0, 0, 0, 0, 804, 0, 706, 0,
	0, 714, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	0, 449, 803, 0, 0, 561, 0, 0, 801, 0,
	0, 0, 0, 361, 0, 328, 202, 226, 0, 0,
	407, 457, 469, 0, 0, 0, 854, 0, 467, 421,
	538, 234, 283, 454, 427, 465, 437, 286, 0, 0,
	466, 368, 523, 447, 535, 562, 563, 262, 401, 547,
	507, 556, 588, 227, 259, 415, 500, 541, 489, 393,
	519, 520, 327, 488, 294, 205, 365, 568, 225, 475,
	367, 243, 232, 525, 544, 288, 452, 431, 432, 570,
	583, 571, 573, 574, 214, 502, 533, 240, 479, 0,
	0, 590, 248, 499, 216, 530, 498, 389, 324, 325,
	215, 0, 453, 267, 292, 0, 0, 257, 410, 855,
	856, 255, 591, 756, 555, 221, 0, 554, 403, 522,
	531, 390, 379, 220, 529, 388, 378, 332, 764, 765,
	279, 305, 444, 371, 445, 304, 306, 399, 398, 400,
	209, 542, 0, 210, 0, 494, 543, 592, 235, 236,
	238, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 443, 439, 448, 0, 517, 536, 548, 560, 566,
	567, 569, 575, 576, 577, 578, 584, 582, 579, 580,
	581, 572, 402, 309, 490, 331, 369, 0, 0, 420,
	468, 241, 540, 491, 0, 0, 0, 0, 814, 802,
	727, 818, 729, 815, 816, 724, 725, 728, 817, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 805, 713,
	712, 0, 720, 0, 746, 747, 749, 753, 754, 755,
	766, 767, 768, 776, 778, 779, 777, 780, 781, 782,
	785, 786, 787, 788, 783, 784, 789, 730, 734, 731,
	732, 733, 745, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 828, 829, 830, 831, 832, 833, 759,
	763, 762, 760, 761, 757, 758, 711, 201, 222, 364,
	0, 450, 287, 589, 551, 545, 208, 224, 819, 261,
	820, 0, 0, 824, 0, 0, 0, 826, 825, 0,
	827, 793, 792, 0, 0, 821, 822, 0, 823, 0,
	0, 203, 204, 211, 223, 233, 237, 244, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 433, 434, 436, 438, 440,
	451, 456, 470, 471, 472, 473, 474, 477, 478, 483,
	484, 485, 486, 487, 495, 496, 501, 524, 526, 539,
	558, 564, 476, 834, 835, 836, 837, 838, 839, 840,
	841, 298, 534, 565, 532, 585, 559, 435, 374, 0,
	0, 549, 0, 377, 280, 303, 318, 0, 550, 497,
	228, 462, 289, 252, 859, 0, 213, 247, 231, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 245,
	455, 242, 480, 504, 505, 506, 508, 391, 265, 428,
	0, 392, 372, 514, 515, 314, 88, 513, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 710, 0, 0, 0, 269, 715,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 722, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 97, 0, 0, 860, 844, 810,
	811, 848, 861, 862, 863, 864, 849, 0, 239, 850,
	851, 246, 852, 0, 809, 750, 752, 751, 769, 770,
	771, 772, 773, 774, 775, 748, 857, 865, 866, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	692, 707, 0, 721, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 705, 0, 0, 0, 0, 804,
	0, 706, 0, 0, 714, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 803, 0, 0, 561, 0,
	0, 801, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 854,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 855, 856, 255, 591, 756, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 764, 765, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 814, 802, 727, 818, 729, 815, 816, 724, 725,
	728, 817, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 805, 713, 712, 0, 720, 0, 746, 747, 749,
	753, 754, 755, 766, 767, 768, 776, 778, 779, 777,
	780, 781, 782, 785, 786, 787, 788, 783, 784, 789,
	730, 734, 731, 732, 733, 745, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 828, 829, 830, 831,
	832, 833, 759, 763, 762, 760, 761, 757, 758, 711,
	201, 222, 364, 96, 450, 287, 589, 551, 545, 208,
	224, 819, 261, 820, 0, 0, 824, 0, 0, 0,
	826, 825, 0, 827, 793, 792, 0, 0, 821, 822,
	0, 823, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 834, 835, 836, 837,
	838, 839, 840, 841, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 859, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 710, 0, 0, 0,
	269, 715, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 722, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 860,
	844, 810, 811, 848, 861, 862, 863, 864, 849, 0,
	239, 850, 851, 246, 852, 0, 809, 750, 752, 751,
	769, 770, 771, 772, 773, 774, 775, 748, 857, 865,
	866, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 692, 707, 0, 721, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 705, 0, 0, 0,
	0, 804, 0, 706, 0, 0, 714, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 803, 0, 0,
	561, 0, 0, 801, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 854, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 3550, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 855, 856, 255, 591, 756, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 764, 765, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 814, 802, 727, 818, 729, 815, 816,
	724, 725, 728, 817, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 805, 713, 712, 0, 720, 0, 746,
	747, 749, 753, 754, 755, 766, 767, 768, 776, 778,
	779, 777, 780, 781, 782, 785, 786, 787, 788, 783,
	784, 789, 730, 734, 731, 732, 733, 745, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 828, 829,
	830, 831, 832, 833, 759, 763, 762, 760, 761, 757,
	758, 711, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 819, 261, 820, 0, 0, 824, 0,
	0, 0, 826, 825, 0, 827, 793, 792, 0, 0,
	821, 822, 0, 823, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 834, 835,
	836, 837, 838, 839, 840, 841, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 859,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 710, 0,
	0, 0, 269, 715, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 722,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 97, 0,
	1569, 860, 844, 810, 811, 848, 861, 862, 863, 864,
	849, 0, 239, 850, 851, 246, 852, 0, 809, 750,
	752, 751, 769, 770, 771, 772, 773, 774, 775, 748,
	857, 865, 866, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 692, 707, 0, 721, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 705, 0,
	0, 0, 0, 804, 0, 706, 0, 0, 714, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 803,
	0, 0, 561, 0, 0, 801, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 854, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 855, 856, 255, 591,
	756, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 764, 765, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 814, 802, 727, 818, 729,
	815, 816, 724, 725, 728, 817, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 805, 713, 712, 0, 720,
	0, 746, 747, 749, 753, 754, 755, 766, 767, 768,
	776, 778, 779, 777, 780, 781, 782, 785, 786, 787,
	788, 783, 784, 789, 730, 734, 731, 732, 733, 745,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	828, 829, 830, 831, 832, 833, 759, 763, 762, 760,
	761, 757, 758, 711, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 819, 261, 820, 0, 0,
	824, 0, 0, 0, 826, 825, 0, 827, 793, 792,
	0, 0, 821, 822, 0, 823, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	834, 835, 836, 837, 838, 839, 840, 841, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 859, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	710, 0, 0, 0, 269, 715, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 722, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	97, 0, 0, 860, 844, 810, 811, 848, 861, 862,
	863, 864, 849, 0, 239, 850, 851, 246, 852, 0,
	809, 750, 752, 751, 769, 770, 771, 772, 773, 774,
	775, 748, 857, 865, 866, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 692, 707, 0, 721,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	705, 948, 0, 0, 0, 804, 0, 706, 0, 0,
	714, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 803, 0, 0, 561, 0, 0, 801, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 854, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 855, 856,
	255, 591, 756, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 764, 765, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 814, 802, 727,
	818, 729, 815, 816, 724, 725, 728, 817, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 805, 713, 712,
	0, 720, 0, 746, 747, 749, 753, 754, 755, 766,
	767, 768, 776, 778, 779, 777, 780, 781, 782, 785,
	786, 787, 788, 783, 784, 789, 730, 734, 731, 732,
	733, 745, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 828, 829, 830, 831, 832, 833, 759, 763,
	762, 760, 761, 757, 758, 711, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 819, 261, 820,
	0, 0, 824, 0, 0, 0, 826, 825, 0, 827,
	793, 792, 0, 0, 821, 822, 0, 823, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 834, 835, 836, 837, 838, 839, 840, 841,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 859, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 710, 0, 0, 0, 269, 715, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 722, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 718, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 97, 0, 0, 860, 844, 810, 811, 848,
	861, 862, 863, 864, 849, 0, 239, 850, 851, 246,
	852, 0, 809, 750, 752, 751, 769, 770, 771, 772,
	773, 774, 775, 748, 857, 865, 866, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 692, 707,
	0, 721, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 705, 0, 0, 0, 0, 804, 0, 706,
	0, 0, 714, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 803, 0, 0, 561, 0, 0, 801,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 854, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	855, 856, 255, 591, 756, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 764,
	765, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 814,
	802, 727, 818, 729, 815, 816, 724, 725, 728, 817,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 805,
	713, 712, 0, 720, 0, 746, 747, 749, 753, 754,
	755, 766, 767, 768, 776, 778, 779, 777, 780, 781,
	782, 785, 786, 787, 788, 783, 784, 789, 730, 734,
	731, 732, 733, 745, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 828, 829, 830, 831, 832, 833,
	759, 763, 762, 760, 761, 757, 758, 711, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 819,
	261, 820, 0, 0, 824, 0, 0, 0, 826, 825,
	0, 827, 793, 792, 0, 0, 821, 822, 0, 823,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 834, 835, 836, 837, 838, 839,
	840, 841, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 859, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 710, 0, 0, 0, 269, 715,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 722, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 97, 0, 0, 860, 844, 810,
	811, 848, 861, 862, 863, 864, 849, 0, 239, 850,
	851, 246, 852, 0, 809, 750, 752, 751, 769, 770,
	771, 772, 773, 774, 775, 748, 857, 865, 866, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 721, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 705, 0, 0, 0, 0, 804,
	0, 706, 0, 0, 714, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 803, 0, 0, 561, 0,
	0, 801, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 854,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 855, 856, 255, 591, 756, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 764, 765, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 814, 802, 727, 818, 729, 815, 816, 724, 725,
	728, 817, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 805, 713, 712, 0, 720, 0, 746, 747, 749,
	753, 754, 755, 766, 767, 768, 776, 778, 779, 777,
	780, 781, 782, 785, 786, 787, 788, 783, 784, 789,
	730, 734, 731, 732, 733, 745, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 828, 829, 830, 831,
	832, 833, 759, 763, 762, 760, 761, 757, 758, 711,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 819, 261, 820, 0, 0, 824, 0, 0, 0,
	826, 825, 0, 827, 793, 792, 0, 0, 821, 822,
	0, 823, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 834, 835, 836, 837,
	838, 839, 840, 841, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 859, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394,
	1393, 1395, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 1020, 561, 0, 0, 0, 0, 0, 1017, 1018,
	361, 977, 328, 202, 226, 1011, 1015, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1532, 844, 0, 0, 1529, 0, 0,
	0, 0, 1527, 0, 239, 1528, 1526, 246, 1531, 0,
	809, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 0,
	392, 372, 514, 515, 314, 88, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 207, 0,
	482, 253, 373, 370, 521, 281, 272, 268, 251, 315,
	381, 423, 503, 417, 0, 366, 0, 0, 492, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 249, 323, 206, 408,
	493, 285, 0, 97, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 518, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 0, 449, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 202, 226,
	0, 0, 407, 457, 469, 0, 0, 0, 254, 0,
	467, 421, 538, 234, 283, 454, 427, 465, 437, 286,
	0, 0, 466, 368, 523, 447, 535, 562, 563, 262,
	401, 547, 507, 556, 588, 227, 259, 415, 500, 541,
	489, 393, 519, 520, 327, 488, 294, 205, 365, 568,
	225, 475, 367, 243, 232, 525, 544, 288, 452, 431,
	432, 570, 583, 571, 573, 574, 214, 502, 533, 240,
	479, 0, 0, 590, 248, 499, 216, 530, 498, 389,
	324, 325, 215, 0, 453, 267, 292, 0, 0, 257,
	410, 527, 528, 255, 591, 229, 555, 221, 0, 554,
	403, 522, 531, 390, 379, 220, 529, 388, 378, 332,
	351, 352, 279, 305, 444, 371, 445, 304, 306, 399,
	398, 400, 209, 542, 0, 210, 0, 494, 543, 592,
	235, 236, 238, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 443, 439, 448, 0, 517, 536, 548,
	560, 566, 567, 569, 575, 576, 577, 578, 584, 582,
	579, 580, 581, 572, 402, 309, 490, 331, 369, 0,
	0, 420, 468, 241, 540, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 380,
	481, 537, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 250,
	212, 386, 394, 516, 310, 217, 218, 219, 509, 510,
	511, 512, 552, 553, 557, 458, 459, 460, 461, 291,
	546, 307, 464, 463, 329, 330, 375, 446, 0, 201,
	222, 364, 96, 450, 287, 589, 551, 545, 208, 224,
	0, 261, 0, 0, 0, 0, 0, 0, 2174, 0,
	0, 2173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 204, 211, 223, 233, 237, 244,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 433, 434, 436,
	438, 440, 451, 456, 470, 471, 472, 473, 474, 477,
	478, 483, 484, 485, 486, 487, 495, 496, 501, 524,
	526, 539, 558, 564, 476, 299, 300, 441, 442, 312,
	313, 586, 587, 298, 534, 565, 532, 585, 559, 435,
	374, 0, 0, 549, 0, 377, 280, 303, 318, 0,
	550, 497, 228, 462, 289, 252, 0, 0, 213, 247,
	231, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 245, 455, 242, 480, 504, 505, 506, 508, 391,
	265, 428, 1588, 0, 372, 514, 515, 314, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 1590, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	207, 0, 482, 253, 373, 370, 521, 281, 272, 268,
	251, 315, 381, 423, 503, 417, 0, 366, 0, 0,
	492, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 249, 323,
	206, 408, 493, 285, 0, 0, 0, 0, 1592, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 518, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 1366, 0, 1367,
	1368, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 0, 449, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	202, 226, 0, 0, 407, 457, 469, 0, 0, 0,
	254, 0, 467, 421, 538, 234, 283, 454, 427, 465,
	437, 286, 0, 0, 466, 368, 523, 447, 535, 562,
	563, 262, 401, 547, 507, 556, 588, 227, 259, 415,
	500, 541, 489, 393, 519, 520, 327, 488, 294, 205,
	365, 568, 225, 475, 367, 243, 232, 525, 544, 288,
	452, 431, 432, 570, 583, 571, 573, 574, 214, 502,
	533, 240, 479, 0, 0, 590, 248, 499, 216, 530,
	498, 389, 324, 325, 215, 0, 453, 267, 292, 0,
	0, 257, 410, 527, 528, 255, 591, 229, 555, 221,
	0, 554, 403, 522, 531, 390, 379, 220, 529, 388,
	378, 332, 351, 352, 279, 305, 444, 371, 445, 304,
	306, 399, 398, 400, 209, 542, 0, 210, 0, 494,
	543, 592, 235, 236, 238, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 443, 439, 448, 0, 517,
	536, 548, 560, 566, 567, 569, 575, 576, 577, 578,
	584, 582, 579, 580, 581, 572, 402, 309, 490, 331,
	369, 0, 0, 420, 468, 241, 540, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 380, 481, 537, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 250, 212, 386, 394, 516, 310, 217, 218, 219,
	509, 510, 511, 512, 552, 553, 557, 458, 459, 460,
	461, 291, 546, 307, 464, 463, 329, 330, 375, 446,
	0, 201, 222, 364, 0, 450, 287, 589, 551, 545,
	208, 224, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 211, 223, 233,
	237, 244, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 433,
	434, 436, 438, 440, 451, 456, 470, 471, 472, 473,
	474, 477, 478, 483, 484, 485, 486, 487, 495, 496,
	501, 524, 526, 539, 558, 564, 476, 299, 300, 441,
	442, 312, 313, 586, 587, 298, 534, 565, 532, 585,
	559, 435, 374, 0, 0, 549, 0, 377, 280, 303,
	318, 0, 550, 497, 228, 462, 289, 252, 0, 0,
	213, 247, 231, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 245, 455, 242, 480, 504, 505, 506,
	508, 391, 265, 428, 0, 392, 372, 514, 515, 314,
	88, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 97, 0,
	1569, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 96, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	97, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 2174, 0, 0, 2173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 2125, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 1773, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	2123, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 977, 328, 202,
	226, 975, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 2125, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1773,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	1569, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 3460, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1958, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 2567, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 2552, 0, 0, 0, 0, 239, 0,
	0, 246, 2553, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 1611, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 1610,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 672, 673, 674, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 3584, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 1773, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 3460, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 1592, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 1913, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 1904, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1740, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 1738, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 1736, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 1734,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 1732, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1728, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 1726, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 1724, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 1699, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 1596, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 97, 0, 0, 0,
	844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 1343, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 392,
	0, 372, 514, 515, 314, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 207, 0, 482,
	253, 373, 370, 521, 281, 272, 268, 251, 315, 381,
	423, 503, 417, 0, 366, 0, 0, 492, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 249, 323, 206, 408, 493,
	285, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 518, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 0, 449, 0, 614, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 202, 226, 0,
	0, 407, 457, 469, 0, 0, 0, 254, 0, 467,
	421, 538, 234, 283, 454, 427, 465, 437, 286, 0,
	0, 466, 368, 523, 447, 535, 562, 563, 262, 401,
	547, 507, 556, 588, 227, 259, 415, 500, 541, 489,
	393, 519, 520, 327, 488, 294, 205, 365, 568, 225,
	475, 367, 243, 232, 525, 544, 288, 452, 431, 432,
	570, 583, 571, 573, 574, 214, 502, 533, 240, 479,
	0, 0, 590, 248, 499, 216, 530, 498, 389, 324,
	325, 215, 0, 453, 267, 292, 0, 0, 257, 410,
	527, 528, 255, 591, 229, 555, 221, 0, 554, 403,
	522, 531, 390, 379, 220, 529, 388, 378, 332, 351,
	352, 279, 305, 444, 371, 445, 304, 306, 399, 398,
	400, 209, 542, 0, 210, 0, 494, 543, 592, 235,
	236, 238, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 443, 439, 448, 0, 517, 536, 548, 560,
	566, 567, 569, 575, 576, 577, 578, 584, 582, 579,
	580, 581, 572, 402, 309, 490, 331, 369, 0, 0,
	420, 468, 241, 540, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 380, 481,
	537, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 250, 212,
	386, 394, 516, 310, 217, 218, 219, 509, 510, 511,
	512, 552, 553, 557, 458, 459, 460, 461, 291, 546,
	307, 464, 463, 329, 330, 375, 446, 0, 201, 222,
	364, 0, 450, 287, 589, 551, 545, 208, 224, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 211, 223, 233, 237, 244, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 433, 434, 436, 438,
	440, 451, 456, 470, 471, 472, 473, 474, 477, 478,
	483, 484, 485, 486, 487, 495, 496, 501, 524, 526,
	539, 558, 564, 476, 299, 300, 441, 442, 312, 313,
	586, 587, 298, 534, 565, 532, 585, 559, 435, 374,
	0, 0, 549, 0, 377, 280, 303, 318, 0, 550,
	497, 228, 462, 289, 252, 0, 0, 213, 247, 231,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	245, 455, 242, 480, 504, 505, 506, 508, 391, 265,
	428, 392, 0, 372, 514, 515, 314, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 207,
	0, 482, 253, 373, 370, 521, 281, 272, 268, 251,
	315, 381, 423, 503, 417, 0, 366, 0, 0, 492,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 249, 323, 206,
	408, 493, 285, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 518, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 0, 449, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 202,
	226, 0, 0, 407, 457, 469, 0, 0, 0, 254,
	0, 467, 421, 538, 234, 283, 454, 427, 465, 437,
	286, 0, 0, 466, 368, 523, 447, 535, 562, 563,
	262, 401, 547, 507, 556, 588, 227, 259, 415, 500,
	541, 489, 393, 519, 520, 327, 488, 294, 205, 365,
	568, 225, 475, 367, 243, 232, 525, 544, 288, 452,
	431, 432, 570, 583, 571, 573, 574, 214, 502, 533,
	240, 479, 0, 0, 590, 248, 499, 216, 530, 498,
	389, 324, 325, 215, 0, 453, 267, 292, 0, 0,
	257, 410, 527, 528, 255, 591, 229, 555, 221, 0,
	554, 403, 522, 531, 390, 379, 220, 529, 388, 378,
	332, 351, 352, 279, 305, 444, 371, 445, 304, 306,
	399, 398, 400, 209, 542, 0, 210, 0, 494, 543,
	592, 235, 236, 238, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 443, 439, 448, 0, 517, 536,
	548, 560, 566, 567, 569, 575, 576, 577, 578, 584,
	582, 579, 580, 581, 572, 402, 309, 490, 331, 369,
	0, 0, 420, 468, 241, 540, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	380, 481, 537, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	250, 212, 386, 394, 516, 310, 217, 218, 219, 509,
	510, 511, 512, 552, 553, 557, 458, 459, 460, 461,
	291, 546, 307, 464, 463, 329, 330, 375, 446, 0,
	201, 222, 364, 0, 450, 287, 589, 551, 545, 208,
	224, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 211, 223, 233, 237,
	244, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 3592, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 433, 434,
	436, 438, 440, 451, 456, 470, 471, 472, 473, 474,
	477, 478, 483, 484, 485, 486, 487, 495, 496, 501,
	524, 526, 539, 558, 564, 476, 299, 300, 441, 442,
	312, 313, 586, 587, 298, 534, 565, 532, 585, 559,
	435, 374, 0, 0, 549, 0, 377, 280, 303, 318,
	0, 550, 497, 228, 462, 289, 252, 0, 0, 213,
	247, 231, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 245, 455, 242, 480, 504, 505, 506, 508,
	391, 265, 428, 392, 0, 372, 514, 515, 314, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 207, 0, 482, 253, 373, 370, 521, 281, 272,
	268, 251, 315, 381, 423, 503, 417, 0, 366, 0,
	0, 492, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 249,
	323, 206, 408, 493, 285, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 518, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 0, 449, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 202, 226, 0, 0, 407, 457, 469, 0, 0,
	0, 254, 0, 467, 421, 538, 234, 283, 454, 427,
	465, 437, 286, 0, 0, 466, 368, 523, 447, 535,
	562, 563, 262, 401, 547, 507, 556, 588, 227, 259,
	415, 500, 541, 489, 393, 519, 520, 327, 488, 294,
	205, 365, 568, 225, 475, 367, 243, 232, 525, 544,
	288, 452, 431, 432, 570, 583, 571, 573, 574, 214,
	502, 533, 240, 479, 0, 0, 590, 248, 499, 216,
	530, 498, 389, 324, 325, 215, 0, 453, 267, 292,
	0, 0, 257, 410, 527, 528, 255, 591, 229, 555,
	221, 0, 554, 403, 522, 531, 390, 379, 220, 529,
	388, 378, 332, 351, 352, 279, 305, 444, 371, 445,
	304, 306, 399, 398, 400, 209, 542, 0, 210, 0,
	494, 543, 592, 235, 236, 238, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 443, 439, 448, 0,
	517, 536, 548, 560, 566, 567, 569, 575, 576, 577,
	578, 584, 582, 579, 580, 581, 572, 402, 309, 490,
	331, 369, 0, 0, 420, 468, 241, 540, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 380, 481, 537, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 250, 212, 386, 394, 516, 310, 217, 218,
	219, 509, 510, 511, 512, 552, 553, 557, 458, 459,
	460, 461, 291, 546, 307, 464, 463, 329, 330, 375,
	446, 0, 201, 222, 364, 0, 450, 287, 589, 551,
	545, 208, 224, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 211, 223,
	233, 237, 244, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	433, 434, 436, 438, 440, 451, 456, 470, 471, 472,
	473, 474, 477, 478, 483, 484, 485, 486, 487, 495,
	496, 501, 524, 526, 539, 558, 564, 476, 299, 300,
	441, 442, 312, 313, 586, 587, 298, 534, 565, 532,
	585, 559, 435, 374, 0, 0, 549, 0, 377, 280,
	303, 318, 0, 550, 497, 228, 462, 289, 252, 0,
	0, 213, 247, 231, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 245, 455, 242, 480, 504, 505,
	506, 508, 391, 265, 428, 392, 0, 372, 514, 515,
	314, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 207, 0, 482, 253, 373, 370, 521,
	281, 272, 268, 251, 315, 381, 423, 503, 417, 0,
	366, 0, 0, 492, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 249, 323, 206, 408, 493, 285, 0, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 518, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 0, 449, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 202, 226, 0, 0, 407, 457, 469,
	0, 0, 0, 254, 0, 467, 421, 538, 234, 283,
	454, 427, 465, 437, 286, 0, 0, 466, 368, 523,
	447, 535, 562, 563, 262, 401, 547, 507, 556, 588,
	227, 259, 415, 500, 541, 489, 393, 519, 520, 327,
	488, 294, 205, 365, 568, 225, 475, 367, 243, 232,
	525, 544, 288, 452, 431, 432, 570, 583, 571, 573,
	574, 214, 502, 533, 240, 479, 0, 0, 590, 248,
	499, 216, 530, 498, 389, 324, 325, 215, 0, 453,
	267, 292, 0, 0, 257, 410, 527, 528, 255, 591,
	229, 555, 221, 0, 554, 403, 522, 531, 390, 379,
	220, 529, 388, 378, 332, 351, 352, 279, 305, 444,
	371, 445, 304, 306, 399, 398, 400, 209, 542, 0,
	210, 0, 494, 543, 592, 235, 236, 238, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 443, 439,
	448, 0, 517, 536, 548, 560, 566, 567, 569, 575,
	576, 577, 578, 584, 582, 579, 580, 581, 572, 402,
	309, 490, 331, 369, 0, 0, 420, 468, 241, 540,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 380, 481, 537, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 250, 212, 386, 394, 516, 310,
	217, 218, 219, 509, 510, 511, 512, 552, 553, 557,
	458, 459, 460, 461, 291, 546, 307, 464, 463, 329,
	330, 375, 446, 0, 201, 222, 364, 0, 450, 287,
	589, 551, 545, 208, 224, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 204,
	211, 223, 233, 237, 244, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 433, 434, 436, 438, 440, 451, 456, 470,
	471, 472, 473, 474, 477, 478, 483, 484, 485, 486,
	487, 495, 496, 501, 524, 526, 539, 558, 564, 476,
	299, 300, 441, 442, 312, 313, 586, 587, 298, 534,
	565, 532, 585, 559, 435, 374, 0, 0, 549, 0,
	377, 280, 303, 318, 0, 550, 497, 228, 462, 289,
	252, 0, 0, 213, 247, 231, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 245, 455, 242, 480,
	504, 505, 506, 508, 391, 265, 428, 392, 0, 372,
	514, 515, 314, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 207, 0, 482, 253, 373,
	370, 521, 281, 272, 268, 251, 315, 381, 423, 503,
	417, 0, 366, 0, 0, 492, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 249, 323, 206, 408, 493, 285, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	518, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 0,
	449, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 202, 226, 0, 0, 407,
	457, 469, 0, 0, 0, 254, 0, 467, 421, 538,
	234, 283, 454, 427, 465, 437, 286, 0, 0, 466,
	368, 523, 447, 535, 562, 563, 262, 401, 547, 507,
	556, 588, 227, 259, 415, 500, 541, 489, 393, 519,
	520, 327, 488, 294, 205, 365, 568, 225, 475, 367,
	243, 232, 525, 544, 288, 452, 431, 432, 570, 583,
	571, 573, 574, 214, 502, 533, 240, 479, 0, 0,
	590, 248, 499, 216, 530, 498, 389, 324, 325, 215,
	0, 453, 267, 292, 0, 0, 257, 410, 527, 528,
	255, 591, 229, 555, 221, 0, 554, 403, 522, 531,
	390, 379, 220, 529, 388, 378, 332, 351, 352, 279,
	305, 444, 371, 445, 304, 306, 399, 398, 400, 209,
	542, 0, 210, 0, 494, 543, 592, 235, 236, 238,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	443, 439, 448, 0, 517, 536, 548, 560, 566, 567,
	569, 575, 576, 577, 578, 584, 582, 579, 580, 581,
	572, 402, 309, 490, 331, 369, 0, 0, 420, 468,
	241, 540, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 380, 481, 537, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 250, 212, 386, 394,
	516, 310, 217, 218, 219, 509, 510, 511, 512, 552,
	553, 557, 458, 459, 460, 461, 291, 546, 307, 464,
	463, 329, 330, 375, 446, 0, 201, 222, 364, 0,
	450, 287, 589, 551, 545, 208, 224, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 204, 211, 223, 233, 237, 244, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 433, 434, 436, 438, 440, 451,
	456, 470, 471, 472, 473, 474, 477, 478, 483, 484,
	485, 486, 487, 495, 496, 501, 524, 526, 539, 558,
	564, 476, 299, 300, 441, 442, 312, 313, 586, 587,
	298, 534, 565, 532, 585, 559, 435, 374, 0, 0,
	549, 0, 377, 280, 303, 318, 0, 550, 497, 228,
	462, 289, 252, 0, 0, 213, 247, 231, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 245, 455,
	242, 480, 504, 505, 506, 508, 391, 265, 428, 0,
	0, 372, 514, 515, 314,
}

var yyPact = [...]int{
	-1000, -1000, 4589, -1000, -467, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2311, 2501, -1000, -1000, -1000, -1000, 2441, -1000,
	1197, 1867, -1000, 2176, 338, -1000, 47683, 575, -1000, 44995,
	572, 555, 147, -82, 5295, 30211, -1000, 236, -1000, 226,
	46339, 231, -1000, -1000, -1000, -1000, -316, 18785, 2103, 115,
	112, 47683, -1000, -1000, -1000, -1000, 2408, 1814, -1000, 412,
	-1000, -1000, -1000, -1000, -1000, -1000, 44323, -1000, 964, -1000,
	-1000, 2194, 2181, 2449, 725, 2134, -1000, 2339, 1814, -1000,
	18785, 2394, 2260, 18113, 18113, 492, -1000, -1000, 261, -1000,
	-1000, -1000, 2454, 25507, 47683, -1000, 32899, 407, -1000, 2176,
	-1000, -1000, -1000, 98, -1000, 378, 1745, -1000, 1736, -1000,
	835, 868, 398, 537, 531, 397, 395, 394, 393, 392,
	386, 385, 384, 405, -1000, 745, 745, -119, -123, 1259,
	490, 447, 447, 890, 530, 2145, 2140, -1000, -1000, 745,
	745, 745, 413, 745, 745, 745, 745, 350, 349, 745,
	745, 745, 745, 745, 745, 745, 745, 745, 745, 745,
	745, 745, 745, 745, 745, 745, 470, 2176, 331, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47683, 253, 47683, -1000, 652, 47683, 47683, -1000,
	1175, 1173, -1000, -1000, 892, -1000, -1000, 892, 123, 892,
	892, 892, 892, 240, 669, 111, -1000, 235, 314, 218,
	323, 909, 248, -1000, -1000, 311, 909, 963, 909, 1574,
	1569, -1000, 729, 322, 228, -1000, 892, 892, -1000, -1000,
	12040, 171, 12040, 12040, -1000, 2172, -1000, -1000, -1000, -1000,
	-1000, 1188, -1000, -1000, -1000, -1000, 7, 528, -1000, -1000,
	-1000, -1000, 46339, 43651, 295, -1000, -1000, 55, -1000, -1000,
	1610, 945, 18785, 1095, -1000, 1991, 703, -1000, -1000, -1000,
	-1000, -1000, 611, -1000, 19457, 19457, 19457, 19457, -1000, -1000,
	1424, 42979, 1424, 1424, 19457, 1424, -1000, 19457, 1424, 1424,
	1424, 18785, 1424, 1424, 1424, 1424, -1000, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, -1000, -1000, -1000, -1000, 1424,
	639, 1424, 1424, 1424, 1424, 1424, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1424, 1424, 1424, 1424, 1424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21473, 1383, 1381, 1379, -1000, 16097, 1424,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47683, -1000, 1424, 259, 46339, 46339, 367, 2339, 1814, -1000,
	2408, 2373, 412, 2665, 1459, 1447, 1318, 1814, 1716, 47683,
	-1000, 1771, -1000, -1000, -1000, -1000, 2018, 1278, 1559, -1000,
	-1000, -1000, -1000, 1666, 18785, -1000, -1000, 2438, -1000, 22818,
	631, 2437, 42307, -1000, 492, 492, 1734, 466, 37, -1000,
	-1000, -1000, -1000, 782, 29539, -1000, -1000, -1000, -1000, -1000,
	1573, 47683, -1000, -1000, 5685, 1191, -1000, 1864, -1000, 2555,
	1564, -1000, 1792, 18785, 1874, 552, 1191, 544, 538, 536,
	-1000, -17, -1000, -1000, -1000, -1000, -1000, -1000, 745, 745,
	745, -1000, 401, 2392, 338, 5317, -1000, -1000, -1000, 41635,
	1837, 1191, -1000, 1822, -1000, 847, 574, 637, 637, 1191,
	-1000, -1000, 47011, 1191, 846, 839, 1191, 1191, 46339, 46339,
	-1000, 40963, -1000, 40291, 39619, 1163, 46339, 38947, 38275, 37603,
	36931, 36259, -1000, 2025, -1000, 1878, -1000, -1000, -1000, 47011,
	1191, 1191, 47011, 46339, 47011, 47683, 1191, -1000, -1000, 415,
	-1000, -1000, 1160, 1148, 1146, 745, 745, 1132, 1557, 1556,
	1550, 745, 745, 1131, 1538, 31555, 1525, 328, 1130, 1126,
	1123, 1147, 1520, 205, 1513, 1103, 1080, 1120, 46339, 1821,
	47683, -1000, 296, 752, 983, 535, 911, 780, 2176, 2102,
	1733, 524, 551, 1191, 467, 467, 46339, -1000, 14074, -1000,
	556, -1000, -1000, -1000, -1000, 1508, 18785, -1000, 910, 909,
	909, -1000, -1000, -1000, -1000, -1000, -1000, 892, 47683, 910,
	-1000, -1000, -1000, 909, 892, 47683, 892, 892, 892, 892,
	909, 909, 909, 892, 47683, 47683, 47683, 47683, 47683, 47683,
	47683, 47683, 47683, 12040, 729, 892, 892, -324, 892, 242,
	-330, -1000, 1504, -1000, -1000, 1993, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12040, 12040,
	-1000, -1000, -1000, -1000, -1000, 1732, -1000, 219, 82, 220,
	-1000, 35587, 410, 772, -1000, 410, -1000, -1000, -1000, 1731,
	34915, -1000, -334, -346, -375, -380, -1000, -1000, -1000, -1000,
	-383, -384, -1000, -1000, -1000, 18785, 18785, 18785, 18785, -152,
	-1000, 883, 19457, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	154, 901, 19457, 19457, 19457, 19457, 19457, 19457, 19457, 19457,
	19457, 19457, 19457, 19457, 19457, 19457, 19457, -1000, -1000, 27523,
	6811, 6811, 703, 703, 703, 703, -1000, -78, 1725, 47011,
	-1000, -1000, -1000, 629, 18785, 18785, 703, -1000, 1191, 16097,
	20129, 18113, 18113, 18785, 794, 945, 47011, 18785, -1000, 1318,
	-1000, -1000, -1000, 1183, -1000, 861, 2163, 2163, 2163, 2163,
	18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785,
	2163, 46339, 46339, 1486, 18785, 18785, 18785, 18785, 18785, 18785,
	14752, 18785, 18785, 19457, 18785, 18785, 18785, 1318, 18785, 18785,
	18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785,
	18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785,
	18785, 18785, 18785, 18785, 18785, 1318, 18785, 1216, 18785, 18785,
	18113, 13396, 18113, 18113, 18113, 18113, 18113, -1000, -1000, -1000,
	-1000, -1000, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785,
	1318, 18785, 18785, 18785, 18785, 18785, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1317, 1336, 1245, 18785,
	-1000, 1724, -1000, -100, 24835, 18785, 1497, 1490, 2434, 1889,
	46339, -1000, -1000, -1000, 2339, -1000, 2339, 1317, 2023, 18113,
	-1000, -1000, 2555, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1552, -1000, 47683, 1716, 2242, 46339, 2012, 1478, 403,
	-1000, 18785, 18785, 1699, -1000, 1494, 47683, -1000, -152, -1000,
	34243, -1000, -1000, 11362, 47683, 381, 47683, -1000, 24163, 33571,
	324, -1000, 37, 1669, -1000, 74, 30, 15424, 699, -1000,
	-1000, -1000, 1259, 20801, 1597, 699, 149, -1000, -1000, -1000,
	1792, -1000, 1792, 1792, 1792, 1792, 403, 403, 403, 403,
	-1000, -1000, -1000, -1000, -1000, 1820, 1819, -1000, 1792, 1792,
	1792, 1792, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1810,
	1810, 1810, 1809, 1809, 1794, 1794, 457, -1000, 18785, -1000,
	-1000, 312, 32899, 2206, 1113, 1269, 296, 472, 1888, 1191,
	1191, 1191, 472, -1000, 1229, 1227, 1223, -1000, -457, 1698,
	-1000, -1000, 2391, -1000, -1000, 578, 920, 903, 1061, 46339,
	272, 375, -1000, 451, -1000, 32899, 1191, 833, 637, 1191,
	-1000, 1191, -1000, -1000, -1000, -1000, -1000, 1191, -1000, -1000,
	1697, -1000, 1664, 922, 894, 897, 893, 1697, -1000, -1000,
	-91, 1697, -1000, 1697, -1000, 1697, -1000, 1697, -1000, 1697,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 784,
	244, -229, 46339, 272, 504, -1000, 499, 27523, -1000, -1000,
	-1000, 27523, 27523, -1000, -1000, -1000, -1000, 1476, 1464, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -443, 47683,
	-1000, 285, 763, 357, 396, 346, 47683, 887, 2335, 2334,
	2333, 2332, 2330, 2324, 2322, 443, 2320, 2312, 2302, 2300,
	2299, 2290, 709, 2286, 2276, 2275, 2269, 2266, 2245, 2225,
	302, 348, 47683, 47683, 467, 1954, 47683, 2203, 47683, -1000,
	-1000, -1000, -1000, 461, 47683, -1000, 325, -1000, -1000, -1000,
	-1000, -1000, -1000, 945, 47683, -1000, -1000, 892, 892, -1000,
	-1000, 47683, 892, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 892, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47683, -1000, -1000, -1000, -1000, 7, 222, -1000, -1000,
	46339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-38, -1000, 81, 67, 404, -1000, -1000, -1000, -1000, -1000,
	2292, -1000, 945, 821, 809, -1000, 1424, -1000, -1000, 1025,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 154, 19457, 19457,
	19457, 1628, 508, 2028, 1293, 1249, 933, 933, 1062, 1062,
	710, 710, 710, 710, 710, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1456, -1000, 1424, 47011, 1536, 13396, 1746,
	1977, 1318, 3014, -1000, 1532, -1000, 1532, 1198, 790, -1000,
	18785, 1318, 3006, -1000, -1000, 1318, 1318, 1318, 18785, -1000,
	-1000, 18785, 18785, 18785, 18785, 1269, 1269, 1269, 1269, 1269,
	1269, 1269, 1269, 1269, 1269, 18785, 1691, 1685, 2431, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1541, 1269, 1269, 1269, 1269, 1269, 18785, 1970, -1000, -1000,
	-1000, 1273, 3001, 1850, 2987, 1269, 1269, -1000, 1269, 2981,
	2974, 1318, 1610, 1318, 1673, -1000, 2962, 1269, 2958, 2951,
	2945, 2254, 2932, 2906, 2902, 1269, 1269, 1269, 2223, 2893,
	2889, 2870, 2841, 2762, 2743, 2720, 2716, 2526, 1269, -155,
	1269, 1318, -1000, -1000, -1000, -1000, -1000, 2521, 2167, 1318,
	1671, 1424, 626, -1000, -1000, 1532, 1318, 1318, 1532, 1532,
	2424, 2403, 2393, 2385, 2369, 2359, 1269, 1269, -1000, 1269,
	2336, 2329, 2162, 2121, 1318, -1000, 1245, 47683, -1000, -304,
	-1000, 59, 717, 1424, -1000, 31555, 1318, -1000, -1000, 5971,
	-1000, 1065, -1000, -1000, -1000, 28867, 1560, 2555, -1000, -1000,
	1424, 1530, -1000, -1000, 403, 132, 28195, 600, 600, 163,
	945, 945, 18785, -1000, -1000, -1000, -1000, -1000, -1000, 606,
	2337, 424, 1424, -1000, 1695, 2174, -1000, -1000, -1000, 2239,
	22146, -1000, -1000, 1424, 1424, 47683, 1622, 1599, -1000, 601,
	-1000, 1203, 1669, 37, 72, -1000, -1000, -1000, -1000, 945,
	-1000, 1219, 382, 719, -1000, 437, -1000, -1000, -1000, -1000,
	2126, 146, -1000, -1000, -1000, 266, 403, -1000, -1000, -1000,
	-1000, -1000, -1000, 1454, 1454, -1000, -1000, -1000, -1000, -1000,
	1112, -1000, -1000, -1000, -1000, 1109, -1000, -1000, 1108, -1000,
	-1000, 2309, 1942, 312, -1000, -1000, 745, 1451, -1000, -1000,
	2130, 745, 745, 46339, -1000, -1000, 1585, 2206, 285, 47683,
	804, 1952, -1000, 1888, 1888, 1888, 47683, -1000, -1000, -1000,
	-1000, -1000, -1000, -445, 80, 430, -1000, -1000, -1000, 4856,
	46339, 1496, -1000, 268, -1000, 1580, -1000, 46339, -1000, 1489,
	1808, 1191, 1191, -1000, -1000, -1000, 46339, 1424, -1000, -1000,
	-1000, -1000, 550, 2175, 326, -1000, -1000, -180, -1000, -1000,
	272, 268, 47011, 1191, 699, -1000, -1000, -1000, -1000, -1000,
	-446, 1485, 509, 277, 361, 47683, 47683, 47683, 47683, 47683,
	613, -1000, -1000, 94, -1000, -1000, -1000, -1000, 252, -1000,
	-1000, -1000, -1000, -1000, -1000, 252, -1000, -1000, -1000, -1000,
	-1000, 252, -1000, 1439, -1000, -1000, -1000, -1000, 252, -1000,
	-1000, -1000, 91, -1000, -1000, -1000, -1000, 252, -1000, -1000,
	-1000, -1000, -1000, -1000, 252, -1000, -1000, -1000, -1000, 327,
	497, -1000, 47683, 47683, 657, -1000, -1000, -1000, -1000, -1000,
	-1000, 909, -1000, -1000, 909, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2169, 47683, 65,
	-404, -1000, -399, 18785, -1000, -1000, -1000, -1000, 1392, 506,
	2028, 19457, 19457, 19457, -1000, -1000, -1000, 1003, 1003, 27523,
	-1000, 18785, 18113, -1000, -1000, 18785, 18785, 785, -1000, 18785,
	1122, -1000, 18785, -1000, -1000, -1000, 1245, 1269, 1269, 1269,
	1269, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1723, 18785, 18785, 18785, 1318, 364, -1000, -1000, -1000,
	-1000, -1000, 2428, -1000, 18785, -1000, 27523, 18785, 18785, 18785,
	-1000, -1000, -1000, 18785, 18785, -1000, -1000, 18785, 18785, -1000,
	18785, 18785, 18785, -1000, 18785, 18785, 18785, 18785, -1000, -1000,
	-1000, -1000, 18785, 18785, 18785, 18785, 18785, 18785, 18785, 18785,
	18785, 18785, -1000, -1000, 32899, 119, -155, 1216, 119, 1216,
	-1000, 18113, 12718, -1000, -1000, -1000, -1000, -1000, 18785, 18785,
	18785, 18785, 18785, 18785, -1000, -1000, -1000, 18785, 18785, -1000,
	18785, -1000, 18785, -1000, -1000, -1000, -1000, -1000, 717, -1000,
	637, 637, 637, 46339, -1000, -1000, -1000, -1000, 1668, -1000,
	2271, -1000, 2045, 2037, 2414, 2337, -1000, 24163, 2555, -1000,
	-1000, 46339, -290, -1000, 2099, 2036, 600, 600, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10684, 2339, 18785, 1951, 47011,
	158, -1000, 23491, 46339, 47011, 24163, 24163, 24163, 24163, 24163,
	-1000, 1986, 1984, -1000, 1976, 1972, 1994, 47683, -1000, 1317,
	1482, -1000, 18785, 26179, 1623, 24163, -1000, -1000, 24163, 47683,
	10006, -1000, -1000, 62, 21, -1000, -1000, -1000, -1000, 1259,
	-1000, -1000, 2759, 2238, 2123, -1000, -1000, -1000, -1000, -1000,
	1463, -1000, 1461, 1663, 1438, 1430, 244, -1000, 1873, 2155,
	745, 745, -1000, 1107, -1000, 1191, 1427, 1426, -1000, -1000,
	-1000, 507, -1000, 2201, 47683, 1934, 1933, 1917, -1000, -454,
	1093, 1806, 1816, 18785, 1805, 2390, 1648, 46339, -1000, -1000,
	47011, -1000, 262, -1000, 312, 46339, -1000, -1000, -1000, 375,
	47683, -1000, 4371, -1000, -1000, -1000, 268, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47683, 283, -1000, 1802, 1182, -1000,
	-1000, 1793, -1000, -1000, -1000, -1000, 255, 355, 1425, 247,
	1423, 247, 247, 1422, 247, 1407, 247, 247, -1000, 47683,
	649, 1942, 47683, -1000, -1000, -1000, 892, 892, -1000, -1000,
	2150, -1000, 1191, 1269, 19457, 19457, -1000, 703, 304, -130,
	1792, 1792, -1000, 1792, 1794, -1000, 1792, 207, 1792, 202,
	1792, -1000, -1000, 1318, 1318, 1245, -1000, 2098, 1258, -1000,
	945, 18785, 2303, -1000, -1000, -1000, -1000, -1000, -23, 2291,
	2284, 1269, -1000, 1789, 1788, 18785, 1269, 1318, 2041, 1269,
	1269, 1269, 1269, -1000, 945, 1245, 2267, 1245, 1269, 1269,
	2263, 339, 1269, 1421, 1421, 1421, 1421, 1421, 1245, 1245,
	1245, 1245, 46339, -1000, -155, -1000, -1000, -198, -202, -1000,
	1318, -155, 1659, 1318, -1000, 2033, 2003, 2229, 1811, 1269,
	2208, 1269, 1269, 1269, 1784, -1000, 2264, 2264, 2264, 1406,
	1065, 47683, -1000, -1000, -1000, -1000, 2337, 2401, 1652, -1000,
	-1000, 132, 482, -1000, 2076, 2036, -1000, 2380, 2093, 2365,
	-1000, -1000, -1000, -1000, -1000, 945, -1000, 2187, 1619, -1000,
	761, 1621, -1000, -1000, 17441, 1417, 2029, 594, 1406, 1681,
	2174, 1880, 1916, 3290, -1000, -1000, -1000, -1000, 1983, -1000,
	1973, -1000, -1000, 1771, -1000, 2137, 381, 24163, 1651, 1651,
	-1000, 592, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 935,
	7106, 2447, -1000, 1389, -1000, 1208, 199, 1078, -1000, -1000,
	745, 745, -1000, 829, 819, -1000, 47683, 1781, -1000, 403,
	1386, 403, 1076, -1000, -1000, 1070, -1000, -1000, -1000, -1000,
	1743, 1946, -1000, -1000, -1000, -1000, 47683, -1000, -1000, 47683,
	47683, 47683, 1776, 2363, -1000, 18785, 1775, 755, 2133, 46339,
	46339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 486, 745, -421, 344, 343, 745, 745, 745,
	-456, -1000, -1000, 1404, 1402, -1000, -121, -1000, 18785, -1000,
	-1000, -1000, 1073, 1073, 1383, 1381, 1379, -1000, 1771, -1000,
	-1000, -1000, 1579, -1000, -1000, -97, 46339, 46339, 46339, 46339,
	-1000, -1000, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 703, 1318, 366, -99, 1318, -1000, -1000, 403, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18785,
	-1000, 18785, -1000, 945, 18785, 2339, 1358, 18785, 18785, -1000,
	1063, 1046, 1269, -1000, -1000, -1000, 18785, -1000, -1000, -1000,
	-1000, -1000, 18785, -1000, -1000, -1000, 18785, 217, 1003, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1318,
	377, -1000, -1000, -1000, -1000, 2404, -1000, 1318, 18785, -1000,
	-1000, 18785, -1000, 18785, 18785, -1000, 18785, -1000, 18785, -1000,
	-1000, -1000, -1000, 18785, 1424, 2059, 1424, 1424, 26179, -1000,
	-1000, 2401, 2395, 2362, 2085, 2087, 2087, 2076, -1000, 2360,
	2358, -1000, 1338, 2354, 1334, 816, -1000, 47011, 18785, 158,
	-1000, 428, 46339, 158, 46339, -1000, 2396, -1000, -1000, 18785,
	1774, -1000, 18785, -1000, -1000, -1000, -1000, 6811, 2337, 1651,
	-1000, -1000, 716, -1000, 18785, -1000, -1000, -1000, 3903, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1319, 1313, -1000,
	-1000, 1773, 18785, -1000, -1000, -1000, 1565, 1537, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1771, -1000, -1000, -1000,
	-1000, 375, -450, 2090, 46339, 1032, -1000, 1398, 1648, 368,
	158, 1311, 745, 745, 745, 1024, 1011, 31555, 1363, -1000,
	46339, 432, -1000, 375, -1000, -126, -127, 1269, -1000, -1000,
	2228, -1000, -1000, 12718, -1000, -1000, 1753, 1887, -1000, -1000,
	-1000, -1000, 2010, -87, -105, -1000, -1000, 1269, 1269, 1675,
	1318, -1000, 1269, 1269, 1399, 1364, -1000, 1269, 1245, 1763,
	-1000, 217, 1318, 1915, -1000, -1000, 6811, -1000, -1000, 2396,
	2347, 119, -1000, -1000, 294, 119, 945, 1741, 1269, 1602,
	1596, 1269, 1269, 26851, -1000, 2346, 2341, 32227, 32227, 717,
	2395, -170, 18785, 18785, 2031, 1015, -1000, -1000, -1000, -1000,
	1306, 1279, -1000, 1277, -1000, 2446, -1000, 945, -1000, 158,
	-1000, 554, 1621, -1000, 2339, 945, 46339, 945, 133, 2396,
	-1000, 1269, -1000, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424, 1424,
	1424, 1424, 1424, -1000, -1000, 46339, 1714, -1000, -1000, 2212,
	1343, 79, -1000, 1337, 1648, -1000, -1000, 151, -1000, 18785,
	-1000, 31555, 1274, 1234, -1000, -1000, -1000, -1000, -456, -1000,
	-1000, -1000, -1000, -1000, -1000, 412, 1631, -1000, 738, 46339,
	47683, -1000, 2009, -1000, -1000, -1000, 18785, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18785, -1000, 1318, 1906, -1000,
	-284, -1000, -429, 18785, -155, -1000, -1000, -155, -1000, 18785,
	-1000, -1000, 18785, -1000, 18785, -1000, -1000, 1305, -1000, -1000,
	-1000, -1000, -1000, 1305, 1305, -1000, -170, -1000, 1625, -1000,
	46339, 945, 1610, -1000, 999, -1000, -1000, -1000, -1000, -1000,
	47011, 1621, 46339, -1000, 1303, 1318, 1424, 2339, -1000, 1294,
	-1000, 412, -1000, 1750, 1816, -1000, -1000, -1000, 16769, -1000,
	-1000, -1000, -1000, -1000, 194, -95, 12718, 9328, 1266, -1000,
	-94, 1269, 1245, -1000, -386, -1000, -1000, -1000, -1000, 216,
	-1000, -1000, 1610, -1000, -1000, 1584, 1524, 1516, 30883, -1000,
	-1000, -1000, -1000, -170, -1000, -1000, 2210, -1000, -1000, 1607,
	-1000, -1000, 26179, 45667, -1000, -81, 263, -95, 18785, 1744,
	1318, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28,
	-1000, -1000, -1000, -1000, -1000, 1793, -103, -1000, -1000, -1000,
	206, -410, -195, -200, -1000, -1000, 19457, -1000, 18785, -1000,
	18785, -1000, 18785, -1000, -1000, -1000, 46339, 1424, -1000, 1241,
	-1000, 3811, -216, 1903, -1000, -35, -1000, -1000, -1000, 931,
	1215, -1000, -1000, -1000, -1000, -1000, -1000, 1635, 46339, -1000,
	454, -1000, -1000, -97, -116, 806, -1000, -1000, -1000, -1000,
	-1000, 1503, 1361, 1269, -1000, 46339, -1000, 45667, -207, 699,
	6811, -1000, 1902, 1893, 2421, -1000, -1000, -1000, -1000, -1000,
	-1000, -462, 1239, 291, -1000, -1000, 206, -1000, 18785, -1000,
	18785, -1000, 1318, -1000, -1000, 2179, 133, -1000, 2445, -1000,
	2422, 645, 645, -1000, 992, -462, -1000, -1000, 1269, 1269,
	-1000, -219, -1000, -1000, -1000, -1000, -1000, 438, 996, -1000,
	-1000, -1000, -1000, -1000, 6811, -1000, -1000, -1000, 241, 241,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 3029, 3027, 25, 1, 34, 33, 3025, 52, 110,
	213, 58, 246, 119, 3024, 189, 3022, 3021, 3019, 3017,
	3015, 3014, 2485, 2484, 2476, 3013, 3008, 3003, 2997, 2995,
	2993, 2992, 2986, 2984, 2979, 194, 184, 210, 2972, 2970,
	2969, 133, 206, 100, 103, 207, 2965, 2963, 93, 2961,
	2960, 2959, 204, 203, 201, 876, 2950, 196, 130, 64,
	2947, 2946, 2945, 2937, 2934, 2933, 2932, 2931, 2930, 2928,
	2926, 2924, 2923, 2922, 2917, 2916, 2914, 2913, 2912, 2911,
	292, 2908, 2907, 16, 2905, 89, 2900, 2899, 2898, 2894,
	2892, 7, 2891, 2889, 20, 42, 2888, 2887, 48, 2886,
	2883, 2881, 2880, 2879, 14, 2877, 22, 2876, 38, 2875,
	2873, 146, 2872, 2871, 2870, 39, 2868, 2867, 2864, 2863,
	2856, 2853, 2852, 158, 2851, 2839, 2827, 192, 212, 2821,
	2818, 186, 118, 120, 2813, 2812, 115, 205, 2809, 141,
	2807, 2806, 2803, 172, 2792, 2216, 2787, 2785, 75, 88,
	2776, 50, 2775, 2770, 9, 90, 70, 4, 81, 83,
	2768, 2767, 72, 102, 2765, 121, 2764, 2763, 116, 86,
	2762, 114, 111, 2761, 2760, 17, 21, 2757, 35, 29,
	36, 80, 2752, 2751, 122, 2750, 2749, 2748, 109, 2746,
	2744, 3164, 2743, 107, 148, 117, 92, 2739, 54, 78,
	2738, 2735, 2732, 2726, 2721, 56, 2719, 2718, 2715, 163,
	71, 188, 2714, 41, 46, 57, 150, 2712, 74, 97,
	211, 185, 2708, 2707, 156, 153, 2705, 2696, 66, 45,
	44, 2694, 123, 144, 136, 26, 113, 155, 2691, 2688,
	69, 85, 2686, 2685, 2684, 2681, 187, 2677, 2676, 79,
	2675, 65, 2672, 191, 2669, 6, 67, 2666, 49, 179,
	2664, 87, 2655, 2653, 77, 143, 82, 37, 2652, 178,
	183, 145, 177, 2651, 2650, 60, 2643, 2637, 2636, 208,
	335, 2633, 2632, 101, 190, 160, 171, 104, 2626, 359,
	2625, 2624, 105, 2, 5282, 2618, 40, 180, 2617, 2615,
	6014, 154, 43, 24, 2607, 134, 2605, 2604, 2599, 2597,
	224, 195, 128, 181, 63, 2593, 2584, 2581, 13, 2577,
	2576, 2575, 2574, 2569, 2568, 91, 32, 31, 30, 251,
	76, 11, 112, 182, 174, 96, 2567, 2562, 2561, 137,
	106, 2559, 176, 175, 139, 168, 2558, 193, 169, 138,
	2556, 95, 28, 2555, 2551, 2550, 2547, 108, 2541, 2540,
	2539, 2538, 173, 164, 135, 94, 2537, 98, 132, 170,
	165, 53, 2536, 47, 2533, 2529, 27, 202, 23, 2528,
	12, 124, 151, 2523, 4148, 198, 2521, 15, 347, 166,
	2518, 2517, 5, 8, 10, 2513, 2506, 2505, 2504, 152,
	2502, 2499, 2497, 2494, 19, 51, 18, 3, 125, 131,
	2492, 2489, 159, 162, 2486, 2480, 2472, 2466, 3168, 0,
	147, 2465, 214,
}

//line sql.y:8409
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 261, 384, 385, 385, 259, 259, 33, 75,
	35, 35, 34, 34, 37, 37, 36, 8, 8, 8,
	9, 9, 9, 9, 9, 9, 9, 9, 10, 10,
	10, 10, 10, 11, 11, 11, 11, 13, 13, 13,
	13, 13, 20, 21, 12, 12, 22, 22, 109, 109,
	23, 24, 24, 24, 24, 420, 420, 186, 186, 184,
	184, 185, 185, 264, 264, 25, 268, 268, 270, 270,
	270, 270, 260, 260, 260, 26, 26, 269, 269, 271,
	271, 271, 274, 274, 274, 274, 313, 313, 313, 27,
	27, 27, 27, 27, 27, 27, 129, 129, 387, 387,
	386, 380, 380, 379, 379, 378, 383, 383, 382, 382,
	381, 39, 40, 49, 49, 49, 49, 50, 51, 388,
	388, 353, 56, 56, 55, 55, 55, 55, 55, 55,
	57, 57, 53, 53, 52, 52, 54, 54, 355, 355,
	341, 341, 354, 354, 354, 354, 354, 354, 354, 340,
	340, 140, 140, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	403, 403, 403, 402, 402, 239, 239, 239, 239, 239,
	239, 239, 239, 150, 150, 162, 162, 162, 162, 162,
	148, 148, 149, 147, 147, 147, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 161, 161, 157, 157, 157,
	158, 158, 158, 159, 159, 404, 404, 404, 404, 318,
	318, 318, 318, 321, 321, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 322, 322, 322, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 324,
	339, 339, 325, 325, 333, 333, 334, 334, 335, 335,
	335, 336, 336, 336, 337, 337, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 332, 332, 331, 331, 331,
	342, 367, 367, 366, 366, 364, 364, 364, 364, 364,
	364, 364, 364, 351, 351, 361, 361, 361, 361, 361,
	350, 350, 346, 346, 346, 347, 347, 348, 348, 345,
	345, 349, 349, 363, 363, 362, 362, 343, 343, 344,
	344, 369, 405, 405, 405, 405, 405, 406, 406, 370,
	395, 397, 397, 397, 396, 396, 393, 394, 392, 392,
	392, 392, 392, 85, 85, 85, 287, 287, 288, 288,
	359, 359, 358, 358, 358, 360, 360, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 282, 282,
	282, 391, 391, 391, 391, 391, 391, 390, 390, 390,
	356, 356, 356, 389, 389, 58, 58, 219, 219, 408,
	408, 409, 409, 409, 46, 46, 46, 46, 46, 46,
	45, 45, 45, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 47, 47, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 111, 111,
	112, 112, 112, 112, 114, 114, 114, 372, 372, 59,
	59, 3, 3, 174, 176, 177, 177, 175, 175, 175,
	175, 175, 175, 61, 61, 60, 60, 179, 178, 180,
	180, 180, 1, 1, 2, 2, 4, 4, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	338, 338, 338, 371, 371, 373, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 117, 116, 116, 115,
	118, 118, 118, 118, 118, 118, 118, 118, 375, 375,
	375, 62, 62, 376, 326, 327, 328, 5, 6, 352,
	374, 125, 125, 29, 38, 38, 30, 30, 30, 30,
	31, 31, 63, 64, 415, 415, 68, 68, 68, 69,
	69, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 281, 281, 290, 290, 280, 280, 305, 305, 305,
	283, 283, 283, 284, 284, 401, 401, 401, 277, 277,
	66, 66, 66, 306, 306, 306, 306, 70, 70, 410,
	410, 411, 411, 412, 412, 412, 71, 72, 72, 308,
	308, 309, 309, 73, 74, 86, 86, 86, 86, 86,
	86, 86, 87, 87, 87, 87, 110, 110, 110, 15,
	15, 15, 15, 82, 82, 82, 14, 14, 17, 67,
	67, 76, 398, 398, 399, 400, 400, 400, 400, 77,
	79, 79, 32, 32, 32, 32, 32, 32, 135, 135,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 130, 130, 130, 124, 124, 421, 80,
	81, 81, 128, 128, 128, 121, 121, 121, 127, 127,
	127, 16, 16, 18, 263, 263, 19, 19, 132, 132,
	134, 134, 134, 134, 134, 136, 136, 136, 136, 136,
	136, 136, 131, 131, 133, 133, 133, 133, 298, 298,
	298, 297, 297, 168, 168, 170, 169, 169, 171, 171,
	172, 172, 172, 172, 217, 217, 194, 194, 256, 256,
	257, 257, 255, 255, 262, 262, 258, 258, 258, 258,
	265, 265, 173, 173, 173, 173, 181, 181, 182, 182,
	183, 183, 307, 307, 303, 303, 303, 302, 302, 187,
	187, 187, 189, 188, 188, 188, 188, 190, 190, 192,
	192, 191, 191, 193, 198, 198, 197, 197, 195, 195,
	195, 195, 196, 196, 196, 196, 199, 199, 145, 145,
	145, 145, 145, 145, 145, 160, 160, 160, 160, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	246, 246, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	154, 222, 222, 221, 221, 88, 88, 88, 89, 89,
	90, 90, 90, 90, 90, 91, 91, 91, 91, 91,
	146, 146, 93, 93, 92, 92, 212, 212, 295, 295,
	94, 95, 95, 98, 98, 97, 96, 96, 102, 102,
	99, 99, 101, 101, 100, 103, 103, 104, 105, 105,
	278, 278, 200, 200, 208, 208, 208, 208, 201, 201,
	201, 201, 201, 201, 201, 209, 209, 209, 216, 210,
	210, 206, 206, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 165,
	165, 165, 165, 227, 227, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	153, 153, 166, 166, 166, 166, 167, 167, 167, 167,
	167, 167, 167, 315, 315, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 422, 422, 329, 329,
	329, 329, 207, 207, 207, 207, 207, 126, 126, 126,
	126, 126, 312, 312, 312, 316, 316, 316, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 317, 317, 225, 225, 122, 122, 223,
	223, 224, 226, 226, 218, 218, 218, 218, 220, 220,
	203, 203, 203, 228, 228, 229, 229, 106, 107, 107,
	108, 108, 230, 230, 232, 231, 231, 233, 234, 234,
	234, 235, 235, 236, 236, 236, 48, 48, 48, 48,
	48, 43, 43, 43, 43, 44, 44, 44, 44, 137,
	137, 137, 137, 139, 139, 138, 138, 83, 83, 84,
	84, 84, 414, 414, 414, 413, 413, 413, 413, 413,
	413, 143, 143, 144, 144, 144, 141, 141, 142, 142,
	253, 253, 237, 237, 237, 244, 244, 244, 240, 240,
	242, 242, 242, 243, 243, 243, 241, 250, 250, 252,
	252, 251, 251, 247, 247, 248, 248, 249, 249, 249,
	245, 245, 202, 202, 202, 202, 202, 254, 254, 254,
	254, 266, 266, 213, 213, 215, 215, 214, 214, 164,
	267, 267, 275, 272, 272, 273, 273, 299, 299, 299,
	276, 276, 289, 289, 285, 285, 286, 286, 279, 279,
	291, 291, 291, 78, 211, 211, 368, 368, 365, 294,
	294, 296, 296, 300, 300, 304, 304, 301, 301, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 418, 419, 310, 311, 311,
	311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 0, 1, 1, 1, 2, 3,
	2, 3, 0, 1, 3, 1, 4, 3, 3, 4,
	3, 2, 3, 4, 3, 4, 2, 7, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 2, 3, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 0, 1, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 1, 2, 2, 2,
	0, 1, 4, 4, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 5,
	10, 0, 2, 0, 2, 3, 5, 3, 4, 2,
	3, 2, 3, 3, 3, 3, 2, 2, 4, 4,
	1, 1, 1, 1, 1, 0, 2, 2, 3, 3,
	2, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	7, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 4, 1, 3, 2, 3, 3, 2,
	2, 3, 2, 2, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 4, 3, 4, 4,
	4, 2, 3, 3, 3, 3, 5, 2, 3, 3,
	2, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -416, -80, -421, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -69, -65, -66, -70, -71, -72, -73, -74, -14,
	-17, -67, -32, -33, -75, -76, -77, -78, -79, -16,
	-18, -19, -9, -8, -13, 10, 11, -109, -34, 33,
	-39, -49, 225, -50, -40, 226, -51, 228, 227, 266,
	229, 250, 636, 235, 259, 75, 320, 321, 323, 324,
	325, 326, -110, 632, 264, 265, 231, 37, 46, 34,
	35, 38, 236, 272, 273, 234, -10, -35, 9, -418,
	12, 464, 261, 260, 29, -12, 526, 87, -81, -417,
	682, -253, -237, 23, 34, 30, -236, -232, -128, -237,
	21, 19, 8, -80, -80, -80, 13, 14, -80, -353,
	-355, -12, 26, 87, 159, 9, 87, -80, -56, -55,
	-53, -52, -54, -57, 32, -46, -47, -377, -45, -42,
	230, 227, 276, 123, 124, 266, 267, 268, 229, 250,
	265, 269, 264, 285, -41, 82, 34, 526, 529, -360,
	226, 232, 233, 228, 465, 126, 125, 76, -357, 379,
	559, 652, -57, 654, 101, 104, 653, 45, 240, 655,
	656, 657, 566, 658, 249, 659, 660, 661, 662, 668,
	607, 669, 670, 671, 127, 8, -80, -304, -300, 91,
	-293, 523, 252, 557, 558, 301, 82, 42, 532, 376,
	379, 559, 494, 652, 320, 336, 330, 499, 500, 501,
	359, 351, 524, 560, 533, 304, 253, 289, 646, 349,
	135, 654, 308, 561, 267, 384, 385, 562, 386, 101,
	323, 427, 667, 307, 563, 665, 104, 653, 328, 80,
	493, 52, 649, 45, 262, 347, 234, 343, 655, 290,
	564, 535, 283, 126, 123, 674, 37, 339, 51, 31,
	664, 125, 50, 656, 150, 565, 657, 566, 388, 366,
	640, 49, 389, 268, 567, 85, 273, 528, 311, 648,
	390, 513, 340, 391, 300, 663, 231, 568, 627, 619,
	620, 392, 393, 641, 371, 367, 372, 515, 569, 419,
	498, 394, 623, 624, 681, 53, 570, 571, 642, 124,
	572, 79, 658, 81, 334, 335, 573, 298, 251, 518,
	519, 421, 363, 476, 483, 484, 111, 112, 479, 113,
	485, 114, 486, 487, 488, 477, 115, 108, 478, 489,
	490, 364, 365, 116, 491, 110, 109, 480, 482, 117,
	492, 249, 36, 395, 525, 302, 59, 306, 277, 422,
	47, 369, 678, 46, 634, 520, 574, 639, 362, 358,
	473, 54, 575, 576, 577, 578, 495, 659, 361, 333,
	357, 673, 4, 295, 496, 660, 63, 233, 374, 373,
	375, 284, 418, 354, 579, 580, 581, 256, 83, 582,
	344, 22, 583, 584, 396, 291, 585, 57, 586, 587,
	425, 265, 588, 55, 661, 40, 589, 270, 675, 662,
	590, 313, 314, 591, 592, 633, 593, 272, 594, 398,
	595, 621, 622, 397, 368, 370, 521, 279, 399, 237,
	527, 596, 312, 338, 269, 666, 597, 257, 509, 510,
	511, 512, 647, 517, 516, 271, 276, 264, 426, 258,
	598, 599, 600, 601, 602, 305, 618, 603, 604, 324,
	668, 474, 44, 605, 606, 607, 608, 609, 299, 294,
	420, 429, 62, 84, 381, 610, 611, 645, 332, 329,
	292, 612, 321, 56, 669, 670, 671, 286, 672, 502,
	503, 504, 505, 10, 679, 680, 497, 401, 127, 296,
	297, 48, 355, 278, 613, 309, 614, 345, 346, 360,
	331, 356, 630, 322, 628, 280, 402, 475, 266, 615,
	428, 293, 377, 382, 310, 531, 514, 285, 403, 637,
	644, 530, 506, 507, 353, 350, 287, 508, 616, 632,
	404, 241, 281, 282, 617, 629, 405, 406, 303, 407,
	315, 317, 417, 318, 319, 408, 409, 410, 411, 414,
	415, 416, 413, 316, 412, 631, 625, 626, 288, 529,
	327, 348, 383, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 472, 239, -80, 239, -191, -300, 239, 239, 96,
	527, 653, 637, 398, -272, 415, 416, 385, -290, 387,
	400, 395, 405, 393, -281, 396, 398, 279, -401, 419,
	239, 402, 225, 388, 397, 406, 407, 315, 417, 317,
	303, 413, 408, 316, 412, 288, 409, 410, 411, 414,
	-384, 177, 657, 672, 135, 352, 392, 390, 420, 634,
	91, -306, 91, 92, 93, -293, 322, -308, 327, -294,
	-384, -293, 325, -80, -80, -310, -310, -130, 634, 638,
	-210, -145, 143, -160, -163, -151, -155, -204, -205, -206,
	-207, -161, -220, -259, 166, 167, 174, 144, -216, -164,
	27, 522, 466, 465, 177, 32, -154, 220, 69, 70,
	468, 146, 58, 12, 441, 442, -162, 436, 443, 438,
	493, 495, 496, 497, 494, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 498, 470, 471, 118, 472,
	108, 110, 109, 473, 474, 475, 349, 520, 521, 515,
	518, 519, 517, 516, 364, 365, 476, 477, 478, 111,
	112, 113, 114, 115, 116, 117, 479, 482, 480, 481,
	483, 484, 485, 490, 491, 486, 487, 488, 489, 492,
	-90, -102, 548, 547, -103, -152, -153, -166, -167, -294,
	-300, 244, 435, 238, 172, 464, -156, -149, -218, 107,
	92, 93, -8, -214, 434, 439, 440, 444, 437, 534,
	536, 551, 552, 554, 539, 544, 543, 546, 509, 510,
	511, 512, 513, 514, 619, 620, 621, 622, 623, 624,
	625, 626, -384, -293, 91, -158, -157, -200, 94, 99,
	102, 103, 105, -407, 262, 345, 346, 119, -418, 650,
	90, 95, 96, 97, 98, 120, 121, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 45,
	401, 401, -191, -80, -80, -80, -80, -230, -128, -232,
	-10, -8, -418, -80, -8, -9, -13, -35, -37, 553,
	-36, -300, 100, -237, -253, 13, 162, 43, 51, -235,
	-236, -12, -8, -145, 20, 24, 25, -133, 168, -145,
	-300, -133, -279, 243, -80, -80, -268, -313, 322, -270,
	420, 634, 419, -260, -273, 91, -259, -272, 418, -12,
	-354, 159, -340, -344, -294, 254, -370, 250, -191, -80,
	-363, -362, -294, -418, -129, -289, 240, 248, 247, 136,
	-388, 139, 296, 435, 238, -52, -53, -54, -272, 176,
	656, -111, 271, 275, 88, 88, -344, -343, -342, -389,
	275, 254, -369, -361, 246, 255, -350, 247, 248, -345,
	240, 137, -389, -345, 245, 255, 250, 254, 275, 275,
	127, 275, 127, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 270, -351, 151, -351, 530, 530, -357, -389,
	250, 240, -389, -389, 246, -291, -345, 242, 26, 242,
	36, 36, -351, -351, -351, -272, 176, -351, -351, -351,
	-351, 283, 283, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	239, -388, -137, 412, 303, 317, 315, 82, -55, 285,
	-38, -191, -289, 240, 241, -388, 272, -191, 221, -191,
	-415, -191, 96, 96, -283, 159, 16, -283, -280, 401,
	399, 386, 391, -283, -283, -283, -283, 286, 384, -346,
	240, 36, 251, 401, 286, 384, 286, 287, 286, 287,
	394, 404, 286, -305, 15, 162, 435, 389, 393, 279,
	239, 280, 241, 403, 287, -305, -305, 90, -305, 90,
	90, -284, 159, 286, 401, 282, -283, -283, -311, -418,
	-296, -294, -292, 230, 24, 142, 26, 28, 145, 177,
	130, 20, 146, 38, 232, 352, 250, 176, 246, 465,
	225, 73, 534, 436, 438, 434, 441, 467, 468, 435,
	387, 32, 14, 536, 29, 260, 25, 39, 170, 227,
	149, 537, 263, 27, 261, 118, 121, 539, 23, 76,
	255, 15, 248, 41, 17, 540, 541, 18, 244, 243,
	162, 240, 71, 12, 220, 30, 158, 67, 542, 137,
	543, 544, 545, 546, 131, 69, 159, 21, 676, 439,
	440, 34, 635, 522, 274, 172, 74, 60, 638, 143,
	437, 547, 548, 119, 549, 122, 77, 643, 139, 19,
	72, 43, 550, 275, 551, 245, 677, 552, 423, 553,
	160, 228, 464, 70, 161, 650, 554, 651, 238, 400,
	9, 469, 33, 259, 247, 129, 68, 555, 239, 148,
	470, 471, 242, 132, 120, 8, 136, 35, 13, 75,
	78, 442, 443, 444, 58, 128, 526, 147, 16, 556,
	424, 141, 636, 430, 431, 432, 433, 235, -384, 639,
	-311, -311, 33, 92, -410, -411, -412, 526, 423, 242,
	-294, -191, -86, 627, 229, -87, 633, 24, 237, -135,
	401, -123, 177, 657, 640, 641, 642, 639, 398, 637,
	647, 645, 643, 286, 644, 88, 139, 141, 142, 4,
	-145, 158, -201, 151, 152, 153, 154, 155, 156, 157,
	162, 143, 145, 159, -246, 140, 163, 164, 165, 166,
	167, 168, 169, 171, 170, 172, 173, 160, 161, 176,
	223, 224, -155, -155, -155, -155, -216, -222, -221, -418,
	-218, -384, -293, -300, -418, -418, -155, -278, -418, -418,
	-151, -418, -418, -418, -225, -145, -418, -418, -422, -418,
	-422, -422, -329, -418, -329, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, 221, -418, -418, -418, -418, -418, -329, -329, -329,
	-329, -329, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, 103, 99, 102, 94,
	-220, 105, 90, 90, 90, 90, -8, -9, -210, -418,
	-310, -398, -399, -194, -191, -418, 303, 315, -294, -294,
	272, -235, -12, -8, -230, -236, -232, -8, -121, -134,
	64, 65, -136, 25, 39, 68, 66, 24, -419, 89,
	-419, -253, -419, 88, -37, -256, 87, 62, 44, 90,
	90, 88, 22, -231, -233, -145, 15, -298, 4, -297,
	26, -294, 90, 221, 15, -192, 30, -191, -279, -279,
	88, 91, 322, -269, -271, 421, 423, 151, -299, -294,
	90, 32, 89, 88, -191, -318, -321, -323, -322, -324,
	-319, -320, 349, 350, 177, 353, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 366, 33, 262, 345, 346,
	347, 348, 367, 368, 369, 370, 372, 373, 374, 375,
	330, 351, 524, 331, 332, 333, 334, 335, 336, 338,
	339, 342, 340, 341, 343, 344, -385, -384, 87, 64,
	65, 89, 88, -325, 87, -145, -137, 239, -384, 240,
	240, 240, -80, 464, -351, -351, -351, 270, 20, -45,
	-42, -377, 19, -41, -42, 230, 123, 124, 227, 87,
	-340, 87, -349, -385, -384, 87, 137, 245, 136, -348,
	-345, -348, -349, -384, -218, -384, 137, 137, -384, -384,
	-265, -294, -265, -265, 24, -265, 24, -265, 24, 96,
	-294, -265, 24, -265, 24, -265, 24, -265, 24, -265,
	24, 32, 79, 80, 81, 32, 83, 84, 85, -218,
	-384, -384, -218, -340, -218, -191, -384, -272, 96, 96,
	96, -351, -351, 96, 90, 90, 90, -351, -351, 96,
	90, -302, -300, 90, 90, -390, 256, 300, 302, 96,
	96, 96, 96, 32, 90, -391, 32, 664, 663, 665,
	666, 667, 90, 96, 32, 96, 32, 96, -294, 87,
	-191, -143, 290, 225, 227, 230, 77, 90, 306, 307,
	304, 313, 314, 309, 310, 90, 306, 304, 313, 314,
	309, 310, 90, 306, 307, 304, 313, 314, 309, 310,
	151, 45, 88, 242, 239, -384, -285, 244, -285, -294,
	-301, -300, -292, -414, 88, -413, 23, 430, 431, 433,
	390, 432, 90, -145, -347, 15, 162, -305, -305, -283,
	-191, -347, -305, -283, -191, -283, -283, -283, -283, -305,
	-305, -305, -283, -300, -300, -191, -191, -191, -191, -191,
	-191, -191, -311, -284, -283, -283, 639, -283, 318, 639,
	90, -277, 15, 77, -311, -311, 88, 328, 424, 425,
	-309, 325, -82, -294, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 526, -184, -191, 639, 639, 639, 639,
	639, 639, -145, -145, -145, -145, 549, -208, 119, 143,
	120, 121, -163, -209, -214, -216, 106, 162, 145, 159,
	-246, -151, -155, -151, -151, -151, -151, -151, -151, -151,
	-151, -151, -151, -151, -151, -151, -312, -294, 90, 177,
	-159, -158, 105, -407, -159, 523, 88, -221, 221, -145,
	-145, -384, -145, -294, -131, -133, -131, -145, -223, -224,
	147, -218, -145, -419, -419, 96, 105, 168, -127, 25,
	39, -127, -127, -127, -127, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -127, -294, -294, -120, -119,
	446, 447, 448, 449, 451, 452, 453, 456, 457, 461,
	462, 445, 463, 450, 455, 458, 459, 460, 454, 348,
	-145, -145, -145, -145, -145, -145, -88, -145, 130, 131,
	132, -210, -145, -151, -145, -145, -145, -419, -145, -145,
	-145, -211, -210, -383, -382, -381, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -419,
	-145, -165, -149, 96, -261, 105, 92, -145, -145, -132,
	-131, -296, -301, -292, -293, -131, -132, -132, -131, -131,
	-145, -145, -145, -145, -145, -145, -145, -145, -419, -145,
	-145, -145, -145, -145, -253, -419, -210, 88, -400, 423,
	424, 635, -303, 275, -302, 26, -211, 90, 90, 15,
	-263, 78, -294, -235, -235, 60, -131, -136, -419, -36,
	26, -255, -294, 63, 90, -330, -272, 376, 377, 177,
	-145, -145, 88, -234, 28, 29, -191, -297, 168, -301,
	-191, -264, 275, -191, -169, -171, -172, -173, -194, -217,
	-418, -174, -8, 545, 542, 15, -184, -185, -193, -300,
	-270, -313, -269, 88, 422, 424, 425, 77, 122, -145,
	-331, 176, -359, -358, -357, -340, -342, -343, -344, 89,
	-331, -336, 382, 381, -325, -325, -325, -325, -325, -330,
	-330, -330, -330, 87, 87, -325, -325, -325, -325, -333,
	87, -333, -333, -334, -333, 87, -334, -335, 87, -335,
	-370, -145, -367, -366, -364, -365, 249, 101, 617, 573,
	526, 566, 607, 78, -362, -234, 96, -419, -143, -286,
	244, -368, -365, -384, -384, -384, -286, 91, 90, 91,
	90, 91, 90, -112, -59, -1, 676, 677, 678, 88,
	20, -341, -340, -58, 300, -373, -374, 275, -369, -363,
	-349, 137, -348, -349, -349, -384, 88, 30, 127, 127,
	127, 127, 526, 227, 33, -287, 565, 143, 617, 573,
	-340, -58, 242, 242, -312, -312, -312, 90, 90, -282,
	672, -184, -139, 292, 151, 281, 281, 239, 239, 294,
	-191, 305, 308, 306, 307, 304, 313, 314, 309, 310,
	24, 24, 24, 24, 24, 24, 24, 306, 304, 313,
	314, 309, 310, 319, 24, 24, 24, 24, 24, 24,
	305, 308, 306, 307, 304, 313, 314, 309, 310, 24,
	24, 24, 24, 24, 24, 24, 293, 295, 297, 283,
	-191, -191, -285, 77, -186, -191, 27, -300, -413, -191,
	285, -191, -283, -283, -191, -283, -283, -191, -412, 329,
	-294, 363, 628, 629, 631, 630, -123, 423, 88, 526,
	23, -124, 23, -418, 119, 120, 121, -209, -151, -155,
	-151, 142, 263, -418, -218, -419, -296, 26, 88, 78,
	-419, 88, 88, -419, -419, 88, 15, -226, -224, 149,
	-145, -419, 88, -419, -419, -419, -210, -145, -145, -145,
	-145, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -210, 88, 88, 15, -316, 26, -419, -419, -419,
	-419, -419, -225, -419, 15, -419, 78, 88, 162, 88,
	-419, -419, -419, 88, 88, -419, -419, 88, 88, -419,
	88, 88, 88, -419, 88, 88, 88, 88, -419, -419,
	-419, -419, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, -419, -95, 550, -419, -419, 88, -419, 88,
	-419, -418, 221, -419, -419, -419, -419, -419, 88, 88,
	88, 88, 88, 88, -419, -419, -419, 88, 88, -419,
	88, -419, 88, -419, -399, 634, 424, -198, -197, -195,
	75, 243, 76, -418, -302, -419, -159, -261, -262, -261,
	-203, -294, 96, 105, -237, -168, -170, 15, -136, -216,
	89, 88, -330, -241, -247, -280, -294, 90, 177, -332,
	177, -332, 376, 377, -233, 221, -199, 16, -202, 33,
	58, -11, -418, -418, 33, 88, -187, -189, -188, -190,
	67, 71, 73, 68, 69, 70, 74, -307, 26, -8,
	-169, -8, -418, -191, -184, -420, 15, 78, -420, 88,
	221, -271, -274, 426, 423, 429, -384, 90, -111, 88,
	-357, -344, -238, -140, 41, -337, 383, -330, 533, -330,
	-339, 90, -339, 96, 96, 96, 89, -48, -43, -44,
	34, 82, -364, -351, 90, 40, -351, -351, -294, 89,
	-234, -139, -191, 143, 77, -368, -368, -368, -300, -2,
	675, 681, 137, 87, 386, 19, -255, 88, 89, -219,
	301, 89, -113, -294, 89, 87, -349, -349, -294, -418,
	239, 32, 32, 617, 573, 565, -58, -219, -218, -384,
	-331, 674, 673, 89, 241, 299, -144, 441, -141, 90,
	91, -191, -191, -191, -191, -191, 230, 227, 409, -408,
	311, -408, -408, 90, -408, 409, -408, -408, 284, 242,
	-184, -191, 88, -85, 258, 253, -305, -305, 34, -191,
	423, 648, 646, -145, 142, 263, -163, -155, -151, -314,
	177, 349, 262, 347, 343, 363, 354, 381, 345, 382,
	340, 339, 338, -314, -312, -210, -133, -145, -145, 150,
	-145, 148, -145, -419, -419, -419, -419, -419, -230, -145,
	-145, -145, -419, 177, 349, 15, -145, -312, -145, -145,
	-145, -145, -145, -381, -145, -210, -145, -210, -145, -145,
	-145, -145, -145, -382, -382, -382, -382, -382, -210, -210,
	-210, -210, -418, -294, -98, -97, -96, 600, 243, -95,
	-165, -98, -165, -132, -296, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -195, -345, -345, -345, -265,
	88, -276, 23, 15, 58, 58, -168, -199, -169, -136,
	-294, -244, 627, -250, 47, -248, -249, 48, -245, 49,
	57, -332, -332, 168, -235, -145, -266, 77, -267, -275,
	-218, -213, -215, -214, -418, -254, -419, -294, -265, -267,
	-171, -172, -172, -171, -172, 67, 67, 67, 72, 67,
	72, 67, -188, -300, -419, -145, -303, 78, -169, -169,
	-193, -300, 168, 423, 427, 428, -357, -406, 119, 143,
	32, 77, 379, 101, -404, 176, 562, 612, 617, 573,
	566, 607, -405, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -288, -287, -44, -43,
	-351, -351, 96, -384, 90, 90, 241, 27, -191, 77,
	77, 77, -114, 679, 96, 87, -3, 82, -145, 87,
	20, -340, -218, -375, -326, -376, -327, -328, -5, -6,
	-352, -117, 58, 101, -62, 45, 240, 659, 660, 127,
	-418, 672, -367, -255, -371, -373, -191, -148, -418, -147,
	-149, -156, 166, 167, 262, 345, 346, -219, -191, -138,
	290, 298, 87, -142, 92, -387, 78, 281, 379, 281,
	90, -409, 312, 90, -409, -409, 90, -409, 90, -409,
	-409, -191, -85, -48, -191, -283, -283, 34, -384, -419,
	-163, -155, -126, 162, 526, -317, 532, -325, -325, -325,
	-335, -325, 335, -325, 335, -325, -419, -419, -419, 88,
	-419, 23, -419, -145, 88, -122, 469, 88, 88, -419,
	87, 87, -145, -419, -419, -419, 88, -419, -419, -419,
	-419, -419, 88, -419, -419, -419, 88, -315, 618, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -94,
	-295, -294, -95, 582, 582, -419, -95, -227, 88, -419,
	-419, 88, -419, 88, 88, -419, 88, -419, 88, -419,
	-419, -419, -419, 88, -196, 23, -196, -196, -419, -261,
	-191, -199, -228, 17, -241, 52, 355, -252, -251, 56,
	48, -249, 20, 50, 20, 31, -266, 88, 151, 88,
	-419, -419, 88, 58, 221, -419, -199, -182, -181, 77,
	78, -183, 77, -181, 67, 67, -256, 88, -264, -169,
	-199, -199, 221, 119, -418, -150, -162, -148, 13, 90,
	90, -384, -403, 663, 664, 32, 96, -351, -351, 137,
	137, -191, 87, -330, 90, -330, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -191, -191, -191, -191,
	-372, 87, 20, -145, 87, 151, 89, -255, -255, 277,
	162, -351, 657, 283, 283, -351, -351, -351, -116, -115,
	679, 89, -419, 88, -338, 526, 529, -145, -157, -157,
	-256, 89, -380, 526, -386, -294, -294, -294, -294, 96,
	98, -419, 524, 74, 527, -419, -330, -145, -145, -145,
	-235, 90, -145, -145, 96, 96, -419, -145, -210, -145,
	-419, -179, -178, -180, 640, 119, 32, -314, -419, -212,
	275, -101, -100, -99, 15, -419, -145, -145, -145, -145,
	-145, -145, -145, -418, 67, 19, 17, -418, -418, -303,
	-228, -229, 18, 20, -242, 54, -240, 53, -240, -251,
	20, 20, 90, 20, 90, 137, -275, -145, -215, 58,
	-11, -294, -213, -294, -230, -145, 87, -145, -159, -199,
	-199, -145, -205, 493, 495, 496, 497, 494, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 498, 472,
	108, 110, 109, 473, 474, 475, 349, 520, 521, 515,
	518, 519, 517, 516, 364, 365, 476, 477, 478, 111,
	112, 113, 114, 115, 116, 117, 479, 482, 480, 483,
	484, 485, 490, 491, 486, 487, 488, 489, 492, 509,
	510, 511, 512, 513, 514, 619, 620, 621, 622, 623,
	624, 625, 626, 90, 90, 87, -145, 89, 89, -256,
	-371, -59, 89, -257, -255, 96, 89, 278, -214, -418,
	90, -351, -351, -351, 96, 96, -302, -419, 88, -294,
	-405, -373, 530, 530, -419, 26, -379, -378, -296, 87,
	78, 63, 525, 528, -419, -419, 88, -419, -419, -419,
	89, 89, -419, -419, -419, 88, -419, -178, -180, -419,
	77, -159, -230, 20, -98, 300, 302, -98, -419, 88,
	-419, -419, 88, -419, 88, -419, -419, -258, -419, -294,
	245, 20, 20, -258, -258, -198, -229, -108, -107, -106,
	556, -145, -210, -243, 55, 77, 122, 90, 90, 90,
	13, -213, 221, -235, -255, -176, 386, -230, -419, -255,
	89, 26, 89, 681, 137, 89, -214, -125, -418, 274,
	-302, 90, 90, -115, -118, -11, 88, 151, -255, -191,
	63, -145, -210, -419, 77, 537, 640, -93, -92, -89,
	651, 677, -210, -95, -95, -145, -145, -145, 88, -419,
	-419, -419, -108, 88, -105, -104, -294, 77, 122, -267,
	-294, 89, -419, -418, -235, 89, -239, -11, 87, -3,
	274, -326, -376, -327, -328, -5, -6, -352, -83, 526,
	-378, -356, -296, 90, 96, 89, 526, -419, -419, -91,
	145, 649, 615, -146, -157, -154, 220, -419, 88, -419,
	88, -419, 88, -294, 245, -106, 88, 26, -303, -177,
	-175, -294, 579, -396, -395, 522, -406, -402, 119, 143,
	101, -404, 617, 573, 128, 129, -83, -145, 87, -419,
	-84, 289, 634, -387, 527, -91, 650, 593, 568, 593,
	568, -145, -145, -145, -104, -418, -419, 88, 23, -318,
	-61, 590, -393, -394, 77, -397, 392, 589, 610, 119,
	90, 89, -255, 250, -380, 528, 142, -419, 88, -419,
	88, -419, -94, -175, 586, -331, -159, -394, 77, -393,
	77, 14, 13, -4, 680, 89, 291, -91, -145, -145,
	-419, -60, 27, -176, -392, 258, 253, 256, 33, -392,
	96, -4, -419, -419, 590, 252, 32, 119, -159, -179,
	-178, -178,
}

var yyDef = [...]int{
	928, -2, -2, 930, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 73, 75, 76, 928, 928, 928, 0, 928,
	0, 0, 928, -2, -2, 928, 1545, 0, 928, 0,
	0, 0, 0, 0, -2, 841, 847, 0, 856, -2,
	0, 0, 928, 928, 2117, 2117, 923, 0, 0, 0,
	0, 0, 928, 928, 928, 928, 1402, 53, 928, 0,
	88, 89, 876, 877, 878, 68, 0, 2115, 929, 1,
	3, 74, 78, 0, 0, 0, 61, 1411, 0, 81,
	0, 0, 932, 0, 0, 1528, 928, 928, 0, 129,
	130, 131, 0, 0, 0, 928, 0, -2, 135, -2,
	164, 165, 166, 0, 171, 638, 527, 579, 525, 564,
	-2, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 403, 403, 0, 0, -2,
	513, 513, 513, 1530, 0, 0, 0, 561, 465, 403,
	403, 403, 0, 403, 403, 403, 403, 0, 0, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 1429, 170, 1546, 1543,
	1544, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 0, 1522, 0, 751, 1031, 0, 0, 756,
	0, 0, 759, 760, 830, 762, 763, 830, 0, 830,
	830, 830, 830, 0, 0, 0, 773, 0, 0, 0,
	0, 827, 0, 789, 790, 0, 827, 827, 827, 0,
	0, 801, 833, 0, 0, 807, 830, 830, 810, 811,
	2118, 0, 2118, 2118, 1513, 0, 824, 822, 836, 837,
	43, 840, 843, 844, 845, 846, 849, 0, 860, 863,
	1539, 1540, 0, 865, 872, 889, 890, 0, 924, 925,
	48, 1179, 0, 1053, 1058, 1069, 1084, 1085, 1086, 1087,
	1088, 1090, 1091, 1092, 0, 0, 0, 0, 1097, 1098,
	0, 0, 0, 0, 0, 1160, 1106, 0, 0, 0,
	0, 1375, 0, 0, 1336, 1336, 1194, 1336, 1338, 1338,
	1753, 1889, 1897, 2019, 1715, 1720, 1721, 1722, 2012, 2013,
	2014, 2015, 2055, 2056, 2060, 1813, 0, 0, 0, 2114,
	1850, 1858, 1859, 1883, 1984, 2040, 1732, 1878, 1949, 1810,
	1832, 1833, 1966, 1967, 1854, 1855, 1836, 1848, 1851, 1839,
	1840, 1842, 1844, 1849, 1856, 1862, 1841, 1861, 1860, 0,
	1837, 1838, 1843, 1853, 1857, 1845, 1846, 1847, 1852, 1863,
	0, 0, 0, 0, 0, 1275, 1276, 1277, 1278, 0,
	0, 0, 0, 0, 0, 0, 295, 296, 1388, 1389,
	46, 47, 1178, 1509, 1338, 1338, 1338, 1338, 1338, 1120,
	1121, 1122, 1123, 1124, 1148, 1149, 1155, 1156, 1961, 1962,
	1963, 1964, 1794, 2049, 1802, 1803, 1944, 1945, 1815, 1816,
	2089, 2090, -2, -2, -2, 236, 237, 238, 239, 240,
	241, 242, 243, 0, 1757, 2030, 2031, 232, 0, 0,
	300, 301, 297, 298, 299, 1162, 1163, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 294, 2117,
	0, 899, 0, 0, 0, 0, 0, 1411, 0, 1403,
	1402, 66, 0, -2, 0, 0, 0, 0, 50, 0,
	55, 988, 931, 80, 79, 1460, 0, 0, 0, 62,
	1412, 70, 72, 1413, 0, 933, 934, 0, 964, 968,
	0, 0, 0, 1529, 1528, 1528, 105, 0, 0, 106,
	126, 127, 128, 0, 0, 112, 113, 1515, 1516, 132,
	0, 0, 182, 183, 0, 44, 430, 0, 178, 950,
	0, 423, 362, 0, 1429, 0, 0, 0, 0, 0,
	928, 0, 1523, 159, 160, 167, 168, 169, 403, 403,
	403, 576, 0, 0, 170, 170, 534, 535, 536, 0,
	0, -2, 428, 0, 514, 0, 0, 417, 417, 421,
	419, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 699, 0, 404, 0, 574, 575, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 1532, 0,
	551, 552, 0, 0, 0, 403, 403, 0, 0, 0,
	0, 403, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 1451, 0, 0, 0, 0, 0, -2, 0,
	743, 0, 0, 0, 1524, 1524, 0, 750, 0, 752,
	1442, 754, 757, 758, 761, 0, 0, 764, 0, 827,
	827, 825, 826, 766, 767, 768, 769, 830, 0, 0,
	412, 413, 414, 827, 830, 0, 830, 830, 830, 830,
	827, 827, 827, 830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2118, 833, 830, 830, 0, 830, 797,
	0, 802, 0, 803, 804, 805, 808, 809, 812, 2119,
	2120, 1541, 1542, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 2118, 2118,
	816, 820, 1514, 842, 848, 850, 851, 0, 0, 861,
	864, 883, 52, 1801, 871, 52, 873, 874, 875, 902,
	903, 908, 0, 0, 0, 0, 914, 915, 916, 917,
	0, 0, 920, 921, 922, 0, 0, 0, 0, 0,
	1051, 0, 0, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1070, 1071, 0,
	0, 0, 1093, 1094, 1095, 1096, 1099, 0, 1111, 0,
	1113, 1384, -2, 0, 0, 0, 1104, 1105, 0, 0,
	0, 0, 0, 0, 0, 1376, 0, 0, 1192, 0,
	1193, 1195, 1196, 0, 1197, 938, 938, 938, 938, 938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	948, 0, 0, 948, 948, 0, 0, 225, 226, 227,
	228, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 302, 250, 251, 252, 1178, 0, 0, 0,
	49, 891, 892, 0, 1014, 1534, 0, 0, 0, 944,
	0, 60, 69, 71, 1411, 64, 1411, 0, 0, 0,
	-2, -2, 951, 957, 958, 959, 960, 961, 57, 2116,
	58, 0, 77, 0, 51, 0, 0, 0, 0, 376,
	1463, 0, 0, 1404, 1405, 1408, 0, 965, 1895, 969,
	0, 971, 972, 0, 0, 103, 0, 1030, 0, 0,
	0, 114, 0, 116, 117, 0, 0, 0, 387, 1517,
	1518, 1519, -2, 410, 0, 387, 371, 310, 311, 312,
	362, 314, 362, 362, 362, 362, 376, 376, 376, 376,
	345, 346, 347, 348, 349, 0, 0, 331, 362, 362,
	362, 362, 352, 353, 354, 355, 356, 357, 358, 359,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 364,
	364, 364, 364, 364, 368, 368, 0, 45, 0, 955,
	956, 391, 0, 1408, 0, 0, 1451, 1526, 1536, 0,
	0, 0, 1526, 137, 0, 0, 0, 577, 649, 528,
	565, 578, 0, 531, 532, -2, 0, 0, 513, 0,
	515, 0, 411, 0, -2, 0, 421, 0, 417, 421,
	418, 421, 409, 422, 555, 556, 557, 0, 559, 560,
	679, 1000, 0, 0, 0, 0, 0, 685, 686, 687,
	0, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 515, 0, 562, 0, 0, 467, 468,
	469, 0, 0, 472, 473, 474, 475, 0, 0, 478,
	479, 480, 1017, 1018, 481, 482, 507, 508, 509, 483,
	484, 485, 486, 487, 488, 489, 501, 502, 503, 504,
	505, 506, 490, 491, 492, 493, 494, 495, 498, 0,
	152, 1433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 947,
	1032, 1547, 1548, 753, 0, 1443, 0, 1446, 1447, 1448,
	1449, 1450, 831, 832, 0, 415, 416, 830, 830, 770,
	817, 0, 830, 774, 818, 775, 777, 776, 778, 791,
	792, 830, 781, 828, 829, 782, 783, 784, 785, 786,
	787, 788, 813, 793, 794, 795, 800, 796, 798, 799,
	834, 0, 838, 839, 814, 815, 0, 0, 854, 855,
	0, 862, 886, 884, 885, 887, 879, 880, 881, 882,
	0, 888, 0, 0, 905, 99, 910, 911, 912, 913,
	926, 919, 1180, 1048, 1049, 1050, 0, 1052, 1055, 0,
	1164, 1166, 1057, 1059, 1175, 1176, 1177, 0, 0, 0,
	0, 0, 1063, 1067, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1089, 1352, 1353, 1354,
	1108, 303, 304, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 1179, 1110, 0, 962, 0, 0, 1382, 1379,
	0, 0, 0, 1337, 1339, 0, 0, 0, 0, 939,
	940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1355, 0, 0, 0, 0, 0, 1375, 0, 1115, 1116,
	1117, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 1535, 0, 147, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 1280, 1281, 1282, 42, 0, 0, 0,
	949, 1386, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 894, 895,
	897, 0, 1034, 0, 1015, 0, 0, 900, 901, 0,
	943, 0, 946, 63, 65, 0, 973, 952, 59, 54,
	0, 0, 992, 1461, 376, 1483, 0, 385, 385, 382,
	1414, 1415, 0, 1407, 1409, 1410, 82, 970, 966, 0,
	1046, 0, 0, 1029, 0, 976, 978, 979, 980, 1012,
	0, 983, 984, 0, 0, 0, 0, 0, 101, 1031,
	107, 0, 115, 0, 0, 120, 121, 108, 109, 110,
	111, 0, 638, -2, 462, 184, 186, 187, 188, 179,
	-2, 374, 372, 373, 313, 376, 376, 339, 340, 341,
	342, 343, 344, 0, 0, 332, 333, 334, 335, 324,
	0, 325, 326, 327, 366, 0, 328, 329, 0, 330,
	429, 0, 1416, 392, 393, 395, 403, 0, 398, 399,
	0, 403, 403, 0, 424, 425, 0, 1408, 1433, 0,
	0, 0, 1537, 1536, 1536, 1536, 0, 172, 173, 174,
	175, 176, 177, 674, 0, 0, 650, 672, 673, 170,
	0, 0, 180, 517, 516, 0, 706, 0, 427, 0,
	0, 421, 421, 406, 407, 558, 0, 0, 681, 682,
	683, 684, 0, 0, 0, 544, 456, 0, 545, 546,
	515, 517, 0, 0, 387, 470, 471, 476, 477, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 592, 593, 596, 598, 599, 600, 519, 606,
	595, 597, 601, 602, 603, 519, 607, 608, 610, 611,
	612, 519, 618, 0, 609, 613, 614, 615, 519, 619,
	621, 622, 623, 626, 628, 629, 630, 519, 636, 625,
	627, 631, 632, 633, 519, 637, 1430, 1431, 1432, 0,
	0, 744, 0, 0, 453, 97, 1525, 749, 1444, 755,
	1445, 827, 780, 819, 827, 772, 779, 806, 852, 853,
	858, 866, 867, 868, 869, 870, 909, 0, 0, 0,
	0, 918, 0, 0, 1056, 1165, 1167, 1060, 0, 1064,
	1068, 0, 0, 0, 1114, 1112, 1386, 0, 0, 0,
	1161, 0, 0, 1183, 1184, 0, 0, 0, 1380, 0,
	0, 1190, 0, 1340, 1341, 1198, 0, 0, 0, 0,
	0, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1402, 0, 0, 0, 0, 0, 1219, 1220, 1221,
	1222, 1223, 0, 1225, 0, 1226, 0, 0, 0, 0,
	1233, 1234, 1236, 0, 0, 1239, 1240, 0, 0, 1241,
	0, 0, 0, 1245, 0, 0, 0, 0, 1254, 1255,
	1256, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 1269, 0, 1143, 0, 0, 1143, 0,
	1181, 948, 0, 1342, 1343, 1344, 1345, 1346, 0, 0,
	0, 0, 0, 0, 1302, 1303, 1305, 0, 0, 1308,
	0, 1310, 0, 1508, 893, 896, 898, 986, 1035, 1036,
	0, 0, 0, 0, 1016, 1533, 941, 942, 945, 994,
	0, 1390, 0, 0, 973, 1046, 974, 0, 953, 56,
	989, 0, 1465, 1464, 1477, 1490, 385, 385, 379, 380,
	386, 381, 383, 384, 1406, 0, 1411, 0, 1501, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 0, 0, 1022, 0, 0, 0, 0, 1013, 984,
	0, 985, 0, -2, 0, 0, 95, 96, 0, 0,
	0, 118, 119, 0, 0, 125, 388, 389, 161, 170,
	464, 185, 437, 0, 0, 309, 375, 336, 337, 338,
	0, 360, 0, 0, 0, 0, 458, 133, 1420, 1419,
	403, 403, 394, 0, 397, 0, 0, 0, 1538, 363,
	426, 0, 151, 0, 0, 0, 0, 0, 157, 644,
	0, 0, 651, 0, 0, 0, 526, 0, 537, 538,
	0, 678, -2, 740, 391, 0, 405, 408, 1001, 0,
	0, 539, 0, 542, 543, 457, 517, 548, 549, 563,
	550, 499, 500, 497, 0, 0, 1452, 1453, 1458, 1456,
	1457, 138, 584, 586, 585, 589, 0, 0, 0, 521,
	0, 521, 521, 0, 521, 0, 521, 521, 582, 0,
	453, 1416, 0, 748, 454, 455, 830, 830, 904, 100,
	0, 907, 0, 0, 0, 0, 1061, 1065, 1347, 1373,
	362, 362, 1360, 362, 368, 1363, 362, 1365, 362, 1368,
	362, 1371, 1372, 0, 0, 0, 963, 0, 0, 1189,
	1383, 0, 0, 1199, 1200, 1201, 1202, 1203, 1377, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 150, 0, 0, 0, 0, 0,
	0, 1313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1138, 1142, 0, 1144, 1145, 0, 0, 1271,
	0, 0, 1283, 0, 1387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1037, 1042, 1042, 1042, 0,
	0, 0, 1520, 1521, 1391, 1392, 1046, 1393, 975, 954,
	993, 1483, 0, 1476, 0, -2, 1485, 0, 0, 0,
	1491, 377, 378, 967, 83, 1047, 86, 0, 1501, 1510,
	0, 1492, 1503, 1505, 0, 0, 0, 1497, 0, 1046,
	977, 1008, 1010, 0, 1005, 1020, 1021, 1023, 0, 1025,
	0, 1027, 1028, 988, 982, 0, 103, 0, 1046, 1046,
	102, 0, 1033, 122, 123, 124, 463, 189, 194, 0,
	0, 0, 199, 0, 201, 0, 0, 0, 206, 207,
	403, 403, 438, 0, 306, 308, 0, 0, 192, 376,
	0, 376, 0, 367, 369, 0, 439, 459, 1417, 1418,
	0, 0, 396, 400, 401, 402, 0, 1527, 153, 0,
	0, 0, 647, 0, 675, 0, 0, 0, 0, 0,
	0, 181, 518, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 0, 403, 0, 0, 0, 403, 403, 403,
	0, 732, 390, 0, 0, 703, 700, 540, 0, 230,
	231, 233, 0, 0, 0, 0, 0, 547, 988, 1434,
	1435, 1436, 0, 1455, 1459, 141, 0, 0, 0, 0,
	594, 604, 0, 520, 605, 616, 620, 617, 624, 634,
	635, 745, 746, 747, 98, 765, 771, 906, 927, 1054,
	1062, 1066, 0, 0, 0, 0, 1374, 1358, 376, 1361,
	1362, 1364, 1366, 1367, 1369, 1370, 1102, 1103, 1107, 0,
	1186, 0, 1188, 1381, 0, 1411, 0, 0, 0, 1217,
	0, 0, 0, 1228, 1227, 1229, 0, 1231, 1232, 1237,
	1238, 1242, 0, 1244, 1246, 1247, 0, 0, 0, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 0,
	1136, 1139, 1270, 1146, 1147, 1152, 1273, 0, 0, 1182,
	1285, 0, 1290, 0, 0, 1296, 0, 1300, 0, 1306,
	1307, 1309, 1311, 0, 0, 0, 0, 0, 1014, 995,
	67, 1393, 1395, 0, 1470, 1468, 1468, 1478, 1479, 0,
	0, 1486, 0, 0, 0, 0, 87, 0, 0, 0,
	1506, 0, 0, 0, 0, 104, 1402, 1002, 1009, 0,
	0, 1003, 0, 1004, 1024, 1026, 981, 0, 1046, 1046,
	93, 94, 0, 195, 0, 197, 223, 224, 0, 200,
	202, 203, 204, 210, 211, 212, 205, 0, 0, 305,
	307, 0, 0, 350, 361, 351, 0, 0, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 988, 154, 155, 156,
	639, 0, 649, 0, 990, 0, 642, 0, 529, 0,
	0, 0, 403, 403, 403, 0, 0, 0, 0, 717,
	0, 0, 680, 0, 688, 0, 0, 0, 234, 235,
	0, 1454, 583, 0, 139, 140, 0, 0, 588, 522,
	523, 1100, 0, 0, 0, 1101, 1359, 0, 0, 0,
	0, 1378, 0, 0, 0, 0, 1224, 0, 0, 0,
	1250, 0, 0, 0, 669, 670, 0, 1314, 1141, 1402,
	0, 1143, 1153, 1154, 0, 1143, 1284, 0, 0, 0,
	0, 0, 0, 0, 1043, 0, 0, 0, 0, 1034,
	1395, 1400, 0, 0, 1473, 0, 1466, 1469, 1467, 1480,
	0, 0, 1487, 0, 1489, 0, 1511, 1512, 1504, 0,
	1496, 1499, 1495, 1498, 1411, 1006, 0, 1011, 0, 1402,
	92, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 209, 0, 0, 365, 370, 0,
	0, 0, 640, 0, 991, 652, 643, 0, 730, 0,
	734, 0, 0, 0, 737, 738, 739, 716, 0, 720,
	431, 704, 701, 702, 541, 0, 142, 143, 0, 0,
	0, 1348, 0, 1351, 1185, 1187, 0, 1214, 1215, 1216,
	1356, 1357, 1230, 1243, 1248, 0, 1251, 0, 0, 1252,
	0, 671, 1132, 0, 0, 1150, 1151, 0, 1286, 0,
	1291, 1292, 0, 1297, 0, 1301, 1312, 0, 1039, 996,
	997, 1044, 1045, 0, 0, 987, 1400, 85, 1401, 1398,
	0, 1396, 1394, 1462, 0, 1471, 1472, 1481, 1482, 1488,
	0, 1494, 0, 90, 0, 0, 0, 1411, 196, 0,
	215, 0, 648, 0, 651, 641, 728, 729, 0, 741,
	733, 735, 736, 718, -2, 1437, 0, 0, 0, 590,
	1349, 0, 0, 1253, 0, 667, 668, 1140, 1133, 0,
	1118, 1119, 1137, 1272, 1274, 0, 0, 0, 0, 1038,
	1040, 1041, 84, 0, 1397, 1158, 0, 1474, 1475, 1502,
	1500, 1007, 1014, 0, 91, 444, 437, 1437, 0, 0,
	0, 721, 722, 723, 724, 725, 726, 727, 580, 1439,
	144, 145, 510, 511, 512, 138, 0, 1191, 1249, 1134,
	0, 0, 0, 0, 1130, 1131, 0, 1287, 0, 1293,
	0, 1298, 0, 998, 999, 1399, 0, 0, 653, 0,
	655, 0, -2, 432, 445, 0, 190, 216, 217, 0,
	0, 220, 221, 222, 213, 214, 134, 0, 0, 742,
	0, 1440, 1441, 141, 0, 0, 1125, 1126, 1127, 1128,
	1129, 0, 0, 0, 1159, 1138, 654, 0, 0, 387,
	0, 664, 433, 434, 0, 440, 441, 442, 443, 218,
	219, 676, 0, 0, 587, 1350, 0, 1288, 0, 1294,
	0, 1299, 0, 656, 657, 665, 0, 435, 0, 436,
	0, 0, 0, 645, 0, 676, 1438, 1135, 0, 0,
	1157, 0, 666, 662, 446, 448, 449, 0, 0, 447,
	677, 646, 1289, 1295, 0, 450, 451, 452, 658, 659,
	660, 661,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 682,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:640
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:685
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:702
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:712
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:716
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:728
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:747
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:763
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:892
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:964
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:968
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:992
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1002
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1012
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1022
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1035
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1047
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1057
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1061
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1065
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1069
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1075
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1079
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1083
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1093
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1099
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1103
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1109
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1113
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1117
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1141
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1145
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1149
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1168
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1173
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1178
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1187
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1191
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1222
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1227
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1233
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1253
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1259
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1275
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1289
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1294
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1299
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1304
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1311
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1318
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1329
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1340
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1346
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1350
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1354
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1386
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1396
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1402
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1412
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1416
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1422
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1432
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1437
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1446
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1469
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1478
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1564
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1570
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1586
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1590
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1594
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1600
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1604
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1618
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1630
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1635
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1640
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1646
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Armscii8Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = ASCIIStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Big5Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = UBinaryStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp1250Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp1251Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp1256Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp1257Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Cp850Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Cp852Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Cp866Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Cp932Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Dec8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = EucjpmsStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = EuckrStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Gb18030Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Gb2312Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = GbkStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Geostd8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = GreekStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = HebrewStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Hp8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Keybcs2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Koi8rStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Koi8uStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Latin1Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Latin2Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Latin5Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Latin7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = MacceStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = MacromanStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = SjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Swe7Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Tis620Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Ucs2Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = UjisStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf16Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf16leStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Utf32Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = Utf8mb4Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = Utf8Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1968
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1972
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1978
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1982
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1997
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2001
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2250
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2279
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2289
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2384
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2393
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2399
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2438
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2470
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = yyDollar[2].str
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = "key"
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2537
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2547
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2551
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2557
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2561
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2567
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2571
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2577
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2599
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2614
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2634
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2643
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2655
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2677
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2709
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2718
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2724
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2738
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2932
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2950
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2954
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2967
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2979
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2985
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3127
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3161
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3165
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3169
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3173
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3394
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3595
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3643
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3652
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3660
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3669
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3676
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3688
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3697
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3708
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3712
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3726
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3730
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3736
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3742
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3748
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3758
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3762
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3768
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3774
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3780
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3786
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3792
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3800
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3810
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3816
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3822
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3826
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3830
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3836
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3840
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3845
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3849
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3854
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3858
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3864
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3868
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3872
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3876
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3880
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3884
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3888
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3892
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3896
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3900
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3904
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3908
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3912
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3916
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3920
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3924
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3928
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3932
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3936
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3940
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3944
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3948
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3953
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3961
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3967
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3982
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3986
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3991
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3996
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4001
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4006
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4011
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4017
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4023
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4028
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4034
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4040
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4050
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4055
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4059
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4064
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4069
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4074
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4079
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4085
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4091
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4098
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4105
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4112
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4120
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4130
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4136
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4142
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4148
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4154
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4160
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4172
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4194
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4198
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4249
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4291
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4295
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4303
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4391
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4403
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &Show{&ShowBasic{Command: DMLJobs, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4435
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4443
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = ""
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = "extended "
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4542
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4558
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4566
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4576
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4580
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4590
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4596
		{
			yyVAL.empty = struct{}{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.empty = struct{}{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.empty = struct{}{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4654
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4658
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4667
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4673
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4683
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4687
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4691
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4698
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4704
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4708
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4713
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4718
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4724
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4730
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4735
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4739
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4743
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4747
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4751
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4755
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4759
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4764
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4768
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4772
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4776
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
			yyVAL.str = yyDollar[1].str
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = yyDollar[1].str
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4796
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4800
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4808
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4831
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4837
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4843
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4853
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4859
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4869
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4875
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4879
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4883
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4887
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4893
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4899
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4903
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4909
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4913
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4917
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4921
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4925
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4929
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4935
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4957
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4981
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4998
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5002
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5011
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5020
		{
			setAllowComments(yylex, true)
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5024
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5030
		{
			yyVAL.strs = nil
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5034
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5044
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5053
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.str = SQLCacheStr
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5066
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5070
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5080
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5084
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5094
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5103
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5109
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5113
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5122
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{
			yyVAL.strs = nil
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5135
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5143
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.str = SQLCacheStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.str = DistinctStr
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.str = DistinctStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5165
		{
			yyVAL.str = StraightJoinHint
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5179
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5189
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5193
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5197
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5201
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5206
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5226
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5230
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5236
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5242
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5246
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5256
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5260
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5264
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5268
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5274
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5278
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5284
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5288
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5297
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5306
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5312
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5322
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5326
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5332
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5336
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5340
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5350
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5367
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5371
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5375
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5379
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5385
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5387
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5391
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5397
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5399
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5402
		{
			yyVAL.empty = struct{}{}
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.empty = struct{}{}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5407
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5415
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5428
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5432
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5436
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5442
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5448
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5452
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5456
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5460
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5466
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5470
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5480
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5484
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5494
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5500
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5509
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5515
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5519
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5525
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5529
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5533
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5537
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5542
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5546
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5550
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5554
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5665
		{
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5844
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5848
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5854
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5858
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5864
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5868
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5872
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5878
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5882
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5889
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5893
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5897
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5901
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5905
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5911
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5915
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5919
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5923
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5927
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5946
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5952
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5956
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5965
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5970
		{
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5979
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5985
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5989
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6001
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6007
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6011
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6017
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6021
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6027
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6031
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6043
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6049
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6053
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6059
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6065
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6069
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6085
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6089
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6096
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6100
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6104
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6108
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6114
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6118
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6122
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6126
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6130
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6134
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6138
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6144
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6148
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6152
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6159
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6165
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6731
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6737
		{
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6739
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6743
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6747
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6751
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6755
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6759
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6763
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6767
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6771
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6775
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6779
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6785
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6789
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6793
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6797
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6801
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6805
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6809
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6813
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6817
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6866
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6872
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6876
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6880
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6884
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6888
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6894
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6898
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6902
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6912
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6916
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6922
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6926
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6930
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6934
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6938
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6960
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6964
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6968
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6972
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6976
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6980
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6999
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = string("")
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7008
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7014
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7018
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7024
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7039
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7043
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7047
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7051
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7067
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7076
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7080
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7090
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7099
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7105
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7111
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7115
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7124
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7133
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7139
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7145
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7149
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7155
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7160
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7164
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7168
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7177
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7183
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7187
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7191
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7204
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7208
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7212
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7222
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7226
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7230
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7234
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7240
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7244
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7248
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7252
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7257
		{
			yyVAL.str = ""
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7261
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7265
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7269
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7274
		{
			yyVAL.str = ""
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7278
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7288
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7293
		{
			yyVAL.str = ""
		}
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7297
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7302
		{
			yyVAL.str = "cascaded"
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7319
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7323
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7329
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7333
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7337
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7341
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7345
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7349
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7359
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7365
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7371
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7377
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7386
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7390
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7395
		{
			yyVAL.str = ""
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7399
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7405
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7409
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7415
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7419
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7423
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7428
		{
			yyVAL.str = ""
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7432
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7436
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7441
		{
			yyVAL.str = ""
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.str = " header"
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7450
		{
			yyVAL.str = ""
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7454
		{
			yyVAL.str = " manifest on"
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = " manifest off"
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7463
		{
			yyVAL.str = ""
		}
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7467
		{
			yyVAL.str = " overwrite on"
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = " overwrite off"
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7477
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7482
		{
			yyVAL.str = ""
		}
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7486
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7496
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7502
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7506
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = ""
		}
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7515
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7525
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7531
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7535
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7539
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7544
		{
			yyVAL.str = ""
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7548
		{
			yyVAL.str = " optionally"
		}
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7561
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7565
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7569
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7573
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7577
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7583
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7587
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7591
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7595
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7604
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7610
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7614
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7620
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7624
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7630
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7634
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7639
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7649
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7653
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7659
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = "charset"
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7676
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7680
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7684
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7695
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7698
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7713
		{
			yyVAL.empty = struct{}{}
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.empty = struct{}{}
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7717
		{
			yyVAL.empty = struct{}{}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7721
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7730
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7737
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7741
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7747
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7751
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7758
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7764
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7774
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7778
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7785
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8379
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8388
		{
			decNesting(yylex)
		}
	case 2117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8393
		{
			skipToEnd(yylex)
		}
	case 2118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8398
		{
			skipToEnd(yylex)
		}
	case 2119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8402
		{
			skipToEnd(yylex)
		}
	case 2120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8406
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
