/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const CODE = 57702
const COLLATION = 57703
const COLUMNS = 57704
const DATABASES = 57705
const ENGINES = 57706
const EVENT = 57707
const EXTENDED = 57708
const FIELDS = 57709
const FULL = 57710
const FUNCTION = 57711
const GTID_EXECUTED = 57712
const KEYSPACES = 57713
const OPEN = 57714
const PLUGINS = 57715
const PRIVILEGES = 57716
const PROCESSLIST = 57717
const SCHEMAS = 57718
const TABLES = 57719
const TRIGGERS = 57720
const USER = 57721
const VGTID_EXECUTED = 57722
const VITESS_KEYSPACES = 57723
const VITESS_METADATA = 57724
const VITESS_MIGRATIONS = 57725
const VITESS_REPLICATION_STATUS = 57726
const VITESS_SHARDS = 57727
const VITESS_TABLETS = 57728
const VITESS_TARGET = 57729
const VSCHEMA = 57730
const VITESS_THROTTLED_APPS = 57731
const WORKLOAD = 57732
const LASTSEENGTID = 57733
const NAMES = 57734
const GLOBAL = 57735
const SESSION = 57736
const ISOLATION = 57737
const LEVEL = 57738
const READ = 57739
const WRITE = 57740
const ONLY = 57741
const REPEATABLE = 57742
const COMMITTED = 57743
const UNCOMMITTED = 57744
const SERIALIZABLE = 57745
const CURRENT_TIMESTAMP = 57746
const DATABASE = 57747
const CURRENT_DATE = 57748
const NOW = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const CURRENT_USER = 57753
const UTC_DATE = 57754
const UTC_TIME = 57755
const UTC_TIMESTAMP = 57756
const DAY = 57757
const DAY_HOUR = 57758
const DAY_MICROSECOND = 57759
const DAY_MINUTE = 57760
const DAY_SECOND = 57761
const HOUR = 57762
const HOUR_MICROSECOND = 57763
const HOUR_MINUTE = 57764
const HOUR_SECOND = 57765
const MICROSECOND = 57766
const MINUTE = 57767
const MINUTE_MICROSECOND = 57768
const MINUTE_SECOND = 57769
const MONTH = 57770
const QUARTER = 57771
const SECOND = 57772
const SECOND_MICROSECOND = 57773
const YEAR_MONTH = 57774
const WEEK = 57775
const REPLACE = 57776
const CONVERT = 57777
const CAST = 57778
const SUBSTR = 57779
const SUBSTRING = 57780
const SEPARATOR = 57781
const TIMESTAMPADD = 57782
const TIMESTAMPDIFF = 57783
const WEIGHT_STRING = 57784
const LTRIM = 57785
const RTRIM = 57786
const TRIM = 57787
const JSON_ARRAY = 57788
const JSON_OBJECT = 57789
const JSON_QUOTE = 57790
const JSON_DEPTH = 57791
const JSON_TYPE = 57792
const JSON_LENGTH = 57793
const JSON_VALID = 57794
const JSON_ARRAY_APPEND = 57795
const JSON_ARRAY_INSERT = 57796
const JSON_INSERT = 57797
const JSON_MERGE = 57798
const JSON_MERGE_PATCH = 57799
const JSON_MERGE_PRESERVE = 57800
const JSON_REMOVE = 57801
const JSON_REPLACE = 57802
const JSON_SET = 57803
const JSON_UNQUOTE = 57804
const COUNT = 57805
const AVG = 57806
const MAX = 57807
const MIN = 57808
const SUM = 57809
const GROUP_CONCAT = 57810
const BIT_AND = 57811
const BIT_OR = 57812
const BIT_XOR = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const VARIANCE = 57820
const REGEXP_INSTR = 57821
const REGEXP_LIKE = 57822
const REGEXP_REPLACE = 57823
const REGEXP_SUBSTR = 57824
const ExtractValue = 57825
const UpdateXML = 57826
const GET_LOCK = 57827
const RELEASE_LOCK = 57828
const RELEASE_ALL_LOCKS = 57829
const IS_FREE_LOCK = 57830
const IS_USED_LOCK = 57831
const LOCATE = 57832
const POSITION = 57833
const MATCH = 57834
const AGAINST = 57835
const BOOLEAN = 57836
const LANGUAGE = 57837
const WITH = 57838
const QUERY = 57839
const EXPANSION = 57840
const WITHOUT = 57841
const VALIDATION = 57842
const UNUSED = 57843
const ARRAY = 57844
const BYTE = 57845
const CUME_DIST = 57846
const DESCRIPTION = 57847
const DENSE_RANK = 57848
const EMPTY = 57849
const EXCEPT = 57850
const FIRST_VALUE = 57851
const GROUPING = 57852
const GROUPS = 57853
const JSON_TABLE = 57854
const LAG = 57855
const LAST_VALUE = 57856
const LATERAL = 57857
const LEAD = 57858
const NTH_VALUE = 57859
const NTILE = 57860
const OF = 57861
const OVER = 57862
const PERCENT_RANK = 57863
const RANK = 57864
const RECURSIVE = 57865
const ROW_NUMBER = 57866
const SYSTEM = 57867
const WINDOW = 57868
const ACTIVE = 57869
const ADMIN = 57870
const AUTOEXTEND_SIZE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COLUMN_FORMAT = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const ENGINE_ATTRIBUTE = 57878
const EXCLUDE = 57879
const FOLLOWING = 57880
const GET_MASTER_PUBLIC_KEY = 57881
const HISTOGRAM = 57882
const HISTORY = 57883
const INACTIVE = 57884
const INVISIBLE = 57885
const LOCKED = 57886
const MASTER_COMPRESSION_ALGORITHMS = 57887
const MASTER_PUBLIC_KEY_PATH = 57888
const MASTER_TLS_CIPHERSUITES = 57889
const MASTER_ZSTD_COMPRESSION_LEVEL = 57890
const NESTED = 57891
const NETWORK_NAMESPACE = 57892
const NOWAIT = 57893
const NULLS = 57894
const OJ = 57895
const OLD = 57896
const OPTIONAL = 57897
const ORDINALITY = 57898
const ORGANIZATION = 57899
const OTHERS = 57900
const PARTIAL = 57901
const PATH = 57902
const PERSIST = 57903
const PERSIST_ONLY = 57904
const PRECEDING = 57905
const PRIVILEGE_CHECKS_USER = 57906
const PROCESS = 57907
const RANDOM = 57908
const REFERENCE = 57909
const REQUIRE_ROW_FORMAT = 57910
const RESOURCE = 57911
const RESPECT = 57912
const RESTART = 57913
const RETAIN = 57914
const REUSE = 57915
const ROLE = 57916
const SECONDARY = 57917
const SECONDARY_ENGINE = 57918
const SECONDARY_ENGINE_ATTRIBUTE = 57919
const SECONDARY_LOAD = 57920
const SECONDARY_UNLOAD = 57921
const SIMPLE = 57922
const SKIP = 57923
const SRID = 57924
const THREAD_PRIORITY = 57925
const TIES = 57926
const UNBOUNDED = 57927
const VCPU = 57928
const VISIBLE = 57929
const RETURNING = 57930
const FORMAT_BYTES = 57931
const FORMAT_PICO_TIME = 57932
const PS_CURRENT_THREAD_ID = 57933
const PS_THREAD_ID = 57934
const GTID_SUBSET = 57935
const GTID_SUBTRACT = 57936
const WAIT_FOR_EXECUTED_GTID_SET = 57937
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57938
const FORMAT = 57939
const TREE = 57940
const VITESS = 57941
const TRADITIONAL = 57942
const VTEXPLAIN = 57943
const VEXPLAIN = 57944
const PLAN = 57945
const LOCAL = 57946
const LOW_PRIORITY = 57947
const NO_WRITE_TO_BINLOG = 57948
const LOGS = 57949
const ERROR = 57950
const GENERAL = 57951
const HOSTS = 57952
const OPTIMIZER_COSTS = 57953
const USER_RESOURCES = 57954
const SLOW = 57955
const CHANNEL = 57956
const RELAY = 57957
const EXPORT = 57958
const CURRENT = 57959
const ROW = 57960
const ROWS = 57961
const AVG_ROW_LENGTH = 57962
const CONNECTION = 57963
const CHECKSUM = 57964
const DELAY_KEY_WRITE = 57965
const ENCRYPTION = 57966
const ENGINE = 57967
const INSERT_METHOD = 57968
const MAX_ROWS = 57969
const MIN_ROWS = 57970
const PACK_KEYS = 57971
const PASSWORD = 57972
const FIXED = 57973
const DYNAMIC = 57974
const COMPRESSED = 57975
const REDUNDANT = 57976
const COMPACT = 57977
const ROW_FORMAT = 57978
const STATS_AUTO_RECALC = 57979
const STATS_PERSISTENT = 57980
const STATS_SAMPLE_PAGES = 57981
const STORAGE = 57982
const MEMORY = 57983
const DISK = 57984
const PARTITIONS = 57985
const LINEAR = 57986
const RANGE = 57987
const LIST = 57988
const SUBPARTITION = 57989
const SUBPARTITIONS = 57990
const HASH = 57991

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	667, 158,
	-2, 166,
	-1, 52,
	135, 166,
	176, 166,
	345, 166,
	-2, 520,
	-1, 60,
	36, 770,
	239, 770,
	250, 770,
	285, 784,
	286, 784,
	-2, 772,
	-1, 65,
	241, 808,
	-2, 806,
	-1, 120,
	238, 1460,
	-2, 132,
	-1, 122,
	1, 159,
	667, 159,
	-2, 166,
	-1, 133,
	136, 406,
	244, 406,
	-2, 509,
	-1, 152,
	135, 166,
	176, 166,
	345, 166,
	-2, 529,
	-1, 817,
	87, 1477,
	-2, 1331,
	-1, 818,
	87, 1478,
	221, 1482,
	-2, 1332,
	-1, 819,
	221, 1481,
	-2, 41,
	-1, 899,
	60, 882,
	-2, 897,
	-1, 985,
	249, 42,
	254, 42,
	-2, 417,
	-1, 1070,
	1, 577,
	667, 577,
	-2, 166,
	-1, 1370,
	221, 1482,
	-2, 1332,
	-1, 1518,
	60, 883,
	-2, 902,
	-1, 1519,
	60, 884,
	-2, 903,
	-1, 1570,
	135, 166,
	176, 166,
	345, 166,
	-2, 456,
	-1, 1651,
	136, 406,
	244, 406,
	-2, 509,
	-1, 1660,
	249, 43,
	254, 43,
	-2, 418,
	-1, 2019,
	221, 1486,
	-2, 1480,
	-1, 2020,
	221, 1482,
	-2, 1478,
	-1, 2120,
	135, 166,
	176, 166,
	345, 166,
	-2, 457,
	-1, 2127,
	26, 187,
	-2, 189,
	-1, 2494,
	78, 97,
	88, 97,
	-2, 961,
	-1, 2563,
	642, 693,
	-2, 667,
	-1, 2730,
	50, 1428,
	-2, 1422,
	-1, 3383,
	642, 693,
	-2, 681,
	-1, 3471,
	90, 625,
	95, 625,
	105, 625,
	178, 625,
	179, 625,
	180, 625,
	181, 625,
	182, 625,
	183, 625,
	184, 625,
	185, 625,
	186, 625,
	187, 625,
	188, 625,
	189, 625,
	190, 625,
	191, 625,
	192, 625,
	193, 625,
	194, 625,
	195, 625,
	196, 625,
	197, 625,
	198, 625,
	199, 625,
	200, 625,
	201, 625,
	202, 625,
	203, 625,
	204, 625,
	205, 625,
	206, 625,
	207, 625,
	208, 625,
	209, 625,
	210, 625,
	211, 625,
	212, 625,
	213, 625,
	214, 625,
	215, 625,
	216, 625,
	217, 625,
	218, 625,
	219, 625,
	-2, 1839,
}

const yyPrivate = 57344

const yyLast = 46885

var yyAct = [...]int{
	1526, 3542, 818, 3553, 3364, 3511, 3132, 2117, 3512, 828,
	821, 3130, 691, 3101, 3469, 3448, 2068, 2958, 1573, 3414,
	3437, 2880, 2782, 2789, 2048, 3348, 3296, 2831, 1832, 2840,
	2845, 5, 2842, 2841, 2839, 2844, 2843, 2743, 3346, 3088,
	1135, 892, 3336, 2394, 787, 2746, 3160, 41, 2428, 2050,
	2797, 3131, 670, 2191, 2747, 673, 2997, 193, 2467, 2859,
	193, 915, 2744, 783, 650, 2860, 3165, 2689, 2991, 656,
	2624, 781, 1533, 701, 2088, 2862, 3017, 2731, 2741, 2010,
	193, 2154, 2454, 2983, 2072, 782, 788, 2528, 2886, 2608,
	2179, 2560, 2159, 2091, 2530, 193, 669, 820, 2529, 1886,
	1083, 947, 1017, 671, 2222, 161, 2479, 2105, 2093, 1629,
	42, 40, 2460, 1520, 2446, 2092, 2430, 1901, 1981, 1840,
	656, 193, 656, 916, 894, 2015, 147, 1882, 896, 2600,
	900, 2007, 1658, 2200, 1137, 2178, 2080, 2161, 2239, 2521,
	1112, 975, 980, 1562, 1542, 2496, 1676, 683, 98, 918,
	2095, 1500, 1382, 1905, 1859, 954, 1295, 1310, 1775, 1496,
	1779, 951, 986, 1665, 983, 102, 103, 2176, 1980, 1757,
	955, 993, 2151, 933, 2150, 1547, 1561, 2073, 906, 678,
	981, 982, 935, 2016, 1366, 1977, 1342, 1914, 903, 1831,
	105, 83, 1126, 1784, 125, 1624, 902, 901, 165, 97,
	123, 124, 928, 1133, 1650, 130, 131, 1066, 904, 91,
	677, 82, 1386, 104, 3373, 2553, 96, 3543, 2193, 2194,
	2195, 3399, 3089, 2828, 2193, 660, 2551, 923, 927, 2583,
	2582, 2237, 1742, 665, 3081, 3495, 2616, 3044, 603, 93,
	837, 838, 839, 93, 2850, 2617, 909, 3400, 3394, 1311,
	126, 1390, 1019, 3395, 93, 645, 1847, 132, 1022, 1846,
	948, 639, 837, 838, 839, 1036, 1037, 1038, 3135, 1041,
	1042, 1043, 1044, 1862, 3135, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 943, 2, 942, 895, 893, 661, 910, 996,
	2848, 1845, 973, 1844, 972, 1311, 997, 2045, 2046, 1843,
	1842, 3449, 1815, 663, 917, 664, 2282, 971, 1023, 1026,
	1027, 126, 1306, 970, 969, 1527, 2854, 2850, 1030, 3490,
	188, 2426, 2727, 2456, 2573, 1327, 2226, 109, 110, 111,
	2847, 114, 3563, 1039, 120, 2693, 964, 189, 3515, 3395,
	597, 3499, 959, 3533, 127, 3134, 149, 1321, 3510, 3497,
	2963, 3134, 658, 659, 3455, 2576, 2962, 170, 2224, 93,
	3349, 2395, 888, 889, 890, 891, 3498, 1852, 899, 2905,
	2225, 3292, 3291, 2848, 3496, 1021, 3455, 3094, 2170, 126,
	3095, 84, 1020, 3524, 3302, 2291, 84, 639, 160, 941,
	785, 786, 3493, 84, 148, 84, 930, 931, 86, 2854,
	3113, 2164, 1297, 1321, 3102, 2470, 3438, 3445, 2219, 3301,
	3112, 1891, 3474, 167, 2925, 3378, 168, 1639, 2590, 2591,
	84, 43, 44, 86, 1563, 1119, 1564, 1121, 2851, 2076,
	2471, 2779, 2780, 639, 2427, 136, 137, 159, 158, 187,
	90, 2778, 3178, 2615, 47, 75, 76, 2288, 73, 77,
	2289, 2599, 2505, 1317, 2111, 2504, 1309, 74, 2506, 93,
	1324, 640, 1325, 1326, 93, 1118, 1120, 2112, 2113, 1824,
	1825, 93, 3479, 93, 1102, 1130, 968, 886, 1075, 1076,
	885, 3365, 1090, 941, 785, 786, 61, 1091, 1107, 1108,
	3477, 1090, 2554, 1103, 1096, 1089, 1091, 1088, 93, 3483,
	3484, 1296, 2517, 2130, 2129, 2047, 2913, 2799, 2800, 1317,
	1078, 2851, 2463, 2464, 3478, 2882, 2994, 653, 2280, 2911,
	2658, 1823, 639, 1827, 1307, 657, 1065, 639, 1559, 3516,
	2887, 639, 651, 2601, 966, 3324, 1504, 3325, 153, 134,
	156, 141, 133, 2561, 154, 155, 2201, 2240, 2163, 2586,
	3517, 171, 2252, 2248, 2250, 2251, 2249, 2253, 2254, 639,
	177, 142, 1732, 1040, 2875, 2283, 2284, 2286, 2285, 1116,
	2245, 3545, 2876, 1117, 1758, 145, 143, 138, 139, 140,
	144, 1105, 1106, 1122, 1128, 1104, 1097, 135, 1129, 193,
	1109, 193, 1763, 1111, 193, 193, 146, 640, 1071, 1123,
	1110, 2076, 963, 2603, 3083, 965, 1733, 2883, 1734, 1115,
	2260, 3082, 2261, 934, 2262, 2798, 2263, 1046, 3276, 1502,
	1045, 2074, 2075, 2244, 2884, 2246, 2242, 2801, 656, 2204,
	656, 656, 1006, 1004, 3139, 3079, 50, 53, 56, 55,
	58, 1069, 72, 640, 976, 81, 78, 2089, 977, 977,
	656, 193, 3491, 1015, 1014, 1013, 1012, 1011, 2289, 3564,
	59, 967, 1010, 1009, 1008, 2243, 1507, 1003, 1643, 60,
	89, 88, 1016, 1357, 70, 71, 57, 599, 2801, 1370,
	2692, 2607, 79, 80, 162, 2659, 1316, 1313, 1314, 1315,
	1320, 1322, 1319, 3522, 1318, 952, 1086, 887, 1092, 1093,
	1094, 1095, 1357, 968, 1312, 960, 952, 944, 938, 936,
	952, 989, 962, 961, 950, 988, 1664, 2431, 2433, 1776,
	2177, 929, 1131, 1132, 62, 63, 2604, 64, 65, 66,
	67, 2230, 640, 3372, 2552, 1378, 3451, 640, 953, 2229,
	1368, 640, 1316, 1313, 1314, 1315, 1320, 1322, 1319, 3078,
	1318, 1772, 1560, 1298, 1033, 1124, 2588, 974, 3451, 2620,
	1312, 966, 2821, 2585, 157, 995, 1637, 2223, 3450, 640,
	1100, 1636, 2519, 1360, 1361, 1362, 1363, 834, 1288, 1007,
	1005, 834, 1635, 1374, 2555, 1025, 2571, 1773, 2303, 1633,
	3450, 988, 834, 2074, 2075, 1024, 968, 1064, 602, 601,
	596, 944, 938, 936, 3361, 1766, 2598, 1764, 1765, 2597,
	1767, 1768, 2995, 2167, 2461, 2221, 3031, 1358, 1359, 3557,
	3013, 1370, 2610, 1364, 1663, 150, 2501, 2609, 151, 2466,
	2403, 1289, 1290, 2852, 2853, 1762, 1894, 87, 1744, 1743,
	1745, 1746, 1747, 3042, 3043, 2610, 2856, 3111, 1551, 122,
	2609, 3133, 2575, 2168, 1459, 1080, 2118, 3133, 163, 1357,
	2166, 1068, 87, 1354, 2777, 175, 912, 994, 1494, 1127,
	995, 117, 3386, 1018, 1085, 2290, 1113, 3074, 193, 1032,
	1785, 1915, 656, 656, 2432, 92, 3007, 2241, 967, 1836,
	92, 1769, 1528, 1530, 2169, 1916, 2574, 92, 193, 92,
	1565, 2644, 1906, 1388, 2165, 1389, 183, 2544, 1305, 1349,
	1350, 1352, 1351, 1353, 1354, 3174, 2852, 2853, 656, 937,
	1906, 193, 2320, 1327, 92, 3525, 2947, 1511, 1510, 2856,
	1087, 3482, 1514, 656, 1077, 1495, 1325, 1326, 896, 193,
	1074, 1326, 3049, 118, 1508, 3048, 1392, 2081, 2082, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	2208, 1673, 995, 1672, 1067, 182, 184, 185, 186, 2218,
	1662, 2216, 994, 1099, 1006, 3481, 656, 1864, 988, 991,
	992, 967, 952, 1759, 1101, 1760, 985, 989, 1761, 1370,
	995, 1865, 1355, 1356, 1863, 656, 656, 2213, 656, 1495,
	656, 656, 1004, 656, 656, 656, 656, 656, 656, 2220,
	1512, 1513, 3518, 937, 102, 103, 1370, 1084, 3416, 1370,
	656, 1370, 193, 1114, 1913, 3032, 1501, 1786, 3559, 1488,
	69, 1465, 1466, 1467, 1468, 1469, 2217, 908, 3555, 105,
	1070, 3556, 193, 3554, 2213, 3284, 1327, 2295, 2296, 2297,
	1670, 1327, 1854, 1856, 1857, 656, 3354, 193, 1324, 3283,
	1325, 1326, 2355, 3417, 994, 1640, 1641, 1642, 3565, 998,
	988, 656, 1327, 193, 1000, 1656, 1855, 1705, 1001, 999,
	1708, 3274, 1710, 2215, 837, 838, 839, 3124, 3123, 1727,
	193, 1529, 994, 1509, 1031, 3056, 1649, 193, 1028, 893,
	1498, 3355, 3055, 3045, 1532, 895, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 656, 1668, 2829, 1527, 1709,
	3108, 1752, 3109, 1556, 1557, 1911, 2817, 995, 1750, 2625,
	2526, 1739, 1717, 1718, 1912, 1343, 1527, 2525, 1723, 1724,
	1678, 2524, 1679, 645, 1681, 1683, 1667, 2173, 1687, 1689,
	1691, 1693, 1695, 1666, 1666, 3566, 1632, 2902, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1352, 1351, 1353, 1354, 1753,
	1737, 1659, 1736, 1646, 1647, 1645, 1327, 1735, 1725, 1719,
	1716, 1324, 1515, 1325, 1326, 1751, 1324, 1789, 1325, 1326,
	2646, 1715, 1749, 995, 1793, 1738, 1795, 1796, 1797, 1798,
	1714, 1713, 1685, 1802, 2012, 1781, 2012, 1324, 2009, 1325,
	1326, 3039, 645, 2627, 2879, 1814, 1073, 2011, 1079, 1787,
	1788, 1081, 1082, 2508, 645, 1559, 1777, 2189, 2188, 994,
	1292, 832, 3519, 1792, 108, 988, 991, 992, 99, 952,
	1799, 1800, 1801, 985, 989, 107, 3381, 106, 1638, 100,
	2310, 2187, 2186, 2185, 2184, 971, 101, 1536, 3380, 126,
	2309, 970, 969, 3358, 984, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1352, 1351, 1353, 1354, 1327, 3357, 1300, 3356,
	656, 656, 1791, 2637, 2636, 2635, 2357, 3279, 2629, 3263,
	2633, 3262, 2628, 656, 2626, 994, 1323, 1527, 2347, 2631,
	998, 988, 193, 1537, 1527, 1000, 1813, 3173, 2630, 1001,
	999, 1324, 3171, 1325, 1326, 1527, 1812, 1347, 1348, 1349,
	1350, 1352, 1351, 1353, 1354, 1327, 2632, 2634, 2452, 3544,
	1002, 3506, 1527, 1323, 1527, 1327, 41, 2452, 3444, 41,
	1345, 1346, 1347, 1348, 1349, 1350, 1352, 1351, 1353, 1354,
	656, 2452, 3424, 2452, 3420, 1527, 1327, 3120, 1889, 1889,
	1370, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1329, 1327,
	1493, 656, 3407, 1527, 1327, 3092, 3371, 1370, 1909, 1492,
	1327, 1491, 1910, 1867, 1327, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 3053, 1343,
	3038, 2619, 656, 656, 3287, 1527, 2452, 3275, 3374, 3529,
	1527, 1324, 1494, 1325, 1326, 1860, 1973, 1858, 2888, 3527,
	1527, 1368, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352,
	1351, 1353, 1354, 3092, 1527, 1868, 2452, 3090, 1907, 2885,
	3461, 1527, 2213, 1527, 2005, 2820, 1887, 1887, 2819, 1890,
	1327, 2535, 2020, 3459, 1527, 3011, 1527, 3310, 3457, 1527,
	1324, 2522, 1325, 1326, 1969, 1527, 3309, 99, 3305, 2034,
	1324, 1490, 1325, 1326, 101, 2235, 1861, 1327, 100, 1495,
	83, 1820, 1821, 83, 1837, 2234, 1528, 2041, 2368, 1527,
	2017, 1324, 2071, 1325, 1326, 193, 2810, 2809, 2807, 2808,
	656, 2805, 2806, 3267, 1324, 1327, 1325, 1326, 2903, 1324,
	2053, 1325, 1326, 2805, 2804, 1324, 1866, 1325, 1326, 1324,
	2065, 1325, 1326, 1816, 193, 2476, 1527, 656, 2289, 2584,
	3266, 2008, 1782, 1527, 3333, 1527, 1327, 193, 1628, 2565,
	3100, 656, 1893, 2497, 2020, 193, 108, 193, 1555, 193,
	193, 1327, 101, 1900, 1902, 1327, 1748, 107, 1740, 106,
	1730, 3331, 1527, 2058, 656, 2059, 1572, 2558, 2559, 1967,
	1343, 2127, 1917, 1918, 1919, 1920, 1726, 2022, 2023, 1978,
	1722, 1327, 2017, 2497, 2019, 1324, 1931, 1325, 1326, 3328,
	1527, 2099, 2359, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1352, 1351, 1353, 1354, 2452, 2451, 2498, 1721, 102, 103,
	2018, 1527, 1324, 1720, 1325, 1326, 2500, 2313, 1527, 2562,
	3026, 656, 2174, 1327, 2064, 1892, 1527, 1527, 102, 103,
	2448, 1628, 1627, 2468, 2021, 3314, 1527, 2024, 2025, 2977,
	1324, 1540, 1325, 1326, 1538, 101, 2498, 2042, 656, 1711,
	1571, 1570, 2540, 1978, 656, 1125, 2289, 2475, 2468, 2136,
	2137, 2138, 2139, 2122, 2742, 2973, 2121, 2103, 909, 2126,
	3006, 1324, 1323, 1325, 1326, 3006, 2019, 3008, 2131, 2052,
	2132, 2133, 2134, 2135, 1756, 2040, 1324, 1327, 1325, 1326,
	1324, 2063, 1325, 1326, 107, 2156, 2142, 2143, 2144, 2145,
	2066, 656, 2086, 2313, 2125, 2476, 656, 1539, 2162, 2214,
	656, 656, 2476, 2202, 2084, 2772, 1324, 1790, 1325, 1326,
	3412, 1327, 2108, 3385, 1794, 2289, 943, 2109, 942, 1327,
	3006, 2107, 2452, 1327, 2476, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 2124, 2123, 2317, 2967, 1955, 2199, 193, 2807,
	2715, 3057, 2110, 2313, 2368, 193, 2172, 2344, 1324, 2343,
	1325, 1326, 2213, 1323, 193, 193, 2196, 2213, 193, 2079,
	193, 2982, 1527, 1327, 1531, 2043, 2157, 193, 1892, 1838,
	2146, 2148, 2149, 1822, 193, 2207, 2153, 1771, 2210, 2171,
	2211, 1558, 2175, 1327, 979, 898, 2183, 1327, 978, 93,
	2227, 1327, 3058, 3059, 3060, 2975, 1527, 2206, 3487, 996,
	193, 2157, 2205, 2972, 1527, 3427, 997, 2316, 2209, 656,
	2920, 3298, 1324, 1701, 1325, 1326, 1666, 1534, 3264, 3185,
	3073, 2231, 3070, 2228, 3051, 2232, 2233, 1947, 1936, 1937,
	1938, 1939, 1949, 1940, 1941, 1942, 1954, 1950, 1943, 1944,
	1951, 1952, 1953, 1945, 1946, 1948, 1324, 2945, 1325, 1326,
	2930, 2929, 1630, 2155, 1324, 2238, 1325, 1326, 1324, 2877,
	1325, 1326, 1327, 93, 1702, 1703, 1704, 2941, 2273, 2274,
	2832, 2970, 1527, 2276, 2306, 1370, 1527, 2020, 2311, 2834,
	1327, 2314, 2277, 2315, 2830, 2566, 2152, 1327, 2322, 2147,
	2141, 2140, 2324, 2325, 2326, 1755, 1661, 2299, 1324, 2301,
	1325, 1326, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2266, 1327, 1657, 2307, 1626, 119, 1324, 1841,
	1325, 1326, 1324, 2532, 1325, 1326, 1324, 1069, 1325, 1326,
	1860, 3061, 3018, 3019, 1697, 2308, 2305, 2881, 2348, 2349,
	2350, 2351, 2352, 3299, 2354, 2170, 2935, 1527, 2356, 2300,
	2056, 1327, 2361, 2362, 3539, 2363, 1327, 3537, 2366, 2279,
	2367, 3513, 2531, 3393, 2370, 3520, 1818, 3319, 2374, 3021,
	2826, 2927, 2379, 2380, 2381, 2382, 2287, 2825, 3062, 3063,
	3064, 1698, 1699, 1700, 2824, 2393, 3024, 2396, 2397, 1327,
	2742, 1861, 2545, 1327, 2267, 2399, 2401, 1324, 2298, 1325,
	1326, 3023, 2404, 2405, 2406, 2407, 2408, 2764, 2761, 2019,
	2532, 2760, 2765, 2415, 2416, 1324, 2417, 1325, 1326, 2420,
	2422, 2065, 1324, 2424, 1325, 1326, 193, 2762, 1819, 3389,
	3300, 2070, 2763, 2436, 193, 2018, 3369, 1343, 2319, 2302,
	2918, 1527, 1535, 2062, 1889, 656, 3166, 3353, 1324, 3012,
	1325, 1326, 2720, 1327, 2327, 2766, 656, 2485, 2486, 2719,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1351, 1353,
	1354, 2342, 1327, 2423, 1527, 2999, 1327, 2421, 1527, 1343,
	193, 2435, 1339, 2998, 1340, 193, 1324, 3164, 1325, 1326,
	3002, 1324, 2729, 1325, 1326, 2353, 1770, 2472, 1341, 1355,
	1356, 1338, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352,
	1351, 1353, 1354, 41, 2438, 1343, 2440, 2803, 1327, 884,
	2515, 913, 2490, 2536, 1324, 2492, 1325, 1326, 1324, 914,
	1325, 1326, 1887, 666, 2437, 1915, 2453, 2926, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1352, 1351, 1353, 1354, 1916,
	3155, 1327, 3154, 656, 2083, 1035, 2400, 1527, 2449, 193,
	2383, 1527, 2087, 1034, 2090, 99, 193, 1841, 2462, 1327,
	2896, 2491, 2732, 2734, 1501, 2425, 100, 2531, 1327, 2613,
	656, 2735, 1327, 1291, 2572, 127, 3004, 656, 1324, 1495,
	1325, 1326, 2445, 1327, 2557, 2450, 656, 2518, 2520, 101,
	3153, 1327, 2495, 3271, 2465, 3466, 2511, 1324, 1327, 1325,
	1326, 1324, 1370, 1325, 1326, 1327, 2081, 2082, 3551, 2581,
	2822, 1327, 2270, 2259, 3370, 193, 193, 193, 193, 193,
	2499, 2162, 3294, 2802, 2502, 2375, 1527, 2258, 2489, 1327,
	919, 2509, 2067, 925, 925, 2512, 2534, 921, 922, 193,
	193, 2537, 2538, 1324, 3075, 1325, 1326, 99, 108, 2984,
	1327, 2523, 2923, 2257, 101, 1327, 2718, 2527, 100, 107,
	1327, 106, 193, 2579, 2717, 106, 2256, 2419, 2533, 2255,
	101, 2293, 3341, 3340, 3322, 2418, 1324, 3172, 1325, 1326,
	3170, 2541, 2414, 656, 2542, 3169, 2546, 2547, 2548, 2413,
	2578, 3162, 3071, 1649, 1324, 2412, 1325, 1326, 2648, 2649,
	2650, 2651, 2652, 1324, 3003, 1325, 1326, 1324, 3001, 1325,
	1326, 2567, 2568, 2411, 2835, 2197, 1644, 2657, 1324, 920,
	1325, 1326, 107, 3161, 2992, 2468, 1324, 2623, 1325, 1326,
	656, 2577, 3143, 1324, 2410, 1325, 1326, 3541, 3540, 2409,
	1324, 2448, 1325, 1326, 2398, 2660, 1324, 1327, 1325, 1326,
	2638, 2345, 108, 2054, 2653, 1841, 2605, 1552, 2602, 108,
	1544, 3540, 2247, 107, 1324, 106, 1325, 1326, 656, 2621,
	107, 2264, 2265, 112, 113, 2269, 656, 2622, 3541, 3359,
	3037, 911, 3, 2611, 2272, 1324, 2612, 1325, 1326, 95,
	1324, 2275, 1325, 1326, 1, 1324, 1835, 1325, 1326, 10,
	1833, 2641, 1834, 9, 1294, 8, 1293, 656, 2639, 3041,
	3476, 2694, 1327, 616, 2699, 2044, 1499, 2278, 3514, 3472,
	3473, 193, 1741, 1731, 3103, 656, 1979, 3295, 2838, 2203,
	3069, 2392, 2160, 1327, 987, 152, 2119, 2696, 2120, 656,
	3440, 116, 2640, 1370, 2751, 945, 656, 656, 1370, 193,
	193, 193, 193, 193, 2008, 2662, 2008, 2668, 115, 990,
	1098, 193, 2769, 2099, 2198, 3093, 2516, 193, 2128, 193,
	1577, 1575, 193, 193, 193, 2722, 1576, 2699, 1574, 1579,
	1578, 2904, 1324, 2754, 1325, 1326, 2346, 2946, 900, 2771,
	1826, 2099, 2099, 2099, 2099, 2099, 2391, 652, 2698, 2739,
	2695, 2670, 2697, 2672, 2745, 2488, 646, 190, 1566, 2745,
	1545, 2099, 2723, 2959, 2099, 1029, 2710, 2390, 193, 2683,
	2684, 2685, 2686, 2678, 2679, 2680, 2681, 2682, 2748, 606,
	2721, 656, 2811, 2724, 1370, 2236, 612, 1375, 1817, 656,
	2736, 2737, 2716, 2503, 193, 940, 932, 1324, 2055, 1325,
	1326, 2714, 2439, 2858, 902, 901, 2756, 2757, 193, 2759,
	2773, 939, 2755, 2774, 2767, 2758, 3272, 2750, 1324, 2996,
	1325, 1326, 2728, 2711, 2712, 2713, 2730, 193, 2775, 1327,
	193, 2455, 2733, 2726, 102, 103, 2781, 3352, 3163, 2898,
	3425, 2753, 1327, 2513, 2813, 2837, 1541, 2966, 2318, 2814,
	1327, 1904, 2812, 1365, 2815, 2816, 1781, 2096, 3138, 2915,
	2916, 2917, 1853, 2919, 2921, 2866, 1327, 675, 674, 672,
	1327, 2441, 2469, 1330, 822, 1327, 2162, 2928, 2857, 2865,
	2836, 2429, 2932, 2933, 2934, 2936, 2937, 2938, 2939, 2872,
	1553, 2940, 2480, 2942, 2943, 2944, 2478, 1327, 2948, 2949,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 1327, 2477,
	656, 2889, 2268, 2389, 2892, 2891, 2964, 2104, 3020, 2968,
	3016, 2969, 2971, 3468, 2974, 2976, 2388, 2978, 2979, 2980,
	2981, 2909, 2894, 2895, 2387, 2987, 2899, 2098, 1327, 193,
	2094, 2447, 1525, 1521, 2900, 773, 772, 1327, 684, 676,
	2386, 668, 2494, 2961, 2385, 2906, 2907, 1522, 2908, 2384,
	2965, 2910, 771, 2912, 1324, 2914, 1325, 1326, 770, 3034,
	3009, 3010, 2864, 3452, 3014, 1327, 2587, 1324, 2878, 1325,
	1326, 2378, 2060, 2061, 1524, 1324, 1523, 1325, 1326, 2589,
	2514, 2874, 2377, 1308, 1327, 193, 1517, 662, 958, 1327,
	2990, 1324, 2901, 1325, 1326, 1324, 1327, 1325, 1326, 3376,
	1324, 2292, 1325, 1326, 2924, 2988, 2985, 2986, 1327, 1516,
	1934, 1935, 2376, 3383, 193, 2846, 2543, 3087, 3000, 2993,
	2827, 2373, 1324, 3015, 1325, 1326, 2563, 2099, 2190, 68,
	45, 1328, 3005, 1324, 193, 1325, 1326, 193, 193, 193,
	3347, 1327, 3029, 3030, 3413, 3022, 1327, 656, 656, 2372,
	769, 3025, 1327, 766, 3140, 3141, 3027, 1327, 3142, 2690,
	1383, 3076, 3077, 1324, 2691, 1325, 1326, 2866, 2371, 3035,
	3091, 3036, 1324, 2369, 1325, 1326, 3028, 3396, 3397, 765,
	2365, 2865, 2592, 2593, 2594, 2595, 2596, 3398, 3097, 3098,
	1962, 1304, 2364, 1301, 656, 656, 656, 656, 3489, 3052,
	1324, 3054, 1325, 1326, 1828, 94, 1841, 2606, 3046, 3047,
	36, 35, 3110, 34, 33, 3114, 32, 26, 25, 1324,
	24, 1325, 1326, 23, 1324, 2360, 1325, 1326, 22, 2614,
	2358, 1324, 29, 1325, 1326, 21, 2323, 20, 19, 18,
	2849, 2312, 3125, 1324, 3509, 1325, 1326, 3550, 2481, 2484,
	2485, 2486, 2482, 121, 2483, 2487, 3099, 3129, 3018, 3019,
	54, 3080, 51, 49, 129, 3084, 3085, 3086, 128, 3137,
	52, 1525, 1521, 48, 1072, 46, 1324, 3144, 1325, 1326,
	31, 1324, 30, 1325, 1326, 17, 1522, 1324, 16, 1325,
	1326, 15, 1324, 14, 1325, 1326, 3119, 13, 12, 11,
	193, 7, 3115, 2481, 2484, 2485, 2486, 2482, 6, 2483,
	2487, 1518, 1519, 1524, 39, 1523, 38, 28, 37, 1370,
	27, 4, 3158, 2550, 656, 2192, 656, 0, 3136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 0, 0, 3179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3168, 0, 41, 0, 3183, 3181, 3159,
	0, 0, 3167, 3177, 0, 0, 0, 0, 0, 3175,
	2745, 0, 0, 0, 1543, 0, 656, 0, 833, 0,
	0, 85, 0, 0, 0, 0, 3188, 3189, 3286, 193,
	3273, 0, 656, 3191, 0, 2748, 0, 3293, 0, 2748,
	0, 3127, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 3303, 3304, 0,
	3306, 0, 3307, 3308, 1887, 3270, 3187, 3311, 3312, 3313,
	3269, 3315, 3318, 0, 0, 0, 3285, 3317, 3268, 0,
	0, 3289, 0, 3297, 0, 1889, 0, 3327, 3329, 3330,
	3332, 3334, 3335, 3337, 0, 656, 0, 0, 3290, 656,
	656, 0, 897, 0, 85, 0, 3277, 0, 0, 0,
	0, 0, 0, 0, 2785, 2823, 0, 0, 0, 0,
	3321, 0, 3316, 897, 3280, 3281, 3282, 0, 656, 0,
	0, 3367, 0, 0, 0, 0, 0, 0, 957, 3342,
	3343, 2861, 3363, 0, 0, 0, 3345, 3344, 3323, 0,
	0, 0, 3326, 0, 0, 2873, 0, 0, 0, 2786,
	0, 0, 0, 0, 3360, 0, 0, 0, 0, 0,
	3366, 0, 0, 1887, 2890, 3320, 0, 2893, 0, 1783,
	0, 0, 0, 2788, 0, 3362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2783, 0, 0, 0, 2748, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2799, 2800,
	0, 3368, 0, 193, 0, 2784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3387, 0, 3392, 2790, 0,
	0, 0, 3351, 3384, 0, 0, 0, 3382, 0, 0,
	3379, 0, 0, 0, 0, 0, 0, 3408, 0, 41,
	0, 0, 0, 3409, 3410, 0, 2989, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1370, 3375, 656, 3421, 0, 3402, 0, 0,
	3403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3411, 0, 2798, 0, 656, 656,
	0, 3446, 3447, 0, 0, 0, 0, 3418, 2801, 3426,
	0, 3428, 0, 0, 0, 3456, 3458, 3460, 0, 3453,
	656, 3454, 3439, 3431, 3436, 41, 3433, 3432, 3430, 3435,
	3434, 0, 0, 2745, 193, 656, 3297, 3441, 3423, 0,
	3488, 3050, 0, 0, 0, 0, 0, 0, 3464, 0,
	0, 0, 0, 0, 0, 0, 3467, 3485, 3475, 3480,
	0, 3065, 0, 0, 3066, 3067, 3068, 0, 0, 0,
	3453, 0, 3454, 0, 0, 3494, 3492, 0, 656, 3505,
	0, 0, 0, 0, 3391, 0, 0, 1848, 1849, 1850,
	1851, 0, 3401, 0, 0, 3503, 0, 0, 0, 3508,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3526, 3528, 3530, 3521, 0, 3523, 656, 1378, 656,
	0, 0, 0, 0, 2787, 0, 3534, 0, 3538, 1889,
	3536, 3532, 3531, 0, 0, 0, 1895, 1896, 0, 0,
	0, 1898, 3549, 925, 925, 1903, 3453, 0, 3454, 1908,
	3552, 3546, 0, 0, 0, 3558, 3560, 0, 3561, 3562,
	0, 0, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	1960, 1961, 1963, 1889, 1968, 3317, 1970, 1971, 1972, 3568,
	1974, 1975, 1976, 0, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 1887, 2006, 3535,
	2013, 2014, 925, 0, 925, 925, 925, 925, 925, 3569,
	3570, 0, 0, 0, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 0, 2035, 2036, 2037, 2038, 2039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1887, 0, 3567, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2791, 0, 2077, 2078, 2795, 0, 0, 0, 0,
	0, 0, 2794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 1134, 1134, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2796, 0, 0, 0,
	0, 2792, 0, 0, 0, 0, 2793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 897, 1367, 1372, 1373, 0, 1376,
	0, 1377, 1379, 1380, 1381, 0, 1384, 1385, 1387, 1387,
	2158, 1387, 1391, 1391, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 0,
	0, 0, 0, 1458, 0, 1460, 1461, 1462, 1463, 1464,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 1391,
	1391, 1391, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 0, 3209, 3211, 3210,
	3228, 3229, 3230, 3231, 3232, 3233, 3234, 723, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2556, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 897, 127, 0, 149, 897, 0, 0, 0,
	0, 0, 897, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2321, 0, 0, 0, 1652, 1653, 159, 158, 187, 0,
	0, 2328, 2329, 2330, 2331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3223, 3224, 655, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 1654, 156,
	0, 1651, 0, 154, 155, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 702, 793, 704, 790, 791, 0, 700, 703,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 722, 3208, 3212,
	3213, 3214, 3225, 3226, 3227, 3235, 3237, 754, 3236, 3238,
	3239, 3240, 3243, 3244, 3245, 3246, 3241, 3242, 3247, 3192,
	3196, 3193, 3194, 3195, 3207, 3197, 3198, 3199, 3200, 3201,
	3202, 3203, 3204, 3205, 3206, 3248, 3249, 3250, 3251, 3252,
	3253, 3218, 3222, 3221, 3219, 3220, 3216, 3217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	794, 0, 795, 162, 0, 799, 0, 0, 0, 801,
	800, 774, 802, 768, 767, 0, 0, 796, 797, 0,
	798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 85, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 157, 0, 3254, 3255, 3256, 3257, 3258,
	3259, 3260, 3261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 956, 0, 0, 0, 0, 0, 0, 2618, 0,
	0, 0, 0, 0, 150, 0, 0, 151, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 0,
	2642, 2643, 0, 0, 2645, 0, 0, 2647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 2654, 2655, 2656,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 2661,
	0, 0, 2663, 2664, 2665, 0, 0, 0, 2666, 2667,
	0, 0, 1982, 2669, 0, 0, 2671, 0, 0, 2673,
	2674, 2675, 2676, 0, 0, 183, 0, 2677, 1982, 1982,
	1982, 1982, 1982, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 0, 0,
	0, 0, 0, 2700, 2701, 2702, 2703, 2704, 2705, 0,
	0, 0, 2706, 2707, 0, 2708, 0, 2709, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 0,
	0, 0, 0, 620, 182, 184, 185, 186, 0, 0,
	0, 0, 0, 188, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 127, 0, 149,
	0, 0, 0, 0, 0, 2097, 188, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 615, 2770, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 655, 1287, 655, 655,
	625, 160, 0, 170, 0, 0, 0, 148, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 957, 2833, 0,
	0, 0, 0, 640, 0, 0, 2510, 1369, 1652, 1653,
	159, 158, 187, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	957, 0, 0, 0, 0, 0, 605, 0, 607, 621,
	0, 642, 0, 641, 611, 187, 609, 613, 622, 614,
	0, 608, 0, 619, 0, 0, 610, 623, 624, 627,
	631, 632, 633, 629, 626, 634, 604, 0, 617, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 835,
	0, 2012, 0, 0, 836, 0, 0, 0, 0, 0,
	2922, 0, 0, 0, 1888, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2931, 0, 0, 0, 0, 0,
	0, 153, 1654, 156, 0, 1651, 0, 154, 155, 0,
	0, 188, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 1369,
	0, 0, 0, 0, 0, 0, 0, 171, 170, 0,
	0, 0, 0, 0, 0, 0, 177, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 0,
	655, 655, 0, 0, 167, 0, 0, 168, 0, 0,
	0, 2294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 655, 1136, 0, 1136,
	1136, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	2304, 655, 0, 0, 0, 0, 0, 0, 0, 1299,
	0, 1625, 0, 0, 3072, 0, 0, 0, 0, 644,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 655, 0, 1660, 3096, 0, 0,
	0, 0, 0, 0, 1669, 638, 0, 1369, 1671, 0,
	0, 1674, 1675, 655, 655, 0, 655, 0, 655, 655,
	0, 655, 655, 655, 655, 655, 655, 157, 0, 0,
	0, 0, 0, 0, 1369, 1706, 1707, 1369, 655, 1369,
	0, 1712, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 3116, 0, 3117, 0, 0, 3118, 0, 0,
	3121, 3122, 0, 0, 0, 0, 0, 0, 0, 3126,
	0, 0, 0, 655, 0, 0, 2402, 0, 0, 3128,
	0, 0, 0, 0, 0, 0, 1774, 0, 150, 655,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3145, 0, 0, 3146, 0, 3147, 3148, 2434, 3149,
	0, 3150, 0, 0, 0, 0, 3151, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 897, 0, 175, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 3176, 0, 0, 0, 0, 0, 2473, 2474, 0,
	0, 0, 3184, 0, 163, 3186, 2097, 0, 0, 897,
	2493, 175, 0, 0, 0, 0, 0, 3190, 0, 183,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3265, 0, 0, 0, 0,
	0, 1505, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 169, 166, 172, 173, 174, 176, 178,
	179, 180, 181, 0, 0, 0, 0, 1549, 182, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 0, 0, 164, 169, 166, 172, 173,
	174, 176, 178, 179, 180, 181, 0, 0, 0, 0,
	0, 182, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 2570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3350, 0, 0, 655, 655,
	0, 0, 0, 0, 1677, 1677, 0, 1677, 0, 1677,
	1677, 655, 1686, 1677, 1677, 1677, 1677, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	1778, 0, 0, 0, 0, 0, 0, 1897, 0, 655,
	0, 0, 0, 0, 0, 1369, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	655, 655, 0, 0, 1136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3390,
	164, 169, 166, 172, 173, 174, 176, 178, 179, 180,
	181, 0, 0, 0, 2687, 0, 182, 184, 185, 186,
	0, 0, 3404, 3507, 0, 3405, 0, 3406, 0, 0,
	655, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 775, 0, 2097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2749, 0, 85, 0, 0, 2097, 2097, 2097, 2097, 2097,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 0, 0, 2097, 655,
	191, 3486, 655, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 600, 0, 0, 0, 0, 0, 1136,
	1136, 3500, 0, 3501, 0, 3502, 0, 0, 907, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 926, 926, 1582, 0, 0,
	0, 0, 2855, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 2863, 0, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 0, 0, 2180, 2181, 2182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 3547, 0, 3548, 0, 0, 655, 0, 0, 0,
	0, 0, 655, 1669, 1594, 0, 1669, 0, 1669, 0,
	1899, 0, 0, 0, 2212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 655, 0, 0, 0, 655, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1136, 0, 1608, 1611, 1612, 1613, 1614, 1615, 1616,
	0, 1617, 1618, 1620, 1621, 1619, 1622, 1623, 1596, 1597,
	1598, 1599, 1580, 1581, 1609, 0, 1583, 0, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 0, 0, 1593,
	1600, 1601, 1602, 1603, 0, 1604, 1605, 1606, 1607, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 0, 0, 2069, 655, 0, 0,
	0, 0, 0, 0, 3033, 0, 0, 0, 0, 0,
	1549, 0, 0, 1136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 1369, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 0, 0, 956, 1608, 1611, 1612, 1613, 1614, 1615,
	1616, 0, 1617, 1618, 1620, 1621, 1619, 1622, 1623, 1596,
	1597, 1598, 1599, 1580, 1581, 1609, 0, 1583, 0, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 0, 0,
	1593, 1600, 1601, 1602, 1603, 0, 1604, 1605, 1606, 1607,
	949, 0, 0, 0, 0, 1883, 0, 0, 0, 1883,
	1883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3152, 0, 3156, 3157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2749, 0, 85,
	0, 2749, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 600, 0, 0, 600, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2281, 2507,
	0, 0, 0, 0, 0, 0, 0, 0, 3278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1371, 0, 0, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 1669,
	1669, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2749, 0, 0,
	1369, 2580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 3377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2442, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 2457, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 907, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 2539, 0, 0, 0, 0, 655, 0, 0,
	0, 1369, 0, 0, 655, 655, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 1371, 0, 0, 0, 2564, 0, 0, 0,
	0, 0, 0, 0, 0, 2569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3504, 0, 0, 0, 1371,
	0, 0, 1371, 0, 1371, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2818, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	600, 0, 1369, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	600, 0, 1883, 0, 0, 0, 0, 0, 0, 1803,
	1804, 600, 600, 600, 600, 600, 600, 600, 2897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2688, 655, 0,
	0, 0, 0, 0, 0, 1136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1136, 0,
	0, 0, 0, 0, 0, 2752, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 93, 0, 0,
	835, 0, 0, 0, 823, 836, 837, 838, 839, 824,
	0, 0, 825, 826, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 655, 0, 0, 832,
	840, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 1371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 926, 926, 0, 0, 0,
	1371, 0, 655, 655, 655, 655, 2867, 2868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 926, 1780, 926, 926, 926, 926,
	926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2960,
	0, 2869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 655, 926, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 1780, 600, 0,
	600, 0, 600, 2106, 0, 0, 0, 0, 2870, 2871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 655, 835, 0, 0, 0, 823, 836,
	837, 838, 839, 824, 0, 0, 825, 826, 0, 827,
	0, 0, 0, 0, 0, 0, 2069, 2069, 0, 0,
	0, 0, 0, 832, 840, 841, 0, 0, 0, 0,
	0, 789, 0, 0, 793, 0, 790, 791, 0, 0,
	0, 792, 0, 655, 0, 0, 0, 655, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3104, 3105, 3106, 3107, 0, 0, 0,
	2867, 2868, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 655, 0, 600, 600, 0,
	0, 600, 0, 2271, 0, 2869, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 3180, 0, 3182, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	655, 0, 2870, 2871, 0, 0, 0, 0, 0, 0,
	1369, 0, 655, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3288, 0, 0, 0, 0, 655, 655, 1371, 0,
	1780, 0, 0, 0, 1136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3338, 0, 0, 0, 3338, 3338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 0, 655, 0, 0,
	0, 835, 0, 0, 0, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 0, 0, 600, 0, 0, 0, 0, 600, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 3415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 1136, 1136, 2549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 600,
	600, 600, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3415, 0, 0,
	0, 0, 600, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2960, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1371, 0, 0, 0,
	0, 1371, 600, 600, 600, 600, 600, 0, 0, 0,
	0, 0, 0, 0, 2768, 0, 0, 0, 0, 0,
	1728, 0, 600, 0, 0, 600, 2776, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	600, 600, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 1270, 1255, 504, 0,
	1198, 1273, 1167, 1186, 1283, 1189, 1192, 1234, 1146, 1212,
	404, 1183, 1139, 1171, 1141, 1178, 1142, 1169, 1200, 262,
	1166, 1257, 1216, 1272, 355, 259, 1148, 1172, 418, 1188,
	200, 1236, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 1279, 359, 1222, 0,
	483, 389, 0, 0, 0, 1202, 1261, 1210, 1248, 1197,
	1235, 1156, 1221, 1274, 1184, 1231, 1275, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 1728, 0, 3442, 645,
	0, 0, 0, 0, 3443, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 600, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 1180, 1228, 1269, 1181,
	1230, 257, 312, 264, 256, 509, 1280, 1260, 1145, 1209,
	1268, 0, 0, 223, 1271, 1204, 0, 1233, 0, 1286,
	1140, 1224, 0, 1143, 1147, 1282, 1264, 1175, 267, 0,
	0, 0, 0, 0, 0, 0, 1201, 1211, 1245, 1249,
	1195, 0, 0, 0, 0, 1371, 0, 0, 1173, 0,
	1220, 0, 0, 0, 1152, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 0,
	0, 0, 0, 1155, 0, 1174, 1246, 1728, 1138, 289,
	1149, 390, 249, 0, 440, 1253, 1263, 1196, 551, 1267,
	1194, 1193, 1240, 1153, 1259, 1187, 354, 1151, 321, 195,
	219, 0, 1185, 400, 448, 460, 1258, 1170, 1179, 247,
	1177, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 1219, 1238, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 1150, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 1165, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 1254, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 1243, 1285, 413, 459, 234, 531, 482, 1160,
	1164, 1158, 1225, 1159, 1214, 1215, 1161, 1276, 1277, 1278,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 1247,
	1154, 0, 1162, 1163, 1256, 1265, 1266, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 1218, 194, 215,
	357, 1281, 441, 280, 573, 541, 536, 201, 217, 1157,
	254, 1168, 1176, 0, 1182, 1190, 1191, 1203, 1205, 1206,
	1207, 1208, 1226, 1227, 1229, 1237, 1239, 1242, 1244, 1251,
	1262, 1284, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	1217, 1223, 370, 273, 296, 311, 1232, 540, 488, 221,
	453, 282, 245, 1250, 1252, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 1213,
	1241, 365, 505, 506, 307, 385, 0, 0, 0, 1270,
	1255, 504, 0, 1198, 1273, 1167, 1186, 1283, 1189, 1192,
	1234, 1146, 1212, 404, 1183, 1139, 1171, 1141, 1178, 1142,
	1169, 1200, 262, 1166, 1257, 1216, 1272, 355, 259, 1148,
	1172, 418, 1188, 200, 1236, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 1279,
	359, 1222, 0, 483, 389, 0, 0, 0, 1202, 1261,
	1210, 1248, 1197, 1235, 1156, 1221, 1274, 1184, 1231, 1275,
	314, 242, 316, 199, 401, 484, 278, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 1180,
	1228, 1269, 1181, 1230, 257, 312, 264, 256, 509, 1280,
	1260, 1145, 1209, 1268, 0, 0, 223, 1271, 1204, 0,
	1233, 0, 1286, 1140, 1224, 0, 1143, 1147, 1282, 1264,
	1175, 267, 0, 0, 0, 0, 0, 0, 0, 1201,
	1211, 1245, 1249, 1195, 0, 0, 0, 0, 0, 2777,
	0, 1173, 0, 1220, 0, 0, 0, 1152, 1144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 1155, 0, 1174, 1246,
	0, 1138, 289, 1149, 390, 249, 0, 440, 1253, 1263,
	1196, 551, 1267, 1194, 1193, 1240, 1153, 1259, 1187, 354,
	1151, 321, 195, 219, 0, 1185, 400, 448, 460, 1258,
	1170, 1179, 247, 1177, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 1219, 1238, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 1150, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 1165, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 1254, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 1243, 1285, 413, 459, 234,
	531, 482, 1160, 1164, 1158, 1225, 1159, 1214, 1215, 1161,
	1276, 1277, 1278, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 1247, 1154, 0, 1162, 1163, 1256, 1265, 1266,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	1218, 194, 215, 357, 1281, 441, 280, 573, 541, 536,
	201, 217, 1157, 254, 1168, 1176, 0, 1182, 1190, 1191,
	1203, 1205, 1206, 1207, 1208, 1226, 1227, 1229, 1237, 1239,
	1242, 1244, 1251, 1262, 1284, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 1217, 1223, 370, 273, 296, 311, 1232,
	540, 488, 221, 453, 282, 245, 1250, 1252, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 1213, 1241, 365, 505, 506, 307, 385, 0,
	0, 0, 1270, 1255, 504, 0, 1198, 1273, 1167, 1186,
	1283, 1189, 1192, 1234, 1146, 1212, 404, 1183, 1139, 1171,
	1141, 1178, 1142, 1169, 1200, 262, 1166, 1257, 1216, 1272,
	355, 259, 1148, 1172, 418, 1188, 200, 1236, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 1279, 359, 1222, 0, 483, 389, 0, 0,
	0, 1202, 1261, 1210, 1248, 1197, 1235, 1156, 1221, 1274,
	1184, 1231, 1275, 314, 242, 316, 199, 401, 484, 278,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 239, 0,
	0, 0, 340, 349, 348, 329, 330, 332, 334, 339,
	346, 352, 1180, 1228, 1269, 1181, 1230, 257, 312, 264,
	256, 509, 1280, 1260, 1145, 1209, 1268, 0, 0, 223,
	1271, 1204, 0, 1233, 0, 1286, 1140, 1224, 0, 1143,
	1147, 1282, 1264, 1175, 267, 0, 0, 0, 0, 0,
	0, 0, 1201, 1211, 1245, 1249, 1195, 0, 0, 0,
	0, 0, 2738, 0, 1173, 0, 1220, 0, 0, 0,
	1152, 1144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 1155,
	0, 1174, 1246, 0, 1138, 289, 1149, 390, 249, 0,
	440, 1253, 1263, 1196, 551, 1267, 1194, 1193, 1240, 1153,
	1259, 1187, 354, 1151, 321, 195, 219, 0, 1185, 400,
	448, 460, 1258, 1170, 1179, 247, 1177, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 1219, 1238, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 518, 519, 248, 575, 222, 545, 214, 1150,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 344, 345, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 1165, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 1254, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 1243, 1285,
	413, 459, 234, 531, 482, 1160, 1164, 1158, 1225, 1159,
	1214, 1215, 1161, 1276, 1277, 1278, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 1247, 1154, 0, 1162, 1163,
	1256, 1265, 1266, 595, 373, 472, 528, 326, 338, 341,
	331, 350, 0, 351, 327, 328, 333, 335, 336, 337,
	342, 343, 347, 353, 243, 205, 379, 387, 507, 303,
	210, 211, 212, 500, 501, 502, 503, 542, 543, 547,
	449, 450, 451, 452, 284, 537, 300, 455, 454, 322,
	323, 368, 437, 1218, 194, 215, 357, 1281, 441, 280,
	573, 541, 536, 201, 217, 1157, 254, 1168, 1176, 0,
	1182, 1190, 1191, 1203, 1205, 1206, 1207, 1208, 1226, 1227,
	1229, 1237, 1239, 1242, 1244, 1251, 1262, 1284, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	292, 293, 432, 433, 305, 306, 570, 571, 291, 525,
	555, 523, 569, 549, 426, 367, 1217, 1223, 370, 273,
	296, 311, 1232, 540, 488, 221, 453, 282, 245, 1250,
	1252, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 1213, 1241, 365, 505, 506,
	307, 385, 0, 0, 0, 1270, 1255, 504, 0, 1198,
	1273, 1167, 1186, 1283, 1189, 1192, 1234, 1146, 1212, 404,
	1183, 1139, 1171, 1141, 1178, 1142, 1169, 1200, 262, 1166,
	1257, 1216, 1272, 355, 259, 1148, 1172, 418, 1188, 200,
	1236, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 1279, 359, 1222, 0, 483,
	389, 0, 0, 0, 1202, 1261, 1210, 1248, 1197, 1235,
	1156, 1221, 1274, 1184, 1231, 1275, 314, 242, 316, 199,
	401, 484, 278, 0, 0, 0, 0, 0, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 239, 0, 0, 0, 340, 349, 348, 329, 330,
	332, 334, 339, 346, 352, 1180, 1228, 1269, 1181, 1230,
	257, 312, 264, 256, 509, 1280, 1260, 1145, 1209, 1268,
	0, 0, 223, 1271, 1204, 0, 1233, 0, 1286, 1140,
	1224, 0, 1143, 1147, 1282, 1264, 1175, 267, 0, 0,
	0, 0, 0, 0, 0, 1201, 1211, 1245, 1249, 1195,
	0, 0, 0, 0, 0, 2085, 0, 1173, 0, 1220,
	0, 0, 0, 1152, 1144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 1155, 0, 1174, 1246, 0, 1138, 289, 1149,
	390, 249, 0, 440, 1253, 1263, 1196, 551, 1267, 1194,
	1193, 1240, 1153, 1259, 1187, 354, 1151, 321, 195, 219,
	0, 1185, 400, 448, 460, 1258, 1170, 1179, 247, 1177,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	1219, 1238, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 518, 519, 248, 575, 222,
	545, 214, 1150, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 344, 345, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 1165, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	1254, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 1243, 1285, 413, 459, 234, 531, 482, 1160, 1164,
	1158, 1225, 1159, 1214, 1215, 1161, 1276, 1277, 1278, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 1247, 1154,
	0, 1162, 1163, 1256, 1265, 1266, 595, 373, 472, 528,
	326, 338, 341, 331, 350, 0, 351, 327, 328, 333,
	335, 336, 337, 342, 343, 347, 353, 243, 205, 379,
	387, 507, 303, 210, 211, 212, 500, 501, 502, 503,
	542, 543, 547, 449, 450, 451, 452, 284, 537, 300,
	455, 454, 322, 323, 368, 437, 1218, 194, 215, 357,
	1281, 441, 280, 573, 541, 536, 201, 217, 1157, 254,
	1168, 1176, 0, 1182, 1190, 1191, 1203, 1205, 1206, 1207,
	1208, 1226, 1227, 1229, 1237, 1239, 1242, 1244, 1251, 1262,
	1284, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 397, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 292, 293, 432, 433, 305, 306, 570,
	571, 291, 525, 555, 523, 569, 549, 426, 367, 1217,
	1223, 370, 273, 296, 311, 1232, 540, 488, 221, 453,
	282, 245, 1250, 1252, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 1213, 1241,
	365, 505, 506, 307, 385, 0, 0, 0, 1270, 1255,
	504, 0, 1198, 1273, 1167, 1186, 1283, 1189, 1192, 1234,
	1146, 1212, 404, 1183, 1139, 1171, 1141, 1178, 1142, 1169,
	1200, 262, 1166, 1257, 1216, 1272, 355, 259, 1148, 1172,
	418, 1188, 200, 1236, 473, 246, 366, 363, 512, 274,
	265, 261, 244, 308, 374, 416, 494, 410, 1279, 359,
	1222, 0, 483, 389, 0, 0, 0, 1202, 1261, 1210,
	1248, 1197, 1235, 1156, 1221, 1274, 1184, 1231, 1275, 314,
	242, 316, 199, 401, 484, 278, 0, 93, 0, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 239, 0, 0, 0, 340, 349,
	348, 329, 330, 332, 334, 339, 346, 352, 1180, 1228,
	1269, 1181, 1230, 257, 312, 264, 256, 509, 1280, 1260,
	1145, 1209, 1268, 0, 0, 223, 1271, 1204, 0, 1233,
	0, 1286, 1140, 1224, 0, 1143, 1147, 1282, 1264, 1175,
	267, 0, 0, 0, 0, 0, 0, 0, 1201, 1211,
	1245, 1249, 1195, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 1220, 0, 0, 0, 1152, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 1155, 0, 1174, 1246, 0,
	1138, 289, 1149, 390, 249, 0, 440, 1253, 1263, 1196,
	551, 1267, 1194, 1193, 1240, 1153, 1259, 1187, 354, 1151,
	321, 195, 219, 0, 1185, 400, 448, 460, 1258, 1170,
	1179, 247, 1177, 458, 414, 529, 227, 276, 445, 420,
	456, 428, 279, 1219, 1238, 457, 361, 514, 438, 526,
	552, 553, 255, 394, 538, 498, 546, 572, 220, 252,
	408, 491, 532, 480, 386, 510, 511, 320, 479, 287,
	198, 358, 558, 218, 466, 360, 236, 225, 516, 535,
	281, 443, 567, 207, 493, 524, 233, 470, 0, 0,
	574, 241, 490, 209, 521, 489, 382, 317, 318, 208,
	0, 444, 260, 285, 0, 0, 250, 403, 518, 519,
	248, 575, 222, 545, 214, 1150, 544, 396, 513, 522,
	383, 372, 213, 520, 381, 371, 325, 344, 345, 272,
	298, 435, 364, 436, 297, 299, 392, 391, 393, 202,
	533, 0, 203, 0, 485, 534, 576, 228, 229, 231,
	1165, 271, 275, 283, 286, 294, 295, 304, 356, 407,
	434, 430, 439, 1254, 508, 527, 539, 550, 556, 557,
	559, 560, 561, 562, 563, 568, 566, 564, 565, 395,
	302, 481, 324, 362, 1243, 1285, 413, 459, 234, 531,
	482, 1160, 1164, 1158, 1225, 1159, 1214, 1215, 1161, 1276,
	1277, 1278, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 1247, 1154, 0, 1162, 1163, 1256, 1265, 1266, 595,
	373, 472, 528, 326, 338, 341, 331, 350, 0, 351,
	327, 328, 333, 335, 336, 337, 342, 343, 347, 353,
	243, 205, 379, 387, 507, 303, 210, 211, 212, 500,
	501, 502, 503, 542, 543, 547, 449, 450, 451, 452,
	284, 537, 300, 455, 454, 322, 323, 368, 437, 1218,
	194, 215, 357, 1281, 441, 280, 573, 541, 536, 201,
	217, 1157, 254, 1168, 1176, 0, 1182, 1190, 1191, 1203,
	1205, 1206, 1207, 1208, 1226, 1227, 1229, 1237, 1239, 1242,
	1244, 1251, 1262, 1284, 196, 197, 204, 216, 226, 230,
	237, 253, 268, 270, 277, 290, 301, 309, 310, 313,
	319, 369, 375, 376, 377, 378, 397, 398, 399, 402,
	405, 406, 409, 411, 412, 415, 419, 423, 424, 425,
	427, 429, 431, 442, 447, 461, 462, 463, 464, 465,
	468, 469, 474, 475, 476, 477, 478, 486, 487, 492,
	515, 517, 530, 548, 554, 467, 292, 293, 432, 433,
	305, 306, 570, 571, 291, 525, 555, 523, 569, 549,
	426, 367, 1217, 1223, 370, 273, 296, 311, 1232, 540,
	488, 221, 453, 282, 245, 1250, 1252, 206, 240, 224,
	251, 266, 269, 315, 380, 388, 417, 422, 288, 263,
	238, 446, 235, 471, 495, 496, 497, 499, 384, 258,
	421, 1213, 1241, 365, 505, 506, 307, 385, 0, 0,
	0, 1270, 1255, 504, 0, 1198, 1273, 1167, 1186, 1283,
	1189, 1192, 1234, 1146, 1212, 404, 1183, 1139, 1171, 1141,
	1178, 1142, 1169, 1200, 262, 1166, 1257, 1216, 1272, 355,
	259, 1148, 1172, 418, 1188, 200, 1236, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 1279, 359, 1222, 0, 483, 389, 0, 0, 0,
	1202, 1261, 1210, 1248, 1197, 1235, 1156, 1221, 1274, 1184,
	1231, 1275, 314, 242, 316, 199, 401, 484, 278, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 239, 0, 0,
	0, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 1180, 1228, 1269, 1181, 1230, 257, 312, 264, 256,
	509, 1280, 1260, 1145, 1209, 1268, 0, 0, 223, 1271,
	1204, 0, 1233, 0, 1286, 1140, 1224, 0, 1143, 1147,
	1282, 1264, 1175, 267, 0, 0, 0, 0, 0, 0,
	0, 1201, 1211, 1245, 1249, 1195, 0, 0, 0, 0,
	0, 0, 0, 1173, 0, 1220, 0, 0, 0, 1152,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 1155, 0,
	1174, 1246, 0, 1138, 289, 1149, 390, 249, 0, 440,
	1253, 1263, 1196, 551, 1267, 1194, 1193, 1240, 1153, 1259,
	1187, 354, 1151, 321, 195, 219, 0, 1185, 400, 448,
	460, 1258, 1170, 1179, 247, 1177, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 1219, 1238, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 1150, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 1165, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 1254, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 1243, 1285, 413,
	459, 234, 531, 482, 1160, 1164, 1158, 1225, 1159, 1214,
	1215, 1161, 1276, 1277, 1278, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 1247, 1154, 0, 1162, 1163, 1256,
	1265, 1266, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 1218, 194, 215, 357, 1281, 441, 280, 573,
	541, 536, 201, 217, 1157, 254, 1168, 1176, 0, 1182,
	1190, 1191, 1203, 1205, 1206, 1207, 1208, 1226, 1227, 1229,
	1237, 1239, 1242, 1244, 1251, 1262, 1284, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 1217, 1223, 370, 273, 296,
	311, 1232, 540, 488, 221, 453, 282, 245, 1250, 1252,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 1213, 1241, 365, 505, 506, 307,
	385, 0, 0, 0, 1270, 1255, 504, 0, 1198, 1273,
	1167, 1186, 1283, 1189, 1192, 1234, 1146, 1212, 404, 1183,
	1139, 1171, 1141, 1178, 1142, 1169, 1200, 262, 1166, 1257,
	1216, 1272, 355, 259, 1148, 1172, 418, 1188, 200, 1236,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 1279, 359, 1222, 0, 483, 389,
	0, 0, 0, 1202, 1261, 1210, 1248, 1197, 1235, 1156,
	1221, 1274, 1184, 1231, 1275, 314, 242, 316, 199, 401,
	484, 278, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 1180, 1228, 1269, 1181, 1230, 257,
	312, 264, 256, 509, 1280, 1260, 1145, 1209, 1268, 0,
	0, 223, 1271, 1204, 0, 1233, 0, 1286, 1140, 1224,
	0, 1143, 1147, 1282, 1264, 1175, 267, 0, 0, 0,
	0, 0, 0, 0, 1201, 1211, 1245, 1249, 1195, 0,
	0, 0, 0, 0, 0, 0, 1173, 0, 1220, 0,
	0, 0, 1152, 1144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 1155, 0, 1174, 1246, 0, 1138, 289, 1149, 390,
	249, 0, 440, 1253, 1263, 1196, 551, 1267, 1194, 1193,
	1240, 1153, 1259, 1187, 354, 1151, 321, 195, 219, 0,
	1185, 400, 448, 460, 1258, 1170, 1179, 247, 1177, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 1219,
	1238, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 1150, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 1165, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 1254,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	1243, 1285, 413, 459, 234, 531, 482, 1160, 1164, 1158,
	1225, 1159, 1214, 1215, 1161, 1276, 1277, 1278, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 1247, 1154, 0,
	1162, 1163, 1256, 1265, 1266, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 1218, 194, 215, 357, 1281,
	441, 280, 573, 541, 536, 201, 217, 1157, 254, 1168,
	1176, 0, 1182, 1190, 1191, 1203, 1205, 1206, 1207, 1208,
	1226, 1227, 1229, 1237, 1239, 1242, 1244, 1251, 1262, 1284,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	291, 525, 555, 523, 569, 549, 426, 367, 1217, 1223,
	370, 273, 296, 311, 1232, 540, 488, 221, 453, 282,
	245, 1250, 1252, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 1213, 1241, 365,
	505, 506, 307, 385, 0, 0, 0, 1270, 1255, 504,
	0, 1198, 1273, 1167, 1186, 1283, 1189, 1192, 1234, 1146,
	1212, 404, 1183, 1139, 1171, 1141, 1178, 1142, 1169, 1200,
	262, 1166, 1257, 1216, 1272, 355, 259, 1148, 1172, 418,
	1188, 200, 1236, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 1279, 359, 1222,
	0, 483, 389, 0, 0, 0, 1202, 1261, 1210, 1248,
	1197, 1235, 1156, 1221, 1274, 1184, 1231, 1275, 314, 242,
	316, 199, 401, 484, 278, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 239, 0, 0, 0, 340, 349, 348,
	329, 330, 332, 334, 339, 346, 352, 1180, 1228, 1269,
	1181, 1230, 257, 312, 264, 256, 509, 1280, 1260, 1145,
	1209, 1268, 0, 0, 223, 1271, 1204, 0, 1233, 0,
	1286, 1140, 1224, 0, 1143, 1147, 1282, 1264, 1175, 267,
	0, 0, 0, 0, 0, 0, 0, 1201, 1211, 1245,
	1249, 1195, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 1220, 0, 0, 0, 1152, 1144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 1155, 0, 1174, 1246, 0, 1138,
	289, 1149, 390, 249, 0, 440, 1253, 1263, 1196, 551,
	1267, 1194, 1193, 1240, 1153, 1259, 1187, 354, 1151, 321,
	195, 219, 0, 1185, 400, 448, 460, 1258, 1170, 1179,
	247, 1177, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 1219, 1238, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 518, 519, 248,
	575, 222, 545, 214, 1150, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 344, 345, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 1165,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 1254, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 1243, 1285, 413, 459, 234, 531, 482,
	1160, 1164, 1158, 1225, 1159, 1214, 1215, 1161, 1276, 1277,
	1278, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	1247, 1154, 0, 1162, 1163, 1256, 1265, 1266, 595, 373,
	472, 528, 326, 338, 341, 331, 350, 0, 351, 327,
	328, 333, 335, 336, 337, 342, 343, 347, 353, 243,
	205, 379, 387, 507, 303, 210, 211, 212, 500, 501,
	502, 503, 542, 543, 547, 449, 450, 451, 452, 284,
	537, 300, 455, 454, 322, 323, 368, 437, 1218, 194,
	215, 357, 1281, 441, 280, 573, 541, 536, 201, 217,
	1157, 254, 1168, 1176, 0, 1182, 1190, 1191, 1203, 1205,
	1206, 1207, 1208, 1226, 1227, 1229, 1237, 1239, 1242, 1244,
	1251, 1262, 1284, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 292, 293, 432, 433, 305,
	306, 570, 571, 291, 525, 555, 523, 569, 549, 426,
	367, 1217, 1223, 370, 273, 296, 311, 1232, 540, 488,
	221, 453, 282, 245, 1250, 1252, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	1213, 1241, 365, 505, 506, 307, 385, 0, 0, 0,
	0, 0, 504, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 685,
	0, 0, 0, 262, 690, 0, 0, 0, 355, 259,
	0, 0, 418, 0, 200, 0, 473, 246, 366, 363,
	512, 274, 265, 261, 244, 308, 374, 416, 494, 410,
	697, 359, 0, 0, 483, 389, 0, 0, 0, 0,
	0, 693, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 242, 316, 199, 401, 484, 278, 0, 93,
	0, 0, 835, 819, 785, 786, 823, 836, 837, 838,
	839, 824, 0, 232, 825, 826, 239, 827, 0, 784,
	725, 727, 726, 744, 745, 746, 747, 748, 749, 750,
	723, 832, 840, 841, 0, 257, 312, 264, 256, 509,
	0, 0, 1964, 1965, 1966, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 667, 682, 0, 696, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	0, 0, 0, 0, 779, 0, 681, 0, 0, 689,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 390, 249, 0, 440, 778,
	0, 0, 551, 0, 0, 776, 0, 0, 0, 0,
	354, 0, 321, 195, 219, 0, 0, 400, 448, 460,
	0, 0, 0, 829, 0, 458, 414, 529, 227, 276,
	445, 420, 456, 428, 279, 0, 0, 457, 361, 514,
	438, 526, 552, 553, 255, 394, 538, 498, 546, 572,
	220, 252, 408, 491, 532, 480, 386, 510, 511, 320,
	479, 287, 198, 358, 558, 218, 466, 360, 236, 225,
	516, 535, 281, 443, 567, 207, 493, 524, 233, 470,
	0, 0, 574, 241, 490, 209, 521, 489, 382, 317,
	318, 208, 0, 444, 260, 285, 0, 0, 250, 403,
	830, 831, 248, 575, 731, 545, 214, 0, 544, 396,
	513, 522, 383, 372, 213, 520, 381, 371, 325, 739,
	740, 272, 298, 435, 364, 436, 297, 299, 392, 391,
	393, 202, 533, 0, 203, 0, 485, 534, 576, 228,
	229, 231, 0, 271, 275, 283, 286, 294, 295, 304,
	356, 407, 434, 430, 439, 0, 508, 527, 539, 550,
	556, 557, 559, 560, 561, 562, 563, 568, 566, 564,
	565, 395, 302, 481, 324, 362, 0, 0, 413, 459,
	234, 531, 482, 789, 777, 702, 793, 704, 790, 791,
	699, 700, 703, 792, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 780, 688, 687, 0, 695, 0, 721,
	722, 724, 728, 729, 730, 741, 742, 743, 751, 753,
	754, 752, 755, 756, 757, 760, 761, 762, 763, 758,
	759, 764, 705, 709, 706, 707, 708, 720, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 803, 804,
	805, 806, 807, 808, 734, 738, 737, 735, 736, 732,
	733, 686, 194, 215, 357, 0, 441, 280, 573, 541,
	536, 201, 217, 794, 254, 795, 0, 0, 799, 0,
	0, 0, 801, 800, 0, 802, 768, 767, 0, 0,
	796, 797, 0, 798, 0, 0, 196, 197, 204, 216,
	226, 230, 237, 253, 268, 270, 277, 290, 301, 309,
	310, 313, 319, 369, 375, 376, 377, 378, 397, 398,
	399, 402, 405, 406, 409, 411, 412, 415, 419, 423,
	424, 425, 427, 429, 431, 442, 447, 461, 462, 463,
	464, 465, 468, 469, 474, 475, 476, 477, 478, 486,
	487, 492, 515, 517, 530, 548, 554, 467, 809, 810,
	811, 812, 813, 814, 815, 816, 291, 525, 555, 523,
	569, 549, 426, 367, 0, 0, 370, 273, 296, 311,
	0, 540, 488, 221, 453, 282, 245, 834, 0, 206,
	240, 224, 251, 266, 269, 315, 380, 388, 417, 422,
	288, 263, 238, 446, 235, 471, 495, 496, 497, 499,
	384, 258, 421, 385, 0, 365, 505, 506, 307, 504,
	0, 698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 685, 0, 0, 0,
	262, 690, 0, 0, 0, 355, 259, 0, 0, 418,
	0, 200, 0, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 697, 359, 0,
	0, 483, 389, 0, 0, 0, 0, 0, 693, 694,
	0, 0, 0, 0, 0, 0, 2114, 0, 314, 242,
	316, 199, 401, 484, 278, 0, 93, 0, 0, 835,
	819, 785, 786, 823, 836, 837, 838, 839, 824, 0,
	232, 825, 826, 239, 827, 0, 784, 725, 727, 726,
	744, 745, 746, 747, 748, 749, 750, 723, 832, 840,
	841, 2115, 257, 312, 264, 256, 509, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 667, 682, 0, 696, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 680, 0, 0, 0,
	0, 779, 0, 681, 0, 0, 689, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 390, 249, 0, 440, 778, 0, 0, 551,
	0, 0, 776, 0, 0, 0, 0, 354, 0, 321,
	195, 219, 0, 0, 400, 448, 460, 0, 0, 0,
	829, 0, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 0, 0, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 830, 831, 248,
	575, 731, 545, 214, 0, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 739, 740, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 0,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 0, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 0, 0, 413, 459, 234, 531, 482,
	789, 777, 702, 793, 704, 790, 791, 699, 700, 703,
	792, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	780, 688, 687, 0, 695, 0, 721, 722, 724, 728,
	729, 730, 741, 742, 743, 751, 753, 754, 752, 755,
	756, 757, 760, 761, 762, 763, 758, 759, 764, 705,
	709, 706, 707, 708, 720, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 803, 804, 805, 806, 807,
	808, 734, 738, 737, 735, 736, 732, 733, 686, 194,
	215, 357, 0, 441, 280, 573, 541, 536, 201, 217,
	794, 254, 795, 0, 0, 799, 0, 0, 0, 801,
	800, 0, 802, 768, 767, 0, 0, 796, 797, 0,
	798, 0, 0, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 809, 810, 811, 812, 813,
	814, 815, 816, 291, 525, 555, 523, 569, 549, 426,
	367, 0, 0, 370, 273, 296, 311, 0, 540, 488,
	221, 453, 282, 245, 834, 0, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	0, 385, 365, 505, 506, 307, 84, 504, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 685, 0, 0, 0, 262, 690,
	0, 0, 0, 355, 259, 0, 0, 418, 0, 200,
	0, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 697, 359, 0, 0, 483,
	389, 0, 0, 0, 0, 0, 693, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 242, 316, 199,
	401, 484, 278, 0, 93, 0, 0, 835, 819, 785,
	786, 823, 836, 837, 838, 839, 824, 0, 232, 825,
	826, 239, 827, 0, 784, 725, 727, 726, 744, 745,
	746, 747, 748, 749, 750, 723, 832, 840, 841, 0,
	257, 312, 264, 256, 509, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	667, 682, 0, 696, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 680, 0, 0, 0, 0, 779,
	0, 681, 0, 0, 689, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	390, 249, 0, 440, 778, 0, 0, 551, 0, 0,
	776, 0, 0, 0, 0, 354, 0, 321, 195, 219,
	0, 0, 400, 448, 460, 0, 0, 0, 829, 0,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	0, 0, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 830, 831, 248, 575, 731,
	545, 214, 0, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 739, 740, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 0, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	0, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 0, 0, 413, 459, 234, 531, 482, 789, 777,
	702, 793, 704, 790, 791, 699, 700, 703, 792, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 780, 688,
	687, 0, 695, 0, 721, 722, 724, 728, 729, 730,
	741, 742, 743, 751, 753, 754, 752, 755, 756, 757,
	760, 761, 762, 763, 758, 759, 764, 705, 709, 706,
	707, 708, 720, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 803, 804, 805, 806, 807, 808, 734,
	738, 737, 735, 736, 732, 733, 686, 194, 215, 357,
	92, 441, 280, 573, 541, 536, 201, 217, 794, 254,
	795, 0, 0, 799, 0, 0, 0, 801, 800, 0,
	802, 768, 767, 0, 0, 796, 797, 0, 798, 0,
	0, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 397, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 809, 810, 811, 812, 813, 814, 815,
	816, 291, 525, 555, 523, 569, 549, 426, 367, 0,
	0, 370, 273, 296, 311, 0, 540, 488, 221, 453,
	282, 245, 834, 0, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 385, 0,
	365, 505, 506, 307, 504, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 685, 0, 0, 0, 262, 690, 0, 0, 0,
	355, 259, 0, 0, 418, 0, 200, 0, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 697, 359, 0, 0, 483, 389, 0, 0,
	0, 0, 0, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 242, 316, 199, 401, 484, 278,
	0, 93, 0, 0, 835, 819, 785, 786, 823, 836,
	837, 838, 839, 824, 0, 232, 825, 826, 239, 827,
	0, 784, 725, 727, 726, 744, 745, 746, 747, 748,
	749, 750, 723, 832, 840, 841, 0, 257, 312, 264,
	256, 509, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 667, 682, 0,
	696, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 0, 0, 0, 0, 779, 0, 681, 0,
	0, 689, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 390, 249, 0,
	440, 778, 0, 0, 551, 0, 0, 776, 0, 0,
	0, 0, 354, 0, 321, 195, 219, 0, 0, 400,
	448, 460, 0, 0, 0, 829, 0, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 3429, 0, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 830, 831, 248, 575, 731, 545, 214, 0,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 739, 740, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 0, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 0, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 0, 0,
	413, 459, 234, 531, 482, 789, 777, 702, 793, 704,
	790, 791, 699, 700, 703, 792, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 780, 688, 687, 0, 695,
	0, 721, 722, 724, 728, 729, 730, 741, 742, 743,
	751, 753, 754, 752, 755, 756, 757, 760, 761, 762,
	763, 758, 759, 764, 705, 709, 706, 707, 708, 720,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	803, 804, 805, 806, 807, 808, 734, 738, 737, 735,
	736, 732, 733, 686, 194, 215, 357, 0, 441, 280,
	573, 541, 536, 201, 217, 794, 254, 795, 0, 0,
	799, 0, 0, 0, 801, 800, 0, 802, 768, 767,
	0, 0, 796, 797, 0, 798, 0, 0, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	809, 810, 811, 812, 813, 814, 815, 816, 291, 525,
	555, 523, 569, 549, 426, 367, 0, 0, 370, 273,
	296, 311, 0, 540, 488, 221, 453, 282, 245, 834,
	0, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 385, 0, 365, 505, 506,
	307, 504, 0, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 685, 0,
	0, 0, 262, 690, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 697,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	693, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 93, 0,
	1527, 835, 819, 785, 786, 823, 836, 837, 838, 839,
	824, 0, 232, 825, 826, 239, 827, 0, 784, 725,
	727, 726, 744, 745, 746, 747, 748, 749, 750, 723,
	832, 840, 841, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 667, 682, 0, 696, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 680, 0,
	0, 0, 0, 779, 0, 681, 0, 0, 689, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 778, 0,
	0, 551, 0, 0, 776, 0, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 829, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 830,
	831, 248, 575, 731, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 739, 740,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 789, 777, 702, 793, 704, 790, 791, 699,
	700, 703, 792, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 780, 688, 687, 0, 695, 0, 721, 722,
	724, 728, 729, 730, 741, 742, 743, 751, 753, 754,
	752, 755, 756, 757, 760, 761, 762, 763, 758, 759,
	764, 705, 709, 706, 707, 708, 720, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 803, 804, 805,
	806, 807, 808, 734, 738, 737, 735, 736, 732, 733,
	686, 194, 215, 357, 0, 441, 280, 573, 541, 536,
	201, 217, 794, 254, 795, 0, 0, 799, 0, 0,
	0, 801, 800, 0, 802, 768, 767, 0, 0, 796,
	797, 0, 798, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 809, 810, 811,
	812, 813, 814, 815, 816, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 834, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 385, 0, 365, 505, 506, 307, 504, 0,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 685, 0, 0, 0, 262,
	690, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 697, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 693, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 93, 0, 0, 835, 819,
	785, 786, 823, 836, 837, 838, 839, 824, 0, 232,
	825, 826, 239, 827, 0, 784, 725, 727, 726, 744,
	745, 746, 747, 748, 749, 750, 723, 832, 840, 841,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 667, 682, 0, 696, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 924, 0, 0, 0,
	779, 0, 681, 0, 0, 689, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 778, 0, 0, 551, 0,
	0, 776, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 829,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 830, 831, 248, 575,
	731, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 739, 740, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 789,
	777, 702, 793, 704, 790, 791, 699, 700, 703, 792,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 780,
	688, 687, 0, 695, 0, 721, 722, 724, 728, 729,
	730, 741, 742, 743, 751, 753, 754, 752, 755, 756,
	757, 760, 761, 762, 763, 758, 759, 764, 705, 709,
	706, 707, 708, 720, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 803, 804, 805, 806, 807, 808,
	734, 738, 737, 735, 736, 732, 733, 686, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 794,
	254, 795, 0, 0, 799, 0, 0, 0, 801, 800,
	0, 802, 768, 767, 0, 0, 796, 797, 0, 798,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 809, 810, 811, 812, 813, 814,
	815, 816, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 834, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 385,
	0, 365, 505, 506, 307, 504, 0, 698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 685, 0, 0, 0, 262, 690, 0, 0,
	0, 355, 259, 0, 0, 418, 0, 200, 0, 473,
	246, 366, 363, 512, 274, 265, 261, 244, 308, 374,
	416, 494, 410, 697, 359, 0, 0, 483, 389, 0,
	0, 0, 0, 0, 693, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 242, 316, 199, 401, 484,
	278, 0, 93, 0, 0, 835, 819, 785, 786, 823,
	836, 837, 838, 839, 824, 0, 232, 825, 826, 239,
	827, 0, 784, 725, 727, 726, 744, 745, 746, 747,
	748, 749, 750, 723, 832, 840, 841, 0, 257, 312,
	264, 256, 509, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 667, 682,
	0, 696, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 680, 0, 0, 0, 0, 779, 0, 681,
	0, 0, 689, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 390, 249,
	0, 440, 778, 0, 0, 551, 0, 0, 776, 0,
	0, 0, 0, 354, 0, 321, 195, 219, 0, 0,
	400, 448, 460, 0, 0, 0, 829, 0, 458, 414,
	529, 227, 276, 445, 420, 456, 428, 279, 0, 0,
	457, 361, 514, 438, 526, 552, 553, 255, 394, 538,
	498, 546, 572, 220, 252, 408, 491, 532, 480, 386,
	510, 511, 320, 479, 287, 198, 358, 558, 218, 466,
	360, 236, 225, 516, 535, 281, 443, 567, 207, 493,
	524, 233, 470, 0, 0, 574, 241, 490, 209, 521,
	489, 382, 317, 318, 208, 0, 444, 260, 285, 0,
	0, 250, 403, 830, 831, 248, 575, 731, 545, 214,
	0, 544, 396, 513, 522, 383, 372, 213, 520, 381,
	371, 325, 739, 740, 272, 298, 435, 364, 436, 297,
	299, 392, 391, 393, 202, 533, 0, 203, 0, 485,
	534, 576, 228, 229, 231, 0, 271, 275, 283, 286,
	294, 295, 304, 356, 407, 434, 430, 439, 0, 508,
	527, 539, 550, 556, 557, 559, 560, 561, 562, 563,
	568, 566, 564, 565, 395, 302, 481, 324, 362, 0,
	0, 413, 459, 234, 531, 482, 789, 777, 702, 793,
	704, 790, 791, 699, 700, 703, 792, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 780, 688, 687, 0,
	695, 0, 721, 722, 724, 728, 729, 730, 741, 742,
	743, 751, 753, 754, 752, 755, 756, 757, 760, 761,
	762, 763, 758, 759, 764, 705, 709, 706, 707, 708,
	720, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 803, 804, 805, 806, 807, 808, 734, 738, 737,
	735, 736, 732, 733, 686, 194, 215, 357, 0, 441,
	280, 573, 541, 536, 201, 217, 794, 254, 795, 0,
	0, 799, 0, 0, 0, 801, 800, 0, 802, 768,
	767, 0, 0, 796, 797, 0, 798, 0, 0, 196,
	197, 204, 216, 226, 230, 237, 253, 268, 270, 277,
	290, 301, 309, 310, 313, 319, 369, 375, 376, 377,
	378, 397, 398, 399, 402, 405, 406, 409, 411, 412,
	415, 419, 423, 424, 425, 427, 429, 431, 442, 447,
	461, 462, 463, 464, 465, 468, 469, 474, 475, 476,
	477, 478, 486, 487, 492, 515, 517, 530, 548, 554,
	467, 809, 810, 811, 812, 813, 814, 815, 816, 291,
	525, 555, 523, 569, 549, 426, 367, 0, 0, 370,
	273, 296, 311, 0, 540, 488, 221, 453, 282, 245,
	834, 0, 206, 240, 224, 251, 266, 269, 315, 380,
	388, 417, 422, 288, 263, 238, 446, 235, 471, 495,
	496, 497, 499, 384, 258, 421, 385, 0, 365, 505,
	506, 307, 504, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 685,
	0, 0, 0, 262, 690, 0, 0, 0, 355, 259,
	0, 0, 418, 0, 200, 0, 473, 246, 366, 363,
	512, 274, 265, 261, 244, 308, 374, 416, 494, 410,
	697, 359, 0, 0, 483, 389, 0, 0, 0, 0,
	0, 693, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 242, 316, 199, 401, 484, 278, 0, 93,
	0, 0, 835, 819, 785, 786, 823, 836, 837, 838,
	839, 824, 0, 232, 825, 826, 239, 827, 0, 784,
	725, 727, 726, 744, 745, 746, 747, 748, 749, 750,
	723, 832, 840, 841, 0, 257, 312, 264, 256, 509,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 682, 0, 696, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	0, 0, 0, 0, 779, 0, 681, 0, 0, 689,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 390, 249, 0, 440, 778,
	0, 0, 551, 0, 0, 776, 0, 0, 0, 0,
	354, 0, 321, 195, 219, 0, 0, 400, 448, 460,
	0, 0, 0, 829, 0, 458, 414, 529, 227, 276,
	445, 420, 456, 428, 279, 0, 0, 457, 361, 514,
	438, 526, 552, 553, 255, 394, 538, 498, 546, 572,
	220, 252, 408, 491, 532, 480, 386, 510, 511, 320,
	479, 287, 198, 358, 558, 218, 466, 360, 236, 225,
	516, 535, 281, 443, 567, 207, 493, 524, 233, 470,
	0, 0, 574, 241, 490, 209, 521, 489, 382, 317,
	318, 208, 0, 444, 260, 285, 0, 0, 250, 403,
	830, 831, 248, 575, 731, 545, 214, 0, 544, 396,
	513, 522, 383, 372, 213, 520, 381, 371, 325, 739,
	740, 272, 298, 435, 364, 436, 297, 299, 392, 391,
	393, 202, 533, 0, 203, 0, 485, 534, 576, 228,
	229, 231, 0, 271, 275, 283, 286, 294, 295, 304,
	356, 407, 434, 430, 439, 0, 508, 527, 539, 550,
	556, 557, 559, 560, 561, 562, 563, 568, 566, 564,
	565, 395, 302, 481, 324, 362, 0, 0, 413, 459,
	234, 531, 482, 789, 777, 702, 793, 704, 790, 791,
	699, 700, 703, 792, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 780, 688, 687, 0, 695, 0, 721,
	722, 724, 728, 729, 730, 741, 742, 743, 751, 753,
	754, 752, 755, 756, 757, 760, 761, 762, 763, 758,
	759, 764, 705, 709, 706, 707, 708, 720, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 803, 804,
	805, 806, 807, 808, 734, 738, 737, 735, 736, 732,
	733, 686, 194, 215, 357, 0, 441, 280, 573, 541,
	536, 201, 217, 794, 254, 795, 0, 0, 799, 0,
	0, 0, 801, 800, 0, 802, 768, 767, 0, 0,
	796, 797, 0, 798, 0, 0, 196, 197, 204, 216,
	226, 230, 237, 253, 268, 270, 277, 290, 301, 309,
	310, 313, 319, 369, 375, 376, 377, 378, 397, 398,
	399, 402, 405, 406, 409, 411, 412, 415, 419, 423,
	424, 425, 427, 429, 431, 442, 447, 461, 462, 463,
	464, 465, 468, 469, 474, 475, 476, 477, 478, 486,
	487, 492, 515, 517, 530, 548, 554, 467, 809, 810,
	811, 812, 813, 814, 815, 816, 291, 525, 555, 523,
	569, 549, 426, 367, 0, 0, 370, 273, 296, 311,
	0, 540, 488, 221, 453, 282, 245, 834, 0, 206,
	240, 224, 251, 266, 269, 315, 380, 388, 417, 422,
	288, 263, 238, 446, 235, 471, 495, 496, 497, 499,
	384, 258, 421, 385, 0, 365, 505, 506, 307, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 355, 259, 0, 0, 418,
	0, 200, 0, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 0, 359, 0,
	0, 483, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 242,
	316, 199, 401, 484, 278, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 239, 0, 0, 0, 340, 349, 348,
	329, 330, 332, 334, 339, 346, 352, 0, 0, 0,
	0, 0, 257, 312, 264, 256, 509, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352,
	1351, 1353, 1354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 390, 249, 0, 440, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 321,
	195, 219, 0, 0, 400, 448, 460, 0, 0, 0,
	247, 0, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 0, 0, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 518, 519, 248,
	575, 222, 545, 214, 0, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 344, 345, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 0,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 0, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 0, 0, 413, 459, 234, 531, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 373,
	472, 528, 326, 338, 341, 331, 350, 0, 351, 327,
	328, 333, 335, 336, 337, 342, 343, 347, 353, 243,
	205, 379, 387, 507, 303, 210, 211, 212, 500, 501,
	502, 503, 542, 543, 547, 449, 450, 451, 452, 284,
	537, 300, 455, 454, 322, 323, 368, 437, 0, 194,
	215, 357, 0, 441, 280, 573, 541, 536, 201, 217,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 292, 293, 432, 433, 305,
	306, 570, 571, 291, 525, 555, 523, 569, 549, 426,
	367, 0, 0, 370, 273, 296, 311, 0, 540, 488,
	221, 453, 282, 245, 0, 0, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	385, 0, 365, 505, 506, 307, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 355, 259, 0, 0, 418, 0, 200, 0,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 0, 359, 0, 0, 483, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 242, 316, 199, 401,
	484, 278, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 0, 0, 0, 0, 0, 257,
	312, 264, 256, 509, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 390,
	249, 0, 440, 0, 0, 994, 551, 0, 0, 0,
	0, 0, 991, 992, 354, 952, 321, 195, 219, 985,
	989, 400, 448, 460, 0, 0, 0, 247, 0, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 0,
	0, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 0, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 0, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 0,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	0, 0, 413, 459, 234, 531, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 0, 194, 215, 357, 0,
	441, 280, 573, 541, 536, 201, 217, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	291, 525, 555, 523, 569, 549, 426, 367, 0, 0,
	370, 273, 296, 311, 0, 540, 488, 221, 453, 282,
	245, 0, 0, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 385, 0, 365,
	505, 506, 307, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 355,
	259, 0, 0, 418, 0, 200, 0, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 0, 359, 0, 0, 483, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 242, 316, 199, 401, 484, 278, 0,
	0, 0, 0, 1490, 819, 0, 0, 1487, 0, 0,
	0, 0, 1485, 0, 232, 1486, 1484, 239, 1489, 0,
	784, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 0, 0, 0, 0, 0, 257, 312, 264, 256,
	509, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 390, 249, 0, 440,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 321, 195, 219, 0, 0, 400, 448,
	460, 0, 0, 0, 247, 0, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 0, 0, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 0, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 0, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 0, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 0, 0, 413,
	459, 234, 531, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 0, 194, 215, 357, 0, 441, 280, 573,
	541, 536, 201, 217, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 0, 0, 370, 273, 296,
	311, 0, 540, 488, 221, 453, 282, 245, 0, 0,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 0, 385, 365, 505, 506, 307,
	84, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 0,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 93, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 0,
	0, 0, 0, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 247, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	0, 194, 215, 357, 92, 441, 280, 573, 541, 536,
	201, 217, 0, 254, 0, 0, 0, 0, 0, 0,
	2101, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 0, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 1546, 0, 365, 505, 506, 307, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 1548, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 0, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 0, 0, 1550, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 0, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 0, 0, 0, 0,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 1324, 0, 1325,
	1326, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 247,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 0, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 0, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 0,
	385, 365, 505, 506, 307, 84, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 355, 259, 0, 0, 418, 0, 200, 0,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 0, 359, 0, 0, 483, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 242, 316, 199, 401,
	484, 278, 0, 93, 0, 1527, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 0, 0, 0, 0, 0, 257,
	312, 264, 256, 509, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 390,
	249, 0, 440, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 321, 195, 219, 0,
	0, 400, 448, 460, 0, 0, 0, 247, 0, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 0,
	0, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 0, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 0, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 0,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	0, 0, 413, 459, 234, 531, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 0, 194, 215, 357, 92,
	441, 280, 573, 541, 536, 201, 217, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	291, 525, 555, 523, 569, 549, 426, 367, 0, 0,
	370, 273, 296, 311, 0, 540, 488, 221, 453, 282,
	245, 0, 0, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 385, 0, 365,
	505, 506, 307, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 355,
	259, 0, 0, 418, 0, 200, 0, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 0, 359, 0, 0, 483, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 242, 316, 199, 401, 484, 278, 0,
	93, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 239, 0, 0,
	0, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 0, 0, 0, 0, 0, 257, 312, 264, 256,
	509, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 390, 249, 0, 440,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 321, 195, 219, 0, 0, 400, 448,
	460, 0, 0, 0, 247, 0, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 0, 0, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 0, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 0, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 0, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 0, 0, 413,
	459, 234, 531, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 0, 194, 215, 357, 0, 441, 280, 573,
	541, 536, 201, 217, 0, 254, 0, 0, 0, 0,
	0, 0, 2101, 0, 0, 2100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 0, 0, 370, 273, 296,
	311, 0, 540, 488, 221, 453, 282, 245, 0, 0,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 385, 0, 365, 505, 506, 307,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 2051, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 355, 259, 0, 0,
	418, 0, 200, 0, 473, 246, 366, 363, 512, 274,
	265, 261, 244, 308, 374, 416, 494, 410, 0, 359,
	0, 0, 483, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	242, 316, 199, 401, 484, 278, 0, 0, 0, 0,
	1729, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 239, 0, 0, 0, 340, 349,
	348, 329, 330, 332, 334, 339, 346, 352, 0, 0,
	0, 0, 0, 257, 312, 264, 256, 509, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 390, 249, 0, 440, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 354, 0,
	321, 195, 219, 0, 0, 400, 448, 460, 0, 0,
	0, 247, 0, 458, 414, 529, 227, 276, 445, 420,
	456, 428, 279, 0, 2049, 457, 361, 514, 438, 526,
	552, 553, 255, 394, 538, 498, 546, 572, 220, 252,
	408, 491, 532, 480, 386, 510, 511, 320, 479, 287,
	198, 358, 558, 218, 466, 360, 236, 225, 516, 535,
	281, 443, 567, 207, 493, 524, 233, 470, 0, 0,
	574, 241, 490, 209, 521, 489, 382, 317, 318, 208,
	0, 444, 260, 285, 0, 0, 250, 403, 518, 519,
	248, 575, 222, 545, 214, 0, 544, 396, 513, 522,
	383, 372, 213, 520, 381, 371, 325, 344, 345, 272,
	298, 435, 364, 436, 297, 299, 392, 391, 393, 202,
	533, 0, 203, 0, 485, 534, 576, 228, 229, 231,
	0, 271, 275, 283, 286, 294, 295, 304, 356, 407,
	434, 430, 439, 0, 508, 527, 539, 550, 556, 557,
	559, 560, 561, 562, 563, 568, 566, 564, 565, 395,
	302, 481, 324, 362, 0, 0, 413, 459, 234, 531,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	373, 472, 528, 326, 338, 341, 331, 350, 0, 351,
	327, 328, 333, 335, 336, 337, 342, 343, 347, 353,
	243, 205, 379, 387, 507, 303, 210, 211, 212, 500,
	501, 502, 503, 542, 543, 547, 449, 450, 451, 452,
	284, 537, 300, 455, 454, 322, 323, 368, 437, 0,
	194, 215, 357, 0, 441, 280, 573, 541, 536, 201,
	217, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 216, 226, 230,
	237, 253, 268, 270, 277, 290, 301, 309, 310, 313,
	319, 369, 375, 376, 377, 378, 397, 398, 399, 402,
	405, 406, 409, 411, 412, 415, 419, 423, 424, 425,
	427, 429, 431, 442, 447, 461, 462, 463, 464, 465,
	468, 469, 474, 475, 476, 477, 478, 486, 487, 492,
	515, 517, 530, 548, 554, 467, 292, 293, 432, 433,
	305, 306, 570, 571, 291, 525, 555, 523, 569, 549,
	426, 367, 0, 0, 370, 273, 296, 311, 0, 540,
	488, 221, 453, 282, 245, 0, 0, 206, 240, 224,
	251, 266, 269, 315, 380, 388, 417, 422, 288, 263,
	238, 446, 235, 471, 495, 496, 497, 499, 384, 258,
	421, 385, 0, 365, 505, 506, 307, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 355, 259, 0, 0, 418, 0, 200,
	0, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 0, 359, 0, 0, 483,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 242, 316, 199,
	401, 484, 278, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 239, 0, 0, 0, 340, 349, 348, 329, 330,
	332, 334, 339, 346, 352, 0, 0, 0, 0, 0,
	257, 312, 264, 256, 509, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	390, 249, 0, 440, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 354, 952, 321, 195, 219,
	950, 0, 400, 448, 460, 0, 0, 0, 247, 0,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	0, 0, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 518, 519, 248, 575, 222,
	545, 214, 0, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 344, 345, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 0, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	0, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 0, 0, 413, 459, 234, 531, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 373, 472, 528,
	326, 338, 341, 331, 350, 0, 351, 327, 328, 333,
	335, 336, 337, 342, 343, 347, 353, 243, 205, 379,
	387, 507, 303, 210, 211, 212, 500, 501, 502, 503,
	542, 543, 547, 449, 450, 451, 452, 284, 537, 300,
	455, 454, 322, 323, 368, 437, 0, 194, 215, 357,
	0, 441, 280, 573, 541, 536, 201, 217, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 397, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 292, 293, 432, 433, 305, 306, 570,
	571, 291, 525, 555, 523, 569, 549, 426, 367, 0,
	0, 370, 273, 296, 311, 0, 540, 488, 221, 453,
	282, 245, 0, 0, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 385, 0,
	365, 505, 506, 307, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	2051, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	355, 259, 0, 0, 418, 0, 200, 0, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 0, 359, 0, 0, 483, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 242, 316, 199, 401, 484, 278,
	0, 0, 0, 0, 1729, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 239, 0,
	0, 0, 340, 349, 348, 329, 330, 332, 334, 339,
	346, 352, 0, 0, 0, 0, 0, 257, 312, 264,
	256, 509, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 390, 249, 0,
	440, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 321, 195, 219, 0, 0, 400,
	448, 460, 0, 0, 0, 247, 0, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 0, 0, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 518, 519, 248, 575, 222, 545, 214, 0,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 344, 345, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 0, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 0, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 0, 0,
	413, 459, 234, 531, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 373, 472, 528, 326, 338, 341,
	331, 350, 0, 351, 327, 328, 333, 335, 336, 337,
	342, 343, 347, 353, 243, 205, 379, 387, 507, 303,
	210, 211, 212, 500, 501, 502, 503, 542, 543, 547,
	449, 450, 451, 452, 284, 537, 300, 455, 454, 322,
	323, 368, 437, 0, 194, 215, 357, 0, 441, 280,
	573, 541, 536, 201, 217, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	292, 293, 432, 433, 305, 306, 570, 571, 291, 525,
	555, 523, 569, 549, 426, 367, 0, 0, 370, 273,
	296, 311, 0, 540, 488, 221, 453, 282, 245, 0,
	0, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 385, 0, 365, 505, 506,
	307, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 0,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 0, 0,
	1527, 0, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 0,
	0, 0, 0, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 0, 0,
	0, 551, 0, 0, 0, 3339, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 247, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	0, 194, 215, 357, 0, 441, 280, 573, 541, 536,
	201, 217, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 0, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 385, 0, 365, 505, 506, 307, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 0, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 0, 0, 1884, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 0, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 0, 0, 0, 0,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 247,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 0, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 0, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 385,
	0, 365, 505, 506, 307, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 355, 259, 0, 0, 418, 0, 200, 0, 473,
	246, 366, 363, 512, 274, 265, 261, 244, 308, 374,
	416, 494, 410, 0, 359, 0, 0, 483, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 242, 316, 199, 401, 484,
	278, 0, 0, 0, 0, 2458, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 239,
	0, 0, 0, 340, 349, 348, 329, 330, 332, 334,
	339, 346, 352, 0, 0, 0, 0, 0, 257, 312,
	264, 256, 509, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 390, 249,
	0, 440, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 321, 195, 219, 0, 0,
	400, 448, 460, 0, 0, 0, 247, 0, 458, 414,
	529, 227, 276, 445, 420, 456, 428, 279, 0, 0,
	457, 361, 514, 438, 526, 552, 553, 255, 394, 538,
	498, 546, 572, 220, 252, 408, 491, 532, 480, 386,
	510, 511, 320, 479, 287, 198, 358, 558, 218, 466,
	360, 236, 225, 516, 535, 281, 443, 567, 207, 493,
	524, 233, 470, 0, 0, 574, 241, 490, 209, 521,
	489, 382, 317, 318, 208, 0, 444, 260, 285, 0,
	0, 250, 403, 518, 519, 248, 575, 222, 545, 214,
	0, 544, 396, 513, 522, 383, 372, 213, 520, 381,
	371, 325, 344, 345, 272, 298, 435, 364, 436, 297,
	299, 392, 391, 393, 202, 533, 0, 203, 0, 485,
	534, 576, 228, 229, 231, 0, 271, 275, 283, 286,
	294, 295, 304, 356, 407, 434, 430, 439, 0, 508,
	527, 539, 550, 556, 557, 559, 560, 561, 562, 563,
	568, 566, 564, 565, 395, 302, 481, 324, 362, 0,
	0, 413, 459, 234, 531, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 373, 472, 528, 326, 338,
	341, 331, 350, 0, 351, 327, 328, 333, 335, 336,
	337, 342, 343, 347, 353, 243, 205, 379, 387, 507,
	303, 210, 211, 212, 500, 501, 502, 503, 542, 543,
	547, 449, 450, 451, 452, 284, 537, 300, 455, 454,
	322, 323, 368, 437, 0, 194, 215, 357, 0, 441,
	280, 573, 541, 536, 201, 217, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 216, 226, 230, 237, 253, 268, 270, 277,
	290, 301, 309, 310, 313, 319, 369, 375, 376, 377,
	378, 397, 398, 399, 402, 405, 406, 409, 411, 412,
	415, 419, 423, 424, 425, 427, 429, 431, 442, 447,
	461, 462, 463, 464, 465, 468, 469, 474, 475, 476,
	477, 478, 486, 487, 492, 515, 517, 530, 548, 554,
	467, 292, 293, 432, 433, 305, 306, 570, 571, 291,
	525, 555, 523, 569, 549, 426, 367, 0, 0, 370,
	273, 296, 311, 0, 540, 488, 221, 453, 282, 245,
	0, 0, 206, 240, 224, 251, 266, 269, 315, 380,
	388, 417, 422, 288, 263, 238, 446, 235, 471, 495,
	496, 497, 499, 384, 258, 421, 385, 0, 365, 505,
	506, 307, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 355, 259,
	0, 0, 418, 0, 200, 0, 473, 246, 366, 363,
	512, 274, 265, 261, 244, 308, 374, 416, 494, 410,
	0, 359, 0, 0, 483, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 242, 316, 199, 401, 484, 278, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 2443, 0,
	0, 0, 0, 232, 0, 0, 239, 2444, 0, 0,
	340, 349, 348, 329, 330, 332, 334, 339, 346, 352,
	0, 0, 0, 0, 0, 257, 312, 264, 256, 509,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 390, 249, 0, 440, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	354, 0, 321, 195, 219, 0, 0, 400, 448, 460,
	0, 0, 0, 247, 0, 458, 414, 529, 227, 276,
	445, 420, 456, 428, 279, 0, 0, 457, 361, 514,
	438, 526, 552, 553, 255, 394, 538, 498, 546, 572,
	220, 252, 408, 491, 532, 480, 386, 510, 511, 320,
	479, 287, 198, 358, 558, 218, 466, 360, 236, 225,
	516, 535, 281, 443, 567, 207, 493, 524, 233, 470,
	0, 0, 574, 241, 490, 209, 521, 489, 382, 317,
	318, 208, 0, 444, 260, 285, 0, 0, 250, 403,
	518, 519, 248, 575, 222, 545, 214, 0, 544, 396,
	513, 522, 383, 372, 213, 520, 381, 371, 325, 344,
	345, 272, 298, 435, 364, 436, 297, 299, 392, 391,
	393, 202, 533, 0, 203, 0, 485, 534, 576, 228,
	229, 231, 0, 271, 275, 283, 286, 294, 295, 304,
	356, 407, 434, 430, 439, 0, 508, 527, 539, 550,
	556, 557, 559, 560, 561, 562, 563, 568, 566, 564,
	565, 395, 302, 481, 324, 362, 0, 0, 413, 459,
	234, 531, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 373, 472, 528, 326, 338, 341, 331, 350,
	0, 351, 327, 328, 333, 335, 336, 337, 342, 343,
	347, 353, 243, 205, 379, 387, 507, 303, 210, 211,
	212, 500, 501, 502, 503, 542, 543, 547, 449, 450,
	451, 452, 284, 537, 300, 455, 454, 322, 323, 368,
	437, 0, 194, 215, 357, 0, 441, 280, 573, 541,
	536, 201, 217, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 216,
	226, 230, 237, 253, 268, 270, 277, 290, 301, 309,
	310, 313, 319, 369, 375, 376, 377, 378, 397, 398,
	399, 402, 405, 406, 409, 411, 412, 415, 419, 423,
	424, 425, 427, 429, 431, 442, 447, 461, 462, 463,
	464, 465, 468, 469, 474, 475, 476, 477, 478, 486,
	487, 492, 515, 517, 530, 548, 554, 467, 292, 293,
	432, 433, 305, 306, 570, 571, 291, 525, 555, 523,
	569, 549, 426, 367, 0, 0, 370, 273, 296, 311,
	0, 540, 488, 221, 453, 282, 245, 0, 0, 206,
	240, 224, 251, 266, 269, 315, 380, 388, 417, 422,
	288, 263, 238, 446, 235, 471, 495, 496, 497, 499,
	384, 258, 421, 385, 0, 365, 505, 506, 307, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 1569, 0, 0, 0, 355, 259, 0, 0, 418,
	0, 200, 0, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 0, 359, 0,
	0, 483, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 242,
	316, 199, 401, 484, 278, 0, 0, 0, 0, 1568,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 239, 0, 0, 0, 340, 349, 348,
	329, 330, 332, 334, 339, 346, 352, 0, 0, 0,
	0, 0, 257, 312, 264, 256, 509, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 390, 249, 0, 440, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 321,
	195, 219, 0, 0, 400, 448, 460, 0, 0, 0,
	247, 0, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 0, 0, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 518, 519, 248,
	575, 222, 545, 214, 0, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 344, 345, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 0,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 0, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 0, 0, 413, 459, 234, 531, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 373,
	472, 528, 326, 338, 341, 331, 350, 0, 351, 327,
	328, 333, 335, 336, 337, 342, 343, 347, 353, 243,
	205, 379, 387, 507, 303, 210, 211, 212, 500, 501,
	502, 503, 542, 543, 547, 449, 450, 451, 452, 284,
	537, 300, 455, 454, 322, 323, 368, 437, 0, 194,
	215, 357, 0, 441, 280, 573, 541, 536, 201, 217,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 292, 293, 432, 433, 305,
	306, 570, 571, 291, 525, 555, 523, 569, 549, 426,
	367, 0, 0, 370, 273, 296, 311, 0, 540, 488,
	221, 453, 282, 245, 0, 0, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	385, 0, 365, 505, 506, 307, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 355, 259, 0, 0, 418, 0, 200, 0,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 0, 359, 0, 0, 483, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 242, 316, 199, 401,
	484, 278, 0, 0, 0, 0, 0, 647, 648, 649,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 0, 0, 0, 0, 0, 257,
	312, 264, 256, 509, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 390,
	249, 0, 440, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 321, 195, 219, 0,
	0, 400, 448, 460, 0, 0, 0, 247, 0, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 0,
	0, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 0, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 0, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 0,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	0, 0, 413, 459, 234, 531, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 0, 194, 215, 357, 0,
	441, 280, 573, 541, 536, 201, 217, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	291, 525, 555, 523, 569, 549, 426, 367, 0, 0,
	370, 273, 296, 311, 0, 540, 488, 221, 453, 282,
	245, 0, 0, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 385, 0, 365,
	505, 506, 307, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 355,
	259, 0, 0, 418, 0, 200, 0, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 0, 359, 0, 0, 483, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 242, 316, 199, 401, 484, 278, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 239, 0, 0,
	0, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 0, 0, 0, 0, 0, 257, 312, 264, 256,
	509, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 390, 249, 0, 440,
	0, 0, 0, 551, 0, 0, 0, 3463, 0, 0,
	0, 354, 0, 321, 195, 219, 0, 0, 400, 448,
	460, 0, 0, 0, 247, 0, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 0, 0, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 0, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 0, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 0, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 0, 0, 413,
	459, 234, 531, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 0, 194, 215, 357, 0, 441, 280, 573,
	541, 536, 201, 217, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 0, 0, 370, 273, 296,
	311, 0, 540, 488, 221, 453, 282, 245, 0, 0,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 385, 0, 365, 505, 506, 307,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 355, 259, 0, 0,
	418, 0, 200, 0, 473, 246, 366, 363, 512, 274,
	265, 261, 244, 308, 374, 416, 494, 410, 0, 359,
	0, 0, 483, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	242, 316, 199, 401, 484, 278, 0, 0, 0, 0,
	1729, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 239, 0, 0, 0, 340, 349,
	348, 329, 330, 332, 334, 339, 346, 352, 0, 0,
	0, 0, 0, 257, 312, 264, 256, 509, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 390, 249, 0, 440, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 354, 0,
	321, 195, 219, 0, 0, 400, 448, 460, 0, 0,
	0, 247, 0, 458, 414, 529, 227, 276, 445, 420,
	456, 428, 279, 0, 0, 457, 361, 514, 438, 526,
	552, 553, 255, 394, 538, 498, 546, 572, 220, 252,
	408, 491, 532, 480, 386, 510, 511, 320, 479, 287,
	198, 358, 558, 218, 466, 360, 236, 225, 516, 535,
	281, 443, 567, 207, 493, 524, 233, 470, 0, 0,
	574, 241, 490, 209, 521, 489, 382, 317, 318, 208,
	0, 444, 260, 285, 0, 0, 250, 403, 518, 519,
	248, 575, 222, 545, 214, 0, 544, 396, 513, 522,
	383, 372, 213, 520, 381, 371, 325, 344, 345, 272,
	298, 435, 364, 436, 297, 299, 392, 391, 393, 202,
	533, 0, 203, 0, 485, 534, 576, 228, 229, 231,
	0, 271, 275, 283, 286, 294, 295, 304, 356, 407,
	434, 430, 439, 0, 508, 527, 539, 550, 556, 557,
	559, 560, 561, 562, 563, 568, 566, 564, 565, 395,
	302, 481, 324, 362, 0, 0, 413, 459, 234, 531,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	373, 472, 528, 326, 338, 341, 331, 350, 0, 351,
	327, 328, 333, 335, 336, 337, 342, 343, 347, 353,
	243, 205, 379, 387, 507, 303, 210, 211, 212, 500,
	501, 502, 503, 542, 543, 547, 449, 450, 451, 452,
	284, 537, 300, 455, 454, 322, 323, 368, 437, 0,
	194, 215, 357, 0, 441, 280, 573, 541, 536, 201,
	217, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 216, 226, 230,
	237, 253, 268, 270, 277, 290, 301, 309, 310, 313,
	319, 369, 375, 376, 377, 378, 397, 398, 399, 402,
	405, 406, 409, 411, 412, 415, 419, 423, 424, 425,
	427, 429, 431, 442, 447, 461, 462, 463, 464, 465,
	468, 469, 474, 475, 476, 477, 478, 486, 487, 492,
	515, 517, 530, 548, 554, 467, 292, 293, 432, 433,
	305, 306, 570, 571, 291, 525, 555, 523, 569, 549,
	426, 367, 0, 0, 370, 273, 296, 311, 0, 540,
	488, 221, 453, 282, 245, 0, 0, 206, 240, 224,
	251, 266, 269, 315, 380, 388, 417, 422, 288, 263,
	238, 446, 235, 471, 495, 496, 497, 499, 384, 258,
	421, 385, 0, 365, 505, 506, 307, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 355, 259, 0, 0, 418, 0, 200,
	0, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 0, 359, 0, 0, 483,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 242, 316, 199,
	401, 484, 278, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 239, 0, 0, 0, 340, 349, 348, 329, 330,
	332, 334, 339, 346, 352, 0, 0, 0, 0, 0,
	257, 312, 264, 256, 509, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	390, 249, 0, 440, 0, 0, 0, 551, 0, 0,
	0, 3339, 0, 0, 0, 354, 0, 321, 195, 219,
	0, 0, 400, 448, 460, 0, 0, 0, 247, 0,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	0, 0, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 518, 519, 248, 575, 222,
	545, 214, 0, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 344, 345, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 0, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	0, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 0, 0, 413, 459, 234, 531, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 373, 472, 528,
	326, 338, 341, 331, 350, 0, 351, 327, 328, 333,
	335, 336, 337, 342, 343, 347, 353, 243, 205, 379,
	387, 507, 303, 210, 211, 212, 500, 501, 502, 503,
	542, 543, 547, 449, 450, 451, 452, 284, 537, 300,
	455, 454, 322, 323, 368, 437, 0, 194, 215, 357,
	0, 441, 280, 573, 541, 536, 201, 217, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 397, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 292, 293, 432, 433, 305, 306, 570,
	571, 291, 525, 555, 523, 569, 549, 426, 367, 0,
	0, 370, 273, 296, 311, 0, 540, 488, 221, 453,
	282, 245, 0, 0, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 385, 0,
	365, 505, 506, 307, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	355, 259, 0, 0, 418, 0, 200, 0, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 0, 359, 0, 0, 483, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 242, 316, 199, 401, 484, 278,
	0, 93, 0, 0, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 239, 0,
	0, 0, 340, 349, 348, 329, 330, 332, 334, 339,
	346, 352, 0, 0, 0, 0, 0, 257, 312, 264,
	256, 509, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 390, 249, 0,
	440, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 321, 195, 219, 0, 0, 400,
	448, 460, 0, 0, 0, 247, 0, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 0, 0, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 518, 519, 248, 575, 222, 545, 214, 0,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 344, 345, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 0, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 0, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 0, 0,
	413, 459, 234, 531, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 373, 472, 528, 326, 338, 341,
	331, 350, 0, 351, 327, 328, 333, 335, 336, 337,
	342, 343, 347, 353, 243, 205, 379, 387, 507, 303,
	210, 211, 212, 500, 501, 502, 503, 542, 543, 547,
	449, 450, 451, 452, 284, 537, 300, 455, 454, 322,
	323, 368, 437, 0, 194, 215, 357, 0, 441, 280,
	573, 541, 536, 201, 217, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	292, 293, 432, 433, 305, 306, 570, 571, 291, 525,
	555, 523, 569, 549, 426, 367, 0, 0, 370, 273,
	296, 311, 0, 540, 488, 221, 453, 282, 245, 0,
	0, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 385, 0, 365, 505, 506,
	307, 504, 0, 0, 0, 0, 2102, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 0,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 0,
	0, 0, 0, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 247, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	0, 194, 215, 357, 0, 441, 280, 573, 541, 536,
	201, 217, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 0, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 385, 0, 365, 505, 506, 307, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 0, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 0, 0, 1550, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 0, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 0, 0, 0, 0,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 247,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 0, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 0, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 385,
	0, 365, 505, 506, 307, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 355, 259, 0, 0, 418, 0, 200, 0, 473,
	246, 366, 363, 512, 274, 265, 261, 244, 308, 374,
	416, 494, 410, 0, 359, 0, 0, 483, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 242, 316, 199, 401, 484,
	278, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 239,
	0, 0, 0, 340, 349, 348, 329, 330, 332, 334,
	339, 346, 352, 0, 0, 0, 0, 0, 257, 312,
	264, 256, 509, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 390, 249,
	0, 440, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 321, 195, 219, 0, 0,
	400, 448, 460, 0, 0, 0, 247, 0, 458, 414,
	529, 227, 276, 445, 420, 456, 428, 279, 0, 0,
	457, 361, 514, 438, 526, 552, 553, 255, 394, 538,
	498, 546, 572, 220, 252, 408, 491, 532, 480, 386,
	510, 511, 320, 479, 287, 198, 358, 558, 218, 466,
	360, 236, 225, 516, 535, 281, 443, 567, 207, 493,
	524, 233, 470, 0, 0, 574, 241, 490, 209, 521,
	489, 382, 317, 318, 208, 0, 444, 260, 285, 0,
	0, 250, 403, 518, 519, 248, 575, 222, 545, 214,
	0, 544, 396, 513, 522, 383, 372, 213, 520, 381,
	371, 325, 344, 345, 272, 298, 435, 364, 436, 297,
	299, 392, 391, 393, 202, 533, 0, 203, 0, 485,
	534, 576, 228, 229, 231, 0, 271, 275, 283, 286,
	294, 295, 304, 356, 407, 434, 430, 439, 0, 508,
	527, 539, 550, 556, 557, 559, 560, 561, 562, 563,
	568, 566, 564, 565, 395, 302, 481, 324, 362, 0,
	0, 413, 459, 234, 531, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 373, 472, 528, 326, 338,
	341, 331, 350, 0, 351, 327, 328, 333, 335, 336,
	337, 342, 343, 347, 353, 243, 205, 379, 387, 507,
	303, 210, 211, 212, 500, 501, 502, 503, 542, 543,
	547, 449, 450, 451, 452, 284, 537, 300, 455, 454,
	322, 323, 368, 437, 0, 194, 215, 357, 1839, 441,
	280, 573, 541, 536, 201, 217, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 216, 226, 230, 237, 253, 268, 270, 277,
	290, 301, 309, 310, 313, 319, 369, 375, 376, 377,
	378, 397, 398, 399, 402, 405, 406, 409, 411, 412,
	415, 419, 423, 424, 425, 427, 429, 431, 442, 447,
	461, 462, 463, 464, 465, 468, 469, 474, 475, 476,
	477, 478, 486, 487, 492, 515, 517, 530, 548, 554,
	467, 292, 293, 432, 433, 305, 306, 570, 571, 291,
	525, 555, 523, 569, 549, 426, 367, 0, 0, 370,
	273, 296, 311, 0, 540, 488, 221, 453, 282, 245,
	0, 0, 206, 240, 224, 251, 266, 269, 315, 380,
	388, 417, 422, 288, 263, 238, 446, 235, 471, 495,
	496, 497, 499, 384, 258, 421, 385, 0, 365, 505,
	506, 307, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 355, 259,
	0, 0, 418, 0, 200, 0, 473, 246, 366, 363,
	512, 274, 265, 261, 244, 308, 374, 416, 494, 410,
	0, 359, 0, 0, 483, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 242, 316, 199, 401, 484, 278, 0, 0,
	0, 0, 1830, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 239, 0, 0, 0,
	340, 349, 348, 329, 330, 332, 334, 339, 346, 352,
	0, 0, 0, 0, 0, 257, 312, 264, 256, 509,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 390, 249, 0, 440, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	354, 0, 321, 195, 219, 0, 0, 400, 448, 460,
	0, 0, 0, 247, 0, 458, 414, 529, 227, 276,
	445, 420, 456, 428, 279, 0, 0, 457, 361, 514,
	438, 526, 552, 553, 255, 394, 538, 498, 546, 572,
	220, 252, 408, 491, 532, 480, 386, 510, 511, 320,
	479, 287, 198, 358, 558, 218, 466, 360, 236, 225,
	516, 535, 281, 443, 567, 207, 493, 524, 233, 470,
	0, 0, 574, 241, 490, 209, 521, 489, 382, 317,
	318, 208, 0, 444, 260, 285, 0, 0, 250, 403,
	518, 519, 248, 575, 222, 545, 214, 0, 544, 396,
	513, 522, 383, 372, 213, 520, 381, 371, 325, 344,
	345, 272, 298, 435, 364, 436, 297, 299, 392, 391,
	393, 202, 533, 0, 203, 0, 485, 534, 576, 228,
	229, 231, 0, 271, 275, 283, 286, 294, 295, 304,
	356, 407, 434, 430, 439, 0, 508, 527, 539, 550,
	556, 557, 559, 560, 561, 562, 563, 568, 566, 564,
	565, 395, 302, 481, 324, 362, 0, 0, 413, 459,
	234, 531, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 373, 472, 528, 326, 338, 341, 331, 350,
	0, 351, 327, 328, 333, 335, 336, 337, 342, 343,
	347, 353, 243, 205, 379, 387, 507, 303, 210, 211,
	212, 500, 501, 502, 503, 542, 543, 547, 449, 450,
	451, 452, 284, 537, 300, 455, 454, 322, 323, 368,
	437, 0, 194, 215, 357, 0, 441, 280, 573, 541,
	536, 201, 217, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 216,
	226, 230, 237, 253, 268, 270, 277, 290, 301, 309,
	310, 313, 319, 369, 375, 376, 377, 378, 397, 398,
	399, 402, 405, 406, 409, 411, 412, 415, 419, 423,
	424, 425, 427, 429, 431, 442, 447, 461, 462, 463,
	464, 465, 468, 469, 474, 475, 476, 477, 478, 486,
	487, 492, 515, 517, 530, 548, 554, 467, 292, 293,
	432, 433, 305, 306, 570, 571, 291, 525, 555, 523,
	569, 549, 426, 367, 0, 0, 370, 273, 296, 311,
	0, 540, 488, 221, 453, 282, 245, 0, 0, 206,
	240, 224, 251, 266, 269, 315, 380, 388, 417, 422,
	288, 263, 238, 446, 235, 471, 495, 496, 497, 499,
	384, 258, 421, 385, 0, 365, 505, 506, 307, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 1696, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 355, 259, 0, 0, 418,
	0, 200, 0, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 0, 359, 0,
	0, 483, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 242,
	316, 199, 401, 484, 278, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 239, 0, 0, 0, 340, 349, 348,
	329, 330, 332, 334, 339, 346, 352, 0, 0, 0,
	0, 0, 257, 312, 264, 256, 509, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 390, 249, 0, 440, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 321,
	195, 219, 0, 0, 400, 448, 460, 0, 0, 0,
	247, 0, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 0, 0, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 518, 519, 248,
	575, 222, 545, 214, 0, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 344, 345, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 0,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 0, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 0, 0, 413, 459, 234, 531, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 373,
	472, 528, 326, 338, 341, 331, 350, 0, 351, 327,
	328, 333, 335, 336, 337, 342, 343, 347, 353, 243,
	205, 379, 387, 507, 303, 210, 211, 212, 500, 501,
	502, 503, 542, 543, 547, 449, 450, 451, 452, 284,
	537, 300, 455, 454, 322, 323, 368, 437, 0, 194,
	215, 357, 0, 441, 280, 573, 541, 536, 201, 217,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 292, 293, 432, 433, 305,
	306, 570, 571, 291, 525, 555, 523, 569, 549, 426,
	367, 0, 0, 370, 273, 296, 311, 0, 540, 488,
	221, 453, 282, 245, 0, 0, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	385, 0, 365, 505, 506, 307, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	1694, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 355, 259, 0, 0, 418, 0, 200, 0,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 0, 359, 0, 0, 483, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 242, 316, 199, 401,
	484, 278, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 0, 0, 0, 0, 0, 257,
	312, 264, 256, 509, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 390,
	249, 0, 440, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 321, 195, 219, 0,
	0, 400, 448, 460, 0, 0, 0, 247, 0, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 0,
	0, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 0, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 0, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 0,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	0, 0, 413, 459, 234, 531, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 0, 194, 215, 357, 0,
	441, 280, 573, 541, 536, 201, 217, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	291, 525, 555, 523, 569, 549, 426, 367, 0, 0,
	370, 273, 296, 311, 0, 540, 488, 221, 453, 282,
	245, 0, 0, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 385, 0, 365,
	505, 506, 307, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 1692, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 355,
	259, 0, 0, 418, 0, 200, 0, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 0, 359, 0, 0, 483, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 242, 316, 199, 401, 484, 278, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 239, 0, 0,
	0, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 0, 0, 0, 0, 0, 257, 312, 264, 256,
	509, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 390, 249, 0, 440,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 321, 195, 219, 0, 0, 400, 448,
	460, 0, 0, 0, 247, 0, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 0, 0, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 0, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 0, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 0, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 0, 0, 413,
	459, 234, 531, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 0, 194, 215, 357, 0, 441, 280, 573,
	541, 536, 201, 217, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 0, 0, 370, 273, 296,
	311, 0, 540, 488, 221, 453, 282, 245, 0, 0,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 385, 0, 365, 505, 506, 307,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 1690, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 355, 259, 0, 0,
	418, 0, 200, 0, 473, 246, 366, 363, 512, 274,
	265, 261, 244, 308, 374, 416, 494, 410, 0, 359,
	0, 0, 483, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	242, 316, 199, 401, 484, 278, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 239, 0, 0, 0, 340, 349,
	348, 329, 330, 332, 334, 339, 346, 352, 0, 0,
	0, 0, 0, 257, 312, 264, 256, 509, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 390, 249, 0, 440, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 354, 0,
	321, 195, 219, 0, 0, 400, 448, 460, 0, 0,
	0, 247, 0, 458, 414, 529, 227, 276, 445, 420,
	456, 428, 279, 0, 0, 457, 361, 514, 438, 526,
	552, 553, 255, 394, 538, 498, 546, 572, 220, 252,
	408, 491, 532, 480, 386, 510, 511, 320, 479, 287,
	198, 358, 558, 218, 466, 360, 236, 225, 516, 535,
	281, 443, 567, 207, 493, 524, 233, 470, 0, 0,
	574, 241, 490, 209, 521, 489, 382, 317, 318, 208,
	0, 444, 260, 285, 0, 0, 250, 403, 518, 519,
	248, 575, 222, 545, 214, 0, 544, 396, 513, 522,
	383, 372, 213, 520, 381, 371, 325, 344, 345, 272,
	298, 435, 364, 436, 297, 299, 392, 391, 393, 202,
	533, 0, 203, 0, 485, 534, 576, 228, 229, 231,
	0, 271, 275, 283, 286, 294, 295, 304, 356, 407,
	434, 430, 439, 0, 508, 527, 539, 550, 556, 557,
	559, 560, 561, 562, 563, 568, 566, 564, 565, 395,
	302, 481, 324, 362, 0, 0, 413, 459, 234, 531,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	373, 472, 528, 326, 338, 341, 331, 350, 0, 351,
	327, 328, 333, 335, 336, 337, 342, 343, 347, 353,
	243, 205, 379, 387, 507, 303, 210, 211, 212, 500,
	501, 502, 503, 542, 543, 547, 449, 450, 451, 452,
	284, 537, 300, 455, 454, 322, 323, 368, 437, 0,
	194, 215, 357, 0, 441, 280, 573, 541, 536, 201,
	217, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 216, 226, 230,
	237, 253, 268, 270, 277, 290, 301, 309, 310, 313,
	319, 369, 375, 376, 377, 378, 397, 398, 399, 402,
	405, 406, 409, 411, 412, 415, 419, 423, 424, 425,
	427, 429, 431, 442, 447, 461, 462, 463, 464, 465,
	468, 469, 474, 475, 476, 477, 478, 486, 487, 492,
	515, 517, 530, 548, 554, 467, 292, 293, 432, 433,
	305, 306, 570, 571, 291, 525, 555, 523, 569, 549,
	426, 367, 0, 0, 370, 273, 296, 311, 0, 540,
	488, 221, 453, 282, 245, 0, 0, 206, 240, 224,
	251, 266, 269, 315, 380, 388, 417, 422, 288, 263,
	238, 446, 235, 471, 495, 496, 497, 499, 384, 258,
	421, 385, 0, 365, 505, 506, 307, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 1688, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 355, 259, 0, 0, 418, 0, 200,
	0, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 0, 359, 0, 0, 483,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 242, 316, 199,
	401, 484, 278, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 239, 0, 0, 0, 340, 349, 348, 329, 330,
	332, 334, 339, 346, 352, 0, 0, 0, 0, 0,
	257, 312, 264, 256, 509, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	390, 249, 0, 440, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 321, 195, 219,
	0, 0, 400, 448, 460, 0, 0, 0, 247, 0,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	0, 0, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 518, 519, 248, 575, 222,
	545, 214, 0, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 344, 345, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 0, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	0, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 0, 0, 413, 459, 234, 531, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 373, 472, 528,
	326, 338, 341, 331, 350, 0, 351, 327, 328, 333,
	335, 336, 337, 342, 343, 347, 353, 243, 205, 379,
	387, 507, 303, 210, 211, 212, 500, 501, 502, 503,
	542, 543, 547, 449, 450, 451, 452, 284, 537, 300,
	455, 454, 322, 323, 368, 437, 0, 194, 215, 357,
	0, 441, 280, 573, 541, 536, 201, 217, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 397, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 292, 293, 432, 433, 305, 306, 570,
	571, 291, 525, 555, 523, 569, 549, 426, 367, 0,
	0, 370, 273, 296, 311, 0, 540, 488, 221, 453,
	282, 245, 0, 0, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 385, 0,
	365, 505, 506, 307, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 1684, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	355, 259, 0, 0, 418, 0, 200, 0, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 0, 359, 0, 0, 483, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 242, 316, 199, 401, 484, 278,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 239, 0,
	0, 0, 340, 349, 348, 329, 330, 332, 334, 339,
	346, 352, 0, 0, 0, 0, 0, 257, 312, 264,
	256, 509, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 390, 249, 0,
	440, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 321, 195, 219, 0, 0, 400,
	448, 460, 0, 0, 0, 247, 0, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 0, 0, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 518, 519, 248, 575, 222, 545, 214, 0,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 344, 345, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 0, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 0, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 0, 0,
	413, 459, 234, 531, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 373, 472, 528, 326, 338, 341,
	331, 350, 0, 351, 327, 328, 333, 335, 336, 337,
	342, 343, 347, 353, 243, 205, 379, 387, 507, 303,
	210, 211, 212, 500, 501, 502, 503, 542, 543, 547,
	449, 450, 451, 452, 284, 537, 300, 455, 454, 322,
	323, 368, 437, 0, 194, 215, 357, 0, 441, 280,
	573, 541, 536, 201, 217, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	292, 293, 432, 433, 305, 306, 570, 571, 291, 525,
	555, 523, 569, 549, 426, 367, 0, 0, 370, 273,
	296, 311, 0, 540, 488, 221, 453, 282, 245, 0,
	0, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 385, 0, 365, 505, 506,
	307, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 1682, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 0,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 0,
	0, 0, 0, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 247, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	0, 194, 215, 357, 0, 441, 280, 573, 541, 536,
	201, 217, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 0, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 385, 0, 365, 505, 506, 307, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 1680, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 0, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 0, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 0, 0, 0, 0,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 247,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 0, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 0, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 385,
	0, 365, 505, 506, 307, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 355, 259, 0, 0, 418, 0, 200, 0, 473,
	246, 366, 363, 512, 274, 265, 261, 244, 308, 374,
	416, 494, 410, 0, 359, 0, 0, 483, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 242, 316, 199, 401, 484,
	278, 0, 1655, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 239,
	0, 0, 0, 340, 349, 348, 329, 330, 332, 334,
	339, 346, 352, 0, 0, 0, 0, 0, 257, 312,
	264, 256, 509, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 390, 249,
	0, 440, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 321, 195, 219, 0, 0,
	400, 448, 460, 0, 0, 0, 247, 0, 458, 414,
	529, 227, 276, 445, 420, 456, 428, 279, 0, 0,
	457, 361, 514, 438, 526, 552, 553, 255, 394, 538,
	498, 546, 572, 220, 252, 408, 491, 532, 480, 386,
	510, 511, 320, 479, 287, 198, 358, 558, 218, 466,
	360, 236, 225, 516, 535, 281, 443, 567, 207, 493,
	524, 233, 470, 0, 0, 574, 241, 490, 209, 521,
	489, 382, 317, 318, 208, 0, 444, 260, 285, 0,
	0, 250, 403, 518, 519, 248, 575, 222, 545, 214,
	0, 544, 396, 513, 522, 383, 372, 213, 520, 381,
	371, 325, 344, 345, 272, 298, 435, 364, 436, 297,
	299, 392, 391, 393, 202, 533, 0, 203, 0, 485,
	534, 576, 228, 229, 231, 0, 271, 275, 283, 286,
	294, 295, 304, 356, 407, 434, 430, 439, 0, 508,
	527, 539, 550, 556, 557, 559, 560, 561, 562, 563,
	568, 566, 564, 565, 395, 302, 481, 324, 362, 0,
	0, 413, 459, 234, 531, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 373, 472, 528, 326, 338,
	341, 331, 350, 0, 351, 327, 328, 333, 335, 336,
	337, 342, 343, 347, 353, 243, 205, 379, 387, 507,
	303, 210, 211, 212, 500, 501, 502, 503, 542, 543,
	547, 449, 450, 451, 452, 284, 537, 300, 455, 454,
	322, 323, 368, 437, 0, 194, 215, 357, 0, 441,
	280, 573, 541, 536, 201, 217, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 216, 226, 230, 237, 253, 268, 270, 277,
	290, 301, 309, 310, 313, 319, 369, 375, 376, 377,
	378, 397, 398, 399, 402, 405, 406, 409, 411, 412,
	415, 419, 423, 424, 425, 427, 429, 431, 442, 447,
	461, 462, 463, 464, 465, 468, 469, 474, 475, 476,
	477, 478, 486, 487, 492, 515, 517, 530, 548, 554,
	467, 292, 293, 432, 433, 305, 306, 570, 571, 291,
	525, 555, 523, 569, 549, 426, 367, 0, 0, 370,
	273, 296, 311, 0, 540, 488, 221, 453, 282, 245,
	0, 0, 206, 240, 224, 251, 266, 269, 315, 380,
	388, 417, 422, 288, 263, 238, 446, 235, 471, 495,
	496, 497, 499, 384, 258, 421, 385, 0, 365, 505,
	506, 307, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 1554, 262, 0, 0, 0, 0, 355, 259,
	0, 0, 418, 0, 200, 0, 473, 246, 366, 363,
	512, 274, 265, 261, 244, 308, 374, 416, 494, 410,
	0, 359, 0, 0, 483, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 242, 316, 199, 401, 484, 278, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 239, 0, 0, 0,
	340, 349, 348, 329, 330, 332, 334, 339, 346, 352,
	0, 0, 0, 0, 0, 257, 312, 264, 256, 509,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 390, 249, 0, 440, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	354, 0, 321, 195, 219, 0, 0, 400, 448, 460,
	0, 0, 0, 247, 0, 458, 414, 529, 227, 276,
	445, 420, 456, 428, 279, 0, 0, 457, 361, 514,
	438, 526, 552, 553, 255, 394, 538, 498, 546, 572,
	220, 252, 408, 491, 532, 480, 386, 510, 511, 320,
	479, 287, 198, 358, 558, 218, 466, 360, 236, 225,
	516, 535, 281, 443, 567, 207, 493, 524, 233, 470,
	0, 0, 574, 241, 490, 209, 521, 489, 382, 317,
	318, 208, 0, 444, 260, 285, 0, 0, 250, 403,
	518, 519, 248, 575, 222, 545, 214, 0, 544, 396,
	513, 522, 383, 372, 213, 520, 381, 371, 325, 344,
	345, 272, 298, 435, 364, 436, 297, 299, 392, 391,
	393, 202, 533, 0, 203, 0, 485, 534, 576, 228,
	229, 231, 0, 271, 275, 283, 286, 294, 295, 304,
	356, 407, 434, 430, 439, 0, 508, 527, 539, 550,
	556, 557, 559, 560, 561, 562, 563, 568, 566, 564,
	565, 395, 302, 481, 324, 362, 0, 0, 413, 459,
	234, 531, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 373, 472, 528, 326, 338, 341, 331, 350,
	0, 351, 327, 328, 333, 335, 336, 337, 342, 343,
	347, 353, 243, 205, 379, 387, 507, 303, 210, 211,
	212, 500, 501, 502, 503, 542, 543, 547, 449, 450,
	451, 452, 284, 537, 300, 455, 454, 322, 323, 368,
	437, 0, 194, 215, 357, 0, 441, 280, 573, 541,
	536, 201, 217, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 216,
	226, 230, 237, 253, 268, 270, 277, 290, 301, 309,
	310, 313, 319, 369, 375, 376, 377, 378, 397, 398,
	399, 402, 405, 406, 409, 411, 412, 415, 419, 423,
	424, 425, 427, 429, 431, 442, 447, 461, 462, 463,
	464, 465, 468, 469, 474, 475, 476, 477, 478, 486,
	487, 492, 515, 517, 530, 548, 554, 467, 292, 293,
	432, 433, 305, 306, 570, 571, 291, 525, 555, 523,
	569, 549, 426, 367, 0, 0, 370, 273, 296, 311,
	0, 540, 488, 221, 453, 282, 245, 0, 0, 206,
	240, 224, 251, 266, 269, 315, 380, 388, 417, 422,
	288, 263, 238, 446, 235, 471, 495, 496, 497, 499,
	384, 258, 421, 385, 0, 365, 505, 506, 307, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 355, 259, 0, 0, 418,
	0, 200, 0, 473, 246, 366, 363, 512, 274, 265,
	261, 244, 308, 374, 416, 494, 410, 0, 359, 0,
	0, 483, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 242,
	316, 199, 401, 484, 278, 0, 93, 0, 0, 0,
	819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 239, 0, 0, 0, 340, 349, 348,
	329, 330, 332, 334, 339, 346, 352, 0, 0, 0,
	0, 0, 257, 312, 264, 256, 509, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 390, 249, 0, 440, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 321,
	195, 219, 0, 0, 400, 448, 460, 0, 0, 0,
	247, 0, 458, 414, 529, 227, 276, 445, 420, 456,
	428, 279, 0, 0, 457, 361, 514, 438, 526, 552,
	553, 255, 394, 538, 498, 546, 572, 220, 252, 408,
	491, 532, 480, 386, 510, 511, 320, 479, 287, 198,
	358, 558, 218, 466, 360, 236, 225, 516, 535, 281,
	443, 567, 207, 493, 524, 233, 470, 0, 0, 574,
	241, 490, 209, 521, 489, 382, 317, 318, 208, 0,
	444, 260, 285, 0, 0, 250, 403, 518, 519, 248,
	575, 222, 545, 214, 0, 544, 396, 513, 522, 383,
	372, 213, 520, 381, 371, 325, 344, 345, 272, 298,
	435, 364, 436, 297, 299, 392, 391, 393, 202, 533,
	0, 203, 0, 485, 534, 576, 228, 229, 231, 0,
	271, 275, 283, 286, 294, 295, 304, 356, 407, 434,
	430, 439, 0, 508, 527, 539, 550, 556, 557, 559,
	560, 561, 562, 563, 568, 566, 564, 565, 395, 302,
	481, 324, 362, 0, 0, 413, 459, 234, 531, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 373,
	472, 528, 326, 338, 341, 331, 350, 0, 351, 327,
	328, 333, 335, 336, 337, 342, 343, 347, 353, 243,
	205, 379, 387, 507, 303, 210, 211, 212, 500, 501,
	502, 503, 542, 543, 547, 449, 450, 451, 452, 284,
	537, 300, 455, 454, 322, 323, 368, 437, 0, 194,
	215, 357, 0, 441, 280, 573, 541, 536, 201, 217,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 216, 226, 230, 237,
	253, 268, 270, 277, 290, 301, 309, 310, 313, 319,
	369, 375, 376, 377, 378, 397, 398, 399, 402, 405,
	406, 409, 411, 412, 415, 419, 423, 424, 425, 427,
	429, 431, 442, 447, 461, 462, 463, 464, 465, 468,
	469, 474, 475, 476, 477, 478, 486, 487, 492, 515,
	517, 530, 548, 554, 467, 292, 293, 432, 433, 305,
	306, 570, 571, 291, 525, 555, 523, 569, 549, 426,
	367, 0, 0, 370, 273, 296, 311, 0, 540, 488,
	221, 453, 282, 245, 0, 0, 206, 240, 224, 251,
	266, 269, 315, 380, 388, 417, 422, 288, 263, 238,
	446, 235, 471, 495, 496, 497, 499, 384, 258, 421,
	385, 0, 365, 505, 506, 307, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 355, 259, 0, 0, 418, 0, 200, 0,
	473, 246, 366, 363, 512, 274, 265, 261, 244, 308,
	374, 416, 494, 410, 0, 359, 0, 0, 483, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 242, 316, 199, 401,
	484, 278, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	239, 0, 0, 0, 340, 349, 348, 329, 330, 332,
	334, 339, 346, 352, 0, 0, 0, 0, 0, 257,
	312, 264, 256, 509, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 289, 0, 390,
	249, 0, 440, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 321, 195, 219, 0,
	0, 400, 448, 460, 0, 0, 0, 247, 0, 458,
	414, 529, 227, 276, 445, 420, 456, 428, 279, 0,
	0, 457, 361, 514, 438, 526, 552, 553, 255, 394,
	538, 498, 546, 572, 220, 252, 408, 491, 532, 480,
	386, 510, 511, 320, 479, 287, 198, 358, 558, 218,
	466, 360, 236, 225, 516, 535, 281, 443, 567, 207,
	493, 524, 233, 470, 0, 0, 574, 241, 490, 209,
	521, 489, 382, 317, 318, 208, 0, 444, 260, 285,
	0, 0, 250, 403, 518, 519, 248, 575, 222, 545,
	214, 0, 544, 396, 513, 522, 383, 372, 213, 520,
	381, 371, 325, 344, 345, 272, 298, 435, 364, 436,
	297, 299, 392, 391, 393, 202, 533, 0, 203, 0,
	485, 534, 576, 228, 229, 231, 0, 271, 275, 283,
	286, 294, 295, 304, 356, 407, 434, 430, 439, 0,
	508, 527, 539, 550, 556, 557, 559, 560, 561, 562,
	563, 568, 566, 564, 565, 395, 302, 481, 324, 362,
	0, 0, 413, 459, 234, 531, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 373, 472, 528, 326,
	338, 341, 331, 350, 0, 351, 327, 328, 333, 335,
	336, 337, 342, 343, 347, 353, 243, 205, 379, 387,
	507, 303, 210, 211, 212, 500, 501, 502, 503, 542,
	543, 547, 449, 450, 451, 452, 284, 537, 300, 455,
	454, 322, 323, 368, 437, 0, 194, 215, 357, 0,
	441, 280, 573, 541, 536, 201, 217, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 216, 226, 230, 237, 253, 268, 270,
	277, 290, 301, 309, 310, 313, 319, 369, 375, 376,
	377, 378, 397, 398, 399, 402, 405, 406, 409, 411,
	412, 415, 419, 423, 424, 425, 427, 429, 431, 442,
	447, 461, 462, 463, 464, 465, 468, 469, 474, 475,
	476, 477, 478, 486, 487, 492, 515, 517, 530, 548,
	554, 467, 292, 293, 432, 433, 305, 306, 570, 571,
	1302, 525, 555, 523, 569, 549, 426, 367, 0, 0,
	370, 273, 296, 311, 0, 540, 488, 221, 453, 282,
	245, 0, 0, 206, 240, 224, 251, 266, 269, 315,
	380, 388, 417, 422, 288, 263, 238, 446, 235, 471,
	495, 496, 497, 499, 384, 258, 421, 385, 0, 365,
	505, 506, 307, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 355,
	259, 0, 0, 418, 0, 200, 0, 473, 246, 366,
	363, 512, 274, 265, 261, 244, 308, 374, 416, 494,
	410, 0, 359, 0, 0, 483, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 242, 316, 199, 401, 484, 278, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 239, 0, 0,
	0, 340, 349, 348, 329, 330, 332, 334, 339, 346,
	352, 0, 0, 0, 0, 0, 257, 312, 264, 256,
	509, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 390, 249, 0, 440,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 321, 195, 219, 0, 0, 400, 448,
	460, 0, 0, 0, 247, 0, 458, 414, 529, 227,
	276, 445, 420, 456, 428, 279, 0, 0, 457, 361,
	514, 438, 526, 552, 553, 255, 394, 538, 498, 546,
	572, 220, 252, 408, 491, 532, 480, 386, 510, 511,
	320, 479, 287, 198, 358, 558, 218, 466, 360, 236,
	225, 516, 535, 281, 443, 567, 207, 493, 524, 233,
	470, 0, 0, 574, 241, 490, 209, 521, 489, 382,
	317, 318, 208, 0, 444, 260, 285, 0, 0, 250,
	403, 518, 519, 248, 575, 222, 545, 214, 0, 544,
	396, 513, 522, 383, 372, 213, 520, 381, 371, 325,
	344, 345, 272, 298, 435, 364, 436, 297, 299, 392,
	391, 393, 202, 533, 0, 203, 0, 485, 534, 576,
	228, 229, 231, 0, 271, 275, 283, 286, 294, 295,
	304, 356, 407, 434, 430, 439, 0, 508, 527, 539,
	550, 556, 557, 559, 560, 561, 562, 563, 568, 566,
	564, 565, 395, 302, 481, 324, 362, 0, 0, 413,
	459, 234, 531, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, 373, 472, 528, 326, 338, 341, 331,
	350, 0, 351, 327, 328, 333, 335, 336, 337, 342,
	343, 347, 353, 243, 205, 379, 387, 507, 303, 210,
	211, 212, 500, 501, 502, 503, 542, 543, 547, 449,
	450, 451, 452, 284, 537, 300, 455, 454, 322, 323,
	368, 437, 0, 194, 215, 357, 0, 441, 280, 573,
	541, 536, 201, 217, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 0, 196, 197, 204,
	216, 226, 230, 237, 253, 268, 270, 277, 290, 301,
	309, 310, 313, 319, 369, 375, 376, 377, 378, 397,
	398, 399, 402, 405, 406, 409, 411, 412, 415, 419,
	423, 424, 425, 427, 429, 431, 442, 447, 461, 462,
	463, 464, 465, 468, 469, 474, 475, 476, 477, 478,
	486, 487, 492, 515, 517, 530, 548, 554, 467, 292,
	293, 432, 433, 305, 306, 570, 571, 291, 525, 555,
	523, 569, 549, 426, 367, 0, 0, 370, 273, 296,
	311, 0, 540, 488, 221, 453, 282, 245, 0, 0,
	206, 240, 224, 251, 266, 269, 315, 380, 388, 417,
	422, 288, 263, 238, 446, 235, 471, 495, 496, 497,
	499, 384, 258, 421, 385, 0, 365, 505, 506, 307,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 355, 259, 0, 0,
	418, 0, 200, 0, 473, 246, 366, 363, 512, 274,
	265, 261, 244, 308, 374, 416, 494, 410, 0, 359,
	0, 0, 483, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	242, 316, 199, 401, 484, 278, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 239, 0, 0, 0, 340, 349,
	348, 329, 330, 332, 334, 339, 346, 352, 0, 0,
	0, 0, 0, 257, 312, 264, 256, 509, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 390, 249, 0, 440, 0, 598, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 354, 0,
	321, 195, 219, 0, 0, 400, 448, 460, 0, 0,
	0, 247, 0, 458, 414, 529, 227, 276, 445, 420,
	456, 428, 279, 0, 0, 457, 361, 514, 438, 526,
	552, 553, 255, 394, 538, 498, 546, 572, 220, 252,
	408, 491, 532, 480, 386, 510, 511, 320, 479, 287,
	198, 358, 558, 218, 466, 360, 236, 225, 516, 535,
	281, 443, 567, 207, 493, 524, 233, 470, 0, 0,
	574, 241, 490, 209, 521, 489, 382, 317, 318, 208,
	0, 444, 260, 285, 0, 0, 250, 403, 518, 519,
	248, 575, 222, 545, 214, 0, 544, 396, 513, 522,
	383, 372, 213, 520, 381, 371, 325, 344, 345, 272,
	298, 435, 364, 436, 297, 299, 392, 391, 393, 202,
	533, 0, 203, 0, 485, 534, 576, 228, 229, 231,
	0, 271, 275, 283, 286, 294, 295, 304, 356, 407,
	434, 430, 439, 0, 508, 527, 539, 550, 556, 557,
	559, 560, 561, 562, 563, 568, 566, 564, 565, 395,
	302, 481, 324, 362, 0, 0, 413, 459, 234, 531,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	373, 472, 528, 326, 338, 341, 331, 350, 0, 351,
	327, 328, 333, 335, 336, 337, 342, 343, 347, 353,
	243, 205, 379, 387, 507, 303, 210, 211, 212, 500,
	501, 502, 503, 542, 543, 547, 449, 450, 451, 452,
	284, 537, 300, 455, 454, 322, 323, 368, 437, 0,
	194, 215, 357, 0, 441, 280, 573, 541, 536, 201,
	217, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 216, 226, 230,
	237, 253, 268, 270, 277, 290, 301, 309, 310, 313,
	319, 369, 375, 376, 377, 378, 397, 398, 399, 402,
	405, 406, 409, 411, 412, 415, 419, 423, 424, 425,
	427, 429, 431, 442, 447, 461, 462, 463, 464, 465,
	468, 469, 474, 475, 476, 477, 478, 486, 487, 492,
	515, 517, 530, 548, 554, 467, 292, 293, 432, 433,
	305, 306, 570, 571, 291, 525, 555, 523, 569, 549,
	426, 367, 0, 0, 370, 273, 296, 311, 0, 540,
	488, 221, 453, 282, 245, 0, 0, 206, 240, 224,
	251, 266, 269, 315, 380, 388, 417, 422, 288, 263,
	238, 446, 235, 471, 495, 496, 497, 499, 384, 258,
	421, 385, 0, 365, 505, 506, 307, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 355, 259, 0, 0, 418, 0, 200,
	0, 473, 246, 366, 363, 512, 274, 265, 261, 244,
	308, 374, 416, 494, 410, 0, 359, 0, 0, 483,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 242, 316, 199,
	401, 484, 278, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 239, 0, 0, 0, 340, 349, 348, 329, 330,
	332, 334, 339, 346, 352, 0, 0, 0, 0, 0,
	257, 312, 264, 256, 509, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	390, 249, 0, 440, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 321, 195, 219,
	0, 0, 400, 448, 460, 0, 0, 0, 247, 0,
	458, 414, 529, 227, 276, 445, 420, 456, 428, 279,
	0, 0, 457, 361, 514, 438, 526, 552, 553, 255,
	394, 538, 498, 546, 572, 220, 252, 408, 491, 532,
	480, 386, 510, 511, 320, 479, 287, 198, 358, 558,
	218, 466, 360, 236, 225, 516, 535, 281, 443, 567,
	207, 493, 524, 233, 470, 0, 0, 574, 241, 490,
	209, 521, 489, 382, 317, 318, 208, 0, 444, 260,
	285, 0, 0, 250, 403, 518, 519, 248, 575, 222,
	545, 214, 0, 544, 396, 513, 522, 383, 372, 213,
	520, 381, 371, 325, 344, 345, 272, 298, 435, 364,
	436, 297, 299, 392, 391, 393, 202, 533, 0, 203,
	0, 485, 534, 576, 228, 229, 231, 0, 271, 275,
	283, 286, 294, 295, 304, 356, 407, 434, 430, 439,
	0, 508, 527, 539, 550, 556, 557, 559, 560, 561,
	562, 563, 568, 566, 564, 565, 395, 302, 481, 324,
	362, 0, 0, 413, 459, 234, 531, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 373, 472, 528,
	326, 338, 341, 331, 350, 0, 351, 327, 328, 333,
	335, 336, 337, 342, 343, 347, 353, 243, 205, 379,
	387, 507, 303, 210, 211, 212, 500, 501, 502, 503,
	542, 543, 547, 449, 450, 451, 452, 284, 537, 300,
	455, 454, 322, 323, 368, 437, 0, 194, 215, 357,
	0, 441, 280, 573, 541, 536, 201, 217, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 216, 226, 230, 237, 253, 268,
	270, 277, 290, 301, 309, 310, 313, 319, 369, 375,
	376, 377, 378, 3471, 398, 399, 402, 405, 406, 409,
	411, 412, 415, 419, 423, 424, 425, 427, 429, 431,
	442, 447, 461, 462, 463, 464, 465, 468, 469, 474,
	475, 476, 477, 478, 486, 487, 492, 515, 517, 530,
	548, 554, 467, 292, 293, 432, 433, 305, 306, 570,
	571, 291, 525, 555, 523, 569, 549, 426, 367, 0,
	0, 370, 273, 296, 311, 0, 540, 488, 221, 453,
	282, 245, 0, 0, 206, 240, 224, 251, 266, 269,
	315, 380, 388, 417, 422, 288, 263, 238, 446, 235,
	471, 495, 496, 497, 499, 384, 258, 421, 385, 0,
	365, 505, 506, 307, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	355, 259, 0, 0, 418, 0, 200, 0, 473, 246,
	366, 363, 512, 274, 265, 261, 244, 308, 374, 416,
	494, 410, 0, 359, 0, 0, 483, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 242, 316, 199, 401, 484, 278,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 239, 0,
	0, 0, 340, 349, 348, 329, 330, 332, 334, 339,
	346, 352, 0, 0, 0, 0, 0, 257, 312, 264,
	256, 509, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 390, 249, 0,
	440, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 321, 195, 219, 0, 0, 400,
	448, 460, 0, 0, 0, 247, 0, 458, 414, 529,
	227, 276, 445, 420, 456, 428, 279, 0, 0, 457,
	361, 514, 438, 526, 552, 553, 255, 394, 538, 498,
	546, 572, 220, 252, 408, 491, 532, 480, 386, 510,
	511, 320, 479, 287, 198, 358, 558, 218, 466, 360,
	236, 225, 516, 535, 281, 443, 567, 207, 493, 524,
	233, 470, 0, 0, 574, 241, 490, 209, 521, 489,
	382, 317, 318, 208, 0, 444, 260, 285, 0, 0,
	250, 403, 518, 519, 248, 575, 222, 545, 214, 0,
	544, 396, 513, 522, 383, 372, 213, 520, 381, 371,
	325, 344, 345, 272, 298, 435, 364, 436, 297, 299,
	392, 391, 393, 202, 533, 0, 203, 0, 485, 534,
	576, 228, 229, 231, 0, 271, 275, 283, 286, 294,
	295, 304, 356, 407, 434, 430, 439, 0, 508, 527,
	539, 550, 556, 557, 559, 560, 561, 562, 563, 568,
	566, 564, 565, 395, 302, 481, 324, 362, 0, 0,
	413, 459, 234, 531, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 373, 472, 528, 326, 338, 341,
	331, 350, 0, 351, 327, 328, 333, 335, 336, 337,
	342, 343, 347, 353, 243, 205, 379, 387, 507, 303,
	210, 211, 212, 500, 501, 502, 503, 542, 543, 547,
	449, 450, 451, 452, 284, 537, 300, 455, 454, 322,
	323, 368, 437, 0, 194, 215, 357, 0, 441, 280,
	573, 541, 536, 201, 217, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 216, 226, 230, 237, 253, 268, 270, 277, 290,
	301, 309, 310, 313, 319, 369, 375, 376, 377, 378,
	397, 398, 399, 402, 405, 406, 409, 411, 412, 415,
	419, 423, 424, 425, 427, 429, 431, 442, 447, 461,
	462, 463, 464, 465, 468, 469, 474, 475, 476, 477,
	478, 486, 487, 492, 515, 517, 530, 548, 554, 467,
	292, 293, 432, 433, 305, 306, 570, 571, 291, 525,
	555, 523, 569, 549, 426, 367, 0, 0, 370, 273,
	296, 311, 0, 540, 488, 221, 453, 282, 245, 0,
	0, 206, 240, 224, 251, 266, 269, 315, 380, 388,
	417, 422, 288, 263, 238, 446, 235, 471, 495, 496,
	497, 499, 384, 258, 421, 385, 0, 365, 505, 506,
	307, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 355, 259, 0,
	0, 418, 0, 200, 0, 473, 246, 366, 363, 512,
	274, 265, 261, 244, 308, 374, 416, 494, 410, 0,
	359, 0, 0, 483, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 242, 316, 199, 401, 484, 278, 0, 0, 0,
	0, 0, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 239, 0, 0, 0, 340,
	349, 348, 329, 330, 332, 334, 339, 346, 352, 0,
	0, 0, 0, 0, 257, 312, 264, 256, 509, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 390, 249, 0, 440, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 321, 195, 219, 0, 0, 400, 448, 460, 0,
	0, 0, 247, 0, 458, 414, 529, 227, 276, 445,
	420, 456, 428, 279, 0, 0, 457, 361, 514, 438,
	526, 552, 553, 255, 394, 538, 498, 546, 572, 220,
	252, 408, 491, 532, 480, 386, 510, 511, 320, 479,
	287, 198, 358, 558, 218, 466, 360, 236, 225, 516,
	535, 281, 443, 567, 207, 493, 524, 233, 470, 0,
	0, 574, 241, 490, 209, 521, 489, 382, 317, 318,
	208, 0, 444, 260, 285, 0, 0, 250, 403, 518,
	519, 248, 575, 222, 545, 214, 0, 544, 396, 513,
	522, 383, 372, 213, 520, 381, 371, 325, 344, 345,
	272, 298, 435, 364, 436, 297, 299, 392, 391, 393,
	202, 533, 0, 203, 0, 485, 534, 576, 228, 229,
	231, 0, 271, 275, 283, 286, 294, 295, 304, 356,
	407, 434, 430, 439, 0, 508, 527, 539, 550, 556,
	557, 559, 560, 561, 562, 563, 568, 566, 564, 565,
	395, 302, 481, 324, 362, 0, 0, 413, 459, 234,
	531, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 373, 472, 528, 326, 338, 341, 331, 350, 0,
	351, 327, 328, 333, 335, 336, 337, 342, 343, 347,
	353, 243, 205, 379, 387, 507, 303, 210, 211, 212,
	500, 501, 502, 503, 542, 543, 547, 449, 450, 451,
	452, 284, 537, 300, 455, 454, 322, 323, 368, 437,
	0, 194, 215, 357, 0, 441, 280, 573, 541, 536,
	201, 217, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 216, 226,
	230, 237, 253, 268, 270, 277, 290, 301, 309, 310,
	313, 319, 369, 375, 376, 377, 378, 397, 398, 399,
	402, 405, 406, 409, 411, 412, 415, 419, 423, 424,
	425, 427, 429, 431, 442, 447, 461, 462, 463, 464,
	465, 468, 469, 474, 475, 476, 477, 478, 486, 487,
	492, 515, 517, 530, 548, 554, 467, 292, 293, 432,
	433, 305, 306, 570, 571, 291, 525, 555, 523, 569,
	549, 426, 367, 0, 0, 370, 273, 296, 311, 0,
	540, 488, 221, 453, 282, 245, 0, 0, 206, 240,
	224, 251, 266, 269, 315, 380, 388, 417, 422, 288,
	263, 238, 446, 235, 471, 495, 496, 497, 499, 384,
	258, 421, 385, 0, 365, 505, 506, 307, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 355, 259, 0, 0, 418, 0,
	200, 0, 473, 246, 366, 363, 512, 274, 265, 261,
	244, 308, 374, 416, 494, 410, 0, 359, 0, 0,
	483, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 242, 316,
	199, 401, 484, 278, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 239, 0, 0, 0, 340, 349, 348, 329,
	330, 332, 334, 339, 346, 352, 0, 0, 0, 0,
	0, 257, 312, 264, 256, 509, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 390, 249, 0, 440, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 321, 195,
	219, 0, 0, 400, 448, 460, 0, 0, 0, 247,
	0, 458, 414, 529, 227, 276, 445, 420, 456, 428,
	279, 0, 0, 457, 361, 514, 438, 526, 552, 553,
	255, 394, 538, 498, 546, 572, 220, 252, 408, 491,
	532, 480, 386, 510, 511, 320, 479, 287, 198, 358,
	558, 218, 466, 360, 236, 225, 516, 535, 281, 443,
	567, 207, 493, 524, 233, 470, 0, 0, 574, 241,
	490, 209, 521, 489, 382, 317, 318, 208, 0, 444,
	260, 285, 0, 0, 250, 403, 518, 519, 248, 575,
	222, 545, 214, 0, 544, 396, 513, 522, 383, 372,
	213, 520, 381, 371, 325, 344, 345, 272, 298, 435,
	364, 436, 297, 299, 392, 391, 393, 202, 533, 0,
	203, 0, 485, 534, 576, 228, 229, 231, 0, 271,
	275, 283, 286, 294, 295, 304, 356, 407, 434, 430,
	439, 0, 508, 527, 539, 550, 556, 557, 559, 560,
	561, 562, 563, 568, 566, 564, 565, 395, 302, 481,
	324, 362, 0, 0, 413, 459, 234, 531, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 595, 373, 472,
	528, 326, 338, 341, 331, 350, 0, 351, 327, 328,
	333, 335, 336, 337, 342, 343, 347, 353, 243, 205,
	379, 387, 507, 303, 210, 211, 212, 500, 501, 502,
	503, 542, 543, 547, 449, 450, 451, 452, 284, 537,
	300, 455, 454, 322, 323, 368, 437, 0, 194, 215,
	357, 0, 441, 280, 573, 541, 536, 201, 217, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 216, 226, 230, 237, 253,
	268, 270, 277, 290, 301, 309, 310, 313, 319, 369,
	375, 376, 377, 378, 397, 398, 399, 402, 405, 406,
	409, 411, 412, 415, 419, 423, 424, 425, 427, 429,
	431, 442, 447, 461, 462, 463, 464, 465, 468, 469,
	474, 475, 476, 477, 478, 486, 487, 492, 515, 517,
	530, 548, 554, 467, 292, 293, 432, 433, 305, 306,
	570, 571, 291, 525, 555, 523, 569, 549, 426, 367,
	0, 0, 370, 273, 296, 311, 0, 540, 488, 221,
	453, 282, 245, 0, 0, 206, 240, 224, 251, 266,
	269, 315, 380, 388, 417, 422, 288, 263, 238, 446,
	235, 471, 495, 496, 497, 499, 384, 258, 421, 0,
	0, 365, 505, 506, 307,
}

var yyPact = [...]int{
	-1000, -1000, 421, -1000, -451, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2254, 2270, -1000, -1000, -1000, -1000, 2390, -1000, 794, 1850,
	-1000, 2173, 322, -1000, 46218, 572, -1000, 43590, 571, 570,
	4368, 29136, -1000, 227, -1000, 207, 44904, 217, -1000, -1000,
	-1000, -1000, -308, 17965, 2094, 96, 93, 46218, -1000, -1000,
	-1000, -1000, 2381, 1796, -1000, 387, -1000, -1000, -1000, -1000,
	-1000, -1000, 42933, -1000, 947, -1000, -1000, 2189, 2162, 2398,
	714, 2098, -1000, 2274, 1796, -1000, 17965, 2329, 2243, 17308,
	17308, 489, -1000, -1000, 308, -1000, -1000, 24537, 46218, 31764,
	476, -1000, 2173, -1000, -1000, -1000, 126, -1000, 384, 1720,
	-1000, 1716, -1000, 1000, 1066, 403, 516, 515, 400, 399,
	398, 393, 392, 391, 390, 389, 413, -1000, 732, 732,
	-125, -132, 4823, 556, 480, 480, 863, 523, 2147, 2139,
	-1000, -1000, 732, 732, 732, 397, 732, 732, 732, 732,
	348, 345, 732, 732, 732, 732, 732, 732, 732, 732,
	732, 732, 732, 732, 732, 732, 732, 732, 732, 569,
	2173, 324, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46218, 249, 46218, -1000,
	644, 46218, 46218, 868, -1000, 868, 113, 868, 868, 868,
	868, 219, 744, 90, -1000, 218, 306, 213, 318, 871,
	197, -1000, -1000, 323, 871, 1575, -1000, 720, 309, 204,
	-1000, 868, 868, -1000, -1000, 11370, 164, 11370, 11370, -1000,
	2170, -1000, -1000, -1000, -1000, -1000, 1148, -1000, -1000, -1000,
	-1000, -2, 522, -1000, -1000, -1000, -1000, 44904, 42276, 298,
	-1000, -1000, 72, -1000, -1000, 1594, 1078, 17965, 1220, -1000,
	1959, 693, -1000, -1000, -1000, -1000, -1000, 604, -1000, 18622,
	18622, 18622, 18622, -1000, -1000, 1722, 41619, 1722, 1722, 18622,
	1722, -1000, 18622, 1722, 1722, 1722, 17965, 1722, 1722, 1722,
	1722, -1000, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	-1000, -1000, -1000, -1000, 1722, 643, 1722, 1722, 1722, 1722,
	1722, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1722,
	1722, 1722, 1722, 1722, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20593, 1301,
	1299, 1290, -1000, 15337, 1722, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46218, -1000, 1722, 244, 44904,
	44904, 405, 2274, 1796, -1000, 2381, 2374, 387, -1000, 2937,
	1236, 1454, 1276, 1796, 1696, 46218, -1000, 1750, -1000, -1000,
	-1000, -1000, 2000, 1223, 1564, -1000, -1000, -1000, -1000, 1629,
	17965, -1000, -1000, 2375, -1000, 21908, 637, 2372, 40962, -1000,
	489, 489, 1713, 447, 22, -1000, -1000, -1000, -1000, 759,
	28479, -1000, -1000, -1000, -1000, 1572, 46218, -1000, -1000, 5661,
	1062, -1000, 1849, -1000, 1553, -1000, 1785, 17965, 1865, 561,
	1062, 553, 542, 537, -1000, -24, -1000, -1000, -1000, -1000,
	-1000, -1000, 732, 732, 732, -1000, 409, 2326, 322, 4595,
	-1000, -1000, -1000, 40305, 1847, 1062, -1000, 1829, -1000, 843,
	590, 638, 638, 1062, -1000, -1000, 45561, 1062, 836, 834,
	1062, 1062, 44904, 44904, -1000, 39648, -1000, 38991, 38334, 1116,
	44904, 37677, 37020, 36363, 35706, 35049, -1000, 1922, -1000, 1801,
	-1000, -1000, -1000, 45561, 1062, 1062, 45561, 44904, 45561, 46218,
	1062, -1000, -1000, 406, -1000, -1000, 1114, 1105, 1094, 732,
	732, 1093, 1533, 1527, 1500, 732, 732, 1092, 1496, 30450,
	1480, 317, 1091, 1086, 1084, 1109, 1478, 200, 1476, 1106,
	1099, 1083, 44904, 1828, 46218, -1000, 295, 768, 512, 750,
	2173, 2071, 1709, 520, 559, 1062, 486, 486, 44904, -1000,
	13359, -1000, -1000, -1000, 1452, 17965, -1000, 875, 871, 871,
	-1000, -1000, -1000, -1000, -1000, -1000, 868, 46218, 875, -1000,
	-1000, -1000, 871, 868, 46218, 868, 868, 868, 868, 871,
	871, 871, 868, 46218, 46218, 46218, 46218, 46218, 46218, 46218,
	46218, 46218, 11370, 720, 868, -312, -1000, 1443, -1000, -1000,
	1971, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11370, 11370, -1000,
	-1000, -1000, -1000, -1000, 1705, -1000, 210, 64, 215, -1000,
	34392, 396, 748, -1000, 396, -1000, -1000, -1000, 1701, 33735,
	-1000, -314, -315, -321, -323, -1000, -1000, -1000, -365, -368,
	-1000, -1000, -1000, 17965, 17965, 17965, 17965, -159, -1000, 943,
	18622, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 167, 842,
	18622, 18622, 18622, 18622, 18622, 18622, 18622, 18622, 18622, 18622,
	18622, 18622, 18622, 18622, 18622, -1000, -1000, 26508, 7451, 7451,
	693, 693, 693, 693, -1000, -89, 1700, 45561, -1000, -1000,
	-1000, 625, 17965, 17965, 693, -1000, 1062, 15337, 19279, 17308,
	17308, 17965, 765, 1078, 45561, 17965, -1000, 1276, -1000, -1000,
	-1000, 1039, -1000, 866, 2130, 2130, 2130, 2130, 17965, 17965,
	17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 2130, 44904,
	44904, 1415, 17965, 17965, 17965, 17965, 17965, 17965, 14022, 17965,
	17965, 18622, 17965, 17965, 17965, 1276, 17965, 17965, 17965, 17965,
	17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965,
	17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965,
	17965, 17965, 17965, 1276, 17965, 1122, 17965, 17965, 17308, 12696,
	17308, 17308, 17308, 17308, 17308, -1000, -1000, -1000, -1000, -1000,
	17965, 17965, 17965, 17965, 17965, 17965, 17965, 17965, 1276, 17965,
	17965, 17965, 17965, 17965, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1548, 1225, 1255, 17965, -1000, 1697,
	-1000, -107, 23880, 17965, 1430, 2368, 1892, 44904, -1000, -1000,
	-1000, 2274, -1000, 2274, 1548, 2698, 2003, 17308, -1000, -1000,
	2698, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1532,
	-1000, 46218, 1696, 2236, 44904, 1988, 1412, 434, -1000, 17965,
	17965, 1691, -1000, 929, 46218, -1000, -159, -1000, 33078, -1000,
	-1000, 10707, 46218, 383, 46218, -1000, 23223, 32421, 402, -1000,
	22, 1674, -1000, 51, 62, 14679, 690, -1000, -1000, -1000,
	4823, 19936, 1590, 690, 139, -1000, -1000, -1000, 1785, -1000,
	1785, 1785, 1785, 1785, 434, 434, 434, 434, -1000, -1000,
	-1000, -1000, -1000, 1824, 1823, -1000, 1785, 1785, 1785, 1785,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1822, 1822, 1822,
	1819, 1819, 1786, 1786, 456, -1000, 17965, 310, 31764, 2208,
	1061, 1386, 295, 487, 1887, 1062, 1062, 1062, 487, -1000,
	1173, 1171, 1147, -1000, -443, 1688, -1000, -1000, 2325, -1000,
	-1000, 743, 885, 857, 835, 44904, 257, 365, -1000, 467,
	-1000, 31764, 1062, 833, 638, 1062, -1000, 1062, -1000, -1000,
	-1000, -1000, -1000, 1062, -1000, -1000, 1684, -1000, 1689, 966,
	854, 919, 852, 1684, -1000, -1000, -95, 1684, -1000, 1684,
	-1000, 1684, -1000, 1684, -1000, 1684, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 792, 225, -224, 44904, 257,
	508, -1000, 500, 26508, -1000, -1000, -1000, 26508, 26508, -1000,
	-1000, -1000, -1000, 1405, 1395, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -426, 46218, -1000, 266, 746, 356,
	395, 342, 46218, 259, 2275, 2272, 2259, 2233, 2219, 328,
	344, 46218, 46218, 486, 1937, 46218, 2215, 46218, -1000, -1000,
	-1000, -1000, -1000, 1078, 46218, -1000, -1000, 868, 868, -1000,
	-1000, 46218, 868, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 868, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 46218, -1000, -1000,
	-1000, -1000, -2, 206, -1000, -1000, 44904, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -40, -1000, 128, 43,
	372, -1000, -1000, -1000, -1000, -1000, 2278, -1000, 1078, 805,
	809, -1000, 1722, -1000, -1000, 938, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 167, 18622, 18622, 18622, 1917, 536, 1995,
	1112, 1186, 1161, 1161, 751, 751, 700, 700, 700, 700,
	700, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1391,
	-1000, 1722, 45561, 1547, 12696, 1929, 1182, 1276, 2843, -1000,
	1539, -1000, 1539, 1739, 783, -1000, 17965, 1276, 2838, -1000,
	-1000, 1276, 1276, 1276, 17965, -1000, -1000, 17965, 17965, 17965,
	17965, 1386, 1386, 1386, 1386, 1386, 1386, 1386, 1386, 1386,
	1386, 17965, 1681, 1679, 2366, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1282, 1386, 1386, 1386,
	1386, 1386, 17965, 1057, -1000, -1000, -1000, 1218, 2832, 1440,
	2827, 1386, 1386, -1000, 1386, 2794, 2782, 1276, 1594, 1276,
	1676, -1000, 2775, 1386, 2770, 2751, 2723, 2167, 2714, 2684,
	2673, 1386, 1386, 1386, 2092, 2651, 2646, 2642, 2626, 2618,
	2605, 2459, 2438, 2373, 1386, -166, 1386, 1276, -1000, -1000,
	-1000, -1000, -1000, 2286, 2088, 1276, 1675, 1722, 619, -1000,
	-1000, 1539, 1276, 1276, 1539, 1539, 2281, 2276, 2255, 2237,
	2231, 2224, 1386, 1386, -1000, 1386, 2217, 2209, 2009, 2005,
	1276, -1000, 1255, 46218, -1000, -290, -1000, 29, 652, 1722,
	-1000, 30450, 1276, -1000, 4699, -1000, 1124, -1000, -1000, -1000,
	-1000, -1000, 27822, 1625, 2698, -1000, -1000, 1722, 1526, -1000,
	-1000, 434, 122, 27165, 647, 647, 153, 1078, 1078, 17965,
	-1000, -1000, -1000, -1000, -1000, -1000, 618, 2339, 382, 1722,
	-1000, 1634, 2926, -1000, -1000, -1000, 2232, 21251, -1000, -1000,
	1722, 1722, 46218, 1578, 1538, -1000, 615, -1000, 1144, 1674,
	22, 48, -1000, -1000, -1000, -1000, 1078, -1000, 1143, 385,
	4628, -1000, 471, -1000, -1000, -1000, -1000, 2099, 136, -1000,
	-1000, -1000, 262, 434, -1000, -1000, -1000, -1000, -1000, -1000,
	1381, 1381, -1000, -1000, -1000, -1000, -1000, 1055, -1000, -1000,
	-1000, -1000, 1051, -1000, -1000, 1044, -1000, -1000, 2198, 1948,
	310, -1000, -1000, 732, 1371, -1000, -1000, 2103, 732, 732,
	44904, -1000, -1000, 1573, 2208, 266, 46218, 774, 1935, -1000,
	1887, 1887, 1887, 46218, -1000, -1000, -1000, -1000, -1000, -1000,
	-434, 78, 415, -1000, -1000, -1000, 3941, 44904, 1489, -1000,
	253, -1000, 1540, -1000, 44904, -1000, 1460, 1818, 1062, 1062,
	-1000, -1000, -1000, 44904, 1722, -1000, -1000, -1000, -1000, 558,
	2172, 302, -1000, -1000, -187, -1000, -1000, 257, 253, 45561,
	1062, 690, -1000, -1000, -1000, -1000, -1000, -429, 1450, 533,
	261, 338, 46218, 46218, 46218, 46218, 46218, 589, -1000, -1000,
	59, -1000, -1000, 233, -1000, -1000, -1000, -1000, 233, -1000,
	-1000, -1000, -1000, 330, 495, -1000, 46218, 46218, 603, -1000,
	-1000, -1000, 871, -1000, -1000, 871, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2165, 46218,
	39, -397, -1000, -386, 17965, -1000, -1000, -1000, -1000, 1269,
	507, 1995, 18622, 18622, 18622, -1000, -1000, -1000, 962, 962,
	26508, -1000, 17965, 17308, -1000, -1000, 17965, 17965, 761, -1000,
	17965, 1052, -1000, 17965, -1000, -1000, -1000, 1255, 1386, 1386,
	1386, 1386, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1685, 17965, 17965, 17965, 1276, 353, -1000, -1000,
	-1000, -1000, -1000, 2360, -1000, 17965, -1000, 26508, 17965, 17965,
	17965, -1000, -1000, -1000, 17965, 17965, -1000, -1000, 17965, 17965,
	-1000, 17965, 17965, 17965, -1000, 17965, 17965, 17965, 17965, -1000,
	-1000, -1000, -1000, 17965, 17965, 17965, 17965, 17965, 17965, 17965,
	17965, 17965, 17965, -1000, -1000, 31764, 103, -166, 1122, 103,
	1122, -1000, 17308, 12033, -1000, -1000, -1000, -1000, -1000, 17965,
	17965, 17965, 17965, 17965, 17965, -1000, -1000, -1000, 17965, 17965,
	-1000, 17965, -1000, 17965, -1000, -1000, -1000, -1000, -1000, 652,
	-1000, 638, 638, 638, 44904, -1000, -1000, -1000, -1000, 1672,
	-1000, 2271, -1000, 2021, 2014, 2356, 2339, -1000, 23223, 2698,
	-1000, -1000, 44904, -282, -1000, 2065, 2144, 647, 647, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10044, 2274, 17965, 1933,
	45561, 156, -1000, 22566, 44904, 45561, 23223, 23223, 23223, 23223,
	23223, -1000, 1964, 1961, -1000, 1980, 1960, 2008, 46218, -1000,
	1548, 1447, -1000, 17965, 25194, 1647, 23223, -1000, -1000, 23223,
	46218, 9381, -1000, -1000, 37, 23, -1000, -1000, -1000, -1000,
	4823, -1000, -1000, 3142, 2227, 2095, -1000, -1000, -1000, -1000,
	-1000, 1435, -1000, 1423, 1671, 1420, 1418, 225, -1000, 1861,
	2163, 732, 732, -1000, 1040, -1000, 1062, 1368, 1365, -1000,
	-1000, -1000, 532, -1000, 2213, 46218, 1927, 1920, 1913, -1000,
	-441, 1031, 1817, 1808, 17965, 1812, 2324, 1654, 44904, -1000,
	-1000, 45561, -1000, 282, -1000, 310, 44904, -1000, -1000, -1000,
	365, 46218, -1000, 7044, -1000, -1000, -1000, 253, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46218, 285, -1000, 1792, 1132,
	-1000, -1000, 1879, -1000, -1000, -1000, -1000, 245, 354, 1359,
	229, 1338, 229, -1000, 46218, 580, 1948, 46218, -1000, -1000,
	-1000, 868, 868, -1000, -1000, 2156, -1000, 1062, 1386, 18622,
	18622, -1000, 693, 1005, -140, 1785, 1785, -1000, 1785, 1786,
	-1000, 1785, 201, 1785, 188, 1785, -1000, -1000, 1276, 1276,
	1255, -1000, 1972, 1807, -1000, 1078, 17965, 2194, -1000, -1000,
	-1000, -1000, -1000, -32, 2069, 1903, 1386, -1000, 1784, 1783,
	17965, 1386, 1276, 1878, 1386, 1386, 1386, 1386, -1000, 1078,
	1255, 1799, 1255, 1386, 1386, 1779, 331, 1386, 1410, 1410,
	1410, 1410, 1410, 1255, 1255, 1255, 1255, 44904, -1000, -166,
	-1000, -1000, -203, -209, -1000, 1276, -166, 1667, 1276, -1000,
	1803, 1735, 1587, 1727, 1386, 1561, 1386, 1386, 1386, 1693,
	-1000, 2256, 2256, 2256, 1364, 1124, 46218, -1000, -1000, -1000,
	-1000, 2339, 2337, 1656, -1000, -1000, 122, 474, -1000, 2047,
	2144, -1000, 2318, 2060, 2314, -1000, -1000, -1000, -1000, -1000,
	1078, -1000, 2175, 1597, -1000, 745, 1599, -1000, -1000, 16651,
	1377, 2011, 609, 1364, 1652, 2926, 1875, 1912, 2871, -1000,
	-1000, -1000, -1000, 1954, -1000, 1939, -1000, -1000, 1750, -1000,
	1542, 383, 23223, 1627, 1627, -1000, 605, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 916, 6750, 2397, -1000, 1320, -1000,
	1131, 205, 1017, -1000, -1000, 732, 732, -1000, 818, 815,
	-1000, 46218, 1757, -1000, 434, 1318, 434, 1016, -1000, -1000,
	1009, -1000, -1000, -1000, -1000, 1729, 1919, -1000, -1000, -1000,
	-1000, 46218, -1000, -1000, 46218, 46218, 46218, 1755, 2302, -1000,
	17965, 1753, 736, 2185, 44904, 44904, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 483, 732, -408,
	339, 332, 732, 732, 732, -442, -1000, -1000, 1358, 1355,
	-1000, -126, -1000, 17965, -1000, -1000, -1000, 998, 998, 1301,
	1299, 1290, -1000, 1750, -1000, -1000, -1000, 1461, -1000, -1000,
	-99, 44904, 44904, 44904, 44904, -1000, -1000, 1034, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	693, 1276, 346, -104, 1276, -1000, -1000, 434, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17965, -1000,
	17965, -1000, 1078, 17965, 2274, 1277, 17965, 17965, -1000, 1002,
	1001, 1386, -1000, -1000, -1000, 17965, -1000, -1000, -1000, -1000,
	-1000, 17965, -1000, -1000, -1000, 17965, 236, 962, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1276, 370,
	-1000, -1000, -1000, -1000, 2347, -1000, 1276, 17965, -1000, -1000,
	17965, -1000, 17965, 17965, -1000, 17965, -1000, 17965, -1000, -1000,
	-1000, -1000, 17965, 1722, 2153, 1722, 1722, 25194, -1000, -1000,
	2337, 2335, 2301, 2053, 2013, 2013, 2047, -1000, 2295, 2290,
	-1000, 1232, 2287, 1227, 788, -1000, 45561, 17965, 156, -1000,
	394, 44904, 156, 44904, -1000, 2333, -1000, -1000, 17965, 1752,
	-1000, 17965, -1000, -1000, -1000, -1000, 7451, 2339, 1627, -1000,
	-1000, 706, -1000, 17965, -1000, -1000, -1000, 3789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1211, 1209, -1000, -1000,
	1751, 17965, -1000, -1000, -1000, 1451, 1424, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1750, -1000, -1000, -1000, -1000,
	365, -437, 2134, 44904, 995, -1000, 1328, 1654, 351, 156,
	1207, 732, 732, 732, 973, 959, 30450, 1326, -1000, 44904,
	432, -1000, 365, -1000, -135, -136, 1386, -1000, -1000, 2226,
	-1000, -1000, 12033, -1000, -1000, 1744, 1885, -1000, -1000, -1000,
	-1000, 1987, -93, -121, -1000, -1000, 1386, 1386, 1390, 1276,
	-1000, 1386, 1386, 1387, 1378, -1000, 1386, 1255, 1557, -1000,
	236, 1276, 1910, -1000, -1000, 7451, -1000, -1000, 2333, 2284,
	103, -1000, -1000, 246, 103, 1078, 1511, 1386, 1483, 1456,
	1386, 1386, 25851, -1000, 2283, 2282, 31107, 31107, 652, 2335,
	-173, 17965, 17965, 2012, 989, -1000, -1000, -1000, -1000, 1199,
	1197, -1000, 1183, -1000, 2396, -1000, 1078, -1000, 156, -1000,
	593, 1599, -1000, 2274, 1078, 44904, 1078, 112, 2333, -1000,
	1386, -1000, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 1722,
	1722, 1722, -1000, -1000, 44904, 1967, -1000, -1000, 2218, 1297,
	77, -1000, 1329, 1654, -1000, -1000, 152, -1000, 17965, -1000,
	30450, 1178, 1166, -1000, -1000, -1000, -1000, -442, -1000, -1000,
	-1000, -1000, -1000, -1000, 387, 1645, -1000, 731, 44904, 46218,
	-1000, 1986, -1000, -1000, -1000, 17965, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17965, -1000, 1276, 1906, -1000, -276,
	-1000, -415, 17965, -166, -1000, -1000, -166, -1000, 17965, -1000,
	-1000, 17965, -1000, 17965, -1000, -1000, 1294, -1000, -1000, -1000,
	-1000, -1000, 1294, 1294, -1000, -173, -1000, 1642, -1000, 44904,
	1078, 1594, -1000, 951, -1000, -1000, -1000, -1000, -1000, 45561,
	1599, 44904, -1000, 1275, 1276, 1722, 2274, -1000, 1273, -1000,
	387, -1000, 1738, 1808, -1000, -1000, -1000, 15994, -1000, -1000,
	-1000, -1000, -1000, 199, -97, 12033, 8718, 1259, -1000, -96,
	1386, 1255, -1000, -372, -1000, -1000, -1000, -1000, 166, -1000,
	-1000, 1594, -1000, -1000, 1380, 1375, 1362, 29793, -1000, -1000,
	-1000, -1000, -173, -1000, -1000, 2199, -1000, -1000, 1592, -1000,
	-1000, 25194, 44247, -1000, -87, 381, -97, 17965, 1731, 1276,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41, -1000,
	-1000, -1000, -1000, -1000, 1879, -112, -1000, -1000, -1000, 144,
	-400, -196, -204, -1000, -1000, 18622, -1000, 17965, -1000, 17965,
	-1000, 17965, -1000, -1000, -1000, 44904, 1722, -1000, 1253, -1000,
	5460, -219, 1904, -1000, -37, -1000, -1000, -1000, 903, 1152,
	-1000, -1000, -1000, -1000, -1000, -1000, 1896, 44904, -1000, 454,
	-1000, -1000, -99, -122, 793, -1000, -1000, -1000, -1000, -1000,
	1341, 1331, 1386, -1000, 44904, -1000, 44247, -220, 690, 7451,
	-1000, 1900, 1897, 2354, -1000, -1000, -1000, -1000, -1000, -1000,
	-448, 1250, 291, -1000, -1000, 144, -1000, 17965, -1000, 17965,
	-1000, 1276, -1000, -1000, 2211, 112, -1000, 2395, -1000, 2377,
	796, 796, -1000, 942, -448, -1000, -1000, 1386, 1386, -1000,
	-235, -1000, -1000, -1000, -1000, -1000, 418, 1046, -1000, -1000,
	-1000, -1000, -1000, 7451, -1000, -1000, -1000, 242, 242, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3015, 3013, 27, 1, 36, 35, 3011, 44, 111,
	211, 28, 209, 110, 3010, 189, 3008, 3007, 3006, 3004,
	2998, 2991, 2432, 2430, 2426, 2989, 2988, 2987, 2983, 2981,
	2978, 2975, 2972, 2970, 2965, 188, 178, 208, 2964, 2963,
	2960, 126, 204, 98, 94, 206, 2958, 2954, 87, 2953,
	2952, 2950, 201, 200, 194, 859, 2943, 198, 133, 53,
	2937, 2934, 2930, 2929, 2928, 2927, 2925, 2922, 2918, 2913,
	2910, 2908, 2907, 2906, 2904, 2903, 2901, 2900, 293, 2895,
	2894, 20, 2888, 89, 2883, 2881, 2880, 2877, 2869, 15,
	2868, 2867, 17, 43, 2854, 2849, 67, 2848, 2845, 2844,
	2843, 2840, 19, 2834, 25, 2830, 38, 2820, 2819, 141,
	2818, 2816, 2810, 39, 2807, 2805, 2803, 2801, 2800, 2799,
	2794, 157, 2791, 2789, 2782, 187, 213, 2778, 2777, 183,
	125, 117, 2776, 2773, 113, 207, 2771, 138, 2770, 2769,
	2758, 169, 2756, 2153, 2753, 2752, 75, 85, 2749, 52,
	2748, 2742, 12, 103, 71, 10, 97, 99, 2731, 2729,
	73, 96, 2728, 131, 2726, 2725, 114, 93, 2721, 115,
	108, 2720, 2717, 14, 4, 2703, 51, 11, 6, 76,
	2700, 2698, 119, 2697, 2692, 2689, 106, 2676, 2672, 629,
	2670, 107, 150, 116, 83, 2661, 48, 58, 2654, 2653,
	2652, 2651, 2649, 55, 2648, 2647, 2642, 154, 159, 185,
	2638, 45, 86, 54, 147, 2637, 63, 91, 210, 184,
	2633, 2631, 153, 152, 2628, 2627, 68, 46, 41, 2626,
	124, 144, 136, 61, 123, 148, 2623, 2620, 66, 82,
	2618, 2617, 2613, 2612, 186, 2611, 2606, 77, 2602, 56,
	2599, 199, 2597, 16, 72, 2596, 42, 179, 2591, 79,
	2582, 2578, 74, 146, 78, 37, 2576, 176, 182, 143,
	177, 2575, 2573, 62, 2572, 2568, 2567, 202, 333, 2566,
	2565, 100, 192, 158, 167, 104, 2562, 352, 2559, 2545,
	134, 2, 4321, 2543, 40, 175, 2540, 2538, 5525, 160,
	49, 24, 2537, 140, 2536, 2535, 2527, 2520, 225, 203,
	127, 173, 70, 2517, 2516, 2511, 18, 2510, 2509, 2508,
	2506, 2501, 2500, 109, 34, 33, 32, 251, 84, 7,
	112, 172, 174, 81, 2498, 2496, 2495, 139, 101, 2494,
	181, 180, 142, 171, 2490, 193, 163, 132, 2489, 102,
	30, 2488, 2475, 2471, 2470, 105, 2468, 2466, 2465, 2464,
	170, 155, 137, 90, 2462, 92, 135, 162, 161, 59,
	2460, 65, 2459, 2458, 29, 205, 26, 2457, 13, 118,
	168, 2456, 4030, 195, 2454, 21, 346, 164, 2453, 2452,
	3, 5, 8, 2450, 2449, 2448, 2446, 151, 2445, 2443,
	2440, 2439, 23, 50, 22, 9, 129, 88, 2436, 2434,
	156, 2424, 2419, 3078, 0, 145, 2412, 212,
}

//line sql.y:8007
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	259, 382, 383, 383, 257, 257, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 415, 415, 184, 184, 182, 182, 183,
	183, 262, 262, 25, 266, 266, 268, 268, 268, 268,
	258, 258, 258, 26, 26, 267, 267, 269, 269, 269,
	272, 272, 272, 272, 311, 311, 311, 27, 27, 27,
	27, 27, 127, 127, 385, 385, 384, 378, 378, 377,
	377, 376, 381, 381, 380, 380, 379, 39, 40, 49,
	49, 49, 49, 50, 51, 386, 386, 351, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 353, 353, 339, 339, 352, 352,
	352, 352, 352, 352, 352, 338, 338, 138, 138, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 401, 401, 401, 400,
	400, 237, 237, 237, 237, 237, 237, 237, 237, 148,
	148, 160, 160, 160, 160, 160, 146, 146, 147, 145,
	145, 145, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 159, 159, 155, 155, 155, 156, 156, 156, 157,
	157, 402, 402, 402, 402, 316, 316, 316, 316, 319,
	319, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	318, 318, 318, 318, 318, 318, 318, 320, 320, 320,
	320, 320, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 322, 322,
	322, 322, 322, 322, 322, 322, 337, 337, 323, 323,
	331, 331, 332, 332, 333, 333, 333, 334, 334, 334,
	335, 335, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 330, 330, 329, 329, 329, 340, 365, 365, 364,
	364, 362, 362, 362, 362, 362, 362, 362, 362, 349,
	349, 359, 359, 359, 359, 359, 348, 348, 344, 344,
	344, 345, 345, 346, 346, 343, 343, 347, 347, 361,
	361, 360, 360, 341, 341, 342, 342, 367, 403, 403,
	403, 403, 403, 404, 404, 368, 393, 395, 395, 395,
	394, 394, 391, 392, 390, 390, 390, 390, 390, 83,
	83, 83, 285, 285, 286, 286, 357, 357, 356, 356,
	356, 358, 358, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 280, 280, 280, 389, 389, 389,
	389, 389, 389, 388, 388, 388, 354, 354, 354, 387,
	387, 58, 58, 217, 217, 406, 406, 407, 407, 407,
	46, 46, 46, 46, 46, 46, 45, 45, 45, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	47, 47, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	109, 109, 110, 110, 110, 110, 112, 112, 112, 370,
	370, 59, 59, 3, 3, 172, 174, 175, 175, 173,
	173, 173, 173, 173, 173, 61, 61, 60, 60, 177,
	176, 178, 178, 178, 1, 1, 2, 2, 4, 4,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 336, 336, 336, 369, 369, 371, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 115, 114,
	114, 113, 116, 116, 116, 116, 116, 116, 116, 116,
	373, 373, 373, 62, 62, 374, 324, 325, 326, 5,
	6, 350, 372, 123, 123, 29, 38, 38, 30, 30,
	30, 30, 31, 31, 63, 64, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	279, 279, 288, 288, 278, 278, 303, 303, 303, 281,
	281, 281, 282, 282, 399, 399, 399, 275, 275, 66,
	66, 66, 304, 304, 304, 304, 68, 68, 408, 408,
	409, 409, 410, 410, 410, 69, 70, 70, 306, 306,
	307, 307, 71, 72, 84, 84, 84, 84, 84, 84,
	84, 85, 85, 85, 85, 108, 108, 108, 15, 15,
	15, 15, 80, 80, 80, 14, 14, 17, 67, 67,
	74, 396, 396, 397, 398, 398, 398, 398, 75, 77,
	32, 32, 32, 32, 32, 32, 133, 133, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	128, 128, 128, 122, 122, 416, 78, 79, 79, 126,
	126, 126, 119, 119, 119, 125, 125, 125, 16, 16,
	18, 261, 261, 19, 19, 130, 130, 132, 132, 132,
	132, 132, 134, 134, 134, 134, 134, 134, 134, 129,
	129, 131, 131, 131, 131, 296, 296, 296, 295, 295,
	166, 166, 168, 167, 167, 169, 169, 170, 170, 170,
	170, 215, 215, 192, 192, 254, 254, 255, 255, 253,
	253, 260, 260, 256, 256, 256, 256, 263, 263, 171,
	171, 171, 171, 179, 179, 180, 180, 181, 181, 305,
	305, 301, 301, 301, 300, 300, 185, 185, 185, 187,
	186, 186, 186, 186, 188, 188, 190, 190, 189, 189,
	191, 196, 196, 195, 195, 193, 193, 193, 193, 194,
	194, 194, 194, 197, 197, 143, 143, 143, 143, 143,
	143, 143, 158, 158, 158, 158, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 244, 244, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 152, 220, 220,
	219, 219, 86, 86, 86, 87, 87, 88, 88, 88,
	88, 88, 89, 89, 89, 89, 89, 144, 144, 91,
	91, 90, 90, 210, 210, 293, 293, 92, 93, 93,
	96, 96, 95, 94, 94, 100, 100, 97, 97, 99,
	99, 98, 101, 101, 102, 103, 103, 276, 276, 198,
	198, 206, 206, 206, 206, 199, 199, 199, 199, 199,
	199, 199, 207, 207, 207, 214, 208, 208, 204, 204,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 163, 163, 163, 163,
	225, 225, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 164,
	164, 164, 164, 165, 165, 165, 165, 165, 165, 165,
	313, 313, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 417, 417, 327, 327, 327, 327, 205,
	205, 205, 205, 205, 124, 124, 124, 124, 124, 310,
	310, 310, 314, 314, 314, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	315, 315, 223, 223, 120, 120, 221, 221, 222, 224,
	224, 216, 216, 216, 216, 218, 218, 201, 201, 201,
	226, 226, 227, 227, 104, 105, 105, 106, 106, 228,
	228, 230, 229, 229, 231, 232, 232, 232, 233, 233,
	234, 234, 234, 48, 48, 48, 48, 48, 43, 43,
	43, 43, 44, 44, 44, 44, 135, 135, 135, 135,
	137, 137, 136, 136, 81, 81, 82, 82, 82, 141,
	141, 142, 142, 142, 139, 139, 140, 140, 251, 251,
	235, 235, 235, 242, 242, 242, 238, 238, 240, 240,
	240, 241, 241, 241, 239, 248, 248, 250, 250, 249,
	249, 245, 245, 246, 246, 247, 247, 247, 243, 243,
	200, 200, 200, 200, 200, 252, 252, 252, 252, 264,
	264, 211, 211, 213, 213, 212, 212, 162, 265, 265,
	273, 270, 270, 271, 271, 297, 297, 297, 274, 274,
	287, 287, 283, 283, 284, 284, 277, 277, 289, 289,
	289, 76, 209, 209, 366, 366, 363, 292, 292, 294,
	294, 298, 298, 302, 302, 299, 299, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 413, 414,
	308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 1, 3, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 2, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 2, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 4, 4, 4, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 1, 6, 3, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 0,
	1, 2, 5, 0, 3, 0, 1, 4, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 6, 8, 6, 5, 4, 10, 2,
	2, 1, 2, 2, 2, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 8, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 6, 5, 9,
	6, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-65, -66, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	225, -50, -40, 226, -51, 228, 227, 265, 229, 249,
	258, 75, 313, 314, 316, 317, 318, 319, -108, 619,
	263, 264, 231, 37, 46, 34, 35, 38, 235, 271,
	272, 234, -10, -35, 9, -413, 12, 451, 260, 259,
	29, -12, 513, 87, -79, -412, 667, -251, -235, 23,
	34, 30, -234, -230, -126, -235, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -351, -353, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-375, -45, -42, 230, 227, 275, 123, 124, 265, 266,
	267, 229, 249, 264, 268, 263, 284, -41, 82, 34,
	513, 516, -358, 226, 232, 233, 228, 452, 126, 125,
	76, -355, 372, 546, 637, -57, 639, 101, 104, 638,
	45, 239, 640, 641, 642, 553, 643, 248, 644, 645,
	646, 647, 653, 594, 654, 655, 656, 127, 8, -78,
	-302, -298, 91, -291, 510, 251, 544, 545, 300, 82,
	42, 519, 369, 372, 546, 481, 637, 313, 329, 323,
	486, 487, 488, 352, 344, 511, 547, 520, 303, 252,
	288, 631, 342, 135, 639, 307, 548, 266, 377, 378,
	549, 379, 101, 316, 418, 652, 306, 550, 650, 104,
	638, 321, 80, 480, 52, 634, 45, 261, 340, 234,
	336, 640, 289, 551, 522, 282, 126, 123, 659, 37,
	332, 51, 31, 649, 125, 50, 641, 150, 552, 642,
	553, 381, 359, 625, 49, 382, 267, 554, 85, 272,
	515, 310, 633, 383, 500, 333, 384, 299, 648, 231,
	555, 614, 606, 607, 385, 386, 626, 364, 360, 365,
	502, 556, 410, 485, 387, 610, 611, 666, 53, 557,
	558, 627, 124, 559, 79, 643, 81, 327, 328, 560,
	297, 250, 505, 506, 412, 356, 463, 470, 471, 111,
	112, 466, 113, 472, 114, 473, 474, 475, 464, 115,
	108, 465, 476, 477, 357, 358, 116, 478, 110, 109,
	467, 469, 117, 479, 248, 36, 388, 512, 301, 59,
	305, 276, 413, 47, 362, 663, 46, 621, 507, 561,
	624, 355, 351, 460, 54, 562, 563, 564, 565, 482,
	644, 354, 326, 350, 658, 4, 294, 483, 645, 63,
	233, 367, 366, 368, 283, 409, 347, 566, 567, 568,
	255, 83, 569, 337, 22, 570, 571, 389, 290, 572,
	57, 573, 574, 416, 264, 575, 55, 646, 40, 576,
	269, 660, 647, 577, 578, 579, 620, 580, 271, 581,
	391, 582, 608, 609, 390, 361, 363, 508, 278, 392,
	236, 514, 583, 311, 331, 268, 651, 584, 256, 496,
	497, 498, 499, 632, 504, 503, 270, 275, 263, 417,
	257, 585, 586, 587, 588, 589, 304, 605, 590, 591,
	317, 653, 461, 44, 592, 593, 594, 595, 596, 298,
	293, 411, 420, 62, 84, 374, 597, 598, 630, 325,
	322, 291, 599, 314, 56, 654, 655, 656, 285, 657,
	489, 490, 491, 492, 10, 664, 665, 484, 394, 127,
	295, 296, 48, 348, 277, 600, 308, 601, 338, 339,
	353, 324, 349, 617, 315, 615, 279, 395, 462, 265,
	602, 419, 292, 370, 375, 309, 518, 501, 284, 396,
	629, 517, 493, 494, 346, 343, 286, 495, 603, 619,
	397, 240, 280, 281, 604, 616, 398, 399, 302, 400,
	401, 402, 403, 404, 407, 408, 406, 312, 405, 618,
	612, 613, 287, 516, 320, 341, 376, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 459, 238, -78, 238, -189,
	-298, 238, 238, -270, 408, 378, -288, 380, 393, 388,
	398, 386, -279, 389, 391, 278, -399, 410, 238, 395,
	225, 381, 390, 399, 400, 302, 406, 401, 312, 405,
	287, 402, 403, 404, 407, -382, 177, 642, 657, 135,
	345, 385, 383, 411, 621, 91, -304, 91, 92, 93,
	-291, 315, -306, 320, -292, -382, -291, 318, -78, -78,
	-308, -308, -128, 621, 623, -208, -143, 143, -158, -161,
	-149, -153, -202, -203, -204, -205, -159, -218, -257, 166,
	167, 174, 144, -214, -162, 27, 509, 453, 452, 177,
	32, -152, 220, 69, 70, 455, 146, 58, 12, 428,
	429, -160, 423, 430, 425, 480, 482, 483, 484, 481,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	485, 457, 458, 118, 459, 108, 110, 109, 460, 461,
	462, 342, 507, 508, 502, 505, 506, 504, 503, 357,
	358, 463, 464, 465, 111, 112, 113, 114, 115, 116,
	117, 466, 469, 467, 468, 470, 471, 472, 477, 478,
	473, 474, 475, 476, 479, -88, -100, 535, 534, -101,
	-150, -151, -164, -165, -292, -298, 243, 422, 237, 172,
	451, -154, -147, -216, 107, 92, 93, -8, -212, 421,
	426, 427, 431, 424, 521, 523, 538, 539, 541, 526,
	531, 530, 533, 496, 497, 498, 499, 500, 501, 606,
	607, 608, 609, 610, 611, 612, 613, -382, -291, 91,
	-156, -155, -198, 94, 99, 102, 103, 105, -405, 261,
	338, 339, 119, -413, 635, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 394, 394, -189, -78, -78,
	-78, -78, -228, -126, -230, -10, -8, -413, 9, -78,
	-8, -9, -13, -35, -37, 540, -36, -298, 100, -235,
	-251, 13, 162, 43, 51, -233, -234, -12, -8, -143,
	20, 24, 25, -131, 168, -143, -298, -131, -277, 242,
	-78, -78, -266, -311, 315, -268, 411, 621, 410, -258,
	-271, 91, -257, -270, 409, -352, 159, -338, -342, -292,
	253, -368, 249, -189, -361, -360, -292, -413, -127, -287,
	239, 247, 246, 136, -386, 139, 295, 422, 237, -52,
	-53, -54, -270, 176, 641, -109, 270, 274, 88, 88,
	-342, -341, -340, -387, 274, 253, -367, -359, 245, 254,
	-348, 246, 247, -343, 239, 137, -387, -343, 244, 254,
	249, 253, 274, 274, 127, 274, 127, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 269, -349, 151, -349,
	517, 517, -355, -387, 249, 239, -387, -387, 245, -289,
	-343, 241, 26, 241, 36, 36, -349, -349, -349, -270,
	176, -349, -349, -349, -349, 282, 282, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, 238, -386, -135, 405, 302, 82,
	-55, 284, -38, -189, -287, 239, 240, -386, 271, -189,
	221, -189, -189, -281, 159, 16, -281, -278, 394, 392,
	379, 384, -281, -281, -281, -281, 285, 377, -344, 239,
	36, 250, 394, 285, 377, 285, 286, 285, 286, 387,
	397, 285, -303, 15, 162, 422, 382, 386, 278, 238,
	279, 240, 396, 286, -303, 90, -282, 159, 285, 394,
	281, -281, -281, -309, -413, -294, -292, -290, 230, 24,
	142, 26, 28, 145, 177, 130, 20, 146, 38, 232,
	345, 249, 176, 245, 452, 225, 73, 521, 423, 425,
	421, 428, 454, 455, 422, 380, 32, 14, 523, 29,
	259, 25, 39, 170, 227, 149, 524, 262, 27, 260,
	118, 121, 526, 23, 76, 254, 15, 247, 41, 17,
	527, 528, 18, 243, 242, 162, 239, 71, 12, 220,
	30, 158, 67, 529, 137, 530, 531, 532, 533, 131,
	69, 159, 21, 661, 426, 427, 34, 622, 509, 273,
	172, 74, 60, 623, 143, 424, 534, 535, 119, 536,
	122, 77, 628, 139, 19, 72, 43, 537, 274, 538,
	244, 662, 539, 414, 540, 160, 228, 451, 70, 161,
	635, 541, 636, 237, 393, 9, 456, 33, 258, 246,
	129, 68, 542, 238, 148, 457, 458, 241, 132, 120,
	8, 136, 35, 13, 75, 78, 429, 430, 431, 58,
	128, 513, 147, 16, 543, 415, 141, -382, 624, -309,
	-309, 33, 92, -408, -409, -410, 513, 414, 241, -292,
	-189, -84, 614, 229, -85, 620, 24, 236, -133, 394,
	-121, 177, 642, 625, 626, 627, 624, 391, 632, 630,
	628, 285, 629, 88, 139, 141, 142, 4, -143, 158,
	-199, 151, 152, 153, 154, 155, 156, 157, 162, 143,
	145, 159, -244, 140, 163, 164, 165, 166, 167, 168,
	169, 171, 170, 172, 173, 160, 161, 176, 223, 224,
	-153, -153, -153, -153, -214, -220, -219, -413, -216, -382,
	-291, -298, -413, -413, -153, -276, -413, -413, -149, -413,
	-413, -413, -223, -143, -413, -413, -417, -413, -417, -417,
	-327, -413, -327, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, 221,
	-413, -413, -413, -413, -413, -327, -327, -327, -327, -327,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, 103, 99, 102, 94, -218, 105,
	90, 90, 90, 90, -8, -9, -208, -413, -308, -396,
	-397, -192, -189, -413, 302, -292, -292, 271, -233, -12,
	-8, -228, -234, -230, -8, -78, -119, -132, 64, 65,
	-134, 25, 39, 68, 66, 24, -414, 89, -414, -251,
	-414, 88, -37, -254, 87, 62, 44, 90, 90, 88,
	22, -229, -231, -143, 15, -296, 4, -295, 26, -292,
	90, 221, 15, -190, 30, -189, -277, -277, 88, 91,
	315, -267, -269, 412, 414, 151, -297, -292, 90, 32,
	89, 88, -189, -316, -319, -321, -320, -322, -317, -318,
	342, 343, 177, 346, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 359, 33, 261, 338, 339, 340, 341,
	360, 361, 362, 363, 365, 366, 367, 368, 323, 344,
	511, 324, 325, 326, 327, 328, 329, 331, 332, 335,
	333, 334, 336, 337, -383, -382, 87, 89, 88, -323,
	87, -143, -135, 238, -382, 239, 239, 239, -78, 451,
	-349, -349, -349, 269, 20, -45, -42, -375, 19, -41,
	-42, 230, 123, 124, 227, 87, -338, 87, -347, -383,
	-382, 87, 137, 244, 136, -346, -343, -346, -347, -382,
	-216, -382, 137, 137, -382, -382, -263, -292, -263, -263,
	24, -263, 24, -263, 24, 96, -292, -263, 24, -263,
	24, -263, 24, -263, 24, -263, 24, 32, 79, 80,
	81, 32, 83, 84, 85, -216, -382, -382, -216, -338,
	-216, -189, -382, -270, 96, 96, 96, -349, -349, 96,
	90, 90, 90, -349, -349, 96, 90, -300, -298, 90,
	90, -388, 255, 299, 301, 96, 96, 96, 96, 32,
	90, -389, 32, 649, 648, 650, 651, 652, 90, 96,
	32, 96, 32, 96, -292, 87, -189, -141, 289, 225,
	227, 230, 77, 90, 305, 306, 303, 308, 309, 151,
	45, 88, 241, 238, -382, -283, 243, -283, -292, -299,
	-298, -290, 90, -143, -345, 15, 162, -303, -303, -281,
	-189, -345, -303, -281, -189, -281, -281, -281, -281, -303,
	-303, -303, -281, -298, -298, -189, -189, -189, -189, -189,
	-189, -189, -309, -282, -281, 624, 90, -275, 15, 77,
	-309, -309, 88, 321, 415, 416, -307, 318, -80, -292,
	90, -15, -11, -23, -22, -24, 151, -15, 88, 513,
	-182, -189, 624, 624, 624, 624, 624, 624, -143, -143,
	-143, -143, 536, -206, 119, 143, 120, 121, -161, -207,
	-212, -214, 106, 162, 145, 159, -244, -149, -153, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -310, -292, 90, 177, -157, -156, 105, -405,
	-157, 510, 88, -219, 221, -143, -143, -382, -143, -292,
	-129, -131, -129, -143, -221, -222, 147, -216, -143, -414,
	-414, 96, 105, 168, -125, 25, 39, -125, -125, -125,
	-125, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -125, -292, -292, -118, -117, 433, 434, 435, 436,
	438, 439, 440, 443, 444, 448, 449, 432, 450, 437,
	442, 445, 446, 447, 441, 341, -143, -143, -143, -143,
	-143, -143, -86, -143, 130, 131, 132, -208, -143, -149,
	-143, -143, -143, -414, -143, -143, -143, -209, -208, -381,
	-380, -379, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -414, -143, -163, -147, 96,
	-259, 105, 92, -143, -143, -130, -129, -294, -299, -290,
	-291, -129, -130, -130, -129, -129, -143, -143, -143, -143,
	-143, -143, -143, -143, -414, -143, -143, -143, -143, -143,
	-251, -414, -208, 88, -398, 414, 415, 622, -301, 274,
	-300, 26, -209, 90, 15, -261, 78, -292, -233, -233,
	64, 65, 60, -129, -134, -414, -36, 26, -253, -292,
	63, 90, -328, -270, 369, 370, 177, -143, -143, 88,
	-232, 28, 29, -189, -295, 168, -299, -189, -262, 274,
	-189, -167, -169, -170, -171, -192, -215, -413, -172, -8,
	532, 529, 15, -182, -183, -191, -298, -268, -311, -267,
	88, 413, 415, 416, 77, 122, -143, -329, 176, -357,
	-356, -355, -338, -340, -341, -342, 89, -329, -334, 375,
	374, -323, -323, -323, -323, -323, -328, -328, -328, -328,
	87, 87, -323, -323, -323, -323, -331, 87, -331, -331,
	-332, -331, 87, -332, -333, 87, -333, -368, -143, -365,
	-364, -362, -363, 248, 101, 604, 560, 513, 553, 594,
	78, -360, -232, 96, -414, -141, -284, 243, -366, -363,
	-382, -382, -382, -284, 91, 90, 91, 90, 91, 90,
	-110, -59, -1, 661, 662, 663, 88, 20, -339, -338,
	-58, 299, -371, -372, 274, -367, -361, -347, 137, -346,
	-347, -347, -382, 88, 30, 127, 127, 127, 127, 513,
	227, 33, -285, 552, 143, 604, 560, -338, -58, 241,
	241, -310, -310, -310, 90, 90, -280, 657, -182, -137,
	291, 151, 280, 280, 238, 238, 293, -189, 304, 307,
	305, 306, 303, 308, 309, 24, 24, 24, 24, 24,
	292, 294, 296, 282, -189, -189, -283, 77, -184, -189,
	27, -298, -189, -281, -281, -189, -281, -281, -189, -410,
	322, -292, 356, 615, 616, 618, 617, -121, 414, 88,
	513, 23, -122, 23, -413, 119, 120, 121, -207, -149,
	-153, -149, 142, 262, -413, -216, -414, -294, 26, 88,
	78, -414, 88, 88, -414, -414, 88, 15, -224, -222,
	149, -143, -414, 88, -414, -414, -414, -208, -143, -143,
	-143, -143, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -208, 88, 88, 15, -314, 26, -414, -414,
	-414, -414, -414, -223, -414, 15, -414, 78, 88, 162,
	88, -414, -414, -414, 88, 88, -414, -414, 88, 88,
	-414, 88, 88, 88, -414, 88, 88, 88, 88, -414,
	-414, -414, -414, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -414, -93, 537, -414, -414, 88, -414,
	88, -414, -413, 221, -414, -414, -414, -414, -414, 88,
	88, 88, 88, 88, 88, -414, -414, -414, 88, 88,
	-414, 88, -414, 88, -414, -397, 621, 415, -196, -195,
	-193, 75, 242, 76, -413, -300, -414, -157, -259, -260,
	-259, -201, -292, 96, 105, -235, -166, -168, 15, -134,
	-214, 89, 88, -328, -239, -245, -278, -292, 90, 177,
	-330, 177, -330, 369, 370, -231, 221, -197, 16, -200,
	33, 58, -11, -413, -413, 33, 88, -185, -187, -186,
	-188, 67, 71, 73, 68, 69, 70, 74, -305, 26,
	-8, -167, -8, -413, -189, -182, -415, 15, 78, -415,
	88, 221, -269, -272, 417, 414, 420, -382, 90, -109,
	88, -355, -342, -236, -138, 41, -335, 376, -328, 520,
	-328, -337, 90, -337, 96, 96, 96, 89, -48, -43,
	-44, 34, 82, -362, -349, 90, 40, -349, -349, -292,
	89, -232, -137, -189, 143, 77, -366, -366, -366, -298,
	-2, 660, 666, 137, 87, 379, 19, -253, 88, 89,
	-217, 300, 89, -111, -292, 89, 87, -347, -347, -292,
	-413, 238, 32, 32, 604, 560, 552, -58, -217, -216,
	-382, -329, 659, 658, 89, 240, 298, -142, 428, -139,
	90, 91, -189, -189, -189, -189, -189, 230, 227, 402,
	-406, 310, -406, 283, 241, -182, -189, 88, -83, 257,
	252, -303, -303, 34, -189, 414, 633, 631, -143, 142,
	262, -161, -153, -149, -312, 177, 342, 261, 340, 336,
	356, 347, 374, 338, 375, 333, 332, 331, -312, -310,
	-208, -131, -143, -143, 150, -143, 148, -143, -414, -414,
	-414, -414, -414, -228, -143, -143, -143, -414, 177, 342,
	15, -143, -310, -143, -143, -143, -143, -143, -379, -143,
	-208, -143, -208, -143, -143, -143, -143, -143, -380, -380,
	-380, -380, -380, -208, -208, -208, -208, -413, -292, -96,
	-95, -94, 587, 242, -93, -163, -96, -163, -130, -294,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-193, -343, -343, -343, -263, 88, -274, 23, 15, 58,
	58, -166, -197, -167, -134, -292, -242, 614, -248, 47,
	-246, -247, 48, -243, 49, 57, -330, -330, 168, -233,
	-143, -264, 77, -265, -273, -216, -211, -213, -212, -413,
	-252, -414, -292, -263, -265, -169, -170, -170, -169, -170,
	67, 67, 67, 72, 67, 72, 67, -186, -298, -414,
	-143, -301, 78, -167, -167, -191, -298, 168, 414, 418,
	419, -355, -404, 119, 143, 32, 77, 372, 101, -402,
	176, 549, 599, 604, 560, 553, 594, -403, 244, 136,
	137, 256, 26, 42, 89, 88, 89, 88, 89, 89,
	88, -286, -285, -44, -43, -349, -349, 96, -382, 90,
	90, 240, 27, -189, 77, 77, 77, -112, 664, 96,
	87, -3, 82, -143, 87, 20, -338, -216, -373, -324,
	-374, -325, -326, -5, -6, -350, -115, 58, 101, -62,
	45, 239, 644, 645, 127, -413, 657, -365, -253, -369,
	-371, -189, -146, -413, -145, -147, -154, 166, 167, 261,
	338, 339, -217, -189, -136, 289, 297, 87, -140, 92,
	-385, 78, 280, 372, 280, 90, -407, 311, 90, -407,
	-189, -83, -48, -189, -281, -281, 34, -382, -414, -161,
	-153, -124, 162, 513, -315, 519, -323, -323, -323, -333,
	-323, 328, -323, 328, -323, -414, -414, -414, 88, -414,
	23, -414, -143, 88, -120, 456, 88, 88, -414, 87,
	87, -143, -414, -414, -414, 88, -414, -414, -414, -414,
	-414, 88, -414, -414, -414, 88, -313, 605, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -92, -293,
	-292, -93, 569, 569, -414, -93, -225, 88, -414, -414,
	88, -414, 88, 88, -414, 88, -414, 88, -414, -414,
	-414, -414, 88, -194, 23, -194, -194, -414, -259, -189,
	-197, -226, 17, -239, 52, 348, -250, -249, 56, 48,
	-247, 20, 50, 20, 31, -264, 88, 151, 88, -414,
	-414, 88, 58, 221, -414, -197, -180, -179, 77, 78,
	-181, 77, -179, 67, 67, -254, 88, -262, -167, -197,
	-197, 221, 119, -413, -148, -160, -146, 13, 90, 90,
	-382, -401, 648, 649, 32, 96, -349, -349, 137, 137,
	-189, 87, -328, 90, -328, 96, 96, 32, 83, 84,
	85, 32, 79, 80, 81, -189, -189, -189, -189, -370,
	87, 20, -143, 87, 151, 89, -253, -253, 276, 162,
	-349, 642, 282, 282, -349, -349, -349, -114, -113, 664,
	89, -414, 88, -336, 513, 516, -143, -155, -155, -254,
	89, -378, 513, -384, -292, -292, -292, -292, 96, 98,
	-414, 511, 74, 514, -414, -328, -143, -143, -143, -233,
	90, -143, -143, 96, 96, -414, -143, -208, -143, -414,
	-177, -176, -178, 625, 119, 32, -312, -414, -210, 274,
	-99, -98, -97, 15, -414, -143, -143, -143, -143, -143,
	-143, -143, -413, 67, 19, 17, -413, -413, -301, -226,
	-227, 18, 20, -240, 54, -238, 53, -238, -249, 20,
	20, 90, 20, 90, 137, -273, -143, -213, 58, -11,
	-292, -211, -292, -228, -143, 87, -143, -157, -197, -197,
	-143, -203, 480, 482, 483, 484, 481, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 485, 459, 108,
	110, 109, 460, 461, 462, 342, 507, 508, 502, 505,
	506, 504, 503, 357, 358, 463, 464, 465, 111, 112,
	113, 114, 115, 116, 117, 466, 469, 467, 470, 471,
	472, 477, 478, 473, 474, 475, 476, 479, 496, 497,
	498, 499, 500, 501, 606, 607, 608, 609, 610, 611,
	612, 613, 90, 90, 87, -143, 89, 89, -254, -369,
	-59, 89, -255, -253, 96, 89, 277, -212, -413, 90,
	-349, -349, -349, 96, 96, -300, -414, 88, -292, -403,
	-371, 517, 517, -414, 26, -377, -376, -294, 87, 78,
	63, 512, 515, -414, -414, 88, -414, -414, -414, 89,
	89, -414, -414, -414, 88, -414, -176, -178, -414, 77,
	-157, -228, 20, -96, 299, 301, -96, -414, 88, -414,
	-414, 88, -414, 88, -414, -414, -256, -414, -292, 244,
	20, 20, -256, -256, -196, -227, -106, -105, -104, 543,
	-143, -208, -241, 55, 77, 122, 90, 90, 90, 13,
	-211, 221, -233, -253, -174, 379, -228, -414, -253, 89,
	26, 89, 666, 137, 89, -212, -123, -413, 273, -300,
	90, 90, -113, -116, -11, 88, 151, -253, -189, 63,
	-143, -208, -414, 77, 524, 625, -91, -90, -87, 636,
	662, -208, -93, -93, -143, -143, -143, 88, -414, -414,
	-414, -106, 88, -103, -102, -292, 77, 122, -265, -292,
	89, -414, -413, -233, 89, -237, -11, 87, -3, 273,
	-324, -374, -325, -326, -5, -6, -350, -81, 513, -376,
	-354, -294, 90, 96, 89, 513, -414, -414, -89, 145,
	634, 602, -144, -155, -152, 220, -414, 88, -414, 88,
	-414, 88, -292, 244, -104, 88, 26, -301, -175, -173,
	-292, 566, -394, -393, 509, -404, -400, 119, 143, 101,
	-402, 604, 560, 128, 129, -81, -143, 87, -414, -82,
	288, 621, -385, 514, -89, 635, 580, 555, 580, 555,
	-143, -143, -143, -102, -413, -414, 88, 23, -316, -61,
	577, -391, -392, 77, -395, 385, 576, 597, 119, 90,
	89, -253, 249, -378, 515, 142, -414, 88, -414, 88,
	-414, -92, -173, 573, -329, -157, -392, 77, -391, 77,
	14, 13, -4, 665, 89, 290, -89, -143, -143, -414,
	-60, 27, -174, -390, 257, 252, 255, 33, -390, 96,
	-4, -414, -414, 577, 251, 32, 119, -157, -177, -176,
	-176,
}

var yyDef = [...]int{
	875, -2, -2, 877, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 875, 875, 875, 0, 875, 0, 0,
	875, -2, -2, 875, 1483, 0, 875, 0, 0, 0,
	-2, 790, 796, 0, 805, -2, 0, 0, 875, 875,
	2040, 2040, 870, 0, 0, 0, 0, 0, 875, 875,
	875, 875, 1349, 51, 875, 0, 86, 87, 825, 826,
	827, 66, 0, 2038, 876, 1, 3, 72, 76, 0,
	0, 0, 59, 1358, 0, 79, 0, 0, 879, 0,
	0, 1466, 875, 875, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 600, 523,
	575, 521, 560, -2, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 399, 399,
	0, 0, -2, 509, 509, 509, 1468, 0, 0, 0,
	557, 461, 399, 399, 399, 0, 399, 399, 399, 399,
	0, 0, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 1376,
	166, 1484, 1481, 1482, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 0, 1460, 0, 713,
	978, 0, 0, 779, 717, 779, 0, 779, 779, 779,
	779, 0, 0, 0, 727, 0, 0, 0, 0, 776,
	0, 743, 744, 0, 776, 0, 750, 782, 0, 0,
	756, 779, 779, 759, 760, 2041, 0, 2041, 2041, 1451,
	0, 773, 771, 785, 786, 41, 789, 792, 793, 794,
	795, 798, 0, 809, 812, 1477, 1478, 0, 814, 821,
	838, 839, 0, 871, 872, 46, 1126, 0, 1000, 1005,
	1016, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 0,
	0, 0, 0, 1044, 1045, 0, 0, 0, 0, 0,
	1107, 1053, 0, 0, 0, 0, 1322, 0, 0, 1283,
	1283, 1141, 1283, 1285, 1285, 1685, 1821, 1829, 1949, 1647,
	1652, 1653, 1654, 1942, 1943, 1944, 1945, 1984, 1985, 1989,
	1745, 0, 0, 0, 2037, 1782, 1790, 1791, 1815, 1914,
	1970, 1664, 1810, 1879, 1742, 1764, 1765, 1896, 1897, 1786,
	1787, 1768, 1780, 1783, 1771, 1772, 1774, 1776, 1781, 1788,
	1794, 1773, 1793, 1792, 0, 1769, 1770, 1775, 1785, 1789,
	1777, 1778, 1779, 1784, 1795, 0, 0, 0, 0, 0,
	1222, 1223, 1224, 1225, 0, 0, 0, 0, 0, 0,
	0, 291, 292, 1335, 1336, 44, 45, 1125, 1447, 1285,
	1285, 1285, 1285, 1285, 1067, 1068, 1069, 1070, 1071, 1095,
	1096, 1102, 1103, 1891, 1892, 1893, 1894, 1726, 1979, 1734,
	1735, 1874, 1875, 1747, 1748, 2012, 2013, -2, -2, -2,
	232, 233, 234, 235, 236, 237, 238, 239, 0, 1689,
	1960, 1961, 228, 0, 0, 296, 297, 293, 294, 295,
	1109, 1110, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 2040, 0, 848, 0, 0, 0,
	0, 0, 1358, 0, 1350, 1349, 64, 0, 875, -2,
	0, 0, 0, 0, 48, 0, 53, 935, 878, 78,
	77, 1398, 0, 0, 0, 60, 1359, 68, 70, 1360,
	0, 880, 881, 0, 911, 915, 0, 0, 0, 1467,
	1466, 1466, 103, 0, 0, 104, 124, 125, 126, 0,
	0, 110, 111, 1453, 1454, 0, 0, 178, 179, 0,
	42, 426, 0, 174, 0, 419, 358, 0, 1376, 0,
	0, 0, 0, 0, 875, 0, 1461, 155, 156, 163,
	164, 165, 399, 399, 399, 572, 0, 0, 166, 166,
	530, 531, 532, 0, 0, -2, 424, 0, 510, 0,
	0, 413, 413, 417, 415, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 400, 0,
	570, 571, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 1470, 0, 547, 548, 0, 0, 0, 399,
	399, 0, 0, 0, 0, 399, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 1389, 0, 0, 0,
	-2, 0, 705, 0, 0, 0, 1462, 1462, 0, 712,
	0, 714, 715, 716, 0, 0, 718, 0, 776, 776,
	774, 775, 720, 721, 722, 723, 779, 0, 0, 408,
	409, 410, 776, 779, 0, 779, 779, 779, 779, 776,
	776, 776, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2041, 782, 779, 0, 751, 0, 752, 753,
	754, 757, 758, 761, 2042, 2043, 1479, 1480, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 2041, 2041, 765,
	769, 1452, 791, 797, 799, 800, 0, 0, 810, 813,
	832, 50, 1733, 820, 50, 822, 823, 824, 850, 851,
	856, 0, 0, 0, 0, 862, 863, 864, 0, 0,
	867, 868, 869, 0, 0, 0, 0, 0, 998, 0,
	0, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1017, 1018, 0, 0, 0,
	1040, 1041, 1042, 1043, 1046, 0, 1058, 0, 1060, 1331,
	-2, 0, 0, 0, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 1139, 0, 1140, 1142,
	1143, 0, 1144, 885, 885, 885, 885, 885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 895, 0,
	0, 895, 895, 0, 0, 221, 222, 223, 224, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 241, 242, 243, 244, 245,
	298, 246, 247, 248, 1125, 0, 0, 0, 47, 840,
	841, 0, 961, 1472, 0, 0, 891, 0, 58, 67,
	69, 1358, 62, 1358, 0, 897, 0, 0, -2, -2,
	898, 904, 905, 906, 907, 908, 55, 2039, 56, 0,
	75, 0, 49, 0, 0, 0, 0, 372, 1401, 0,
	0, 1351, 1352, 1355, 0, 912, 1827, 916, 0, 918,
	919, 0, 0, 101, 0, 977, 0, 0, 0, 112,
	0, 114, 115, 0, 0, 0, 383, 1455, 1456, 1457,
	-2, 406, 0, 383, 367, 306, 307, 308, 358, 310,
	358, 358, 358, 358, 372, 372, 372, 372, 341, 342,
	343, 344, 345, 0, 0, 327, 358, 358, 358, 358,
	348, 349, 350, 351, 352, 353, 354, 355, 311, 312,
	313, 314, 315, 316, 317, 318, 319, 360, 360, 360,
	360, 360, 364, 364, 0, 43, 0, 387, 0, 1355,
	0, 0, 1389, 1464, 1474, 0, 0, 0, 1464, 133,
	0, 0, 0, 573, 611, 524, 561, 574, 0, 527,
	528, -2, 0, 0, 509, 0, 511, 0, 407, 0,
	-2, 0, 417, 0, 413, 417, 414, 417, 405, 418,
	551, 552, 553, 0, 555, 556, 641, 947, 0, 0,
	0, 0, 0, 647, 648, 649, 0, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 0, 0, 0, 511,
	0, 558, 0, 0, 463, 464, 465, 0, 0, 468,
	469, 470, 471, 0, 0, 474, 475, 476, 964, 965,
	477, 478, 503, 504, 505, 479, 480, 481, 482, 483,
	484, 485, 497, 498, 499, 500, 501, 502, 486, 487,
	488, 489, 490, 491, 494, 0, 148, 1380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1462, 0, 0, 0, 0, 894, 979,
	1485, 1486, 780, 781, 0, 411, 412, 779, 779, 724,
	766, 0, 779, 728, 767, 729, 731, 730, 732, 745,
	746, 779, 735, 777, 778, 736, 737, 738, 739, 740,
	741, 742, 762, 747, 748, 749, 783, 0, 787, 788,
	763, 764, 0, 0, 803, 804, 0, 811, 835, 833,
	834, 836, 828, 829, 830, 831, 0, 837, 0, 0,
	853, 97, 858, 859, 860, 861, 873, 866, 1127, 995,
	996, 997, 0, 999, 1002, 0, 1111, 1113, 1004, 1006,
	1122, 1123, 1124, 0, 0, 0, 0, 0, 1010, 1014,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1036, 1299, 1300, 1301, 1055, 299, 300, 0,
	1056, 0, 0, 0, 0, 0, 0, 0, 1126, 1057,
	0, 909, 0, 0, 1329, 1326, 0, 0, 0, 1284,
	1286, 0, 0, 0, 0, 886, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1302, 0, 0, 0,
	0, 0, 1322, 0, 1062, 1063, 1064, 0, 0, 0,
	0, 0, 0, 1182, 0, 0, 0, 0, 1473, 0,
	143, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 1227,
	1228, 1229, 40, 0, 0, 0, 896, 1333, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 1445, 0, 0, 843, 844, 846, 0, 981, 0,
	962, 0, 0, 849, 0, 890, 0, 893, 61, 63,
	902, 903, 0, 920, 899, 57, 52, 0, 0, 939,
	1399, 372, 1421, 0, 381, 381, 378, 1361, 1362, 0,
	1354, 1356, 1357, 80, 917, 913, 0, 993, 0, 0,
	976, 0, 923, 925, 926, 927, 959, 0, 930, 931,
	0, 0, 0, 0, 0, 99, 978, 105, 0, 113,
	0, 0, 118, 119, 106, 107, 108, 109, 0, 600,
	-2, 458, 180, 182, 183, 184, 175, -2, 370, 368,
	369, 309, 372, 372, 335, 336, 337, 338, 339, 340,
	0, 0, 328, 329, 330, 331, 320, 0, 321, 322,
	323, 362, 0, 324, 325, 0, 326, 425, 0, 1363,
	388, 389, 391, 399, 0, 394, 395, 0, 399, 399,
	0, 420, 421, 0, 1355, 1380, 0, 0, 0, 1475,
	1474, 1474, 1474, 0, 168, 169, 170, 171, 172, 173,
	636, 0, 0, 612, 634, 635, 166, 0, 0, 176,
	513, 512, 0, 668, 0, 423, 0, 0, 417, 417,
	402, 403, 554, 0, 0, 643, 644, 645, 646, 0,
	0, 0, 540, 452, 0, 541, 542, 511, 513, 0,
	0, 383, 466, 467, 472, 473, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 588,
	589, 592, 594, 515, 598, 591, 593, 595, 515, 599,
	1377, 1378, 1379, 0, 0, 706, 0, 0, 449, 95,
	1463, 711, 776, 734, 768, 776, 726, 733, 755, 801,
	802, 807, 815, 816, 817, 818, 819, 857, 0, 0,
	0, 0, 865, 0, 0, 1003, 1112, 1114, 1007, 0,
	1011, 1015, 0, 0, 0, 1061, 1059, 1333, 0, 0,
	0, 1108, 0, 0, 1130, 1131, 0, 0, 0, 1327,
	0, 0, 1137, 0, 1287, 1288, 1145, 0, 0, 0,
	0, 0, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1349, 0, 0, 0, 0, 0, 1166, 1167,
	1168, 1169, 1170, 0, 1172, 0, 1173, 0, 0, 0,
	0, 1180, 1181, 1183, 0, 0, 1186, 1187, 0, 0,
	1188, 0, 0, 0, 1192, 0, 0, 0, 0, 1201,
	1202, 1203, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 1216, 0, 1090, 0, 0, 1090,
	0, 1128, 895, 0, 1289, 1290, 1291, 1292, 1293, 0,
	0, 0, 0, 0, 0, 1249, 1250, 1252, 0, 0,
	1255, 0, 1257, 0, 1446, 842, 845, 847, 933, 982,
	983, 0, 0, 0, 0, 963, 1471, 888, 889, 892,
	941, 0, 1337, 0, 0, 920, 993, 921, 0, 900,
	54, 936, 0, 1403, 1402, 1415, 1428, 381, 381, 375,
	376, 382, 377, 379, 380, 1353, 0, 1358, 0, 1439,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 969, 0, 0, 0, 0, 960,
	931, 0, 932, 0, -2, 0, 0, 93, 94, 0,
	0, 0, 116, 117, 0, 0, 123, 384, 385, 157,
	166, 460, 181, 433, 0, 0, 305, 371, 332, 333,
	334, 0, 356, 0, 0, 0, 0, 454, 129, 1367,
	1366, 399, 399, 390, 0, 393, 0, 0, 0, 1476,
	359, 422, 0, 147, 0, 0, 0, 0, 0, 153,
	606, 0, 0, 613, 0, 0, 0, 522, 0, 533,
	534, 0, 640, -2, 702, 387, 0, 401, 404, 948,
	0, 0, 535, 0, 538, 539, 453, 513, 544, 545,
	559, 546, 495, 496, 493, 0, 0, 1390, 1391, 1396,
	1394, 1395, 134, 580, 582, 581, 585, 0, 0, 0,
	517, 0, 517, 578, 0, 449, 1363, 0, 710, 450,
	451, 779, 779, 852, 98, 0, 855, 0, 0, 0,
	0, 1008, 1012, 1294, 1320, 358, 358, 1307, 358, 364,
	1310, 358, 1312, 358, 1315, 358, 1318, 1319, 0, 0,
	0, 910, 0, 0, 1136, 1330, 0, 0, 1146, 1147,
	1148, 1149, 1150, 1324, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 146,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1085, 1089, 0,
	1091, 1092, 0, 0, 1218, 0, 0, 1230, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	984, 989, 989, 989, 0, 0, 0, 1458, 1459, 1338,
	1339, 993, 1340, 922, 901, 940, 1421, 0, 1414, 0,
	-2, 1423, 0, 0, 0, 1429, 373, 374, 914, 81,
	994, 84, 0, 1439, 1448, 0, 1430, 1441, 1443, 0,
	0, 0, 1435, 0, 993, 924, 955, 957, 0, 952,
	967, 968, 970, 0, 972, 0, 974, 975, 935, 929,
	0, 101, 0, 993, 993, 100, 0, 980, 120, 121,
	122, 459, 185, 190, 0, 0, 0, 195, 0, 197,
	0, 0, 0, 202, 203, 399, 399, 434, 0, 302,
	304, 0, 0, 188, 372, 0, 372, 0, 363, 365,
	0, 435, 455, 1364, 1365, 0, 0, 392, 396, 397,
	398, 0, 1465, 149, 0, 0, 0, 609, 0, 637,
	0, 0, 0, 0, 0, 0, 177, 514, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 0, 399, 0,
	0, 0, 399, 399, 399, 0, 694, 386, 0, 0,
	665, 662, 536, 0, 226, 227, 229, 0, 0, 0,
	0, 0, 543, 935, 1381, 1382, 1383, 0, 1393, 1397,
	137, 0, 0, 0, 0, 590, 596, 0, 516, 597,
	707, 708, 709, 96, 719, 725, 854, 874, 1001, 1009,
	1013, 0, 0, 0, 0, 1321, 1305, 372, 1308, 1309,
	1311, 1313, 1314, 1316, 1317, 1049, 1050, 1054, 0, 1133,
	0, 1135, 1328, 0, 1358, 0, 0, 0, 1164, 0,
	0, 0, 1175, 1174, 1176, 0, 1178, 1179, 1184, 1185,
	1189, 0, 1191, 1193, 1194, 0, 0, 0, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 0, 1083,
	1086, 1217, 1093, 1094, 1099, 1220, 0, 0, 1129, 1232,
	0, 1237, 0, 0, 1243, 0, 1247, 0, 1253, 1254,
	1256, 1258, 0, 0, 0, 0, 0, 961, 942, 65,
	1340, 1342, 0, 1408, 1406, 1406, 1416, 1417, 0, 0,
	1424, 0, 0, 0, 0, 85, 0, 0, 0, 1444,
	0, 0, 0, 0, 102, 1349, 949, 956, 0, 0,
	950, 0, 951, 971, 973, 928, 0, 993, 993, 91,
	92, 0, 191, 0, 193, 219, 220, 0, 196, 198,
	199, 200, 206, 207, 208, 201, 0, 0, 301, 303,
	0, 0, 346, 357, 347, 0, 0, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 935, 150, 151, 152, 601,
	0, 611, 0, 937, 0, 604, 0, 525, 0, 0,
	0, 399, 399, 399, 0, 0, 0, 0, 679, 0,
	0, 642, 0, 650, 0, 0, 0, 230, 231, 0,
	1392, 579, 0, 135, 136, 0, 0, 584, 518, 519,
	1047, 0, 0, 0, 1048, 1306, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 1171, 0, 0, 0, 1197,
	0, 0, 0, 631, 632, 0, 1261, 1088, 1349, 0,
	1090, 1100, 1101, 0, 1090, 1231, 0, 0, 0, 0,
	0, 0, 0, 990, 0, 0, 0, 0, 981, 1342,
	1347, 0, 0, 1411, 0, 1404, 1407, 1405, 1418, 0,
	0, 1425, 0, 1427, 0, 1449, 1450, 1442, 0, 1434,
	1437, 1433, 1436, 1358, 953, 0, 958, 0, 1349, 90,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 205, 0, 0, 361, 366, 0, 0,
	0, 602, 0, 938, 614, 605, 0, 692, 0, 696,
	0, 0, 0, 699, 700, 701, 678, 0, 682, 427,
	666, 663, 664, 537, 0, 138, 139, 0, 0, 0,
	1295, 0, 1298, 1132, 1134, 0, 1161, 1162, 1163, 1303,
	1304, 1177, 1190, 1195, 0, 1198, 0, 0, 1199, 0,
	633, 1079, 0, 0, 1097, 1098, 0, 1233, 0, 1238,
	1239, 0, 1244, 0, 1248, 1259, 0, 986, 943, 944,
	991, 992, 0, 0, 934, 1347, 83, 1348, 1345, 0,
	1343, 1341, 1400, 0, 1409, 1410, 1419, 1420, 1426, 0,
	1432, 0, 88, 0, 0, 0, 1358, 192, 0, 211,
	0, 610, 0, 613, 603, 690, 691, 0, 703, 695,
	697, 698, 680, -2, 1384, 0, 0, 0, 586, 1296,
	0, 0, 1200, 0, 629, 630, 1087, 1080, 0, 1065,
	1066, 1084, 1219, 1221, 0, 0, 0, 0, 985, 987,
	988, 82, 0, 1344, 1105, 0, 1412, 1413, 1440, 1438,
	954, 961, 0, 89, 440, 433, 1384, 0, 0, 0,
	683, 684, 685, 686, 687, 688, 689, 576, 1386, 140,
	141, 506, 507, 508, 134, 0, 1138, 1196, 1081, 0,
	0, 0, 0, 1077, 1078, 0, 1234, 0, 1240, 0,
	1245, 0, 945, 946, 1346, 0, 0, 615, 0, 617,
	0, -2, 428, 441, 0, 186, 212, 213, 0, 0,
	216, 217, 218, 209, 210, 130, 0, 0, 704, 0,
	1387, 1388, 137, 0, 0, 1072, 1073, 1074, 1075, 1076,
	0, 0, 0, 1106, 1085, 616, 0, 0, 383, 0,
	626, 429, 430, 0, 436, 437, 438, 439, 214, 215,
	638, 0, 0, 583, 1297, 0, 1235, 0, 1241, 0,
	1246, 0, 618, 619, 627, 0, 431, 0, 432, 0,
	0, 0, 607, 0, 638, 1385, 1082, 0, 0, 1104,
	0, 628, 624, 442, 444, 445, 0, 0, 443, 639,
	608, 1236, 1242, 0, 446, 447, 448, 620, 621, 622,
	623,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 667,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:621
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:626
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:664
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:670
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:695
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:717
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:736
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:913
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:943
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:947
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:981
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:991
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1001
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1014
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1026
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1044
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1058
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1062
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1072
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1078
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1092
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1096
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1124
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1128
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1134
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1156
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1160
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1176
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1191
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1222
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1244
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1258
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1280
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1287
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1298
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1309
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1381
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1385
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1391
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1401
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1406
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1415
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1439
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1448
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1556
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1560
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1564
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1570
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1574
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1579
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1959
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1963
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1967
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1971
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2220
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2225
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2229
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2331
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2354
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2363
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2369
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2373
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2379
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2383
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2388
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2392
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2404
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2408
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2424
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2428
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2432
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2436
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2440
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = yyDollar[2].str
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = "key"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2507
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2517
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2521
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2527
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2531
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2537
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2541
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2547
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2553
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2557
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2561
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2565
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2569
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2578
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2584
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2590
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2596
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2600
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2609
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2619
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2625
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2631
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2635
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2643
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2647
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2666
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2688
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2694
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2708
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2718
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2738
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2834
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2838
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2889
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2902
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2920
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2933
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2937
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2941
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2949
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3097
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3364
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3373
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3381
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3390
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3409
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3418
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3433
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3447
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3451
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3457
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3463
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3469
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3479
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3483
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3489
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3495
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3501
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3507
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3521
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3525
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3537
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3543
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3547
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3551
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3557
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3561
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3566
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3570
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3575
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3579
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3585
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3589
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3593
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3597
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3601
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3605
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3609
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3613
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3617
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3621
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3625
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3629
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3633
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3637
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3641
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3645
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3649
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3653
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3657
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3661
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3665
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3669
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3688
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3703
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3707
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3717
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3722
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3727
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3732
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3738
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3755
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3761
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3771
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3776
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3800
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3806
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3819
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3826
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3833
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3851
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3857
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3863
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3869
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3875
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3881
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3893
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3915
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3919
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = "extended "
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4207
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4223
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4241
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4245
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4255
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4332
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4338
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4348
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4352
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4356
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4400
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4404
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4408
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4412
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4416
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4420
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4424
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4429
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4433
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4437
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4441
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4524
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4534
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4540
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4544
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4548
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4552
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			setAllowComments(yylex, true)
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.strs = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = SQLCacheStr
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4737
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4741
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4751
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4760
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4766
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4770
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4779
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4784
		{
			yyVAL.strs = nil
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4792
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4800
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = SQLCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = DistinctStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = DistinctStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = StraightJoinHint
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4836
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4846
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4850
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4854
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4858
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4863
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4871
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4883
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4893
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4899
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4913
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4917
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4921
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4931
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4935
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4941
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4954
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4963
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4969
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4979
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4989
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4993
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5007
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5011
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5024
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5028
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5032
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5044
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.empty = struct{}{}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5085
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5089
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5093
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5099
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5123
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5127
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5166
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5172
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5182
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5186
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5190
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5194
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5199
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5203
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5207
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5211
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5505
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5511
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5521
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5525
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5529
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5535
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5539
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5546
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5550
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5554
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5558
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5562
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5568
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5572
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5576
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5580
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5584
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5603
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5609
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5613
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5622
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5627
		{
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5636
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5642
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5646
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5658
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5664
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5668
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5674
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5678
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5684
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5688
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5700
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5706
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5710
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5716
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5722
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5726
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5732
		{
			yyVAL.str = ""
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5742
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5746
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5753
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5757
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5761
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5765
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5771
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5775
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5779
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5791
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5795
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5801
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5805
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5809
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5816
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5822
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6388
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6396
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6400
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6404
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6408
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6412
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6416
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6420
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6424
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6428
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6432
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6436
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6442
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6446
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6450
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6454
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6458
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6462
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6466
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6470
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6474
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6529
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6533
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6537
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6541
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6545
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6551
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6569
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6573
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6579
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6583
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6587
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6591
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6595
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6601
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6605
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6609
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6613
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6617
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6621
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6625
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6629
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6633
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6637
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6661
		{
			yyVAL.str = string("")
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6665
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6671
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6675
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6681
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6696
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6700
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6704
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6708
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6747
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6762
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6768
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6772
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6781
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6790
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6796
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6802
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6806
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6812
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6817
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6821
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6825
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6834
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6840
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6844
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6848
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6857
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6861
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6865
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6869
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6876
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6880
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6884
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6888
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6894
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6898
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6902
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6906
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6911
		{
			yyVAL.str = ""
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6915
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6919
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6923
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6928
		{
			yyVAL.str = ""
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6932
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6938
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6947
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6951
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6956
		{
			yyVAL.str = "cascaded"
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6960
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6973
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6979
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6985
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6991
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7000
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7009
		{
			yyVAL.str = ""
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7013
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7019
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7023
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7029
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7033
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7037
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = ""
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7046
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7050
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7055
		{
			yyVAL.str = ""
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7059
		{
			yyVAL.str = " header"
		}
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7064
		{
			yyVAL.str = ""
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7068
		{
			yyVAL.str = " manifest on"
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7072
		{
			yyVAL.str = " manifest off"
		}
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7077
		{
			yyVAL.str = ""
		}
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7081
		{
			yyVAL.str = " overwrite on"
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7085
		{
			yyVAL.str = " overwrite off"
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7091
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7096
		{
			yyVAL.str = ""
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7100
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7110
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7116
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7120
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7125
		{
			yyVAL.str = ""
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7129
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7135
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7139
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7145
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7149
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7153
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7158
		{
			yyVAL.str = ""
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7162
		{
			yyVAL.str = " optionally"
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7175
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7179
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7183
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7187
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7191
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7197
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7201
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7205
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7209
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7218
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7224
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7228
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7234
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7238
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7244
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7248
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7253
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7263
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7267
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7273
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7280
		{
			yyVAL.str = "charset"
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7290
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7294
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7298
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7307
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7309
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7317
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7322
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7324
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7327
		{
			yyVAL.empty = struct{}{}
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7329
		{
			yyVAL.empty = struct{}{}
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7331
		{
			yyVAL.empty = struct{}{}
		}
	case 1471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7335
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7344
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7351
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7355
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7361
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7365
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7372
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7378
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7382
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7388
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7392
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7399
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7977
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7986
		{
			decNesting(yylex)
		}
	case 2040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7991
		{
			skipToEnd(yylex)
		}
	case 2041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7996
		{
			skipToEnd(yylex)
		}
	case 2042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8000
		{
			skipToEnd(yylex)
		}
	case 2043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8004
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
