/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const FILTERS = 57629
const WITHPATTERN = 57630
const PRIORITY = 57631
const PLANS = 57632
const TABLE_NAME = 57633
const QUERY_REGEX = 57634
const QUERY_TEMPLATE = 57635
const REQUEST_IP_REGEX = 57636
const USER_REGEX = 57637
const LEADING_COMMENT_REGEX = 57638
const TRAILING_COMMENT_REGEX = 57639
const BIND_VAR_CONDS = 57640
const ACTION_ARGS = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const EXPIRE = 57650
const RATIO = 57651
const PAUSE = 57652
const RESUME = 57653
const SCHEMA_MIGRATION = 57654
const VITESS_THROTTLER = 57655
const DML_JOB = 57656
const DETAILS = 57657
const TIME_PERIOD = 57658
const BEGIN = 57659
const START = 57660
const TRANSACTION = 57661
const COMMIT = 57662
const ROLLBACK = 57663
const SAVEPOINT = 57664
const RELEASE = 57665
const WORK = 57666
const CONSISTENT = 57667
const SNAPSHOT = 57668
const BIT = 57669
const TINYINT = 57670
const SMALLINT = 57671
const MEDIUMINT = 57672
const INT = 57673
const INTEGER = 57674
const BIGINT = 57675
const INTNUM = 57676
const REAL = 57677
const DOUBLE = 57678
const FLOAT_TYPE = 57679
const FLOAT4_TYPE = 57680
const FLOAT8_TYPE = 57681
const DECIMAL_TYPE = 57682
const NUMERIC = 57683
const TIME = 57684
const TIMESTAMP = 57685
const DATETIME = 57686
const YEAR = 57687
const CHAR = 57688
const VARCHAR = 57689
const BOOL = 57690
const CHARACTER = 57691
const VARBINARY = 57692
const NCHAR = 57693
const TEXT = 57694
const TINYTEXT = 57695
const MEDIUMTEXT = 57696
const LONGTEXT = 57697
const BLOB = 57698
const TINYBLOB = 57699
const MEDIUMBLOB = 57700
const LONGBLOB = 57701
const JSON = 57702
const JSON_SCHEMA_VALID = 57703
const JSON_SCHEMA_VALIDATION_REPORT = 57704
const ENUM = 57705
const GEOMETRY = 57706
const POINT = 57707
const LINESTRING = 57708
const POLYGON = 57709
const GEOMCOLLECTION = 57710
const GEOMETRYCOLLECTION = 57711
const MULTIPOINT = 57712
const MULTILINESTRING = 57713
const MULTIPOLYGON = 57714
const ASCII = 57715
const UNICODE = 57716
const NULLX = 57717
const AUTO_INCREMENT = 57718
const APPROXNUM = 57719
const SIGNED = 57720
const UNSIGNED = 57721
const ZEROFILL = 57722
const CODE = 57723
const COLLATION = 57724
const COLUMNS = 57725
const DATABASES = 57726
const ENGINES = 57727
const EVENT = 57728
const EXTENDED = 57729
const FIELDS = 57730
const FULL = 57731
const FUNCTION = 57732
const GTID_EXECUTED = 57733
const KEYSPACES = 57734
const OPEN = 57735
const PLUGINS = 57736
const PRIVILEGES = 57737
const PROCESSLIST = 57738
const SCHEMAS = 57739
const TABLES = 57740
const TRIGGERS = 57741
const USER = 57742
const VGTID_EXECUTED = 57743
const VITESS_KEYSPACES = 57744
const VITESS_METADATA = 57745
const VITESS_MIGRATIONS = 57746
const VITESS_REPLICATION_STATUS = 57747
const VITESS_SHARDS = 57748
const VITESS_TABLETS = 57749
const VITESS_TARGET = 57750
const VSCHEMA = 57751
const VITESS_THROTTLED_APPS = 57752
const WORKLOAD = 57753
const LASTSEENGTID = 57754
const FAILPOINTS = 57755
const TABLETS_PLANS = 57756
const DML_JOBS = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const FAST = 57770
const QUICK = 57771
const CHANGED = 57772
const MEDIUM = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_DATE = 57776
const NOW = 57777
const CURRENT_TIME = 57778
const LOCALTIME = 57779
const LOCALTIMESTAMP = 57780
const CURRENT_USER = 57781
const UTC_DATE = 57782
const UTC_TIME = 57783
const UTC_TIMESTAMP = 57784
const DAY = 57785
const DAY_HOUR = 57786
const DAY_MICROSECOND = 57787
const DAY_MINUTE = 57788
const DAY_SECOND = 57789
const HOUR = 57790
const HOUR_MICROSECOND = 57791
const HOUR_MINUTE = 57792
const HOUR_SECOND = 57793
const MICROSECOND = 57794
const MINUTE = 57795
const MINUTE_MICROSECOND = 57796
const MINUTE_SECOND = 57797
const MONTH = 57798
const QUARTER = 57799
const SECOND = 57800
const SECOND_MICROSECOND = 57801
const YEAR_MONTH = 57802
const WEEK = 57803
const REPLACE = 57804
const CONVERT = 57805
const CAST = 57806
const SUBSTR = 57807
const SUBSTRING = 57808
const SEPARATOR = 57809
const TIMESTAMPADD = 57810
const TIMESTAMPDIFF = 57811
const WEIGHT_STRING = 57812
const LTRIM = 57813
const RTRIM = 57814
const TRIM = 57815
const JSON_ARRAY = 57816
const JSON_OBJECT = 57817
const JSON_QUOTE = 57818
const JSON_DEPTH = 57819
const JSON_TYPE = 57820
const JSON_LENGTH = 57821
const JSON_VALID = 57822
const JSON_ARRAY_APPEND = 57823
const JSON_ARRAY_INSERT = 57824
const JSON_INSERT = 57825
const JSON_MERGE = 57826
const JSON_MERGE_PATCH = 57827
const JSON_MERGE_PRESERVE = 57828
const JSON_REMOVE = 57829
const JSON_REPLACE = 57830
const JSON_SET = 57831
const JSON_UNQUOTE = 57832
const COUNT = 57833
const AVG = 57834
const MAX = 57835
const MIN = 57836
const SUM = 57837
const GROUP_CONCAT = 57838
const BIT_AND = 57839
const BIT_OR = 57840
const BIT_XOR = 57841
const STD = 57842
const STDDEV = 57843
const STDDEV_POP = 57844
const STDDEV_SAMP = 57845
const VAR_POP = 57846
const VAR_SAMP = 57847
const VARIANCE = 57848
const REGEXP_INSTR = 57849
const REGEXP_LIKE = 57850
const REGEXP_REPLACE = 57851
const REGEXP_SUBSTR = 57852
const ExtractValue = 57853
const UpdateXML = 57854
const GET_LOCK = 57855
const RELEASE_LOCK = 57856
const RELEASE_ALL_LOCKS = 57857
const IS_FREE_LOCK = 57858
const IS_USED_LOCK = 57859
const LOCATE = 57860
const POSITION = 57861
const MATCH = 57862
const AGAINST = 57863
const BOOLEAN = 57864
const LANGUAGE = 57865
const WITH = 57866
const QUERY = 57867
const EXPANSION = 57868
const WITHOUT = 57869
const VALIDATION = 57870
const UNUSED = 57871
const ARRAY = 57872
const BYTE = 57873
const CUME_DIST = 57874
const DESCRIPTION = 57875
const DENSE_RANK = 57876
const EMPTY = 57877
const EXCEPT = 57878
const FIRST_VALUE = 57879
const GROUPING = 57880
const GROUPS = 57881
const JSON_TABLE = 57882
const LAG = 57883
const LAST_VALUE = 57884
const LATERAL = 57885
const LEAD = 57886
const NTH_VALUE = 57887
const NTILE = 57888
const OF = 57889
const OVER = 57890
const PERCENT_RANK = 57891
const RANK = 57892
const RECURSIVE = 57893
const ROW_NUMBER = 57894
const SYSTEM = 57895
const WINDOW = 57896
const ACTIVE = 57897
const ADMIN = 57898
const AUTOEXTEND_SIZE = 57899
const BUCKETS = 57900
const CLONE = 57901
const COLUMN_FORMAT = 57902
const COMPONENT = 57903
const DEFINITION = 57904
const ENFORCED = 57905
const ENGINE_ATTRIBUTE = 57906
const EXCLUDE = 57907
const FOLLOWING = 57908
const GET_MASTER_PUBLIC_KEY = 57909
const HISTOGRAM = 57910
const HISTORY = 57911
const INACTIVE = 57912
const INVISIBLE = 57913
const LOCKED = 57914
const MASTER_COMPRESSION_ALGORITHMS = 57915
const MASTER_PUBLIC_KEY_PATH = 57916
const MASTER_TLS_CIPHERSUITES = 57917
const MASTER_ZSTD_COMPRESSION_LEVEL = 57918
const NESTED = 57919
const NETWORK_NAMESPACE = 57920
const NOWAIT = 57921
const NULLS = 57922
const OJ = 57923
const OLD = 57924
const OPTIONAL = 57925
const ORDINALITY = 57926
const ORGANIZATION = 57927
const OTHERS = 57928
const PARTIAL = 57929
const PATH = 57930
const PERSIST = 57931
const PERSIST_ONLY = 57932
const PRECEDING = 57933
const PRIVILEGE_CHECKS_USER = 57934
const PROCESS = 57935
const RANDOM = 57936
const REFERENCE = 57937
const REQUIRE_ROW_FORMAT = 57938
const RESOURCE = 57939
const RESPECT = 57940
const RESTART = 57941
const RETAIN = 57942
const REUSE = 57943
const ROLE = 57944
const SECONDARY = 57945
const SECONDARY_ENGINE = 57946
const SECONDARY_ENGINE_ATTRIBUTE = 57947
const SECONDARY_LOAD = 57948
const SECONDARY_UNLOAD = 57949
const SIMPLE = 57950
const SKIP = 57951
const SRID = 57952
const THREAD_PRIORITY = 57953
const TIES = 57954
const UNBOUNDED = 57955
const VCPU = 57956
const VISIBLE = 57957
const RETURNING = 57958
const FORMAT_BYTES = 57959
const FORMAT_PICO_TIME = 57960
const PS_CURRENT_THREAD_ID = 57961
const PS_THREAD_ID = 57962
const GTID_SUBSET = 57963
const GTID_SUBTRACT = 57964
const WAIT_FOR_EXECUTED_GTID_SET = 57965
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57966
const FORMAT = 57967
const TREE = 57968
const VITESS = 57969
const TRADITIONAL = 57970
const VTEXPLAIN = 57971
const VEXPLAIN = 57972
const PLAN = 57973
const LOCAL = 57974
const LOW_PRIORITY = 57975
const KILL = 57976
const USERS = 57977
const NO_WRITE_TO_BINLOG = 57978
const LOGS = 57979
const ERROR = 57980
const GENERAL = 57981
const HOSTS = 57982
const OPTIMIZER_COSTS = 57983
const USER_RESOURCES = 57984
const SLOW = 57985
const CHANNEL = 57986
const RELAY = 57987
const EXPORT = 57988
const CURRENT = 57989
const ROW = 57990
const ROWS = 57991
const AVG_ROW_LENGTH = 57992
const CONNECTION = 57993
const CHECKSUM = 57994
const DELAY_KEY_WRITE = 57995
const ENCRYPTION = 57996
const ENGINE = 57997
const INSERT_METHOD = 57998
const MAX_ROWS = 57999
const MIN_ROWS = 58000
const PACK_KEYS = 58001
const PASSWORD = 58002
const FIXED = 58003
const DYNAMIC = 58004
const COMPRESSED = 58005
const REDUNDANT = 58006
const COMPACT = 58007
const ROW_FORMAT = 58008
const STATS_AUTO_RECALC = 58009
const STATS_PERSISTENT = 58010
const STATS_SAMPLE_PAGES = 58011
const STORAGE = 58012
const MEMORY = 58013
const DISK = 58014
const PARTITIONS = 58015
const LINEAR = 58016
const RANGE = 58017
const LIST = 58018
const SUBPARTITION = 58019
const SUBPARTITIONS = 58020
const HASH = 58021

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"FILTERS",
	"WITHPATTERN",
	"PRIORITY",
	"PLANS",
	"TABLE_NAME",
	"QUERY_REGEX",
	"QUERY_TEMPLATE",
	"REQUEST_IP_REGEX",
	"USER_REGEX",
	"LEADING_COMMENT_REGEX",
	"TRAILING_COMMENT_REGEX",
	"BIND_VAR_CONDS",
	"ACTION_ARGS",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 56,
	14, 56,
	-2, 45,
	-1, 57,
	1, 200,
	697, 200,
	-2, 208,
	-1, 58,
	135, 208,
	176, 208,
	366, 208,
	-2, 562,
	-1, 68,
	36, 861,
	100, 968,
	240, 861,
	251, 861,
	286, 875,
	287, 875,
	303, 968,
	304, 968,
	-2, 863,
	-1, 73,
	242, 899,
	-2, 897,
	-1, 131,
	239, 1562,
	-2, 174,
	-1, 133,
	1, 201,
	697, 201,
	-2, 208,
	-1, 144,
	136, 448,
	245, 448,
	-2, 551,
	-1, 163,
	135, 208,
	176, 208,
	366, 208,
	-2, 571,
	-1, 863,
	87, 1579,
	-2, 1424,
	-1, 864,
	87, 1580,
	221, 1584,
	-2, 1425,
	-1, 865,
	221, 1583,
	-2, 47,
	-1, 944,
	60, 975,
	-2, 990,
	-1, 1033,
	250, 48,
	255, 48,
	-2, 459,
	-1, 1121,
	1, 619,
	697, 619,
	-2, 208,
	-1, 1439,
	221, 1584,
	-2, 1425,
	-1, 1587,
	60, 976,
	-2, 995,
	-1, 1588,
	60, 977,
	-2, 996,
	-1, 1639,
	135, 208,
	176, 208,
	366, 208,
	-2, 498,
	-1, 1724,
	136, 448,
	245, 448,
	-2, 551,
	-1, 1734,
	250, 49,
	255, 49,
	-2, 1579,
	-1, 2125,
	221, 1588,
	-2, 1582,
	-1, 2126,
	221, 1584,
	-2, 1580,
	-1, 2225,
	135, 208,
	176, 208,
	366, 208,
	-2, 499,
	-1, 2232,
	26, 229,
	-2, 231,
	-1, 2638,
	78, 103,
	88, 103,
	-2, 1054,
	-1, 2708,
	672, 770,
	-2, 744,
	-1, 2889,
	50, 1530,
	-2, 1524,
	-1, 3586,
	672, 770,
	-2, 758,
	-1, 3685,
	90, 702,
	95, 702,
	105, 702,
	178, 702,
	179, 702,
	180, 702,
	181, 702,
	182, 702,
	183, 702,
	184, 702,
	185, 702,
	186, 702,
	187, 702,
	188, 702,
	189, 702,
	190, 702,
	191, 702,
	192, 702,
	193, 702,
	194, 702,
	195, 702,
	196, 702,
	197, 702,
	198, 702,
	199, 702,
	200, 702,
	201, 702,
	202, 702,
	203, 702,
	204, 702,
	205, 702,
	206, 702,
	207, 702,
	208, 702,
	209, 702,
	210, 702,
	211, 702,
	212, 702,
	213, 702,
	214, 702,
	215, 702,
	216, 702,
	217, 702,
	218, 702,
	219, 702,
	-2, 1947,
}

const yyPrivate = 57344

const yyLast = 49667

var yyAct = [...]int{
	864, 3321, 3322, 874, 3320, 866, 3762, 3487, 3565, 3773,
	867, 1992, 737, 3662, 3728, 3683, 3729, 2173, 3130, 3290,
	2222, 1642, 3623, 3046, 2941, 3651, 2948, 2154, 3549, 1197,
	3488, 3497, 2991, 3275, 3000, 3005, 3002, 2902, 829, 3547,
	3001, 2999, 3004, 716, 2538, 3276, 3003, 3263, 960, 938,
	3350, 2905, 2848, 2156, 3537, 2297, 1938, 3020, 2572, 5,
	2956, 204, 834, 3019, 204, 1602, 1565, 719, 2733, 2906,
	696, 3169, 2903, 3355, 2611, 702, 2783, 827, 747, 3163,
	3022, 3189, 2196, 828, 2193, 2890, 204, 2900, 2598, 2177,
	717, 2259, 2116, 3052, 715, 2672, 1595, 2767, 2705, 3155,
	2264, 204, 2285, 2210, 1065, 2674, 993, 1140, 2673, 2623,
	2328, 172, 961, 2198, 2574, 48, 2197, 1199, 2604, 1589,
	2590, 2121, 940, 2087, 2113, 2007, 46, 1946, 702, 204,
	2306, 702, 158, 2753, 2284, 1988, 2347, 2185, 1169, 2266,
	2665, 2086, 1571, 1731, 1028, 1023, 1631, 2640, 711, 1749,
	106, 729, 2200, 833, 1611, 1569, 47, 1378, 2011, 1363,
	110, 1451, 1001, 1876, 1965, 1867, 1739, 1031, 1831, 1002,
	111, 997, 1703, 1034, 1029, 1041, 2255, 1871, 1030, 1630,
	978, 1411, 2178, 724, 2256, 980, 1616, 2122, 951, 2083,
	2020, 1435, 1195, 948, 1937, 1187, 91, 1886, 113, 1693,
	105, 176, 136, 134, 135, 1723, 634, 141, 142, 947,
	1115, 973, 949, 99, 723, 1455, 90, 104, 3576, 112,
	946, 3763, 2698, 2299, 2300, 2301, 3608, 3264, 933, 2988,
	3010, 2299, 2728, 2727, 2343, 706, 2696, 1379, 1815, 3256,
	3712, 2775, 101, 968, 972, 942, 1379, 945, 2776, 1700,
	3603, 644, 3609, 3216, 101, 3325, 954, 638, 3604, 137,
	883, 884, 885, 1953, 143, 1067, 963, 1459, 125, 1952,
	1951, 999, 994, 691, 1950, 1070, 1949, 685, 1084, 1085,
	1086, 1948, 1089, 1090, 1091, 1092, 3008, 1921, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 988, 987, 955, 941, 3663,
	939, 101, 3014, 1044, 3010, 707, 1918, 2, 1021, 642,
	1020, 1045, 883, 884, 885, 3325, 962, 3007, 2151, 2152,
	1968, 1374, 1071, 1074, 1075, 137, 1019, 1018, 1017, 2426,
	990, 709, 3324, 1078, 2570, 710, 1390, 2600, 2886, 1396,
	3707, 1012, 2718, 3604, 3716, 1390, 101, 2332, 691, 1087,
	2275, 199, 1007, 3732, 986, 831, 832, 117, 118, 119,
	3008, 122, 2701, 2852, 131, 3714, 3752, 200, 3784, 3715,
	632, 3727, 1596, 2269, 3669, 138, 643, 160, 3135, 2721,
	3134, 3550, 2539, 2330, 704, 705, 3014, 1958, 181, 3077,
	3713, 2331, 685, 137, 934, 935, 936, 937, 685, 685,
	944, 3485, 3324, 3484, 3269, 1069, 1068, 3270, 92, 3743,
	3503, 92, 3710, 3303, 2435, 3011, 92, 1365, 3291, 171,
	3652, 1997, 3659, 2325, 3502, 159, 3302, 3688, 975, 976,
	3097, 3581, 2614, 1712, 682, 2571, 3669, 1000, 1632, 92,
	1633, 2181, 94, 2937, 178, 2743, 2744, 179, 2774, 986,
	831, 832, 2649, 2938, 2939, 2648, 2432, 2615, 2650, 2216,
	3368, 2759, 1385, 2217, 2218, 1377, 1725, 1726, 170, 169,
	198, 1385, 1930, 1931, 1393, 2752, 1394, 1395, 1877, 2433,
	1412, 1191, 662, 1164, 1165, 1159, 101, 932, 931, 101,
	1147, 1877, 2699, 685, 101, 1148, 660, 3566, 686, 3011,
	2661, 1160, 3074, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1421, 1420, 1422, 1423, 1153, 2607, 2608, 101, 2235, 2234,
	1364, 2268, 1147, 3166, 685, 685, 1016, 1148, 1127, 1128,
	2153, 3085, 3083, 2061, 1375, 1146, 657, 1145, 2424, 3048,
	1929, 2817, 1114, 1875, 699, 675, 1933, 703, 2373, 641,
	2372, 3733, 685, 2376, 2377, 1628, 697, 2374, 2375, 1920,
	1130, 3053, 1176, 2378, 1178, 1573, 2181, 2754, 2706, 164,
	1727, 167, 3734, 1724, 670, 165, 166, 1574, 2735, 3458,
	2731, 1138, 1139, 182, 1014, 2307, 667, 673, 669, 3489,
	2739, 1125, 188, 1088, 2348, 2427, 2428, 2430, 2429, 979,
	3765, 3041, 1175, 1177, 3525, 1166, 3526, 1832, 2401, 3042,
	2402, 1180, 2403, 1161, 1190, 1167, 1805, 1162, 1163, 1189,
	1168, 2415, 204, 686, 204, 2762, 1154, 204, 204, 686,
	686, 2053, 2042, 2043, 2044, 2045, 2055, 2046, 2047, 2048,
	2060, 2056, 2049, 2050, 2057, 2058, 2059, 2051, 2052, 2054,
	1122, 3049, 2784, 3490, 2179, 2180, 647, 3258, 649, 663,
	1806, 688, 1807, 687, 653, 2353, 651, 655, 664, 656,
	3257, 650, 702, 661, 702, 702, 652, 665, 666, 672,
	676, 677, 679, 674, 671, 680, 645, 646, 678, 668,
	2352, 659, 689, 639, 702, 204, 989, 983, 981, 2404,
	3708, 1094, 1386, 1093, 1384, 1381, 1382, 1383, 1389, 1391,
	1388, 1386, 1387, 1384, 1381, 1382, 1383, 1389, 1391, 1388,
	2354, 1387, 1380, 1439, 686, 3050, 1173, 2818, 2350, 3254,
	1174, 1380, 2351, 2310, 3469, 2851, 173, 2786, 1015, 1716,
	1179, 3329, 2194, 3737, 1054, 1143, 3034, 1149, 1150, 1151,
	1152, 1052, 1025, 1024, 1120, 686, 686, 1025, 1063, 1062,
	1061, 1437, 1060, 1059, 1124, 1058, 1131, 3575, 1057, 1133,
	1135, 2697, 1447, 1172, 1192, 1193, 1194, 1056, 1051, 2179,
	2180, 1577, 1064, 686, 3665, 2960, 998, 3785, 2433, 998,
	996, 989, 983, 981, 1037, 1181, 1182, 1184, 1426, 1738,
	1629, 1426, 2766, 1022, 3741, 2700, 1429, 1430, 1431, 1432,
	880, 2741, 2663, 2272, 998, 1036, 1443, 1868, 3664, 640,
	2329, 1157, 880, 168, 2575, 2577, 1356, 2796, 2795, 2794,
	1704, 974, 2788, 2734, 2792, 2737, 2787, 1368, 2785, 2763,
	3167, 2336, 2335, 2790, 3253, 1863, 3665, 1852, 1073, 3012,
	3013, 1366, 2789, 2273, 1036, 2736, 1081, 2982, 1072, 1881,
	2271, 2738, 3016, 1043, 2605, 1439, 1357, 1358, 3323, 1710,
	2791, 2793, 1881, 1433, 1817, 1816, 1818, 1819, 1820, 880,
	3664, 3075, 1709, 1708, 161, 2779, 2944, 162, 2447, 3214,
	3215, 3301, 1055, 1080, 2274, 2716, 1865, 1706, 2720, 1053,
	1878, 1879, 1882, 1880, 2270, 637, 690, 636, 1737, 95,
	1016, 1113, 982, 1878, 1879, 1882, 1880, 174, 631, 3562,
	2751, 2223, 204, 2750, 186, 3203, 702, 702, 3185, 683,
	2327, 2945, 2434, 3012, 3013, 1427, 1428, 2645, 3323, 2610,
	100, 204, 2719, 100, 684, 1373, 3016, 133, 100, 2547,
	2000, 3777, 1457, 2769, 1458, 2947, 1620, 1528, 2768, 1011,
	1132, 702, 1013, 1426, 204, 194, 1042, 2769, 3119, 1423,
	2936, 100, 2768, 2942, 1129, 1112, 702, 1578, 957, 1188,
	1170, 1581, 3704, 204, 3650, 1126, 1144, 3595, 3589, 1117,
	2958, 2959, 2576, 1887, 1836, 3572, 1564, 2943, 1837, 3494,
	3493, 1119, 1066, 1118, 1043, 1142, 3249, 982, 1461, 3239,
	175, 180, 177, 183, 184, 185, 187, 189, 190, 191,
	192, 3179, 702, 1563, 702, 1156, 193, 195, 196, 197,
	2949, 3038, 702, 1597, 1599, 1439, 1158, 1170, 2349, 1942,
	1860, 702, 702, 2021, 702, 1582, 702, 702, 110, 702,
	702, 702, 702, 702, 702, 1583, 1634, 2022, 111, 2803,
	1564, 1016, 1439, 1008, 2281, 1439, 702, 1439, 204, 2012,
	1010, 1009, 3744, 1743, 1570, 1855, 1395, 1853, 1854, 1557,
	1858, 1859, 3364, 1580, 1856, 1857, 113, 1584, 204, 1845,
	1394, 1395, 942, 1534, 1535, 1536, 1537, 1538, 1116, 2957,
	1778, 702, 2324, 1781, 204, 1783, 1624, 1042, 2012, 1079,
	2464, 2960, 1183, 1076, 3221, 1713, 1714, 1715, 1396, 1014,
	3220, 702, 1015, 204, 2326, 1641, 1005, 1171, 1729, 2389,
	2385, 2387, 2388, 2386, 2392, 2393, 2322, 1598, 2390, 2391,
	1888, 1800, 1833, 1579, 1834, 204, 1396, 1835, 1141, 1121,
	1722, 939, 204, 1601, 2314, 941, 1567, 1960, 1962, 1963,
	1746, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	702, 3775, 1782, 1745, 3776, 1742, 3774, 1625, 1626, 1736,
	2319, 1961, 1790, 1791, 1171, 1054, 2019, 1052, 1796, 1797,
	3786, 1751, 3625, 1752, 2319, 1754, 1756, 1741, 3735, 1760,
	1762, 1764, 1766, 1768, 3555, 1740, 1740, 1705, 3204, 953,
	1784, 2360, 2356, 2358, 2359, 2357, 2363, 2364, 3780, 2323,
	2361, 2362, 1719, 1732, 1720, 1718, 1840, 1970, 1838, 1839,
	3477, 1843, 1844, 2321, 1825, 1841, 1842, 3626, 2118, 1043,
	1873, 1971, 1424, 1425, 1969, 3045, 1830, 2946, 1823, 3556,
	1596, 1891, 1360, 1393, 1786, 1394, 1395, 2017, 1895, 3476,
	1897, 1898, 1899, 1900, 3467, 199, 2018, 1904, 2439, 2440,
	2441, 3314, 3313, 1015, 1889, 1890, 3297, 3787, 3298, 1916,
	1917, 1393, 1919, 1394, 1395, 1869, 3228, 1892, 1894, 138,
	2805, 1043, 3227, 1043, 1896, 1901, 1902, 1903, 1824, 1396,
	3217, 1812, 181, 2989, 2976, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1822, 137, 1019, 1018, 1017, 1847, 2670, 1846,
	1711, 2669, 1850, 1851, 2668, 2278, 1848, 1849, 1416, 1417,
	1418, 1419, 1421, 1420, 1422, 1423, 3693, 1826, 129, 1810,
	1396, 1809, 1042, 1893, 1808, 2654, 702, 702, 1036, 1039,
	1040, 2499, 998, 691, 3691, 126, 1033, 1037, 178, 702,
	1798, 179, 1914, 3697, 3698, 1811, 1915, 1792, 204, 1789,
	1788, 2958, 2959, 2454, 1396, 1787, 1758, 1032, 3692, 883,
	884, 885, 1137, 2453, 198, 3277, 3278, 3279, 3280, 3281,
	3282, 3283, 3284, 3285, 1042, 1136, 1042, 1628, 1396, 1046,
	1036, 1046, 1036, 2280, 1048, 1883, 1048, 1864, 1049, 1047,
	1049, 1047, 1043, 3211, 691, 116, 127, 702, 2652, 691,
	1605, 1995, 1995, 1993, 1993, 1596, 115, 1439, 114, 1050,
	1996, 2950, 2295, 2294, 1393, 2954, 1394, 1395, 702, 2293,
	2292, 1829, 2953, 1973, 1439, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 3748, 1596,
	1966, 2291, 2290, 2501, 3740, 1437, 1606, 3736, 1396, 702,
	702, 3588, 3788, 1392, 1596, 1393, 2955, 1394, 1395, 2461,
	2957, 2951, 2013, 1596, 1964, 3705, 2952, 3649, 128, 2596,
	3764, 1974, 2960, 3636, 107, 3592, 1596, 182, 1418, 1419,
	1421, 1420, 1422, 1423, 2118, 108, 188, 3591, 2115, 1393,
	1947, 1394, 1395, 47, 3584, 1042, 47, 2117, 3583, 2126,
	3559, 1036, 1039, 1040, 2075, 998, 1396, 3723, 1596, 1033,
	1037, 878, 3558, 1393, 1396, 1394, 1395, 3557, 1926, 1927,
	1396, 3492, 3699, 2015, 1396, 2073, 1412, 2016, 2123, 1967,
	2186, 2187, 2460, 91, 1396, 2084, 91, 1943, 1392, 1596,
	1596, 1596, 204, 1564, 2596, 3658, 2491, 3472, 702, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1421, 1420, 1422, 1423,
	1972, 2079, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1398,
	1563, 204, 2596, 3633, 702, 2596, 3629, 3577, 2114, 3616,
	1596, 3588, 3587, 1393, 204, 1394, 1395, 3460, 702, 2111,
	1396, 2126, 204, 3453, 204, 3452, 204, 204, 1999, 3738,
	2165, 3363, 2166, 2148, 3746, 1596, 2006, 2008, 1396, 2084,
	3511, 702, 3361, 1396, 2140, 3310, 2125, 3299, 3675, 1596,
	2123, 3287, 2128, 2129, 2023, 2024, 2025, 2026, 107, 1562,
	173, 1597, 2147, 2232, 1561, 109, 3267, 3574, 2037, 108,
	1560, 1393, 3225, 1394, 1395, 3210, 110, 3492, 3491, 1393,
	3059, 1394, 1395, 1396, 3057, 1393, 111, 1394, 1395, 1393,
	3054, 1394, 1395, 3480, 1596, 2170, 3051, 110, 2979, 1393,
	702, 1394, 1395, 2978, 3673, 1596, 2124, 111, 1396, 2169,
	2596, 3468, 1396, 3267, 1596, 2596, 3265, 2127, 1396, 2757,
	2130, 2131, 3671, 1596, 1596, 3238, 3237, 3534, 1596, 702,
	2452, 2319, 1596, 3183, 1596, 199, 702, 702, 2125, 2679,
	702, 2666, 702, 2241, 2242, 2243, 2244, 2227, 1559, 954,
	2341, 2226, 2512, 1596, 2208, 1393, 2188, 1394, 1395, 138,
	3037, 3036, 2158, 2340, 2192, 2146, 2195, 3532, 1596, 1947,
	2969, 2968, 181, 1393, 2168, 1394, 1395, 2176, 1393, 2204,
	1394, 1395, 702, 109, 2261, 2230, 2160, 702, 2308, 2171,
	2159, 702, 702, 1396, 116, 1922, 3529, 1596, 2191, 2279,
	1884, 2267, 3515, 1596, 2189, 115, 1821, 114, 2213, 2214,
	988, 987, 3092, 2212, 1813, 2229, 109, 3510, 1393, 2228,
	1394, 1395, 1396, 2966, 2967, 2964, 2965, 3457, 178, 204,
	1803, 179, 1799, 3696, 1795, 2305, 1794, 204, 2277, 2964,
	2963, 174, 1596, 1393, 1793, 1394, 1395, 1393, 186, 1394,
	1395, 2620, 1596, 1393, 198, 1394, 1395, 2433, 2729, 1699,
	2710, 2703, 2704, 204, 204, 2262, 1607, 2258, 204, 2276,
	204, 2251, 2253, 2254, 2282, 1596, 204, 3695, 1596, 2283,
	2313, 2596, 2595, 2316, 2289, 2317, 1396, 204, 2333, 194,
	1396, 2457, 1596, 3456, 204, 1044, 2592, 2236, 2312, 2237,
	2238, 2239, 2240, 1045, 2262, 2315, 2311, 3570, 1998, 1596,
	2320, 109, 1186, 2334, 1740, 2247, 2248, 2249, 2250, 1699,
	1698, 3289, 2337, 1185, 204, 2707, 2338, 2339, 1393, 2684,
	1394, 1395, 2612, 702, 175, 180, 177, 183, 184, 185,
	187, 189, 190, 191, 192, 1640, 1639, 2901, 2612, 2641,
	193, 195, 196, 197, 2619, 1396, 2344, 1393, 3178, 1394,
	1395, 1412, 2931, 2231, 1408, 115, 1409, 182, 2319, 2457,
	3506, 1947, 2433, 1609, 3154, 1596, 188, 3178, 1392, 2355,
	1410, 1424, 1425, 1407, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1421, 1420, 1422, 1423, 3180, 3621, 2417, 2418, 1439,
	3594, 2126, 2420, 2596, 2620, 2405, 2406, 2620, 3139, 2620,
	2410, 2421, 2642, 2966, 2443, 2874, 2445, 1412, 2414, 2778,
	3178, 1393, 2644, 1394, 1395, 1393, 2641, 1394, 1395, 2416,
	2451, 2407, 1966, 2215, 1392, 2457, 2419, 2449, 2413, 1608,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1420, 1422,
	1423, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1420,
	1422, 1423, 2444, 1396, 2512, 2488, 2422, 1396, 2487, 2319,
	2302, 2184, 1600, 2503, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1421, 1420, 1422, 1423, 2149, 1998, 2471, 2423, 2642,
	1393, 1944, 1394, 1395, 1928, 1862, 2450, 1627, 129, 2433,
	2455, 1027, 2431, 2458, 2486, 2459, 1026, 3761, 101, 3702,
	2466, 3638, 3571, 3499, 2468, 2469, 2470, 1603, 2125, 3454,
	173, 1967, 3375, 3274, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2442, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1421, 1420, 1422, 1423, 2992, 3147, 1596, 3248,
	204, 3144, 1596, 3245, 3223, 3102, 3101, 1701, 204, 1396,
	2492, 2493, 2494, 2495, 2496, 1995, 2498, 1993, 702, 2463,
	2500, 2260, 1396, 2581, 2505, 2506, 101, 2507, 2124, 702,
	2510, 3229, 2511, 3043, 3035, 2994, 2514, 2990, 1396, 2711,
	2518, 2686, 2346, 2257, 2523, 2524, 2525, 2526, 1393, 2252,
	1394, 1395, 1393, 204, 1394, 1395, 1396, 2537, 204, 2540,
	2541, 2579, 1774, 2246, 2245, 1828, 1735, 2543, 2545, 1730,
	1695, 130, 3233, 2676, 2548, 2549, 2550, 2551, 2552, 1396,
	2497, 1770, 3230, 3231, 3232, 2559, 2560, 3047, 2561, 2675,
	1120, 2564, 2566, 2170, 3464, 2568, 1396, 3190, 3191, 3500,
	2616, 2275, 2163, 3758, 2582, 2580, 2584, 3250, 3756, 3730,
	1924, 3196, 3602, 1775, 1776, 1777, 2597, 2167, 3520, 3234,
	3235, 3236, 3142, 1596, 3193, 2986, 702, 2985, 1771, 1772,
	1773, 2984, 3195, 2901, 204, 2635, 2690, 2676, 2408, 2593,
	204, 2671, 1396, 2923, 1393, 2921, 1394, 1395, 2924, 2606,
	2922, 174, 1570, 2920, 702, 2569, 2919, 1393, 186, 1394,
	1395, 702, 3598, 3107, 1596, 702, 702, 3501, 2175, 2589,
	702, 2702, 1925, 1393, 2594, 1394, 1395, 2662, 2664, 1564,
	3090, 1596, 3345, 1604, 3344, 2639, 1439, 2655, 3184, 2609,
	1396, 1393, 2879, 1394, 1395, 2878, 3554, 47, 1396, 194,
	2638, 204, 204, 204, 204, 204, 2634, 2643, 2726, 2636,
	2891, 2893, 2646, 3354, 1393, 1861, 1394, 1395, 2267, 2894,
	2653, 3356, 2656, 2678, 2724, 3174, 2567, 1596, 2681, 2682,
	2888, 1393, 3343, 1394, 1395, 3171, 2925, 2667, 2629, 2630,
	930, 2962, 2659, 3170, 175, 180, 177, 183, 184, 185,
	187, 189, 190, 191, 192, 2677, 712, 1396, 204, 204,
	193, 195, 196, 197, 1412, 2680, 2446, 2685, 1083, 2688,
	1082, 2691, 2692, 2693, 2565, 1596, 2689, 1393, 1396, 1394,
	1395, 3068, 3198, 2723, 204, 1722, 2675, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1421, 1420, 1422, 1423, 2772, 1359,
	2625, 2628, 2629, 2630, 2626, 702, 2627, 2631, 2712, 2713,
	3190, 3191, 958, 107, 2722, 1594, 1590, 2021, 2717, 1396,
	959, 138, 2186, 2187, 108, 1393, 116, 1394, 1395, 3176,
	1591, 2022, 109, 1393, 3771, 1394, 1395, 115, 2687, 114,
	2411, 3149, 2782, 2745, 2746, 2747, 2748, 2749, 109, 3680,
	3573, 3495, 702, 2961, 2755, 1696, 1697, 1593, 107, 1592,
	2756, 2400, 2544, 1596, 1396, 109, 2633, 2758, 2172, 108,
	2399, 964, 2398, 2799, 970, 970, 2760, 966, 967, 2877,
	2797, 2397, 2396, 2761, 3156, 2764, 2812, 2876, 2781, 2395,
	702, 2780, 1393, 2394, 1394, 1395, 1396, 2384, 702, 2383,
	1947, 2765, 2382, 2527, 1596, 2770, 2381, 2380, 2771, 1396,
	2379, 2371, 2370, 1393, 1396, 1394, 1395, 2369, 2807, 2808,
	2809, 2810, 2811, 2368, 2367, 2366, 2773, 2858, 2365, 702,
	2437, 116, 2829, 2800, 2831, 114, 2853, 2816, 3542, 3541,
	2798, 3523, 115, 204, 114, 3362, 2855, 702, 2519, 1596,
	2842, 2843, 2844, 2845, 1393, 3360, 1394, 1395, 3359, 3352,
	3246, 702, 3175, 3173, 2995, 1439, 2303, 1717, 702, 702,
	1439, 204, 204, 204, 204, 204, 2114, 116, 2114, 965,
	3145, 115, 3351, 204, 3164, 1396, 2827, 2821, 115, 204,
	2858, 204, 2612, 3117, 204, 204, 204, 3333, 3113, 1393,
	1396, 1394, 1395, 2904, 3760, 3759, 3759, 2913, 2904, 2592,
	2898, 129, 2819, 2489, 2161, 2881, 2930, 2854, 2857, 2856,
	2837, 2838, 2839, 2840, 2841, 2882, 1621, 1396, 2907, 1613,
	3760, 1393, 3560, 1394, 1395, 1396, 3, 3209, 2869, 120,
	121, 204, 956, 103, 1393, 1941, 1394, 1395, 10, 1393,
	1396, 1394, 1395, 1939, 702, 1396, 9, 1439, 1940, 1,
	2880, 8, 702, 2883, 2910, 3033, 2730, 204, 2345, 3099,
	2895, 2896, 2732, 2932, 2980, 1134, 2933, 1874, 2873, 3018,
	1362, 1361, 2928, 947, 3098, 2915, 2916, 2914, 2918, 204,
	2917, 2926, 3213, 3690, 946, 2997, 2204, 110, 2934, 658,
	1396, 2870, 2871, 2872, 2150, 2981, 1568, 111, 3731, 3686,
	3687, 3095, 1814, 1873, 204, 1804, 2940, 204, 2912, 2563,
	1393, 945, 1394, 1395, 2204, 2204, 2204, 2204, 2204, 2972,
	2974, 2975, 2971, 2973, 2562, 1393, 3292, 1394, 1395, 2558,
	2085, 3496, 2998, 2309, 2204, 3244, 3026, 2204, 2265, 1035,
	163, 2224, 3025, 2225, 1594, 1590, 3654, 124, 1396, 991,
	2996, 3017, 1393, 2267, 1394, 1395, 123, 1038, 1155, 1591,
	1393, 3032, 1394, 1395, 2304, 3268, 2660, 2233, 1646, 1644,
	1645, 1396, 1643, 2983, 2557, 1393, 1648, 1394, 1395, 1647,
	1393, 1396, 1394, 1395, 1587, 1588, 1593, 702, 1592, 3055,
	3056, 3076, 3058, 2490, 3060, 3061, 3118, 1932, 698, 3021,
	2632, 3064, 3063, 1396, 692, 2625, 2628, 2629, 2630, 2626,
	3072, 2627, 2631, 3071, 3070, 201, 204, 1635, 3066, 3067,
	3081, 3039, 1614, 3131, 1077, 1393, 648, 1394, 1395, 1396,
	2970, 2342, 2556, 3133, 3087, 3088, 3089, 654, 3091, 3093,
	3137, 1444, 1923, 2875, 2647, 985, 3062, 977, 1396, 3065,
	2162, 2583, 3100, 984, 3465, 2555, 2909, 3104, 3105, 3106,
	3108, 3109, 3110, 3111, 3168, 2554, 3112, 1396, 3114, 3115,
	3116, 2887, 204, 3120, 3121, 3122, 3123, 3124, 3125, 3126,
	3127, 3128, 3129, 1393, 2889, 1394, 1395, 2553, 2599, 1396,
	2892, 3136, 2885, 3553, 3140, 3162, 3141, 3143, 3353, 3146,
	3148, 204, 3150, 3151, 3152, 3153, 1393, 3160, 1394, 1395,
	3159, 3157, 3158, 2542, 3165, 3172, 1393, 1396, 1394, 1395,
	3634, 2657, 1610, 204, 3138, 204, 204, 204, 3187, 2462,
	3177, 2010, 2536, 3197, 1434, 702, 702, 1396, 1393, 3194,
	1394, 1395, 2201, 3328, 1396, 3181, 3182, 3201, 3202, 3186,
	1959, 2535, 3251, 3252, 3200, 3199, 1396, 721, 3161, 720,
	1396, 718, 3026, 3207, 1393, 3208, 1394, 1395, 3025, 2585,
	2613, 1399, 868, 2534, 3078, 3079, 2573, 3080, 3272, 3273,
	3082, 1622, 3084, 1393, 3086, 1394, 1395, 2624, 702, 702,
	702, 702, 2622, 3224, 1396, 3226, 2621, 2409, 2209, 3218,
	3219, 2533, 1393, 3192, 1394, 1395, 3188, 3682, 1396, 2203,
	2199, 2591, 819, 818, 730, 722, 714, 817, 816, 3206,
	3024, 2532, 3666, 1396, 1393, 2204, 1394, 1395, 2531, 2740,
	3044, 1396, 2742, 2658, 3040, 1376, 1586, 708, 1006, 3073,
	2530, 3579, 2436, 3222, 2529, 3288, 3286, 3096, 1585, 2040,
	2041, 3586, 1393, 3255, 1394, 1395, 3266, 3259, 3260, 3261,
	1397, 3006, 3262, 1396, 2987, 3240, 2708, 3241, 3242, 3243,
	2296, 76, 1393, 51, 1394, 1395, 3548, 3622, 2528, 1393,
	815, 1394, 1395, 812, 3330, 3309, 1396, 3331, 3332, 1452,
	1396, 1393, 2522, 1394, 1395, 1393, 2849, 1394, 1395, 2850,
	204, 1396, 3605, 3606, 811, 3607, 2068, 2521, 1372, 3305,
	3300, 1369, 3706, 3304, 1934, 2520, 102, 38, 37, 1439,
	3317, 36, 35, 34, 702, 28, 702, 3348, 27, 1393,
	26, 1394, 1395, 25, 24, 1396, 3326, 21, 20, 31,
	3315, 23, 1995, 1393, 1993, 1394, 1395, 2517, 22, 19,
	3377, 18, 3009, 3726, 3770, 3319, 1396, 2904, 1393, 132,
	1394, 1395, 60, 57, 55, 140, 1393, 3327, 1394, 1395,
	2516, 139, 1396, 58, 2515, 3334, 3371, 3373, 54, 3369,
	3358, 3357, 3349, 2907, 1396, 2513, 1123, 2907, 52, 702,
	3367, 3365, 45, 44, 1396, 43, 42, 33, 1393, 32,
	1394, 1395, 204, 17, 16, 702, 3466, 15, 14, 13,
	12, 11, 7, 6, 3378, 3379, 41, 3381, 40, 2509,
	30, 1393, 39, 1394, 1395, 1393, 29, 1394, 1395, 1396,
	4, 2695, 702, 2298, 0, 0, 1393, 0, 1394, 1395,
	2508, 0, 3463, 0, 0, 0, 3461, 3459, 0, 3462,
	0, 0, 0, 0, 0, 3478, 2504, 3470, 0, 0,
	0, 3498, 3517, 3518, 0, 3483, 3482, 0, 2502, 1995,
	1393, 1993, 1394, 1395, 0, 0, 47, 3521, 2467, 0,
	0, 0, 0, 702, 0, 0, 0, 702, 702, 0,
	0, 1393, 0, 1394, 1395, 0, 0, 0, 0, 3479,
	0, 3473, 3474, 3475, 0, 0, 0, 1393, 3486, 1394,
	1395, 0, 1612, 2456, 879, 0, 702, 93, 3522, 1393,
	0, 1394, 1395, 3524, 0, 0, 0, 3527, 0, 1393,
	0, 1394, 1395, 3564, 0, 0, 0, 0, 0, 0,
	3546, 3543, 3544, 3504, 3505, 0, 3507, 3545, 3508, 3509,
	0, 1702, 0, 3512, 3513, 3514, 0, 3516, 3519, 3552,
	3561, 0, 3563, 0, 1393, 0, 1394, 1395, 3567, 0,
	0, 2907, 0, 3528, 3530, 3531, 3533, 3535, 3536, 3538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 93, 0,
	0, 0, 3569, 0, 204, 0, 0, 3568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 204, 0, 0, 0, 1004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3582, 3585, 0,
	0, 0, 3578, 0, 0, 0, 0, 0, 3590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 702, 3593, 0, 0, 0, 0, 0, 0, 0,
	0, 1439, 0, 702, 0, 0, 0, 0, 0, 3611,
	0, 0, 3612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3600, 0, 0, 0, 3620, 0, 0, 0,
	3610, 0, 0, 0, 0, 702, 702, 0, 3627, 2904,
	0, 0, 0, 0, 0, 3635, 0, 0, 0, 3639,
	0, 0, 0, 0, 3601, 0, 3632, 702, 3667, 3648,
	3668, 3642, 3647, 3644, 3498, 3655, 3653, 3643, 3641, 3646,
	3637, 204, 702, 3645, 3617, 0, 0, 0, 0, 0,
	3618, 3619, 0, 3597, 0, 0, 0, 0, 0, 47,
	3678, 0, 0, 0, 0, 0, 0, 0, 3681, 3689,
	0, 3694, 3630, 3700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3667, 0, 3668, 3711, 0, 0,
	702, 0, 3709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3660, 3661, 0, 0,
	0, 0, 3720, 702, 0, 0, 3725, 0, 0, 0,
	3670, 3672, 3674, 1447, 0, 0, 0, 0, 0, 0,
	3739, 0, 702, 0, 702, 0, 0, 47, 0, 3742,
	1995, 0, 1993, 0, 0, 0, 0, 3703, 3754, 3751,
	3750, 0, 0, 0, 3757, 3755, 3753, 0, 0, 0,
	0, 0, 0, 0, 0, 3667, 0, 3668, 3766, 0,
	0, 0, 0, 3772, 0, 0, 0, 0, 0, 3779,
	3778, 3781, 0, 0, 0, 0, 0, 0, 0, 3722,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	1993, 3791, 3792, 3518, 3790, 0, 3789, 0, 0, 1954,
	1955, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3745, 3747, 3749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3769, 2001, 2002,
	0, 0, 0, 2004, 0, 970, 970, 2009, 0, 0,
	0, 2014, 0, 0, 3782, 3783, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 0, 0, 0, 0, 2062, 2063,
	2064, 2065, 2066, 2067, 2069, 0, 2074, 0, 2076, 2077,
	2078, 0, 2080, 2081, 2082, 0, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 0,
	2112, 0, 2119, 2120, 970, 0, 970, 970, 970, 970,
	970, 0, 0, 0, 0, 0, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 0, 2141, 2142, 2143, 2144, 2145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 2118, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2182, 2183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 1196, 1196,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 2263, 0, 0, 0, 943, 1436, 1441, 1442,
	0, 1445, 0, 1446, 1448, 1449, 1450, 0, 1453, 1454,
	1456, 1456, 0, 1456, 1460, 1460, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 0, 0, 0, 0, 1527, 0, 1529, 1530, 1531,
	1532, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	1460, 1460, 1460, 1460, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 3399, 3401, 3400, 3418,
	3419, 3420, 3421, 3422, 3423, 3424, 769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 943, 0, 0, 0, 943, 0,
	0, 0, 0, 943, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2465,
	178, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	2472, 2473, 2474, 2475, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 148, 170, 169, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1452, 0, 0, 681, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3413, 3414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	701, 0, 0, 0, 0, 164, 145, 167, 152, 144,
	0, 165, 166, 0, 1196, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 154, 149, 150, 151, 155, 0,
	0, 1612, 0, 0, 0, 146, 0, 835, 0, 748,
	839, 750, 836, 837, 157, 746, 749, 838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 768, 3398, 3402, 3403, 3404, 3415,
	3416, 3417, 3425, 3427, 800, 3426, 3428, 3429, 3430, 3433,
	3434, 3435, 3436, 3431, 3432, 3437, 3382, 3386, 3383, 3384,
	3385, 3397, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394,
	3395, 3396, 3438, 3439, 3440, 3441, 3442, 3443, 3408, 3412,
	3411, 3409, 3410, 3406, 3407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 841,
	0, 0, 845, 0, 0, 0, 847, 846, 0, 848,
	814, 813, 173, 881, 842, 843, 0, 844, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 0,
	1196, 1196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 0, 0, 2777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 162, 970, 0, 0, 2801, 2802, 0,
	0, 2804, 0, 0, 2806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 2813, 2814, 2815, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 2820, 0, 0, 2822,
	2823, 2824, 0, 0, 0, 2825, 2826, 0, 0, 2088,
	2828, 0, 0, 2830, 0, 0, 2832, 2833, 2834, 2835,
	0, 0, 0, 0, 2836, 2088, 2088, 2088, 2088, 2088,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 970, 0, 0, 0, 0, 0, 0,
	2859, 2860, 2861, 2862, 2863, 2864, 0, 0, 0, 2865,
	2866, 0, 2867, 0, 2868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 180, 177, 183,
	184, 185, 187, 189, 190, 191, 192, 0, 0, 0,
	2202, 0, 193, 195, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2899,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2929, 0, 138, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 701, 1355, 701, 701, 0, 159, 92, 49, 50,
	94, 0, 0, 0, 0, 0, 2993, 0, 0, 0,
	1004, 0, 0, 701, 0, 178, 0, 98, 179, 0,
	0, 53, 83, 84, 0, 81, 85, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 1725, 1726, 170,
	169, 198, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 1727, 167, 0, 1724, 0, 165, 166, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 56, 59, 62, 61, 64, 0, 80,
	0, 0, 89, 67, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 2438, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 701, 701, 68, 97, 96,
	0, 0, 78, 79, 63, 0, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2448, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 3247, 0, 0,
	0, 0, 0, 0, 0, 0, 1694, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 70, 71, 0, 72, 73, 74, 75, 0,
	3271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 1438, 1744, 0, 0, 1747, 1748,
	701, 701, 0, 701, 3724, 701, 701, 0, 701, 701,
	701, 701, 701, 701, 1663, 0, 0, 0, 0, 0,
	0, 1438, 1779, 1780, 1438, 701, 1438, 0, 1785, 820,
	0, 0, 0, 0, 168, 0, 0, 3306, 2546, 3307,
	0, 0, 3308, 0, 0, 3311, 3312, 0, 0, 0,
	0, 0, 0, 0, 3316, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 3318, 0, 0, 0, 0, 0,
	2578, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	701, 0, 0, 0, 0, 0, 3335, 943, 0, 3336,
	0, 3337, 3338, 0, 3339, 161, 3340, 0, 162, 0,
	0, 3341, 0, 0, 700, 0, 0, 95, 2617, 2618,
	0, 0, 0, 0, 0, 0, 0, 2202, 0, 0,
	943, 2637, 0, 0, 0, 0, 3366, 0, 174, 701,
	0, 0, 0, 0, 0, 186, 0, 3374, 0, 0,
	3376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3380, 0, 0, 0, 0, 995, 1651, 0,
	1003, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	3455, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 180, 177, 183, 184, 185, 187, 189, 190,
	191, 192, 0, 0, 0, 2715, 0, 193, 195, 196,
	197, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3551, 0,
	0, 0, 0, 0, 0, 701, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 1677, 1680, 1681, 1682, 1683,
	1684, 1685, 0, 1686, 1687, 1689, 1690, 1688, 1691, 1692,
	1665, 1666, 1667, 1668, 1649, 1650, 1678, 0, 1652, 0,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 0,
	0, 1662, 1669, 1670, 1671, 1672, 0, 1673, 1674, 1675,
	1676, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1438, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 701, 0, 0,
	0, 0, 0, 1438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 701,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3599, 2846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3613, 0, 701, 3614,
	0, 3615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	2908, 0, 93, 0, 0, 2202, 2202, 2202, 2202, 2202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 2202, 0, 0, 2202, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	701, 0, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 3701, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3717, 0,
	3718, 0, 3719, 3015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 2286, 2287,
	2288, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 701, 701, 0, 0, 701,
	0, 701, 0, 3767, 0, 3768, 2318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 0, 1198, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 1367, 0, 0, 701, 0, 0, 0,
	701, 701, 0, 1677, 1680, 1681, 1682, 1683, 1684, 1685,
	0, 1686, 1687, 1689, 1690, 1688, 1691, 1692, 1665, 1666,
	1667, 1668, 1649, 1650, 1678, 0, 1652, 0, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 0, 0, 1662,
	1669, 1670, 1671, 1672, 0, 1673, 1674, 1675, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 0, 881, 0, 0,
	0, 869, 882, 883, 884, 885, 870, 0, 0, 871,
	872, 0, 873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 886, 887, 0,
	0, 0, 0, 0, 0, 0, 2202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 3027, 3028, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 0, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1438, 0,
	701, 0, 0, 202, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 3029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 971, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 1733, 0, 0, 0, 0, 0, 0,
	3342, 1733, 3346, 3347, 0, 0, 3030, 3031, 0, 0,
	1750, 1750, 0, 1750, 0, 1750, 1750, 0, 1759, 1750,
	1750, 1750, 1750, 1750, 0, 2908, 0, 93, 0, 2908,
	0, 0, 0, 0, 0, 995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 3471,
	0, 0, 0, 2651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 701, 701, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2908, 0, 1438, 2725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3580, 1198, 1198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 3631, 0, 0, 0, 0, 0, 0, 93, 701,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2039,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 635, 0, 701, 635,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1198, 0,
	701, 0, 0, 0, 1438, 0, 0, 701, 701, 1438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3721, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1440, 0, 0, 0, 0,
	2977, 0, 0, 2174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	1198, 0, 0, 701, 0, 0, 1438, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3069, 0, 0, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 0, 0, 0, 0, 1003, 1733, 1440, 0, 1733,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 0, 1989, 0, 0, 0,
	1989, 1989, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1440, 0, 0,
	0, 0, 0, 0, 701, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2425, 0, 1440, 0, 0, 1440, 0, 1440,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 701, 701, 701,
	701, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	1198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 1906, 635, 635, 635, 635, 635,
	635, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1438, 0,
	0, 0, 0, 701, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2586, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2601, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 701, 701, 0, 0,
	0, 0, 0, 0, 0, 2683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 1440,
	0, 0, 0, 2174, 0, 0, 0, 0, 0, 0,
	2709, 971, 971, 0, 1733, 1733, 1440, 0, 0, 2714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 1872, 971, 971, 971, 971, 971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	1438, 0, 701, 1872, 635, 0, 635, 0, 635, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 2847,
	0, 0, 0, 0, 0, 0, 0, 1198, 0, 0,
	0, 701, 0, 101, 0, 0, 881, 0, 0, 0,
	869, 882, 883, 884, 885, 870, 0, 0, 871, 872,
	0, 873, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 878, 886, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 2884, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1198, 0, 0, 0, 0, 0, 0, 2911, 1750, 0,
	0, 0, 701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3027, 3028, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 701, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 2174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 635, 0, 3029, 0,
	635, 0, 2412, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3030, 3031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1440, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 839, 0,
	836, 837, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2174, 2174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3293, 3294, 3295,
	3296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 2694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3370, 0, 3372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 635, 635, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3481, 0, 0, 0, 0, 0,
	635, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3539, 0, 0, 0, 3539, 3539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2174, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1440, 0, 0,
	0, 0, 1440, 635, 635, 635, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 2927, 0, 0, 0, 2174,
	0, 1801, 0, 635, 0, 0, 635, 2935, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3624, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 3628, 0, 0, 0, 0, 0, 0, 1440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1198, 1198, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 635,
	0, 3684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3132, 0, 3684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 635, 635, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 1332, 1317,
	517, 0, 1260, 1335, 1229, 1248, 1345, 1251, 1254, 1296,
	1208, 1274, 415, 1245, 1201, 1233, 1203, 1240, 1204, 1231,
	1262, 273, 1228, 1319, 1278, 1334, 366, 270, 1210, 1234,
	429, 1250, 211, 1298, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 1341, 370,
	1284, 0, 496, 400, 0, 0, 1801, 1264, 1323, 1272,
	1310, 1259, 1297, 1218, 1283, 1336, 1246, 1293, 1337, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	3656, 691, 0, 635, 0, 0, 3657, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 1242, 1290,
	1331, 1243, 1292, 268, 323, 275, 267, 522, 1342, 1322,
	1207, 1271, 1330, 0, 0, 234, 1333, 1266, 0, 1295,
	0, 1348, 1202, 1286, 0, 1205, 1209, 1344, 1326, 1237,
	278, 0, 0, 1440, 0, 0, 0, 0, 1263, 1273,
	1307, 1311, 1257, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 1282, 0, 0, 0, 1214, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 1801, 0, 1217, 0, 1236, 1308, 0,
	1200, 300, 1211, 401, 260, 1354, 0, 453, 1315, 1325,
	1258, 565, 1329, 1256, 1255, 1302, 1215, 1321, 1249, 365,
	1213, 332, 206, 230, 0, 1247, 411, 461, 473, 1320,
	1232, 1241, 258, 1239, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 1281, 1300, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 1212, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 1227, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 1316, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 1305, 1347,
	424, 472, 245, 544, 495, 1350, 1351, 1352, 1353, 1222,
	1226, 1220, 1287, 1221, 1276, 1277, 1223, 1338, 1339, 1340,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 1309,
	1216, 0, 1224, 1225, 1318, 1327, 1328, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 1280, 205, 226,
	368, 1343, 454, 291, 594, 555, 549, 212, 228, 1219,
	265, 1230, 1238, 0, 1244, 1252, 1253, 1265, 1267, 1268,
	1269, 1270, 1288, 1289, 1291, 1299, 1301, 1304, 1306, 1313,
	1324, 1346, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	1279, 1349, 553, 1285, 381, 284, 307, 322, 1294, 554,
	501, 232, 466, 293, 256, 1312, 1314, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 1275, 1303, 376, 518, 519, 318, 396, 0, 0,
	0, 1332, 1317, 517, 0, 1260, 1335, 1229, 1248, 1345,
	1251, 1254, 1296, 1208, 1274, 415, 1245, 1201, 1233, 1203,
	1240, 1204, 1231, 1262, 273, 1228, 1319, 1278, 1334, 366,
	270, 1210, 1234, 429, 1250, 211, 1298, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 1341, 370, 1284, 0, 496, 400, 0, 0, 0,
	1264, 1323, 1272, 1310, 1259, 1297, 1218, 1283, 1336, 1246,
	1293, 1337, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 1242, 1290, 1331, 1243, 1292, 268, 323, 275, 267,
	522, 1342, 1322, 1207, 1271, 1330, 0, 0, 234, 1333,
	1266, 0, 1295, 0, 1348, 1202, 1286, 0, 1205, 1209,
	1344, 1326, 1237, 278, 0, 0, 0, 0, 0, 0,
	0, 1263, 1273, 1307, 1311, 1257, 0, 0, 0, 0,
	0, 2936, 0, 1235, 0, 1282, 0, 0, 0, 1214,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 1217, 0,
	1236, 1308, 0, 1200, 300, 1211, 401, 260, 1354, 0,
	453, 1315, 1325, 1258, 565, 1329, 1256, 1255, 1302, 1215,
	1321, 1249, 365, 1213, 332, 206, 230, 0, 1247, 411,
	461, 473, 1320, 1232, 1241, 258, 1239, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 1281, 1300, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 1212,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 1227, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 1316, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 1305, 1347, 424, 472, 245, 544, 495, 1350, 1351,
	1352, 1353, 1222, 1226, 1220, 1287, 1221, 1276, 1277, 1223,
	1338, 1339, 1340, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 1309, 1216, 0, 1224, 1225, 1318, 1327, 1328,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	1280, 205, 226, 368, 1343, 454, 291, 594, 555, 549,
	212, 228, 1219, 265, 1230, 1238, 0, 1244, 1252, 1253,
	1265, 1267, 1268, 1269, 1270, 1288, 1289, 1291, 1299, 1301,
	1304, 1306, 1313, 1324, 1346, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 1279, 1349, 553, 1285, 381, 284, 307,
	322, 1294, 554, 501, 232, 466, 293, 256, 1312, 1314,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 1275, 1303, 376, 518, 519, 318,
	396, 0, 0, 0, 1332, 1317, 517, 0, 1260, 1335,
	1229, 1248, 1345, 1251, 1254, 1296, 1208, 1274, 415, 1245,
	1201, 1233, 1203, 1240, 1204, 1231, 1262, 273, 1228, 1319,
	1278, 1334, 366, 270, 1210, 1234, 429, 1250, 211, 1298,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 1341, 370, 1284, 0, 496, 400,
	0, 0, 0, 1264, 1323, 1272, 1310, 1259, 1297, 1218,
	1283, 1336, 1246, 1293, 1337, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 1242, 1290, 1331, 1243, 1292, 268,
	323, 275, 267, 522, 1342, 1322, 1207, 1271, 1330, 0,
	0, 234, 1333, 1266, 0, 1295, 0, 1348, 1202, 1286,
	0, 1205, 1209, 1344, 1326, 1237, 278, 0, 0, 0,
	0, 0, 0, 0, 1263, 1273, 1307, 1311, 1257, 0,
	0, 0, 0, 0, 2897, 0, 1235, 0, 1282, 0,
	0, 0, 1214, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 1217, 0, 1236, 1308, 0, 1200, 300, 1211, 401,
	260, 1354, 0, 453, 1315, 1325, 1258, 565, 1329, 1256,
	1255, 1302, 1215, 1321, 1249, 365, 1213, 332, 206, 230,
	0, 1247, 411, 461, 473, 1320, 1232, 1241, 258, 1239,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	1281, 1300, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 1212, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 1227, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	1316, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 1305, 1347, 424, 472, 245, 544,
	495, 1350, 1351, 1352, 1353, 1222, 1226, 1220, 1287, 1221,
	1276, 1277, 1223, 1338, 1339, 1340, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 1309, 1216, 0, 1224, 1225,
	1318, 1327, 1328, 630, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 1280, 205, 226, 368, 1343, 454, 291,
	594, 555, 549, 212, 228, 1219, 265, 1230, 1238, 0,
	1244, 1252, 1253, 1265, 1267, 1268, 1269, 1270, 1288, 1289,
	1291, 1299, 1301, 1304, 1306, 1313, 1324, 1346, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 1279, 1349, 553, 1285,
	381, 284, 307, 322, 1294, 554, 501, 232, 466, 293,
	256, 1312, 1314, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 1275, 1303, 376,
	518, 519, 318, 396, 0, 0, 0, 1332, 1317, 517,
	0, 1260, 1335, 1229, 1248, 1345, 1251, 1254, 1296, 1208,
	1274, 415, 1245, 1201, 1233, 1203, 1240, 1204, 1231, 1262,
	273, 1228, 1319, 1278, 1334, 366, 270, 1210, 1234, 429,
	1250, 211, 1298, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 1341, 370, 1284,
	0, 496, 400, 0, 0, 0, 1264, 1323, 1272, 1310,
	1259, 1297, 1218, 1283, 1336, 1246, 1293, 1337, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 1242, 1290, 1331,
	1243, 1292, 268, 323, 275, 267, 522, 1342, 1322, 1207,
	1271, 1330, 0, 0, 234, 1333, 1266, 0, 1295, 0,
	1348, 1202, 1286, 0, 1205, 1209, 1344, 1326, 1237, 278,
	0, 0, 0, 0, 0, 0, 0, 1263, 1273, 1307,
	1311, 1257, 0, 0, 0, 0, 0, 2190, 0, 1235,
	0, 1282, 0, 0, 0, 1214, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 1217, 0, 1236, 1308, 0, 1200,
	300, 1211, 401, 260, 1354, 0, 453, 1315, 1325, 1258,
	565, 1329, 1256, 1255, 1302, 1215, 1321, 1249, 365, 1213,
	332, 206, 230, 0, 1247, 411, 461, 473, 1320, 1232,
	1241, 258, 1239, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 1281, 1300, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 1212, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	1227, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 1316, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 1305, 1347, 424,
	472, 245, 544, 495, 1350, 1351, 1352, 1353, 1222, 1226,
	1220, 1287, 1221, 1276, 1277, 1223, 1338, 1339, 1340, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 1309, 1216,
	0, 1224, 1225, 1318, 1327, 1328, 630, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 1280, 205, 226, 368,
	1343, 454, 291, 594, 555, 549, 212, 228, 1219, 265,
	1230, 1238, 0, 1244, 1252, 1253, 1265, 1267, 1268, 1269,
	1270, 1288, 1289, 1291, 1299, 1301, 1304, 1306, 1313, 1324,
	1346, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 1279,
	1349, 553, 1285, 381, 284, 307, 322, 1294, 554, 501,
	232, 466, 293, 256, 1312, 1314, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	1275, 1303, 376, 518, 519, 318, 396, 0, 0, 0,
	1332, 1317, 517, 0, 1260, 1335, 1229, 1248, 1345, 1251,
	1254, 1296, 1208, 1274, 415, 1245, 1201, 1233, 1203, 1240,
	1204, 1231, 1262, 273, 1228, 1319, 1278, 1334, 366, 270,
	1210, 1234, 429, 1250, 211, 1298, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	1341, 370, 1284, 0, 496, 400, 0, 0, 0, 1264,
	1323, 1272, 1310, 1259, 1297, 1218, 1283, 1336, 1246, 1293,
	1337, 325, 253, 327, 210, 412, 497, 289, 0, 101,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	1242, 1290, 1331, 1243, 1292, 268, 323, 275, 267, 522,
	1342, 1322, 1207, 1271, 1330, 0, 0, 234, 1333, 1266,
	0, 1295, 0, 1348, 1202, 1286, 0, 1205, 1209, 1344,
	1326, 1237, 278, 0, 0, 0, 0, 0, 0, 0,
	1263, 1273, 1307, 1311, 1257, 0, 0, 0, 0, 0,
	0, 0, 1235, 0, 1282, 0, 0, 0, 1214, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 0, 0, 0, 1217, 0, 1236,
	1308, 0, 1200, 300, 1211, 401, 260, 1354, 0, 453,
	1315, 1325, 1258, 565, 1329, 1256, 1255, 1302, 1215, 1321,
	1249, 365, 1213, 332, 206, 230, 0, 1247, 411, 461,
	473, 1320, 1232, 1241, 258, 1239, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 1281, 1300, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 1212, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 1227, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 1316, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	1305, 1347, 424, 472, 245, 544, 495, 1350, 1351, 1352,
	1353, 1222, 1226, 1220, 1287, 1221, 1276, 1277, 1223, 1338,
	1339, 1340, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 1309, 1216, 0, 1224, 1225, 1318, 1327, 1328, 630,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 1280,
	205, 226, 368, 1343, 454, 291, 594, 555, 549, 212,
	228, 1219, 265, 1230, 1238, 0, 1244, 1252, 1253, 1265,
	1267, 1268, 1269, 1270, 1288, 1289, 1291, 1299, 1301, 1304,
	1306, 1313, 1324, 1346, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 1279, 1349, 553, 1285, 381, 284, 307, 322,
	1294, 554, 501, 232, 466, 293, 256, 1312, 1314, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 1275, 1303, 376, 518, 519, 318, 396,
	0, 0, 0, 1332, 1317, 517, 0, 1260, 1335, 1229,
	1248, 1345, 1251, 1254, 1296, 1208, 1274, 415, 1245, 1201,
	1233, 1203, 1240, 1204, 1231, 1262, 273, 1228, 1319, 1278,
	1334, 366, 270, 1210, 1234, 429, 1250, 211, 1298, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 1341, 370, 1284, 0, 496, 400, 0,
	0, 0, 1264, 1323, 1272, 1310, 1259, 1297, 1218, 1283,
	1336, 1246, 1293, 1337, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 1242, 1290, 1331, 1243, 1292, 268, 323,
	275, 267, 522, 1342, 1322, 1207, 1271, 1330, 0, 0,
	234, 1333, 1266, 0, 1295, 0, 1348, 1202, 1286, 0,
	1205, 1209, 1344, 1326, 1237, 278, 0, 0, 0, 0,
	0, 0, 0, 1263, 1273, 1307, 1311, 1257, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 1282, 0, 0,
	0, 1214, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 0, 0, 0, 0,
	1217, 0, 1236, 1308, 0, 1200, 300, 1211, 401, 260,
	1354, 0, 453, 1315, 1325, 1258, 565, 1329, 1256, 1255,
	1302, 1215, 1321, 1249, 365, 1213, 332, 206, 230, 0,
	1247, 411, 461, 473, 1320, 1232, 1241, 258, 1239, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 1281,
	1300, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 1212, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 1227, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 1316,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 1305, 1347, 424, 472, 245, 544, 495,
	1350, 1351, 1352, 1353, 1222, 1226, 1220, 1287, 1221, 1276,
	1277, 1223, 1338, 1339, 1340, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 1309, 1216, 0, 1224, 1225, 1318,
	1327, 1328, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 1280, 205, 226, 368, 1343, 454, 291, 594,
	555, 549, 212, 228, 1219, 265, 1230, 1238, 0, 1244,
	1252, 1253, 1265, 1267, 1268, 1269, 1270, 1288, 1289, 1291,
	1299, 1301, 1304, 1306, 1313, 1324, 1346, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 1279, 1349, 553, 1285, 381,
	284, 307, 322, 1294, 554, 501, 232, 466, 293, 256,
	1312, 1314, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 1275, 1303, 376, 518,
	519, 318, 396, 0, 0, 0, 1332, 1317, 517, 0,
	1260, 1335, 1229, 1248, 1345, 1251, 1254, 1296, 1208, 1274,
	415, 1245, 1201, 1233, 1203, 1240, 1204, 1231, 1262, 273,
	1228, 1319, 1278, 1334, 366, 270, 1210, 1234, 429, 1250,
	211, 1298, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 1341, 370, 1284, 0,
	496, 400, 0, 0, 0, 1264, 1323, 1272, 1310, 1259,
	1297, 1218, 1283, 1336, 1246, 1293, 1337, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 1242, 1290, 1331, 1243,
	1292, 268, 323, 275, 267, 522, 1342, 1322, 1207, 1271,
	1330, 0, 0, 234, 1333, 1266, 0, 1295, 0, 1348,
	1202, 1286, 0, 1205, 1209, 1344, 1326, 1237, 278, 0,
	0, 0, 0, 0, 0, 0, 1263, 1273, 1307, 1311,
	1257, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
	1282, 0, 0, 0, 1214, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 0, 1217, 0, 1236, 1308, 0, 1200, 300,
	1211, 401, 260, 1354, 0, 453, 1315, 1325, 1258, 565,
	1329, 1256, 1255, 1302, 1215, 1321, 1249, 365, 1213, 332,
	206, 230, 0, 1247, 411, 461, 473, 1320, 1232, 1241,
	258, 1239, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 1281, 1300, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 1212, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 1227,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 1316, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 1305, 1347, 424, 472,
	245, 544, 495, 1350, 1351, 1352, 1353, 1222, 1226, 1220,
	1287, 1221, 1276, 1277, 1223, 1338, 1339, 1340, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 1309, 1216, 0,
	1224, 1225, 1318, 1327, 1328, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 1280, 205, 226, 368, 1343,
	454, 291, 594, 555, 549, 212, 228, 1219, 265, 1230,
	1238, 0, 1244, 1252, 1253, 1265, 1267, 1268, 1269, 1270,
	1288, 1289, 1291, 1299, 1301, 1304, 1306, 1313, 1324, 1346,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 1279, 1349,
	553, 1285, 381, 284, 307, 322, 1294, 554, 501, 232,
	466, 293, 256, 1312, 1314, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 1275,
	1303, 376, 518, 519, 318, 396, 0, 0, 0, 1332,
	1317, 517, 0, 1260, 1335, 1229, 1248, 1345, 1251, 1254,
	1296, 1208, 1274, 415, 1245, 1201, 1233, 1203, 1240, 1204,
	1231, 1262, 273, 1228, 1319, 1278, 1334, 366, 270, 1210,
	1234, 429, 1250, 211, 1298, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 1341,
	370, 1284, 0, 496, 400, 0, 0, 0, 1264, 1323,
	1272, 1310, 1259, 1297, 1218, 1283, 1336, 1246, 1293, 1337,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 1242,
	1290, 1331, 1243, 1292, 268, 323, 275, 267, 522, 1342,
	1322, 1207, 1271, 1330, 0, 0, 234, 1333, 1266, 0,
	1295, 0, 1348, 1202, 1286, 0, 1205, 1209, 1344, 1326,
	1237, 278, 0, 0, 0, 0, 0, 0, 0, 1263,
	1273, 1307, 1311, 1257, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 1282, 0, 0, 0, 1214, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 1217, 0, 1236, 1308,
	0, 1200, 300, 1211, 401, 260, 1354, 0, 453, 1315,
	1325, 1258, 565, 1329, 1256, 1255, 1302, 1215, 1321, 1249,
	365, 1213, 332, 206, 230, 0, 1247, 411, 461, 473,
	1320, 1232, 1241, 258, 1239, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 1281, 1300, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 1212, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 1227, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 1316, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 1305,
	1347, 424, 472, 245, 544, 495, 1350, 1351, 1352, 1353,
	1222, 1226, 1220, 1287, 1221, 1276, 1277, 1223, 1338, 1339,
	1340, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	1309, 1216, 0, 1224, 1225, 1318, 1327, 1328, 630, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 1280, 205,
	226, 368, 1343, 454, 291, 594, 555, 549, 212, 228,
	1219, 265, 1230, 1238, 0, 1244, 1252, 1253, 1265, 1267,
	1268, 1269, 1270, 1288, 1289, 1291, 1299, 1301, 1304, 1306,
	1313, 1324, 1346, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 1279, 1349, 553, 1285, 381, 284, 307, 322, 1294,
	554, 501, 232, 466, 293, 256, 1312, 1314, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 1275, 1303, 376, 518, 519, 318, 396, 0,
	0, 0, 0, 0, 517, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 731, 0, 0, 0, 273, 736, 0, 0, 0,
	366, 270, 0, 0, 429, 0, 211, 0, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 743, 370, 0, 0, 496, 400, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 253, 327, 210, 412, 497, 289,
	0, 101, 0, 0, 881, 865, 831, 832, 869, 882,
	883, 884, 885, 870, 0, 243, 871, 872, 250, 873,
	0, 830, 771, 773, 772, 790, 791, 792, 793, 794,
	795, 796, 769, 878, 886, 887, 0, 268, 323, 275,
	267, 522, 0, 0, 2070, 2071, 2072, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 713, 728, 0,
	742, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 726, 0, 0, 0, 0, 825, 0, 727, 0,
	0, 735, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 401, 260, 0,
	0, 453, 824, 0, 0, 565, 0, 0, 822, 0,
	0, 0, 0, 365, 0, 332, 206, 230, 0, 0,
	411, 461, 473, 0, 0, 0, 875, 0, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 0, 0,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 876, 877, 259, 596, 777, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 785, 786, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 835, 823, 748, 839, 750, 836, 837,
	745, 746, 749, 838, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 826, 734, 733, 0, 741, 0, 767,
	768, 770, 774, 775, 776, 787, 788, 789, 797, 799,
	800, 798, 801, 802, 803, 806, 807, 808, 809, 804,
	805, 810, 751, 755, 752, 753, 754, 766, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 849, 850,
	851, 852, 853, 854, 780, 784, 783, 781, 782, 778,
	779, 732, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 840, 265, 841, 0, 0, 845, 0,
	0, 0, 847, 846, 0, 848, 814, 813, 0, 0,
	842, 843, 0, 844, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 855, 856,
	857, 858, 859, 860, 861, 862, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 880,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 731, 0,
	0, 0, 273, 736, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 743,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	739, 740, 0, 0, 0, 0, 0, 0, 2219, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 101, 0,
	0, 881, 865, 831, 832, 869, 882, 883, 884, 885,
	870, 0, 243, 871, 872, 250, 873, 0, 830, 771,
	773, 772, 790, 791, 792, 793, 794, 795, 796, 769,
	878, 886, 887, 2220, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 713, 728, 0, 742, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 726, 0,
	0, 0, 0, 825, 0, 727, 0, 0, 735, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 824,
	0, 0, 565, 0, 0, 822, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 875, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	876, 877, 259, 596, 777, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 785,
	786, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	835, 823, 748, 839, 750, 836, 837, 745, 746, 749,
	838, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	826, 734, 733, 0, 741, 0, 767, 768, 770, 774,
	775, 776, 787, 788, 789, 797, 799, 800, 798, 801,
	802, 803, 806, 807, 808, 809, 804, 805, 810, 751,
	755, 752, 753, 754, 766, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 849, 850, 851, 852, 853,
	854, 780, 784, 783, 781, 782, 778, 779, 732, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	840, 265, 841, 0, 0, 845, 0, 0, 0, 847,
	846, 0, 848, 814, 813, 0, 0, 842, 843, 0,
	844, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 855, 856, 857, 858, 859,
	860, 861, 862, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 880, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 0, 396, 376, 518, 519, 318, 92, 517,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 731, 0, 0, 0,
	273, 736, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 743, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 739, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 101, 0, 0, 881,
	865, 831, 832, 869, 882, 883, 884, 885, 870, 0,
	243, 871, 872, 250, 873, 0, 830, 771, 773, 772,
	790, 791, 792, 793, 794, 795, 796, 769, 878, 886,
	887, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 713, 728, 0, 742, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 726, 0, 0, 0,
	0, 825, 0, 727, 0, 0, 735, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 824, 0, 0,
	565, 0, 0, 822, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 875, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 876, 877,
	259, 596, 777, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 785, 786, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 835, 823,
	748, 839, 750, 836, 837, 745, 746, 749, 838, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 826, 734,
	733, 0, 741, 0, 767, 768, 770, 774, 775, 776,
	787, 788, 789, 797, 799, 800, 798, 801, 802, 803,
	806, 807, 808, 809, 804, 805, 810, 751, 755, 752,
	753, 754, 766, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 849, 850, 851, 852, 853, 854, 780,
	784, 783, 781, 782, 778, 779, 732, 205, 226, 368,
	100, 454, 291, 594, 555, 549, 212, 228, 840, 265,
	841, 0, 0, 845, 0, 0, 0, 847, 846, 0,
	848, 814, 813, 0, 0, 842, 843, 0, 844, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 855, 856, 857, 858, 859, 860, 861,
	862, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 880, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	396, 0, 376, 518, 519, 318, 517, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 731, 0, 0, 0, 273, 736, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 743, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 739, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 101, 0, 0, 881, 865, 831, 832,
	869, 882, 883, 884, 885, 870, 0, 243, 871, 872,
	250, 873, 0, 830, 771, 773, 772, 790, 791, 792,
	793, 794, 795, 796, 769, 878, 886, 887, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 713,
	728, 0, 742, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 726, 0, 0, 0, 0, 825, 0,
	727, 0, 0, 735, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 824, 0, 0, 565, 0, 0,
	822, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 875, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	3640, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 876, 877, 259, 596, 777,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 785, 786, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 835, 823, 748, 839, 750,
	836, 837, 745, 746, 749, 838, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 826, 734, 733, 0, 741,
	0, 767, 768, 770, 774, 775, 776, 787, 788, 789,
	797, 799, 800, 798, 801, 802, 803, 806, 807, 808,
	809, 804, 805, 810, 751, 755, 752, 753, 754, 766,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	849, 850, 851, 852, 853, 854, 780, 784, 783, 781,
	782, 778, 779, 732, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 840, 265, 841, 0, 0,
	845, 0, 0, 0, 847, 846, 0, 848, 814, 813,
	0, 0, 842, 843, 0, 844, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	855, 856, 857, 858, 859, 860, 861, 862, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 880, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	731, 0, 0, 0, 273, 736, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 743, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	101, 0, 1596, 881, 865, 831, 832, 869, 882, 883,
	884, 885, 870, 0, 243, 871, 872, 250, 873, 0,
	830, 771, 773, 772, 790, 791, 792, 793, 794, 795,
	796, 769, 878, 886, 887, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 713, 728, 0, 742,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	726, 0, 0, 0, 0, 825, 0, 727, 0, 0,
	735, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 824, 0, 0, 565, 0, 0, 822, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 875, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 876, 877, 259, 596, 777, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 785, 786, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 835, 823, 748, 839, 750, 836, 837, 745,
	746, 749, 838, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 826, 734, 733, 0, 741, 0, 767, 768,
	770, 774, 775, 776, 787, 788, 789, 797, 799, 800,
	798, 801, 802, 803, 806, 807, 808, 809, 804, 805,
	810, 751, 755, 752, 753, 754, 766, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 849, 850, 851,
	852, 853, 854, 780, 784, 783, 781, 782, 778, 779,
	732, 205, 226, 368, 0, 454, 291, 594, 555, 549,
	212, 228, 840, 265, 841, 0, 0, 845, 0, 0,
	0, 847, 846, 0, 848, 814, 813, 0, 0, 842,
	843, 0, 844, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 855, 856, 857,
	858, 859, 860, 861, 862, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 880, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 396, 0, 376, 518, 519, 318,
	517, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 731, 0, 0,
	0, 273, 736, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 743, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 739,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 101, 0, 0,
	881, 865, 831, 832, 869, 882, 883, 884, 885, 870,
	0, 243, 871, 872, 250, 873, 0, 830, 771, 773,
	772, 790, 791, 792, 793, 794, 795, 796, 769, 878,
	886, 887, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 713, 728, 0, 742, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 726, 969, 0,
	0, 0, 825, 0, 727, 0, 0, 735, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 824, 0,
	0, 565, 0, 0, 822, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 875, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 876,
	877, 259, 596, 777, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 785, 786,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 835,
	823, 748, 839, 750, 836, 837, 745, 746, 749, 838,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 826,
	734, 733, 0, 741, 0, 767, 768, 770, 774, 775,
	776, 787, 788, 789, 797, 799, 800, 798, 801, 802,
	803, 806, 807, 808, 809, 804, 805, 810, 751, 755,
	752, 753, 754, 766, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 849, 850, 851, 852, 853, 854,
	780, 784, 783, 781, 782, 778, 779, 732, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 840,
	265, 841, 0, 0, 845, 0, 0, 0, 847, 846,
	0, 848, 814, 813, 0, 0, 842, 843, 0, 844,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 855, 856, 857, 858, 859, 860,
	861, 862, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 880, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 731, 0, 0, 0, 273, 736,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 743, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 739, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 101, 0, 0, 881, 865, 831,
	832, 869, 882, 883, 884, 885, 870, 0, 243, 871,
	872, 250, 873, 0, 830, 771, 773, 772, 790, 791,
	792, 793, 794, 795, 796, 769, 878, 886, 887, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	713, 728, 0, 742, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 726, 0, 0, 0, 0, 825,
	0, 727, 0, 0, 735, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 824, 0, 0, 565, 0,
	0, 822, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 875,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 876, 877, 259, 596,
	777, 559, 225, 0, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 785, 786, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 0, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 0, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 0, 0, 424, 472, 245,
	544, 495, 0, 0, 0, 0, 835, 823, 748, 839,
	750, 836, 837, 745, 746, 749, 838, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 826, 734, 733, 0,
	741, 0, 767, 768, 770, 774, 775, 776, 787, 788,
	789, 797, 799, 800, 798, 801, 802, 803, 806, 807,
	808, 809, 804, 805, 810, 751, 755, 752, 753, 754,
	766, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 849, 850, 851, 852, 853, 854, 780, 784, 783,
	781, 782, 778, 779, 732, 205, 226, 368, 0, 454,
	291, 594, 555, 549, 212, 228, 840, 265, 841, 0,
	0, 845, 0, 0, 0, 847, 846, 0, 848, 814,
	813, 0, 0, 842, 843, 0, 844, 0, 0, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 855, 856, 857, 858, 859, 860, 861, 862, 302,
	538, 569, 536, 590, 563, 439, 378, 0, 0, 553,
	0, 381, 284, 307, 322, 0, 554, 501, 232, 466,
	293, 256, 880, 0, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 396, 0,
	376, 518, 519, 318, 517, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 731, 0, 0, 0, 273, 736, 0, 0, 0,
	366, 270, 0, 0, 429, 0, 211, 0, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 743, 370, 0, 0, 496, 400, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 253, 327, 210, 412, 497, 289,
	0, 101, 0, 0, 881, 865, 831, 832, 869, 882,
	883, 884, 885, 870, 0, 243, 871, 872, 250, 873,
	0, 830, 771, 773, 772, 790, 791, 792, 793, 794,
	795, 796, 769, 878, 886, 887, 0, 268, 323, 275,
	267, 522, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	742, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 726, 0, 0, 0, 0, 825, 0, 727, 0,
	0, 735, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 401, 260, 0,
	0, 453, 824, 0, 0, 565, 0, 0, 822, 0,
	0, 0, 0, 365, 0, 332, 206, 230, 0, 0,
	411, 461, 473, 0, 0, 0, 875, 0, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 0, 0,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 876, 877, 259, 596, 777, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 785, 786, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 835, 823, 748, 839, 750, 836, 837,
	745, 746, 749, 838, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 826, 734, 733, 0, 741, 0, 767,
	768, 770, 774, 775, 776, 787, 788, 789, 797, 799,
	800, 798, 801, 802, 803, 806, 807, 808, 809, 804,
	805, 810, 751, 755, 752, 753, 754, 766, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 849, 850,
	851, 852, 853, 854, 780, 784, 783, 781, 782, 778,
	779, 732, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 840, 265, 841, 0, 0, 845, 0,
	0, 0, 847, 846, 0, 848, 814, 813, 0, 0,
	842, 843, 0, 844, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 855, 856,
	857, 858, 859, 860, 861, 862, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 880,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1421, 1420, 1422, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 0, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 0, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 396, 0, 376, 518, 519, 318, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 0, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 0, 0, 0, 0,
	0, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 1043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 401, 260, 0, 0, 453, 0, 0, 1042, 565,
	0, 0, 0, 0, 0, 1039, 1040, 365, 998, 332,
	206, 230, 1033, 1037, 411, 461, 473, 0, 0, 0,
	258, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 1559, 865, 0, 0, 1556,
	0, 0, 0, 0, 1554, 0, 243, 1555, 1553, 250,
	1558, 0, 830, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 0, 396, 376, 518,
	519, 318, 92, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	101, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	0, 205, 226, 368, 100, 454, 291, 594, 555, 549,
	212, 228, 0, 265, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 2205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 0, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 1615, 0, 376, 518, 519, 318,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 1617, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	1619, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 1393,
	0, 1394, 1395, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 0, 396, 376, 518, 519, 318, 92, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 0, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 101, 0, 1596, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 0, 0, 0, 0,
	0, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 401, 260, 0, 0, 453, 0, 0, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 332,
	206, 230, 0, 0, 411, 461, 473, 0, 0, 0,
	258, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 100,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 101, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 396, 0, 376, 518,
	519, 318, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 2157, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 366, 270,
	0, 0, 429, 0, 211, 0, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	0, 370, 0, 0, 496, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 253, 327, 210, 412, 497, 289, 0, 0,
	0, 0, 1802, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	0, 0, 0, 0, 0, 268, 323, 275, 267, 522,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 401, 260, 0, 0, 453,
	0, 0, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 332, 206, 230, 0, 0, 411, 461,
	473, 0, 0, 0, 258, 0, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 0, 2155, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 998,
	332, 206, 230, 996, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 0, 205, 226, 368,
	0, 454, 291, 594, 555, 549, 212, 228, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 0, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	396, 0, 376, 518, 519, 318, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 2157, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 0, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 1802, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 0, 0, 0, 0, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 0, 0, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 258, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	0, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 1596, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 3540, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	0, 205, 226, 368, 0, 454, 291, 594, 555, 549,
	212, 228, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 0, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 396, 0, 376, 518, 519, 318,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	1990, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 2602, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 531, 532, 259, 596,
	233, 559, 225, 0, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 355, 356, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 0, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 0, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 0, 0, 424, 472, 245,
	544, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 384, 485, 541, 337, 349,
	352, 342, 361, 0, 362, 338, 339, 344, 346, 347,
	348, 353, 354, 358, 364, 254, 216, 390, 398, 520,
	314, 221, 222, 223, 513, 514, 515, 516, 556, 557,
	561, 462, 463, 464, 465, 295, 550, 311, 468, 467,
	333, 334, 379, 450, 0, 205, 226, 368, 0, 454,
	291, 594, 555, 549, 212, 228, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 303, 304, 445, 446, 316, 317, 591, 592, 302,
	538, 569, 536, 590, 563, 439, 378, 0, 0, 553,
	0, 381, 284, 307, 322, 0, 554, 501, 232, 466,
	293, 256, 0, 0, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 396, 0,
	376, 518, 519, 318, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	366, 270, 0, 0, 429, 0, 211, 0, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 0, 370, 0, 0, 496, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 253, 327, 210, 412, 497, 289,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 0,
	2587, 0, 0, 0, 0, 243, 0, 0, 250, 2588,
	0, 0, 351, 360, 359, 340, 341, 343, 345, 350,
	357, 363, 0, 0, 0, 0, 0, 268, 323, 275,
	267, 522, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 401, 260, 0,
	0, 453, 0, 0, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 332, 206, 230, 0, 0,
	411, 461, 473, 0, 0, 0, 258, 0, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 0, 0,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 1638, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 1637, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 0, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 0, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 396, 0, 376, 518, 519, 318, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 0, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 693,
	694, 695, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 0, 0, 0, 0,
	0, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 401, 260, 0, 0, 453, 0, 0, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 332,
	206, 230, 0, 0, 411, 461, 473, 0, 0, 0,
	258, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	3677, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 396, 0, 376, 518,
	519, 318, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 366, 270,
	0, 0, 429, 0, 211, 0, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	0, 370, 0, 0, 496, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 253, 327, 210, 412, 497, 289, 0, 0,
	0, 0, 1802, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	0, 0, 0, 0, 0, 268, 323, 275, 267, 522,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 401, 260, 0, 0, 453,
	0, 0, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 332, 206, 230, 0, 0, 411, 461,
	473, 0, 0, 0, 258, 0, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 0, 0, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 3540, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 0, 205, 226, 368,
	0, 454, 291, 594, 555, 549, 212, 228, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 0, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	396, 0, 376, 518, 519, 318, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 0, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 101, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 0, 0, 0, 0, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 0, 0, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 258, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	0, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 2207, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	0, 205, 226, 368, 0, 454, 291, 594, 555, 549,
	212, 228, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 0, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 396, 0, 376, 518, 519, 318,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	1619, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 531, 532, 259, 596,
	233, 559, 225, 0, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 355, 356, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 0, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 0, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 0, 0, 424, 472, 245,
	544, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 384, 485, 541, 337, 349,
	352, 342, 361, 0, 362, 338, 339, 344, 346, 347,
	348, 353, 354, 358, 364, 254, 216, 390, 398, 520,
	314, 221, 222, 223, 513, 514, 515, 516, 556, 557,
	561, 462, 463, 464, 465, 295, 550, 311, 468, 467,
	333, 334, 379, 450, 0, 205, 226, 368, 1945, 454,
	291, 594, 555, 549, 212, 228, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 303, 304, 445, 446, 316, 317, 591, 592, 302,
	538, 569, 536, 590, 563, 439, 378, 0, 0, 553,
	0, 381, 284, 307, 322, 0, 554, 501, 232, 466,
	293, 256, 0, 0, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 396, 0,
	376, 518, 519, 318, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	366, 270, 0, 0, 429, 0, 211, 0, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 0, 370, 0, 0, 496, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 253, 327, 210, 412, 497, 289,
	0, 0, 0, 0, 1936, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 351, 360, 359, 340, 341, 343, 345, 350,
	357, 363, 0, 0, 0, 0, 0, 268, 323, 275,
	267, 522, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 401, 260, 0,
	0, 453, 0, 0, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 332, 206, 230, 0, 0,
	411, 461, 473, 0, 0, 0, 258, 0, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 0, 0,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 1769, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 0, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 0, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 396, 0, 376, 518, 519, 318, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 1767, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 0, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 0, 0, 0, 0,
	0, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 401, 260, 0, 0, 453, 0, 0, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 332,
	206, 230, 0, 0, 411, 461, 473, 0, 0, 0,
	258, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 1765,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 396, 0, 376, 518,
	519, 318, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 1763, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 366, 270,
	0, 0, 429, 0, 211, 0, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	0, 370, 0, 0, 496, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 253, 327, 210, 412, 497, 289, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	0, 0, 0, 0, 0, 268, 323, 275, 267, 522,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 401, 260, 0, 0, 453,
	0, 0, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 332, 206, 230, 0, 0, 411, 461,
	473, 0, 0, 0, 258, 0, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 0, 0, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 1761, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 0, 205, 226, 368,
	0, 454, 291, 594, 555, 549, 212, 228, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 0, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	396, 0, 376, 518, 519, 318, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	1757, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 0, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 0, 0, 0, 0, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 0, 0, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 258, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	0, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 1755, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	0, 205, 226, 368, 0, 454, 291, 594, 555, 549,
	212, 228, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 0, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 396, 0, 376, 518, 519, 318,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 1753, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	0, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 1728, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 531, 532, 259, 596,
	233, 559, 225, 0, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 355, 356, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 0, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 0, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 0, 0, 424, 472, 245,
	544, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 384, 485, 541, 337, 349,
	352, 342, 361, 0, 362, 338, 339, 344, 346, 347,
	348, 353, 354, 358, 364, 254, 216, 390, 398, 520,
	314, 221, 222, 223, 513, 514, 515, 516, 556, 557,
	561, 462, 463, 464, 465, 295, 550, 311, 468, 467,
	333, 334, 379, 450, 0, 205, 226, 368, 0, 454,
	291, 594, 555, 549, 212, 228, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 303, 304, 445, 446, 316, 317, 591, 592, 302,
	538, 569, 536, 590, 563, 439, 378, 0, 0, 553,
	0, 381, 284, 307, 322, 0, 554, 501, 232, 466,
	293, 256, 0, 0, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 396, 0,
	376, 518, 519, 318, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 1623, 273, 0, 0, 0, 0,
	366, 270, 0, 0, 429, 0, 211, 0, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 0, 370, 0, 0, 496, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 253, 327, 210, 412, 497, 289,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 351, 360, 359, 340, 341, 343, 345, 350,
	357, 363, 0, 0, 0, 0, 0, 268, 323, 275,
	267, 522, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 401, 260, 0,
	0, 453, 0, 0, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 332, 206, 230, 0, 0,
	411, 461, 473, 0, 0, 0, 258, 0, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 0, 0,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 101, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 0, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 0, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 396, 0, 376, 518, 519, 318, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 0, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 0, 0, 0, 0,
	0, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1371, 0, 300,
	0, 401, 260, 0, 0, 453, 0, 0, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 332,
	206, 230, 0, 0, 411, 461, 473, 0, 0, 0,
	258, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	1370, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 396, 0, 376, 518,
	519, 318, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 366, 270,
	0, 0, 429, 0, 211, 0, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	0, 370, 0, 0, 496, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 253, 327, 210, 412, 497, 289, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	0, 0, 0, 0, 0, 268, 323, 275, 267, 522,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 401, 260, 0, 0, 453,
	0, 633, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 332, 206, 230, 0, 0, 411, 461,
	473, 0, 0, 0, 258, 0, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 0, 0, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 0, 205, 226, 368,
	0, 454, 291, 594, 555, 549, 212, 228, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 3685, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 0, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	396, 0, 376, 518, 519, 318, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 0, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 0, 0, 0, 0, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 0, 0, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 258, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	0, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 0,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 0, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 0, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 0, 0, 424, 472, 245, 544, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	0, 205, 226, 368, 0, 454, 291, 594, 555, 549,
	212, 228, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 0, 0, 553, 0, 381, 284, 307,
	322, 0, 554, 501, 232, 466, 293, 256, 0, 0,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 396, 0, 376, 518, 519, 318,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 0, 0, 376, 518, 519, 318,
}

var yyPact = [...]int{
	-1000, -1000, 5088, -1000, -480, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2485, 2468, -1000, -1000,
	-1000, -1000, 2676, -1000, 1339, 2134, -1000, 2439, 4319, -1000,
	48970, 689, -1000, 46222, 678, 676, 161, -93, 267, 31108,
	-1000, 230, -1000, 213, 47596, 218, -1000, -1000, -1000, -1000,
	-308, 19427, 2345, 83, 82, 48970, -1000, -1000, -1000, -1000,
	2619, 2089, -1000, 417, -1000, -1000, -1000, -1000, -1000, -1000,
	45535, -1000, 1119, -1000, -1000, 2452, 2440, 2679, 826, 2419,
	-1000, 2564, 2089, -1000, 19427, 2609, 2503, 18740, 18740, 598,
	-1000, -1000, 273, -1000, -1000, -1000, 2652, 26299, 48970, -1000,
	33856, 833, -1000, 2439, -1000, -1000, -1000, 142, -1000, 492,
	2018, -1000, 2013, -1000, 1112, 1164, 513, 634, 627, 512,
	503, 500, 498, 497, 495, 494, 493, 522, -1000, 861,
	861, -129, -130, 1727, 618, 579, 579, 877, 624, 2384,
	2382, -1000, -1000, 861, 861, 861, 427, 861, 861, 861,
	861, 430, 428, 861, 861, 861, 861, 861, 861, 861,
	861, 861, 861, 861, 861, 861, 861, 861, 861, 861,
	682, 2439, 375, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48970, 298, 48970, -1000, 749, 48970, 48970, -1000, 1309,
	1296, -1000, -1000, 288, 999, -1000, -1000, 999, 132, 999,
	999, 999, 999, 238, 795, 80, -1000, 225, 341, 207,
	344, 975, 333, -1000, -1000, 334, 975, 1032, 975, 1833,
	1822, -1000, 830, 343, 209, -1000, 999, 999, 999, -1000,
	-1000, 12532, 182, 12532, 12532, -1000, 2416, -1000, -1000, -1000,
	-1000, -1000, 1170, -1000, -1000, -1000, -1000, -11, 619, -1000,
	-1000, -1000, -1000, 47596, 44848, 307, -1000, -1000, 60, -1000,
	-1000, 1890, 1124, 19427, 1441, -1000, 1821, 797, -1000, -1000,
	-1000, -1000, -1000, 722, -1000, 20114, 20114, 20114, 20114, -1000,
	-1000, 2021, 44161, 2021, 2021, 20114, 2021, -1000, 20114, 2021,
	2021, 2021, 19427, 2021, 2021, 2021, 2021, -1000, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, -1000, -1000, -1000, -1000,
	2021, 746, 2021, 2021, 2021, 2021, 2021, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2021, 2021, 2021, 2021, 2021,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22175, 1580, 1574, 1569, -1000, 16679,
	2021, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48970, -1000, 2021, 258, 47596, 47596, 519, 2564, 2089,
	-1000, 2619, 2573, 417, 2780, 1786, 1635, 1482, 2089, 1984,
	48970, -1000, 2030, -1000, -1000, -1000, -1000, 2271, 1386, 1776,
	-1000, -1000, -1000, -1000, 1951, 19427, -1000, -1000, 2664, -1000,
	23550, 745, 2661, 43474, -1000, 598, 598, 2009, 474, 12,
	-1000, -1000, -1000, -1000, 915, 30421, -1000, -1000, -1000, -1000,
	-1000, 1857, 48970, -1000, -1000, 5859, 1272, -1000, 2133, -1000,
	2441, 1831, -1000, 2070, 19427, 596, 2158, 668, 1272, 653,
	652, 639, -1000, -36, -1000, -1000, -1000, -1000, -1000, -1000,
	861, 861, 861, -1000, 479, 2597, 4319, 5014, -1000, -1000,
	-1000, 42787, 2132, 47596, -1000, 2129, -1000, 1052, 673, 736,
	736, 47596, -1000, -1000, 48283, 1272, 1046, 1033, 1272, 1272,
	47596, 47596, -1000, 42100, -1000, 41413, 40726, 1290, 47596, 40039,
	39352, 38665, 37978, 37291, -1000, 2199, -1000, 2180, -1000, -1000,
	-1000, 48283, 1272, 1272, 48283, 47596, 48283, 48970, 1272, -1000,
	-1000, 400, -1000, -1000, 1289, 1284, 1283, 861, 861, 1281,
	1754, 1746, 1744, 861, 861, 1274, 1742, 32482, 1740, 370,
	1258, 1255, 1253, 1279, 1724, 206, 1716, 1226, 1212, 1251,
	47596, 2128, 1360, 48970, -1000, 327, 927, 918, 1009, 767,
	899, 2439, 2320, 2007, 613, 1326, 667, 1272, 583, 583,
	47596, -1000, 14611, -1000, 465, -1000, -1000, -1000, 1324, -1000,
	-1000, 1710, 19427, -1000, 988, 975, 975, -1000, -1000, -1000,
	-1000, -1000, -1000, 999, 48970, 988, -1000, -1000, -1000, 975,
	999, 48970, 999, 999, 999, 999, 975, 975, 975, 999,
	48970, 48970, 48970, 48970, 48970, 48970, 48970, 48970, 48970, 12532,
	830, 999, 999, -338, 999, 237, -367, -1000, 1705, -1000,
	-1000, 2245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12532, 12532, -1000, -1000, -1000,
	-1000, -1000, 2006, -1000, 208, 43, 217, -1000, 36604, 440,
	898, -1000, 440, -1000, -1000, -1000, 2003, 35917, -1000, -373,
	-378, -380, -384, -1000, -1000, -1000, -1000, -385, -391, -1000,
	-1000, -1000, 19427, 19427, 19427, 19427, -167, -1000, 1048, 20114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 224, 1092, 20114,
	20114, 20114, 20114, 20114, 20114, 20114, 20114, 20114, 20114, 20114,
	20114, 20114, 20114, 20114, -1000, -1000, 28360, 4623, 4623, 797,
	797, 797, 797, -1000, -107, 1998, 48283, -1000, -1000, -1000,
	739, 19427, 19427, 797, -1000, 1272, 16679, 20801, 18740, 18740,
	19427, 932, 1124, 48283, 19427, -1000, 1482, -1000, -1000, -1000,
	1171, -1000, 1028, 2442, 2442, 2442, 2442, 19427, 19427, 19427,
	19427, 19427, 19427, 19427, 19427, 19427, 19427, 2442, 47596, 47596,
	181, 19427, 19427, 19427, 19427, 19427, 19427, 15304, 19427, 19427,
	20114, 19427, 19427, 19427, 1482, 19427, 19427, 19427, 19427, 19427,
	19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427,
	19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427, 19427,
	19427, 19427, 1482, 19427, 1422, 19427, 19427, 18740, 13918, 18740,
	18740, 18740, 18740, 18740, -1000, -1000, -1000, -1000, -1000, 19427,
	19427, 19427, 19427, 19427, 19427, 19427, 19427, 1482, 19427, 19427,
	19427, 19427, 19427, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1417, 1481, 1480, 19427, -1000, 1997, -1000,
	-110, 25612, 19427, 1700, 1696, 2649, 2174, 47596, -1000, -1000,
	-1000, 2564, -1000, 2564, 1417, 2207, 18740, -1000, -1000, 2441,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1753, -1000,
	48970, 1984, 2492, 47596, 2255, 1687, 399, -1000, 19427, 19427,
	1983, -1000, 1532, 48970, -1000, -167, -1000, 35230, -1000, -1000,
	11839, 48970, 477, 48970, -1000, 24925, 34543, 368, -1000, 12,
	1945, -1000, 32, 34, 15991, 755, -1000, -1000, -1000, 1727,
	21488, 1874, 755, 133, -1000, -1000, -1000, 2070, -1000, 2070,
	2070, 2070, 2070, 399, 399, 399, 399, -1000, -1000, -1000,
	-1000, -1000, 2127, 2126, -1000, 2070, 2070, 2070, 2070, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2112, 2112, 2112, 2106,
	2106, 2084, 2084, 574, -1000, 19427, -1000, -1000, 282, 33856,
	2444, 1239, 1404, 1322, 931, 327, 596, 2173, 1272, 1272,
	1272, 596, -1000, 1381, 1359, 1352, -1000, -468, 1982, -1000,
	-1000, 2596, -1000, -1000, 1285, 1070, 1068, 1166, 47596, 295,
	468, -1000, 549, -1000, -1000, 33856, 47596, 1027, 736, 47596,
	-1000, 47596, -1000, -1000, -1000, -1000, 1272, -1000, -1000, 1981,
	-1000, 1880, 1116, 1019, 1102, 985, 1981, -1000, -1000, -108,
	1981, -1000, 1981, -1000, 1981, -1000, 1981, -1000, 1981, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 907, 250,
	-231, 47596, 295, 610, -1000, 609, 28360, -1000, -1000, -1000,
	28360, 28360, -1000, -1000, -1000, -1000, 1673, 1660, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -453, 48970, 2105,
	-1000, 312, 897, 457, 461, 436, 48970, 903, 2554, 2551,
	2550, 2549, 2543, 2538, 2537, 240, 2536, 2533, 2532, 2528,
	2525, 2523, 821, 2519, 2515, 2508, 2507, 2498, 2496, 2487,
	325, 426, 48970, 48970, -1000, 583, 2211, 48970, 2463, 48970,
	-1000, -1000, -1000, -1000, 478, 48970, -1000, 346, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1124, 48970, -1000, -1000, 999,
	999, -1000, -1000, 48970, 999, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 999, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 48970, -1000, -1000, -1000, -1000, -11, 205,
	-1000, -1000, 47596, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -38, -1000, 69, 28, 401, -1000, -1000, -1000,
	-1000, -1000, 2557, -1000, 1124, 959, 944, -1000, 2021, -1000,
	-1000, 1159, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 224,
	20114, 20114, 20114, 2274, 635, 1416, 1972, 1888, 1172, 1172,
	1340, 1340, 806, 806, 806, 806, 806, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1658, -1000, 2021, 48283, 1820,
	13918, 1704, 1305, 1482, 3285, -1000, 1803, -1000, 1803, 1474,
	971, -1000, 19427, 1482, 3250, -1000, -1000, 1482, 1482, 1482,
	19427, -1000, -1000, 19427, 19427, 19427, 19427, 1404, 1404, 1404,
	1404, 1404, 1404, 1404, 1404, 1404, 1404, 19427, 1980, 1977,
	2648, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1550, 1404, 1404, 1404, 1404, 1404, 19427, 1346,
	-1000, -1000, -1000, 1395, 3240, 1911, 3228, 1404, 1404, -1000,
	1404, 3212, 3191, 1482, 1890, 1482, 1976, -1000, 3157, 1404,
	3146, 3142, 3119, 2510, 3087, 3079, 3064, 1404, 1404, 1404,
	2465, 3050, 3016, 3012, 3000, 2993, 2973, 2945, 2923, 2904,
	1404, -173, 1404, 1482, -1000, -1000, -1000, -1000, -1000, 2885,
	2424, 1482, 1947, 2021, 738, -1000, -1000, 1803, 1482, 1482,
	1803, 1803, 2859, 2837, 2827, 2804, 2746, 2701, 1404, 1404,
	-1000, 1404, 2696, 2681, 2336, 2288, 1482, -1000, 1480, 48970,
	-1000, -305, -1000, 6, 759, 2021, -1000, 32482, 1482, -1000,
	-1000, 3882, -1000, 1156, -1000, -1000, -1000, 29734, 1881, 2441,
	-1000, -1000, 2021, 1793, -1000, -1000, 399, 100, 29047, 697,
	697, 135, 1124, 1124, 19427, -1000, -1000, -1000, -1000, -1000,
	-1000, 728, 2626, 409, 2021, -1000, 1921, 2798, -1000, -1000,
	-1000, 2490, 22863, -1000, -1000, 2021, 2021, 48970, 2011, 1934,
	-1000, 726, -1000, 1316, 1945, 12, 24, -1000, -1000, -1000,
	-1000, 1124, -1000, 1338, 487, 1267, -1000, 546, -1000, -1000,
	-1000, -1000, 2351, 113, -1000, -1000, -1000, 274, 399, -1000,
	-1000, -1000, -1000, -1000, -1000, 1651, 1651, -1000, -1000, -1000,
	-1000, -1000, 1238, -1000, -1000, -1000, -1000, 1235, -1000, -1000,
	1232, -1000, -1000, 2202, 2205, 282, -1000, -1000, 861, 1649,
	-1000, -1000, 2375, 861, 861, 47596, -1000, -1000, 1840, 2444,
	2104, 2461, 312, 48970, 2209, -1000, 2173, 2173, 2173, 48970,
	-1000, -1000, -1000, -1000, -1000, -1000, -454, 85, 415, -1000,
	-1000, -1000, 353, 47596, 1773, -1000, 277, -1000, 1836, -1000,
	47596, -1000, 1771, 2102, 47596, 47596, -1000, -1000, -1000, 47596,
	2021, -1000, -1000, -1000, -1000, 666, 2436, 320, -1000, -1000,
	-191, -1000, -1000, 295, 277, 48283, 1272, 755, -1000, -1000,
	-1000, -1000, -1000, -456, 1769, 285, 559, 630, 301, 365,
	48970, 48970, 48970, 48970, 48970, 703, -1000, -1000, 62, -1000,
	-1000, -1000, -1000, 252, -1000, -1000, -1000, -1000, -1000, -1000,
	252, -1000, -1000, -1000, -1000, -1000, 252, -1000, 1629, -1000,
	-1000, -1000, -1000, 252, -1000, -1000, -1000, 48, -1000, -1000,
	-1000, -1000, 252, -1000, -1000, -1000, -1000, -1000, -1000, 252,
	-1000, -1000, -1000, -1000, 351, 607, -1000, 48970, 48970, 724,
	-1000, -1000, -1000, -1000, -1000, -1000, 975, -1000, -1000, 975,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2414, 48970, 20, -422, -1000, -413, 19427, -1000,
	-1000, -1000, -1000, 1877, 632, 1416, 20114, 20114, 20114, -1000,
	-1000, -1000, 485, 485, 28360, -1000, 19427, 18740, -1000, -1000,
	19427, 19427, 919, -1000, 19427, 1152, -1000, 19427, -1000, -1000,
	-1000, 1480, 1404, 1404, 1404, 1404, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1946, 19427, 19427, 19427,
	1482, 374, -1000, -1000, -1000, -1000, -1000, 2647, -1000, 19427,
	-1000, 28360, 19427, 19427, 19427, -1000, -1000, -1000, 19427, 19427,
	-1000, -1000, 19427, 19427, -1000, 19427, 19427, 19427, -1000, 19427,
	19427, 19427, 19427, -1000, -1000, -1000, -1000, 19427, 19427, 19427,
	19427, 19427, 19427, 19427, 19427, 19427, 19427, -1000, -1000, 33856,
	130, -173, 1422, 130, 1422, -1000, 18740, 13225, -1000, -1000,
	-1000, -1000, -1000, 19427, 19427, 19427, 19427, 19427, 19427, -1000,
	-1000, -1000, 19427, 19427, -1000, 19427, -1000, 19427, -1000, -1000,
	-1000, -1000, -1000, 759, -1000, 736, 736, 736, 47596, -1000,
	-1000, -1000, -1000, 1927, -1000, 2514, -1000, 2287, 2284, 2644,
	2626, -1000, 24925, 2441, -1000, -1000, 47596, -294, -1000, 2333,
	2312, 697, 697, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11146, 2564, 19427, 2206, 48283, 155, -1000, 24238, 47596, 48283,
	24925, 24925, 24925, 24925, 24925, -1000, 2239, 2236, -1000, 2228,
	2226, 2319, 48970, -1000, 1417, 1763, -1000, 19427, 26986, 1884,
	24925, -1000, -1000, 24925, 48970, 10453, -1000, -1000, 15, 21,
	-1000, -1000, -1000, -1000, 1727, -1000, -1000, 864, 2477, 2349,
	-1000, -1000, -1000, -1000, -1000, 1751, -1000, 1737, 1925, 1735,
	1682, 250, -1000, 2141, 2402, 861, 861, -1000, 1218, -1000,
	1272, 1613, 1608, -1000, -1000, -1000, 559, -1000, 626, -1000,
	48970, 2204, 2200, 2198, -1000, -465, 1217, 2100, 2064, 19427,
	2098, 2594, 1915, 47596, -1000, -1000, 48283, -1000, 269, -1000,
	282, 47596, -1000, -1000, -1000, 468, 48970, -1000, 6177, -1000,
	-1000, -1000, 277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	483, 2097, 1672, 890, -1000, -1000, -1000, -1000, 48970, 321,
	-1000, 2096, 1163, -1000, -1000, 2159, -1000, -1000, -1000, -1000,
	268, 454, 1606, 245, 1600, 245, 245, 1594, 245, 1590,
	245, 245, -1000, 48970, 710, 2205, 48970, -1000, -1000, -1000,
	999, 999, -1000, -1000, 2397, -1000, 1272, 1404, 20114, 20114,
	-1000, 797, 350, -148, 2070, 2070, -1000, 2070, 2084, -1000,
	2070, 193, 2070, 192, 2070, -1000, -1000, 1482, 1482, 1480,
	-1000, 2242, 1789, -1000, 1124, 19427, 2673, -1000, -1000, -1000,
	-1000, -1000, -44, 2646, 2631, 1404, -1000, 2069, 2068, 19427,
	1404, 1482, 2225, 1404, 1404, 1404, 1404, -1000, 1124, 1480,
	2560, 1480, 1404, 1404, 2555, 345, 1404, 1664, 1664, 1664,
	1664, 1664, 1480, 1480, 1480, 1480, 47596, -1000, -173, -1000,
	-1000, -207, -209, -1000, 1482, -173, 1920, 1482, -1000, 2184,
	2063, 2542, 2059, 1404, 2403, 1404, 1404, 1404, 1886, -1000,
	2511, 2511, 2511, 1643, 1156, 48970, -1000, -1000, -1000, -1000,
	2626, 2617, 1919, -1000, -1000, 100, 481, -1000, 2337, 2312,
	-1000, 2593, 2325, 2592, -1000, -1000, -1000, -1000, -1000, 1124,
	-1000, 2448, 1870, -1000, 880, 1907, -1000, -1000, 18053, 1645,
	2280, 717, 1643, 1932, 2798, 2170, 2197, 2383, -1000, -1000,
	-1000, -1000, 2215, -1000, 2194, -1000, -1000, 2030, -1000, 2344,
	477, 24925, 1916, 1916, -1000, 714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1099, 7956, 2674, -1000, 1585, -1000, 1333,
	221, 1214, -1000, -1000, 861, 861, -1000, 993, 987, -1000,
	48970, 2067, -1000, 399, 1582, 399, 1206, -1000, -1000, 1200,
	-1000, -1000, -1000, -1000, 2149, 2190, -1000, -1000, -1000, -1000,
	1637, 868, 48970, -1000, 48970, 48970, 48970, 2066, 2590, -1000,
	19427, 2062, 865, 2168, 47596, 47596, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 577, 861, -433,
	397, 384, 861, 861, 861, -467, -1000, -1000, 1627, 1625,
	-1000, -127, -1000, 19427, -1000, -1000, -1000, 1293, 1293, 1580,
	1574, 1569, -1000, -1000, 2036, 1088, -1000, 559, 1561, 2030,
	-1000, -1000, -1000, 1832, -1000, -1000, -113, 47596, 47596, 47596,
	47596, -1000, -1000, 1190, -1000, -1000, -1000, 1557, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 797, 1482, 362, -119, 1482, -1000, -1000, 399,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19427, -1000, 19427, -1000, 1124, 19427, 2564, 1555, 19427, 19427,
	-1000, 1186, 1185, 1404, -1000, -1000, -1000, 19427, -1000, -1000,
	-1000, -1000, -1000, 19427, -1000, -1000, -1000, 19427, 293, 485,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1482, 476, -1000, -1000, -1000, -1000, 2632, -1000, 1482, 19427,
	-1000, -1000, 19427, -1000, 19427, 19427, -1000, 19427, -1000, 19427,
	-1000, -1000, -1000, -1000, 19427, 2021, 2315, 2021, 2021, 26986,
	-1000, -1000, 2617, 2614, 2589, 2309, 2318, 2318, 2337, -1000,
	2588, 2585, -1000, 1552, 2575, 1541, 955, -1000, 48283, 19427,
	155, -1000, 412, 47596, 155, 47596, -1000, 2612, -1000, -1000,
	19427, 2035, -1000, 19427, -1000, -1000, -1000, -1000, 4623, 2626,
	1916, -1000, -1000, 812, -1000, 19427, -1000, -1000, -1000, 4148,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1535, 1533,
	-1000, -1000, 2032, 19427, -1000, -1000, -1000, 1804, 1738, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 284, 559, 1527,
	2030, -1000, -1000, -1000, -1000, 468, -460, 2155, 47596, 1178,
	-1000, 1622, 1915, 466, 155, 1487, 861, 861, 861, 1173,
	1144, 32482, 1605, -1000, 47596, 538, -1000, 468, -1000, -132,
	-134, 1404, -1000, -1000, 347, 1589, 859, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 858, -1000, 2475, -1000,
	-1000, 13225, -1000, -1000, 2026, 2171, -1000, -1000, -1000, -1000,
	-1000, 2254, -106, -123, -1000, -1000, 1404, 1404, 1882, 1482,
	-1000, 1404, 1404, 1728, 1551, -1000, 1404, 1480, 1714, -1000,
	293, 1482, 2191, -1000, -1000, 4623, -1000, -1000, 2612, 2571,
	130, -1000, -1000, 314, 130, 1124, 1708, 1404, 1679, 1639,
	1404, 1404, 27673, -1000, 2569, 2568, 33169, 33169, 759, 2614,
	-180, 19427, 19427, 2291, 1137, -1000, -1000, -1000, -1000, 1457,
	1452, -1000, 1440, -1000, 2669, -1000, 1124, -1000, 155, -1000,
	708, 1907, -1000, 2564, 1124, 47596, 1124, 107, 2612, -1000,
	1404, -1000, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, -1000, -1000, 47596, 1818, -1000, -1000, 2025, 854,
	-1000, 2474, 1578, 81, -1000, 1518, 1915, -1000, -1000, 167,
	-1000, 19427, -1000, 32482, 1438, 1434, -1000, -1000, -1000, -1000,
	-467, -1000, -1000, -1000, -1000, -1000, -1000, 1523, 847, -1000,
	-1000, -1000, 1088, 1427, 1415, 417, 1912, -1000, 846, 47596,
	48970, -1000, 2249, -1000, -1000, -1000, 19427, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19427, -1000, 1482, 2185, -1000,
	-302, -1000, -440, 19427, -173, -1000, -1000, -173, -1000, 19427,
	-1000, -1000, 19427, -1000, 19427, -1000, -1000, 1521, -1000, -1000,
	-1000, -1000, -1000, 1521, 1521, -1000, -180, -1000, 1908, -1000,
	47596, 1124, 1890, -1000, 1125, -1000, -1000, -1000, -1000, -1000,
	48283, 1907, 47596, -1000, 1517, 1482, 2021, 2564, -1000, 1514,
	-1000, 1088, 1413, 417, -1000, 2024, 2064, -1000, -1000, -1000,
	17366, -1000, -1000, -1000, -1000, -1000, 185, -1000, 347, 1407,
	843, -1000, -1000, -111, 13225, 9760, 1486, -1000, -109, 1404,
	1480, -1000, -397, -1000, -1000, -1000, -1000, 164, -1000, -1000,
	1890, -1000, -1000, 1634, 1616, 1560, 31795, -1000, -1000, -1000,
	-1000, -180, -1000, -1000, 2473, -1000, -1000, 1889, -1000, -1000,
	26986, 46909, -1000, -100, 1245, 1463, -1000, -111, 19427, 2022,
	1482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 841, -1000,
	1405, -1000, 61, -1000, -1000, -1000, -1000, -1000, 2159, -120,
	-1000, -1000, -1000, 226, -425, -208, -229, -1000, -1000, 20114,
	-1000, 19427, -1000, 19427, -1000, 19427, -1000, -1000, -1000, 47596,
	2021, -1000, 1449, -1000, 5441, -224, 2182, -1000, -43, -1000,
	-1000, -1000, 1089, 1387, -1000, -1000, -1000, -1000, -1000, 480,
	-1000, 1540, 47596, -1000, 1384, -1000, 564, -1000, -1000, -113,
	-124, 940, -1000, -1000, -1000, -1000, -1000, 1546, 1380, 1404,
	-1000, 47596, -1000, 46909, -225, 755, 4623, -1000, 2181, 2176,
	2641, -1000, -1000, -1000, -1000, -1000, -1000, 2020, -474, 1411,
	-1000, 319, -1000, -1000, 226, -1000, 19427, -1000, 19427, -1000,
	1482, -1000, -1000, 2457, 107, -1000, 2667, -1000, 2642, 928,
	928, 347, -1000, 1132, -474, -1000, -1000, 1404, 1404, -1000,
	-227, -1000, -1000, -1000, -1000, -1000, 545, 1168, -1000, 1393,
	-1000, -1000, -1000, -1000, 4623, -1000, -1000, -1000, -1000, 223,
	223, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3293, 3291, 32, 6, 46, 42, 3290, 153, 126,
	216, 56, 213, 115, 3286, 194, 3282, 3280, 3278, 3276,
	3273, 3272, 2708, 2703, 2695, 3271, 3270, 3269, 3268, 3267,
	3264, 3263, 3259, 3257, 3256, 3255, 3253, 3252, 3248, 193,
	188, 212, 3246, 3238, 3233, 132, 205, 108, 105, 208,
	3231, 3225, 95, 3224, 3223, 3222, 204, 203, 202, 957,
	3219, 201, 130, 55, 3214, 3213, 3212, 3211, 3209, 3208,
	3201, 3199, 3198, 3197, 3194, 3193, 3190, 3188, 3185, 3183,
	3182, 3181, 3178, 3177, 317, 3176, 3174, 25, 3172, 97,
	3171, 3168, 3166, 3165, 3164, 13, 3163, 3162, 18, 44,
	3159, 3156, 52, 3148, 3147, 3144, 3143, 3140, 22, 3137,
	28, 3136, 39, 3133, 3131, 145, 3130, 3126, 3124, 47,
	3122, 3121, 3111, 3110, 3109, 3108, 3107, 157, 3102, 3101,
	3099, 190, 219, 3098, 3097, 187, 121, 125, 3096, 3095,
	119, 210, 3094, 136, 3093, 3092, 3090, 168, 3089, 2406,
	3082, 3080, 80, 83, 3079, 43, 3078, 3077, 12, 90,
	77, 10, 5, 11, 3076, 3075, 78, 94, 3074, 124,
	3073, 3072, 120, 82, 3071, 116, 113, 3070, 3069, 15,
	8, 3067, 1, 4, 2, 81, 3066, 3063, 127, 3058,
	3057, 3056, 109, 3052, 3047, 142, 3041, 103, 152, 114,
	99, 3036, 58, 74, 3032, 3031, 3030, 3029, 3021, 67,
	3019, 3017, 3010, 164, 66, 189, 3003, 51, 62, 69,
	151, 3002, 38, 98, 214, 191, 2994, 2991, 158, 161,
	2989, 2984, 79, 50, 49, 2982, 122, 154, 137, 48,
	112, 150, 2981, 2980, 73, 88, 2958, 2953, 2952, 2950,
	181, 2948, 2944, 85, 2931, 71, 2924, 200, 2916, 17,
	65, 2914, 54, 183, 2913, 92, 2911, 2910, 84, 149,
	87, 37, 2907, 179, 185, 146, 182, 2905, 2904, 72,
	2903, 2902, 2901, 211, 347, 2897, 2891, 107, 195, 165,
	172, 110, 2890, 362, 2886, 2884, 117, 0, 5489, 2883,
	29, 186, 2882, 2877, 6352, 177, 53, 27, 2875, 138,
	2864, 2860, 2858, 2857, 235, 192, 135, 180, 76, 2856,
	2853, 2851, 21, 2839, 2836, 2832, 2830, 2829, 2828, 249,
	41, 40, 36, 267, 89, 20, 118, 184, 176, 91,
	2827, 2826, 2825, 140, 106, 2824, 178, 174, 144, 175,
	2818, 197, 166, 143, 2817, 104, 35, 2816, 2809, 2807,
	2806, 111, 2803, 2801, 2800, 2799, 169, 162, 139, 102,
	2798, 100, 134, 173, 171, 63, 2795, 57, 2793, 2792,
	34, 207, 31, 2791, 19, 123, 141, 2790, 4409, 199,
	2786, 23, 351, 167, 2765, 2762, 9, 14, 16, 2760,
	2759, 2758, 2756, 155, 2754, 2749, 2743, 2742, 26, 60,
	24, 3, 133, 93, 2731, 2730, 159, 163, 2727, 2725,
	2724, 2722, 2718, 33, 2716, 7, 2715, 68, 45, 30,
	2709, 2693, 3374, 96, 147, 2686, 215,
}

//line sql.y:8756
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) alterWescaleFilterUnion() *AlterWescaleFilter {
	v, _ := st.union.(*AlterWescaleFilter)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createWescaleFilterUnion() *CreateWescaleFilter {
	v, _ := st.union.(*CreateWescaleFilter)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) dropWescaleFilterUnion() *DropWescaleFilter {
	v, _ := st.union.(*DropWescaleFilter)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) showWescaleFilterUnion() *ShowWescaleFilter {
	v, _ := st.union.(*ShowWescaleFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) wescaleFilterActionUnion() *WescaleFilterAction {
	v, _ := st.union.(*WescaleFilterAction)
	return v
}

func (st *yySymType) wescaleFilterPatternUnion() *WescaleFilterPattern {
	v, _ := st.union.(*WescaleFilterPattern)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 430, 431, 431, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 265, 388, 389, 389,
	263, 263, 33, 79, 39, 39, 38, 38, 41, 41,
	40, 8, 8, 8, 9, 9, 9, 9, 9, 9,
	9, 9, 10, 10, 10, 10, 10, 11, 11, 11,
	11, 13, 13, 13, 13, 13, 20, 21, 12, 12,
	22, 22, 113, 113, 23, 24, 24, 24, 24, 434,
	434, 190, 190, 188, 188, 189, 189, 268, 268, 25,
	272, 272, 274, 274, 274, 274, 264, 264, 264, 26,
	26, 273, 273, 275, 275, 275, 278, 278, 278, 278,
	317, 317, 317, 34, 35, 36, 37, 37, 422, 422,
	424, 424, 426, 426, 420, 420, 421, 421, 427, 427,
	427, 427, 423, 423, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 425, 425, 429, 429, 27, 27, 27,
	27, 27, 27, 27, 133, 133, 391, 391, 390, 384,
	384, 383, 383, 382, 387, 387, 386, 386, 385, 43,
	44, 53, 53, 53, 53, 54, 55, 392, 392, 357,
	60, 60, 59, 59, 59, 59, 59, 59, 61, 61,
	57, 57, 56, 56, 58, 58, 359, 359, 345, 345,
	358, 358, 358, 358, 358, 358, 358, 344, 344, 144,
	144, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 407, 407,
	407, 406, 406, 243, 243, 243, 243, 243, 243, 243,
	243, 154, 154, 166, 166, 166, 166, 166, 152, 152,
	153, 151, 151, 151, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 165, 165, 161, 161, 161, 162, 162,
	162, 163, 163, 408, 408, 408, 408, 322, 322, 322,
	322, 325, 325, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 326,
	326, 326, 326, 326, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	328, 328, 328, 328, 328, 328, 328, 328, 343, 343,
	329, 329, 337, 337, 338, 338, 339, 339, 339, 340,
	340, 340, 341, 341, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 336, 336, 335, 335, 335, 346, 371,
	371, 370, 370, 368, 368, 368, 368, 368, 368, 368,
	368, 355, 355, 365, 365, 365, 365, 365, 354, 354,
	350, 350, 350, 351, 351, 352, 352, 349, 349, 353,
	353, 367, 367, 366, 366, 347, 347, 348, 348, 373,
	409, 409, 409, 409, 409, 410, 410, 374, 399, 401,
	401, 401, 400, 400, 397, 398, 396, 396, 396, 396,
	396, 89, 89, 89, 291, 291, 292, 292, 363, 363,
	362, 362, 362, 364, 364, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 286, 286, 286, 395,
	395, 395, 395, 395, 395, 394, 394, 394, 360, 360,
	360, 393, 393, 62, 62, 223, 223, 412, 412, 413,
	413, 413, 50, 50, 50, 50, 50, 50, 49, 49,
	49, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 51, 51, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 115, 115, 116,
	116, 116, 116, 118, 118, 118, 376, 376, 63, 63,
	3, 3, 178, 180, 181, 181, 179, 179, 179, 179,
	179, 179, 65, 65, 64, 64, 183, 182, 184, 184,
	184, 1, 1, 2, 2, 4, 4, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 342,
	342, 342, 375, 375, 377, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 121, 120, 120, 119, 122,
	122, 122, 122, 122, 122, 122, 122, 379, 379, 379,
	66, 66, 380, 330, 331, 332, 5, 6, 356, 378,
	129, 129, 29, 42, 42, 30, 30, 30, 30, 31,
	31, 67, 68, 419, 419, 72, 72, 72, 73, 73,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 285, 285, 294, 294, 284, 284, 309, 309, 309,
	287, 287, 287, 288, 288, 405, 405, 405, 281, 281,
	70, 70, 70, 310, 310, 310, 310, 74, 74, 414,
	414, 415, 415, 416, 416, 416, 75, 76, 76, 312,
	312, 313, 313, 77, 78, 90, 90, 90, 90, 90,
	90, 90, 91, 91, 91, 91, 114, 114, 114, 15,
	15, 15, 15, 86, 86, 86, 14, 14, 17, 71,
	71, 80, 402, 402, 403, 404, 404, 404, 404, 81,
	83, 83, 32, 32, 32, 32, 32, 32, 139, 139,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 134, 134, 134, 128, 128, 435, 84,
	85, 85, 132, 132, 132, 125, 125, 125, 131, 131,
	131, 16, 16, 18, 267, 267, 19, 19, 136, 136,
	138, 138, 138, 138, 138, 140, 140, 140, 140, 140,
	140, 140, 135, 135, 137, 137, 137, 137, 302, 302,
	302, 301, 301, 172, 172, 174, 173, 173, 175, 175,
	176, 176, 176, 176, 221, 221, 198, 198, 260, 260,
	261, 261, 259, 259, 266, 266, 262, 262, 262, 262,
	269, 269, 177, 177, 177, 177, 185, 185, 186, 186,
	187, 187, 311, 311, 307, 307, 307, 306, 306, 191,
	191, 191, 193, 192, 192, 192, 192, 194, 194, 196,
	196, 195, 195, 197, 202, 202, 201, 201, 199, 199,
	199, 199, 200, 200, 200, 200, 203, 203, 149, 149,
	149, 149, 149, 149, 149, 164, 164, 164, 164, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	250, 250, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	158, 226, 226, 225, 225, 92, 92, 92, 93, 93,
	94, 94, 94, 94, 94, 95, 95, 95, 95, 95,
	150, 150, 97, 97, 96, 96, 216, 216, 299, 299,
	98, 99, 99, 102, 102, 101, 100, 100, 106, 106,
	103, 103, 105, 105, 104, 107, 107, 108, 109, 109,
	282, 282, 204, 204, 212, 212, 212, 212, 205, 205,
	205, 205, 205, 205, 205, 213, 213, 213, 220, 214,
	214, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 169,
	169, 169, 169, 231, 231, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	157, 157, 170, 170, 170, 170, 171, 171, 171, 171,
	171, 171, 171, 319, 319, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 436, 436, 333, 333,
	333, 333, 211, 211, 211, 211, 211, 130, 130, 130,
	130, 130, 316, 316, 316, 320, 320, 320, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 321, 321, 229, 229, 126, 126, 227,
	227, 228, 230, 230, 222, 222, 222, 222, 224, 224,
	207, 207, 207, 232, 232, 233, 233, 110, 111, 111,
	112, 112, 234, 234, 236, 235, 235, 237, 238, 238,
	238, 239, 239, 240, 240, 240, 52, 52, 52, 52,
	52, 47, 47, 47, 47, 48, 48, 48, 48, 141,
	141, 141, 141, 143, 143, 142, 142, 87, 87, 88,
	88, 88, 418, 418, 418, 417, 417, 417, 417, 417,
	417, 147, 147, 148, 148, 148, 145, 145, 146, 146,
	257, 257, 241, 241, 241, 248, 248, 248, 244, 244,
	246, 246, 246, 247, 247, 247, 245, 254, 254, 256,
	256, 255, 255, 251, 251, 252, 252, 253, 253, 253,
	249, 249, 206, 206, 206, 206, 206, 258, 258, 258,
	258, 270, 270, 217, 217, 219, 219, 218, 218, 168,
	271, 271, 279, 276, 276, 277, 277, 303, 303, 303,
	280, 280, 293, 293, 289, 289, 290, 290, 283, 283,
	295, 295, 295, 82, 215, 215, 372, 372, 369, 298,
	298, 300, 300, 304, 304, 308, 308, 305, 305, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	432, 433, 314, 315, 315, 315,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
	1, 1, 2, 3, 2, 3, 0, 1, 3, 1,
	4, 3, 3, 4, 3, 2, 3, 4, 3, 4,
	2, 7, 1, 3, 3, 3, 3, 1, 2, 1,
	1, 3, 2, 3, 3, 2, 5, 7, 10, 9,
	7, 8, 1, 1, 10, 11, 9, 8, 8, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	1, 3, 3, 3, 3, 3, 1, 1, 2, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 16, 7, 4, 4, 3, 0, 3,
	0, 4, 0, 4, 3, 5, 3, 5, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 2, 2, 2,
	3, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 7, 8,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 4, 1, 3, 2, 3, 3, 2, 2,
	3, 2, 2, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
	2, 3, 3, 3, 3, 5, 2, 3, 3, 3,
	2, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -430, -84, -435, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -67, -68,
	-72, -73, -69, -70, -74, -75, -76, -77, -78, -14,
	-17, -71, -32, -33, -79, -80, -81, -82, -83, -16,
	-18, -19, -34, -35, -36, -37, -9, -8, -13, 10,
	11, -113, -38, 33, -43, -53, 225, -54, -44, 226,
	-55, 228, 227, 266, 229, 250, 651, 235, 259, 75,
	334, 335, 337, 338, 339, 340, -114, 647, 264, 265,
	231, 37, 46, 34, 35, 38, 236, 272, 273, 234,
	-10, -39, 9, -432, 12, 479, 261, 260, 29, -12,
	541, 87, -85, -431, 697, -257, -241, 23, 34, 30,
	-240, -236, -132, -241, 21, 19, 8, -84, -84, -84,
	13, 14, -84, -357, -359, -12, 26, 87, 159, 9,
	87, -84, -60, -59, -57, -56, -58, -61, 32, -50,
	-51, -381, -49, -46, 230, 227, 276, 123, 124, 266,
	267, 268, 229, 250, 265, 269, 264, 285, -45, 82,
	34, 541, 544, -364, 226, 232, 233, 228, 480, 126,
	125, 76, -361, 393, 574, 667, -61, 669, 101, 104,
	668, 45, 240, 670, 671, 672, 581, 673, 249, 674,
	675, 676, 677, 683, 622, 684, 685, 686, 127, 8,
	-84, -308, -304, 91, -297, 538, 252, 572, 573, 301,
	82, 42, 547, 390, 393, 574, 509, 667, 334, 350,
	344, 514, 515, 516, 373, 365, 539, 575, 548, 318,
	253, 289, 661, 363, 135, 669, 322, 576, 267, 398,
	399, 577, 400, 101, 337, 442, 682, 321, 578, 680,
	104, 668, 342, 80, 508, 52, 664, 45, 262, 361,
	234, 357, 670, 290, 579, 550, 283, 126, 123, 689,
	37, 353, 51, 31, 679, 125, 50, 671, 150, 580,
	672, 581, 402, 380, 655, 49, 403, 268, 582, 85,
	273, 543, 325, 663, 404, 528, 354, 405, 300, 678,
	231, 583, 642, 634, 635, 406, 407, 656, 385, 381,
	386, 530, 584, 434, 513, 408, 638, 639, 696, 53,
	585, 586, 657, 124, 587, 79, 673, 81, 348, 349,
	588, 298, 251, 533, 534, 436, 377, 491, 498, 499,
	111, 112, 494, 113, 500, 114, 501, 502, 503, 492,
	115, 108, 493, 504, 505, 378, 379, 116, 506, 110,
	109, 495, 497, 117, 507, 249, 36, 409, 540, 302,
	59, 320, 277, 437, 47, 383, 693, 46, 649, 535,
	589, 654, 376, 372, 488, 54, 590, 591, 592, 593,
	510, 674, 375, 347, 371, 688, 4, 295, 511, 675,
	63, 233, 388, 387, 389, 284, 433, 368, 594, 595,
	596, 256, 83, 597, 358, 22, 598, 599, 410, 291,
	600, 57, 601, 602, 440, 265, 603, 55, 676, 40,
	604, 270, 690, 677, 605, 327, 328, 606, 607, 648,
	608, 272, 609, 412, 610, 636, 637, 411, 382, 384,
	536, 279, 413, 237, 542, 611, 326, 352, 269, 681,
	612, 257, 524, 525, 526, 527, 662, 532, 531, 271,
	276, 264, 441, 258, 613, 614, 615, 616, 617, 319,
	633, 618, 619, 338, 683, 489, 44, 620, 621, 622,
	623, 624, 299, 294, 435, 444, 62, 84, 395, 625,
	626, 660, 346, 343, 292, 627, 335, 56, 684, 685,
	686, 286, 687, 517, 518, 519, 520, 10, 694, 695,
	512, 415, 127, 296, 297, 48, 369, 278, 628, 323,
	629, 359, 360, 374, 345, 370, 645, 336, 643, 280,
	416, 490, 266, 630, 443, 293, 391, 396, 324, 546,
	529, 285, 417, 652, 659, 545, 521, 522, 367, 364,
	287, 523, 631, 647, 418, 241, 281, 282, 632, 644,
	419, 420, 317, 421, 329, 331, 432, 332, 333, 422,
	423, 424, 431, 425, 428, 429, 430, 427, 330, 426,
	646, 640, 641, 288, 544, 341, 362, 397, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 303, 304, 305, 306,
	307, 308, 309, 310, 311, 312, 313, 314, 315, 316,
	487, 239, -84, 239, -195, -304, 239, 239, 96, 542,
	668, 652, 412, -84, -276, 429, 430, 399, -294, 401,
	414, 409, 419, 407, -285, 410, 412, 279, -405, 434,
	239, 416, 225, 402, 411, 420, 421, 329, 432, 331,
	317, 427, 422, 330, 426, 288, 423, 424, 431, 425,
	428, -388, 177, 672, 687, 135, 366, 406, 404, 435,
	649, 91, -310, 91, 92, 93, -297, 336, -312, 341,
	-298, -388, -297, 339, -84, -84, -314, -314, -134, 649,
	653, -214, -149, 143, -164, -167, -155, -159, -208, -209,
	-210, -211, -165, -224, -263, 166, 167, 174, 144, -220,
	-168, 27, 537, 481, 480, 177, 32, -158, 220, 69,
	70, 483, 146, 58, 12, 456, 457, -166, 451, 458,
	453, 508, 510, 511, 512, 509, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 513, 485, 486, 118,
	487, 108, 110, 109, 488, 489, 490, 363, 535, 536,
	530, 533, 534, 532, 531, 378, 379, 491, 492, 493,
	111, 112, 113, 114, 115, 116, 117, 494, 497, 495,
	496, 498, 499, 500, 505, 506, 501, 502, 503, 504,
	507, -94, -106, 563, 562, -107, -156, -157, -170, -171,
	-298, -304, 244, 450, 238, 172, 479, -160, -153, -222,
	107, 92, 93, -8, -218, 449, 454, 455, 459, 452,
	549, 551, 566, 567, 569, 554, 559, 558, 561, 524,
	525, 526, 527, 528, 529, 634, 635, 636, 637, 638,
	639, 640, 641, -388, -297, 91, -162, -161, -204, 94,
	99, 102, 103, 105, -411, 262, 359, 360, 119, -432,
	665, 90, 95, 96, 97, 98, 120, 121, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	45, 415, 415, -195, -84, -84, -84, -84, -234, -132,
	-236, -10, -8, -432, -84, -8, -9, -13, -39, -41,
	568, -40, -304, 100, -241, -257, 13, 162, 43, 51,
	-239, -240, -12, -8, -149, 20, 24, 25, -137, 168,
	-149, -304, -137, -283, 243, -84, -84, -272, -317, 336,
	-274, 435, 649, 434, -264, -277, 91, -263, -276, 433,
	-12, -358, 159, -344, -348, -298, 254, -374, 250, -195,
	-84, -367, -366, -298, -432, 303, -133, -293, 240, 248,
	247, 136, -392, 139, 296, 450, 238, -56, -57, -58,
	-276, 176, 671, -115, 271, 275, 88, 88, -348, -347,
	-346, -393, 275, 254, -373, -365, 246, 255, -354, 247,
	248, -349, 240, 137, -393, -349, 245, 255, 250, 254,
	275, 275, 127, 275, 127, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 270, -355, 151, -355, 545, 545,
	-361, -393, 250, 240, -393, -393, 246, -295, -349, 242,
	26, 242, 36, 36, -355, -355, -355, -276, 176, -355,
	-355, -355, -355, 283, 283, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, 303, 239, -392, -141, 426, 317, 331, 329,
	82, -59, 285, -42, -195, 303, -293, 240, 241, -392,
	272, -195, 221, -195, -419, -195, 96, 96, 303, 304,
	-287, 159, 16, -287, -284, 415, 413, 400, 405, -287,
	-287, -287, -287, 286, 398, -350, 240, 36, 251, 415,
	286, 398, 286, 287, 286, 287, 408, 418, 286, -309,
	15, 162, 450, 403, 407, 279, 239, 280, 241, 417,
	287, -309, -309, 90, -309, 90, 90, -288, 159, 286,
	415, 282, -287, -287, -287, -315, -432, -300, -298, -296,
	230, 24, 142, 26, 28, 145, 177, 130, 20, 146,
	38, 232, 366, 250, 176, 246, 480, 225, 73, 549,
	451, 453, 449, 456, 482, 483, 450, 401, 32, 14,
	551, 29, 260, 25, 39, 170, 227, 149, 552, 263,
	27, 261, 118, 121, 554, 23, 76, 255, 15, 248,
	41, 17, 555, 556, 18, 244, 243, 162, 240, 71,
	12, 220, 30, 158, 67, 557, 137, 558, 559, 560,
	561, 131, 69, 159, 21, 691, 454, 455, 34, 650,
	537, 274, 172, 74, 60, 653, 143, 452, 562, 563,
	119, 564, 122, 77, 658, 139, 19, 72, 43, 565,
	275, 566, 245, 692, 567, 438, 568, 160, 228, 479,
	70, 161, 665, 569, 666, 238, 414, 9, 484, 33,
	259, 247, 129, 68, 570, 239, 148, 485, 486, 242,
	132, 120, 8, 136, 35, 13, 75, 78, 457, 458,
	459, 58, 128, 541, 147, 16, 571, 439, 141, 651,
	445, 446, 447, 448, 235, -388, 654, -315, -315, 33,
	92, -414, -415, -416, 541, 438, 242, -298, -195, -90,
	642, 229, -91, 648, 24, 237, -139, 415, -127, 177,
	672, 655, 656, 657, 654, 412, 652, 662, 660, 658,
	286, 659, 88, 139, 141, 142, 4, -149, 158, -205,
	151, 152, 153, 154, 155, 156, 157, 162, 143, 145,
	159, -250, 140, 163, 164, 165, 166, 167, 168, 169,
	171, 170, 172, 173, 160, 161, 176, 223, 224, -159,
	-159, -159, -159, -220, -226, -225, -432, -222, -388, -297,
	-304, -432, -432, -159, -282, -432, -432, -155, -432, -432,
	-432, -229, -149, -432, -432, -436, -432, -436, -436, -333,
	-432, -333, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, 221, -432,
	-432, -432, -432, -432, -333, -333, -333, -333, -333, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, 103, 99, 102, 94, -224, 105, 90,
	90, 90, 90, -8, -9, -214, -432, -314, -402, -403,
	-198, -195, -432, 317, 329, -298, -298, 272, -239, -12,
	-8, -234, -240, -236, -8, -125, -138, 64, 65, -140,
	25, 39, 68, 66, 24, -433, 89, -433, -257, -433,
	88, -41, -260, 87, 62, 44, 90, 90, 88, 22,
	-235, -237, -149, 15, -302, 4, -301, 26, -298, 90,
	221, 15, -196, 30, -195, -283, -283, 88, 91, 336,
	-273, -275, 436, 438, 151, -303, -298, 90, 32, 89,
	88, -195, -322, -325, -327, -326, -328, -323, -324, 363,
	364, 177, 367, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 380, 33, 262, 359, 360, 361, 362, 381,
	382, 383, 384, 386, 387, 388, 389, 344, 365, 539,
	345, 346, 347, 348, 349, 350, 352, 353, 356, 354,
	355, 357, 358, -389, -388, 87, 64, 65, 89, 88,
	-329, 87, -149, -290, 244, -141, 239, -388, 240, 240,
	240, -84, 479, -355, -355, -355, 270, 20, -49, -46,
	-381, 19, -45, -46, 230, 123, 124, 227, 87, -344,
	87, -353, -389, -298, -388, 87, 137, 245, 136, -352,
	-349, -352, -353, -222, -388, 137, 137, -388, -388, -269,
	-298, -269, -269, 24, -269, 24, -269, 24, 96, -298,
	-269, 24, -269, 24, -269, 24, -269, 24, -269, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -222, -388,
	-388, -222, -344, -222, -195, -388, -276, 96, 96, 96,
	-355, -355, 96, 90, 90, 90, -355, -355, 96, 90,
	-306, -304, 90, 90, -394, 256, 300, 302, 96, 96,
	96, 96, 32, 90, -395, 32, 679, 678, 680, 681,
	682, 90, 96, 32, 96, 32, 96, -298, 87, 91,
	-195, -147, 290, 225, 227, 230, 77, 90, 320, 321,
	318, 327, 328, 323, 324, 90, 320, 318, 327, 328,
	323, 324, 90, 320, 321, 318, 327, 328, 323, 324,
	151, 45, 88, 242, 91, 239, -388, -289, 244, -289,
	-298, -305, -304, -296, -418, 88, -417, 23, 445, 446,
	448, 404, 447, 91, 90, -149, -351, 15, 162, -309,
	-309, -287, -195, -351, -309, -287, -195, -287, -287, -287,
	-287, -309, -309, -309, -287, -304, -304, -195, -195, -195,
	-195, -195, -195, -195, -315, -288, -287, -287, 654, -287,
	332, 654, 90, -281, 15, 77, -315, -315, 88, 342,
	439, 440, -313, 339, -86, -298, 90, -15, -11, -23,
	-22, -24, 151, -15, 88, 541, -188, -195, 654, 654,
	654, 654, 654, 654, -149, -149, -149, -149, 564, -212,
	119, 143, 120, 121, -167, -213, -218, -220, 106, 162,
	145, 159, -250, -155, -159, -155, -155, -155, -155, -155,
	-155, -155, -155, -155, -155, -155, -155, -155, -316, -298,
	90, 177, -163, -162, 105, -411, -163, 538, 88, -225,
	221, -149, -149, -388, -149, -298, -135, -137, -135, -149,
	-227, -228, 147, -222, -149, -433, -433, 96, 105, 168,
	-131, 25, 39, -131, -131, -131, -131, -149, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -131, -298, -298,
	-124, -123, 461, 462, 463, 464, 466, 467, 468, 471,
	472, 476, 477, 460, 478, 465, 470, 473, 474, 475,
	469, 362, -149, -149, -149, -149, -149, -149, -92, -149,
	130, 131, 132, -214, -149, -155, -149, -149, -149, -433,
	-149, -149, -149, -215, -214, -387, -386, -385, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -433, -149, -169, -153, 96, -265, 105, 92, -149,
	-149, -136, -135, -300, -305, -296, -297, -135, -136, -136,
	-135, -135, -149, -149, -149, -149, -149, -149, -149, -149,
	-433, -149, -149, -149, -149, -149, -257, -433, -214, 88,
	-404, 438, 439, 650, -307, 275, -306, 26, -215, 90,
	90, 15, -267, 78, -298, -239, -239, 60, -135, -140,
	-433, -40, 26, -259, -298, 63, 90, -334, -276, 390,
	391, 177, -149, -149, 88, -238, 28, 29, -195, -301,
	168, -305, -195, -268, 275, -195, -173, -175, -176, -177,
	-198, -221, -432, -178, -8, 560, 557, 15, -188, -189,
	-197, -304, -274, -317, -273, 88, 437, 439, 440, 77,
	122, -149, -335, 176, -363, -362, -361, -344, -346, -347,
	-348, 89, -335, -340, 396, 395, -329, -329, -329, -329,
	-329, -334, -334, -334, -334, 87, 87, -329, -329, -329,
	-329, -337, 87, -337, -337, -338, -337, 87, -338, -339,
	87, -339, -374, -149, -371, -370, -368, -369, 249, 101,
	632, 588, 541, 581, 622, 78, -366, -238, 96, -433,
	91, 143, -147, -290, -372, -369, -388, -388, -388, -290,
	91, 90, 91, 90, 91, 90, -116, -63, -1, 691,
	692, 693, 88, 20, -345, -344, -62, 300, -377, -378,
	275, -373, -367, -353, 137, -352, -353, -353, -388, 88,
	30, 127, 127, 127, 127, 541, 227, 33, -291, 580,
	143, 632, 588, -344, -62, 242, 242, -316, -316, -316,
	90, 90, -286, 687, -188, -422, 87, -143, 292, 151,
	281, 281, 239, 239, 294, -195, 319, 322, 320, 321,
	318, 327, 328, 323, 324, 24, 24, 24, 24, 24,
	24, 24, 320, 318, 327, 328, 323, 324, 333, 24,
	24, 24, 24, 24, 24, 319, 322, 320, 321, 318,
	327, 328, 323, 324, 24, 24, 24, 24, 24, 24,
	24, 293, 295, 297, 283, -195, -195, -289, 77, -190,
	-195, 27, -304, -417, -195, 285, -195, -287, -287, -195,
	-287, -287, -195, -416, 343, -298, 377, 643, 644, 646,
	645, -127, 438, 88, 541, 23, -128, 23, -432, 119,
	120, 121, -213, -155, -159, -155, 142, 263, -432, -222,
	-433, -300, 26, 88, 78, -433, 88, 88, -433, -433,
	88, 15, -230, -228, 149, -149, -433, 88, -433, -433,
	-433, -214, -149, -149, -149, -149, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -214, 88, 88, 15,
	-320, 26, -433, -433, -433, -433, -433, -229, -433, 15,
	-433, 78, 88, 162, 88, -433, -433, -433, 88, 88,
	-433, -433, 88, 88, -433, 88, 88, 88, -433, 88,
	88, 88, 88, -433, -433, -433, -433, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -433, -99, 565,
	-433, -433, 88, -433, 88, -433, -432, 221, -433, -433,
	-433, -433, -433, 88, 88, 88, 88, 88, 88, -433,
	-433, -433, 88, 88, -433, 88, -433, 88, -433, -403,
	649, 439, -202, -201, -199, 75, 243, 76, -432, -306,
	-433, -163, -265, -266, -265, -207, -298, 96, 105, -241,
	-172, -174, 15, -140, -220, 89, 88, -334, -245, -251,
	-284, -298, 90, 177, -336, 177, -336, 390, 391, -237,
	221, -203, 16, -206, 33, 58, -11, -432, -432, 33,
	88, -191, -193, -192, -194, 67, 71, 73, 68, 69,
	70, 74, -311, 26, -8, -173, -8, -432, -195, -188,
	-434, 15, 78, -434, 88, 221, -275, -278, 441, 438,
	444, -388, 90, -115, 88, -361, -348, -242, -144, 41,
	-341, 397, -334, 548, -334, -343, 90, -343, 96, 96,
	96, 89, -52, -47, -48, 34, 82, -368, -355, 90,
	40, -355, -355, -298, 89, -238, 87, 27, -143, -195,
	77, -372, -372, -372, -304, -2, 690, 696, 137, 87,
	400, 19, -259, 88, 89, -223, 301, 89, -117, -298,
	89, 87, -353, -353, -298, -432, 239, 32, 32, 632,
	588, 580, -62, -223, -222, -388, -335, 689, 688, 89,
	-424, 305, -421, -427, 284, 29, 306, 286, 241, 299,
	-148, 456, -145, 90, 91, -195, -195, -195, -195, -195,
	230, 227, 423, -412, 325, -412, -412, 90, -412, 423,
	-412, -412, 284, 242, -188, -195, 88, -89, 258, 253,
	-309, -309, 34, -195, 438, 663, 661, -149, 142, 263,
	-167, -159, -155, -318, 177, 363, 262, 361, 357, 377,
	368, 395, 359, 396, 354, 353, 352, -318, -316, -214,
	-137, -149, -149, 150, -149, 148, -149, -433, -433, -433,
	-433, -433, -234, -149, -149, -149, -433, 177, 363, 15,
	-149, -316, -149, -149, -149, -149, -149, -385, -149, -214,
	-149, -214, -149, -149, -149, -149, -149, -386, -386, -386,
	-386, -386, -214, -214, -214, -214, -432, -298, -102, -101,
	-100, 615, 243, -99, -169, -102, -169, -136, -300, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -199,
	-349, -349, -349, -269, 88, -280, 23, 15, 58, 58,
	-172, -203, -173, -140, -298, -248, 642, -254, 47, -252,
	-253, 48, -249, 49, 57, -336, -336, 168, -239, -149,
	-270, 77, -271, -279, -222, -217, -219, -218, -432, -258,
	-433, -298, -269, -271, -175, -176, -176, -175, -176, 67,
	67, 67, 72, 67, 72, 67, -192, -304, -433, -149,
	-307, 78, -173, -173, -197, -304, 168, 438, 442, 443,
	-361, -410, 119, 143, 32, 77, 393, 101, -408, 176,
	577, 627, 632, 588, 581, 622, -409, 245, 136, 137,
	257, 26, 42, 89, 88, 89, 88, 89, 89, 88,
	-292, -291, -48, -47, -355, -355, 96, -388, 90, 90,
	-420, -427, 241, -195, 77, 77, 77, -118, 694, 96,
	87, -3, 82, -149, 87, 20, -344, -222, -379, -330,
	-380, -331, -332, -5, -6, -356, -121, 58, 101, -66,
	45, 240, 674, 675, 127, -432, 687, -371, -259, -375,
	-377, -195, -152, -432, -151, -153, -160, 166, 167, 262,
	359, 360, -223, -426, 273, 87, 89, 88, 151, -195,
	-142, 290, 298, 87, -146, 92, -391, 78, 281, 393,
	281, 90, -413, 326, 90, -413, -413, 90, -413, 90,
	-413, -413, -195, -89, -52, -195, -287, -287, 34, -388,
	-433, -167, -159, -130, 162, 541, -321, 547, -329, -329,
	-329, -339, -329, 349, -329, 349, -329, -433, -433, -433,
	88, -433, 23, -433, -149, 88, -126, 484, 88, 88,
	-433, 87, 87, -149, -433, -433, -433, 88, -433, -433,
	-433, -433, -433, 88, -433, -433, -433, 88, -319, 633,
	-433, -433, -433, -433, -433, -433, -433, -433, -433, -433,
	-98, -299, -298, -99, 597, 597, -433, -99, -231, 88,
	-433, -433, 88, -433, 88, 88, -433, 88, -433, 88,
	-433, -433, -433, -433, 88, -200, 23, -200, -200, -433,
	-265, -195, -203, -232, 17, -245, 52, 369, -256, -255,
	56, 48, -253, 20, 50, 20, 31, -270, 88, 151,
	88, -433, -433, 88, 58, 221, -433, -203, -186, -185,
	77, 78, -187, 77, -185, 67, 67, -260, 88, -268,
	-173, -203, -203, 221, 119, -432, -154, -166, -152, 13,
	90, 90, -388, -407, 678, 679, 32, 96, -355, -355,
	137, 137, -195, 87, -334, 90, -334, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, 89, 88, 151,
	-195, -195, -195, -195, -376, 87, 20, -149, 87, 151,
	89, -259, -259, 277, 162, -355, 672, 283, 283, -355,
	-355, -355, -120, -119, 694, 89, -433, 88, -342, 541,
	544, -149, -161, -161, 87, -423, -428, 307, 308, 309,
	310, 311, 312, 313, 314, 315, -427, 90, -260, 89,
	-384, 541, -390, -298, -298, -298, -298, 96, 98, 90,
	-433, 539, 74, 542, -433, -334, -149, -149, -149, -239,
	90, -149, -149, 96, 96, -433, -149, -214, -149, -433,
	-183, -182, -184, 655, 119, 32, -318, -433, -216, 275,
	-105, -104, -103, 15, -433, -149, -149, -149, -149, -149,
	-149, -149, -432, 67, 19, 17, -432, -432, -307, -232,
	-233, 18, 20, -246, 54, -244, 53, -244, -255, 20,
	20, 90, 20, 90, 137, -279, -149, -219, 58, -11,
	-298, -217, -298, -234, -149, 87, -149, -163, -203, -203,
	-149, -209, 508, 510, 511, 512, 509, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 513, 487, 108,
	110, 109, 488, 489, 490, 363, 535, 536, 530, 533,
	534, 532, 531, 378, 379, 491, 492, 493, 111, 112,
	113, 114, 115, 116, 117, 494, 497, 495, 498, 499,
	500, 505, 506, 501, 502, 503, 504, 507, 524, 525,
	526, 527, 528, 529, 634, 635, 636, 637, 638, 639,
	640, 641, 90, 90, 87, -149, 89, 89, 305, -427,
	90, -260, -375, -63, 89, -261, -259, 96, 89, 278,
	-218, -432, 90, -355, -355, -355, 96, 96, -306, -433,
	88, -298, -409, -377, 545, 545, -433, -425, -429, 252,
	316, 89, 88, 151, 151, 26, -383, -382, -300, 87,
	78, 63, 540, 543, -433, -433, 88, -433, -433, -433,
	89, 89, -433, -433, -433, 88, -433, -182, -184, -433,
	77, -163, -234, 20, -102, 300, 302, -102, -433, 88,
	-433, -433, 88, -433, 88, -433, -433, -262, -433, -298,
	245, 20, 20, -262, -262, -202, -233, -112, -111, -110,
	571, -149, -214, -247, 55, 77, 122, 90, 90, 90,
	13, -217, 221, -239, -259, -180, 400, -234, -433, -259,
	89, 87, 151, 26, 89, 696, 137, 89, -218, -129,
	-432, 274, -306, 90, 90, -119, -122, 89, 88, 151,
	-428, 90, 90, -11, 88, 151, -259, -195, 63, -149,
	-214, -433, 77, 552, 655, -97, -96, -93, 666, 692,
	-214, -99, -99, -149, -149, -149, 88, -433, -433, -433,
	-112, 88, -109, -108, -298, 77, 122, -271, -298, 89,
	-433, -432, -239, 89, -243, -423, 90, -11, 87, -3,
	274, -330, -380, -331, -332, -5, -6, -356, -429, 90,
	151, -87, 541, -382, -360, -300, 90, 96, 89, 541,
	-433, -433, -95, 145, 664, 630, -150, -161, -158, 220,
	-433, 88, -433, 88, -433, 88, -298, 245, -110, 88,
	26, -307, -181, -179, -298, 594, -400, -399, 537, -410,
	-406, 119, 143, 101, -408, 632, 588, 128, 129, 89,
	-87, -149, 87, -433, 151, 90, -88, 289, 649, -391,
	542, -95, 665, 608, 583, 608, 583, -149, -149, -149,
	-108, -432, -433, 88, 23, -322, -65, 605, -397, -398,
	77, -401, 406, 604, 625, 119, 90, 273, 89, -259,
	90, 250, -384, 543, 142, -433, 88, -433, 88, -433,
	-98, -179, 601, -335, -163, -398, 77, -397, 77, 14,
	13, 87, -4, 695, 89, 291, -95, -149, -149, -433,
	-64, 27, -180, -396, 258, 253, 256, 33, -396, -425,
	96, -4, -433, -433, 605, 252, 32, 119, 89, -163,
	-183, -182, -182,
}

var yyDef = [...]int{
	968, -2, -2, 970, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 77, 79, 80, 968,
	968, 968, 0, 968, 0, 0, 968, -2, -2, 968,
	1585, 0, 968, 0, 0, 0, 0, 0, -2, 881,
	887, 0, 896, -2, 0, 0, 968, 968, 2172, 2172,
	963, 0, 0, 0, 0, 0, 968, 968, 968, 968,
	1442, 57, 968, 0, 92, 93, 916, 917, 918, 72,
	0, 2170, 969, 1, 3, 78, 82, 0, 0, 0,
	65, 1451, 0, 85, 0, 0, 972, 0, 0, 1568,
	968, 968, 0, 167, 168, 169, 0, 0, 0, 968,
	0, -2, 173, -2, 202, 203, 204, 0, 209, 677,
	565, 617, 563, 602, -2, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 441,
	441, 0, 0, -2, 551, 551, 551, 1570, 0, 0,
	0, 599, 503, 441, 441, 441, 0, 441, 441, 441,
	441, 0, 0, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	1469, 208, 1586, 1583, 1584, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 0, 1562, 0, 790, 1071, 0, 0, 795, 0,
	0, 798, 799, 0, 870, 801, 802, 870, 0, 870,
	870, 870, 870, 0, 0, 0, 812, 0, 0, 0,
	0, 867, 0, 828, 829, 0, 867, 867, 867, 0,
	0, 840, 873, 0, 0, 846, 870, 870, 870, 850,
	851, 2173, 0, 2173, 2173, 1553, 0, 864, 862, 876,
	877, 47, 880, 883, 884, 885, 886, 889, 0, 900,
	903, 1579, 1580, 0, 905, 912, 929, 930, 0, 964,
	965, 52, 1219, 0, 1093, 1098, 1109, 1124, 1125, 1126,
	1127, 1128, 1130, 1131, 1132, 0, 0, 0, 0, 1137,
	1138, 0, 0, 0, 0, 0, 1200, 1146, 0, 0,
	0, 0, 1415, 0, 0, 1376, 1376, 1234, 1376, 1378,
	1378, 1793, 1929, 1937, 2059, 1755, 1760, 1761, 1762, 2052,
	2053, 2054, 2055, 2095, 2096, 2100, 1853, 0, 0, 0,
	2169, 1890, 1898, 1899, 1923, 2024, 2080, 1772, 1918, 1989,
	1850, 1872, 1873, 2006, 2007, 1894, 1895, 1876, 1888, 1891,
	1879, 1880, 1882, 1884, 1889, 1896, 1902, 1881, 1901, 1900,
	0, 1877, 1878, 1883, 1893, 1897, 1885, 1886, 1887, 1892,
	1903, 0, 0, 0, 0, 0, 1315, 1316, 1317, 1318,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 1428,
	1429, 50, 51, 1218, 1549, 1378, 1378, 1378, 1378, 1378,
	1160, 1161, 1162, 1163, 1164, 1188, 1189, 1195, 1196, 2001,
	2002, 2003, 2004, 1834, 2089, 1842, 1843, 1984, 1985, 1855,
	1856, 2130, 2131, -2, -2, -2, 274, 275, 276, 277,
	278, 279, 280, 281, 0, 1797, 2070, 2071, 270, 0,
	0, 338, 339, 335, 336, 337, 1202, 1203, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
	2172, 0, 939, 0, 0, 0, 0, 0, 1451, 0,
	1443, 1442, 70, 0, -2, 0, 0, 0, 0, 54,
	0, 59, 1028, 971, 84, 83, 1500, 0, 0, 0,
	66, 1452, 74, 76, 1453, 0, 973, 974, 0, 1004,
	1008, 0, 0, 0, 1569, 1568, 1568, 109, 0, 0,
	110, 130, 131, 132, 0, 0, 116, 117, 1555, 1556,
	170, 0, 0, 220, 221, 0, 48, 468, 0, 216,
	990, 0, 461, 400, 0, 1566, 1469, 0, 0, 0,
	0, 0, 968, 0, 1563, 197, 198, 205, 206, 207,
	441, 441, 441, 614, 0, 0, 208, 208, 572, 573,
	574, 0, 0, -2, 466, 0, 552, 0, 0, 455,
	455, 459, 457, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 442, 0, 612, 613,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	1572, 0, 589, 590, 0, 0, 0, 441, 441, 0,
	0, 0, 0, 441, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 1491, 0, 0, 0, 0,
	0, -2, 0, 782, 0, 0, 0, 0, 1564, 1564,
	0, 789, 0, 791, 1482, 793, 796, 797, 0, 137,
	800, 0, 0, 803, 0, 867, 867, 865, 866, 805,
	806, 807, 808, 870, 0, 0, 450, 451, 452, 867,
	870, 0, 870, 870, 870, 870, 867, 867, 867, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2173,
	873, 870, 870, 0, 870, 836, 0, 841, 0, 842,
	843, 844, 847, 848, 849, 852, 2174, 2175, 1581, 1582,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 2173, 2173, 856, 860, 1554,
	882, 888, 890, 891, 0, 0, 901, 904, 923, 56,
	1841, 911, 56, 913, 914, 915, 942, 943, 948, 0,
	0, 0, 0, 954, 955, 956, 957, 0, 0, 960,
	961, 962, 0, 0, 0, 0, 0, 1091, 0, 0,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 1111, 0, 0, 0, 1133,
	1134, 1135, 1136, 1139, 0, 1151, 0, 1153, 1424, -2,
	0, 0, 0, 1144, 1145, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 1232, 0, 1233, 1235, 1236,
	0, 1237, 978, 978, 978, 978, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	988, 988, 0, 0, 263, 264, 265, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 340,
	288, 289, 290, 1218, 0, 0, 0, 53, 931, 932,
	0, 1054, 1574, 0, 0, 0, 984, 0, 64, 73,
	75, 1451, 68, 1451, 0, 0, 0, -2, -2, 991,
	997, 998, 999, 1000, 1001, 61, 2171, 62, 0, 81,
	0, 55, 0, 0, 0, 0, 414, 1503, 0, 0,
	1444, 1445, 1448, 0, 1005, 1935, 1009, 0, 1011, 1012,
	0, 0, 107, 0, 1070, 0, 0, 0, 118, 0,
	120, 121, 0, 0, 0, 425, 1557, 1558, 1559, -2,
	448, 0, 425, 409, 348, 349, 350, 400, 352, 400,
	400, 400, 400, 414, 414, 414, 414, 383, 384, 385,
	386, 387, 0, 0, 369, 400, 400, 400, 400, 390,
	391, 392, 393, 394, 395, 396, 397, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 402, 402, 402, 402,
	402, 406, 406, 0, 49, 0, 995, 996, 429, 0,
	1448, 0, 0, 0, 0, 1491, 1566, 1576, 0, 0,
	0, 1566, 175, 0, 0, 0, 615, 688, 566, 603,
	616, 0, 569, 570, -2, 0, 0, 551, 0, 553,
	0, 449, 0, 460, -2, 0, 459, 0, 455, 459,
	456, 459, 447, 593, 594, 595, 0, 597, 598, 718,
	1040, 0, 0, 0, 0, 0, 724, 725, 726, 0,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 0,
	0, 0, 553, 0, 600, 0, 0, 505, 506, 507,
	0, 0, 510, 511, 512, 513, 0, 0, 516, 517,
	518, 1057, 1058, 519, 520, 545, 546, 547, 521, 522,
	523, 524, 525, 526, 527, 539, 540, 541, 542, 543,
	544, 528, 529, 530, 531, 532, 533, 536, 0, 138,
	190, 1473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 1564, 0, 0, 0, 0,
	987, 1072, 1587, 1588, 792, 0, 1483, 0, 1486, 1487,
	1488, 1489, 1490, 136, 871, 872, 0, 453, 454, 870,
	870, 809, 857, 0, 870, 813, 858, 814, 816, 815,
	817, 830, 831, 870, 820, 868, 869, 821, 822, 823,
	824, 825, 826, 827, 853, 832, 833, 834, 839, 835,
	837, 838, 874, 0, 878, 879, 854, 855, 0, 0,
	894, 895, 0, 902, 926, 924, 925, 927, 919, 920,
	921, 922, 0, 928, 0, 0, 945, 103, 950, 951,
	952, 953, 966, 959, 1220, 1088, 1089, 1090, 0, 1092,
	1095, 0, 1204, 1206, 1097, 1099, 1215, 1216, 1217, 0,
	0, 0, 0, 0, 1103, 1107, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1129, 1392,
	1393, 1394, 1148, 341, 342, 0, 1149, 0, 0, 0,
	0, 0, 0, 0, 1219, 1150, 0, 1002, 0, 0,
	1422, 1419, 0, 0, 0, 1377, 1379, 0, 0, 0,
	0, 979, 980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1395, 0, 0, 0, 0, 0, 1415, 0,
	1155, 1156, 1157, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 1575, 0, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1319, 1320, 1321, 1322, 46, 0,
	0, 0, 989, 1426, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	934, 935, 937, 0, 1074, 0, 1055, 0, 0, 940,
	941, 0, 983, 0, 986, 67, 69, 0, 1013, 992,
	63, 58, 0, 0, 1032, 1501, 414, 1523, 0, 423,
	423, 420, 1454, 1455, 0, 1447, 1449, 1450, 86, 1010,
	1006, 0, 1086, 0, 0, 1069, 0, 1016, 1018, 1019,
	1020, 1052, 0, 1023, 1024, 0, 0, 0, 0, 0,
	105, 1071, 111, 0, 119, 0, 0, 124, 125, 112,
	113, 114, 115, 0, 677, -2, 500, 222, 224, 225,
	226, 217, -2, 412, 410, 411, 351, 414, 414, 377,
	378, 379, 380, 381, 382, 0, 0, 370, 371, 372,
	373, 362, 0, 363, 364, 365, 404, 0, 366, 367,
	0, 368, 467, 0, 1456, 430, 431, 433, 441, 0,
	436, 437, 0, 441, 441, 0, 462, 463, 0, 1448,
	0, 0, 1473, 0, 0, 1577, 1576, 1576, 1576, 0,
	210, 211, 212, 213, 214, 215, 713, 0, 0, 689,
	711, 712, 208, 0, 0, 218, 555, 554, 0, 745,
	0, 465, 0, 0, 459, 459, 444, 445, 596, 0,
	0, 720, 721, 722, 723, 0, 0, 0, 582, 494,
	0, 583, 584, 553, 555, 0, 0, 425, 508, 509,
	514, 515, 534, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 630, 631, 634,
	636, 637, 638, 557, 644, 633, 635, 639, 640, 641,
	557, 645, 646, 648, 649, 650, 557, 656, 0, 647,
	651, 652, 653, 557, 657, 660, 661, 662, 665, 667,
	668, 669, 557, 675, 664, 666, 670, 671, 672, 557,
	676, 1470, 1471, 1472, 0, 0, 783, 0, 0, 491,
	101, 1565, 788, 1484, 794, 1485, 867, 819, 859, 867,
	811, 818, 845, 892, 893, 898, 906, 907, 908, 909,
	910, 949, 0, 0, 0, 0, 958, 0, 0, 1096,
	1205, 1207, 1100, 0, 1104, 1108, 0, 0, 0, 1154,
	1152, 1426, 0, 0, 0, 1201, 0, 0, 1223, 1224,
	0, 0, 0, 1420, 0, 0, 1230, 0, 1380, 1381,
	1238, 0, 0, 0, 0, 0, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1442, 0, 0, 0,
	0, 0, 1259, 1260, 1261, 1262, 1263, 0, 1265, 0,
	1266, 0, 0, 0, 0, 1273, 1274, 1276, 0, 0,
	1279, 1280, 0, 0, 1281, 0, 0, 0, 1285, 0,
	0, 0, 0, 1294, 1295, 1296, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1308, 1309, 0,
	1183, 0, 0, 1183, 0, 1221, 988, 0, 1382, 1383,
	1384, 1385, 1386, 0, 0, 0, 0, 0, 0, 1342,
	1343, 1345, 0, 0, 1348, 0, 1350, 0, 1548, 933,
	936, 938, 1026, 1075, 1076, 0, 0, 0, 0, 1056,
	1573, 981, 982, 985, 1034, 0, 1430, 0, 0, 1013,
	1086, 1014, 0, 993, 60, 1029, 0, 1505, 1504, 1517,
	1530, 423, 423, 417, 418, 424, 419, 421, 422, 1446,
	0, 1451, 0, 1541, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1062, 0,
	0, 0, 0, 1053, 1024, 0, 1025, 0, -2, 0,
	0, 99, 100, 0, 0, 0, 122, 123, 0, 0,
	129, 426, 427, 199, 208, 502, 223, 475, 0, 0,
	347, 413, 374, 375, 376, 0, 398, 0, 0, 0,
	0, 496, 171, 1460, 1459, 441, 441, 432, 0, 435,
	0, 0, 0, 1578, 401, 464, 0, 1567, 0, 189,
	0, 0, 0, 0, 195, 683, 0, 0, 690, 0,
	0, 0, 564, 0, 575, 576, 0, 717, -2, 779,
	429, 0, 443, 446, 1041, 0, 0, 577, 0, 580,
	581, 495, 555, 586, 587, 601, 588, 537, 538, 535,
	142, 0, 0, 0, 148, 149, 150, 151, 0, 0,
	1492, 1493, 1498, 1496, 1497, 176, 622, 624, 623, 627,
	0, 0, 0, 559, 0, 559, 559, 0, 559, 0,
	559, 559, 620, 0, 491, 1456, 0, 787, 492, 493,
	870, 870, 944, 104, 0, 947, 0, 0, 0, 0,
	1101, 1105, 1387, 1413, 400, 400, 1400, 400, 406, 1403,
	400, 1405, 400, 1408, 400, 1411, 1412, 0, 0, 0,
	1003, 0, 0, 1229, 1423, 0, 0, 1239, 1240, 1241,
	1242, 1243, 1417, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 1182, 0, 1184,
	1185, 0, 0, 1311, 0, 0, 1323, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1077,
	1082, 1082, 1082, 0, 0, 0, 1560, 1561, 1431, 1432,
	1086, 1433, 1015, 994, 1033, 1523, 0, 1516, 0, -2,
	1525, 0, 0, 0, 1531, 415, 416, 1007, 87, 1087,
	90, 0, 1541, 1550, 0, 1532, 1543, 1545, 0, 0,
	0, 1537, 0, 1086, 1017, 1048, 1050, 0, 1045, 1060,
	1061, 1063, 0, 1065, 0, 1067, 1068, 1028, 1022, 0,
	107, 0, 1086, 1086, 106, 0, 1073, 126, 127, 128,
	501, 227, 232, 0, 0, 0, 237, 0, 239, 0,
	0, 0, 244, 245, 441, 441, 476, 0, 344, 346,
	0, 0, 230, 414, 0, 414, 0, 405, 407, 0,
	477, 497, 1457, 1458, 0, 0, 434, 438, 439, 440,
	0, 0, 0, 191, 0, 0, 0, 686, 0, 714,
	0, 0, 0, 0, 0, 0, 219, 556, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 0, 441, 0,
	0, 0, 441, 441, 441, 0, 771, 428, 0, 0,
	742, 739, 578, 0, 268, 269, 271, 0, 0, 0,
	0, 0, 585, 134, 0, 0, 139, 0, 0, 1028,
	1474, 1475, 1476, 0, 1495, 1499, 179, 0, 0, 0,
	0, 632, 642, 0, 558, 643, 654, 658, 655, 663,
	673, 674, 784, 785, 786, 102, 804, 810, 946, 967,
	1094, 1102, 1106, 0, 0, 0, 0, 1414, 1398, 414,
	1401, 1402, 1404, 1406, 1407, 1409, 1410, 1142, 1143, 1147,
	0, 1226, 0, 1228, 1421, 0, 1451, 0, 0, 0,
	1257, 0, 0, 0, 1268, 1267, 1269, 0, 1271, 1272,
	1277, 1278, 1282, 0, 1284, 1286, 1287, 0, 0, 0,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	0, 1176, 1179, 1310, 1186, 1187, 1192, 1313, 0, 0,
	1222, 1325, 0, 1330, 0, 0, 1336, 0, 1340, 0,
	1346, 1347, 1349, 1351, 0, 0, 0, 0, 0, 1054,
	1035, 71, 1433, 1435, 0, 1510, 1508, 1508, 1518, 1519,
	0, 0, 1526, 0, 0, 0, 0, 91, 0, 0,
	0, 1546, 0, 0, 0, 0, 108, 1442, 1042, 1049,
	0, 0, 1043, 0, 1044, 1064, 1066, 1021, 0, 1086,
	1086, 97, 98, 0, 233, 0, 235, 261, 262, 0,
	238, 240, 241, 242, 248, 249, 250, 243, 0, 0,
	343, 345, 0, 0, 388, 399, 389, 0, 0, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 0, 0, 0,
	1028, 192, 193, 194, 678, 0, 688, 0, 1030, 0,
	681, 0, 567, 0, 0, 0, 441, 441, 441, 0,
	0, 0, 0, 756, 0, 0, 719, 0, 727, 0,
	0, 0, 272, 273, 0, 0, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 146, 0, 1494,
	621, 0, 177, 178, 0, 0, 626, 560, 561, 659,
	1140, 0, 0, 0, 1141, 1399, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 1264, 0, 0, 0, 1290,
	0, 0, 0, 708, 709, 0, 1354, 1181, 1442, 0,
	1183, 1193, 1194, 0, 1183, 1324, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 1074, 1435,
	1440, 0, 0, 1513, 0, 1506, 1509, 1507, 1520, 0,
	0, 1527, 0, 1529, 0, 1551, 1552, 1544, 0, 1536,
	1539, 1535, 1538, 1451, 1046, 0, 1051, 0, 1442, 96,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 247, 0, 0, 403, 408, 0, 0,
	144, 0, 0, 0, 679, 0, 1031, 691, 682, 0,
	769, 0, 773, 0, 0, 0, 776, 777, 778, 755,
	0, 759, 469, 743, 740, 741, 579, 0, 0, 165,
	166, 141, 0, 0, 0, 0, 180, 181, 0, 0,
	0, 1388, 0, 1391, 1225, 1227, 0, 1254, 1255, 1256,
	1396, 1397, 1270, 1283, 1288, 0, 1291, 0, 0, 1292,
	0, 710, 1172, 0, 0, 1190, 1191, 0, 1326, 0,
	1331, 1332, 0, 1337, 0, 1341, 1352, 0, 1079, 1036,
	1037, 1084, 1085, 0, 0, 1027, 1440, 89, 1441, 1438,
	0, 1436, 1434, 1502, 0, 1511, 1512, 1521, 1522, 1528,
	0, 1534, 0, 94, 0, 0, 0, 1451, 234, 0,
	253, 0, 0, 0, 687, 0, 690, 680, 767, 768,
	0, 780, 772, 774, 775, 757, -2, 143, 0, 0,
	0, 152, 147, 1477, 0, 0, 0, 628, 1389, 0,
	0, 1293, 0, 706, 707, 1180, 1173, 0, 1158, 1159,
	1177, 1312, 1314, 0, 0, 0, 0, 1078, 1080, 1081,
	88, 0, 1437, 1198, 0, 1514, 1515, 1542, 1540, 1047,
	1054, 0, 95, 482, 475, 0, 145, 1477, 0, 0,
	0, 760, 761, 762, 763, 764, 765, 766, 0, 163,
	0, 618, 1479, 182, 183, 548, 549, 550, 176, 0,
	1231, 1289, 1174, 0, 0, 0, 0, 1170, 1171, 0,
	1327, 0, 1333, 0, 1338, 0, 1038, 1039, 1439, 0,
	0, 692, 0, 694, 0, -2, 470, 483, 0, 228,
	254, 255, 0, 0, 258, 259, 260, 251, 252, 0,
	172, 0, 0, 781, 0, 153, 0, 1480, 1481, 179,
	0, 0, 1165, 1166, 1167, 1168, 1169, 0, 0, 0,
	1199, 1178, 693, 0, 0, 425, 0, 703, 471, 472,
	0, 478, 479, 480, 481, 256, 257, 0, 715, 0,
	164, 0, 625, 1390, 0, 1328, 0, 1334, 0, 1339,
	0, 695, 696, 704, 0, 473, 0, 474, 0, 0,
	0, 0, 684, 0, 715, 1478, 1175, 0, 0, 1197,
	0, 705, 701, 484, 486, 487, 0, 0, 485, 0,
	716, 685, 1329, 1335, 0, 488, 489, 490, 133, 697,
	698, 699, 700,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 697,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:669
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:718
		{
			setParseTree(yylex, nil)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:724
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:735
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:745
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:749
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:761
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:767
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:771
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:780
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:786
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:790
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:796
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:892
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:911
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:921
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:925
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:936
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:942
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:963
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:967
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:997
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1001
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1021
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1035
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1039
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1045
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1055
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1068
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1080
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1108
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1112
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1116
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1122
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1126
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1132
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1142
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1146
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1150
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = RepeatableReadStr
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = ReadCommittedStr
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.str = SerializableStr
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1174
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1178
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1182
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-16 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1188
		{
			yyLOCAL = &CreateWescaleFilter{Name: yyDollar[5].str, Description: yyDollar[7].createWescaleFilterUnion().Description, Priority: yyDollar[7].createWescaleFilterUnion().Priority, Status: yyDollar[7].createWescaleFilterUnion().Status, IfNotExists: yyDollar[4].booleanUnion(), Pattern: yyDollar[11].wescaleFilterPatternUnion(), Action: yyDollar[15].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1194
		{
			yyLOCAL = &AlterWescaleFilter{OriginName: yyDollar[4].str, NewName: yyDollar[5].alterWescaleFilterUnion().NewName, Description: yyDollar[5].alterWescaleFilterUnion().Description, Priority: yyDollar[5].alterWescaleFilterUnion().Priority, SetPriority: yyDollar[5].alterWescaleFilterUnion().SetPriority, Status: yyDollar[5].alterWescaleFilterUnion().Status, Pattern: yyDollar[6].wescaleFilterPatternUnion(), Action: yyDollar[7].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1200
		{
			yyLOCAL = &DropWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1206
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1210
		{
			yyLOCAL = &ShowWescaleFilter{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1217
		{
			yyLOCAL = &AlterWescaleFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1221
		{
			yyLOCAL = yyDollar[2].alterWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1227
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIPRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1231
		{
			yyLOCAL = yyDollar[3].wescaleFilterPatternUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1237
		{
			yyLOCAL = &WescaleFilterAction{Action: "-1", ActionArgs: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1241
		{
			yyLOCAL = yyDollar[3].wescaleFilterActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1249
		{
			yyLOCAL = &CreateWescaleFilter{Name: "-1", Description: "-1", Priority: "-1", Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1265
		{
			if yyDollar[3].str == "name" {
				yyVAL.createWescaleFilterUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createWescaleFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1283
		{
			yyLOCAL = &AlterWescaleFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.NewName = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
				yyLOCAL.SetPriority = true
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1300
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleFilterUnion().NewName = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.alterWescaleFilterUnion().Priority = yyDollar[5].str
				yyVAL.alterWescaleFilterUnion().SetPriority = true
			}
			if yyDollar[3].str == "status" {
				yyVAL.alterWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.str = "name"
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.str = "description"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = "priority"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.str = "status"
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1339
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIPRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
			if yyDollar[1].str == "plans" {
				yyLOCAL.Plans = yyDollar[3].str
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL.FullyQualifiedTableNames = yyDollar[3].str
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL.QueryRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL.QueryTemplate = yyDollar[3].str
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL.RequestIPRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL.UserRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL.LeadingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL.TrailingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL.BindVarConds = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1370
		{
			if yyDollar[3].str == "plans" {
				yyVAL.wescaleFilterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.wescaleFilterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.wescaleFilterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.wescaleFilterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.wescaleFilterPatternUnion().RequestIPRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.wescaleFilterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.wescaleFilterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = "plans"
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = "query_regex"
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = "query_template"
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = "request_ip_regex"
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = "user_regex"
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = "bind_var_conds"
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1441
		{
			yyLOCAL = &WescaleFilterAction{Action: "-1", ActionArgs: "-1"}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1451
		{
			if yyDollar[3].str == "action" {
				yyVAL.wescaleFilterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.wescaleFilterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = "action"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = "action_args"
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1473
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1479
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1486
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1491
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1496
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1505
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1509
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1525
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1540
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1545
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1551
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1571
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1577
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1593
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1600
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1607
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1612
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1617
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1622
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1629
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1636
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1647
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1658
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1664
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1668
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1672
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1676
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1680
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1700
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1704
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1720
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1730
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1734
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1740
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1750
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1755
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1764
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1787
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1796
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1818
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1822
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1828
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1834
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1839
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1844
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1849
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1854
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1859
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1868
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1877
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1882
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1888
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1894
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1898
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1904
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1908
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1912
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1918
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1922
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1927
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1931
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1936
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1942
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1948
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1953
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1958
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1964
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1972
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1979
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1983
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1987
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1991
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1995
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2005
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2012
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2016
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2022
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2026
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2030
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2034
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2038
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2042
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2046
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2050
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2055
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2059
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2063
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2067
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2071
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2075
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2080
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2084
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2088
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = Armscii8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = ASCIIStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.str = Big5Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = UBinaryStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = Cp1250Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = Cp1251Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = Cp1256Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = Cp1257Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = Cp850Str
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = Cp852Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = Cp866Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = Cp932Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = Dec8Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = EucjpmsStr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = EuckrStr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = Gb18030Str
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = Gb2312Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = GbkStr
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = Geostd8Str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = GreekStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = HebrewStr
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = Hp8Str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = Keybcs2Str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = Koi8rStr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = Koi8uStr
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = Latin1Str
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = Latin2Str
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = Latin5Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = Latin7Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = MacceStr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = MacromanStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = SjisStr
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = Swe7Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = Tis620Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = Ucs2Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = UjisStr
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = Utf16Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = Utf16leStr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = Utf32Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = Utf8Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = Utf8mb4Str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = Utf8Str
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2268
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2272
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2276
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2282
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2286
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2290
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2300
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2307
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2311
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2315
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2319
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2509
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2568
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2577
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2607
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2615
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2619
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2628
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2632
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2668
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2702
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2717
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2727
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2731
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2736
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2740
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2744
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2748
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2752
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2756
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2772
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2776
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2780
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2784
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2788
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = ""
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = yyDollar[2].str
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2807
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2811
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = "key"
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = yyDollar[1].str
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2855
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2865
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2869
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2875
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2879
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2885
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2889
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2895
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2901
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2905
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2909
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2913
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2917
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2926
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2932
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2938
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2944
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2948
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2952
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2957
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2961
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2967
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2973
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2979
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2983
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2987
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2991
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2995
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3027
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3036
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3042
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3050
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3056
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3066
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3070
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3074
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3078
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3082
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3086
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3090
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3098
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3102
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3106
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3110
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3114
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3118
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3122
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3126
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3130
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3134
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3138
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3142
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3146
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3150
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3154
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3158
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3162
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3166
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3170
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3174
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3178
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3182
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3186
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3237
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3241
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3250
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3255
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3259
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3268
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3272
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3281
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3285
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3289
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3297
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3303
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3317
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3321
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3325
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3329
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3333
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3337
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3341
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3345
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3349
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3353
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3358
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3363
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3367
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3371
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3375
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3379
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3383
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3387
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3391
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3395
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3399
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3403
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3407
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3411
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3415
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3419
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3423
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3427
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3431
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3435
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3439
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3445
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3449
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3455
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3459
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3463
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3467
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3471
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3475
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3479
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3483
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3487
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3491
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3497
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3664
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3971
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3980
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3988
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3997
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4004
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4016
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4025
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4040
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4054
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4058
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4064
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4070
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4076
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4086
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4090
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4096
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4102
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4108
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4114
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4120
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4138
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4144
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4150
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4154
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4158
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4164
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4168
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4173
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4177
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4182
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4186
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4192
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4196
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4200
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4204
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4208
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4212
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4216
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4220
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4224
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4228
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4232
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4236
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4240
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4244
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4248
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4252
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4256
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4260
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4264
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4268
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4272
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4276
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4295
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4310
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4314
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4319
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4324
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4329
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4334
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4339
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4345
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4351
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4356
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4362
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4368
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4378
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4383
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4387
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4392
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4397
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4402
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4407
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4413
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4419
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4426
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4433
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4440
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4452
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4458
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4464
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4470
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4476
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4482
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4488
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4500
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4516
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4522
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4526
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4532
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4536
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4545
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4577
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4615
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4619
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4623
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4631
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4635
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4639
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4647
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4675
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4679
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4683
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4687
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4691
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4695
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4699
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4703
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4707
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4711
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4715
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4719
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4739
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4747
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4751
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4755
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4759
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4767
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4771
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4775
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4779
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4783
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4799
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4803
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4807
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4811
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4815
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4822
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4826
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4830
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4834
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4838
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4842
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4846
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4850
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4854
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = ""
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = "extended "
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4874
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4890
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4894
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4908
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4912
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4922
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4928
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.empty = struct{}{}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.empty = struct{}{}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4952
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4956
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4960
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4986
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4990
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4999
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5005
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5015
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5019
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5023
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5030
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5036
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5040
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5050
		{
			yyVAL.empty = struct{}{}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.empty = struct{}{}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5056
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5062
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5067
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5071
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5075
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5079
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5083
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5087
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5091
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5096
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5100
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5104
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5108
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = yyDollar[1].str
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5128
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5136
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5140
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5145
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5159
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5163
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5169
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5175
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5179
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5185
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5191
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5201
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5207
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5211
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5215
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5219
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5225
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5231
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5235
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5241
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5245
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5249
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5253
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5257
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5271
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5352
		{
			setAllowComments(yylex, true)
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5356
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5362
		{
			yyVAL.strs = nil
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5366
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5372
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = ""
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = SQLCacheStr
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5412
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5416
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5426
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5435
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5441
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5445
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5454
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5459
		{
			yyVAL.strs = nil
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5467
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5475
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = SQLCacheStr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = DistinctStr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = DistinctStr
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = StraightJoinHint
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5511
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5521
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5525
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5529
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5533
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5538
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5546
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5558
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5562
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5568
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5574
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5578
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5588
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5592
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5596
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5600
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5606
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5610
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5616
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5620
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5629
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5638
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5644
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5648
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5654
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5658
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5664
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5668
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5672
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5676
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5682
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5686
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5699
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5703
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5707
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5711
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5717
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5719
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5723
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5729
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5731
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5734
		{
			yyVAL.empty = struct{}{}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.empty = struct{}{}
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5743
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5747
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5760
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5764
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5768
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5774
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5780
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5784
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5788
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5792
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5798
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5802
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5812
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5832
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5841
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5847
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5851
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5857
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5861
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5865
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5869
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5874
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5878
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5882
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5886
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6000
		{
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6176
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6180
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6186
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6196
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6200
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6204
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6210
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6214
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6221
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6225
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6229
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6233
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6237
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6243
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6247
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6251
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6255
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6259
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6278
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6284
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6288
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6297
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6302
		{
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6311
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6317
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6321
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6333
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6339
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6343
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6349
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6353
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6359
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6363
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6375
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6381
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6385
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6391
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6397
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6401
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6407
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6411
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6417
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6421
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6428
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6432
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6436
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6440
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6446
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6450
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6454
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6458
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6462
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6466
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6470
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6476
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6480
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6484
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6491
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6497
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6501
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6891
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6958
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6962
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6966
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6970
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6974
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6978
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6983
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6987
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6991
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6995
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7002
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7006
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7016
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7020
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7024
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7030
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7034
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7038
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7042
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7046
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7050
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7054
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7063
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7069
		{
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7071
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7075
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7079
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7083
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7087
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7091
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7095
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7099
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7103
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7107
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7111
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7117
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7121
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7125
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7129
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7133
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7137
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7141
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7145
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7149
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7167
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7171
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7182
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7190
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7194
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7198
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7204
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7208
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7212
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7216
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7220
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7226
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7244
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7248
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7304
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7308
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7336
		{
			yyVAL.str = string("")
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7340
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7346
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7350
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7356
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7365
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7371
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7375
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7379
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7383
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7389
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7393
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7399
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7408
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7412
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7422
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7431
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7437
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7443
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7447
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7456
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7465
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7471
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7477
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7481
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7487
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7492
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7496
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7500
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7509
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7515
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7519
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7523
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7532
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7536
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7540
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7544
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7554
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7558
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7562
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7566
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7572
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7576
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7580
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7584
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = ""
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7597
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = ""
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = ""
		}
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7634
		{
			yyVAL.str = "cascaded"
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7651
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7655
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7661
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7665
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7669
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7673
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7677
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7681
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7691
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7697
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7703
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7709
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7718
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7722
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7727
		{
			yyVAL.str = ""
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7731
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7737
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7741
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7747
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7751
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7755
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7760
		{
			yyVAL.str = ""
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7764
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7773
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7777
		{
			yyVAL.str = " header"
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = ""
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = " manifest on"
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = " manifest off"
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7795
		{
			yyVAL.str = ""
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = " overwrite on"
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			yyVAL.str = " overwrite off"
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7809
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7814
		{
			yyVAL.str = ""
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7818
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7824
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7828
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7834
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7838
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7843
		{
			yyVAL.str = ""
		}
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7847
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7853
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7857
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7863
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7867
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7871
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7876
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7880
		{
			yyVAL.str = " optionally"
		}
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7893
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7897
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7901
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7905
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7909
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7915
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7919
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7923
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7927
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7936
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7942
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7946
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7952
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7956
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7962
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7966
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7971
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7981
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7985
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7991
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7998
		{
			yyVAL.str = "charset"
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8008
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8012
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8016
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8030
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8037
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8040
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8042
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8045
		{
			yyVAL.empty = struct{}{}
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8047
		{
			yyVAL.empty = struct{}{}
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8049
		{
			yyVAL.empty = struct{}{}
		}
	case 1573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8053
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8062
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8069
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8073
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8079
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8083
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8090
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8096
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8100
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8106
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8110
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8117
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8726
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8735
		{
			decNesting(yylex)
		}
	case 2172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8740
		{
			skipToEnd(yylex)
		}
	case 2173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8745
		{
			skipToEnd(yylex)
		}
	case 2174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8749
		{
			skipToEnd(yylex)
		}
	case 2175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8753
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
