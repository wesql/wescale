// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const CODE = 57702
const COLLATION = 57703
const COLUMNS = 57704
const DATABASES = 57705
const ENGINES = 57706
const EVENT = 57707
const EXTENDED = 57708
const FIELDS = 57709
const FULL = 57710
const FUNCTION = 57711
const GTID_EXECUTED = 57712
const KEYSPACES = 57713
const OPEN = 57714
const PLUGINS = 57715
const PRIVILEGES = 57716
const PROCESSLIST = 57717
const SCHEMAS = 57718
const TABLES = 57719
const TRIGGERS = 57720
const USER = 57721
const VGTID_EXECUTED = 57722
const VITESS_KEYSPACES = 57723
const VITESS_METADATA = 57724
const VITESS_MIGRATIONS = 57725
const VITESS_REPLICATION_STATUS = 57726
const VITESS_SHARDS = 57727
const VITESS_TABLETS = 57728
const VITESS_TARGET = 57729
const VSCHEMA = 57730
const VITESS_THROTTLED_APPS = 57731
const WORKLOAD = 57732
const LASTSEENGTID = 57733
const FAILPOINTS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const FAST = 57747
const QUICK = 57748
const CHANGED = 57749
const MEDIUM = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_DATE = 57753
const NOW = 57754
const CURRENT_TIME = 57755
const LOCALTIME = 57756
const LOCALTIMESTAMP = 57757
const CURRENT_USER = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const DAY = 57762
const DAY_HOUR = 57763
const DAY_MICROSECOND = 57764
const DAY_MINUTE = 57765
const DAY_SECOND = 57766
const HOUR = 57767
const HOUR_MICROSECOND = 57768
const HOUR_MINUTE = 57769
const HOUR_SECOND = 57770
const MICROSECOND = 57771
const MINUTE = 57772
const MINUTE_MICROSECOND = 57773
const MINUTE_SECOND = 57774
const MONTH = 57775
const QUARTER = 57776
const SECOND = 57777
const SECOND_MICROSECOND = 57778
const YEAR_MONTH = 57779
const WEEK = 57780
const REPLACE = 57781
const CONVERT = 57782
const CAST = 57783
const SUBSTR = 57784
const SUBSTRING = 57785
const SEPARATOR = 57786
const TIMESTAMPADD = 57787
const TIMESTAMPDIFF = 57788
const WEIGHT_STRING = 57789
const LTRIM = 57790
const RTRIM = 57791
const TRIM = 57792
const JSON_ARRAY = 57793
const JSON_OBJECT = 57794
const JSON_QUOTE = 57795
const JSON_DEPTH = 57796
const JSON_TYPE = 57797
const JSON_LENGTH = 57798
const JSON_VALID = 57799
const JSON_ARRAY_APPEND = 57800
const JSON_ARRAY_INSERT = 57801
const JSON_INSERT = 57802
const JSON_MERGE = 57803
const JSON_MERGE_PATCH = 57804
const JSON_MERGE_PRESERVE = 57805
const JSON_REMOVE = 57806
const JSON_REPLACE = 57807
const JSON_SET = 57808
const JSON_UNQUOTE = 57809
const COUNT = 57810
const AVG = 57811
const MAX = 57812
const MIN = 57813
const SUM = 57814
const GROUP_CONCAT = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const STD = 57819
const STDDEV = 57820
const STDDEV_POP = 57821
const STDDEV_SAMP = 57822
const VAR_POP = 57823
const VAR_SAMP = 57824
const VARIANCE = 57825
const REGEXP_INSTR = 57826
const REGEXP_LIKE = 57827
const REGEXP_REPLACE = 57828
const REGEXP_SUBSTR = 57829
const ExtractValue = 57830
const UpdateXML = 57831
const GET_LOCK = 57832
const RELEASE_LOCK = 57833
const RELEASE_ALL_LOCKS = 57834
const IS_FREE_LOCK = 57835
const IS_USED_LOCK = 57836
const LOCATE = 57837
const POSITION = 57838
const MATCH = 57839
const AGAINST = 57840
const BOOLEAN = 57841
const LANGUAGE = 57842
const WITH = 57843
const QUERY = 57844
const EXPANSION = 57845
const WITHOUT = 57846
const VALIDATION = 57847
const UNUSED = 57848
const ARRAY = 57849
const BYTE = 57850
const CUME_DIST = 57851
const DESCRIPTION = 57852
const DENSE_RANK = 57853
const EMPTY = 57854
const EXCEPT = 57855
const FIRST_VALUE = 57856
const GROUPING = 57857
const GROUPS = 57858
const JSON_TABLE = 57859
const LAG = 57860
const LAST_VALUE = 57861
const LATERAL = 57862
const LEAD = 57863
const NTH_VALUE = 57864
const NTILE = 57865
const OF = 57866
const OVER = 57867
const PERCENT_RANK = 57868
const RANK = 57869
const RECURSIVE = 57870
const ROW_NUMBER = 57871
const SYSTEM = 57872
const WINDOW = 57873
const ACTIVE = 57874
const ADMIN = 57875
const AUTOEXTEND_SIZE = 57876
const BUCKETS = 57877
const CLONE = 57878
const COLUMN_FORMAT = 57879
const COMPONENT = 57880
const DEFINITION = 57881
const ENFORCED = 57882
const ENGINE_ATTRIBUTE = 57883
const EXCLUDE = 57884
const FOLLOWING = 57885
const GET_MASTER_PUBLIC_KEY = 57886
const HISTOGRAM = 57887
const HISTORY = 57888
const INACTIVE = 57889
const INVISIBLE = 57890
const LOCKED = 57891
const MASTER_COMPRESSION_ALGORITHMS = 57892
const MASTER_PUBLIC_KEY_PATH = 57893
const MASTER_TLS_CIPHERSUITES = 57894
const MASTER_ZSTD_COMPRESSION_LEVEL = 57895
const NESTED = 57896
const NETWORK_NAMESPACE = 57897
const NOWAIT = 57898
const NULLS = 57899
const OJ = 57900
const OLD = 57901
const OPTIONAL = 57902
const ORDINALITY = 57903
const ORGANIZATION = 57904
const OTHERS = 57905
const PARTIAL = 57906
const PATH = 57907
const PERSIST = 57908
const PERSIST_ONLY = 57909
const PRECEDING = 57910
const PRIVILEGE_CHECKS_USER = 57911
const PROCESS = 57912
const RANDOM = 57913
const REFERENCE = 57914
const REQUIRE_ROW_FORMAT = 57915
const RESOURCE = 57916
const RESPECT = 57917
const RESTART = 57918
const RETAIN = 57919
const REUSE = 57920
const ROLE = 57921
const SECONDARY = 57922
const SECONDARY_ENGINE = 57923
const SECONDARY_ENGINE_ATTRIBUTE = 57924
const SECONDARY_LOAD = 57925
const SECONDARY_UNLOAD = 57926
const SIMPLE = 57927
const SKIP = 57928
const SRID = 57929
const THREAD_PRIORITY = 57930
const TIES = 57931
const UNBOUNDED = 57932
const VCPU = 57933
const VISIBLE = 57934
const RETURNING = 57935
const FORMAT_BYTES = 57936
const FORMAT_PICO_TIME = 57937
const PS_CURRENT_THREAD_ID = 57938
const PS_THREAD_ID = 57939
const GTID_SUBSET = 57940
const GTID_SUBTRACT = 57941
const WAIT_FOR_EXECUTED_GTID_SET = 57942
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57943
const FORMAT = 57944
const TREE = 57945
const VITESS = 57946
const TRADITIONAL = 57947
const VTEXPLAIN = 57948
const VEXPLAIN = 57949
const PLAN = 57950
const LOCAL = 57951
const LOW_PRIORITY = 57952
const KILL = 57953
const NO_WRITE_TO_BINLOG = 57954
const LOGS = 57955
const ERROR = 57956
const GENERAL = 57957
const HOSTS = 57958
const OPTIMIZER_COSTS = 57959
const USER_RESOURCES = 57960
const SLOW = 57961
const CHANNEL = 57962
const RELAY = 57963
const EXPORT = 57964
const CURRENT = 57965
const ROW = 57966
const ROWS = 57967
const AVG_ROW_LENGTH = 57968
const CONNECTION = 57969
const CHECKSUM = 57970
const DELAY_KEY_WRITE = 57971
const ENCRYPTION = 57972
const ENGINE = 57973
const INSERT_METHOD = 57974
const MAX_ROWS = 57975
const MIN_ROWS = 57976
const PACK_KEYS = 57977
const PASSWORD = 57978
const FIXED = 57979
const DYNAMIC = 57980
const COMPRESSED = 57981
const REDUNDANT = 57982
const COMPACT = 57983
const ROW_FORMAT = 57984
const STATS_AUTO_RECALC = 57985
const STATS_PERSISTENT = 57986
const STATS_SAMPLE_PAGES = 57987
const STORAGE = 57988
const MEMORY = 57989
const DISK = 57990
const PARTITIONS = 57991
const LINEAR = 57992
const RANGE = 57993
const LIST = 57994
const SUBPARTITION = 57995
const SUBPARTITIONS = 57996
const HASH = 57997

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	673, 159,
	-2, 167,
	-1, 53,
	135, 167,
	176, 167,
	345, 167,
	-2, 521,
	-1, 62,
	36, 777,
	239, 777,
	250, 777,
	285, 791,
	286, 791,
	-2, 779,
	-1, 67,
	241, 815,
	-2, 813,
	-1, 122,
	238, 1476,
	-2, 133,
	-1, 124,
	1, 160,
	673, 160,
	-2, 167,
	-1, 135,
	136, 407,
	244, 407,
	-2, 510,
	-1, 154,
	135, 167,
	176, 167,
	345, 167,
	-2, 530,
	-1, 824,
	87, 1493,
	-2, 1338,
	-1, 825,
	87, 1494,
	221, 1498,
	-2, 1339,
	-1, 826,
	221, 1497,
	-2, 42,
	-1, 906,
	60, 889,
	-2, 904,
	-1, 992,
	249, 43,
	254, 43,
	-2, 418,
	-1, 1077,
	1, 578,
	673, 578,
	-2, 167,
	-1, 1385,
	221, 1498,
	-2, 1339,
	-1, 1533,
	60, 890,
	-2, 909,
	-1, 1534,
	60, 891,
	-2, 910,
	-1, 1585,
	135, 167,
	176, 167,
	345, 167,
	-2, 457,
	-1, 1666,
	136, 407,
	244, 407,
	-2, 510,
	-1, 1675,
	249, 44,
	254, 44,
	-2, 419,
	-1, 2043,
	221, 1502,
	-2, 1496,
	-1, 2044,
	221, 1498,
	-2, 1494,
	-1, 2144,
	135, 167,
	176, 167,
	345, 167,
	-2, 458,
	-1, 2151,
	26, 188,
	-2, 190,
	-1, 2521,
	78, 98,
	88, 98,
	-2, 968,
	-1, 2590,
	648, 694,
	-2, 668,
	-1, 2757,
	50, 1444,
	-2, 1438,
	-1, 3410,
	648, 694,
	-2, 682,
	-1, 3498,
	90, 626,
	95, 626,
	105, 626,
	178, 626,
	179, 626,
	180, 626,
	181, 626,
	182, 626,
	183, 626,
	184, 626,
	185, 626,
	186, 626,
	187, 626,
	188, 626,
	189, 626,
	190, 626,
	191, 626,
	192, 626,
	193, 626,
	194, 626,
	195, 626,
	196, 626,
	197, 626,
	198, 626,
	199, 626,
	200, 626,
	201, 626,
	202, 626,
	203, 626,
	204, 626,
	205, 626,
	206, 626,
	207, 626,
	208, 626,
	209, 626,
	210, 626,
	211, 626,
	212, 626,
	213, 626,
	214, 626,
	215, 626,
	216, 626,
	217, 626,
	218, 626,
	219, 626,
	-2, 1860,
}

const yyPrivate = 57344

const yyLast = 47910

var yyAct = [...]int{
	1541, 3569, 825, 835, 828, 3580, 3128, 3475, 3538, 698,
	3539, 2141, 2092, 1588, 3441, 2907, 3464, 3496, 2809, 2816,
	2985, 3391, 3375, 3323, 2072, 2858, 922, 2867, 2872, 3157,
	2869, 3373, 2868, 2866, 2871, 3158, 3159, 2870, 2770, 3115,
	1145, 899, 3187, 2074, 794, 795, 2773, 42, 2421, 3363,
	677, 1856, 2455, 2824, 5, 2886, 2716, 680, 195, 2774,
	790, 195, 2215, 2771, 2887, 2494, 657, 1548, 3024, 3018,
	3192, 663, 2651, 788, 2112, 2096, 708, 2889, 2115, 2768,
	2758, 827, 195, 1910, 3044, 789, 2481, 3010, 2555, 2034,
	678, 1644, 2635, 2556, 2178, 1024, 2557, 195, 2587, 2129,
	1093, 2246, 676, 2913, 2183, 2506, 2203, 1147, 2117, 43,
	954, 2473, 2487, 1535, 163, 2116, 2457, 2039, 2005, 1925,
	2627, 1864, 663, 195, 663, 2224, 923, 901, 1122, 2031,
	903, 1906, 907, 149, 2104, 2263, 1673, 2202, 41, 2185,
	2548, 1691, 982, 987, 1577, 2523, 1557, 690, 100, 2119,
	1515, 925, 1397, 1794, 1929, 1883, 1310, 1325, 1799, 1680,
	961, 993, 990, 958, 2004, 1772, 2200, 2174, 1790, 104,
	105, 1000, 962, 2175, 988, 989, 1576, 685, 1562, 940,
	2097, 942, 913, 2040, 1381, 1357, 1938, 1855, 2001, 910,
	99, 107, 85, 1808, 1136, 1639, 1143, 909, 167, 127,
	125, 126, 1073, 1665, 132, 133, 911, 84, 935, 684,
	106, 1401, 3400, 667, 93, 98, 2580, 3570, 2217, 2218,
	2219, 2217, 3116, 2855, 3426, 2578, 908, 2610, 2609, 2261,
	1757, 930, 934, 1326, 3108, 606, 3522, 3071, 95, 2643,
	2877, 95, 2644, 609, 3162, 3421, 652, 1026, 916, 1405,
	3427, 128, 844, 845, 846, 3422, 1871, 134, 652, 646,
	1043, 1044, 1045, 955, 1048, 1049, 1050, 1051, 1870, 1029,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 668, 2, 1869,
	646, 917, 1868, 902, 949, 900, 2875, 950, 3162, 1003,
	980, 3476, 2877, 844, 845, 846, 1867, 1866, 1004, 979,
	95, 1326, 1839, 670, 3517, 2874, 671, 2309, 1030, 1033,
	1034, 924, 2881, 128, 978, 977, 976, 2069, 2070, 1886,
	1037, 3161, 643, 111, 112, 113, 2453, 116, 2754, 1321,
	122, 1336, 1511, 191, 95, 2194, 600, 3422, 1046, 2483,
	2250, 948, 792, 793, 2600, 1542, 966, 971, 2875, 665,
	666, 948, 792, 793, 2720, 3526, 3590, 3524, 2188, 895,
	896, 897, 898, 3542, 3537, 906, 3482, 3560, 2990, 2603,
	627, 3376, 2989, 1342, 2881, 3161, 2248, 2422, 1876, 2932,
	3525, 128, 3523, 625, 2249, 646, 3319, 3318, 3121, 646,
	1028, 3122, 86, 937, 938, 646, 1027, 86, 2812, 3551,
	3329, 2318, 3520, 3140, 86, 86, 3129, 88, 672, 1336,
	1312, 3465, 3472, 2243, 3405, 3328, 2497, 3482, 3139, 1915,
	3501, 2952, 1654, 622, 2878, 1578, 975, 1579, 1082, 1083,
	2454, 2100, 637, 2617, 2618, 2136, 2137, 1332, 2805, 1800,
	1324, 2498, 2532, 2813, 2642, 2531, 3205, 632, 2533, 2806,
	2807, 1848, 1849, 3506, 2315, 2135, 1129, 635, 1131, 647,
	1085, 2626, 1112, 1800, 1117, 1118, 2316, 2815, 1140, 893,
	95, 3504, 1076, 892, 970, 95, 3392, 972, 1113, 2544,
	3510, 3511, 95, 95, 973, 2810, 2878, 1100, 2826, 2827,
	647, 1106, 1101, 2154, 2153, 3505, 1128, 1130, 3021, 2581,
	646, 1100, 2826, 2827, 1798, 2187, 1101, 1847, 1339, 2811,
	1340, 1341, 2940, 1311, 1099, 1332, 1098, 2909, 2490, 2491,
	2938, 646, 2307, 612, 2685, 614, 628, 660, 649, 2071,
	648, 618, 1851, 616, 620, 629, 621, 664, 615, 1072,
	626, 1322, 2817, 617, 630, 631, 634, 638, 639, 640,
	636, 633, 641, 610, 611, 658, 624, 650, 2628, 3543,
	1574, 1519, 1047, 2914, 2588, 941, 1119, 2225, 2613, 1747,
	1114, 2310, 2311, 2313, 2312, 975, 1120, 967, 646, 2902,
	3544, 1139, 2264, 1107, 969, 968, 3351, 2903, 3352, 2284,
	3572, 2285, 195, 2286, 195, 647, 2825, 195, 195, 647,
	1126, 2269, 1773, 1133, 1127, 647, 1115, 1116, 2828, 2910,
	2825, 1138, 1121, 1748, 1132, 1749, 974, 2298, 1078, 2630,
	2100, 3110, 2828, 2098, 2099, 2911, 2266, 975, 1071, 3106,
	3109, 2287, 1053, 973, 3303, 663, 1052, 663, 663, 1522,
	983, 2268, 3518, 1658, 984, 1125, 2228, 3166, 607, 1013,
	1011, 2113, 995, 984, 1778, 2652, 2270, 663, 195, 1022,
	951, 945, 943, 2276, 2272, 2274, 2275, 2273, 2277, 2278,
	951, 945, 943, 1021, 1020, 1019, 1331, 1328, 1329, 1330,
	1335, 1337, 1334, 2267, 1333, 1018, 1385, 190, 1017, 2686,
	1358, 1016, 1075, 1015, 1327, 1010, 1023, 2828, 959, 3591,
	3549, 1110, 957, 1096, 2719, 1102, 1103, 1104, 1105, 959,
	647, 129, 2929, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1367, 1366, 1368, 1369, 172, 1791, 1032, 2458, 2460, 1141,
	1142, 647, 995, 1372, 2201, 1372, 1031, 3399, 2814, 2654,
	1393, 2579, 959, 3105, 1383, 936, 2631, 996, 2254, 3584,
	1134, 1679, 2253, 3478, 1331, 1328, 1329, 1330, 1335, 1337,
	1334, 981, 1333, 1039, 2848, 974, 1787, 1375, 1376, 1377,
	1378, 651, 1327, 608, 2316, 2191, 2615, 1389, 1313, 2546,
	169, 1040, 841, 170, 1575, 841, 3477, 1303, 647, 2612,
	2247, 2582, 1652, 644, 3022, 1074, 1014, 1012, 2598, 1804,
	1002, 1651, 1650, 2634, 3478, 1788, 189, 1648, 645, 2664,
	2663, 2662, 2098, 2099, 2656, 2192, 2660, 974, 2655, 2647,
	2653, 2330, 2190, 1804, 605, 2658, 604, 599, 1385, 3388,
	1379, 1304, 1305, 3160, 2657, 2879, 2880, 3477, 1801, 1802,
	1805, 1803, 1759, 1758, 1760, 1761, 1762, 1002, 2883, 3069,
	3070, 89, 2659, 2661, 841, 2625, 2193, 3058, 2624, 1678,
	3138, 3040, 1801, 1802, 1805, 1803, 2189, 1781, 2528, 1779,
	1780, 2493, 1782, 1783, 1002, 1509, 944, 2602, 1002, 2245,
	1373, 1374, 2430, 1918, 124, 195, 944, 3160, 1566, 663,
	663, 1474, 1087, 2142, 2459, 1777, 2317, 2879, 2880, 1543,
	1545, 94, 1001, 2488, 1109, 195, 94, 1372, 1369, 1403,
	2883, 1404, 2804, 94, 94, 1111, 1523, 3509, 173, 919,
	2818, 2601, 1123, 1809, 2822, 663, 119, 179, 195, 1095,
	1320, 2821, 1137, 3413, 1526, 1525, 1939, 1025, 2637, 1529,
	663, 3101, 3034, 2636, 2265, 903, 195, 1081, 1084, 1001,
	1940, 1407, 1860, 1097, 1784, 995, 998, 999, 1580, 959,
	2671, 3508, 1930, 992, 996, 2823, 2571, 2637, 3582, 1510,
	2819, 3583, 2636, 3581, 3552, 2820, 1001, 1341, 1038, 2974,
	1001, 3201, 1035, 663, 991, 1002, 995, 998, 999, 1930,
	959, 2347, 3076, 1342, 992, 996, 1385, 3075, 120, 1340,
	1341, 2232, 663, 663, 1688, 663, 1687, 663, 663, 1677,
	663, 663, 663, 663, 663, 663, 2242, 2105, 2106, 2240,
	1527, 1528, 1013, 1385, 104, 105, 1385, 663, 1385, 195,
	1011, 1342, 1516, 1510, 3545, 1503, 1480, 1481, 1482, 1483,
	1484, 3059, 915, 1774, 2237, 1775, 107, 3592, 1776, 195,
	3586, 164, 1342, 3311, 1685, 1002, 1364, 1365, 1367, 1366,
	1368, 1369, 663, 1342, 195, 1655, 1656, 1657, 2930, 1124,
	1810, 3310, 1094, 2244, 2374, 3301, 1767, 1077, 663, 1937,
	195, 1720, 2947, 2241, 1723, 1342, 1725, 1001, 3151, 1544,
	1742, 1671, 1005, 995, 3150, 1513, 2382, 1007, 1888, 3083,
	195, 1008, 1006, 900, 2237, 1524, 3082, 195, 902, 1547,
	1664, 1342, 1889, 1370, 1371, 1887, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 663, 3072, 1683, 1339, 3443,
	1340, 1341, 1732, 1733, 3593, 1724, 1571, 1572, 1738, 1739,
	1766, 3381, 1693, 2239, 1694, 2856, 1696, 1698, 1542, 1682,
	1702, 1704, 1706, 1708, 1710, 3546, 1342, 1001, 1647, 2844,
	1681, 1681, 1005, 995, 2553, 2552, 1339, 1007, 1340, 1341,
	1542, 1008, 1006, 2551, 3444, 2673, 2197, 2036, 1674, 1661,
	1662, 1660, 1768, 1765, 1530, 1796, 3382, 1339, 2906, 1340,
	1341, 1307, 1009, 1752, 1751, 3556, 1542, 1813, 1339, 1342,
	1340, 1341, 1750, 1542, 1817, 1740, 1819, 1820, 1821, 1822,
	1935, 1728, 652, 1826, 2322, 2323, 2324, 1811, 1812, 1936,
	1339, 2335, 1340, 1341, 3135, 1838, 3136, 1878, 1880, 1881,
	165, 1816, 1358, 1734, 2646, 1731, 1342, 177, 1823, 1824,
	1825, 1542, 1342, 1792, 1730, 1729, 1339, 1764, 1340, 1341,
	1653, 1879, 844, 845, 846, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1367, 1366, 1368, 1369, 128, 978, 977, 976,
	1700, 1092, 1091, 1574, 1358, 3408, 2329, 3407, 185, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1367, 1366, 1368, 1369,
	3385, 1339, 1815, 1340, 1341, 663, 663, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1367, 1366, 1368, 1369, 663, 1362,
	1363, 1364, 1365, 1367, 1366, 1368, 1369, 195, 1837, 1836,
	3554, 1542, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 3384, 1339, 1342, 1340, 1341, 184, 186,
	187, 188, 3383, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1344, 42, 1754, 3306, 42, 1360, 1361, 1362, 1363, 1364,
	1365, 1367, 1366, 1368, 1369, 663, 3290, 1913, 1913, 1342,
	3289, 1339, 3200, 1340, 1341, 1385, 1342, 1339, 1551, 1340,
	1341, 1342, 3066, 652, 2535, 652, 663, 2213, 2212, 1884,
	1342, 3198, 1385, 1933, 1342, 3147, 1891, 1934, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1508, 110, 2211, 2210, 1507, 1753, 663, 663, 3488,
	1542, 101, 2036, 109, 1552, 108, 2033, 1509, 2209, 2208,
	2384, 1997, 102, 1383, 103, 2035, 1506, 1892, 1882, 1342,
	1338, 1542, 2479, 3571, 1542, 1911, 1911, 3080, 1914, 839,
	1931, 101, 3065, 3486, 1542, 3401, 1342, 2915, 103, 2029,
	3484, 1542, 102, 2912, 1342, 3360, 1542, 2044, 3533, 1542,
	1339, 2847, 1340, 1341, 3358, 1542, 1342, 1993, 3355, 1542,
	1338, 1542, 1342, 2846, 2058, 2562, 1342, 1542, 103, 1844,
	1845, 1885, 2549, 1542, 1342, 1505, 85, 1861, 2259, 85,
	2258, 1543, 2065, 2095, 1339, 2041, 1340, 1341, 2479, 3471,
	195, 1339, 1555, 1340, 1341, 663, 1339, 1542, 1340, 1341,
	1342, 1510, 2077, 3341, 1542, 1339, 1840, 1340, 1341, 1339,
	1890, 1340, 1341, 2479, 3451, 2089, 2479, 3447, 3337, 195,
	3009, 1542, 663, 2082, 1806, 2083, 2032, 1542, 3002, 1542,
	3336, 1342, 195, 3434, 1542, 3294, 663, 1917, 1763, 2044,
	195, 3547, 195, 1342, 195, 195, 2999, 1542, 1924, 1926,
	2997, 1542, 2043, 1755, 1339, 1745, 1340, 1341, 1554, 663,
	3119, 3398, 3314, 1542, 2046, 2047, 1941, 1942, 1943, 1944,
	2151, 1339, 1741, 1340, 1341, 2479, 3302, 2041, 1342, 1339,
	1955, 1340, 1341, 1737, 2962, 1542, 2123, 3119, 1542, 2344,
	1736, 1339, 1735, 1340, 1341, 2479, 3117, 1339, 2042, 1340,
	1341, 1339, 1553, 1340, 1341, 2337, 104, 105, 1135, 1339,
	110, 1340, 1341, 2237, 1542, 2336, 663, 2198, 1342, 2088,
	3293, 109, 3127, 108, 3038, 1542, 104, 105, 3396, 2045,
	2395, 1542, 2048, 2049, 2589, 1339, 2567, 1340, 1341, 2837,
	2836, 2834, 2835, 663, 2043, 2160, 2161, 2162, 2163, 663,
	2832, 2833, 2832, 2831, 2524, 2155, 2150, 2156, 2157, 2158,
	2159, 3033, 2343, 916, 2127, 109, 1339, 2146, 1340, 1341,
	2145, 2064, 2524, 2166, 2167, 2168, 2169, 2076, 1339, 1338,
	1340, 1341, 2503, 1542, 2316, 2611, 2087, 1643, 2592, 2475,
	2110, 1542, 2585, 2586, 2479, 2478, 663, 2340, 1542, 2090,
	2149, 663, 3332, 2180, 103, 663, 663, 2226, 1916, 1542,
	1643, 1642, 2108, 1339, 2502, 1340, 1341, 2525, 3035, 2186,
	1342, 949, 2133, 2132, 950, 2131, 2799, 2527, 1342, 1586,
	1585, 2148, 2147, 1342, 1338, 2525, 2316, 1342, 2495, 3439,
	1979, 2769, 1342, 195, 2495, 2316, 3412, 1991, 2479, 2196,
	195, 2223, 3033, 1339, 2503, 1340, 1341, 2002, 2994, 195,
	195, 2238, 2340, 195, 2834, 195, 2742, 2134, 1358, 2503,
	2340, 195, 2395, 2181, 2177, 2371, 2170, 2172, 2173, 2370,
	2237, 195, 2220, 2199, 2231, 2103, 2195, 2234, 195, 2235,
	2207, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1366,
	1368, 1369, 1003, 1546, 2251, 3298, 2229, 2230, 2181, 2233,
	2503, 1004, 2945, 1542, 195, 2067, 3033, 2450, 1542, 2237,
	2252, 1681, 3102, 663, 1916, 2066, 2448, 1542, 1862, 1846,
	2255, 2002, 1786, 1573, 2256, 2257, 1971, 1960, 1961, 1962,
	1963, 1973, 1964, 1965, 1966, 1978, 1974, 1967, 1968, 1975,
	1976, 1977, 1969, 1970, 1972, 1339, 986, 1340, 1341, 985,
	1342, 3084, 2262, 1339, 95, 1340, 1341, 3514, 1339, 3454,
	1340, 1341, 1339, 905, 1340, 1341, 3325, 1339, 1549, 1340,
	1341, 3291, 2300, 2301, 3212, 3100, 1342, 2303, 2333, 1385,
	3097, 2044, 2338, 3078, 1342, 2341, 2304, 2342, 2957, 2956,
	1645, 1342, 2349, 1884, 2179, 2904, 2351, 2352, 2353, 2326,
	1358, 2328, 3085, 3086, 3087, 2861, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2296, 2290, 2857, 2334,
	1342, 2593, 2386, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1367, 1366, 1368, 1369, 2427, 1542, 2176, 2332, 2171, 2165,
	2327, 95, 2375, 2376, 2377, 2378, 2379, 2164, 2381, 1770,
	1342, 1676, 2383, 1672, 1641, 1342, 2388, 2389, 121, 2390,
	2410, 1542, 2393, 2306, 2394, 2859, 2559, 1342, 2397, 2554,
	1076, 2908, 2401, 3045, 3046, 3053, 2406, 2407, 2408, 2409,
	2314, 3326, 2194, 3416, 2080, 1339, 2043, 1340, 1341, 2420,
	3566, 2423, 2424, 2558, 1842, 1885, 3564, 1342, 3540, 2426,
	2428, 3420, 1342, 2325, 2402, 1542, 2431, 2432, 2433, 2434,
	2435, 1339, 1342, 1340, 1341, 3346, 1342, 2442, 2443, 1339,
	2444, 1340, 1341, 2447, 2449, 2089, 1339, 2451, 1340, 1341,
	195, 1342, 2042, 3048, 3004, 2853, 1550, 2463, 195, 3000,
	3051, 2559, 1913, 2346, 2852, 1358, 2851, 2769, 1354, 663,
	1355, 2972, 1342, 2572, 2291, 1339, 1843, 1340, 1341, 3050,
	663, 1716, 2788, 2787, 1356, 1370, 1371, 1353, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1367, 1366, 1368, 1369, 2462,
	2793, 2968, 2512, 2513, 195, 1339, 2954, 1340, 1341, 195,
	1339, 3327, 1340, 1341, 3088, 2094, 2953, 1712, 2791, 2380,
	2950, 2789, 1339, 2792, 1340, 1341, 2790, 2086, 3182, 673,
	3181, 3039, 1717, 1718, 1719, 2446, 2747, 42, 2759, 2761,
	1911, 2746, 2464, 3380, 2499, 1342, 2517, 2762, 2465, 2519,
	2467, 2480, 1339, 1342, 1340, 1341, 2445, 1339, 3191, 1340,
	1341, 3089, 3090, 3091, 1713, 1714, 1715, 1339, 3026, 1340,
	1341, 1339, 1342, 1340, 1341, 3193, 3025, 663, 3180, 920,
	2518, 1342, 2476, 195, 3029, 2756, 1339, 921, 1340, 1341,
	195, 1342, 2489, 1785, 2830, 1342, 891, 1516, 2452, 2542,
	2563, 1939, 1042, 1041, 663, 1342, 101, 1339, 2923, 1340,
	1341, 663, 2545, 2547, 2584, 1940, 2472, 102, 1342, 2477,
	663, 3031, 2558, 2640, 3578, 1306, 2599, 129, 2522, 2441,
	2492, 2105, 2106, 1342, 103, 110, 1385, 2440, 926, 2538,
	1510, 932, 932, 1342, 2849, 2294, 109, 2608, 108, 195,
	195, 195, 195, 195, 2526, 2283, 2439, 103, 3493, 2529,
	1342, 2354, 3397, 2561, 3321, 2438, 2536, 2829, 2564, 2565,
	2539, 2186, 2516, 195, 195, 2437, 2091, 2282, 2369, 2436,
	1339, 1342, 1340, 1341, 2281, 1342, 2550, 2280, 1339, 2425,
	1340, 1341, 1342, 2279, 2606, 928, 929, 2745, 1342, 195,
	108, 101, 2419, 3011, 2560, 2744, 2320, 1339, 103, 1340,
	1341, 3368, 102, 2568, 109, 2569, 1339, 2418, 1340, 1341,
	663, 3367, 2573, 2574, 2575, 3349, 1339, 2417, 1340, 1341,
	1339, 2605, 1340, 1341, 1664, 2675, 2676, 2677, 2678, 2679,
	1339, 3199, 1340, 1341, 2416, 3197, 1540, 1536, 3196, 2594,
	2595, 3189, 3098, 1339, 2684, 1340, 1341, 2604, 3030, 3028,
	2862, 1537, 2650, 2221, 110, 2415, 1659, 663, 1339, 2414,
	1340, 1341, 927, 110, 3019, 109, 2413, 108, 1339, 3188,
	1340, 1341, 2412, 2629, 109, 1342, 2084, 2085, 1539, 2665,
	1538, 2680, 2632, 2495, 3170, 1339, 3568, 1340, 1341, 3568,
	3567, 2649, 2475, 2687, 2372, 663, 1540, 1536, 2638, 2078,
	1567, 2639, 2648, 663, 1559, 3567, 1339, 3, 1340, 1341,
	1339, 1537, 1340, 1341, 114, 115, 3386, 1339, 1342, 1340,
	1341, 3064, 918, 1339, 1859, 1340, 1341, 10, 1857, 1858,
	2668, 9, 8, 97, 663, 1, 1533, 1534, 1539, 2666,
	1538, 2726, 1089, 2721, 1797, 1309, 1308, 3068, 195, 3503,
	623, 2068, 663, 2723, 1514, 3541, 1342, 3499, 3500, 2411,
	1756, 2508, 2511, 2512, 2513, 2509, 663, 2510, 2514, 1746,
	1385, 2778, 3130, 663, 663, 1385, 195, 195, 195, 195,
	195, 2032, 2003, 2032, 2695, 3322, 2689, 2865, 195, 2796,
	2123, 2766, 2227, 1342, 195, 3096, 195, 1342, 2184, 195,
	195, 195, 2405, 994, 2726, 154, 2143, 2144, 3467, 2749,
	1339, 2781, 1340, 1341, 2775, 907, 2798, 2725, 2123, 2123,
	2123, 2123, 2123, 118, 2750, 2722, 952, 2724, 2772, 117,
	997, 1108, 2222, 2772, 3120, 2543, 2152, 1592, 2123, 1590,
	2404, 2123, 1591, 2737, 1589, 195, 2705, 2706, 2707, 2708,
	2709, 1594, 1593, 1339, 2748, 1340, 1341, 2931, 663, 2373,
	2751, 1385, 2973, 1850, 659, 2515, 663, 2763, 2764, 653,
	192, 195, 2800, 2741, 1581, 2801, 2885, 2403, 1560, 2986,
	909, 2400, 1036, 2783, 2784, 195, 2786, 613, 2838, 2782,
	2794, 1339, 2785, 1340, 1341, 2260, 619, 2802, 1390, 1841,
	2738, 2739, 2740, 2743, 195, 2530, 1796, 195, 947, 908,
	939, 2079, 2466, 2780, 104, 105, 2925, 946, 3299, 2864,
	2777, 2841, 2808, 2840, 2842, 2843, 2839, 3023, 1339, 2755,
	1340, 1341, 1339, 2757, 1340, 1341, 2942, 2943, 2944, 1342,
	2946, 2948, 2482, 1342, 2893, 2760, 2753, 3379, 3190, 3452,
	1342, 2540, 2667, 1556, 2955, 1342, 2892, 2993, 2345, 2959,
	2960, 2961, 2963, 2964, 2965, 2966, 2863, 2884, 2967, 2186,
	2969, 2970, 2971, 2899, 1342, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 1928, 1380, 663, 2120, 3165,
	1877, 682, 2919, 2991, 681, 2918, 2995, 679, 2996, 2998,
	2468, 3001, 3003, 2916, 3005, 3006, 3007, 3008, 2927, 2921,
	2922, 2697, 3014, 2699, 2933, 2934, 195, 2935, 2496, 2926,
	2937, 2936, 2939, 2399, 2941, 1345, 829, 2398, 2456, 2710,
	2711, 2712, 2713, 1568, 2396, 2988, 2507, 2505, 1342, 2392,
	2504, 2292, 2992, 2128, 3047, 3043, 3495, 3036, 3037, 2122,
	2118, 3041, 2474, 780, 779, 1342, 691, 683, 2391, 675,
	778, 777, 3061, 1342, 2891, 3479, 2614, 2905, 1342, 2616,
	2541, 2901, 195, 1323, 1339, 1532, 1340, 1341, 1339, 669,
	1340, 1341, 965, 2928, 3017, 1339, 3403, 1340, 1341, 2319,
	1339, 2951, 1340, 1341, 1343, 1531, 1958, 3012, 3013, 1959,
	3410, 195, 3015, 2873, 3114, 2854, 2590, 2214, 3027, 1339,
	3020, 1340, 1341, 70, 2123, 46, 3374, 3042, 3440, 776,
	3032, 195, 2387, 1398, 195, 195, 195, 773, 3167, 3168,
	3169, 2717, 2718, 3052, 663, 663, 3056, 3057, 3423, 2385,
	3049, 3424, 772, 3054, 3103, 3104, 3425, 2350, 3055, 1986,
	1319, 1316, 2339, 3516, 1852, 96, 2893, 3118, 37, 3062,
	3063, 36, 35, 34, 33, 27, 26, 25, 2892, 3124,
	3125, 24, 23, 1339, 20, 1340, 1341, 3079, 30, 3081,
	22, 663, 663, 663, 663, 21, 19, 18, 3073, 3074,
	1339, 2876, 1340, 1341, 3536, 3577, 123, 55, 1339, 3137,
	1340, 1341, 3141, 1339, 52, 1340, 1341, 2508, 2511, 2512,
	2513, 2509, 50, 2510, 2514, 131, 130, 3045, 3046, 53,
	49, 1079, 47, 32, 31, 17, 16, 15, 14, 3152,
	13, 12, 11, 7, 6, 40, 39, 29, 3126, 38,
	28, 3107, 4, 2577, 3156, 3111, 3112, 3113, 3146, 2216,
	0, 0, 0, 0, 0, 0, 3164, 0, 0, 0,
	0, 0, 0, 0, 3171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3142, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 0, 0, 3185,
	0, 663, 0, 663, 0, 0, 0, 3163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1558, 0, 0,
	0, 2775, 42, 0, 3210, 2775, 3208, 3186, 0, 3206,
	0, 0, 3195, 3194, 2772, 3204, 0, 3202, 0, 0,
	0, 0, 0, 663, 840, 0, 0, 87, 0, 0,
	0, 0, 0, 3300, 1646, 3313, 195, 0, 0, 663,
	3215, 3216, 3218, 0, 3320, 0, 0, 0, 0, 0,
	0, 0, 663, 0, 0, 1911, 0, 3214, 0, 0,
	0, 0, 0, 0, 3330, 3331, 0, 3333, 0, 3334,
	3335, 0, 3304, 3296, 3338, 3339, 3340, 3312, 3342, 3345,
	3295, 3297, 0, 0, 0, 0, 1913, 0, 0, 0,
	3324, 3316, 0, 0, 3354, 3356, 3357, 3359, 3361, 3362,
	3364, 0, 663, 0, 3317, 0, 663, 663, 0, 0,
	904, 0, 87, 3343, 3344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3307, 3308, 3309, 3348, 0, 0,
	0, 904, 0, 0, 0, 663, 0, 0, 3394, 0,
	0, 0, 0, 0, 3350, 3390, 964, 0, 3353, 3372,
	0, 0, 0, 3369, 3370, 0, 0, 3389, 3371, 0,
	0, 0, 0, 0, 1911, 1807, 3347, 0, 0, 0,
	0, 2775, 3387, 0, 0, 0, 0, 3393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3395, 0, 0, 0, 0, 0,
	195, 3154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 3414, 0,
	0, 0, 0, 0, 3419, 0, 0, 0, 0, 3402,
	0, 3406, 0, 0, 3409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3435, 0, 42, 0, 0, 0,
	3436, 3437, 0, 3411, 0, 0, 0, 0, 0, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 663, 3448, 0, 0, 0, 0, 0, 0, 3429,
	0, 0, 3430, 0, 3438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 663, 0, 3473, 3474,
	3450, 0, 0, 0, 0, 3445, 3455, 0, 0, 0,
	3480, 0, 3483, 3485, 3487, 3481, 3466, 663, 3458, 3463,
	0, 3460, 42, 3459, 3457, 3462, 0, 2772, 3461, 3453,
	0, 195, 663, 3324, 3468, 0, 0, 3515, 0, 0,
	0, 0, 3491, 0, 0, 0, 0, 0, 0, 0,
	3512, 3502, 3507, 3494, 0, 0, 0, 0, 0, 0,
	0, 3480, 0, 0, 3521, 0, 3481, 3519, 1872, 1873,
	1874, 1875, 0, 0, 0, 663, 3532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3530, 0, 0,
	0, 3535, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 3550, 3548, 3553, 3555,
	3557, 0, 3378, 1393, 663, 0, 663, 1919, 1920, 0,
	1913, 0, 1922, 0, 932, 932, 1927, 3561, 3565, 3563,
	1932, 3559, 3558, 0, 0, 0, 0, 3480, 0, 3576,
	3573, 0, 3481, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 3587, 3585, 3588, 3589, 1980, 1981, 1982,
	1983, 1984, 1985, 1987, 3579, 1992, 0, 1994, 1995, 1996,
	0, 1998, 1999, 2000, 1913, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 1911, 2030,
	3562, 2037, 2038, 932, 3595, 932, 932, 932, 932, 932,
	3596, 3597, 3344, 0, 0, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 0, 2059, 2060, 2061, 2062, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1911, 0, 3594, 0, 0, 0, 0, 0,
	1517, 0, 932, 0, 3418, 0, 0, 0, 0, 0,
	0, 0, 3428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2140, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 0, 0, 1144, 0, 1144,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 904, 1382, 1387,
	1388, 960, 1391, 0, 1392, 1394, 1395, 1396, 0, 1399,
	1400, 1402, 1402, 0, 1402, 1406, 1406, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 0, 0, 0, 0, 1473, 0, 1475, 1476,
	1477, 1478, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 1406, 1406, 1406, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 151, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 172, 0, 904, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 138, 139, 161, 160, 189, 0, 0, 0, 0,
	0, 2355, 2356, 2357, 2358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1398, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 136, 158, 143, 135, 0,
	156, 157, 0, 0, 0, 0, 0, 173, 0, 2537,
	0, 0, 0, 0, 0, 0, 179, 144, 0, 0,
	0, 0, 169, 0, 0, 170, 0, 0, 0, 0,
	0, 147, 145, 140, 141, 142, 146, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 1144, 189, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 1086, 190, 0, 1088, 1090, 0, 0, 0,
	0, 0, 0, 0, 2583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 1315, 0, 0, 0,
	173, 162, 0, 0, 0, 0, 0, 150, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1668,
	161, 160, 189, 0, 642, 0, 0, 1144, 1144, 0,
	662, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 87, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 2645, 0, 0, 0, 0, 152, 0, 0, 153,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 2669, 2670, 0, 0, 2672, 0, 0,
	2674, 155, 1669, 158, 0, 1666, 0, 156, 157, 165,
	0, 0, 0, 0, 173, 0, 177, 0, 0, 0,
	2681, 2682, 2683, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 0, 0, 2690, 2691, 2692, 0, 0,
	0, 2693, 2694, 0, 0, 2006, 2696, 0, 0, 2698,
	0, 0, 2700, 2701, 2702, 2703, 0, 185, 0, 0,
	2704, 2006, 2006, 2006, 2006, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 932,
	0, 0, 0, 0, 0, 0, 2727, 2728, 2729, 2730,
	2731, 2732, 0, 0, 0, 2733, 2734, 0, 2735, 0,
	2736, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 0, 0, 0, 0, 1570, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2767, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 177,
	2797, 0, 0, 0, 0, 0, 2121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2860, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 3534, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 1609, 1771, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 964, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 152, 190, 1818, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 0, 0, 0, 0, 0, 129, 0,
	151, 0, 0, 2949, 0, 0, 165, 0, 0, 0,
	0, 172, 0, 177, 0, 0, 0, 2958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	170, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	1668, 161, 160, 189, 0, 0, 0, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	0, 2321, 0, 0, 662, 1302, 662, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 662, 3099, 0, 0,
	0, 0, 155, 1669, 158, 0, 1666, 0, 156, 157,
	2331, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 1384, 0, 0, 0, 0,
	3123, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 0, 1632,
	1633, 1635, 1636, 1634, 1637, 1638, 1611, 1612, 1613, 1614,
	1595, 1596, 1624, 0, 1598, 0, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 0, 0, 1608, 1615, 1616,
	1617, 1618, 0, 1619, 1620, 1621, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 3143, 0, 3144, 0, 0,
	3145, 0, 0, 3148, 3149, 0, 0, 0, 0, 0,
	0, 0, 3153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 3172, 0, 2429, 3173, 0, 3174,
	3175, 0, 3176, 0, 3177, 0, 0, 0, 164, 3178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 2461, 0,
	0, 0, 0, 0, 3203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3211, 904, 0, 3213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3217, 0, 661, 0, 0, 0, 0, 2500, 2501, 0,
	0, 0, 0, 0, 0, 0, 2121, 0, 3292, 904,
	2520, 0, 0, 0, 1625, 0, 0, 0, 662, 662,
	2107, 0, 0, 159, 86, 44, 45, 88, 2111, 0,
	2114, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 956, 92, 963, 0, 0, 48, 77,
	78, 0, 75, 79, 662, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 1649,
	63, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 1675, 0, 0, 165, 3377, 0,
	0, 0, 1684, 2597, 177, 1384, 1686, 0, 0, 1689,
	1690, 662, 662, 0, 662, 0, 662, 662, 0, 662,
	662, 662, 662, 662, 662, 0, 0, 0, 0, 0,
	0, 0, 1384, 1721, 1722, 1384, 662, 1384, 0, 1727,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 662, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 2271, 0,
	51, 54, 57, 56, 59, 0, 74, 2288, 2289, 83,
	80, 2293, 0, 0, 662, 0, 0, 0, 0, 2297,
	0, 0, 3417, 0, 60, 0, 0, 0, 0, 2299,
	0, 0, 0, 62, 91, 90, 2302, 0, 72, 73,
	58, 0, 0, 0, 0, 3431, 81, 82, 3432, 0,
	3433, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 2305, 0, 0, 0, 0, 2714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 65,
	0, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2776, 3513, 87, 0, 0, 2121, 2121,
	2121, 2121, 2121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 2121, 0, 0, 3527, 0, 3528, 0, 3529, 0,
	0, 0, 0, 0, 662, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 2882, 0, 0, 0, 0,
	0, 0, 0, 0, 3574, 2890, 3575, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 0, 0, 1921, 0, 662, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 1610, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 0, 1146, 1146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2521, 1314, 1623,
	1626, 1627, 1628, 1629, 1630, 1631, 662, 1632, 1633, 1635,
	1636, 1634, 1637, 1638, 1611, 1612, 1613, 1614, 1595, 1596,
	1624, 0, 1598, 0, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 0, 0, 1608, 1615, 1616, 1617, 1618,
	0, 1619, 1620, 1621, 1622, 0, 0, 0, 0, 71,
	0, 0, 0, 61, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2121, 662, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 3060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2619, 2620, 2621,
	2622, 2623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 2633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 2204, 2205, 2206, 0, 0, 2641, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 662, 1684,
	0, 0, 1684, 0, 1684, 0, 0, 0, 0, 0,
	2236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 0,
	662, 0, 0, 0, 662, 662, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3179, 0, 3183, 3184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	2776, 0, 87, 0, 2776, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 1692, 0, 1692, 0, 1692, 1692,
	0, 1701, 1692, 1692, 1692, 1692, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 193, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2850, 0, 603, 0, 0, 1384, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 0, 0, 1146, 0, 0, 2888,
	0, 0, 0, 0, 0, 0, 0, 933, 933, 0,
	0, 0, 0, 2900, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2776, 0, 2917, 0, 0, 2920, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3016, 0, 87, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 1146, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3449, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 3077,
	0, 0, 0, 0, 0, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3092,
	0, 0, 3093, 3094, 3095, 842, 662, 1923, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 1956, 1957,
	662, 0, 0, 0, 1684, 1684, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 2607, 0, 3531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1146, 0,
	0, 0, 0, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	1146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 603, 0, 603, 0, 0,
	603, 603, 0, 0, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	963, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 0, 0, 1384,
	0, 603, 662, 662, 1384, 0, 95, 0, 0, 842,
	0, 0, 0, 830, 843, 844, 845, 846, 831, 0,
	0, 832, 833, 0, 834, 0, 0, 956, 0, 1386,
	0, 0, 1907, 0, 0, 0, 1907, 1907, 839, 847,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2894, 2895, 662, 0, 0,
	1384, 0, 0, 0, 0, 662, 0, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 0,
	0, 0, 0, 0, 0, 0, 2924, 0, 0, 0,
	0, 0, 0, 0, 2308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3415, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	2896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3236, 3238, 3237, 3255, 3256, 3257, 3258, 3259,
	3260, 3261, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 1146, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 2897, 2898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 0, 796, 0, 0, 800, 0,
	797, 798, 0, 0, 0, 799, 0, 0, 0, 0,
	0, 0, 0, 662, 662, 0, 1386, 0, 0, 1386,
	0, 1386, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2469, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 2484, 0, 0, 0, 0, 0, 603, 0, 0,
	662, 662, 662, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 3242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3250, 3251, 603, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	1828, 603, 603, 603, 603, 603, 603, 603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 0, 709, 800, 711, 797, 798, 0, 707, 710,
	799, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 2591, 0, 0, 1384, 0, 0, 0, 0,
	662, 2596, 662, 0, 0, 0, 728, 729, 3235, 3239,
	3240, 3241, 3252, 3253, 3254, 3262, 3264, 761, 3263, 3265,
	3266, 3267, 3270, 3271, 3272, 3273, 3268, 3269, 3274, 3219,
	3223, 3220, 3221, 3222, 3234, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 3231, 3232, 3233, 3275, 3276, 3277, 3278, 3279,
	3280, 3245, 3249, 3248, 3246, 3247, 3243, 3244, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 0,
	801, 0, 802, 0, 0, 806, 0, 0, 662, 808,
	807, 0, 809, 775, 774, 0, 0, 803, 804, 0,
	805, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 662, 662, 0, 1907, 0,
	0, 0, 0, 0, 0, 3281, 3282, 3283, 3284, 3285,
	3286, 3287, 3288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 1386, 0,
	0, 0, 0, 0, 0, 0, 2715, 0, 0, 0,
	933, 933, 0, 0, 1146, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 2779, 1692, 0, 0, 0, 933,
	1795, 933, 933, 933, 933, 933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 914, 0, 0, 0, 0, 0, 1384, 956,
	662, 0, 0, 0, 0, 603, 0, 2093, 0, 0,
	0, 0, 1795, 603, 0, 603, 0, 603, 2130, 0,
	0, 0, 0, 0, 662, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 842, 0,
	0, 662, 830, 843, 844, 845, 846, 831, 0, 0,
	832, 833, 0, 834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 847, 848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 2987, 0,
	0, 0, 0, 0, 2894, 2895, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 662, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 2896,
	0, 0, 603, 603, 0, 0, 603, 0, 2295, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 2093, 842, 0, 2036,
	0, 0, 843, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 1912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2897, 2898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3131, 3132, 3133, 3134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1386, 0, 1795, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3207, 0, 3209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 603, 2093, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	3315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3365, 0, 0, 0, 3365, 3365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 2576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 603, 603, 603, 603, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 603, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	3442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1146, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 0, 2987, 0, 3497, 1386, 603,
	603, 603, 603, 603, 0, 0, 0, 0, 0, 0,
	0, 2795, 0, 0, 0, 0, 0, 1743, 0, 603,
	0, 0, 603, 2803, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 603, 603, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 1280, 1265, 506, 0, 1208, 1283, 1177,
	1196, 1293, 1199, 1202, 1244, 1156, 1222, 406, 1193, 1149,
	1181, 1151, 1188, 1152, 1179, 1210, 264, 1176, 1267, 1226,
	1282, 357, 261, 1158, 1182, 420, 1198, 202, 1246, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 1289, 361, 1232, 0, 485, 391, 0,
	0, 0, 1212, 1271, 1220, 1258, 1207, 1245, 1166, 1231,
	1284, 1194, 1241, 1285, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 1743, 0, 3469, 652, 0, 0, 0,
	0, 3470, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 603, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 1190, 1238, 1279, 1191, 1240, 259, 314,
	266, 258, 511, 1290, 1270, 1155, 1219, 1278, 0, 0,
	225, 1281, 1214, 0, 1243, 0, 1296, 1150, 1234, 0,
	1153, 1157, 1292, 1274, 1185, 269, 0, 0, 0, 0,
	0, 0, 0, 1211, 1221, 1255, 1259, 1205, 0, 0,
	0, 0, 1386, 0, 0, 1183, 0, 1230, 0, 0,
	0, 1162, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 0,
	1165, 0, 1184, 1256, 1743, 1148, 291, 1159, 392, 251,
	0, 442, 1263, 1273, 1206, 553, 1277, 1204, 1203, 1250,
	1163, 1269, 1197, 356, 1161, 323, 197, 221, 0, 1195,
	402, 450, 462, 1268, 1180, 1189, 249, 1187, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 1229, 1248,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	1160, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 1175, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 1264, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	1253, 1295, 415, 461, 236, 533, 484, 1298, 1299, 1300,
	1301, 1170, 1174, 1168, 1235, 1169, 1224, 1225, 1171, 1286,
	1287, 1288, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 1257, 1164, 0, 1172, 1173, 1266, 1275, 1276, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 1228,
	196, 217, 359, 1291, 443, 282, 576, 543, 538, 203,
	219, 1167, 256, 1178, 1186, 0, 1192, 1200, 1201, 1213,
	1215, 1216, 1217, 1218, 1236, 1237, 1239, 1247, 1249, 1252,
	1254, 1261, 1272, 1294, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 1227, 1297, 1233, 372, 275, 298, 313, 1242,
	542, 490, 223, 455, 284, 247, 1260, 1262, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 1223, 1251, 367, 507, 508, 309, 387, 0,
	0, 0, 1280, 1265, 506, 0, 1208, 1283, 1177, 1196,
	1293, 1199, 1202, 1244, 1156, 1222, 406, 1193, 1149, 1181,
	1151, 1188, 1152, 1179, 1210, 264, 1176, 1267, 1226, 1282,
	357, 261, 1158, 1182, 420, 1198, 202, 1246, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 1289, 361, 1232, 0, 485, 391, 0, 0,
	0, 1212, 1271, 1220, 1258, 1207, 1245, 1166, 1231, 1284,
	1194, 1241, 1285, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 1190, 1238, 1279, 1191, 1240, 259, 314, 266,
	258, 511, 1290, 1270, 1155, 1219, 1278, 0, 0, 225,
	1281, 1214, 0, 1243, 0, 1296, 1150, 1234, 0, 1153,
	1157, 1292, 1274, 1185, 269, 0, 0, 0, 0, 0,
	0, 0, 1211, 1221, 1255, 1259, 1205, 0, 0, 0,
	0, 0, 2804, 0, 1183, 0, 1230, 0, 0, 0,
	1162, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1209, 0, 0, 0, 0, 1165,
	0, 1184, 1256, 0, 1148, 291, 1159, 392, 251, 0,
	442, 1263, 1273, 1206, 553, 1277, 1204, 1203, 1250, 1163,
	1269, 1197, 356, 1161, 323, 197, 221, 0, 1195, 402,
	450, 462, 1268, 1180, 1189, 249, 1187, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 1229, 1248, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 578, 224, 547, 216, 1160,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 1175, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 1264, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 1253,
	1295, 415, 461, 236, 533, 484, 1298, 1299, 1300, 1301,
	1170, 1174, 1168, 1235, 1169, 1224, 1225, 1171, 1286, 1287,
	1288, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	1257, 1164, 0, 1172, 1173, 1266, 1275, 1276, 598, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 1228, 196,
	217, 359, 1291, 443, 282, 576, 543, 538, 203, 219,
	1167, 256, 1178, 1186, 0, 1192, 1200, 1201, 1213, 1215,
	1216, 1217, 1218, 1236, 1237, 1239, 1247, 1249, 1252, 1254,
	1261, 1272, 1294, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 573, 574, 293, 527, 557, 525, 572, 551, 428,
	369, 1227, 1297, 1233, 372, 275, 298, 313, 1242, 542,
	490, 223, 455, 284, 247, 1260, 1262, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 1223, 1251, 367, 507, 508, 309, 387, 0, 0,
	0, 1280, 1265, 506, 0, 1208, 1283, 1177, 1196, 1293,
	1199, 1202, 1244, 1156, 1222, 406, 1193, 1149, 1181, 1151,
	1188, 1152, 1179, 1210, 264, 1176, 1267, 1226, 1282, 357,
	261, 1158, 1182, 420, 1198, 202, 1246, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 1289, 361, 1232, 0, 485, 391, 0, 0, 0,
	1212, 1271, 1220, 1258, 1207, 1245, 1166, 1231, 1284, 1194,
	1241, 1285, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 1190, 1238, 1279, 1191, 1240, 259, 314, 266, 258,
	511, 1290, 1270, 1155, 1219, 1278, 0, 0, 225, 1281,
	1214, 0, 1243, 0, 1296, 1150, 1234, 0, 1153, 1157,
	1292, 1274, 1185, 269, 0, 0, 0, 0, 0, 0,
	0, 1211, 1221, 1255, 1259, 1205, 0, 0, 0, 0,
	0, 2765, 0, 1183, 0, 1230, 0, 0, 0, 1162,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 0, 0, 0, 0, 1165, 0,
	1184, 1256, 0, 1148, 291, 1159, 392, 251, 0, 442,
	1263, 1273, 1206, 553, 1277, 1204, 1203, 1250, 1163, 1269,
	1197, 356, 1161, 323, 197, 221, 0, 1195, 402, 450,
	462, 1268, 1180, 1189, 249, 1187, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 1229, 1248, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	575, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 570, 209, 495, 526, 235,
	472, 0, 0, 577, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 578, 224, 547, 216, 1160, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 579,
	230, 231, 233, 1175, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 1264, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 571, 569,
	566, 567, 568, 397, 304, 483, 326, 364, 1253, 1295,
	415, 461, 236, 533, 484, 1298, 1299, 1300, 1301, 1170,
	1174, 1168, 1235, 1169, 1224, 1225, 1171, 1286, 1287, 1288,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 1257,
	1164, 0, 1172, 1173, 1266, 1275, 1276, 598, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 1228, 196, 217,
	359, 1291, 443, 282, 576, 543, 538, 203, 219, 1167,
	256, 1178, 1186, 0, 1192, 1200, 1201, 1213, 1215, 1216,
	1217, 1218, 1236, 1237, 1239, 1247, 1249, 1252, 1254, 1261,
	1272, 1294, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	573, 574, 293, 527, 557, 525, 572, 551, 428, 369,
	1227, 1297, 1233, 372, 275, 298, 313, 1242, 542, 490,
	223, 455, 284, 247, 1260, 1262, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	1223, 1251, 367, 507, 508, 309, 387, 0, 0, 0,
	1280, 1265, 506, 0, 1208, 1283, 1177, 1196, 1293, 1199,
	1202, 1244, 1156, 1222, 406, 1193, 1149, 1181, 1151, 1188,
	1152, 1179, 1210, 264, 1176, 1267, 1226, 1282, 357, 261,
	1158, 1182, 420, 1198, 202, 1246, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	1289, 361, 1232, 0, 485, 391, 0, 0, 0, 1212,
	1271, 1220, 1258, 1207, 1245, 1166, 1231, 1284, 1194, 1241,
	1285, 316, 244, 318, 201, 403, 486, 280, 0, 0,
	0, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	1190, 1238, 1279, 1191, 1240, 259, 314, 266, 258, 511,
	1290, 1270, 1155, 1219, 1278, 0, 0, 225, 1281, 1214,
	0, 1243, 0, 1296, 1150, 1234, 0, 1153, 1157, 1292,
	1274, 1185, 269, 0, 0, 0, 0, 0, 0, 0,
	1211, 1221, 1255, 1259, 1205, 0, 0, 0, 0, 0,
	2109, 0, 1183, 0, 1230, 0, 0, 0, 1162, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 0, 0, 0, 0, 1165, 0, 1184,
	1256, 0, 1148, 291, 1159, 392, 251, 0, 442, 1263,
	1273, 1206, 553, 1277, 1204, 1203, 1250, 1163, 1269, 1197,
	356, 1161, 323, 197, 221, 0, 1195, 402, 450, 462,
	1268, 1180, 1189, 249, 1187, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 1229, 1248, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 1160, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 1175, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 1264, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 1253, 1295, 415,
	461, 236, 533, 484, 1298, 1299, 1300, 1301, 1170, 1174,
	1168, 1235, 1169, 1224, 1225, 1171, 1286, 1287, 1288, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 1257, 1164,
	0, 1172, 1173, 1266, 1275, 1276, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 1228, 196, 217, 359,
	1291, 443, 282, 576, 543, 538, 203, 219, 1167, 256,
	1178, 1186, 0, 1192, 1200, 1201, 1213, 1215, 1216, 1217,
	1218, 1236, 1237, 1239, 1247, 1249, 1252, 1254, 1261, 1272,
	1294, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 1227,
	1297, 1233, 372, 275, 298, 313, 1242, 542, 490, 223,
	455, 284, 247, 1260, 1262, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 1223,
	1251, 367, 507, 508, 309, 387, 0, 0, 0, 1280,
	1265, 506, 0, 1208, 1283, 1177, 1196, 1293, 1199, 1202,
	1244, 1156, 1222, 406, 1193, 1149, 1181, 1151, 1188, 1152,
	1179, 1210, 264, 1176, 1267, 1226, 1282, 357, 261, 1158,
	1182, 420, 1198, 202, 1246, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 1289,
	361, 1232, 0, 485, 391, 0, 0, 0, 1212, 1271,
	1220, 1258, 1207, 1245, 1166, 1231, 1284, 1194, 1241, 1285,
	316, 244, 318, 201, 403, 486, 280, 0, 95, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 1190,
	1238, 1279, 1191, 1240, 259, 314, 266, 258, 511, 1290,
	1270, 1155, 1219, 1278, 0, 0, 225, 1281, 1214, 0,
	1243, 0, 1296, 1150, 1234, 0, 1153, 1157, 1292, 1274,
	1185, 269, 0, 0, 0, 0, 0, 0, 0, 1211,
	1221, 1255, 1259, 1205, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 1230, 0, 0, 0, 1162, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 0, 0, 0, 0, 1165, 0, 1184, 1256,
	0, 1148, 291, 1159, 392, 251, 0, 442, 1263, 1273,
	1206, 553, 1277, 1204, 1203, 1250, 1163, 1269, 1197, 356,
	1161, 323, 197, 221, 0, 1195, 402, 450, 462, 1268,
	1180, 1189, 249, 1187, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 1229, 1248, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 575, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 570, 209, 495, 526, 235, 472, 0,
	0, 577, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 578, 224, 547, 216, 1160, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 579, 230, 231,
	233, 1175, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 1264, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 571, 569, 566, 567,
	568, 397, 304, 483, 326, 364, 1253, 1295, 415, 461,
	236, 533, 484, 1298, 1299, 1300, 1301, 1170, 1174, 1168,
	1235, 1169, 1224, 1225, 1171, 1286, 1287, 1288, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 0, 1257, 1164, 0,
	1172, 1173, 1266, 1275, 1276, 598, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 1228, 196, 217, 359, 1291,
	443, 282, 576, 543, 538, 203, 219, 1167, 256, 1178,
	1186, 0, 1192, 1200, 1201, 1213, 1215, 1216, 1217, 1218,
	1236, 1237, 1239, 1247, 1249, 1252, 1254, 1261, 1272, 1294,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 573, 574,
	293, 527, 557, 525, 572, 551, 428, 369, 1227, 1297,
	1233, 372, 275, 298, 313, 1242, 542, 490, 223, 455,
	284, 247, 1260, 1262, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 1223, 1251,
	367, 507, 508, 309, 387, 0, 0, 0, 1280, 1265,
	506, 0, 1208, 1283, 1177, 1196, 1293, 1199, 1202, 1244,
	1156, 1222, 406, 1193, 1149, 1181, 1151, 1188, 1152, 1179,
	1210, 264, 1176, 1267, 1226, 1282, 357, 261, 1158, 1182,
	420, 1198, 202, 1246, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 1289, 361,
	1232, 0, 485, 391, 0, 0, 0, 1212, 1271, 1220,
	1258, 1207, 1245, 1166, 1231, 1284, 1194, 1241, 1285, 316,
	244, 318, 201, 403, 486, 280, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 1190, 1238,
	1279, 1191, 1240, 259, 314, 266, 258, 511, 1290, 1270,
	1155, 1219, 1278, 0, 0, 225, 1281, 1214, 0, 1243,
	0, 1296, 1150, 1234, 0, 1153, 1157, 1292, 1274, 1185,
	269, 0, 0, 0, 0, 0, 0, 0, 1211, 1221,
	1255, 1259, 1205, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 1230, 0, 0, 0, 1162, 1154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 0, 0, 0, 0, 1165, 0, 1184, 1256, 0,
	1148, 291, 1159, 392, 251, 0, 442, 1263, 1273, 1206,
	553, 1277, 1204, 1203, 1250, 1163, 1269, 1197, 356, 1161,
	323, 197, 221, 0, 1195, 402, 450, 462, 1268, 1180,
	1189, 249, 1187, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 1229, 1248, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 578, 224, 547, 216, 1160, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	1175, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 1264, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 1253, 1295, 415, 461, 236,
	533, 484, 1298, 1299, 1300, 1301, 1170, 1174, 1168, 1235,
	1169, 1224, 1225, 1171, 1286, 1287, 1288, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 1257, 1164, 0, 1172,
	1173, 1266, 1275, 1276, 598, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 1228, 196, 217, 359, 1291, 443,
	282, 576, 543, 538, 203, 219, 1167, 256, 1178, 1186,
	0, 1192, 1200, 1201, 1213, 1215, 1216, 1217, 1218, 1236,
	1237, 1239, 1247, 1249, 1252, 1254, 1261, 1272, 1294, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 573, 574, 293,
	527, 557, 525, 572, 551, 428, 369, 1227, 1297, 1233,
	372, 275, 298, 313, 1242, 542, 490, 223, 455, 284,
	247, 1260, 1262, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 1223, 1251, 367,
	507, 508, 309, 387, 0, 0, 0, 1280, 1265, 506,
	0, 1208, 1283, 1177, 1196, 1293, 1199, 1202, 1244, 1156,
	1222, 406, 1193, 1149, 1181, 1151, 1188, 1152, 1179, 1210,
	264, 1176, 1267, 1226, 1282, 357, 261, 1158, 1182, 420,
	1198, 202, 1246, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 1289, 361, 1232,
	0, 485, 391, 0, 0, 0, 1212, 1271, 1220, 1258,
	1207, 1245, 1166, 1231, 1284, 1194, 1241, 1285, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 1190, 1238, 1279,
	1191, 1240, 259, 314, 266, 258, 511, 1290, 1270, 1155,
	1219, 1278, 0, 0, 225, 1281, 1214, 0, 1243, 0,
	1296, 1150, 1234, 0, 1153, 1157, 1292, 1274, 1185, 269,
	0, 0, 0, 0, 0, 0, 0, 1211, 1221, 1255,
	1259, 1205, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 1230, 0, 0, 0, 1162, 1154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1209,
	0, 0, 0, 0, 1165, 0, 1184, 1256, 0, 1148,
	291, 1159, 392, 251, 0, 442, 1263, 1273, 1206, 553,
	1277, 1204, 1203, 1250, 1163, 1269, 1197, 356, 1161, 323,
	197, 221, 0, 1195, 402, 450, 462, 1268, 1180, 1189,
	249, 1187, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 1229, 1248, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	578, 224, 547, 216, 1160, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 1175,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 1264, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 1253, 1295, 415, 461, 236, 533,
	484, 1298, 1299, 1300, 1301, 1170, 1174, 1168, 1235, 1169,
	1224, 1225, 1171, 1286, 1287, 1288, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 1257, 1164, 0, 1172, 1173,
	1266, 1275, 1276, 598, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 1228, 196, 217, 359, 1291, 443, 282,
	576, 543, 538, 203, 219, 1167, 256, 1178, 1186, 0,
	1192, 1200, 1201, 1213, 1215, 1216, 1217, 1218, 1236, 1237,
	1239, 1247, 1249, 1252, 1254, 1261, 1272, 1294, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 573, 574, 293, 527,
	557, 525, 572, 551, 428, 369, 1227, 1297, 1233, 372,
	275, 298, 313, 1242, 542, 490, 223, 455, 284, 247,
	1260, 1262, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 1223, 1251, 367, 507,
	508, 309, 387, 0, 0, 0, 1280, 1265, 506, 0,
	1208, 1283, 1177, 1196, 1293, 1199, 1202, 1244, 1156, 1222,
	406, 1193, 1149, 1181, 1151, 1188, 1152, 1179, 1210, 264,
	1176, 1267, 1226, 1282, 357, 261, 1158, 1182, 420, 1198,
	202, 1246, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 1289, 361, 1232, 0,
	485, 391, 0, 0, 0, 1212, 1271, 1220, 1258, 1207,
	1245, 1166, 1231, 1284, 1194, 1241, 1285, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 1190, 1238, 1279, 1191,
	1240, 259, 314, 266, 258, 511, 1290, 1270, 1155, 1219,
	1278, 0, 0, 225, 1281, 1214, 0, 1243, 0, 1296,
	1150, 1234, 0, 1153, 1157, 1292, 1274, 1185, 269, 0,
	0, 0, 0, 0, 0, 0, 1211, 1221, 1255, 1259,
	1205, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	1230, 0, 0, 0, 1162, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 0,
	0, 0, 0, 1165, 0, 1184, 1256, 0, 1148, 291,
	1159, 392, 251, 0, 442, 1263, 1273, 1206, 553, 1277,
	1204, 1203, 1250, 1163, 1269, 1197, 356, 1161, 323, 197,
	221, 0, 1195, 402, 450, 462, 1268, 1180, 1189, 249,
	1187, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 1229, 1248, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 1160, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 1175, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 1264, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 1253, 1295, 415, 461, 236, 533, 484,
	1298, 1299, 1300, 1301, 1170, 1174, 1168, 1235, 1169, 1224,
	1225, 1171, 1286, 1287, 1288, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 1257, 1164, 0, 1172, 1173, 1266,
	1275, 1276, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 1228, 196, 217, 359, 1291, 443, 282, 576,
	543, 538, 203, 219, 1167, 256, 1178, 1186, 0, 1192,
	1200, 1201, 1213, 1215, 1216, 1217, 1218, 1236, 1237, 1239,
	1247, 1249, 1252, 1254, 1261, 1272, 1294, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 1227, 1297, 1233, 372, 275,
	298, 313, 1242, 542, 490, 223, 455, 284, 247, 1260,
	1262, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 1223, 1251, 367, 507, 508,
	309, 387, 0, 0, 0, 0, 0, 506, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 692, 0, 0, 0, 264, 697,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 704, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 700, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 95, 0, 0, 842, 826, 792,
	793, 830, 843, 844, 845, 846, 831, 0, 234, 832,
	833, 241, 834, 0, 791, 732, 734, 733, 751, 752,
	753, 754, 755, 756, 757, 730, 839, 847, 848, 0,
	259, 314, 266, 258, 511, 0, 0, 1988, 1989, 1990,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	674, 689, 0, 703, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 0, 0, 0, 0, 786,
	0, 688, 0, 0, 696, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 785, 0, 0, 553, 0, 0,
	783, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 836, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 837, 838, 250, 578, 738,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 746, 747, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 796, 784, 709, 800, 711, 797, 798,
	706, 707, 710, 799, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 787, 695, 694, 0, 702, 0, 728,
	729, 731, 735, 736, 737, 748, 749, 750, 758, 760,
	761, 759, 762, 763, 764, 767, 768, 769, 770, 765,
	766, 771, 712, 716, 713, 714, 715, 727, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 810, 811,
	812, 813, 814, 815, 741, 745, 744, 742, 743, 739,
	740, 693, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 801, 256, 802, 0, 0, 806, 0,
	0, 0, 808, 807, 0, 809, 775, 774, 0, 0,
	803, 804, 0, 805, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 816, 817,
	818, 819, 820, 821, 822, 823, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 841, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 387, 0, 367, 507, 508, 309,
	506, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 692, 0, 0,
	0, 264, 697, 0, 0, 0, 357, 261, 0, 0,
	420, 0, 202, 0, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 704, 361,
	0, 0, 485, 391, 0, 0, 0, 0, 0, 700,
	701, 0, 0, 0, 0, 0, 0, 2138, 0, 316,
	244, 318, 201, 403, 486, 280, 0, 95, 0, 0,
	842, 826, 792, 793, 830, 843, 844, 845, 846, 831,
	0, 234, 832, 833, 241, 834, 0, 791, 732, 734,
	733, 751, 752, 753, 754, 755, 756, 757, 730, 839,
	847, 848, 2139, 259, 314, 266, 258, 511, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 674, 689, 0, 703, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 0, 0,
	0, 0, 786, 0, 688, 0, 0, 696, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 392, 251, 0, 442, 785, 0, 0,
	553, 0, 0, 783, 0, 0, 0, 0, 356, 0,
	323, 197, 221, 0, 0, 402, 450, 462, 0, 0,
	0, 836, 0, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 0, 0, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 837, 838,
	250, 578, 738, 547, 216, 0, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 746, 747, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	0, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 796, 784, 709, 800,
	711, 797, 798, 706, 707, 710, 799, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 787, 695, 694, 0,
	702, 0, 728, 729, 731, 735, 736, 737, 748, 749,
	750, 758, 760, 761, 759, 762, 763, 764, 767, 768,
	769, 770, 765, 766, 771, 712, 716, 713, 714, 715,
	727, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 810, 811, 812, 813, 814, 815, 741, 745, 744,
	742, 743, 739, 740, 693, 196, 217, 359, 0, 443,
	282, 576, 543, 538, 203, 219, 801, 256, 802, 0,
	0, 806, 0, 0, 0, 808, 807, 0, 809, 775,
	774, 0, 0, 803, 804, 0, 805, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 816, 817, 818, 819, 820, 821, 822, 823, 293,
	527, 557, 525, 572, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 841, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 0, 387, 367,
	507, 508, 309, 86, 506, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 692, 0, 0, 0, 264, 697, 0, 0, 0,
	357, 261, 0, 0, 420, 0, 202, 0, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 704, 361, 0, 0, 485, 391, 0, 0,
	0, 0, 0, 700, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 244, 318, 201, 403, 486, 280,
	0, 95, 0, 0, 842, 826, 792, 793, 830, 843,
	844, 845, 846, 831, 0, 234, 832, 833, 241, 834,
	0, 791, 732, 734, 733, 751, 752, 753, 754, 755,
	756, 757, 730, 839, 847, 848, 0, 259, 314, 266,
	258, 511, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 674, 689, 0,
	703, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 687, 0, 0, 0, 0, 786, 0, 688, 0,
	0, 696, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 392, 251, 0,
	442, 785, 0, 0, 553, 0, 0, 783, 0, 0,
	0, 0, 356, 0, 323, 197, 221, 0, 0, 402,
	450, 462, 0, 0, 0, 836, 0, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 0, 0, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 837, 838, 250, 578, 738, 547, 216, 0,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 746, 747, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 0, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	796, 784, 709, 800, 711, 797, 798, 706, 707, 710,
	799, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	787, 695, 694, 0, 702, 0, 728, 729, 731, 735,
	736, 737, 748, 749, 750, 758, 760, 761, 759, 762,
	763, 764, 767, 768, 769, 770, 765, 766, 771, 712,
	716, 713, 714, 715, 727, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 810, 811, 812, 813, 814,
	815, 741, 745, 744, 742, 743, 739, 740, 693, 196,
	217, 359, 94, 443, 282, 576, 543, 538, 203, 219,
	801, 256, 802, 0, 0, 806, 0, 0, 0, 808,
	807, 0, 809, 775, 774, 0, 0, 803, 804, 0,
	805, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 816, 817, 818, 819, 820,
	821, 822, 823, 293, 527, 557, 525, 572, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 841, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 692, 0, 0, 0, 264, 697,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 704, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 700, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 95, 0, 0, 842, 826, 792,
	793, 830, 843, 844, 845, 846, 831, 0, 234, 832,
	833, 241, 834, 0, 791, 732, 734, 733, 751, 752,
	753, 754, 755, 756, 757, 730, 839, 847, 848, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	674, 689, 0, 703, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 0, 0, 0, 0, 786,
	0, 688, 0, 0, 696, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 785, 0, 0, 553, 0, 0,
	783, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 836, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	3456, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 837, 838, 250, 578, 738,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 746, 747, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 796, 784, 709, 800, 711, 797, 798,
	706, 707, 710, 799, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 787, 695, 694, 0, 702, 0, 728,
	729, 731, 735, 736, 737, 748, 749, 750, 758, 760,
	761, 759, 762, 763, 764, 767, 768, 769, 770, 765,
	766, 771, 712, 716, 713, 714, 715, 727, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 810, 811,
	812, 813, 814, 815, 741, 745, 744, 742, 743, 739,
	740, 693, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 801, 256, 802, 0, 0, 806, 0,
	0, 0, 808, 807, 0, 809, 775, 774, 0, 0,
	803, 804, 0, 805, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 816, 817,
	818, 819, 820, 821, 822, 823, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 841, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 387, 0, 367, 507, 508, 309,
	506, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 692, 0, 0,
	0, 264, 697, 0, 0, 0, 357, 261, 0, 0,
	420, 0, 202, 0, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 704, 361,
	0, 0, 485, 391, 0, 0, 0, 0, 0, 700,
	701, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	244, 318, 201, 403, 486, 280, 0, 95, 0, 1542,
	842, 826, 792, 793, 830, 843, 844, 845, 846, 831,
	0, 234, 832, 833, 241, 834, 0, 791, 732, 734,
	733, 751, 752, 753, 754, 755, 756, 757, 730, 839,
	847, 848, 0, 259, 314, 266, 258, 511, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 674, 689, 0, 703, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 0, 0,
	0, 0, 786, 0, 688, 0, 0, 696, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 392, 251, 0, 442, 785, 0, 0,
	553, 0, 0, 783, 0, 0, 0, 0, 356, 0,
	323, 197, 221, 0, 0, 402, 450, 462, 0, 0,
	0, 836, 0, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 0, 0, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 837, 838,
	250, 578, 738, 547, 216, 0, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 746, 747, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	0, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 796, 784, 709, 800,
	711, 797, 798, 706, 707, 710, 799, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 787, 695, 694, 0,
	702, 0, 728, 729, 731, 735, 736, 737, 748, 749,
	750, 758, 760, 761, 759, 762, 763, 764, 767, 768,
	769, 770, 765, 766, 771, 712, 716, 713, 714, 715,
	727, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 810, 811, 812, 813, 814, 815, 741, 745, 744,
	742, 743, 739, 740, 693, 196, 217, 359, 0, 443,
	282, 576, 543, 538, 203, 219, 801, 256, 802, 0,
	0, 806, 0, 0, 0, 808, 807, 0, 809, 775,
	774, 0, 0, 803, 804, 0, 805, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 816, 817, 818, 819, 820, 821, 822, 823, 293,
	527, 557, 525, 572, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 841, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	692, 0, 0, 0, 264, 697, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 704, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 700, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	95, 0, 0, 842, 826, 792, 793, 830, 843, 844,
	845, 846, 831, 0, 234, 832, 833, 241, 834, 0,
	791, 732, 734, 733, 751, 752, 753, 754, 755, 756,
	757, 730, 839, 847, 848, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 674, 689, 0, 703,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 931, 0, 0, 0, 786, 0, 688, 0, 0,
	696, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	785, 0, 0, 553, 0, 0, 783, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 836, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	575, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 570, 209, 495, 526, 235,
	472, 0, 0, 577, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 837, 838, 250, 578, 738, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	746, 747, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 579,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 571, 569,
	566, 567, 568, 397, 304, 483, 326, 364, 0, 0,
	415, 461, 236, 533, 484, 0, 0, 0, 0, 796,
	784, 709, 800, 711, 797, 798, 706, 707, 710, 799,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 787,
	695, 694, 0, 702, 0, 728, 729, 731, 735, 736,
	737, 748, 749, 750, 758, 760, 761, 759, 762, 763,
	764, 767, 768, 769, 770, 765, 766, 771, 712, 716,
	713, 714, 715, 727, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 810, 811, 812, 813, 814, 815,
	741, 745, 744, 742, 743, 739, 740, 693, 196, 217,
	359, 0, 443, 282, 576, 543, 538, 203, 219, 801,
	256, 802, 0, 0, 806, 0, 0, 0, 808, 807,
	0, 809, 775, 774, 0, 0, 803, 804, 0, 805,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 816, 817, 818, 819, 820, 821,
	822, 823, 293, 527, 557, 525, 572, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 841, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	387, 0, 367, 507, 508, 309, 506, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 692, 0, 0, 0, 264, 697, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 704, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 700, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 95, 0, 0, 842, 826, 792, 793,
	830, 843, 844, 845, 846, 831, 0, 234, 832, 833,
	241, 834, 0, 791, 732, 734, 733, 751, 752, 753,
	754, 755, 756, 757, 730, 839, 847, 848, 0, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 674,
	689, 0, 703, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 0, 0, 0, 0, 786, 0,
	688, 0, 0, 696, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 785, 0, 0, 553, 0, 0, 783,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 836, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 575, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 570, 209,
	495, 526, 235, 472, 0, 0, 577, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 837, 838, 250, 578, 738, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 746, 747, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 579, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 571, 569, 566, 567, 568, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 796, 784, 709, 800, 711, 797, 798, 706,
	707, 710, 799, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 0, 787, 695, 694, 0, 702, 0, 728, 729,
	731, 735, 736, 737, 748, 749, 750, 758, 760, 761,
	759, 762, 763, 764, 767, 768, 769, 770, 765, 766,
	771, 712, 716, 713, 714, 715, 727, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 810, 811, 812,
	813, 814, 815, 741, 745, 744, 742, 743, 739, 740,
	693, 196, 217, 359, 0, 443, 282, 576, 543, 538,
	203, 219, 801, 256, 802, 0, 0, 806, 0, 0,
	0, 808, 807, 0, 809, 775, 774, 0, 0, 803,
	804, 0, 805, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 816, 817, 818,
	819, 820, 821, 822, 823, 293, 527, 557, 525, 572,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 841, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 692, 0, 0, 0,
	264, 697, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 704, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 700, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 95, 0, 0, 842,
	826, 792, 793, 830, 843, 844, 845, 846, 831, 0,
	234, 832, 833, 241, 834, 0, 791, 732, 734, 733,
	751, 752, 753, 754, 755, 756, 757, 730, 839, 847,
	848, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 0, 703, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 687, 0, 0, 0,
	0, 786, 0, 688, 0, 0, 696, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 785, 0, 0, 553,
	0, 0, 783, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	836, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 837, 838, 250,
	578, 738, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 746, 747, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 0, 0, 415, 461, 236, 533,
	484, 0, 0, 0, 0, 796, 784, 709, 800, 711,
	797, 798, 706, 707, 710, 799, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 787, 695, 694, 0, 702,
	0, 728, 729, 731, 735, 736, 737, 748, 749, 750,
	758, 760, 761, 759, 762, 763, 764, 767, 768, 769,
	770, 765, 766, 771, 712, 716, 713, 714, 715, 727,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	810, 811, 812, 813, 814, 815, 741, 745, 744, 742,
	743, 739, 740, 693, 196, 217, 359, 0, 443, 282,
	576, 543, 538, 203, 219, 801, 256, 802, 0, 0,
	806, 0, 0, 0, 808, 807, 0, 809, 775, 774,
	0, 0, 803, 804, 0, 805, 0, 0, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	816, 817, 818, 819, 820, 821, 822, 823, 293, 527,
	557, 525, 572, 551, 428, 369, 0, 0, 0, 372,
	275, 298, 313, 0, 542, 490, 223, 455, 284, 247,
	841, 0, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 387, 0, 367, 507,
	508, 309, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1367, 1366, 1368, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 1001, 553, 0, 0, 0, 0,
	0, 998, 999, 356, 959, 323, 197, 221, 992, 996,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 387, 0, 367, 507, 508, 309, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 1505, 826,
	0, 0, 1502, 0, 0, 0, 0, 1500, 0, 234,
	1501, 1499, 241, 1504, 0, 791, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 576,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 0, 387, 367, 507, 508,
	309, 86, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 95,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	94, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 2125, 0, 0, 2124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 1561,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 1563, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 1565, 652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 1339, 0, 1340, 1341, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 0, 387, 367, 507, 508, 309, 86, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 95, 0, 1542, 0,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	578, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 0, 0, 415, 461, 236, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 0, 196, 217, 359, 94, 443, 282,
	576, 543, 538, 203, 219, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 573, 574, 293, 527,
	557, 525, 572, 551, 428, 369, 0, 0, 0, 372,
	275, 298, 313, 0, 542, 490, 223, 455, 284, 247,
	0, 0, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 387, 0, 367, 507,
	508, 309, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 95,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 2125, 0, 0, 2124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 2075, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 1744, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 2073,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 387, 0, 367, 507, 508, 309, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 356, 959, 323, 197,
	221, 957, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 576,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 2075, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 1744, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 575, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 570, 209, 495, 526, 235, 472, 0,
	0, 577, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 578, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 579, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 571, 569, 566, 567,
	568, 397, 304, 483, 326, 364, 0, 0, 415, 461,
	236, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 0, 196, 217, 359, 0,
	443, 282, 576, 543, 538, 203, 219, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 573, 574,
	293, 527, 557, 525, 572, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 0, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 387, 0,
	367, 507, 508, 309, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	357, 261, 0, 0, 420, 0, 202, 0, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 0, 361, 0, 0, 485, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 1542, 0, 652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 0, 0, 0, 0, 0, 259, 314, 266,
	258, 511, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 392, 251, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 3366, 0,
	0, 0, 356, 0, 323, 197, 221, 0, 0, 402,
	450, 462, 0, 0, 0, 249, 0, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 0, 0, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 578, 224, 547, 216, 0,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 0, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 576, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 573, 574, 293, 527, 557, 525, 572, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 1908, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 578, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 375, 474, 530, 328, 340, 343, 333, 352,
	0, 353, 329, 330, 335, 337, 338, 339, 344, 345,
	349, 355, 245, 207, 381, 389, 509, 305, 212, 213,
	214, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 286, 539, 302, 457, 456, 324, 325, 370,
	439, 0, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 294, 295,
	434, 435, 307, 308, 573, 574, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 0, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 387, 0, 367, 507, 508, 309,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 357, 261, 0, 0,
	420, 0, 202, 0, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 0, 361,
	0, 0, 485, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	244, 318, 201, 403, 486, 280, 0, 0, 0, 0,
	2485, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 0, 0,
	0, 0, 0, 259, 314, 266, 258, 511, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 392, 251, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	323, 197, 221, 0, 0, 402, 450, 462, 0, 0,
	0, 249, 0, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 0, 0, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 578, 224, 547, 216, 0, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	0, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 576, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 573, 574, 293,
	527, 557, 525, 572, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 652, 0, 0, 0, 0, 2470,
	0, 0, 0, 0, 234, 0, 0, 241, 2471, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	575, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 570, 209, 495, 526, 235,
	472, 0, 0, 577, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 578, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 579,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 571, 569,
	566, 567, 568, 397, 304, 483, 326, 364, 0, 0,
	415, 461, 236, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 0, 196, 217,
	359, 0, 443, 282, 576, 543, 538, 203, 219, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	573, 574, 293, 527, 557, 525, 572, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 0, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	387, 0, 367, 507, 508, 309, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 1584, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 0, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 0, 0, 0, 1583, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 0, 0, 0, 0, 0, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 249, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 575, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 570, 209,
	495, 526, 235, 472, 0, 0, 577, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 578, 224, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 579, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 571, 569, 566, 567, 568, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 576, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 573, 574, 293, 527, 557, 525, 572,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	654, 655, 656, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	578, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 0, 0, 415, 461, 236, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 0, 196, 217, 359, 0, 443, 282,
	576, 543, 538, 203, 219, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 573, 574, 293, 527,
	557, 525, 572, 551, 428, 369, 0, 0, 0, 372,
	275, 298, 313, 0, 542, 490, 223, 455, 284, 247,
	0, 0, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 387, 0, 367, 507,
	508, 309, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 3490, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 1744, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 387, 0, 367, 507, 508, 309, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 3366, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 576,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 95, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 575, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 570, 209, 495, 526, 235, 472, 0,
	0, 577, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 578, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 579, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 571, 569, 566, 567,
	568, 397, 304, 483, 326, 364, 0, 0, 415, 461,
	236, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 0, 196, 217, 359, 0,
	443, 282, 576, 543, 538, 203, 219, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 573, 574,
	293, 527, 557, 525, 572, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 0, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 387, 0,
	367, 507, 508, 309, 506, 0, 0, 0, 0, 2126,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	357, 261, 0, 0, 420, 0, 202, 0, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 0, 361, 0, 0, 485, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 0, 0, 0, 0, 0, 259, 314, 266,
	258, 511, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 392, 251, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 356, 0, 323, 197, 221, 0, 0, 402,
	450, 462, 0, 0, 0, 249, 0, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 0, 0, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 578, 224, 547, 216, 0,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 0, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 576, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 573, 574, 293, 527, 557, 525, 572, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 1565, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 578, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 375, 474, 530, 328, 340, 343, 333, 352,
	0, 353, 329, 330, 335, 337, 338, 339, 344, 345,
	349, 355, 245, 207, 381, 389, 509, 305, 212, 213,
	214, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 286, 539, 302, 457, 456, 324, 325, 370,
	439, 0, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 294, 295,
	434, 435, 307, 308, 573, 574, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 0, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 387, 0, 367, 507, 508, 309,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 357, 261, 0, 0,
	420, 0, 202, 0, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 0, 361,
	0, 0, 485, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	244, 318, 201, 403, 486, 280, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 0, 0,
	0, 0, 0, 259, 314, 266, 258, 511, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 392, 251, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	323, 197, 221, 0, 0, 402, 450, 462, 0, 0,
	0, 249, 0, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 0, 0, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 578, 224, 547, 216, 0, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	0, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 1863, 443,
	282, 576, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 573, 574, 293,
	527, 557, 525, 572, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 1854, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	575, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 570, 209, 495, 526, 235,
	472, 0, 0, 577, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 578, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 579,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 571, 569,
	566, 567, 568, 397, 304, 483, 326, 364, 0, 0,
	415, 461, 236, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 0, 196, 217,
	359, 0, 443, 282, 576, 543, 538, 203, 219, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	573, 574, 293, 527, 557, 525, 572, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 0, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	387, 0, 367, 507, 508, 309, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	1711, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 0, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 0, 0, 0, 0, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 0, 0, 0, 0, 0, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 249, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 575, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 570, 209,
	495, 526, 235, 472, 0, 0, 577, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 578, 224, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 579, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 571, 569, 566, 567, 568, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 576, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 573, 574, 293, 527, 557, 525, 572,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 1709, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	578, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 0, 0, 415, 461, 236, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 0, 196, 217, 359, 0, 443, 282,
	576, 543, 538, 203, 219, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 573, 574, 293, 527,
	557, 525, 572, 551, 428, 369, 0, 0, 0, 372,
	275, 298, 313, 0, 542, 490, 223, 455, 284, 247,
	0, 0, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 387, 0, 367, 507,
	508, 309, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 1707, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 1705,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 387, 0, 367, 507, 508, 309, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 1703, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 576,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 399,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 1699, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 575, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 570, 209, 495, 526, 235, 472, 0,
	0, 577, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 578, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 579, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 571, 569, 566, 567,
	568, 397, 304, 483, 326, 364, 0, 0, 415, 461,
	236, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 0, 196, 217, 359, 0,
	443, 282, 576, 543, 538, 203, 219, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 573, 574,
	293, 527, 557, 525, 572, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 0, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 387, 0,
	367, 507, 508, 309, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 1697, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	357, 261, 0, 0, 420, 0, 202, 0, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 0, 361, 0, 0, 485, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 0, 0, 0, 0, 0, 259, 314, 266,
	258, 511, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 392, 251, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 356, 0, 323, 197, 221, 0, 0, 402,
	450, 462, 0, 0, 0, 249, 0, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 0, 0, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 578, 224, 547, 216, 0,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 0, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 576, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 573, 574, 293, 527, 557, 525, 572, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 1695, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 578, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 375, 474, 530, 328, 340, 343, 333, 352,
	0, 353, 329, 330, 335, 337, 338, 339, 344, 345,
	349, 355, 245, 207, 381, 389, 509, 305, 212, 213,
	214, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 286, 539, 302, 457, 456, 324, 325, 370,
	439, 0, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 294, 295,
	434, 435, 307, 308, 573, 574, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 0, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 387, 0, 367, 507, 508, 309,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 357, 261, 0, 0,
	420, 0, 202, 0, 475, 248, 368, 365, 514, 276,
	267, 263, 246, 310, 376, 418, 496, 412, 0, 361,
	0, 0, 485, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	244, 318, 201, 403, 486, 280, 0, 1670, 0, 0,
	0, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 342, 351,
	350, 331, 332, 334, 336, 341, 348, 354, 0, 0,
	0, 0, 0, 259, 314, 266, 258, 511, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 392, 251, 0, 442, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	323, 197, 221, 0, 0, 402, 450, 462, 0, 0,
	0, 249, 0, 460, 416, 531, 229, 278, 447, 422,
	458, 430, 281, 0, 0, 459, 363, 516, 440, 528,
	554, 555, 257, 396, 540, 500, 548, 575, 222, 254,
	410, 493, 534, 482, 388, 512, 513, 322, 481, 289,
	200, 360, 560, 220, 468, 362, 238, 227, 518, 537,
	283, 445, 570, 209, 495, 526, 235, 472, 0, 0,
	577, 243, 492, 211, 523, 491, 384, 319, 320, 210,
	0, 446, 262, 287, 0, 0, 252, 405, 520, 521,
	250, 578, 224, 547, 216, 0, 546, 398, 515, 524,
	385, 374, 215, 522, 383, 373, 327, 346, 347, 274,
	300, 437, 366, 438, 299, 301, 394, 393, 395, 204,
	535, 0, 205, 0, 487, 536, 579, 230, 231, 233,
	0, 273, 277, 285, 288, 296, 297, 306, 358, 409,
	436, 432, 441, 0, 510, 529, 541, 552, 558, 559,
	561, 562, 563, 564, 565, 571, 569, 566, 567, 568,
	397, 304, 483, 326, 364, 0, 0, 415, 461, 236,
	533, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 375, 474, 530, 328, 340,
	343, 333, 352, 0, 353, 329, 330, 335, 337, 338,
	339, 344, 345, 349, 355, 245, 207, 381, 389, 509,
	305, 212, 213, 214, 502, 503, 504, 505, 544, 545,
	549, 451, 452, 453, 454, 286, 539, 302, 457, 456,
	324, 325, 370, 439, 0, 196, 217, 359, 0, 443,
	282, 576, 543, 538, 203, 219, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 206, 218, 228, 232, 239, 255, 270, 272, 279,
	292, 303, 311, 312, 315, 321, 371, 377, 378, 379,
	380, 399, 400, 401, 404, 407, 408, 411, 413, 414,
	417, 421, 425, 426, 427, 429, 431, 433, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 517, 519, 532, 550, 556,
	469, 294, 295, 434, 435, 307, 308, 573, 574, 293,
	527, 557, 525, 572, 551, 428, 369, 0, 0, 0,
	372, 275, 298, 313, 0, 542, 490, 223, 455, 284,
	247, 0, 0, 208, 242, 226, 253, 268, 271, 317,
	382, 390, 419, 424, 290, 265, 240, 448, 237, 473,
	497, 498, 499, 501, 386, 260, 423, 387, 0, 367,
	507, 508, 309, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 0, 1569, 264, 0, 0, 0, 0, 357,
	261, 0, 0, 420, 0, 202, 0, 475, 248, 368,
	365, 514, 276, 267, 263, 246, 310, 376, 418, 496,
	412, 0, 361, 0, 0, 485, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 244, 318, 201, 403, 486, 280, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 342, 351, 350, 331, 332, 334, 336, 341, 348,
	354, 0, 0, 0, 0, 0, 259, 314, 266, 258,
	511, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 392, 251, 0, 442,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 323, 197, 221, 0, 0, 402, 450,
	462, 0, 0, 0, 249, 0, 460, 416, 531, 229,
	278, 447, 422, 458, 430, 281, 0, 0, 459, 363,
	516, 440, 528, 554, 555, 257, 396, 540, 500, 548,
	575, 222, 254, 410, 493, 534, 482, 388, 512, 513,
	322, 481, 289, 200, 360, 560, 220, 468, 362, 238,
	227, 518, 537, 283, 445, 570, 209, 495, 526, 235,
	472, 0, 0, 577, 243, 492, 211, 523, 491, 384,
	319, 320, 210, 0, 446, 262, 287, 0, 0, 252,
	405, 520, 521, 250, 578, 224, 547, 216, 0, 546,
	398, 515, 524, 385, 374, 215, 522, 383, 373, 327,
	346, 347, 274, 300, 437, 366, 438, 299, 301, 394,
	393, 395, 204, 535, 0, 205, 0, 487, 536, 579,
	230, 231, 233, 0, 273, 277, 285, 288, 296, 297,
	306, 358, 409, 436, 432, 441, 0, 510, 529, 541,
	552, 558, 559, 561, 562, 563, 564, 565, 571, 569,
	566, 567, 568, 397, 304, 483, 326, 364, 0, 0,
	415, 461, 236, 533, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 375, 474,
	530, 328, 340, 343, 333, 352, 0, 353, 329, 330,
	335, 337, 338, 339, 344, 345, 349, 355, 245, 207,
	381, 389, 509, 305, 212, 213, 214, 502, 503, 504,
	505, 544, 545, 549, 451, 452, 453, 454, 286, 539,
	302, 457, 456, 324, 325, 370, 439, 0, 196, 217,
	359, 0, 443, 282, 576, 543, 538, 203, 219, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 206, 218, 228, 232, 239, 255,
	270, 272, 279, 292, 303, 311, 312, 315, 321, 371,
	377, 378, 379, 380, 399, 400, 401, 404, 407, 408,
	411, 413, 414, 417, 421, 425, 426, 427, 429, 431,
	433, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 517, 519,
	532, 550, 556, 469, 294, 295, 434, 435, 307, 308,
	573, 574, 293, 527, 557, 525, 572, 551, 428, 369,
	0, 0, 0, 372, 275, 298, 313, 0, 542, 490,
	223, 455, 284, 247, 0, 0, 208, 242, 226, 253,
	268, 271, 317, 382, 390, 419, 424, 290, 265, 240,
	448, 237, 473, 497, 498, 499, 501, 386, 260, 423,
	387, 0, 367, 507, 508, 309, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 357, 261, 0, 0, 420, 0, 202, 0,
	475, 248, 368, 365, 514, 276, 267, 263, 246, 310,
	376, 418, 496, 412, 0, 361, 0, 0, 485, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 244, 318, 201, 403,
	486, 280, 0, 95, 0, 0, 0, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 342, 351, 350, 331, 332, 334,
	336, 341, 348, 354, 0, 0, 0, 0, 0, 259,
	314, 266, 258, 511, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 392,
	251, 0, 442, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 323, 197, 221, 0,
	0, 402, 450, 462, 0, 0, 0, 249, 0, 460,
	416, 531, 229, 278, 447, 422, 458, 430, 281, 0,
	0, 459, 363, 516, 440, 528, 554, 555, 257, 396,
	540, 500, 548, 575, 222, 254, 410, 493, 534, 482,
	388, 512, 513, 322, 481, 289, 200, 360, 560, 220,
	468, 362, 238, 227, 518, 537, 283, 445, 570, 209,
	495, 526, 235, 472, 0, 0, 577, 243, 492, 211,
	523, 491, 384, 319, 320, 210, 0, 446, 262, 287,
	0, 0, 252, 405, 520, 521, 250, 578, 224, 547,
	216, 0, 546, 398, 515, 524, 385, 374, 215, 522,
	383, 373, 327, 346, 347, 274, 300, 437, 366, 438,
	299, 301, 394, 393, 395, 204, 535, 0, 205, 0,
	487, 536, 579, 230, 231, 233, 0, 273, 277, 285,
	288, 296, 297, 306, 358, 409, 436, 432, 441, 0,
	510, 529, 541, 552, 558, 559, 561, 562, 563, 564,
	565, 571, 569, 566, 567, 568, 397, 304, 483, 326,
	364, 0, 0, 415, 461, 236, 533, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 375, 474, 530, 328, 340, 343, 333, 352, 0,
	353, 329, 330, 335, 337, 338, 339, 344, 345, 349,
	355, 245, 207, 381, 389, 509, 305, 212, 213, 214,
	502, 503, 504, 505, 544, 545, 549, 451, 452, 453,
	454, 286, 539, 302, 457, 456, 324, 325, 370, 439,
	0, 196, 217, 359, 0, 443, 282, 576, 543, 538,
	203, 219, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 206, 218, 228,
	232, 239, 255, 270, 272, 279, 292, 303, 311, 312,
	315, 321, 371, 377, 378, 379, 380, 399, 400, 401,
	404, 407, 408, 411, 413, 414, 417, 421, 425, 426,
	427, 429, 431, 433, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 517, 519, 532, 550, 556, 469, 294, 295, 434,
	435, 307, 308, 573, 574, 293, 527, 557, 525, 572,
	551, 428, 369, 0, 0, 0, 372, 275, 298, 313,
	0, 542, 490, 223, 455, 284, 247, 0, 0, 208,
	242, 226, 253, 268, 271, 317, 382, 390, 419, 424,
	290, 265, 240, 448, 237, 473, 497, 498, 499, 501,
	386, 260, 423, 387, 0, 367, 507, 508, 309, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 357, 261, 0, 0, 420,
	0, 202, 0, 475, 248, 368, 365, 514, 276, 267,
	263, 246, 310, 376, 418, 496, 412, 0, 361, 0,
	0, 485, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 244,
	318, 201, 403, 486, 280, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 342, 351, 350,
	331, 332, 334, 336, 341, 348, 354, 0, 0, 0,
	0, 0, 259, 314, 266, 258, 511, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1318, 0,
	291, 0, 392, 251, 0, 442, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 323,
	197, 221, 0, 0, 402, 450, 462, 0, 0, 0,
	249, 0, 460, 416, 531, 229, 278, 447, 422, 458,
	430, 281, 0, 0, 459, 363, 516, 440, 528, 554,
	555, 257, 396, 540, 500, 548, 575, 222, 254, 410,
	493, 534, 482, 388, 512, 513, 322, 481, 289, 200,
	360, 560, 220, 468, 362, 238, 227, 518, 537, 283,
	445, 570, 209, 495, 526, 235, 472, 0, 0, 577,
	243, 492, 211, 523, 491, 384, 319, 320, 210, 0,
	446, 262, 287, 0, 0, 252, 405, 520, 521, 250,
	578, 224, 547, 216, 0, 546, 398, 515, 524, 385,
	374, 215, 522, 383, 373, 327, 346, 347, 274, 300,
	437, 366, 438, 299, 301, 394, 393, 395, 204, 535,
	0, 205, 0, 487, 536, 579, 230, 231, 233, 0,
	273, 277, 285, 288, 296, 297, 306, 358, 409, 436,
	432, 441, 0, 510, 529, 541, 552, 558, 559, 561,
	562, 563, 564, 565, 571, 569, 566, 567, 568, 397,
	304, 483, 326, 364, 0, 0, 415, 461, 236, 533,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 375, 474, 530, 328, 340, 343,
	333, 352, 0, 353, 329, 330, 335, 337, 338, 339,
	344, 345, 349, 355, 245, 207, 381, 389, 509, 305,
	212, 213, 214, 502, 503, 504, 505, 544, 545, 549,
	451, 452, 453, 454, 286, 539, 302, 457, 456, 324,
	325, 370, 439, 0, 196, 217, 359, 0, 443, 282,
	576, 543, 538, 203, 219, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	206, 218, 228, 232, 239, 255, 270, 272, 279, 292,
	303, 311, 312, 315, 321, 371, 377, 378, 379, 380,
	399, 400, 401, 404, 407, 408, 411, 413, 414, 417,
	421, 425, 426, 427, 429, 431, 433, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 517, 519, 532, 550, 556, 469,
	294, 295, 434, 435, 307, 308, 573, 574, 1317, 527,
	557, 525, 572, 551, 428, 369, 0, 0, 0, 372,
	275, 298, 313, 0, 542, 490, 223, 455, 284, 247,
	0, 0, 208, 242, 226, 253, 268, 271, 317, 382,
	390, 419, 424, 290, 265, 240, 448, 237, 473, 497,
	498, 499, 501, 386, 260, 423, 387, 0, 367, 507,
	508, 309, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 357, 261,
	0, 0, 420, 0, 202, 0, 475, 248, 368, 365,
	514, 276, 267, 263, 246, 310, 376, 418, 496, 412,
	0, 361, 0, 0, 485, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 244, 318, 201, 403, 486, 280, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	342, 351, 350, 331, 332, 334, 336, 341, 348, 354,
	0, 0, 0, 0, 0, 259, 314, 266, 258, 511,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 392, 251, 0, 442, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 323, 197, 221, 0, 0, 402, 450, 462,
	0, 0, 0, 249, 0, 460, 416, 531, 229, 278,
	447, 422, 458, 430, 281, 0, 0, 459, 363, 516,
	440, 528, 554, 555, 257, 396, 540, 500, 548, 575,
	222, 254, 410, 493, 534, 482, 388, 512, 513, 322,
	481, 289, 200, 360, 560, 220, 468, 362, 238, 227,
	518, 537, 283, 445, 570, 209, 495, 526, 235, 472,
	0, 0, 577, 243, 492, 211, 523, 491, 384, 319,
	320, 210, 0, 446, 262, 287, 0, 0, 252, 405,
	520, 521, 250, 578, 224, 547, 216, 0, 546, 398,
	515, 524, 385, 374, 215, 522, 383, 373, 327, 346,
	347, 274, 300, 437, 366, 438, 299, 301, 394, 393,
	395, 204, 535, 0, 205, 0, 487, 536, 579, 230,
	231, 233, 0, 273, 277, 285, 288, 296, 297, 306,
	358, 409, 436, 432, 441, 0, 510, 529, 541, 552,
	558, 559, 561, 562, 563, 564, 565, 571, 569, 566,
	567, 568, 397, 304, 483, 326, 364, 0, 0, 415,
	461, 236, 533, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 375, 474, 530,
	328, 340, 343, 333, 352, 0, 353, 329, 330, 335,
	337, 338, 339, 344, 345, 349, 355, 245, 207, 381,
	389, 509, 305, 212, 213, 214, 502, 503, 504, 505,
	544, 545, 549, 451, 452, 453, 454, 286, 539, 302,
	457, 456, 324, 325, 370, 439, 0, 196, 217, 359,
	0, 443, 282, 576, 543, 538, 203, 219, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 912, 0, 0,
	0, 198, 199, 206, 218, 228, 232, 239, 255, 270,
	272, 279, 292, 303, 311, 312, 315, 321, 371, 377,
	378, 379, 380, 399, 400, 401, 404, 407, 408, 411,
	413, 414, 417, 421, 425, 426, 427, 429, 431, 433,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 517, 519, 532,
	550, 556, 469, 294, 295, 434, 435, 307, 308, 573,
	574, 293, 527, 557, 525, 572, 551, 428, 369, 0,
	0, 0, 372, 275, 298, 313, 0, 542, 490, 223,
	455, 284, 247, 0, 0, 208, 242, 226, 253, 268,
	271, 317, 382, 390, 419, 424, 290, 265, 240, 448,
	237, 473, 497, 498, 499, 501, 386, 260, 423, 387,
	0, 367, 507, 508, 309, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 357, 261, 0, 0, 420, 0, 202, 0, 475,
	248, 368, 365, 514, 276, 267, 263, 246, 310, 376,
	418, 496, 412, 0, 361, 0, 0, 485, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 244, 318, 201, 403, 486,
	280, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 342, 351, 350, 331, 332, 334, 336,
	341, 348, 354, 0, 0, 0, 0, 0, 259, 314,
	266, 258, 511, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 392, 251,
	0, 442, 0, 601, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 323, 197, 221, 0, 0,
	402, 450, 462, 0, 0, 0, 249, 0, 460, 416,
	531, 229, 278, 447, 422, 458, 430, 281, 0, 0,
	459, 363, 516, 440, 528, 554, 555, 257, 396, 540,
	500, 548, 575, 222, 254, 410, 493, 534, 482, 388,
	512, 513, 322, 481, 289, 200, 360, 560, 220, 468,
	362, 238, 227, 518, 537, 283, 445, 570, 209, 495,
	526, 235, 472, 0, 0, 577, 243, 492, 211, 523,
	491, 384, 319, 320, 210, 0, 446, 262, 287, 0,
	0, 252, 405, 520, 521, 250, 578, 224, 547, 216,
	0, 546, 398, 515, 524, 385, 374, 215, 522, 383,
	373, 327, 346, 347, 274, 300, 437, 366, 438, 299,
	301, 394, 393, 395, 204, 535, 0, 205, 0, 487,
	536, 579, 230, 231, 233, 0, 273, 277, 285, 288,
	296, 297, 306, 358, 409, 436, 432, 441, 0, 510,
	529, 541, 552, 558, 559, 561, 562, 563, 564, 565,
	571, 569, 566, 567, 568, 397, 304, 483, 326, 364,
	0, 0, 415, 461, 236, 533, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	375, 474, 530, 328, 340, 343, 333, 352, 0, 353,
	329, 330, 335, 337, 338, 339, 344, 345, 349, 355,
	245, 207, 381, 389, 509, 305, 212, 213, 214, 502,
	503, 504, 505, 544, 545, 549, 451, 452, 453, 454,
	286, 539, 302, 457, 456, 324, 325, 370, 439, 0,
	196, 217, 359, 0, 443, 282, 576, 543, 538, 203,
	219, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 206, 218, 228, 232,
	239, 255, 270, 272, 279, 292, 303, 311, 312, 315,
	321, 371, 377, 378, 379, 380, 399, 400, 401, 404,
	407, 408, 411, 413, 414, 417, 421, 425, 426, 427,
	429, 431, 433, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	517, 519, 532, 550, 556, 469, 294, 295, 434, 435,
	307, 308, 573, 574, 293, 527, 557, 525, 572, 551,
	428, 369, 0, 0, 0, 372, 275, 298, 313, 0,
	542, 490, 223, 455, 284, 247, 0, 0, 208, 242,
	226, 253, 268, 271, 317, 382, 390, 419, 424, 290,
	265, 240, 448, 237, 473, 497, 498, 499, 501, 386,
	260, 423, 387, 0, 367, 507, 508, 309, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 357, 261, 0, 0, 420, 0,
	202, 0, 475, 248, 368, 365, 514, 276, 267, 263,
	246, 310, 376, 418, 496, 412, 0, 361, 0, 0,
	485, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 244, 318,
	201, 403, 486, 280, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 342, 351, 350, 331,
	332, 334, 336, 341, 348, 354, 0, 0, 0, 0,
	0, 259, 314, 266, 258, 511, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 392, 251, 0, 442, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 323, 197,
	221, 0, 0, 402, 450, 462, 0, 0, 0, 249,
	0, 460, 416, 531, 229, 278, 447, 422, 458, 430,
	281, 0, 0, 459, 363, 516, 440, 528, 554, 555,
	257, 396, 540, 500, 548, 575, 222, 254, 410, 493,
	534, 482, 388, 512, 513, 322, 481, 289, 200, 360,
	560, 220, 468, 362, 238, 227, 518, 537, 283, 445,
	570, 209, 495, 526, 235, 472, 0, 0, 577, 243,
	492, 211, 523, 491, 384, 319, 320, 210, 0, 446,
	262, 287, 0, 0, 252, 405, 520, 521, 250, 578,
	224, 547, 216, 0, 546, 398, 515, 524, 385, 374,
	215, 522, 383, 373, 327, 346, 347, 274, 300, 437,
	366, 438, 299, 301, 394, 393, 395, 204, 535, 0,
	205, 0, 487, 536, 579, 230, 231, 233, 0, 273,
	277, 285, 288, 296, 297, 306, 358, 409, 436, 432,
	441, 0, 510, 529, 541, 552, 558, 559, 561, 562,
	563, 564, 565, 571, 569, 566, 567, 568, 397, 304,
	483, 326, 364, 0, 0, 415, 461, 236, 533, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 375, 474, 530, 328, 340, 343, 333,
	352, 0, 353, 329, 330, 335, 337, 338, 339, 344,
	345, 349, 355, 245, 207, 381, 389, 509, 305, 212,
	213, 214, 502, 503, 504, 505, 544, 545, 549, 451,
	452, 453, 454, 286, 539, 302, 457, 456, 324, 325,
	370, 439, 0, 196, 217, 359, 0, 443, 282, 576,
	543, 538, 203, 219, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 206,
	218, 228, 232, 239, 255, 270, 272, 279, 292, 303,
	311, 312, 315, 321, 371, 377, 378, 379, 380, 3498,
	400, 401, 404, 407, 408, 411, 413, 414, 417, 421,
	425, 426, 427, 429, 431, 433, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 517, 519, 532, 550, 556, 469, 294,
	295, 434, 435, 307, 308, 573, 574, 293, 527, 557,
	525, 572, 551, 428, 369, 0, 0, 0, 372, 275,
	298, 313, 0, 542, 490, 223, 455, 284, 247, 0,
	0, 208, 242, 226, 253, 268, 271, 317, 382, 390,
	419, 424, 290, 265, 240, 448, 237, 473, 497, 498,
	499, 501, 386, 260, 423, 387, 0, 367, 507, 508,
	309, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 357, 261, 0,
	0, 420, 0, 202, 0, 475, 248, 368, 365, 514,
	276, 267, 263, 246, 310, 376, 418, 496, 412, 0,
	361, 0, 0, 485, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 244, 318, 201, 403, 486, 280, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 342,
	351, 350, 331, 332, 334, 336, 341, 348, 354, 0,
	0, 0, 0, 0, 259, 314, 266, 258, 511, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 392, 251, 0, 442, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 323, 197, 221, 0, 0, 402, 450, 462, 0,
	0, 0, 249, 0, 460, 416, 531, 229, 278, 447,
	422, 458, 430, 281, 0, 0, 459, 363, 516, 440,
	528, 554, 555, 257, 396, 540, 500, 548, 575, 222,
	254, 410, 493, 534, 482, 388, 512, 513, 322, 481,
	289, 200, 360, 560, 220, 468, 362, 238, 227, 518,
	537, 283, 445, 570, 209, 495, 526, 235, 472, 0,
	0, 577, 243, 492, 211, 523, 491, 384, 319, 320,
	210, 0, 446, 262, 287, 0, 0, 252, 405, 520,
	521, 250, 578, 224, 547, 216, 0, 546, 398, 515,
	524, 385, 374, 215, 522, 383, 373, 327, 346, 347,
	274, 300, 437, 366, 438, 299, 301, 394, 393, 395,
	204, 535, 0, 205, 0, 487, 536, 579, 230, 231,
	233, 0, 273, 277, 285, 288, 296, 297, 306, 358,
	409, 436, 432, 441, 0, 510, 529, 541, 552, 558,
	559, 561, 562, 563, 564, 565, 571, 569, 566, 567,
	568, 397, 304, 483, 326, 364, 0, 0, 415, 461,
	236, 533, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 375, 474, 530, 328,
	340, 343, 333, 352, 0, 353, 329, 330, 335, 337,
	338, 339, 344, 345, 349, 355, 245, 207, 381, 389,
	509, 305, 212, 213, 214, 502, 503, 504, 505, 544,
	545, 549, 451, 452, 453, 454, 286, 539, 302, 457,
	456, 324, 325, 370, 439, 0, 196, 217, 359, 0,
	443, 282, 576, 543, 538, 203, 219, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 206, 218, 228, 232, 239, 255, 270, 272,
	279, 292, 303, 311, 312, 315, 321, 371, 377, 378,
	379, 380, 399, 400, 401, 404, 407, 408, 411, 413,
	414, 417, 421, 425, 426, 427, 429, 431, 433, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 517, 519, 532, 550,
	556, 469, 294, 295, 434, 435, 307, 308, 573, 574,
	293, 527, 557, 525, 572, 551, 428, 369, 0, 0,
	0, 372, 275, 298, 313, 0, 542, 490, 223, 455,
	284, 247, 0, 0, 208, 242, 226, 253, 268, 271,
	317, 382, 390, 419, 424, 290, 265, 240, 448, 237,
	473, 497, 498, 499, 501, 386, 260, 423, 387, 0,
	367, 507, 508, 309, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	357, 261, 0, 0, 420, 0, 202, 0, 475, 248,
	368, 365, 514, 276, 267, 263, 246, 310, 376, 418,
	496, 412, 0, 361, 0, 0, 485, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 244, 318, 201, 403, 486, 280,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 342, 351, 350, 331, 332, 334, 336, 341,
	348, 354, 0, 0, 0, 0, 0, 259, 314, 266,
	258, 511, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 392, 251, 0,
	442, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 356, 0, 323, 197, 221, 0, 0, 402,
	450, 462, 0, 0, 0, 249, 0, 460, 416, 531,
	229, 278, 447, 422, 458, 430, 281, 0, 0, 459,
	363, 516, 440, 528, 554, 555, 257, 396, 540, 500,
	548, 575, 222, 254, 410, 493, 534, 482, 388, 512,
	513, 322, 481, 289, 200, 360, 560, 220, 468, 362,
	238, 227, 518, 537, 283, 445, 570, 209, 495, 526,
	235, 472, 0, 0, 577, 243, 492, 211, 523, 491,
	384, 319, 320, 210, 0, 446, 262, 287, 0, 0,
	252, 405, 520, 521, 250, 578, 224, 547, 216, 0,
	546, 398, 515, 524, 385, 374, 215, 522, 383, 373,
	327, 346, 347, 274, 300, 437, 366, 438, 299, 301,
	394, 393, 395, 204, 535, 0, 205, 0, 487, 536,
	579, 230, 231, 233, 0, 273, 277, 285, 288, 296,
	297, 306, 358, 409, 436, 432, 441, 0, 510, 529,
	541, 552, 558, 559, 561, 562, 563, 564, 565, 571,
	569, 566, 567, 568, 397, 304, 483, 326, 364, 0,
	0, 415, 461, 236, 533, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 375,
	474, 530, 328, 340, 343, 333, 352, 0, 353, 329,
	330, 335, 337, 338, 339, 344, 345, 349, 355, 245,
	207, 381, 389, 509, 305, 212, 213, 214, 502, 503,
	504, 505, 544, 545, 549, 451, 452, 453, 454, 286,
	539, 302, 457, 456, 324, 325, 370, 439, 0, 196,
	217, 359, 0, 443, 282, 576, 543, 538, 203, 219,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 206, 218, 228, 232, 239,
	255, 270, 272, 279, 292, 303, 311, 312, 315, 321,
	371, 377, 378, 379, 380, 399, 400, 401, 404, 407,
	408, 411, 413, 414, 417, 421, 425, 426, 427, 429,
	431, 433, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 517,
	519, 532, 550, 556, 469, 294, 295, 434, 435, 307,
	308, 573, 574, 293, 527, 557, 525, 572, 551, 428,
	369, 0, 0, 0, 372, 275, 298, 313, 0, 542,
	490, 223, 455, 284, 247, 0, 0, 208, 242, 226,
	253, 268, 271, 317, 382, 390, 419, 424, 290, 265,
	240, 448, 237, 473, 497, 498, 499, 501, 386, 260,
	423, 387, 0, 367, 507, 508, 309, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 357, 261, 0, 0, 420, 0, 202,
	0, 475, 248, 368, 365, 514, 276, 267, 263, 246,
	310, 376, 418, 496, 412, 0, 361, 0, 0, 485,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 244, 318, 201,
	403, 486, 280, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 342, 351, 350, 331, 332,
	334, 336, 341, 348, 354, 0, 0, 0, 0, 0,
	259, 314, 266, 258, 511, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	392, 251, 0, 442, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 323, 197, 221,
	0, 0, 402, 450, 462, 0, 0, 0, 249, 0,
	460, 416, 531, 229, 278, 447, 422, 458, 430, 281,
	0, 0, 459, 363, 516, 440, 528, 554, 555, 257,
	396, 540, 500, 548, 575, 222, 254, 410, 493, 534,
	482, 388, 512, 513, 322, 481, 289, 200, 360, 560,
	220, 468, 362, 238, 227, 518, 537, 283, 445, 570,
	209, 495, 526, 235, 472, 0, 0, 577, 243, 492,
	211, 523, 491, 384, 319, 320, 210, 0, 446, 262,
	287, 0, 0, 252, 405, 520, 521, 250, 578, 224,
	547, 216, 0, 546, 398, 515, 524, 385, 374, 215,
	522, 383, 373, 327, 346, 347, 274, 300, 437, 366,
	438, 299, 301, 394, 393, 395, 204, 535, 0, 205,
	0, 487, 536, 579, 230, 231, 233, 0, 273, 277,
	285, 288, 296, 297, 306, 358, 409, 436, 432, 441,
	0, 510, 529, 541, 552, 558, 559, 561, 562, 563,
	564, 565, 571, 569, 566, 567, 568, 397, 304, 483,
	326, 364, 0, 0, 415, 461, 236, 533, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 375, 474, 530, 328, 340, 343, 333, 352,
	0, 353, 329, 330, 335, 337, 338, 339, 344, 345,
	349, 355, 245, 207, 381, 389, 509, 305, 212, 213,
	214, 502, 503, 504, 505, 544, 545, 549, 451, 452,
	453, 454, 286, 539, 302, 457, 456, 324, 325, 370,
	439, 0, 196, 217, 359, 0, 443, 282, 576, 543,
	538, 203, 219, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 206, 218,
	228, 232, 239, 255, 270, 272, 279, 292, 303, 311,
	312, 315, 321, 371, 377, 378, 379, 380, 399, 400,
	401, 404, 407, 408, 411, 413, 414, 417, 421, 425,
	426, 427, 429, 431, 433, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 517, 519, 532, 550, 556, 469, 294, 295,
	434, 435, 307, 308, 573, 574, 293, 527, 557, 525,
	572, 551, 428, 369, 0, 0, 0, 372, 275, 298,
	313, 0, 542, 490, 223, 455, 284, 247, 0, 0,
	208, 242, 226, 253, 268, 271, 317, 382, 390, 419,
	424, 290, 265, 240, 448, 237, 473, 497, 498, 499,
	501, 386, 260, 423, 0, 0, 367, 507, 508, 309,
}

var yyPact = [...]int{
	-1000, -1000, 5235, -1000, -458, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2298, 2247, -1000, -1000, -1000, -1000, 2431, -1000, 849,
	1911, -1000, 2215, 3958, -1000, 47237, 599, -1000, 44585, 598,
	596, 139, 155, 29999, -1000, 250, -1000, 217, 45911, 229,
	-1000, -1000, -1000, -1000, -313, 18726, 2171, 89, 85, 47237,
	-1000, -1000, -1000, -1000, 2385, 1894, -1000, 406, -1000, -1000,
	-1000, -1000, -1000, -1000, 43922, -1000, 952, -1000, -1000, 2224,
	2203, 2439, 767, 2156, -1000, 2299, 1894, -1000, 18726, 2372,
	2291, 18063, 18063, 513, -1000, -1000, 260, -1000, -1000, 25358,
	47237, 32651, 348, -1000, 2215, -1000, -1000, -1000, 124, -1000,
	380, 1801, -1000, 1798, -1000, 720, 928, 431, 533, 532,
	429, 427, 424, 421, 411, 410, 409, 395, 437, -1000,
	796, 796, -116, -122, 689, 497, 417, 417, 747, 550,
	2187, 2186, -1000, -1000, 796, 796, 796, 396, 796, 796,
	796, 796, 364, 360, 796, 796, 796, 796, 796, 796,
	796, 796, 796, 796, 796, 796, 796, 796, 796, 796,
	796, 400, 2215, 344, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47237,
	199, 47237, -1000, 681, 47237, 47237, -1000, 1186, 1185, 923,
	-1000, -1000, 923, 132, 923, 923, 923, 923, 216, 675,
	78, -1000, 203, 331, 189, 337, 917, 228, -1000, -1000,
	327, 917, 1548, -1000, 783, 336, 197, -1000, 923, 923,
	-1000, -1000, 12071, 167, 12071, 12071, -1000, 2212, -1000, -1000,
	-1000, -1000, -1000, 1109, -1000, -1000, -1000, -1000, 5, 547,
	-1000, -1000, -1000, -1000, 45911, 43259, 315, -1000, -1000, 56,
	-1000, -1000, 1621, 1248, 18726, 1202, -1000, 1945, 741, -1000,
	-1000, -1000, -1000, -1000, 667, -1000, 19389, 19389, 19389, 19389,
	-1000, -1000, 1807, 42596, 1807, 1807, 19389, 1807, -1000, 19389,
	1807, 1807, 1807, 18726, 1807, 1807, 1807, 1807, -1000, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, -1000, -1000, -1000,
	-1000, 1807, 680, 1807, 1807, 1807, 1807, 1807, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1807, 1807, 1807, 1807,
	1807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21378, 1356, 1335, 1331, -1000,
	16074, 1807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47237, -1000, 1807, 269, 45911, 45911, 378, 2299,
	1894, -1000, 2385, 2376, 406, -1000, 2402, 1414, 1438, 1365,
	1894, 1745, 47237, -1000, 1821, -1000, -1000, -1000, -1000, 2014,
	1344, 1542, -1000, -1000, -1000, -1000, 1500, 18726, -1000, -1000,
	2419, -1000, 22705, 677, 2415, 41933, -1000, 513, 513, 1775,
	479, 22, -1000, -1000, -1000, -1000, 817, 29336, -1000, -1000,
	-1000, -1000, 1671, 47237, -1000, -1000, 5486, 1131, -1000, 1907,
	-1000, 1652, -1000, 1843, 18726, 1928, 579, 1131, 573, 572,
	563, -1000, -24, -1000, -1000, -1000, -1000, -1000, -1000, 796,
	796, 796, -1000, 384, 2366, 3958, 4786, -1000, -1000, -1000,
	41270, 1906, 1131, -1000, 1904, -1000, 882, 625, 673, 673,
	1131, -1000, -1000, 46574, 1131, 879, 877, 1131, 1131, 45911,
	45911, -1000, 40607, -1000, 39944, 39281, 1184, 45911, 38618, 37955,
	37292, 36629, 35966, -1000, 2105, -1000, 2069, -1000, -1000, -1000,
	46574, 1131, 1131, 46574, 45911, 46574, 47237, 1131, -1000, -1000,
	375, -1000, -1000, 1159, 1158, 1149, 796, 796, 1147, 1532,
	1530, 1523, 796, 796, 1119, 1512, 31325, 1495, 324, 1116,
	1108, 1107, 1330, 1493, 198, 1478, 1161, 1054, 1096, 45911,
	1902, 47237, -1000, 323, 828, 574, 813, 2215, 2168, 1774,
	535, 577, 1131, 492, 492, 45911, -1000, 14078, -1000, 426,
	-1000, -1000, -1000, -1000, 1464, 18726, -1000, 918, 917, 917,
	-1000, -1000, -1000, -1000, -1000, -1000, 923, 47237, 918, -1000,
	-1000, -1000, 917, 923, 47237, 923, 923, 923, 923, 917,
	917, 917, 923, 47237, 47237, 47237, 47237, 47237, 47237, 47237,
	47237, 47237, 12071, 783, 923, -318, -1000, 1446, -1000, -1000,
	2019, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12071, 12071, -1000, -1000, -1000, -1000, -1000, 1771,
	-1000, 196, 45, 224, -1000, 35303, 405, 811, -1000, 405,
	-1000, -1000, -1000, 1770, 34640, -1000, -323, -324, -338, -341,
	-1000, -1000, -1000, -362, -374, -1000, -1000, -1000, 18726, 18726,
	18726, 18726, -153, -1000, 1118, 19389, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 223, 963, 19389, 19389, 19389, 19389, 19389,
	19389, 19389, 19389, 19389, 19389, 19389, 19389, 19389, 19389, 19389,
	-1000, -1000, 27347, 6445, 6445, 741, 741, 741, 741, -1000,
	-86, 1766, 46574, -1000, -1000, -1000, 672, 18726, 18726, 741,
	-1000, 1131, 16074, 20052, 18063, 18063, 18726, 825, 1248, 46574,
	18726, -1000, 1365, -1000, -1000, -1000, 1124, -1000, 921, 2196,
	2196, 2196, 2196, 18726, 18726, 18726, 18726, 18726, 18726, 18726,
	18726, 18726, 18726, 2196, 45911, 45911, 1429, 18726, 18726, 18726,
	18726, 18726, 18726, 14747, 18726, 18726, 19389, 18726, 18726, 18726,
	1365, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726,
	18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726,
	18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 1365, 18726,
	1340, 18726, 18726, 18063, 13409, 18063, 18063, 18063, 18063, 18063,
	-1000, -1000, -1000, -1000, -1000, 18726, 18726, 18726, 18726, 18726,
	18726, 18726, 18726, 1365, 18726, 18726, 18726, 18726, 18726, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1632,
	1408, 1402, 18726, -1000, 1757, -1000, -88, 24695, 18726, 1442,
	2414, 1946, 45911, -1000, -1000, -1000, 2299, -1000, 2299, 1632,
	2342, 2087, 18063, -1000, -1000, 2342, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1468, -1000, 47237, 1745, 2270, 45911,
	2072, 1423, 453, -1000, 18726, 18726, 1727, -1000, 999, 47237,
	-1000, -153, -1000, 33977, -1000, -1000, 11402, 47237, 387, 47237,
	-1000, 24032, 33314, 270, -1000, 22, 1709, -1000, 51, 29,
	15410, 727, -1000, -1000, -1000, 689, 20715, 1597, 727, 129,
	-1000, -1000, -1000, 1843, -1000, 1843, 1843, 1843, 1843, 453,
	453, 453, 453, -1000, -1000, -1000, -1000, -1000, 1900, 1892,
	-1000, 1843, 1843, 1843, 1843, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1891, 1891, 1891, 1889, 1889, 1847, 1847, 470,
	-1000, 18726, 267, 32651, 2223, 1090, 1162, 323, 501, 1944,
	1131, 1131, 1131, 501, -1000, 1348, 1333, 1307, -1000, -449,
	1724, -1000, -1000, 2363, -1000, -1000, 751, 913, 905, 858,
	45911, 278, 382, -1000, 503, -1000, 32651, 1131, 874, 673,
	1131, -1000, 1131, -1000, -1000, -1000, -1000, -1000, 1131, -1000,
	-1000, 1722, -1000, 1761, 1026, 902, 966, 899, 1722, -1000,
	-1000, -95, 1722, -1000, 1722, -1000, 1722, -1000, 1722, -1000,
	1722, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	856, 243, -215, 45911, 278, 521, -1000, 517, 27347, -1000,
	-1000, -1000, 27347, 27347, -1000, -1000, -1000, -1000, 1420, 1418,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -434,
	47237, -1000, 301, 803, 356, 413, 373, 47237, 370, 2289,
	2283, 2280, 2273, 2251, 307, 359, 47237, 47237, 492, 2017,
	47237, 2238, 47237, -1000, -1000, -1000, -1000, 450, 47237, -1000,
	343, -1000, -1000, -1000, -1000, -1000, -1000, 1248, 47237, -1000,
	-1000, 923, 923, -1000, -1000, 47237, 923, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 923, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47237, -1000, -1000, -1000, -1000, 5, 210, -1000, -1000,
	45911, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-39, -1000, 134, 49, 388, -1000, -1000, -1000, -1000, -1000,
	2303, -1000, 1248, 868, 845, -1000, 1807, -1000, -1000, 1105,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 223, 19389, 19389,
	19389, 1144, 569, 1658, 1126, 1201, 1153, 1153, 898, 898,
	745, 745, 745, 745, 745, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1415, -1000, 1807, 46574, 1650, 13409, 1205,
	1557, 1365, 2794, -1000, 1639, -1000, 1639, 1604, 852, -1000,
	18726, 1365, 2789, -1000, -1000, 1365, 1365, 1365, 18726, -1000,
	-1000, 18726, 18726, 18726, 18726, 1162, 1162, 1162, 1162, 1162,
	1162, 1162, 1162, 1162, 1162, 18726, 1721, 1717, 2409, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1058, 1162, 1162, 1162, 1162, 1162, 18726, 1091, -1000, -1000,
	-1000, 1362, 2781, 1800, 2764, 1162, 1162, -1000, 1162, 2700,
	2681, 1365, 1621, 1365, 1714, -1000, 2676, 1162, 2669, 2665,
	2523, 1956, 2519, 2482, 2444, 1162, 1162, 1162, 1912, 2401,
	2314, 2308, 2301, 2297, 2276, 2259, 2249, 2234, 1162, -155,
	1162, 1365, -1000, -1000, -1000, -1000, -1000, 2221, 1886, 1365,
	1712, 1807, 671, -1000, -1000, 1639, 1365, 1365, 1639, 1639,
	2211, 2207, 2197, 2188, 2169, 2161, 1162, 1162, -1000, 1162,
	2088, 2067, 1768, 1759, 1365, -1000, 1402, 47237, -1000, -290,
	-1000, 24, 662, 1807, -1000, 31325, 1365, -1000, 7917, -1000,
	1095, -1000, -1000, -1000, -1000, -1000, 28673, 1704, 2342, -1000,
	-1000, 1807, 1636, -1000, -1000, 453, 118, 28010, 736, 736,
	159, 1248, 1248, 18726, -1000, -1000, -1000, -1000, -1000, -1000,
	660, 2397, 393, 1807, -1000, 1711, 2424, -1000, -1000, -1000,
	2266, 22042, -1000, -1000, 1807, 1807, 47237, 1687, 1669, -1000,
	657, -1000, 1192, 1709, 22, 37, -1000, -1000, -1000, -1000,
	1248, -1000, 1304, 389, 4111, -1000, 459, -1000, -1000, -1000,
	-1000, 2178, 113, -1000, -1000, -1000, 264, 453, -1000, -1000,
	-1000, -1000, -1000, -1000, 1412, 1412, -1000, -1000, -1000, -1000,
	-1000, 1087, -1000, -1000, -1000, -1000, 1079, -1000, -1000, 1078,
	-1000, -1000, 1920, 1999, 267, -1000, -1000, 796, 1405, -1000,
	-1000, 2180, 796, 796, 45911, -1000, -1000, 1577, 2223, 301,
	47237, 833, 2016, -1000, 1944, 1944, 1944, 47237, -1000, -1000,
	-1000, -1000, -1000, -1000, -441, 79, 422, -1000, -1000, -1000,
	4275, 45911, 1634, -1000, 274, -1000, 1575, -1000, 45911, -1000,
	1629, 1874, 1131, 1131, -1000, -1000, -1000, 45911, 1807, -1000,
	-1000, -1000, -1000, 570, 2214, 322, -1000, -1000, -178, -1000,
	-1000, 278, 274, 46574, 1131, 727, -1000, -1000, -1000, -1000,
	-1000, -437, 1626, 559, 280, 353, 47237, 47237, 47237, 47237,
	47237, 638, -1000, -1000, 69, -1000, -1000, 258, -1000, -1000,
	-1000, -1000, 258, -1000, -1000, -1000, -1000, 346, 515, -1000,
	47237, 47237, 725, -1000, -1000, -1000, -1000, -1000, -1000, 917,
	-1000, -1000, 917, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2209, 47237, 39, -400, -1000,
	-395, 18726, -1000, -1000, -1000, -1000, 1102, 567, 1658, 19389,
	19389, 19389, -1000, -1000, -1000, 488, 488, 27347, -1000, 18726,
	18063, -1000, -1000, 18726, 18726, 820, -1000, 18726, 1037, -1000,
	18726, -1000, -1000, -1000, 1402, 1162, 1162, 1162, 1162, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1676,
	18726, 18726, 18726, 1365, 357, -1000, -1000, -1000, -1000, -1000,
	2408, -1000, 18726, -1000, 27347, 18726, 18726, 18726, -1000, -1000,
	-1000, 18726, 18726, -1000, -1000, 18726, 18726, -1000, 18726, 18726,
	18726, -1000, 18726, 18726, 18726, 18726, -1000, -1000, -1000, -1000,
	18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726, 18726,
	-1000, -1000, 32651, 122, -155, 1340, 122, 1340, -1000, 18063,
	12740, -1000, -1000, -1000, -1000, -1000, 18726, 18726, 18726, 18726,
	18726, 18726, -1000, -1000, -1000, 18726, 18726, -1000, 18726, -1000,
	18726, -1000, -1000, -1000, -1000, -1000, 662, -1000, 673, 673,
	673, 45911, -1000, -1000, -1000, -1000, 1708, -1000, 2302, -1000,
	2103, 2098, 2407, 2397, -1000, 24032, 2342, -1000, -1000, 45911,
	-281, -1000, 2158, 2110, 736, 736, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10733, 2299, 18726, 2010, 46574, 154, -1000,
	23369, 45911, 46574, 24032, 24032, 24032, 24032, 24032, -1000, 2036,
	2035, -1000, 2074, 2071, 2053, 47237, -1000, 1632, 1624, -1000,
	18726, 26021, 1678, 24032, -1000, -1000, 24032, 47237, 10064, -1000,
	-1000, 33, 40, -1000, -1000, -1000, -1000, 689, -1000, -1000,
	376, 2261, 2172, -1000, -1000, -1000, -1000, -1000, 1594, -1000,
	1592, 1706, 1583, 1581, 243, -1000, 1924, 2208, 796, 796,
	-1000, 1073, -1000, 1131, 1403, 1391, -1000, -1000, -1000, 534,
	-1000, 2237, 47237, 2009, 2007, 1998, -1000, -447, 1059, 1871,
	1923, 18726, 1858, 2360, 1690, 45911, -1000, -1000, 46574, -1000,
	257, -1000, 267, 45911, -1000, -1000, -1000, 382, 47237, -1000,
	7698, -1000, -1000, -1000, 274, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47237, 300, -1000, 1848, 1106, -1000, -1000, 1933,
	-1000, -1000, -1000, -1000, 247, 355, 1383, 262, 1377, 262,
	-1000, 47237, 696, 1999, 47237, -1000, -1000, -1000, 923, 923,
	-1000, -1000, 2194, -1000, 1131, 1162, 19389, 19389, -1000, 741,
	560, -135, 1843, 1843, -1000, 1843, 1847, -1000, 1843, 202,
	1843, 194, 1843, -1000, -1000, 1365, 1365, 1402, -1000, 1754,
	1069, -1000, 1248, 18726, 2052, -1000, -1000, -1000, -1000, -1000,
	-30, 2048, 2038, 1162, -1000, 1842, 1841, 18726, 1162, 1365,
	1526, 1162, 1162, 1162, 1162, -1000, 1248, 1402, 2033, 1402,
	1162, 1162, 2003, 379, 1162, 1572, 1572, 1572, 1572, 1572,
	1402, 1402, 1402, 1402, 45911, -1000, -155, -1000, -1000, -192,
	-196, -1000, 1365, -155, 1700, 1365, -1000, 1492, 1488, 1991,
	1470, 1162, 1986, 1162, 1162, 1162, 1462, -1000, 2300, 2300,
	2300, 1555, 1095, 47237, -1000, -1000, -1000, -1000, 2397, 2377,
	1696, -1000, -1000, 118, 456, -1000, 2140, 2110, -1000, 2359,
	2154, 2358, -1000, -1000, -1000, -1000, -1000, 1248, -1000, 2210,
	1694, -1000, 801, 1660, -1000, -1000, 17400, 1566, 2093, 650,
	1555, 1758, 2424, 1936, 1996, 2870, -1000, -1000, -1000, -1000,
	2032, -1000, 2013, -1000, -1000, 1821, -1000, 1927, 387, 24032,
	1752, 1752, -1000, 646, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 932, 6759, 2438, -1000, 1372, -1000, 1302, 205, 1040,
	-1000, -1000, 796, 796, -1000, 870, 865, -1000, 47237, 1836,
	-1000, 453, 1367, 453, 1020, -1000, -1000, 1013, -1000, -1000,
	-1000, -1000, 1859, 2102, -1000, -1000, -1000, -1000, 47237, -1000,
	-1000, 47237, 47237, 47237, 1833, 2352, -1000, 18726, 1828, 800,
	1763, 45911, 45911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 477, 796, -414, 358, 349, 796,
	796, 796, -448, -1000, -1000, 1537, 1529, -1000, -120, -1000,
	18726, -1000, -1000, -1000, 1166, 1166, 1356, 1335, 1331, -1000,
	1821, -1000, -1000, -1000, 1563, -1000, -1000, -102, 45911, 45911,
	45911, 45911, -1000, -1000, 1138, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 741, 1365, 354,
	-106, 1365, -1000, -1000, 453, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18726, -1000, 18726, -1000, 1248,
	18726, 2299, 1315, 18726, 18726, -1000, 1008, 1002, 1162, -1000,
	-1000, -1000, 18726, -1000, -1000, -1000, -1000, -1000, 18726, -1000,
	-1000, -1000, 18726, 266, 488, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1365, 383, -1000, -1000, -1000,
	-1000, 2399, -1000, 1365, 18726, -1000, -1000, 18726, -1000, 18726,
	18726, -1000, 18726, -1000, 18726, -1000, -1000, -1000, -1000, 18726,
	1807, 2131, 1807, 1807, 26021, -1000, -1000, 2377, 2381, 2351,
	2124, 2142, 2142, 2140, -1000, 2348, 2345, -1000, 1311, 2341,
	1292, 854, -1000, 46574, 18726, 154, -1000, 398, 45911, 154,
	45911, -1000, 2315, -1000, -1000, 18726, 1827, -1000, 18726, -1000,
	-1000, -1000, -1000, 6445, 2397, 1752, -1000, -1000, 754, -1000,
	18726, -1000, -1000, -1000, 6924, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1290, 1286, -1000, -1000, 1824, 18726, -1000,
	-1000, -1000, 1561, 1476, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1821, -1000, -1000, -1000, -1000, 382, -446, 1746,
	45911, 989, -1000, 1517, 1690, 367, 154, 1273, 796, 796,
	796, 985, 967, 31325, 1504, -1000, 45911, 451, -1000, 382,
	-1000, -125, -126, 1162, -1000, -1000, 2258, -1000, -1000, 12740,
	-1000, -1000, 1819, 1943, -1000, -1000, -1000, -1000, 2068, -92,
	-110, -1000, -1000, 1162, 1162, 1644, 1365, -1000, 1162, 1162,
	1471, 1459, -1000, 1162, 1402, 1445, -1000, 266, 1365, 1978,
	-1000, -1000, 6445, -1000, -1000, 2315, 2325, 122, -1000, -1000,
	297, 122, 1248, 1400, 1162, 1396, 1387, 1162, 1162, 26684,
	-1000, 2321, 2311, 31988, 31988, 662, 2381, -167, 18726, 18726,
	2108, 1074, -1000, -1000, -1000, -1000, 1262, 1253, -1000, 1210,
	-1000, 2433, -1000, 1248, -1000, 154, -1000, 618, 1660, -1000,
	2299, 1248, 45911, 1248, 107, 2315, -1000, 1162, -1000, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
	1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, -1000,
	-1000, 45911, 1569, -1000, -1000, 2256, 1502, 75, -1000, 1376,
	1690, -1000, -1000, 151, -1000, 18726, -1000, 31325, 1197, 1195,
	-1000, -1000, -1000, -1000, -448, -1000, -1000, -1000, -1000, -1000,
	-1000, 406, 1688, -1000, 792, 45911, 47237, -1000, 1960, -1000,
	-1000, -1000, 18726, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18726, -1000, 1365, 1964, -1000, -284, -1000, -418, 18726,
	-155, -1000, -1000, -155, -1000, 18726, -1000, -1000, 18726, -1000,
	18726, -1000, -1000, 1475, -1000, -1000, -1000, -1000, -1000, 1475,
	1475, -1000, -167, -1000, 1681, -1000, 45911, 1248, 1621, -1000,
	1062, -1000, -1000, -1000, -1000, -1000, 46574, 1660, 45911, -1000,
	1458, 1365, 1807, 2299, -1000, 1455, -1000, 406, -1000, 1812,
	1923, -1000, -1000, -1000, 16737, -1000, -1000, -1000, -1000, -1000,
	195, -97, 12740, 9395, 1430, -1000, -96, 1162, 1402, -1000,
	-376, -1000, -1000, -1000, -1000, 156, -1000, -1000, 1621, -1000,
	-1000, 1382, 1375, 1341, 30662, -1000, -1000, -1000, -1000, -167,
	-1000, -1000, 2252, -1000, -1000, 1603, -1000, -1000, 26021, 45248,
	-1000, -84, 362, -97, 18726, 1810, 1365, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 26, -1000, -1000, -1000, -1000,
	-1000, 1933, -107, -1000, -1000, -1000, 207, -405, -193, -195,
	-1000, -1000, 19389, -1000, 18726, -1000, 18726, -1000, 18726, -1000,
	-1000, -1000, 45911, 1807, -1000, 1390, -1000, 4718, -208, 1961,
	-1000, -12, -1000, -1000, -1000, 925, 1075, -1000, -1000, -1000,
	-1000, -1000, -1000, 1482, 45911, -1000, 461, -1000, -1000, -102,
	-111, 842, -1000, -1000, -1000, -1000, -1000, 1242, 1117, 1162,
	-1000, 45911, -1000, 45248, -201, 727, 6445, -1000, 1959, 1953,
	2406, -1000, -1000, -1000, -1000, -1000, -1000, -454, 1364, 310,
	-1000, -1000, 207, -1000, 18726, -1000, 18726, -1000, 1365, -1000,
	-1000, 2217, 107, -1000, 2403, -1000, 2421, 726, 726, -1000,
	964, -454, -1000, -1000, 1162, 1162, -1000, -216, -1000, -1000,
	-1000, -1000, -1000, 458, 1025, -1000, -1000, -1000, -1000, -1000,
	6445, -1000, -1000, -1000, 212, 212, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2979, 2973, 25, 1, 37, 34, 2972, 44, 138,
	207, 51, 214, 109, 2970, 187, 2969, 2967, 2966, 2965,
	2964, 2963, 2459, 2458, 2454, 2962, 2961, 2960, 2958, 2957,
	2956, 2955, 2954, 2953, 2952, 189, 182, 206, 2951, 2950,
	2949, 133, 203, 93, 96, 205, 2946, 2945, 88, 2942,
	2934, 2927, 201, 200, 199, 894, 2926, 198, 125, 62,
	2925, 2924, 2921, 2917, 2916, 2915, 2910, 2908, 2904, 2902,
	2901, 2897, 2896, 2895, 2894, 2893, 2892, 2891, 2888, 288,
	2885, 2884, 16, 2883, 92, 2881, 2880, 2879, 2876, 2872,
	7, 2871, 2868, 20, 48, 2862, 2861, 56, 2860, 2859,
	2858, 2857, 2849, 14, 2848, 22, 2846, 31, 2845, 2843,
	142, 2837, 2836, 2835, 39, 2834, 2833, 2830, 2829, 2826,
	2825, 2821, 157, 2819, 2816, 2813, 186, 210, 2812, 2809,
	183, 117, 119, 2805, 2803, 113, 202, 2801, 135, 2800,
	2799, 2797, 165, 2796, 2149, 2795, 2794, 77, 85, 2792,
	50, 2791, 2790, 9, 90, 73, 4, 81, 83, 2789,
	2787, 76, 102, 2786, 129, 2784, 2783, 111, 78, 2782,
	115, 108, 2780, 2779, 17, 21, 2776, 35, 29, 36,
	84, 2775, 2774, 121, 2773, 2771, 2770, 105, 2767, 2766,
	3680, 2763, 99, 149, 116, 87, 2758, 52, 65, 2756,
	2755, 2748, 2730, 2727, 57, 2724, 2721, 2720, 155, 342,
	188, 2719, 46, 45, 59, 147, 2718, 60, 98, 209,
	184, 2716, 2715, 154, 152, 2688, 2687, 69, 42, 41,
	2683, 127, 146, 134, 26, 126, 148, 2681, 2679, 70,
	86, 2678, 2677, 2676, 2675, 185, 2672, 2663, 80, 2659,
	68, 2657, 190, 2650, 12, 67, 2648, 49, 177, 2647,
	89, 2642, 2641, 74, 141, 79, 38, 2640, 176, 181,
	144, 180, 2638, 2635, 63, 2633, 2629, 2628, 208, 349,
	2626, 2625, 100, 194, 168, 166, 101, 2618, 356, 2617,
	2612, 107, 2, 5143, 2609, 40, 178, 2608, 2604, 6175,
	153, 43, 24, 2600, 128, 2599, 2595, 2594, 2593, 213,
	196, 131, 179, 72, 2592, 2589, 2587, 13, 2582, 2581,
	2574, 2572, 2569, 2567, 91, 33, 32, 30, 249, 75,
	11, 112, 173, 167, 94, 2566, 2565, 2564, 140, 110,
	2562, 175, 174, 143, 171, 2561, 193, 159, 136, 2560,
	95, 28, 2559, 2556, 2553, 2538, 114, 2537, 2536, 2535,
	2533, 172, 160, 139, 106, 2528, 104, 137, 161, 163,
	55, 2525, 64, 2522, 2517, 27, 204, 23, 2515, 6,
	118, 164, 2512, 4341, 195, 2502, 15, 357, 162, 2499,
	2490, 5, 8, 10, 2488, 2487, 2485, 2484, 150, 2481,
	2480, 2479, 2477, 19, 53, 18, 3, 120, 103, 2476,
	2475, 156, 158, 2474, 2472, 2465, 2463, 3104, 0, 145,
	2437, 211,
}

//line sql.y:8097
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 415, 416, 416, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 383, 384, 384, 258, 258, 33, 74, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 108, 108, 23,
	24, 24, 24, 24, 419, 419, 185, 185, 183, 183,
	184, 184, 263, 263, 25, 267, 267, 269, 269, 269,
	269, 259, 259, 259, 26, 26, 268, 268, 270, 270,
	270, 273, 273, 273, 273, 312, 312, 312, 27, 27,
	27, 27, 27, 128, 128, 386, 386, 385, 379, 379,
	378, 378, 377, 382, 382, 381, 381, 380, 39, 40,
	49, 49, 49, 49, 50, 51, 387, 387, 352, 56,
	56, 55, 55, 55, 55, 55, 55, 57, 57, 53,
	53, 52, 52, 54, 54, 354, 354, 340, 340, 353,
	353, 353, 353, 353, 353, 353, 339, 339, 139, 139,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 402, 402, 402,
	401, 401, 238, 238, 238, 238, 238, 238, 238, 238,
	149, 149, 161, 161, 161, 161, 161, 147, 147, 148,
	146, 146, 146, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 160, 160, 156, 156, 156, 157, 157, 157,
	158, 158, 403, 403, 403, 403, 317, 317, 317, 317,
	320, 320, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 319, 319, 319, 319, 319, 319, 319, 321, 321,
	321, 321, 321, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 323,
	323, 323, 323, 323, 323, 323, 323, 338, 338, 324,
	324, 332, 332, 333, 333, 334, 334, 334, 335, 335,
	335, 336, 336, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 331, 331, 330, 330, 330, 341, 366, 366,
	365, 365, 363, 363, 363, 363, 363, 363, 363, 363,
	350, 350, 360, 360, 360, 360, 360, 349, 349, 345,
	345, 345, 346, 346, 347, 347, 344, 344, 348, 348,
	362, 362, 361, 361, 342, 342, 343, 343, 368, 404,
	404, 404, 404, 404, 405, 405, 369, 394, 396, 396,
	396, 395, 395, 392, 393, 391, 391, 391, 391, 391,
	84, 84, 84, 286, 286, 287, 287, 358, 358, 357,
	357, 357, 359, 359, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 281, 281, 281, 390, 390,
	390, 390, 390, 390, 389, 389, 389, 355, 355, 355,
	388, 388, 58, 58, 218, 218, 407, 407, 408, 408,
	408, 46, 46, 46, 46, 46, 46, 45, 45, 45,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 47, 47, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 110, 110, 111, 111, 111, 111, 113, 113, 113,
	371, 371, 59, 59, 3, 3, 173, 175, 176, 176,
	174, 174, 174, 174, 174, 174, 61, 61, 60, 60,
	178, 177, 179, 179, 179, 1, 1, 2, 2, 4,
	4, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 337, 337, 337, 370, 370, 372, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 116,
	115, 115, 114, 117, 117, 117, 117, 117, 117, 117,
	117, 374, 374, 374, 62, 62, 375, 325, 326, 327,
	5, 6, 351, 373, 124, 124, 29, 38, 38, 30,
	30, 30, 30, 31, 31, 63, 64, 414, 414, 68,
	68, 68, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 280, 280, 289,
	289, 279, 279, 304, 304, 304, 282, 282, 282, 283,
	283, 400, 400, 400, 276, 276, 66, 66, 66, 305,
	305, 305, 305, 69, 69, 409, 409, 410, 410, 411,
	411, 411, 70, 71, 71, 307, 307, 308, 308, 72,
	73, 85, 85, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 109, 109, 109, 15, 15, 15, 15, 81,
	81, 81, 14, 14, 17, 67, 67, 75, 397, 397,
	398, 399, 399, 399, 399, 76, 78, 32, 32, 32,
	32, 32, 32, 134, 134, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 129, 129, 129,
	123, 123, 420, 79, 80, 80, 127, 127, 127, 120,
	120, 120, 126, 126, 126, 16, 16, 18, 262, 262,
	19, 19, 131, 131, 133, 133, 133, 133, 133, 135,
	135, 135, 135, 135, 135, 135, 130, 130, 132, 132,
	132, 132, 297, 297, 297, 296, 296, 167, 167, 169,
	168, 168, 170, 170, 171, 171, 171, 171, 216, 216,
	193, 193, 255, 255, 256, 256, 254, 254, 261, 261,
	257, 257, 257, 257, 264, 264, 172, 172, 172, 172,
	180, 180, 181, 181, 182, 182, 306, 306, 302, 302,
	302, 301, 301, 186, 186, 186, 188, 187, 187, 187,
	187, 189, 189, 191, 191, 190, 190, 192, 197, 197,
	196, 196, 194, 194, 194, 194, 195, 195, 195, 195,
	198, 198, 144, 144, 144, 144, 144, 144, 144, 159,
	159, 159, 159, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 245, 245, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 153, 221, 221, 220, 220, 87,
	87, 87, 88, 88, 89, 89, 89, 89, 89, 90,
	90, 90, 90, 90, 145, 145, 92, 92, 91, 91,
	211, 211, 294, 294, 93, 94, 94, 97, 97, 96,
	95, 95, 101, 101, 98, 98, 100, 100, 99, 102,
	102, 103, 104, 104, 277, 277, 199, 199, 207, 207,
	207, 207, 200, 200, 200, 200, 200, 200, 200, 208,
	208, 208, 215, 209, 209, 205, 205, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 164, 164, 164, 164, 226, 226, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 152, 152, 165, 165, 165, 165,
	166, 166, 166, 166, 166, 166, 166, 314, 314, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	421, 421, 328, 328, 328, 328, 206, 206, 206, 206,
	206, 125, 125, 125, 125, 125, 311, 311, 311, 315,
	315, 315, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 316, 316, 224,
	224, 121, 121, 222, 222, 223, 225, 225, 217, 217,
	217, 217, 219, 219, 202, 202, 202, 227, 227, 228,
	228, 105, 106, 106, 107, 107, 229, 229, 231, 230,
	230, 232, 233, 233, 233, 234, 234, 235, 235, 235,
	48, 48, 48, 48, 48, 43, 43, 43, 43, 44,
	44, 44, 44, 136, 136, 136, 136, 138, 138, 137,
	137, 82, 82, 83, 83, 83, 413, 413, 413, 412,
	412, 412, 412, 412, 412, 142, 142, 143, 143, 143,
	140, 140, 141, 141, 252, 252, 236, 236, 236, 243,
	243, 243, 239, 239, 241, 241, 241, 242, 242, 242,
	240, 249, 249, 251, 251, 250, 250, 246, 246, 247,
	247, 248, 248, 248, 244, 244, 201, 201, 201, 201,
	201, 253, 253, 253, 253, 265, 265, 212, 212, 214,
	214, 213, 213, 163, 266, 266, 274, 271, 271, 272,
	272, 298, 298, 298, 275, 275, 288, 288, 284, 284,
	285, 285, 278, 278, 290, 290, 290, 77, 210, 210,
	367, 367, 364, 293, 293, 295, 295, 299, 299, 303,
	303, 300, 300, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	417, 418, 309, 310, 310, 310,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 2, 0, 2,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 8, 5,
	5, 4, 4, 4, 6, 5, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	2, 4, 4, 3, 0, 1, 4, 3, 4, 4,
	3, 3, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 4, 1, 3, 2,
	3, 3, 3, 2, 2, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 5, 2, 3, 3, 2, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 1, 2,
	3, 7, 0, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	1, 6, 3, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 8, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 1, 2, 2,
	1, 1, 1, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -415, -79, -420, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -65, -66, -69, -70, -71, -72, -73, -14, -17,
	-67, -32, -33, -74, -75, -76, -77, -78, -16, -18,
	-19, -9, -8, -13, 10, 11, -108, -34, 33, -39,
	-49, 225, -50, -40, 226, -51, 228, 227, 265, 229,
	249, 628, 258, 75, 313, 314, 316, 317, 318, 319,
	-109, 624, 263, 264, 231, 37, 46, 34, 35, 38,
	235, 271, 272, 234, -10, -35, 9, -417, 12, 456,
	260, 259, 29, -12, 518, 87, -80, -416, 673, -252,
	-236, 23, 34, 30, -235, -231, -127, -236, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -352, -354, 87,
	159, 87, -79, -56, -55, -53, -52, -54, -57, 32,
	-46, -47, -376, -45, -42, 230, 227, 275, 123, 124,
	265, 266, 267, 229, 249, 264, 268, 263, 284, -41,
	82, 34, 518, 521, -359, 226, 232, 233, 228, 457,
	126, 125, 76, -356, 372, 551, 643, -57, 645, 101,
	104, 644, 45, 239, 646, 647, 648, 558, 649, 248,
	650, 651, 652, 653, 659, 599, 660, 661, 662, 127,
	8, -79, -303, -299, 91, -292, 515, 251, 549, 550,
	300, 82, 42, 524, 369, 372, 551, 486, 643, 313,
	329, 323, 491, 492, 493, 352, 344, 516, 552, 525,
	303, 252, 288, 637, 342, 135, 645, 307, 553, 266,
	377, 378, 554, 379, 101, 316, 419, 658, 306, 555,
	656, 104, 644, 321, 80, 485, 52, 640, 45, 261,
	340, 234, 336, 646, 289, 556, 527, 282, 126, 123,
	665, 37, 332, 51, 31, 655, 125, 50, 647, 150,
	557, 648, 558, 381, 359, 631, 49, 382, 267, 559,
	85, 272, 520, 310, 639, 383, 505, 333, 384, 299,
	654, 231, 560, 619, 611, 612, 385, 386, 632, 364,
	360, 365, 507, 561, 411, 490, 387, 615, 616, 672,
	53, 562, 563, 633, 124, 564, 79, 649, 81, 327,
	328, 565, 297, 250, 510, 511, 413, 356, 468, 475,
	476, 111, 112, 471, 113, 477, 114, 478, 479, 480,
	469, 115, 108, 470, 481, 482, 357, 358, 116, 483,
	110, 109, 472, 474, 117, 484, 248, 36, 388, 517,
	301, 59, 305, 276, 414, 47, 362, 669, 46, 626,
	512, 566, 630, 355, 351, 465, 54, 567, 568, 569,
	570, 487, 650, 354, 326, 350, 664, 4, 294, 488,
	651, 63, 233, 367, 366, 368, 283, 410, 347, 571,
	572, 573, 255, 83, 574, 337, 22, 575, 576, 389,
	290, 577, 57, 578, 579, 417, 264, 580, 55, 652,
	40, 581, 269, 666, 653, 582, 583, 584, 625, 585,
	271, 586, 391, 587, 613, 614, 390, 361, 363, 513,
	278, 392, 236, 519, 588, 311, 331, 268, 657, 589,
	256, 501, 502, 503, 504, 638, 509, 508, 270, 275,
	263, 418, 257, 590, 591, 592, 593, 594, 304, 610,
	595, 596, 317, 659, 466, 44, 597, 598, 599, 600,
	601, 298, 293, 412, 421, 62, 84, 374, 602, 603,
	636, 325, 322, 291, 604, 314, 56, 660, 661, 662,
	285, 663, 494, 495, 496, 497, 10, 670, 671, 489,
	394, 127, 295, 296, 48, 348, 277, 605, 308, 606,
	338, 339, 353, 324, 349, 622, 315, 620, 279, 395,
	467, 265, 607, 420, 292, 370, 375, 309, 523, 506,
	284, 396, 635, 522, 498, 499, 346, 343, 286, 500,
	608, 624, 397, 240, 280, 281, 609, 621, 398, 399,
	302, 400, 401, 402, 403, 404, 407, 408, 409, 406,
	312, 405, 623, 617, 618, 287, 521, 320, 341, 376,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 464, 238,
	-79, 238, -190, -299, 238, 238, 96, 519, 644, -271,
	408, 409, 378, -289, 380, 393, 388, 398, 386, -280,
	389, 391, 278, -400, 411, 238, 395, 225, 381, 390,
	399, 400, 302, 406, 401, 312, 405, 287, 402, 403,
	404, 407, -383, 177, 648, 663, 135, 345, 385, 383,
	412, 626, 91, -305, 91, 92, 93, -292, 315, -307,
	320, -293, -383, -292, 318, -79, -79, -309, -309, -129,
	626, 629, -209, -144, 143, -159, -162, -150, -154, -203,
	-204, -205, -206, -160, -219, -258, 166, 167, 174, 144,
	-215, -163, 27, 514, 458, 457, 177, 32, -153, 220,
	69, 70, 460, 146, 58, 12, 433, 434, -161, 428,
	435, 430, 485, 487, 488, 489, 486, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 490, 462, 463,
	118, 464, 108, 110, 109, 465, 466, 467, 342, 512,
	513, 507, 510, 511, 509, 508, 357, 358, 468, 469,
	470, 111, 112, 113, 114, 115, 116, 117, 471, 474,
	472, 473, 475, 476, 477, 482, 483, 478, 479, 480,
	481, 484, -89, -101, 540, 539, -102, -151, -152, -165,
	-166, -293, -299, 243, 427, 237, 172, 456, -155, -148,
	-217, 107, 92, 93, -8, -213, 426, 431, 432, 436,
	429, 526, 528, 543, 544, 546, 531, 536, 535, 538,
	501, 502, 503, 504, 505, 506, 611, 612, 613, 614,
	615, 616, 617, 618, -383, -292, 91, -157, -156, -199,
	94, 99, 102, 103, 105, -406, 261, 338, 339, 119,
	-417, 641, 90, 95, 96, 97, 98, 120, 121, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 45, 394, 394, -190, -79, -79, -79, -79, -229,
	-127, -231, -10, -8, -417, 9, -79, -8, -9, -13,
	-35, -37, 545, -36, -299, 100, -236, -252, 13, 162,
	43, 51, -234, -235, -12, -8, -144, 20, 24, 25,
	-132, 168, -144, -299, -132, -278, 242, -79, -79, -267,
	-312, 315, -269, 412, 626, 411, -259, -272, 91, -258,
	-271, 410, -353, 159, -339, -343, -293, 253, -369, 249,
	-190, -362, -361, -293, -417, -128, -288, 239, 247, 246,
	136, -387, 139, 295, 427, 237, -52, -53, -54, -271,
	176, 647, -110, 270, 274, 88, 88, -343, -342, -341,
	-388, 274, 253, -368, -360, 245, 254, -349, 246, 247,
	-344, 239, 137, -388, -344, 244, 254, 249, 253, 274,
	274, 127, 274, 127, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 269, -350, 151, -350, 522, 522, -356,
	-388, 249, 239, -388, -388, 245, -290, -344, 241, 26,
	241, 36, 36, -350, -350, -350, -271, 176, -350, -350,
	-350, -350, 282, 282, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, 238, -387, -136, 405, 302, 82, -55, 284, -38,
	-190, -288, 239, 240, -387, 271, -190, 221, -190, -414,
	-190, 96, 96, -282, 159, 16, -282, -279, 394, 392,
	379, 384, -282, -282, -282, -282, 285, 377, -345, 239,
	36, 250, 394, 285, 377, 285, 286, 285, 286, 387,
	397, 285, -304, 15, 162, 427, 382, 386, 278, 238,
	279, 240, 396, 286, -304, 90, -283, 159, 285, 394,
	281, -282, -282, -310, -417, -295, -293, -291, 230, 24,
	142, 26, 28, 145, 177, 130, 20, 146, 38, 232,
	345, 249, 176, 245, 457, 225, 73, 526, 428, 430,
	426, 433, 459, 460, 427, 380, 32, 14, 528, 29,
	259, 25, 39, 170, 227, 149, 529, 262, 27, 260,
	118, 121, 531, 23, 76, 254, 15, 247, 41, 17,
	532, 533, 18, 243, 242, 162, 239, 71, 12, 220,
	30, 158, 67, 534, 137, 535, 536, 537, 538, 131,
	69, 159, 21, 667, 431, 432, 34, 627, 514, 273,
	172, 74, 60, 629, 143, 429, 539, 540, 119, 541,
	122, 77, 634, 139, 19, 72, 43, 542, 274, 543,
	244, 668, 544, 415, 545, 160, 228, 456, 70, 161,
	641, 546, 642, 237, 393, 9, 461, 33, 258, 246,
	129, 68, 547, 238, 148, 462, 463, 241, 132, 120,
	8, 136, 35, 13, 75, 78, 434, 435, 436, 58,
	128, 518, 147, 16, 548, 416, 141, 628, 422, 423,
	424, 425, -383, 630, -310, -310, 33, 92, -409, -410,
	-411, 518, 415, 241, -293, -190, -85, 619, 229, -86,
	625, 24, 236, -134, 394, -122, 177, 648, 631, 632,
	633, 630, 391, 638, 636, 634, 285, 635, 88, 139,
	141, 142, 4, -144, 158, -200, 151, 152, 153, 154,
	155, 156, 157, 162, 143, 145, 159, -245, 140, 163,
	164, 165, 166, 167, 168, 169, 171, 170, 172, 173,
	160, 161, 176, 223, 224, -154, -154, -154, -154, -215,
	-221, -220, -417, -217, -383, -292, -299, -417, -417, -154,
	-277, -417, -417, -150, -417, -417, -417, -224, -144, -417,
	-417, -421, -417, -421, -421, -328, -417, -328, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, 221, -417, -417, -417, -417, -417,
	-328, -328, -328, -328, -328, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, 103,
	99, 102, 94, -219, 105, 90, 90, 90, 90, -8,
	-9, -209, -417, -309, -397, -398, -193, -190, -417, 302,
	-293, -293, 271, -234, -12, -8, -229, -235, -231, -8,
	-79, -120, -133, 64, 65, -135, 25, 39, 68, 66,
	24, -418, 89, -418, -252, -418, 88, -37, -255, 87,
	62, 44, 90, 90, 88, 22, -230, -232, -144, 15,
	-297, 4, -296, 26, -293, 90, 221, 15, -191, 30,
	-190, -278, -278, 88, 91, 315, -268, -270, 413, 415,
	151, -298, -293, 90, 32, 89, 88, -190, -317, -320,
	-322, -321, -323, -318, -319, 342, 343, 177, 346, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 359, 33,
	261, 338, 339, 340, 341, 360, 361, 362, 363, 365,
	366, 367, 368, 323, 344, 516, 324, 325, 326, 327,
	328, 329, 331, 332, 335, 333, 334, 336, 337, -384,
	-383, 87, 89, 88, -324, 87, -144, -136, 238, -383,
	239, 239, 239, -79, 456, -350, -350, -350, 269, 20,
	-45, -42, -376, 19, -41, -42, 230, 123, 124, 227,
	87, -339, 87, -348, -384, -383, 87, 137, 244, 136,
	-347, -344, -347, -348, -383, -217, -383, 137, 137, -383,
	-383, -264, -293, -264, -264, 24, -264, 24, -264, 24,
	96, -293, -264, 24, -264, 24, -264, 24, -264, 24,
	-264, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-217, -383, -383, -217, -339, -217, -190, -383, -271, 96,
	96, 96, -350, -350, 96, 90, 90, 90, -350, -350,
	96, 90, -301, -299, 90, 90, -389, 255, 299, 301,
	96, 96, 96, 96, 32, 90, -390, 32, 655, 654,
	656, 657, 658, 90, 96, 32, 96, 32, 96, -293,
	87, -190, -142, 289, 225, 227, 230, 77, 90, 305,
	306, 303, 308, 309, 151, 45, 88, 241, 238, -383,
	-284, 243, -284, -293, -300, -299, -291, -413, 88, -412,
	23, 422, 423, 425, 383, 424, 90, -144, -346, 15,
	162, -304, -304, -282, -190, -346, -304, -282, -190, -282,
	-282, -282, -282, -304, -304, -304, -282, -299, -299, -190,
	-190, -190, -190, -190, -190, -190, -310, -283, -282, 630,
	90, -276, 15, 77, -310, -310, 88, 321, 416, 417,
	-308, 318, -81, -293, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 518, -183, -190, 630, 630, 630, 630,
	630, 630, -144, -144, -144, -144, 541, -207, 119, 143,
	120, 121, -162, -208, -213, -215, 106, 162, 145, 159,
	-245, -150, -154, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -150, -311, -293, 90, 177,
	-158, -157, 105, -406, -158, 515, 88, -220, 221, -144,
	-144, -383, -144, -293, -130, -132, -130, -144, -222, -223,
	147, -217, -144, -418, -418, 96, 105, 168, -126, 25,
	39, -126, -126, -126, -126, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -126, -293, -293, -119, -118,
	438, 439, 440, 441, 443, 444, 445, 448, 449, 453,
	454, 437, 455, 442, 447, 450, 451, 452, 446, 341,
	-144, -144, -144, -144, -144, -144, -87, -144, 130, 131,
	132, -209, -144, -150, -144, -144, -144, -418, -144, -144,
	-144, -210, -209, -382, -381, -380, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -418,
	-144, -164, -148, 96, -260, 105, 92, -144, -144, -131,
	-130, -295, -300, -291, -292, -130, -131, -131, -130, -130,
	-144, -144, -144, -144, -144, -144, -144, -144, -418, -144,
	-144, -144, -144, -144, -252, -418, -209, 88, -399, 415,
	416, 627, -302, 274, -301, 26, -210, 90, 15, -262,
	78, -293, -234, -234, 64, 65, 60, -130, -135, -418,
	-36, 26, -254, -293, 63, 90, -329, -271, 369, 370,
	177, -144, -144, 88, -233, 28, 29, -190, -296, 168,
	-300, -190, -263, 274, -190, -168, -170, -171, -172, -193,
	-216, -417, -173, -8, 537, 534, 15, -183, -184, -192,
	-299, -269, -312, -268, 88, 414, 416, 417, 77, 122,
	-144, -330, 176, -358, -357, -356, -339, -341, -342, -343,
	89, -330, -335, 375, 374, -324, -324, -324, -324, -324,
	-329, -329, -329, -329, 87, 87, -324, -324, -324, -324,
	-332, 87, -332, -332, -333, -332, 87, -333, -334, 87,
	-334, -369, -144, -366, -365, -363, -364, 248, 101, 609,
	565, 518, 558, 599, 78, -361, -233, 96, -418, -142,
	-285, 243, -367, -364, -383, -383, -383, -285, 91, 90,
	91, 90, 91, 90, -111, -59, -1, 667, 668, 669,
	88, 20, -340, -339, -58, 299, -372, -373, 274, -368,
	-362, -348, 137, -347, -348, -348, -383, 88, 30, 127,
	127, 127, 127, 518, 227, 33, -286, 557, 143, 609,
	565, -339, -58, 241, 241, -311, -311, -311, 90, 90,
	-281, 663, -183, -138, 291, 151, 280, 280, 238, 238,
	293, -190, 304, 307, 305, 306, 303, 308, 309, 24,
	24, 24, 24, 24, 292, 294, 296, 282, -190, -190,
	-284, 77, -185, -190, 27, -299, -412, -190, 284, -190,
	-282, -282, -190, -282, -282, -190, -411, 322, -293, 356,
	620, 621, 623, 622, -122, 415, 88, 518, 23, -123,
	23, -417, 119, 120, 121, -208, -150, -154, -150, 142,
	262, -417, -217, -418, -295, 26, 88, 78, -418, 88,
	88, -418, -418, 88, 15, -225, -223, 149, -144, -418,
	88, -418, -418, -418, -209, -144, -144, -144, -144, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -209,
	88, 88, 15, -315, 26, -418, -418, -418, -418, -418,
	-224, -418, 15, -418, 78, 88, 162, 88, -418, -418,
	-418, 88, 88, -418, -418, 88, 88, -418, 88, 88,
	88, -418, 88, 88, 88, 88, -418, -418, -418, -418,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	-418, -94, 542, -418, -418, 88, -418, 88, -418, -417,
	221, -418, -418, -418, -418, -418, 88, 88, 88, 88,
	88, 88, -418, -418, -418, 88, 88, -418, 88, -418,
	88, -418, -398, 626, 416, -197, -196, -194, 75, 242,
	76, -417, -301, -418, -158, -260, -261, -260, -202, -293,
	96, 105, -236, -167, -169, 15, -135, -215, 89, 88,
	-329, -240, -246, -279, -293, 90, 177, -331, 177, -331,
	369, 370, -232, 221, -198, 16, -201, 33, 58, -11,
	-417, -417, 33, 88, -186, -188, -187, -189, 67, 71,
	73, 68, 69, 70, 74, -306, 26, -8, -168, -8,
	-417, -190, -183, -419, 15, 78, -419, 88, 221, -270,
	-273, 418, 415, 421, -383, 90, -110, 88, -356, -343,
	-237, -139, 41, -336, 376, -329, 525, -329, -338, 90,
	-338, 96, 96, 96, 89, -48, -43, -44, 34, 82,
	-363, -350, 90, 40, -350, -350, -293, 89, -233, -138,
	-190, 143, 77, -367, -367, -367, -299, -2, 666, 672,
	137, 87, 379, 19, -254, 88, 89, -218, 300, 89,
	-112, -293, 89, 87, -348, -348, -293, -417, 238, 32,
	32, 609, 565, 557, -58, -218, -217, -383, -330, 665,
	664, 89, 240, 298, -143, 433, -140, 90, 91, -190,
	-190, -190, -190, -190, 230, 227, 402, -407, 310, -407,
	283, 241, -183, -190, 88, -84, 257, 252, -304, -304,
	34, -190, 415, 639, 637, -144, 142, 262, -162, -154,
	-150, -313, 177, 342, 261, 340, 336, 356, 347, 374,
	338, 375, 333, 332, 331, -313, -311, -209, -132, -144,
	-144, 150, -144, 148, -144, -418, -418, -418, -418, -418,
	-229, -144, -144, -144, -418, 177, 342, 15, -144, -311,
	-144, -144, -144, -144, -144, -380, -144, -209, -144, -209,
	-144, -144, -144, -144, -144, -381, -381, -381, -381, -381,
	-209, -209, -209, -209, -417, -293, -97, -96, -95, 592,
	242, -94, -164, -97, -164, -131, -295, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -194, -344, -344,
	-344, -264, 88, -275, 23, 15, 58, 58, -167, -198,
	-168, -135, -293, -243, 619, -249, 47, -247, -248, 48,
	-244, 49, 57, -331, -331, 168, -234, -144, -265, 77,
	-266, -274, -217, -212, -214, -213, -417, -253, -418, -293,
	-264, -266, -170, -171, -171, -170, -171, 67, 67, 67,
	72, 67, 72, 67, -187, -299, -418, -144, -302, 78,
	-168, -168, -192, -299, 168, 415, 419, 420, -356, -405,
	119, 143, 32, 77, 372, 101, -403, 176, 554, 604,
	609, 565, 558, 599, -404, 244, 136, 137, 256, 26,
	42, 89, 88, 89, 88, 89, 89, 88, -287, -286,
	-44, -43, -350, -350, 96, -383, 90, 90, 240, 27,
	-190, 77, 77, 77, -113, 670, 96, 87, -3, 82,
	-144, 87, 20, -339, -217, -374, -325, -375, -326, -327,
	-5, -6, -351, -116, 58, 101, -62, 45, 239, 650,
	651, 127, -417, 663, -366, -254, -370, -372, -190, -147,
	-417, -146, -148, -155, 166, 167, 261, 338, 339, -218,
	-190, -137, 289, 297, 87, -141, 92, -386, 78, 280,
	372, 280, 90, -408, 311, 90, -408, -190, -84, -48,
	-190, -282, -282, 34, -383, -418, -162, -154, -125, 162,
	518, -316, 524, -324, -324, -324, -334, -324, 328, -324,
	328, -324, -418, -418, -418, 88, -418, 23, -418, -144,
	88, -121, 461, 88, 88, -418, 87, 87, -144, -418,
	-418, -418, 88, -418, -418, -418, -418, -418, 88, -418,
	-418, -418, 88, -314, 610, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -93, -294, -293, -94, 574,
	574, -418, -94, -226, 88, -418, -418, 88, -418, 88,
	88, -418, 88, -418, 88, -418, -418, -418, -418, 88,
	-195, 23, -195, -195, -418, -260, -190, -198, -227, 17,
	-240, 52, 348, -251, -250, 56, 48, -248, 20, 50,
	20, 31, -265, 88, 151, 88, -418, -418, 88, 58,
	221, -418, -198, -181, -180, 77, 78, -182, 77, -180,
	67, 67, -255, 88, -263, -168, -198, -198, 221, 119,
	-417, -149, -161, -147, 13, 90, 90, -383, -402, 654,
	655, 32, 96, -350, -350, 137, 137, -190, 87, -329,
	90, -329, 96, 96, 32, 83, 84, 85, 32, 79,
	80, 81, -190, -190, -190, -190, -371, 87, 20, -144,
	87, 151, 89, -254, -254, 276, 162, -350, 648, 282,
	282, -350, -350, -350, -115, -114, 670, 89, -418, 88,
	-337, 518, 521, -144, -156, -156, -255, 89, -379, 518,
	-385, -293, -293, -293, -293, 96, 98, -418, 516, 74,
	519, -418, -329, -144, -144, -144, -234, 90, -144, -144,
	96, 96, -418, -144, -209, -144, -418, -178, -177, -179,
	631, 119, 32, -313, -418, -211, 274, -100, -99, -98,
	15, -418, -144, -144, -144, -144, -144, -144, -144, -417,
	67, 19, 17, -417, -417, -302, -227, -228, 18, 20,
	-241, 54, -239, 53, -239, -250, 20, 20, 90, 20,
	90, 137, -274, -144, -214, 58, -11, -293, -212, -293,
	-229, -144, 87, -144, -158, -198, -198, -144, -204, 485,
	487, 488, 489, 486, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 490, 464, 108, 110, 109, 465,
	466, 467, 342, 512, 513, 507, 510, 511, 509, 508,
	357, 358, 468, 469, 470, 111, 112, 113, 114, 115,
	116, 117, 471, 474, 472, 475, 476, 477, 482, 483,
	478, 479, 480, 481, 484, 501, 502, 503, 504, 505,
	506, 611, 612, 613, 614, 615, 616, 617, 618, 90,
	90, 87, -144, 89, 89, -255, -370, -59, 89, -256,
	-254, 96, 89, 277, -213, -417, 90, -350, -350, -350,
	96, 96, -301, -418, 88, -293, -404, -372, 522, 522,
	-418, 26, -378, -377, -295, 87, 78, 63, 517, 520,
	-418, -418, 88, -418, -418, -418, 89, 89, -418, -418,
	-418, 88, -418, -177, -179, -418, 77, -158, -229, 20,
	-97, 299, 301, -97, -418, 88, -418, -418, 88, -418,
	88, -418, -418, -257, -418, -293, 244, 20, 20, -257,
	-257, -197, -228, -107, -106, -105, 548, -144, -209, -242,
	55, 77, 122, 90, 90, 90, 13, -212, 221, -234,
	-254, -175, 379, -229, -418, -254, 89, 26, 89, 672,
	137, 89, -213, -124, -417, 273, -301, 90, 90, -114,
	-117, -11, 88, 151, -254, -190, 63, -144, -209, -418,
	77, 529, 631, -92, -91, -88, 642, 668, -209, -94,
	-94, -144, -144, -144, 88, -418, -418, -418, -107, 88,
	-104, -103, -293, 77, 122, -266, -293, 89, -418, -417,
	-234, 89, -238, -11, 87, -3, 273, -325, -375, -326,
	-327, -5, -6, -351, -82, 518, -377, -355, -295, 90,
	96, 89, 518, -418, -418, -90, 145, 640, 607, -145,
	-156, -153, 220, -418, 88, -418, 88, -418, 88, -293,
	244, -105, 88, 26, -302, -176, -174, -293, 571, -395,
	-394, 514, -405, -401, 119, 143, 101, -403, 609, 565,
	128, 129, -82, -144, 87, -418, -83, 288, 626, -386,
	519, -90, 641, 585, 560, 585, 560, -144, -144, -144,
	-103, -417, -418, 88, 23, -317, -61, 582, -392, -393,
	77, -396, 385, 581, 602, 119, 90, 89, -254, 249,
	-379, 520, 142, -418, 88, -418, 88, -418, -93, -174,
	578, -330, -158, -393, 77, -392, 77, 14, 13, -4,
	671, 89, 290, -90, -144, -144, -418, -60, 27, -175,
	-391, 257, 252, 255, 33, -391, 96, -4, -418, -418,
	582, 251, 32, 119, -158, -178, -177, -177,
}

var yyDef = [...]int{
	882, -2, -2, 884, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 882, 882, 882, 0, 882, 0,
	0, 882, -2, -2, 882, 1499, 0, 882, 0, 0,
	0, 0, -2, 797, 803, 0, 812, -2, 0, 0,
	882, 882, 2062, 2062, 877, 0, 0, 0, 0, 0,
	882, 882, 882, 882, 1356, 52, 882, 0, 87, 88,
	832, 833, 834, 67, 0, 2060, 883, 1, 3, 73,
	77, 0, 0, 0, 60, 1365, 0, 80, 0, 0,
	886, 0, 0, 1482, 882, 882, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	601, 524, 576, 522, 561, -2, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	400, 400, 0, 0, -2, 510, 510, 510, 1484, 0,
	0, 0, 558, 462, 400, 400, 400, 0, 400, 400,
	400, 400, 0, 0, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 1383, 167, 1500, 1497, 1498, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 0,
	1476, 0, 714, 985, 0, 0, 719, 0, 0, 786,
	723, 724, 786, 0, 786, 786, 786, 786, 0, 0,
	0, 734, 0, 0, 0, 0, 783, 0, 750, 751,
	0, 783, 0, 757, 789, 0, 0, 763, 786, 786,
	766, 767, 2063, 0, 2063, 2063, 1467, 0, 780, 778,
	792, 793, 42, 796, 799, 800, 801, 802, 805, 0,
	816, 819, 1493, 1494, 0, 821, 828, 845, 846, 0,
	878, 879, 47, 1133, 0, 1007, 1012, 1023, 1038, 1039,
	1040, 1041, 1042, 1044, 1045, 1046, 0, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 0, 1114, 1060, 0,
	0, 0, 0, 1329, 0, 0, 1290, 1290, 1148, 1290,
	1292, 1292, 1706, 1842, 1850, 1970, 1668, 1673, 1674, 1675,
	1963, 1964, 1965, 1966, 2005, 2006, 2010, 1766, 0, 0,
	0, 2059, 1803, 1811, 1812, 1836, 1935, 1991, 1685, 1831,
	1900, 1763, 1785, 1786, 1917, 1918, 1807, 1808, 1789, 1801,
	1804, 1792, 1793, 1795, 1797, 1802, 1809, 1815, 1794, 1814,
	1813, 0, 1790, 1791, 1796, 1806, 1810, 1798, 1799, 1800,
	1805, 1816, 0, 0, 0, 0, 0, 1229, 1230, 1231,
	1232, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	1342, 1343, 45, 46, 1132, 1463, 1292, 1292, 1292, 1292,
	1292, 1074, 1075, 1076, 1077, 1078, 1102, 1103, 1109, 1110,
	1912, 1913, 1914, 1915, 1747, 2000, 1755, 1756, 1895, 1896,
	1768, 1769, 2034, 2035, -2, -2, -2, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 1710, 1981, 1982, 229,
	0, 0, 297, 298, 294, 295, 296, 1116, 1117, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 285, 286, 287, 288, 289, 290,
	291, 2062, 0, 855, 0, 0, 0, 0, 0, 1365,
	0, 1357, 1356, 65, 0, 882, -2, 0, 0, 0,
	0, 49, 0, 54, 942, 885, 79, 78, 1414, 0,
	0, 0, 61, 1366, 69, 71, 1367, 0, 887, 888,
	0, 918, 922, 0, 0, 0, 1483, 1482, 1482, 104,
	0, 0, 105, 125, 126, 127, 0, 0, 111, 112,
	1469, 1470, 0, 0, 179, 180, 0, 43, 427, 0,
	175, 0, 420, 359, 0, 1383, 0, 0, 0, 0,
	0, 882, 0, 1477, 156, 157, 164, 165, 166, 400,
	400, 400, 573, 0, 0, 167, 167, 531, 532, 533,
	0, 0, -2, 425, 0, 511, 0, 0, 414, 414,
	418, 416, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 401, 0, 571, 572, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 1486,
	0, 548, 549, 0, 0, 0, 400, 400, 0, 0,
	0, 0, 400, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 1405, 0, 0, 0, -2, 0, 706,
	0, 0, 0, 1478, 1478, 0, 713, 0, 715, 1396,
	717, 720, 721, 722, 0, 0, 725, 0, 783, 783,
	781, 782, 727, 728, 729, 730, 786, 0, 0, 409,
	410, 411, 783, 786, 0, 786, 786, 786, 786, 783,
	783, 783, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 789, 786, 0, 758, 0, 759, 760,
	761, 764, 765, 768, 2064, 2065, 1495, 1496, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 2063, 2063, 772, 776, 1468, 798, 804, 806,
	807, 0, 0, 817, 820, 839, 51, 1754, 827, 51,
	829, 830, 831, 857, 858, 863, 0, 0, 0, 0,
	869, 870, 871, 0, 0, 874, 875, 876, 0, 0,
	0, 0, 0, 1005, 0, 0, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 1047, 1048, 1049, 1050, 1053,
	0, 1065, 0, 1067, 1338, -2, 0, 0, 0, 1058,
	1059, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 1146, 0, 1147, 1149, 1150, 0, 1151, 892, 892,
	892, 892, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1488, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 902, 0, 0, 902, 902, 0, 0,
	222, 223, 224, 225, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	242, 243, 244, 245, 246, 299, 247, 248, 249, 1132,
	0, 0, 0, 48, 847, 848, 0, 968, 1488, 0,
	0, 898, 0, 59, 68, 70, 1365, 63, 1365, 0,
	904, 0, 0, -2, -2, 905, 911, 912, 913, 914,
	915, 56, 2061, 57, 0, 76, 0, 50, 0, 0,
	0, 0, 373, 1417, 0, 0, 1358, 1359, 1362, 0,
	919, 1848, 923, 0, 925, 926, 0, 0, 102, 0,
	984, 0, 0, 0, 113, 0, 115, 116, 0, 0,
	0, 384, 1471, 1472, 1473, -2, 407, 0, 384, 368,
	307, 308, 309, 359, 311, 359, 359, 359, 359, 373,
	373, 373, 373, 342, 343, 344, 345, 346, 0, 0,
	328, 359, 359, 359, 359, 349, 350, 351, 352, 353,
	354, 355, 356, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 361, 361, 361, 361, 361, 365, 365, 0,
	44, 0, 388, 0, 1362, 0, 0, 1405, 1480, 1490,
	0, 0, 0, 1480, 134, 0, 0, 0, 574, 612,
	525, 562, 575, 0, 528, 529, -2, 0, 0, 510,
	0, 512, 0, 408, 0, -2, 0, 418, 0, 414,
	418, 415, 418, 406, 419, 552, 553, 554, 0, 556,
	557, 642, 954, 0, 0, 0, 0, 0, 648, 649,
	650, 0, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 0, 0, 0, 512, 0, 559, 0, 0, 464,
	465, 466, 0, 0, 469, 470, 471, 472, 0, 0,
	475, 476, 477, 971, 972, 478, 479, 504, 505, 506,
	480, 481, 482, 483, 484, 485, 486, 498, 499, 500,
	501, 502, 503, 487, 488, 489, 490, 491, 492, 495,
	0, 149, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	0, 0, 0, 901, 986, 1501, 1502, 716, 0, 1397,
	0, 1400, 1401, 1402, 1403, 1404, 787, 788, 0, 412,
	413, 786, 786, 731, 773, 0, 786, 735, 774, 736,
	738, 737, 739, 752, 753, 786, 742, 784, 785, 743,
	744, 745, 746, 747, 748, 749, 769, 754, 755, 756,
	790, 0, 794, 795, 770, 771, 0, 0, 810, 811,
	0, 818, 842, 840, 841, 843, 835, 836, 837, 838,
	0, 844, 0, 0, 860, 98, 865, 866, 867, 868,
	880, 873, 1134, 1002, 1003, 1004, 0, 1006, 1009, 0,
	1118, 1120, 1011, 1013, 1129, 1130, 1131, 0, 0, 0,
	0, 0, 1017, 1021, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1043, 1306, 1307, 1308,
	1062, 300, 301, 0, 1063, 0, 0, 0, 0, 0,
	0, 0, 1133, 1064, 0, 916, 0, 0, 1336, 1333,
	0, 0, 0, 1291, 1293, 0, 0, 0, 0, 893,
	894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1309, 0, 0, 0, 0, 0, 1329, 0, 1069, 1070,
	1071, 0, 0, 0, 0, 0, 0, 1189, 0, 0,
	0, 0, 1489, 0, 144, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 1234, 1235, 1236, 41, 0, 0, 0,
	903, 1340, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 1461, 0, 0, 850, 851,
	853, 0, 988, 0, 969, 0, 0, 856, 0, 897,
	0, 900, 62, 64, 909, 910, 0, 927, 906, 58,
	53, 0, 0, 946, 1415, 373, 1437, 0, 382, 382,
	379, 1368, 1369, 0, 1361, 1363, 1364, 81, 924, 920,
	0, 1000, 0, 0, 983, 0, 930, 932, 933, 934,
	966, 0, 937, 938, 0, 0, 0, 0, 0, 100,
	985, 106, 0, 114, 0, 0, 119, 120, 107, 108,
	109, 110, 0, 601, -2, 459, 181, 183, 184, 185,
	176, -2, 371, 369, 370, 310, 373, 373, 336, 337,
	338, 339, 340, 341, 0, 0, 329, 330, 331, 332,
	321, 0, 322, 323, 324, 363, 0, 325, 326, 0,
	327, 426, 0, 1370, 389, 390, 392, 400, 0, 395,
	396, 0, 400, 400, 0, 421, 422, 0, 1362, 1387,
	0, 0, 0, 1491, 1490, 1490, 1490, 0, 169, 170,
	171, 172, 173, 174, 637, 0, 0, 613, 635, 636,
	167, 0, 0, 177, 514, 513, 0, 669, 0, 424,
	0, 0, 418, 418, 403, 404, 555, 0, 0, 644,
	645, 646, 647, 0, 0, 0, 541, 453, 0, 542,
	543, 512, 514, 0, 0, 384, 467, 468, 473, 474,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 590, 593, 595, 516, 599, 592,
	594, 596, 516, 600, 1384, 1385, 1386, 0, 0, 707,
	0, 0, 450, 96, 1479, 712, 1398, 718, 1399, 783,
	741, 775, 783, 733, 740, 762, 808, 809, 814, 822,
	823, 824, 825, 826, 864, 0, 0, 0, 0, 872,
	0, 0, 1010, 1119, 1121, 1014, 0, 1018, 1022, 0,
	0, 0, 1068, 1066, 1340, 0, 0, 0, 1115, 0,
	0, 1137, 1138, 0, 0, 0, 1334, 0, 0, 1144,
	0, 1294, 1295, 1152, 0, 0, 0, 0, 0, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1356,
	0, 0, 0, 0, 0, 1173, 1174, 1175, 1176, 1177,
	0, 1179, 0, 1180, 0, 0, 0, 0, 1187, 1188,
	1190, 0, 0, 1193, 1194, 0, 0, 1195, 0, 0,
	0, 1199, 0, 0, 0, 0, 1208, 1209, 1210, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 1223, 0, 1097, 0, 0, 1097, 0, 1135, 902,
	0, 1296, 1297, 1298, 1299, 1300, 0, 0, 0, 0,
	0, 0, 1256, 1257, 1259, 0, 0, 1262, 0, 1264,
	0, 1462, 849, 852, 854, 940, 989, 990, 0, 0,
	0, 0, 970, 1487, 895, 896, 899, 948, 0, 1344,
	0, 0, 927, 1000, 928, 0, 907, 55, 943, 0,
	1419, 1418, 1431, 1444, 382, 382, 376, 377, 383, 378,
	380, 381, 1360, 0, 1365, 0, 1455, 0, 0, 1447,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	0, 976, 0, 0, 0, 0, 967, 938, 0, 939,
	0, -2, 0, 0, 94, 95, 0, 0, 0, 117,
	118, 0, 0, 124, 385, 386, 158, 167, 461, 182,
	434, 0, 0, 306, 372, 333, 334, 335, 0, 357,
	0, 0, 0, 0, 455, 130, 1374, 1373, 400, 400,
	391, 0, 394, 0, 0, 0, 1492, 360, 423, 0,
	148, 0, 0, 0, 0, 0, 154, 607, 0, 0,
	614, 0, 0, 0, 523, 0, 534, 535, 0, 641,
	-2, 703, 388, 0, 402, 405, 955, 0, 0, 536,
	0, 539, 540, 454, 514, 545, 546, 560, 547, 496,
	497, 494, 0, 0, 1406, 1407, 1412, 1410, 1411, 135,
	581, 583, 582, 586, 0, 0, 0, 518, 0, 518,
	579, 0, 450, 1370, 0, 711, 451, 452, 786, 786,
	859, 99, 0, 862, 0, 0, 0, 0, 1015, 1019,
	1301, 1327, 359, 359, 1314, 359, 365, 1317, 359, 1319,
	359, 1322, 359, 1325, 1326, 0, 0, 0, 917, 0,
	0, 1143, 1337, 0, 0, 1153, 1154, 1155, 1156, 1157,
	1331, 0, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 147, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 1096, 0, 1098, 1099, 0,
	0, 1225, 0, 0, 1237, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 991, 996, 996,
	996, 0, 0, 0, 1474, 1475, 1345, 1346, 1000, 1347,
	929, 908, 947, 1437, 0, 1430, 0, -2, 1439, 0,
	0, 0, 1445, 374, 375, 921, 82, 1001, 85, 0,
	1455, 1464, 0, 1446, 1457, 1459, 0, 0, 0, 1451,
	0, 1000, 931, 962, 964, 0, 959, 974, 975, 977,
	0, 979, 0, 981, 982, 942, 936, 0, 102, 0,
	1000, 1000, 101, 0, 987, 121, 122, 123, 460, 186,
	191, 0, 0, 0, 196, 0, 198, 0, 0, 0,
	203, 204, 400, 400, 435, 0, 303, 305, 0, 0,
	189, 373, 0, 373, 0, 364, 366, 0, 436, 456,
	1371, 1372, 0, 0, 393, 397, 398, 399, 0, 1481,
	150, 0, 0, 0, 610, 0, 638, 0, 0, 0,
	0, 0, 0, 178, 515, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 0, 400, 0, 0, 0, 400,
	400, 400, 0, 695, 387, 0, 0, 666, 663, 537,
	0, 227, 228, 230, 0, 0, 0, 0, 0, 544,
	942, 1388, 1389, 1390, 0, 1409, 1413, 138, 0, 0,
	0, 0, 591, 597, 0, 517, 598, 708, 709, 710,
	97, 726, 732, 861, 881, 1008, 1016, 1020, 0, 0,
	0, 0, 1328, 1312, 373, 1315, 1316, 1318, 1320, 1321,
	1323, 1324, 1056, 1057, 1061, 0, 1140, 0, 1142, 1335,
	0, 1365, 0, 0, 0, 1171, 0, 0, 0, 1182,
	1181, 1183, 0, 1185, 1186, 1191, 1192, 1196, 0, 1198,
	1200, 1201, 0, 0, 0, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 0, 1090, 1093, 1224, 1100,
	1101, 1106, 1227, 0, 0, 1136, 1239, 0, 1244, 0,
	0, 1250, 0, 1254, 0, 1260, 1261, 1263, 1265, 0,
	0, 0, 0, 0, 968, 949, 66, 1347, 1349, 0,
	1424, 1422, 1422, 1432, 1433, 0, 0, 1440, 0, 0,
	0, 0, 86, 0, 0, 0, 1460, 0, 0, 0,
	0, 103, 1356, 956, 963, 0, 0, 957, 0, 958,
	978, 980, 935, 0, 1000, 1000, 92, 93, 0, 192,
	0, 194, 220, 221, 0, 197, 199, 200, 201, 207,
	208, 209, 202, 0, 0, 302, 304, 0, 0, 347,
	358, 348, 0, 0, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 942, 151, 152, 153, 602, 0, 612, 0,
	944, 0, 605, 0, 526, 0, 0, 0, 400, 400,
	400, 0, 0, 0, 0, 680, 0, 0, 643, 0,
	651, 0, 0, 0, 231, 232, 0, 1408, 580, 0,
	136, 137, 0, 0, 585, 519, 520, 1054, 0, 0,
	0, 1055, 1313, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 1178, 0, 0, 0, 1204, 0, 0, 0,
	632, 633, 0, 1268, 1095, 1356, 0, 1097, 1107, 1108,
	0, 1097, 1238, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 988, 1349, 1354, 0, 0,
	1427, 0, 1420, 1423, 1421, 1434, 0, 0, 1441, 0,
	1443, 0, 1465, 1466, 1458, 0, 1450, 1453, 1449, 1452,
	1365, 960, 0, 965, 0, 1356, 91, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 0, 0, 362, 367, 0, 0, 0, 603, 0,
	945, 615, 606, 0, 693, 0, 697, 0, 0, 0,
	700, 701, 702, 679, 0, 683, 428, 667, 664, 665,
	538, 0, 139, 140, 0, 0, 0, 1302, 0, 1305,
	1139, 1141, 0, 1168, 1169, 1170, 1310, 1311, 1184, 1197,
	1202, 0, 1205, 0, 0, 1206, 0, 634, 1086, 0,
	0, 1104, 1105, 0, 1240, 0, 1245, 1246, 0, 1251,
	0, 1255, 1266, 0, 993, 950, 951, 998, 999, 0,
	0, 941, 1354, 84, 1355, 1352, 0, 1350, 1348, 1416,
	0, 1425, 1426, 1435, 1436, 1442, 0, 1448, 0, 89,
	0, 0, 0, 1365, 193, 0, 212, 0, 611, 0,
	614, 604, 691, 692, 0, 704, 696, 698, 699, 681,
	-2, 1391, 0, 0, 0, 587, 1303, 0, 0, 1207,
	0, 630, 631, 1094, 1087, 0, 1072, 1073, 1091, 1226,
	1228, 0, 0, 0, 0, 992, 994, 995, 83, 0,
	1351, 1112, 0, 1428, 1429, 1456, 1454, 961, 968, 0,
	90, 441, 434, 1391, 0, 0, 0, 684, 685, 686,
	687, 688, 689, 690, 577, 1393, 141, 142, 507, 508,
	509, 135, 0, 1145, 1203, 1088, 0, 0, 0, 0,
	1084, 1085, 0, 1241, 0, 1247, 0, 1252, 0, 952,
	953, 1353, 0, 0, 616, 0, 618, 0, -2, 429,
	442, 0, 187, 213, 214, 0, 0, 217, 218, 219,
	210, 211, 131, 0, 0, 705, 0, 1394, 1395, 138,
	0, 0, 1079, 1080, 1081, 1082, 1083, 0, 0, 0,
	1113, 1092, 617, 0, 0, 384, 0, 627, 430, 431,
	0, 437, 438, 439, 440, 215, 216, 639, 0, 0,
	584, 1304, 0, 1242, 0, 1248, 0, 1253, 0, 619,
	620, 628, 0, 432, 0, 433, 0, 0, 0, 608,
	0, 639, 1392, 1089, 0, 0, 1111, 0, 629, 625,
	443, 445, 446, 0, 0, 444, 640, 609, 1243, 1249,
	0, 447, 448, 449, 621, 622, 623, 624,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 673,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:695
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:705
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:750
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:756
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:957
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1005
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1015
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1170
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1174
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1190
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1205
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1210
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1216
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1236
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1242
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1258
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1272
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1277
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1294
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1301
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1312
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1337
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1395
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1399
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1405
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1415
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1420
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1453
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1462
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1554
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1570
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1574
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1578
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1584
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1588
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1608
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1619
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1630
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1973
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1977
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1985
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2234
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2239
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2273
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2368
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2377
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2383
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2446
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2521
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2531
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2535
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2541
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2545
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2551
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2555
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2561
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2575
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2598
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2610
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2708
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2722
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2916
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2934
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2938
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2969
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3111
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3395
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3411
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3423
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3432
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3447
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3461
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3465
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3471
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3477
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3483
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3493
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3497
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3503
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3509
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3515
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3521
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3531
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3535
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3539
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3545
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3551
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3557
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3561
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3565
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3571
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3575
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3580
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3584
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3589
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3599
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3688
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3702
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3706
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3717
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3721
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3726
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3731
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3736
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3746
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3758
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3763
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3769
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3775
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3785
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3790
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3794
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3799
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3804
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3814
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3820
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3826
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3833
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3840
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3847
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3855
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3859
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3865
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3871
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3877
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3883
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3889
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3895
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3907
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3929
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3933
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:3984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4282
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4286
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4296
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4373
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4379
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4389
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4393
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4397
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4419
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4430
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4436
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4441
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4445
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4449
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4453
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4457
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4461
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4465
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4470
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4474
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4478
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4482
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4553
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4565
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4575
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4581
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4585
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4589
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4593
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4611
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4615
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4619
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4623
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4631
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4641
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4718
		{
			setAllowComments(yylex, true)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4728
		{
			yyVAL.strs = nil
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4732
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4751
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = SQLCacheStr
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4772
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4778
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4782
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4792
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4801
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4807
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4811
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4820
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4825
		{
			yyVAL.strs = nil
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4841
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = SQLCacheStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = DistinctStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = DistinctStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = StraightJoinHint
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4877
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4887
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4891
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4895
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4899
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4904
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4924
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4928
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4934
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4940
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4954
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4958
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4962
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4966
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4972
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4976
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4982
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4986
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4995
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5010
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5014
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5020
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5030
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5034
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5042
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5048
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5065
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5069
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5073
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5077
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5083
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5085
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5089
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5095
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5097
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5100
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.empty = struct{}{}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5105
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5113
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5126
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5130
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5134
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5140
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5146
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5150
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5154
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5158
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5164
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5168
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5178
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5192
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5207
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5213
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5217
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5223
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5227
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5231
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5235
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5240
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5244
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5248
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5252
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5542
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5546
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5552
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5556
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5562
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5566
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5570
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5576
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5580
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5587
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5591
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5595
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5599
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5603
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5609
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5613
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5617
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5621
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5625
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5644
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5650
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5654
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5663
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5668
		{
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5677
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5683
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5687
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5699
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5705
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5709
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5715
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5719
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5725
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5729
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5741
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5747
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5751
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5757
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5763
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5767
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = ""
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5783
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5787
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5794
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5798
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5802
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5806
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5812
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5816
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5820
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5824
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5828
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5832
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5836
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5842
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5846
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5850
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5857
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5863
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5867
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6429
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6437
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6441
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6445
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6449
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6453
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6457
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6461
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6465
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6469
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6473
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6477
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6483
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6487
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6491
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6495
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6499
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6503
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6507
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6511
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6515
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6570
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6574
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6578
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6582
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6586
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6592
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6642
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6646
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6650
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6654
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6658
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6662
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6666
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6670
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6674
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6678
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6702
		{
			yyVAL.str = string("")
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6706
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6712
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6716
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6722
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6737
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6741
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6745
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6749
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6788
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6803
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6809
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6813
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6822
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6831
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6837
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6843
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6847
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6853
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6858
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6862
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6866
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6875
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6881
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6885
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6889
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6898
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6902
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6906
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6910
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6920
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6924
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6928
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6932
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6938
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6942
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6946
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6950
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6955
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6959
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6963
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6967
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6982
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6986
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6991
		{
			yyVAL.str = ""
		}
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7000
		{
			yyVAL.str = "cascaded"
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7008
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7017
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7021
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7027
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7031
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7035
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7039
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7043
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7047
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7057
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7063
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7069
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7075
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7084
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7088
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = ""
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7103
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7107
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7113
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7117
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7121
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7126
		{
			yyVAL.str = ""
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7130
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7134
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7139
		{
			yyVAL.str = ""
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7143
		{
			yyVAL.str = " header"
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7148
		{
			yyVAL.str = ""
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7152
		{
			yyVAL.str = " manifest on"
		}
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7156
		{
			yyVAL.str = " manifest off"
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7161
		{
			yyVAL.str = ""
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = " overwrite on"
		}
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = " overwrite off"
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7175
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7180
		{
			yyVAL.str = ""
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7184
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7190
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7194
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7200
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7204
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7209
		{
			yyVAL.str = ""
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7213
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7219
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7223
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7229
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7233
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7237
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7242
		{
			yyVAL.str = ""
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = " optionally"
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7259
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7263
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7267
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7271
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7275
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7281
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7285
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7289
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7293
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7302
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7308
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7312
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7318
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7322
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7328
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7332
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7337
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7347
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7351
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7357
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7364
		{
			yyVAL.str = "charset"
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7374
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7378
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7382
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7398
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7401
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7403
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7406
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7408
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7411
		{
			yyVAL.empty = struct{}{}
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7413
		{
			yyVAL.empty = struct{}{}
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7415
		{
			yyVAL.empty = struct{}{}
		}
	case 1487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7419
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7428
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7435
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7439
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7449
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7456
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7466
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7472
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7476
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7483
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8067
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8076
		{
			decNesting(yylex)
		}
	case 2062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8081
		{
			skipToEnd(yylex)
		}
	case 2063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8086
		{
			skipToEnd(yylex)
		}
	case 2064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8090
		{
			skipToEnd(yylex)
		}
	case 2065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8094
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
