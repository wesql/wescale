// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const FILTERS = 57629
const WITHPATTERN = 57630
const PRIORITY = 57631
const PLANS = 57632
const TABLE_NAME = 57633
const QUERY_REGEX = 57634
const QUERY_TEMPLATE = 57635
const REQUEST_IP_REGEX = 57636
const USER_REGEX = 57637
const LEADING_COMMENT_REGEX = 57638
const TRAILING_COMMENT_REGEX = 57639
const BIND_VAR_CONDS = 57640
const ACTION_ARGS = 57641
const BRANCH = 57642
const DIFF = 57643
const PREPARE_MERGE_BACK = 57644
const MERGE_BACK = 57645
const CLEAN_UP = 57646
const CDC = 57647
const CDCS = 57648
const WASM_BINARY_NAME = 57649
const ENV = 57650
const VITESS_MIGRATION = 57651
const CANCEL = 57652
const RETRY = 57653
const LAUNCH = 57654
const COMPLETE = 57655
const CLEANUP = 57656
const THROTTLE = 57657
const UNTHROTTLE = 57658
const EXPIRE = 57659
const RATIO = 57660
const PAUSE = 57661
const RESUME = 57662
const SCHEMA_MIGRATION = 57663
const VITESS_THROTTLER = 57664
const DML_JOB = 57665
const DETAILS = 57666
const TIME_PERIOD = 57667
const BEGIN = 57668
const START = 57669
const TRANSACTION = 57670
const COMMIT = 57671
const ROLLBACK = 57672
const SAVEPOINT = 57673
const RELEASE = 57674
const WORK = 57675
const CONSISTENT = 57676
const SNAPSHOT = 57677
const BIT = 57678
const TINYINT = 57679
const SMALLINT = 57680
const MEDIUMINT = 57681
const INT = 57682
const INTEGER = 57683
const BIGINT = 57684
const INTNUM = 57685
const REAL = 57686
const DOUBLE = 57687
const FLOAT_TYPE = 57688
const FLOAT4_TYPE = 57689
const FLOAT8_TYPE = 57690
const DECIMAL_TYPE = 57691
const NUMERIC = 57692
const TIME = 57693
const TIMESTAMP = 57694
const DATETIME = 57695
const YEAR = 57696
const CHAR = 57697
const VARCHAR = 57698
const BOOL = 57699
const CHARACTER = 57700
const VARBINARY = 57701
const NCHAR = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const BLOB = 57707
const TINYBLOB = 57708
const MEDIUMBLOB = 57709
const LONGBLOB = 57710
const JSON = 57711
const JSON_SCHEMA_VALID = 57712
const JSON_SCHEMA_VALIDATION_REPORT = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMCOLLECTION = 57719
const GEOMETRYCOLLECTION = 57720
const MULTIPOINT = 57721
const MULTILINESTRING = 57722
const MULTIPOLYGON = 57723
const ASCII = 57724
const UNICODE = 57725
const NULLX = 57726
const AUTO_INCREMENT = 57727
const APPROXNUM = 57728
const SIGNED = 57729
const UNSIGNED = 57730
const ZEROFILL = 57731
const CODE = 57732
const COLLATION = 57733
const COLUMNS = 57734
const DATABASES = 57735
const ENGINES = 57736
const EVENT = 57737
const EXTENDED = 57738
const FIELDS = 57739
const FULL = 57740
const FUNCTION = 57741
const GTID_EXECUTED = 57742
const KEYSPACES = 57743
const OPEN = 57744
const PLUGINS = 57745
const PRIVILEGES = 57746
const PROCESSLIST = 57747
const SCHEMAS = 57748
const TABLES = 57749
const TRIGGERS = 57750
const USER = 57751
const VGTID_EXECUTED = 57752
const VITESS_KEYSPACES = 57753
const VITESS_METADATA = 57754
const VITESS_MIGRATIONS = 57755
const VITESS_REPLICATION_STATUS = 57756
const VITESS_SHARDS = 57757
const VITESS_TABLETS = 57758
const VITESS_TARGET = 57759
const VSCHEMA = 57760
const VITESS_THROTTLED_APPS = 57761
const WORKLOAD = 57762
const LASTSEENGTID = 57763
const FAILPOINTS = 57764
const TABLETS_PLANS = 57765
const DML_JOBS = 57766
const NAMES = 57767
const GLOBAL = 57768
const SESSION = 57769
const ISOLATION = 57770
const LEVEL = 57771
const READ = 57772
const WRITE = 57773
const ONLY = 57774
const REPEATABLE = 57775
const COMMITTED = 57776
const UNCOMMITTED = 57777
const SERIALIZABLE = 57778
const FAST = 57779
const QUICK = 57780
const CHANGED = 57781
const MEDIUM = 57782
const CURRENT_TIMESTAMP = 57783
const DATABASE = 57784
const CURRENT_DATE = 57785
const NOW = 57786
const CURRENT_TIME = 57787
const LOCALTIME = 57788
const LOCALTIMESTAMP = 57789
const CURRENT_USER = 57790
const UTC_DATE = 57791
const UTC_TIME = 57792
const UTC_TIMESTAMP = 57793
const DAY = 57794
const DAY_HOUR = 57795
const DAY_MICROSECOND = 57796
const DAY_MINUTE = 57797
const DAY_SECOND = 57798
const HOUR = 57799
const HOUR_MICROSECOND = 57800
const HOUR_MINUTE = 57801
const HOUR_SECOND = 57802
const MICROSECOND = 57803
const MINUTE = 57804
const MINUTE_MICROSECOND = 57805
const MINUTE_SECOND = 57806
const MONTH = 57807
const QUARTER = 57808
const SECOND = 57809
const SECOND_MICROSECOND = 57810
const YEAR_MONTH = 57811
const WEEK = 57812
const REPLACE = 57813
const CONVERT = 57814
const CAST = 57815
const SUBSTR = 57816
const SUBSTRING = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const REGEXP_INSTR = 57858
const REGEXP_LIKE = 57859
const REGEXP_REPLACE = 57860
const REGEXP_SUBSTR = 57861
const ExtractValue = 57862
const UpdateXML = 57863
const GET_LOCK = 57864
const RELEASE_LOCK = 57865
const RELEASE_ALL_LOCKS = 57866
const IS_FREE_LOCK = 57867
const IS_USED_LOCK = 57868
const LOCATE = 57869
const POSITION = 57870
const MATCH = 57871
const AGAINST = 57872
const BOOLEAN = 57873
const LANGUAGE = 57874
const WITH = 57875
const QUERY = 57876
const EXPANSION = 57877
const WITHOUT = 57878
const VALIDATION = 57879
const UNUSED = 57880
const ARRAY = 57881
const BYTE = 57882
const CUME_DIST = 57883
const DESCRIPTION = 57884
const DENSE_RANK = 57885
const EMPTY = 57886
const EXCEPT = 57887
const FIRST_VALUE = 57888
const GROUPING = 57889
const GROUPS = 57890
const JSON_TABLE = 57891
const LAG = 57892
const LAST_VALUE = 57893
const LATERAL = 57894
const LEAD = 57895
const NTH_VALUE = 57896
const NTILE = 57897
const OF = 57898
const OVER = 57899
const PERCENT_RANK = 57900
const RANK = 57901
const RECURSIVE = 57902
const ROW_NUMBER = 57903
const SYSTEM = 57904
const WINDOW = 57905
const ACTIVE = 57906
const ADMIN = 57907
const AUTOEXTEND_SIZE = 57908
const BUCKETS = 57909
const CLONE = 57910
const COLUMN_FORMAT = 57911
const COMPONENT = 57912
const DEFINITION = 57913
const ENFORCED = 57914
const ENGINE_ATTRIBUTE = 57915
const EXCLUDE = 57916
const FOLLOWING = 57917
const GET_MASTER_PUBLIC_KEY = 57918
const HISTOGRAM = 57919
const HISTORY = 57920
const INACTIVE = 57921
const INVISIBLE = 57922
const LOCKED = 57923
const MASTER_COMPRESSION_ALGORITHMS = 57924
const MASTER_PUBLIC_KEY_PATH = 57925
const MASTER_TLS_CIPHERSUITES = 57926
const MASTER_ZSTD_COMPRESSION_LEVEL = 57927
const NESTED = 57928
const NETWORK_NAMESPACE = 57929
const NOWAIT = 57930
const NULLS = 57931
const OJ = 57932
const OLD = 57933
const OPTIONAL = 57934
const ORDINALITY = 57935
const ORGANIZATION = 57936
const OTHERS = 57937
const PARTIAL = 57938
const PATH = 57939
const PERSIST = 57940
const PERSIST_ONLY = 57941
const PRECEDING = 57942
const PRIVILEGE_CHECKS_USER = 57943
const PROCESS = 57944
const RANDOM = 57945
const REFERENCE = 57946
const REQUIRE_ROW_FORMAT = 57947
const RESOURCE = 57948
const RESPECT = 57949
const RESTART = 57950
const RETAIN = 57951
const REUSE = 57952
const ROLE = 57953
const SECONDARY = 57954
const SECONDARY_ENGINE = 57955
const SECONDARY_ENGINE_ATTRIBUTE = 57956
const SECONDARY_LOAD = 57957
const SECONDARY_UNLOAD = 57958
const SIMPLE = 57959
const SKIP = 57960
const SRID = 57961
const THREAD_PRIORITY = 57962
const TIES = 57963
const UNBOUNDED = 57964
const VCPU = 57965
const VISIBLE = 57966
const RETURNING = 57967
const FORMAT_BYTES = 57968
const FORMAT_PICO_TIME = 57969
const PS_CURRENT_THREAD_ID = 57970
const PS_THREAD_ID = 57971
const GTID_SUBSET = 57972
const GTID_SUBTRACT = 57973
const WAIT_FOR_EXECUTED_GTID_SET = 57974
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57975
const FORMAT = 57976
const TREE = 57977
const VITESS = 57978
const TRADITIONAL = 57979
const VTEXPLAIN = 57980
const VEXPLAIN = 57981
const PLAN = 57982
const LOCAL = 57983
const LOW_PRIORITY = 57984
const KILL = 57985
const USERS = 57986
const NO_WRITE_TO_BINLOG = 57987
const LOGS = 57988
const ERROR = 57989
const GENERAL = 57990
const HOSTS = 57991
const OPTIMIZER_COSTS = 57992
const USER_RESOURCES = 57993
const SLOW = 57994
const CHANNEL = 57995
const RELAY = 57996
const EXPORT = 57997
const CURRENT = 57998
const ROW = 57999
const ROWS = 58000
const AVG_ROW_LENGTH = 58001
const CONNECTION = 58002
const CHECKSUM = 58003
const DELAY_KEY_WRITE = 58004
const ENCRYPTION = 58005
const ENGINE = 58006
const INSERT_METHOD = 58007
const MAX_ROWS = 58008
const MIN_ROWS = 58009
const PACK_KEYS = 58010
const PASSWORD = 58011
const FIXED = 58012
const DYNAMIC = 58013
const COMPRESSED = 58014
const REDUNDANT = 58015
const COMPACT = 58016
const ROW_FORMAT = 58017
const STATS_AUTO_RECALC = 58018
const STATS_PERSISTENT = 58019
const STATS_SAMPLE_PAGES = 58020
const STORAGE = 58021
const MEMORY = 58022
const DISK = 58023
const PARTITIONS = 58024
const LINEAR = 58025
const RANGE = 58026
const LIST = 58027
const SUBPARTITION = 58028
const SUBPARTITIONS = 58029
const HASH = 58030

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"FILTERS",
	"WITHPATTERN",
	"PRIORITY",
	"PLANS",
	"TABLE_NAME",
	"QUERY_REGEX",
	"QUERY_TEMPLATE",
	"REQUEST_IP_REGEX",
	"USER_REGEX",
	"LEADING_COMMENT_REGEX",
	"TRAILING_COMMENT_REGEX",
	"BIND_VAR_CONDS",
	"ACTION_ARGS",
	"BRANCH",
	"DIFF",
	"PREPARE_MERGE_BACK",
	"MERGE_BACK",
	"CLEAN_UP",
	"CDC",
	"CDCS",
	"WASM_BINARY_NAME",
	"ENV",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 61,
	14, 61,
	-2, 50,
	-1, 62,
	1, 247,
	706, 247,
	-2, 255,
	-1, 63,
	135, 255,
	176, 255,
	375, 255,
	-2, 609,
	-1, 73,
	36, 908,
	240, 908,
	251, 908,
	286, 922,
	287, 922,
	409, 910,
	414, 910,
	422, 910,
	424, 910,
	-2, 1016,
	-1, 78,
	242, 946,
	-2, 944,
	-1, 143,
	239, 1610,
	-2, 221,
	-1, 145,
	1, 248,
	706, 248,
	-2, 255,
	-1, 156,
	136, 495,
	245, 495,
	-2, 598,
	-1, 175,
	135, 255,
	176, 255,
	375, 255,
	-2, 618,
	-1, 882,
	87, 1627,
	-2, 1472,
	-1, 883,
	87, 1628,
	221, 1632,
	-2, 1473,
	-1, 884,
	221, 1631,
	-2, 52,
	-1, 963,
	60, 1023,
	-2, 1038,
	-1, 1059,
	250, 53,
	255, 53,
	-2, 506,
	-1, 1148,
	1, 666,
	706, 666,
	-2, 255,
	-1, 1471,
	221, 1632,
	-2, 1473,
	-1, 1619,
	60, 1024,
	-2, 1043,
	-1, 1620,
	60, 1025,
	-2, 1044,
	-1, 1678,
	135, 255,
	176, 255,
	375, 255,
	-2, 545,
	-1, 1764,
	136, 495,
	245, 495,
	-2, 598,
	-1, 1774,
	250, 54,
	255, 54,
	-2, 1627,
	-1, 2172,
	221, 1636,
	-2, 1630,
	-1, 2173,
	221, 1632,
	-2, 1628,
	-1, 2273,
	135, 255,
	176, 255,
	375, 255,
	-2, 546,
	-1, 2280,
	26, 276,
	-2, 278,
	-1, 2476,
	239, 1610,
	-2, 221,
	-1, 2692,
	78, 108,
	88, 108,
	-2, 1102,
	-1, 2764,
	681, 817,
	-2, 791,
	-1, 2949,
	50, 1578,
	-2, 1572,
	-1, 3677,
	681, 817,
	-2, 805,
	-1, 3779,
	90, 749,
	95, 749,
	105, 749,
	178, 749,
	179, 749,
	180, 749,
	181, 749,
	182, 749,
	183, 749,
	184, 749,
	185, 749,
	186, 749,
	187, 749,
	188, 749,
	189, 749,
	190, 749,
	191, 749,
	192, 749,
	193, 749,
	194, 749,
	195, 749,
	196, 749,
	197, 749,
	198, 749,
	199, 749,
	200, 749,
	201, 749,
	202, 749,
	203, 749,
	204, 749,
	205, 749,
	206, 749,
	207, 749,
	208, 749,
	209, 749,
	210, 749,
	211, 749,
	212, 749,
	213, 749,
	214, 749,
	215, 749,
	216, 749,
	217, 749,
	218, 749,
	219, 749,
	-2, 1995,
}

const yyPrivate = 57344

const yyLast = 50017

var yyAct = [...]int{
	883, 3374, 2221, 3822, 1681, 3406, 3854, 3118, 3715, 3745,
	3823, 3001, 3405, 2201, 3404, 3008, 3638, 3577, 3065, 3865,
	2962, 3202, 3056, 1229, 1983, 3586, 3360, 5, 3654, 3344,
	3312, 3636, 2203, 3576, 2965, 985, 3070, 3067, 3066, 852,
	893, 3064, 52, 3069, 3068, 3434, 3626, 2623, 957, 3099,
	2905, 3016, 3085, 885, 2039, 2346, 853, 3084, 1641, 886,
	2665, 756, 3043, 738, 2966, 2963, 216, 848, 3235, 216,
	3439, 3756, 2840, 3243, 2790, 715, 2270, 3777, 846, 766,
	721, 3087, 2241, 2950, 2244, 2646, 3263, 2163, 1180, 2652,
	2225, 216, 2960, 3227, 2761, 1091, 734, 736, 2307, 2726,
	2334, 2312, 2824, 2787, 1739, 2727, 2377, 2728, 184, 2258,
	986, 2589, 1231, 216, 847, 2677, 2246, 53, 1789, 2245,
	2658, 1621, 2168, 1018, 2641, 2625, 2134, 2160, 2035, 959,
	51, 2054, 1993, 2810, 1209, 2355, 170, 2333, 2397, 2233,
	721, 216, 961, 721, 964, 1771, 735, 2314, 2719, 2133,
	1049, 1670, 2694, 1650, 2248, 1601, 1067, 118, 1597, 2058,
	1483, 1913, 2012, 122, 988, 1410, 3124, 1395, 1054, 1918,
	1909, 748, 1779, 1026, 1872, 1022, 1057, 1060, 1027, 2303,
	1055, 1056, 123, 1669, 743, 1742, 1003, 2304, 1005, 1655,
	1467, 2226, 2130, 976, 2169, 2067, 1443, 1227, 1219, 1939,
	1982, 967, 1732, 117, 102, 153, 188, 1763, 154, 1142,
	125, 148, 146, 147, 1632, 974, 742, 998, 1487, 3667,
	2754, 124, 966, 116, 101, 3855, 2348, 2349, 2350, 3700,
	3345, 3053, 2348, 2752, 3075, 965, 2784, 2783, 2392, 3337,
	1855, 113, 3806, 725, 113, 730, 113, 3072, 704, 2832,
	3290, 657, 2833, 1411, 2654, 3701, 2, 1491, 902, 903,
	904, 993, 997, 2015, 3075, 664, 3695, 3696, 1093, 149,
	2000, 155, 111, 1999, 710, 979, 113, 3409, 1998, 1411,
	1997, 1110, 1111, 1112, 1096, 1115, 1116, 1117, 1118, 1047,
	3073, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1019, 1996,
	1995, 129, 130, 131, 1071, 134, 3079, 3409, 143, 1012,
	3073, 212, 980, 958, 651, 1966, 1013, 960, 726, 1963,
	662, 728, 137, 661, 1070, 729, 1104, 2477, 723, 724,
	3801, 1046, 2198, 2199, 1406, 2621, 3079, 710, 953, 954,
	955, 956, 149, 1097, 1100, 1101, 1038, 1045, 1044, 1043,
	963, 1033, 1422, 2946, 3408, 902, 903, 904, 211, 3696,
	2774, 2381, 1428, 2909, 1628, 3810, 3808, 1011, 850, 851,
	1113, 3787, 3763, 3826, 3875, 3821, 3845, 3207, 1422, 1000,
	1001, 704, 150, 3206, 172, 2379, 2777, 987, 1025, 3785,
	3809, 3807, 3639, 2590, 3408, 193, 2005, 2323, 3791, 3792,
	3149, 1015, 3572, 3571, 3757, 2380, 3018, 3019, 704, 3350,
	149, 704, 3351, 3786, 1095, 1094, 3836, 103, 3672, 3076,
	2317, 3592, 3804, 701, 2486, 3387, 183, 1397, 3375, 3746,
	3753, 103, 171, 1444, 2740, 3591, 103, 2394, 2374, 105,
	1633, 2044, 3782, 103, 1011, 850, 851, 3386, 3169, 3076,
	2229, 190, 1752, 2622, 191, 3146, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1453, 1452, 1454, 1455, 2668, 2997, 2800,
	2801, 663, 2831, 159, 160, 182, 181, 210, 705, 3763,
	3452, 2998, 2999, 2265, 2266, 680, 2483, 1417, 704, 2484,
	1409, 2816, 2669, 1975, 1976, 113, 1671, 1425, 1672, 1426,
	1427, 2809, 2703, 2264, 1042, 2702, 1155, 1156, 2704, 113,
	1199, 1187, 951, 1417, 113, 3017, 1188, 950, 1187, 1204,
	1205, 113, 3655, 1188, 1186, 677, 1185, 3020, 1037, 2715,
	1396, 1039, 2755, 3240, 694, 2283, 2282, 1200, 1158, 2661,
	2662, 704, 1193, 2874, 2200, 3157, 3155, 1407, 704, 1147,
	1223, 2474, 1974, 718, 1978, 722, 716, 1965, 1605, 1141,
	1667, 3125, 1040, 660, 704, 2811, 2788, 3578, 2316, 1153,
	1606, 3827, 689, 1919, 2403, 2762, 176, 157, 179, 164,
	156, 1919, 177, 178, 686, 692, 688, 3120, 1152, 1114,
	194, 2792, 3828, 2478, 2479, 2481, 2480, 2356, 2796, 200,
	165, 3044, 3113, 1168, 1169, 3614, 2229, 3615, 968, 2398,
	3114, 3101, 3857, 1873, 168, 166, 161, 162, 163, 167,
	1212, 705, 1166, 1167, 1845, 1221, 158, 3313, 1208, 2404,
	1042, 3579, 1034, 2465, 1886, 169, 1149, 3339, 1917, 1036,
	1035, 216, 973, 216, 2819, 3338, 216, 216, 705, 3556,
	1206, 705, 1988, 2454, 667, 1120, 669, 682, 1201, 707,
	1207, 706, 673, 1194, 671, 675, 683, 676, 1846, 670,
	1847, 681, 2227, 2228, 672, 684, 685, 691, 695, 696,
	698, 693, 690, 699, 665, 666, 697, 687, 1040, 679,
	708, 721, 1222, 721, 721, 1119, 658, 3122, 1004, 3802,
	2400, 969, 970, 971, 972, 1042, 1140, 3102, 3121, 1202,
	1203, 3335, 2402, 721, 216, 2359, 3413, 2242, 1014, 1008,
	1006, 3317, 1050, 3314, 1080, 1041, 1051, 1418, 705, 1416,
	1413, 1414, 1415, 1421, 1423, 1420, 1051, 1419, 2875, 2451,
	1089, 2452, 1471, 2453, 2908, 1088, 1183, 1412, 1189, 1190,
	1191, 1192, 185, 1418, 2401, 1416, 1413, 1414, 1415, 1421,
	1423, 1420, 1078, 1419, 1087, 1086, 1085, 1084, 1083, 1082,
	1139, 1077, 1627, 1412, 1224, 1225, 1226, 3666, 2753, 3106,
	1609, 705, 1756, 1048, 1090, 1023, 3020, 2484, 705, 1138,
	1063, 3759, 1458, 1144, 2823, 1014, 1008, 1006, 1023, 3876,
	3869, 3834, 1021, 1023, 705, 1146, 1197, 1145, 1778, 1469,
	1213, 1214, 1216, 1062, 1668, 1910, 999, 1893, 899, 2626,
	2628, 899, 659, 899, 1743, 3758, 3334, 1458, 2227, 2228,
	2717, 2378, 1461, 1462, 1463, 1464, 1388, 2820, 2385, 180,
	1750, 2384, 1475, 3147, 2798, 1904, 2791, 1398, 2794, 1107,
	3047, 1041, 1069, 2795, 2756, 2423, 2772, 2422, 3046, 3241,
	2426, 2427, 3077, 3078, 2424, 2425, 3100, 3790, 2793, 2320,
	2428, 1888, 1081, 1887, 3004, 3081, 1891, 1892, 3045, 2836,
	1889, 1890, 1749, 1748, 1471, 1857, 1856, 1858, 1859, 1860,
	1389, 1390, 3077, 3078, 1479, 3288, 3289, 1907, 3759, 3407,
	173, 1746, 1143, 174, 709, 3081, 3103, 3104, 656, 2321,
	1079, 3789, 1465, 1184, 2498, 106, 2319, 1777, 655, 3005,
	650, 3385, 3315, 3316, 3651, 2776, 1041, 702, 1595, 3277,
	1459, 1460, 3758, 186, 1007, 3259, 2376, 2699, 1099, 3407,
	198, 216, 703, 3007, 1062, 721, 721, 145, 1098, 2664,
	2322, 2485, 2826, 2808, 2598, 1068, 2807, 2825, 112, 2826,
	2318, 3002, 2047, 1923, 2825, 2271, 216, 1405, 1659, 2775,
	1560, 1923, 112, 1160, 1489, 2659, 1490, 112, 3018, 3019,
	1878, 206, 1458, 1610, 112, 3003, 721, 2627, 1612, 216,
	1455, 2996, 1616, 982, 1220, 3798, 1210, 961, 1157, 1613,
	3191, 721, 3744, 1154, 1920, 1921, 1924, 1922, 216, 3727,
	1196, 1007, 1920, 1921, 1924, 1922, 3687, 1493, 3009, 1596,
	3867, 1198, 3681, 3868, 3678, 3866, 187, 192, 189, 195,
	196, 197, 199, 201, 202, 203, 204, 3663, 3583, 1069,
	1210, 2068, 205, 207, 208, 209, 1940, 3582, 721, 1092,
	721, 3544, 3357, 2059, 1896, 2069, 1894, 1895, 721, 1899,
	1900, 1471, 1614, 1897, 1898, 122, 3330, 721, 721, 2841,
	721, 1215, 721, 721, 3320, 721, 721, 721, 721, 721,
	721, 1615, 1182, 1596, 123, 3253, 3110, 3017, 1471, 2943,
	2399, 1471, 721, 1471, 216, 1602, 1989, 1901, 1673, 3020,
	1589, 2860, 1566, 1567, 1568, 1569, 1570, 2059, 2329, 2515,
	1426, 1427, 125, 3837, 216, 2439, 2435, 2437, 2438, 2436,
	2442, 2443, 1427, 1877, 2440, 2441, 3448, 721, 1783, 3295,
	2375, 216, 1753, 1754, 1755, 2410, 2406, 2408, 2409, 2407,
	2413, 2414, 1068, 1211, 2411, 2412, 1840, 1072, 1062, 721,
	3294, 216, 1074, 3829, 2843, 1818, 1075, 1073, 1821, 1630,
	1823, 1148, 2373, 216, 216, 216, 216, 216, 216, 216,
	721, 1769, 958, 2363, 1634, 1635, 1636, 1637, 1638, 1786,
	1762, 1640, 960, 1599, 2066, 216, 1791, 1211, 1792, 1785,
	1794, 1796, 216, 1941, 1800, 1802, 1804, 1806, 1808, 1830,
	1831, 216, 216, 1782, 1069, 1836, 1837, 1744, 1664, 1665,
	1776, 2371, 1780, 1780, 1080, 1822, 1078, 1881, 3278, 1879,
	1880, 1611, 1884, 1885, 978, 1181, 1882, 1883, 3871, 1781,
	141, 2368, 1745, 3361, 3362, 3363, 3364, 3365, 3366, 3367,
	3368, 3369, 1106, 3877, 3006, 3717, 1069, 138, 1760, 3644,
	1759, 1758, 1772, 2853, 2852, 2851, 3564, 1069, 2845, 2368,
	2849, 1865, 2844, 1915, 2842, 1176, 3381, 1178, 3382, 2847,
	2372, 1874, 1944, 1875, 1863, 3563, 1876, 1852, 2846, 1948,
	3554, 1950, 1951, 1952, 1953, 1751, 1428, 3398, 1957, 1826,
	3718, 3397, 1961, 1962, 3645, 1964, 2848, 2850, 2370, 2007,
	2009, 2010, 3302, 211, 2108, 1175, 1177, 1068, 139, 1428,
	1942, 1943, 1628, 1062, 1065, 1066, 3301, 1023, 1911, 2064,
	2017, 1059, 1063, 2008, 1947, 1864, 3291, 150, 2065, 1171,
	3878, 1954, 1955, 1956, 2018, 1456, 1457, 2016, 1862, 1037,
	193, 1851, 1039, 3054, 1428, 149, 3036, 2724, 1170, 1068,
	1045, 1044, 1043, 1069, 2723, 1062, 1065, 1066, 1428, 1023,
	1068, 2722, 2326, 1059, 1063, 1072, 1062, 1936, 2234, 2235,
	1074, 2490, 2491, 2492, 1075, 1073, 1866, 1850, 721, 721,
	140, 1849, 1848, 2708, 1058, 1946, 1428, 902, 903, 904,
	1838, 721, 2165, 3841, 1628, 1076, 190, 2550, 1832, 191,
	216, 1960, 2100, 2089, 2090, 2091, 2092, 2102, 2093, 2094,
	2095, 2107, 2103, 2096, 2097, 2104, 2105, 2106, 2098, 2099,
	2101, 1425, 210, 1426, 1427, 1829, 1828, 1827, 3010, 1798,
	2862, 52, 3014, 1165, 52, 1428, 3117, 1164, 1173, 3013,
	1392, 1042, 1174, 1034, 1425, 3833, 1426, 1427, 710, 721,
	1036, 1035, 1179, 3285, 710, 1667, 1068, 2330, 1105, 1471,
	2328, 128, 1102, 1928, 1450, 1451, 1453, 1452, 1454, 1455,
	721, 1628, 127, 3015, 126, 1927, 1471, 1926, 3011, 1425,
	1925, 1426, 1427, 3012, 3830, 1172, 2013, 2706, 710, 1906,
	2042, 2042, 1905, 1425, 1870, 1426, 1427, 2344, 2343, 1040,
	1428, 721, 721, 2040, 2040, 2043, 1031, 1428, 1595, 1448,
	1449, 1450, 1451, 1453, 1452, 1454, 1455, 1869, 2011, 3839,
	1628, 1425, 2542, 1426, 1427, 1030, 1469, 2342, 2341, 2503,
	2021, 2340, 2339, 1444, 3799, 194, 1440, 2552, 1441, 2650,
	3856, 1628, 1628, 2060, 200, 3817, 1628, 1424, 1628, 3252,
	3793, 2173, 1442, 1456, 1457, 1439, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1453, 1452, 1454, 1455, 1424, 1628, 3668,
	1425, 3743, 1426, 1427, 2170, 1971, 1972, 3741, 2020, 1444,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 102, 216, 1990, 102, 2650, 3752, 1596,
	721, 2014, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453,
	1452, 1454, 1455, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1453, 1452, 1454, 1455, 1424, 3729, 1644, 2019, 3680, 3728,
	216, 2650, 3725, 721, 3684, 1425, 3683, 1426, 1427, 2212,
	3675, 2213, 1425, 216, 1426, 1427, 3674, 721, 3661, 2046,
	2173, 216, 3648, 216, 3647, 216, 216, 1428, 3646, 2122,
	3575, 2161, 1041, 2172, 3559, 2053, 2055, 2650, 3721, 2120,
	721, 1428, 1645, 2170, 3547, 2175, 2176, 3537, 1444, 2131,
	2835, 2070, 2071, 2072, 2073, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1430, 3536, 2252, 2084, 122, 185, 3708, 1628,
	3600, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1452,
	1454, 1455, 2171, 3680, 3679, 123, 3447, 122, 1446, 1447,
	1448, 1449, 1450, 1451, 1453, 1452, 1454, 1455, 3599, 721,
	2165, 3348, 3665, 2216, 2162, 1428, 123, 3445, 1629, 1631,
	3394, 3769, 1628, 2164, 3581, 3580, 2174, 2195, 2280, 2177,
	2178, 3383, 1428, 2131, 3371, 3767, 1628, 897, 119, 721,
	3567, 1628, 2172, 2650, 3555, 121, 721, 721, 119, 120,
	721, 3164, 721, 2289, 2290, 2291, 2292, 2274, 979, 120,
	1594, 2284, 1593, 2285, 2286, 2287, 2288, 2205, 2256, 1592,
	2193, 3299, 1425, 2275, 1426, 1427, 3543, 3542, 3541, 2295,
	2296, 2297, 2298, 2215, 3356, 3355, 1425, 3284, 1426, 1427,
	3238, 2239, 721, 2357, 3348, 1628, 1428, 721, 2647, 3595,
	2309, 721, 721, 2219, 1628, 2650, 3346, 3540, 2315, 3319,
	3318, 2368, 1628, 3373, 1628, 2763, 2237, 1628, 2278, 3257,
	1628, 1012, 2262, 2261, 3131, 2260, 2563, 1628, 1013, 3129,
	2277, 2276, 128, 3126, 3123, 3109, 3108, 121, 3039, 216,
	3038, 3029, 3028, 127, 2814, 126, 3026, 3027, 216, 2325,
	1425, 2733, 1426, 1427, 121, 3024, 3025, 2738, 186, 3024,
	3023, 1428, 2354, 2674, 1628, 198, 2720, 1425, 1591, 1426,
	1427, 2942, 2941, 2279, 216, 216, 2484, 2785, 2310, 2306,
	216, 1628, 216, 2299, 2301, 2302, 2390, 2324, 216, 2389,
	2331, 2224, 2362, 2207, 1071, 2365, 1628, 2366, 2206, 1738,
	2766, 3254, 2332, 2759, 2760, 1780, 206, 2338, 2650, 2649,
	216, 2508, 1628, 1628, 1070, 2382, 1967, 216, 2310, 2361,
	2360, 2364, 1937, 1428, 1861, 2386, 1853, 1428, 2383, 2387,
	2388, 1425, 2643, 1426, 1427, 1428, 2045, 1628, 3713, 216,
	1428, 1843, 1839, 1835, 1428, 3765, 1628, 121, 721, 1834,
	1444, 187, 192, 189, 195, 196, 197, 199, 201, 202,
	203, 204, 1444, 1833, 2497, 1428, 1646, 205, 207, 208,
	209, 2393, 2554, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1453, 1452, 1454, 1455, 1428, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1453, 1452, 1454, 1455, 1425, 1218, 1426, 1427,
	1428, 2467, 2468, 2695, 1428, 2508, 2470, 3623, 1628, 1428,
	1217, 3621, 1628, 1428, 3686, 2471, 1471, 2695, 2173, 3618,
	1628, 2650, 1428, 2666, 3604, 1628, 1428, 2666, 3226, 1628,
	2674, 1428, 1738, 1737, 2991, 1428, 2673, 2512, 2369, 1428,
	2961, 2502, 3211, 2013, 2484, 1428, 1679, 1678, 2457, 3219,
	1628, 3252, 3026, 2931, 2263, 1428, 2463, 127, 1425, 2508,
	1426, 1427, 1425, 1648, 1426, 1427, 2696, 1428, 3216, 1628,
	1425, 1428, 1426, 1427, 2563, 1425, 2698, 1426, 1427, 1425,
	2696, 1426, 1427, 2500, 3214, 1628, 2495, 1428, 3179, 1628,
	2484, 2674, 2539, 3162, 1628, 2674, 2368, 2618, 1628, 3252,
	1425, 2538, 1426, 1427, 2368, 1428, 2616, 1628, 2351, 2232,
	2511, 2473, 1639, 2196, 2045, 2595, 1628, 1428, 1991, 1425,
	3831, 1426, 1427, 2578, 1628, 1973, 1424, 2482, 1903, 1647,
	2172, 1666, 1428, 141, 2494, 1425, 2496, 1426, 1427, 1425,
	3659, 1426, 1427, 1428, 1425, 1053, 1426, 1427, 1425, 2493,
	1426, 1427, 3551, 1428, 1052, 2570, 1628, 1425, 2014, 1426,
	1427, 1425, 1428, 1426, 1427, 113, 1425, 216, 1426, 1427,
	1425, 3272, 1426, 1427, 1425, 216, 1426, 1427, 1428, 2171,
	1425, 3796, 1426, 1427, 3731, 721, 3588, 2514, 3057, 3221,
	1425, 2505, 1426, 1427, 1642, 3545, 2522, 721, 3538, 3459,
	2730, 2504, 1425, 1428, 1426, 1427, 1425, 2630, 1426, 1427,
	3358, 113, 3329, 2537, 3326, 2476, 3297, 3331, 3174, 2042,
	3173, 216, 1425, 1740, 1426, 1427, 216, 3217, 1428, 2308,
	3115, 3107, 2040, 2632, 3059, 3055, 2670, 3189, 3040, 2786,
	1425, 2062, 1426, 1427, 2767, 2063, 2548, 2725, 2743, 2396,
	2305, 52, 1425, 2300, 1426, 1427, 2294, 2293, 2218, 1868,
	2688, 1428, 3185, 2690, 1775, 1770, 2633, 1425, 2635, 1426,
	1427, 1734, 142, 1428, 1147, 3119, 731, 3851, 1425, 2126,
	1426, 1427, 3589, 1428, 2323, 2651, 2210, 3171, 1425, 2729,
	1426, 1427, 3264, 3265, 721, 3849, 3824, 1425, 1969, 1426,
	1427, 3690, 3694, 216, 3609, 2689, 3267, 2158, 2644, 216,
	3051, 3050, 3170, 1425, 3049, 1426, 1427, 2961, 2746, 2660,
	2458, 1602, 2620, 721, 3590, 2758, 3303, 3270, 1428, 3269,
	721, 2983, 2187, 1428, 721, 721, 2984, 2730, 1425, 721,
	1426, 1427, 2980, 2640, 2979, 3167, 2716, 2718, 1428, 1629,
	2194, 1596, 2709, 3307, 1428, 1471, 2663, 2614, 2693, 2981,
	1970, 2223, 2648, 1425, 2982, 1426, 1427, 2613, 1428, 1643,
	2214, 216, 216, 216, 216, 216, 1428, 3304, 3305, 3306,
	2697, 3258, 2732, 2217, 2315, 2700, 2936, 2735, 2736, 2985,
	1428, 2683, 2684, 2707, 1428, 2935, 1425, 3245, 1426, 1427,
	3308, 3309, 3310, 989, 3440, 3244, 995, 995, 1425, 3643,
	1426, 1427, 2609, 2721, 2710, 2951, 2953, 2608, 1425, 3438,
	1426, 1427, 2780, 3429, 2954, 3428, 983, 3248, 216, 216,
	1902, 2731, 2607, 2782, 984, 1428, 2948, 2739, 2606, 949,
	2744, 3022, 1428, 2747, 2748, 2749, 1814, 2734, 2779, 1428,
	2713, 1109, 2605, 1810, 1108, 216, 1428, 3140, 1762, 2729,
	2604, 1428, 2829, 1425, 119, 1426, 1427, 2068, 1425, 1391,
	1426, 1427, 2773, 3427, 2593, 120, 721, 3250, 2587, 2768,
	2769, 2069, 128, 1425, 121, 1426, 1427, 150, 2778, 1425,
	3863, 1426, 1427, 127, 2327, 126, 2741, 1815, 1816, 1817,
	1811, 1812, 1813, 1425, 121, 1426, 1427, 2234, 2235, 119,
	2461, 1425, 2450, 1426, 1427, 3774, 121, 1428, 3664, 2586,
	120, 3584, 3021, 721, 2812, 1425, 2585, 1426, 1427, 1425,
	2813, 1426, 1427, 2584, 2687, 2220, 2934, 2815, 991, 992,
	2583, 2449, 2448, 2447, 2933, 2582, 2817, 2854, 2679, 2682,
	2683, 2684, 2680, 2818, 2681, 2685, 2869, 2446, 3264, 3265,
	2821, 721, 3631, 2445, 2837, 2444, 2838, 2434, 2433, 721,
	1425, 2827, 1426, 1427, 2828, 2432, 2431, 1425, 2430, 1426,
	1427, 2429, 1626, 1622, 1425, 2421, 1426, 1427, 2420, 1428,
	2419, 1425, 2915, 1426, 1427, 2418, 1425, 1623, 1426, 1427,
	721, 2581, 2417, 2416, 2855, 2679, 2682, 2683, 2684, 2680,
	2857, 2681, 2685, 2415, 216, 2912, 2839, 3228, 2488, 128,
	126, 721, 1735, 1736, 1625, 3630, 1624, 3612, 3446, 3444,
	127, 127, 126, 3443, 3436, 721, 2856, 3327, 1428, 1471,
	3249, 3247, 721, 721, 1471, 216, 216, 216, 216, 216,
	3060, 2878, 1425, 2252, 1426, 1427, 2352, 216, 2915, 1757,
	2884, 990, 3435, 216, 2973, 216, 128, 3236, 216, 216,
	216, 2958, 2938, 2580, 2910, 2666, 2990, 127, 2161, 3417,
	2161, 964, 3853, 3852, 2252, 2252, 2252, 2252, 2252, 2643,
	2914, 2911, 2876, 2913, 2540, 2886, 2967, 2888, 2939, 2894,
	2895, 2896, 2897, 2898, 2252, 2208, 2964, 2252, 1660, 1428,
	1652, 2964, 3852, 2899, 2900, 2901, 2902, 216, 2930, 3853,
	2926, 3649, 2579, 1428, 1425, 3283, 1426, 1427, 132, 133,
	721, 981, 141, 1471, 1987, 2937, 2940, 13, 721, 1986,
	3083, 1984, 10, 216, 9, 1985, 2955, 2956, 8, 2992,
	3, 115, 2993, 2927, 2928, 2929, 1, 3098, 3311, 966,
	3105, 2972, 2975, 2976, 2974, 2978, 216, 2977, 3359, 122,
	1428, 2986, 965, 1425, 2395, 1426, 1427, 2789, 2994, 2742,
	3042, 1162, 1915, 1916, 1394, 1393, 3287, 3000, 123, 3784,
	678, 216, 2197, 2573, 216, 3034, 3035, 1428, 1600, 2501,
	3062, 3825, 3031, 2506, 3033, 3032, 2509, 2572, 2510, 3780,
	3781, 1854, 1844, 2517, 3376, 2132, 3041, 2519, 2520, 2521,
	3585, 3063, 1428, 3091, 2358, 3325, 2313, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2315, 3082, 1428,
	1061, 175, 2272, 3097, 1425, 2273, 1426, 1427, 3748, 136,
	1016, 135, 1064, 3061, 2571, 1195, 2353, 3349, 1425, 3090,
	1426, 1427, 2714, 2543, 2544, 2545, 2546, 2547, 2281, 2549,
	1685, 1683, 1684, 2551, 721, 1682, 1687, 2556, 2557, 1686,
	2558, 2568, 3148, 2561, 2541, 2562, 3138, 3139, 3190, 2565,
	1977, 1428, 3136, 2569, 3135, 1603, 717, 2574, 2575, 2576,
	2577, 2686, 3143, 216, 3144, 1425, 2567, 1426, 1427, 711,
	2588, 213, 2591, 2592, 3153, 1674, 3150, 3151, 1653, 3152,
	2594, 2596, 3154, 2566, 3156, 3203, 3158, 2599, 2600, 2601,
	2602, 2603, 1425, 1428, 1426, 1427, 1103, 668, 2610, 2611,
	3030, 2612, 2391, 674, 2615, 2617, 2217, 1476, 2619, 3127,
	3128, 1968, 3130, 2932, 3132, 3133, 2701, 1425, 2631, 1426,
	1427, 1428, 216, 1010, 653, 1428, 1626, 1622, 3234, 1002,
	2209, 1428, 2634, 1009, 1425, 2564, 1426, 1427, 1428, 3552,
	2969, 1623, 1428, 3242, 2947, 2949, 952, 3205, 2653, 3232,
	2952, 216, 3229, 3230, 3209, 2945, 3642, 3437, 3237, 3726,
	2711, 2252, 1649, 3246, 3261, 3239, 1619, 1620, 1625, 1429,
	1624, 3210, 2513, 2057, 1466, 2249, 3271, 2560, 216, 3412,
	216, 216, 216, 3275, 3276, 3251, 1425, 2006, 1426, 1427,
	721, 721, 3332, 3333, 3268, 740, 1024, 739, 1484, 737,
	2636, 2667, 1431, 3273, 887, 2559, 3274, 2624, 1661, 2555,
	2678, 2676, 2675, 3091, 3281, 2553, 3282, 2459, 2257, 3266,
	3262, 3776, 2518, 2251, 2247, 2642, 2507, 838, 1425, 837,
	1426, 1427, 749, 741, 733, 836, 835, 3280, 3089, 3760,
	3292, 3293, 2797, 3116, 3298, 2799, 3300, 2712, 3112, 3090,
	721, 721, 721, 721, 1408, 1618, 1425, 727, 1426, 1427,
	1425, 1032, 1426, 1427, 3145, 3670, 1425, 2487, 1426, 1427,
	3168, 1617, 2087, 1425, 2088, 1426, 1427, 1425, 3677, 1426,
	1427, 3071, 3353, 3354, 3343, 3052, 2764, 2345, 81, 56,
	3637, 3714, 834, 831, 3414, 3415, 3416, 2906, 2907, 3336,
	3372, 3697, 3698, 3340, 3341, 3342, 830, 3699, 2115, 1404,
	1401, 3800, 1979, 114, 3370, 38, 37, 36, 35, 34,
	28, 27, 26, 25, 24, 21, 20, 31, 23, 22,
	19, 18, 3074, 3820, 3393, 3862, 144, 65, 62, 60,
	152, 151, 63, 59, 1150, 57, 2645, 100, 99, 98,
	97, 96, 95, 50, 49, 48, 47, 46, 45, 44,
	43, 42, 216, 33, 32, 17, 16, 15, 14, 12,
	11, 7, 3389, 6, 41, 3432, 40, 30, 39, 29,
	4, 2751, 2347, 1471, 0, 0, 0, 0, 721, 0,
	721, 0, 0, 0, 3410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3455, 0, 0, 52, 1651, 0, 0,
	0, 0, 0, 3433, 0, 2864, 2865, 2866, 2867, 2868,
	3457, 2967, 3441, 2042, 0, 2967, 3442, 0, 3449, 3451,
	2964, 0, 0, 0, 2873, 0, 2040, 3461, 0, 0,
	721, 0, 3553, 0, 3462, 3463, 1741, 0, 0, 0,
	0, 0, 0, 216, 3401, 0, 721, 3465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3565, 721, 0, 211, 0,
	3548, 0, 3546, 3550, 3549, 0, 0, 0, 0, 0,
	0, 0, 3557, 0, 0, 0, 0, 0, 3569, 3587,
	0, 3570, 150, 0, 0, 0, 3574, 0, 0, 0,
	3607, 0, 0, 0, 0, 193, 0, 3606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	0, 721, 721, 3560, 3561, 3562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 2970, 0, 0, 0, 0, 0,
	721, 3611, 3653, 2040, 3610, 3613, 0, 0, 0, 3616,
	0, 190, 2988, 0, 191, 0, 0, 3632, 3633, 3635,
	3634, 0, 0, 0, 0, 0, 0, 3650, 0, 1938,
	0, 0, 0, 3652, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2967,
	0, 3656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 3658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3660, 0, 1151, 0, 1159, 3662,
	0, 1161, 1163, 0, 0, 0, 0, 0, 0, 721,
	216, 3688, 0, 3673, 0, 3641, 0, 3676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3682, 3685,
	194, 0, 0, 3669, 0, 0, 0, 3142, 0, 200,
	0, 0, 0, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3159, 3160, 3161,
	721, 3163, 3165, 0, 0, 0, 0, 0, 0, 1400,
	1471, 0, 721, 0, 0, 3172, 0, 0, 0, 0,
	3176, 3177, 3178, 3180, 3181, 3182, 3183, 3712, 0, 3184,
	3719, 3186, 3187, 3188, 0, 0, 3192, 3193, 3194, 3195,
	3196, 3197, 3198, 3199, 3200, 3201, 0, 721, 721, 3730,
	3732, 0, 3724, 0, 3208, 0, 3735, 3212, 3742, 3213,
	3215, 0, 3218, 3220, 52, 3222, 3223, 3224, 3225, 721,
	3587, 3749, 3747, 3231, 3740, 3737, 3736, 2964, 0, 3734,
	0, 3739, 3738, 216, 721, 3703, 0, 0, 3704, 0,
	3772, 2001, 2002, 2003, 2004, 0, 3775, 0, 3783, 0,
	3794, 0, 3788, 0, 0, 0, 0, 0, 0, 0,
	0, 3255, 3256, 0, 0, 3260, 0, 0, 0, 3761,
	3803, 3762, 0, 3692, 0, 0, 0, 0, 0, 0,
	0, 3702, 185, 0, 721, 0, 0, 0, 0, 0,
	2048, 2049, 3814, 3819, 0, 2051, 0, 995, 995, 2056,
	0, 0, 0, 2061, 0, 0, 0, 721, 0, 3832,
	0, 0, 0, 0, 0, 3835, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 721, 3761, 721, 3762,
	2109, 2110, 2111, 2112, 2113, 2114, 2116, 3850, 2121, 3805,
	2123, 2124, 2125, 3848, 2127, 2128, 2129, 3843, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2042, 2159, 3872, 2166, 2167, 995, 3347, 995, 995,
	995, 995, 995, 3870, 2040, 3847, 3864, 0, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 3607, 2188, 2189, 2190,
	2191, 2192, 3881, 3882, 3880, 3844, 3846, 3761, 0, 3762,
	898, 0, 0, 104, 0, 0, 0, 0, 0, 3858,
	1479, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 1663, 995, 0, 0, 3384, 2040,
	3879, 3388, 0, 0, 0, 0, 0, 0, 3818, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 186, 2230, 2231, 0, 0, 3399, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3403, 0, 0, 0, 0, 0, 0,
	2269, 0, 0, 0, 0, 3411, 0, 0, 0, 0,
	0, 0, 0, 3418, 103, 54, 55, 105, 0, 0,
	0, 206, 0, 962, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 58, 88,
	89, 0, 86, 90, 0, 962, 0, 0, 0, 1824,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2311, 0, 1029, 0, 0, 187, 192, 189, 195,
	196, 197, 199, 201, 202, 203, 204, 0, 0, 0,
	74, 0, 205, 207, 208, 209, 1871, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 3566, 1949, 0, 0,
	0, 0, 0, 0, 0, 3573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3593, 3594, 0, 3596, 1703, 3597, 3598,
	0, 0, 0, 3601, 3602, 3603, 0, 3605, 3608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3617, 3619, 3620, 3622, 3624, 3625, 3627,
	61, 64, 67, 66, 69, 0, 85, 0, 0, 94,
	72, 91, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 108, 107, 3657, 0, 83,
	84, 68, 0, 0, 0, 0, 0, 92, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 1719,
	1720, 1721, 1722, 1723, 1724, 0, 1725, 1726, 1728, 1729,
	1727, 1730, 1731, 1704, 1705, 1706, 1707, 1688, 1689, 1717,
	0, 1691, 0, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 110, 0, 1701, 1708, 1709, 1710, 1711, 0,
	1712, 1713, 1714, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 76,
	0, 77, 78, 79, 80, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2523, 2524, 2525,
	2526, 0, 0, 0, 0, 0, 0, 0, 0, 3693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3709,
	0, 0, 0, 0, 0, 3710, 3711, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 3754, 3755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3764, 3766,
	3768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 1651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2236, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 2243, 0,
	0, 1994, 0, 0, 3838, 3840, 3842, 0, 0, 0,
	0, 1228, 0, 1228, 1228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 3873, 3874, 0, 71, 0, 0, 0, 0,
	0, 962, 1468, 1473, 1474, 0, 1477, 0, 1478, 1480,
	1481, 1482, 0, 1485, 1486, 1488, 1488, 0, 1488, 1492,
	1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 0, 0, 0, 0,
	1559, 0, 1561, 1562, 1563, 1564, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 1492, 1492, 1492, 1492,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1994, 0, 2834, 0, 0, 0,
	1598, 0, 0, 2405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 995, 0, 0, 2858, 2859,
	0, 0, 2861, 0, 0, 2863, 0, 0, 0, 2455,
	2456, 0, 0, 0, 0, 2460, 0, 0, 0, 0,
	0, 0, 0, 2464, 0, 2870, 2871, 2872, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 2877, 0, 962,
	2879, 2880, 2881, 962, 0, 2466, 2882, 2883, 962, 0,
	2135, 2885, 2469, 0, 2887, 0, 0, 2889, 2890, 2891,
	2892, 0, 0, 0, 0, 2893, 2135, 2135, 2135, 2135,
	2135, 0, 0, 0, 2472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 1690, 0, 0, 0,
	0, 2916, 2917, 2918, 2919, 2920, 2921, 0, 0, 0,
	2922, 2923, 211, 2924, 0, 2925, 0, 0, 0, 0,
	0, 882, 0, 2757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 1703, 0, 0, 0, 0, 171, 0, 2989, 0,
	0, 0, 0, 0, 0, 700, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 190, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1766, 182,
	181, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3058, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 720, 0, 0, 0, 0, 0,
	1228, 0, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 0,
	1725, 1726, 1728, 1729, 1727, 1730, 1731, 1704, 1705, 1706,
	1707, 1688, 1689, 1717, 0, 1691, 0, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 0, 0, 1701, 1708,
	1709, 1710, 1711, 900, 1712, 1713, 1714, 1715, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	176, 1767, 179, 0, 1764, 0, 177, 178, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 3166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2692, 0, 3175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 0, 0, 0, 839, 0, 2745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1228, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2802, 2803, 2804, 2805,
	2806, 0, 900, 0, 2165, 0, 719, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3483, 3485, 3484, 3502, 3503, 3504, 3505, 3506,
	3507, 3508, 788, 1994, 2822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3352, 1020, 0, 0, 1028,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	2830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 0, 0, 173, 0, 0, 174, 0, 3390,
	0, 3391, 0, 0, 3392, 0, 0, 3395, 3396, 0,
	0, 0, 0, 0, 0, 0, 3400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3402, 186, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3419, 0,
	0, 3420, 0, 3421, 3422, 0, 3423, 0, 3424, 0,
	0, 0, 0, 3425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3450, 0, 0, 0, 0, 2250, 0, 0, 0, 0,
	0, 3458, 0, 0, 3460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3464, 0, 0, 0,
	187, 192, 189, 195, 196, 197, 199, 201, 202, 203,
	204, 0, 0, 0, 3539, 0, 205, 207, 208, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 1387, 720, 720, 3489, 0, 0, 1029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3497, 3498, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3048, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 1470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3111, 854, 0, 767, 858, 769, 855, 856, 0,
	765, 768, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3640, 0, 0, 0, 3134, 0, 0, 3137,
	0, 0, 0, 0, 0, 0, 0, 0, 786, 787,
	3482, 3486, 3487, 3488, 3499, 3500, 3501, 3509, 3511, 819,
	3510, 3512, 3513, 3514, 3517, 3518, 3519, 3520, 3515, 3516,
	3521, 3466, 3470, 3467, 3468, 3469, 3481, 3471, 3472, 3473,
	3474, 3475, 3476, 3477, 3478, 3479, 3480, 3522, 3523, 3524,
	3525, 3526, 3527, 3492, 3496, 3495, 3493, 3494, 3490, 3491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 859, 0, 860, 1470, 0, 864, 0, 0,
	0, 866, 865, 0, 867, 833, 832, 0, 0, 861,
	862, 0, 863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3691, 0, 0, 0, 2489, 3528, 3529, 3530,
	3531, 3532, 3533, 3534, 3535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3705, 0, 720, 3706, 0,
	3707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 2499, 3296, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 1230, 0, 1230,
	1230, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 3321, 0, 3322, 3323, 3324, 0, 1399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 1470, 1784, 0, 0, 1787, 1788, 720, 720,
	0, 720, 0, 720, 720, 0, 720, 720, 720, 720,
	720, 720, 0, 0, 0, 0, 0, 0, 0, 1470,
	1819, 1820, 1470, 720, 1470, 0, 1825, 0, 3795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 2597, 3811, 0, 3812, 0, 3813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1908, 0, 0,
	720, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2629, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2671, 2672, 0, 0, 3859, 0, 3860, 0,
	0, 2250, 0, 0, 962, 2691, 0, 214, 0, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 977, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 1675, 0, 0,
	2771, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 0, 1773, 0, 0, 720,
	720, 0, 183, 0, 1773, 0, 0, 0, 171, 0,
	0, 0, 720, 1790, 1790, 0, 1790, 0, 1790, 1790,
	0, 1799, 1790, 1790, 1790, 1790, 1790, 190, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	1766, 182, 181, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	1470, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 720, 0, 0, 0, 1912, 0, 1470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 0, 0, 0,
	0, 0, 720, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 1767, 179, 0, 1764, 0, 177, 178,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 2903, 720, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2968, 0, 104, 0, 720, 2250, 2250, 2250, 2250, 2250,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 720, 0, 0, 0, 2250, 0, 0, 2250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1230, 1230, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 3080, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 3088, 0, 0, 0, 0,
	2335, 2336, 2337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 720, 720, 0,
	0, 720, 0, 720, 0, 2036, 0, 0, 2367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 2052, 0, 0, 0,
	0, 0, 654, 0, 654, 0, 0, 654, 654, 0,
	0, 0, 0, 720, 0, 0, 0, 0, 720, 0,
	0, 0, 720, 720, 0, 0, 0, 2085, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 1472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 0, 2222,
	0, 0, 0, 0, 0, 3279, 0, 0, 0, 720,
	0, 0, 0, 1657, 0, 0, 1230, 0, 0, 0,
	0, 0, 187, 192, 189, 195, 196, 197, 199, 201,
	202, 203, 204, 0, 0, 0, 1020, 0, 205, 207,
	208, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 0, 720,
	0, 0, 0, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 0, 1028, 1773, 0, 0, 1773, 0, 1773, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 0, 0, 2036, 0, 0, 0, 2036, 2036, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3426, 0,
	3430, 3431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 2968, 0, 104, 720, 2968,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 0, 1472, 0, 1472, 654, 0, 0, 0, 0,
	0, 0, 0, 2705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 2475, 0, 3558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1914, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 654, 654, 654, 654, 654,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 654, 0, 0, 0,
	0, 720, 0, 654, 0, 720, 720, 0, 0, 0,
	720, 0, 1958, 1959, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 2781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2655, 720, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3723, 0, 0, 0,
	1472, 720, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 996, 996, 0, 0, 0, 1472, 0, 0,
	2737, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	1470, 0, 0, 720, 720, 1470, 0, 0, 0, 2222,
	0, 0, 0, 0, 0, 0, 2765, 0, 0, 0,
	1773, 1773, 0, 0, 0, 2770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 1914, 996, 996, 996, 996, 996, 0, 0,
	0, 0, 0, 0, 0, 0, 3037, 0, 0, 0,
	0, 0, 0, 0, 0, 3815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 1470, 1841, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 1914, 654, 0, 654, 0, 654, 2259, 0, 0,
	0, 0, 2036, 0, 0, 3141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2904, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1230, 0, 0, 0, 0, 0, 0, 2971, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 720, 0, 0, 654, 654, 0, 0, 0,
	0, 654, 0, 2462, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 1020, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 720, 720, 720, 0, 0, 0, 0, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 900, 0, 0, 0, 888, 901,
	902, 903, 904, 889, 0, 0, 890, 891, 0, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 897, 905, 906, 0, 1472, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3092, 3093, 0, 0, 1470, 0, 0, 0, 0, 720,
	0, 720, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3094, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 2222, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 720, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3377, 3378, 3379, 3380,
	0, 0, 3095, 3096, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	2750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 854, 0, 0, 858, 1472, 855, 856, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 654, 654, 654, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3454, 0, 3456, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 654, 0, 0, 0,
	0, 1470, 0, 720, 0, 0, 2222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 0, 3568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1230, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3628, 0, 0, 0, 3628, 3628, 996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 1472, 654, 654, 654, 654,
	654, 0, 0, 0, 0, 0, 0, 0, 2987, 0,
	0, 0, 0, 0, 1841, 0, 654, 0, 0, 654,
	2995, 1914, 0, 0, 0, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 113, 0, 0, 900, 0, 3716, 0, 888, 901,
	902, 903, 904, 889, 0, 0, 890, 891, 3720, 892,
	0, 0, 654, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 897, 905, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1230, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3770, 0, 0, 0, 0,
	3092, 3093, 0, 0, 0, 0, 0, 0, 0, 0,
	3778, 0, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 654, 0, 0, 0, 0, 0,
	3716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3094, 0, 0, 0,
	0, 0, 3204, 0, 3778, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 654, 654, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3095, 3096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 1364, 1349, 529, 0,
	1292, 1367, 1261, 1280, 1377, 1283, 1286, 1328, 1240, 1306,
	427, 1277, 1233, 1265, 1235, 1272, 1236, 1263, 1294, 285,
	1260, 1351, 1310, 1366, 378, 282, 1242, 1266, 441, 1282,
	223, 1330, 498, 269, 389, 386, 537, 297, 288, 284,
	267, 331, 397, 439, 519, 433, 1373, 382, 1316, 0,
	508, 412, 1841, 0, 0, 1296, 1355, 1304, 1342, 1291,
	1329, 1250, 1315, 1368, 1278, 1325, 1369, 337, 265, 339,
	222, 424, 509, 301, 0, 0, 0, 0, 3750, 710,
	0, 654, 0, 0, 3751, 0, 0, 0, 0, 255,
	0, 0, 262, 0, 0, 0, 363, 372, 371, 352,
	353, 355, 357, 362, 369, 375, 1274, 1322, 1363, 1275,
	1324, 280, 335, 287, 279, 534, 1374, 1354, 1239, 1303,
	1362, 0, 0, 246, 1365, 1298, 0, 1327, 0, 1380,
	1234, 1318, 0, 1237, 1241, 1376, 1358, 1269, 290, 0,
	0, 1472, 0, 0, 0, 0, 1295, 1305, 1339, 1343,
	1289, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1314, 0, 0, 0, 1246, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	0, 0, 0, 1249, 1841, 1268, 1340, 0, 1232, 312,
	1243, 413, 272, 1386, 0, 465, 1347, 1357, 1290, 577,
	1361, 1288, 1287, 1334, 1247, 1353, 1281, 377, 1245, 344,
	218, 242, 0, 1279, 423, 473, 485, 1352, 1264, 1273,
	270, 1271, 483, 437, 554, 250, 299, 470, 443, 481,
	453, 302, 1313, 1332, 482, 384, 539, 463, 551, 578,
	579, 278, 417, 563, 523, 572, 605, 243, 275, 431,
	516, 557, 505, 409, 535, 536, 343, 504, 310, 221,
	381, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 644, 645, 646, 647, 648,
	0, 0, 643, 649, 584, 241, 491, 383, 259, 248,
	541, 560, 304, 468, 447, 448, 586, 600, 587, 589,
	590, 230, 518, 549, 256, 495, 0, 0, 607, 264,
	515, 232, 546, 514, 405, 340, 341, 231, 0, 469,
	283, 308, 0, 0, 273, 426, 543, 544, 271, 608,
	245, 571, 237, 1244, 570, 419, 538, 547, 406, 395,
	236, 545, 404, 394, 348, 367, 368, 295, 321, 460,
	387, 461, 320, 322, 415, 414, 416, 225, 558, 0,
	226, 0, 510, 559, 609, 251, 252, 254, 1259, 294,
	298, 306, 309, 317, 318, 327, 379, 430, 459, 455,
	464, 1348, 533, 552, 564, 576, 582, 583, 585, 591,
	592, 593, 595, 601, 599, 596, 597, 598, 594, 588,
	418, 325, 506, 347, 385, 1337, 1379, 436, 484, 257,
	556, 507, 1382, 1383, 1384, 1385, 1254, 1258, 1252, 1319,
	1253, 1308, 1309, 1255, 1370, 1371, 1372, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 1341, 1248, 0, 1256,
	1257, 1350, 1359, 1360, 642, 396, 497, 553, 349, 361,
	364, 354, 373, 0, 374, 350, 351, 356, 358, 359,
	360, 365, 366, 370, 376, 266, 228, 402, 410, 532,
	326, 233, 234, 235, 525, 526, 527, 528, 568, 569,
	573, 474, 475, 476, 477, 307, 562, 323, 480, 479,
	345, 346, 391, 462, 1312, 217, 238, 380, 1375, 466,
	303, 606, 567, 561, 224, 240, 1251, 277, 1262, 1270,
	0, 1276, 1284, 1285, 1297, 1299, 1300, 1301, 1302, 1320,
	1321, 1323, 1331, 1333, 1336, 1338, 1345, 1356, 1378, 219,
	220, 227, 239, 249, 253, 260, 276, 291, 293, 300,
	313, 324, 332, 333, 336, 342, 392, 398, 399, 400,
	401, 420, 421, 422, 425, 428, 429, 432, 434, 435,
	438, 442, 446, 449, 450, 452, 454, 456, 467, 472,
	486, 487, 488, 489, 490, 493, 494, 499, 500, 501,
	502, 503, 511, 512, 517, 540, 542, 555, 574, 580,
	492, 315, 316, 457, 458, 328, 329, 603, 604, 314,
	550, 581, 548, 602, 575, 451, 390, 1311, 1381, 565,
	1317, 393, 296, 319, 334, 1326, 566, 513, 244, 478,
	305, 268, 1344, 1346, 229, 263, 247, 274, 289, 292,
	338, 403, 411, 440, 445, 311, 286, 261, 471, 258,
	496, 520, 521, 522, 524, 407, 281, 444, 1307, 1335,
	388, 530, 531, 330, 408, 0, 0, 0, 1364, 1349,
	529, 0, 1292, 1367, 1261, 1280, 1377, 1283, 1286, 1328,
	1240, 1306, 427, 1277, 1233, 1265, 1235, 1272, 1236, 1263,
	1294, 285, 1260, 1351, 1310, 1366, 378, 282, 1242, 1266,
	441, 1282, 223, 1330, 498, 269, 389, 386, 537, 297,
	288, 284, 267, 331, 397, 439, 519, 433, 1373, 382,
	1316, 0, 508, 412, 0, 0, 0, 1296, 1355, 1304,
	1342, 1291, 1329, 1250, 1315, 1368, 1278, 1325, 1369, 337,
	265, 339, 222, 424, 509, 301, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 262, 0, 0, 0, 363, 372,
	371, 352, 353, 355, 357, 362, 369, 375, 1274, 1322,
	1363, 1275, 1324, 280, 335, 287, 279, 534, 1374, 1354,
	1239, 1303, 1362, 0, 0, 246, 1365, 1298, 0, 1327,
	0, 1380, 1234, 1318, 0, 1237, 1241, 1376, 1358, 1269,
	290, 0, 0, 0, 0, 0, 0, 0, 1295, 1305,
	1339, 1343, 1289, 0, 0, 0, 0, 0, 2996, 0,
	1267, 0, 1314, 0, 0, 0, 1246, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 1249, 0, 1268, 1340, 0,
	1232, 312, 1243, 413, 272, 1386, 0, 465, 1347, 1357,
	1290, 577, 1361, 1288, 1287, 1334, 1247, 1353, 1281, 377,
	1245, 344, 218, 242, 0, 1279, 423, 473, 485, 1352,
	1264, 1273, 270, 1271, 483, 437, 554, 250, 299, 470,
	443, 481, 453, 302, 1313, 1332, 482, 384, 539, 463,
	551, 578, 579, 278, 417, 563, 523, 572, 605, 243,
	275, 431, 516, 557, 505, 409, 535, 536, 343, 504,
	310, 221, 381, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 644, 645, 646,
	647, 648, 0, 0, 643, 649, 584, 241, 491, 383,
	259, 248, 541, 560, 304, 468, 447, 448, 586, 600,
	587, 589, 590, 230, 518, 549, 256, 495, 0, 0,
	607, 264, 515, 232, 546, 514, 405, 340, 341, 231,
	0, 469, 283, 308, 0, 0, 273, 426, 543, 544,
	271, 608, 245, 571, 237, 1244, 570, 419, 538, 547,
	406, 395, 236, 545, 404, 394, 348, 367, 368, 295,
	321, 460, 387, 461, 320, 322, 415, 414, 416, 225,
	558, 0, 226, 0, 510, 559, 609, 251, 252, 254,
	1259, 294, 298, 306, 309, 317, 318, 327, 379, 430,
	459, 455, 464, 1348, 533, 552, 564, 576, 582, 583,
	585, 591, 592, 593, 595, 601, 599, 596, 597, 598,
	594, 588, 418, 325, 506, 347, 385, 1337, 1379, 436,
	484, 257, 556, 507, 1382, 1383, 1384, 1385, 1254, 1258,
	1252, 1319, 1253, 1308, 1309, 1255, 1370, 1371, 1372, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 1341, 1248,
	0, 1256, 1257, 1350, 1359, 1360, 642, 396, 497, 553,
	349, 361, 364, 354, 373, 0, 374, 350, 351, 356,
	358, 359, 360, 365, 366, 370, 376, 266, 228, 402,
	410, 532, 326, 233, 234, 235, 525, 526, 527, 528,
	568, 569, 573, 474, 475, 476, 477, 307, 562, 323,
	480, 479, 345, 346, 391, 462, 1312, 217, 238, 380,
	1375, 466, 303, 606, 567, 561, 224, 240, 1251, 277,
	1262, 1270, 0, 1276, 1284, 1285, 1297, 1299, 1300, 1301,
	1302, 1320, 1321, 1323, 1331, 1333, 1336, 1338, 1345, 1356,
	1378, 219, 220, 227, 239, 249, 253, 260, 276, 291,
	293, 300, 313, 324, 332, 333, 336, 342, 392, 398,
	399, 400, 401, 420, 421, 422, 425, 428, 429, 432,
	434, 435, 438, 442, 446, 449, 450, 452, 454, 456,
	467, 472, 486, 487, 488, 489, 490, 493, 494, 499,
	500, 501, 502, 503, 511, 512, 517, 540, 542, 555,
	574, 580, 492, 315, 316, 457, 458, 328, 329, 603,
	604, 314, 550, 581, 548, 602, 575, 451, 390, 1311,
	1381, 565, 1317, 393, 296, 319, 334, 1326, 566, 513,
	244, 478, 305, 268, 1344, 1346, 229, 263, 247, 274,
	289, 292, 338, 403, 411, 440, 445, 311, 286, 261,
	471, 258, 496, 520, 521, 522, 524, 407, 281, 444,
	1307, 1335, 388, 530, 531, 330, 408, 0, 0, 0,
	1364, 1349, 529, 0, 1292, 1367, 1261, 1280, 1377, 1283,
	1286, 1328, 1240, 1306, 427, 1277, 1233, 1265, 1235, 1272,
	1236, 1263, 1294, 285, 1260, 1351, 1310, 1366, 378, 282,
	1242, 1266, 441, 1282, 223, 1330, 498, 269, 389, 386,
	537, 297, 288, 284, 267, 331, 397, 439, 519, 433,
	1373, 382, 1316, 0, 508, 412, 0, 0, 0, 1296,
	1355, 1304, 1342, 1291, 1329, 1250, 1315, 1368, 1278, 1325,
	1369, 337, 265, 339, 222, 424, 509, 301, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 262, 0, 0, 0,
	363, 372, 371, 352, 353, 355, 357, 362, 369, 375,
	1274, 1322, 1363, 1275, 1324, 280, 335, 287, 279, 534,
	1374, 1354, 1239, 1303, 1362, 0, 0, 246, 1365, 1298,
	0, 1327, 0, 1380, 1234, 1318, 0, 1237, 1241, 1376,
	1358, 1269, 290, 0, 0, 0, 0, 0, 0, 0,
	1295, 1305, 1339, 1343, 1289, 0, 0, 0, 0, 0,
	2957, 0, 1267, 0, 1314, 0, 0, 0, 1246, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 1249, 0, 1268,
	1340, 0, 1232, 312, 1243, 413, 272, 1386, 0, 465,
	1347, 1357, 1290, 577, 1361, 1288, 1287, 1334, 1247, 1353,
	1281, 377, 1245, 344, 218, 242, 0, 1279, 423, 473,
	485, 1352, 1264, 1273, 270, 1271, 483, 437, 554, 250,
	299, 470, 443, 481, 453, 302, 1313, 1332, 482, 384,
	539, 463, 551, 578, 579, 278, 417, 563, 523, 572,
	605, 243, 275, 431, 516, 557, 505, 409, 535, 536,
	343, 504, 310, 221, 381, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 644,
	645, 646, 647, 648, 0, 0, 643, 649, 584, 241,
	491, 383, 259, 248, 541, 560, 304, 468, 447, 448,
	586, 600, 587, 589, 590, 230, 518, 549, 256, 495,
	0, 0, 607, 264, 515, 232, 546, 514, 405, 340,
	341, 231, 0, 469, 283, 308, 0, 0, 273, 426,
	543, 544, 271, 608, 245, 571, 237, 1244, 570, 419,
	538, 547, 406, 395, 236, 545, 404, 394, 348, 367,
	368, 295, 321, 460, 387, 461, 320, 322, 415, 414,
	416, 225, 558, 0, 226, 0, 510, 559, 609, 251,
	252, 254, 1259, 294, 298, 306, 309, 317, 318, 327,
	379, 430, 459, 455, 464, 1348, 533, 552, 564, 576,
	582, 583, 585, 591, 592, 593, 595, 601, 599, 596,
	597, 598, 594, 588, 418, 325, 506, 347, 385, 1337,
	1379, 436, 484, 257, 556, 507, 1382, 1383, 1384, 1385,
	1254, 1258, 1252, 1319, 1253, 1308, 1309, 1255, 1370, 1371,
	1372, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1341, 1248, 0, 1256, 1257, 1350, 1359, 1360, 642, 396,
	497, 553, 349, 361, 364, 354, 373, 0, 374, 350,
	351, 356, 358, 359, 360, 365, 366, 370, 376, 266,
	228, 402, 410, 532, 326, 233, 234, 235, 525, 526,
	527, 528, 568, 569, 573, 474, 475, 476, 477, 307,
	562, 323, 480, 479, 345, 346, 391, 462, 1312, 217,
	238, 380, 1375, 466, 303, 606, 567, 561, 224, 240,
	1251, 277, 1262, 1270, 0, 1276, 1284, 1285, 1297, 1299,
	1300, 1301, 1302, 1320, 1321, 1323, 1331, 1333, 1336, 1338,
	1345, 1356, 1378, 219, 220, 227, 239, 249, 253, 260,
	276, 291, 293, 300, 313, 324, 332, 333, 336, 342,
	392, 398, 399, 400, 401, 420, 421, 422, 425, 428,
	429, 432, 434, 435, 438, 442, 446, 449, 450, 452,
	454, 456, 467, 472, 486, 487, 488, 489, 490, 493,
	494, 499, 500, 501, 502, 503, 511, 512, 517, 540,
	542, 555, 574, 580, 492, 315, 316, 457, 458, 328,
	329, 603, 604, 314, 550, 581, 548, 602, 575, 451,
	390, 1311, 1381, 565, 1317, 393, 296, 319, 334, 1326,
	566, 513, 244, 478, 305, 268, 1344, 1346, 229, 263,
	247, 274, 289, 292, 338, 403, 411, 440, 445, 311,
	286, 261, 471, 258, 496, 520, 521, 522, 524, 407,
	281, 444, 1307, 1335, 388, 530, 531, 330, 408, 0,
	0, 0, 1364, 1349, 529, 0, 1292, 1367, 1261, 1280,
	1377, 1283, 1286, 1328, 1240, 1306, 427, 1277, 1233, 1265,
	1235, 1272, 1236, 1263, 1294, 285, 1260, 1351, 1310, 1366,
	378, 282, 1242, 1266, 441, 1282, 223, 1330, 498, 269,
	389, 386, 537, 297, 288, 284, 267, 331, 397, 439,
	519, 433, 1373, 382, 1316, 0, 508, 412, 0, 0,
	0, 1296, 1355, 1304, 1342, 1291, 1329, 1250, 1315, 1368,
	1278, 1325, 1369, 337, 265, 339, 222, 424, 509, 301,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 262, 0,
	0, 0, 363, 372, 371, 352, 353, 355, 357, 362,
	369, 375, 1274, 1322, 1363, 1275, 1324, 280, 335, 287,
	279, 534, 1374, 1354, 1239, 1303, 1362, 0, 0, 246,
	1365, 1298, 0, 1327, 0, 1380, 1234, 1318, 0, 1237,
	1241, 1376, 1358, 1269, 290, 0, 0, 0, 0, 0,
	0, 0, 1295, 1305, 1339, 1343, 1289, 0, 0, 0,
	0, 0, 2238, 0, 1267, 0, 1314, 0, 0, 0,
	1246, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 1249,
	0, 1268, 1340, 0, 1232, 312, 1243, 413, 272, 1386,
	0, 465, 1347, 1357, 1290, 577, 1361, 1288, 1287, 1334,
	1247, 1353, 1281, 377, 1245, 344, 218, 242, 0, 1279,
	423, 473, 485, 1352, 1264, 1273, 270, 1271, 483, 437,
	554, 250, 299, 470, 443, 481, 453, 302, 1313, 1332,
	482, 384, 539, 463, 551, 578, 579, 278, 417, 563,
	523, 572, 605, 243, 275, 431, 516, 557, 505, 409,
	535, 536, 343, 504, 310, 221, 381, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 644, 645, 646, 647, 648, 0, 0, 643, 649,
	584, 241, 491, 383, 259, 248, 541, 560, 304, 468,
	447, 448, 586, 600, 587, 589, 590, 230, 518, 549,
	256, 495, 0, 0, 607, 264, 515, 232, 546, 514,
	405, 340, 341, 231, 0, 469, 283, 308, 0, 0,
	273, 426, 543, 544, 271, 608, 245, 571, 237, 1244,
	570, 419, 538, 547, 406, 395, 236, 545, 404, 394,
	348, 367, 368, 295, 321, 460, 387, 461, 320, 322,
	415, 414, 416, 225, 558, 0, 226, 0, 510, 559,
	609, 251, 252, 254, 1259, 294, 298, 306, 309, 317,
	318, 327, 379, 430, 459, 455, 464, 1348, 533, 552,
	564, 576, 582, 583, 585, 591, 592, 593, 595, 601,
	599, 596, 597, 598, 594, 588, 418, 325, 506, 347,
	385, 1337, 1379, 436, 484, 257, 556, 507, 1382, 1383,
	1384, 1385, 1254, 1258, 1252, 1319, 1253, 1308, 1309, 1255,
	1370, 1371, 1372, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 1341, 1248, 0, 1256, 1257, 1350, 1359, 1360,
	642, 396, 497, 553, 349, 361, 364, 354, 373, 0,
	374, 350, 351, 356, 358, 359, 360, 365, 366, 370,
	376, 266, 228, 402, 410, 532, 326, 233, 234, 235,
	525, 526, 527, 528, 568, 569, 573, 474, 475, 476,
	477, 307, 562, 323, 480, 479, 345, 346, 391, 462,
	1312, 217, 238, 380, 1375, 466, 303, 606, 567, 561,
	224, 240, 1251, 277, 1262, 1270, 0, 1276, 1284, 1285,
	1297, 1299, 1300, 1301, 1302, 1320, 1321, 1323, 1331, 1333,
	1336, 1338, 1345, 1356, 1378, 219, 220, 227, 239, 249,
	253, 260, 276, 291, 293, 300, 313, 324, 332, 333,
	336, 342, 392, 398, 399, 400, 401, 420, 421, 422,
	425, 428, 429, 432, 434, 435, 438, 442, 446, 449,
	450, 452, 454, 456, 467, 472, 486, 487, 488, 489,
	490, 493, 494, 499, 500, 501, 502, 503, 511, 512,
	517, 540, 542, 555, 574, 580, 492, 315, 316, 457,
	458, 328, 329, 603, 604, 314, 550, 581, 548, 602,
	575, 451, 390, 1311, 1381, 565, 1317, 393, 296, 319,
	334, 1326, 566, 513, 244, 478, 305, 268, 1344, 1346,
	229, 263, 247, 274, 289, 292, 338, 403, 411, 440,
	445, 311, 286, 261, 471, 258, 496, 520, 521, 522,
	524, 407, 281, 444, 1307, 1335, 388, 530, 531, 330,
	408, 0, 0, 0, 1364, 1349, 529, 0, 1292, 1367,
	1261, 1280, 1377, 1283, 1286, 1328, 1240, 1306, 427, 1277,
	1233, 1265, 1235, 1272, 1236, 1263, 1294, 285, 1260, 1351,
	1310, 1366, 378, 282, 1242, 1266, 441, 1282, 223, 1330,
	498, 269, 389, 386, 537, 297, 288, 284, 267, 331,
	397, 439, 519, 433, 1373, 382, 1316, 0, 508, 412,
	0, 0, 0, 1296, 1355, 1304, 1342, 1291, 1329, 1250,
	1315, 1368, 1278, 1325, 1369, 337, 265, 339, 222, 424,
	509, 301, 0, 113, 0, 0, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	262, 0, 0, 0, 363, 372, 371, 352, 353, 355,
	357, 362, 369, 375, 1274, 1322, 1363, 1275, 1324, 280,
	335, 287, 279, 534, 1374, 1354, 1239, 1303, 1362, 0,
	0, 246, 1365, 1298, 0, 1327, 0, 1380, 1234, 1318,
	0, 1237, 1241, 1376, 1358, 1269, 290, 0, 0, 0,
	0, 0, 0, 0, 1295, 1305, 1339, 1343, 1289, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 1314, 0,
	0, 0, 1246, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 0,
	0, 1249, 0, 1268, 1340, 0, 1232, 312, 1243, 413,
	272, 1386, 0, 465, 1347, 1357, 1290, 577, 1361, 1288,
	1287, 1334, 1247, 1353, 1281, 377, 1245, 344, 218, 242,
	0, 1279, 423, 473, 485, 1352, 1264, 1273, 270, 1271,
	483, 437, 554, 250, 299, 470, 443, 481, 453, 302,
	1313, 1332, 482, 384, 539, 463, 551, 578, 579, 278,
	417, 563, 523, 572, 605, 243, 275, 431, 516, 557,
	505, 409, 535, 536, 343, 504, 310, 221, 381, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 644, 645, 646, 647, 648, 0, 0,
	643, 649, 584, 241, 491, 383, 259, 248, 541, 560,
	304, 468, 447, 448, 586, 600, 587, 589, 590, 230,
	518, 549, 256, 495, 0, 0, 607, 264, 515, 232,
	546, 514, 405, 340, 341, 231, 0, 469, 283, 308,
	0, 0, 273, 426, 543, 544, 271, 608, 245, 571,
	237, 1244, 570, 419, 538, 547, 406, 395, 236, 545,
	404, 394, 348, 367, 368, 295, 321, 460, 387, 461,
	320, 322, 415, 414, 416, 225, 558, 0, 226, 0,
	510, 559, 609, 251, 252, 254, 1259, 294, 298, 306,
	309, 317, 318, 327, 379, 430, 459, 455, 464, 1348,
	533, 552, 564, 576, 582, 583, 585, 591, 592, 593,
	595, 601, 599, 596, 597, 598, 594, 588, 418, 325,
	506, 347, 385, 1337, 1379, 436, 484, 257, 556, 507,
	1382, 1383, 1384, 1385, 1254, 1258, 1252, 1319, 1253, 1308,
	1309, 1255, 1370, 1371, 1372, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 1341, 1248, 0, 1256, 1257, 1350,
	1359, 1360, 642, 396, 497, 553, 349, 361, 364, 354,
	373, 0, 374, 350, 351, 356, 358, 359, 360, 365,
	366, 370, 376, 266, 228, 402, 410, 532, 326, 233,
	234, 235, 525, 526, 527, 528, 568, 569, 573, 474,
	475, 476, 477, 307, 562, 323, 480, 479, 345, 346,
	391, 462, 1312, 217, 238, 380, 1375, 466, 303, 606,
	567, 561, 224, 240, 1251, 277, 1262, 1270, 0, 1276,
	1284, 1285, 1297, 1299, 1300, 1301, 1302, 1320, 1321, 1323,
	1331, 1333, 1336, 1338, 1345, 1356, 1378, 219, 220, 227,
	239, 249, 253, 260, 276, 291, 293, 300, 313, 324,
	332, 333, 336, 342, 392, 398, 399, 400, 401, 420,
	421, 422, 425, 428, 429, 432, 434, 435, 438, 442,
	446, 449, 450, 452, 454, 456, 467, 472, 486, 487,
	488, 489, 490, 493, 494, 499, 500, 501, 502, 503,
	511, 512, 517, 540, 542, 555, 574, 580, 492, 315,
	316, 457, 458, 328, 329, 603, 604, 314, 550, 581,
	548, 602, 575, 451, 390, 1311, 1381, 565, 1317, 393,
	296, 319, 334, 1326, 566, 513, 244, 478, 305, 268,
	1344, 1346, 229, 263, 247, 274, 289, 292, 338, 403,
	411, 440, 445, 311, 286, 261, 471, 258, 496, 520,
	521, 522, 524, 407, 281, 444, 1307, 1335, 388, 530,
	531, 330, 408, 0, 0, 0, 1364, 1349, 529, 0,
	1292, 1367, 1261, 1280, 1377, 1283, 1286, 1328, 1240, 1306,
	427, 1277, 1233, 1265, 1235, 1272, 1236, 1263, 1294, 285,
	1260, 1351, 1310, 1366, 378, 282, 1242, 1266, 441, 1282,
	223, 1330, 498, 269, 389, 386, 537, 297, 288, 284,
	267, 331, 397, 439, 519, 433, 1373, 382, 1316, 0,
	508, 412, 0, 0, 0, 1296, 1355, 1304, 1342, 1291,
	1329, 1250, 1315, 1368, 1278, 1325, 1369, 337, 265, 339,
	222, 424, 509, 301, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 262, 0, 0, 0, 363, 372, 371, 352,
	353, 355, 357, 362, 369, 375, 1274, 1322, 1363, 1275,
	1324, 280, 335, 287, 279, 534, 1374, 1354, 1239, 1303,
	1362, 0, 0, 246, 1365, 1298, 0, 1327, 0, 1380,
	1234, 1318, 0, 1237, 1241, 1376, 1358, 1269, 290, 0,
	0, 0, 0, 0, 0, 0, 1295, 1305, 1339, 1343,
	1289, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1314, 0, 0, 0, 1246, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 0,
	0, 0, 0, 1249, 0, 1268, 1340, 0, 1232, 312,
	1243, 413, 272, 1386, 0, 465, 1347, 1357, 1290, 577,
	1361, 1288, 1287, 1334, 1247, 1353, 1281, 377, 1245, 344,
	218, 242, 0, 1279, 423, 473, 485, 1352, 1264, 1273,
	270, 1271, 483, 437, 554, 250, 299, 470, 443, 481,
	453, 302, 1313, 1332, 482, 384, 539, 463, 551, 578,
	579, 278, 417, 563, 523, 572, 605, 243, 275, 431,
	516, 557, 505, 409, 535, 536, 343, 504, 310, 221,
	381, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 644, 645, 646, 647, 648,
	0, 0, 643, 649, 584, 241, 491, 383, 259, 248,
	541, 560, 304, 468, 447, 448, 586, 600, 587, 589,
	590, 230, 518, 549, 256, 495, 0, 0, 607, 264,
	515, 232, 546, 514, 405, 340, 341, 231, 0, 469,
	283, 308, 0, 0, 273, 426, 543, 544, 271, 608,
	245, 571, 237, 1244, 570, 419, 538, 547, 406, 395,
	236, 545, 404, 394, 348, 367, 368, 295, 321, 460,
	387, 461, 320, 322, 415, 414, 416, 225, 558, 0,
	226, 0, 510, 559, 609, 251, 252, 254, 1259, 294,
	298, 306, 309, 317, 318, 327, 379, 430, 459, 455,
	464, 1348, 533, 552, 564, 576, 582, 583, 585, 591,
	592, 593, 595, 601, 599, 596, 597, 598, 594, 588,
	418, 325, 506, 347, 385, 1337, 1379, 436, 484, 257,
	556, 507, 1382, 1383, 1384, 1385, 1254, 1258, 1252, 1319,
	1253, 1308, 1309, 1255, 1370, 1371, 1372, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 1341, 1248, 0, 1256,
	1257, 1350, 1359, 1360, 642, 396, 497, 553, 349, 361,
	364, 354, 373, 0, 374, 350, 351, 356, 358, 359,
	360, 365, 366, 370, 376, 266, 228, 402, 410, 532,
	326, 233, 234, 235, 525, 526, 527, 528, 568, 569,
	573, 474, 475, 476, 477, 307, 562, 323, 480, 479,
	345, 346, 391, 462, 1312, 217, 238, 380, 1375, 466,
	303, 606, 567, 561, 224, 240, 1251, 277, 1262, 1270,
	0, 1276, 1284, 1285, 1297, 1299, 1300, 1301, 1302, 1320,
	1321, 1323, 1331, 1333, 1336, 1338, 1345, 1356, 1378, 219,
	220, 227, 239, 249, 253, 260, 276, 291, 293, 300,
	313, 324, 332, 333, 336, 342, 392, 398, 399, 400,
	401, 420, 421, 422, 425, 428, 429, 432, 434, 435,
	438, 442, 446, 449, 450, 452, 454, 456, 467, 472,
	486, 487, 488, 489, 490, 493, 494, 499, 500, 501,
	502, 503, 511, 512, 517, 540, 542, 555, 574, 580,
	492, 315, 316, 457, 458, 328, 329, 603, 604, 314,
	550, 581, 548, 602, 575, 451, 390, 1311, 1381, 565,
	1317, 393, 296, 319, 334, 1326, 566, 513, 244, 478,
	305, 268, 1344, 1346, 229, 263, 247, 274, 289, 292,
	338, 403, 411, 440, 445, 311, 286, 261, 471, 258,
	496, 520, 521, 522, 524, 407, 281, 444, 1307, 1335,
	388, 530, 531, 330, 408, 0, 0, 0, 1364, 1349,
	529, 0, 1292, 1367, 1261, 1280, 1377, 1283, 1286, 1328,
	1240, 1306, 427, 1277, 1233, 1265, 1235, 1272, 1236, 1263,
	1294, 285, 1260, 1351, 1310, 1366, 378, 282, 1242, 1266,
	441, 1282, 223, 1330, 498, 269, 389, 386, 537, 297,
	288, 284, 267, 331, 397, 439, 519, 433, 1373, 382,
	1316, 0, 508, 412, 0, 0, 0, 1296, 1355, 1304,
	1342, 1291, 1329, 1250, 1315, 1368, 1278, 1325, 1369, 337,
	265, 339, 222, 424, 509, 301, 0, 0, 0, 0,
	0, 884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 262, 0, 0, 0, 363, 372,
	371, 352, 353, 355, 357, 362, 369, 375, 1274, 1322,
	1363, 1275, 1324, 280, 335, 287, 279, 534, 1374, 1354,
	1239, 1303, 1362, 0, 0, 246, 1365, 1298, 0, 1327,
	0, 1380, 1234, 1318, 0, 1237, 1241, 1376, 1358, 1269,
	290, 0, 0, 0, 0, 0, 0, 0, 1295, 1305,
	1339, 1343, 1289, 0, 0, 0, 0, 0, 0, 0,
	1267, 0, 1314, 0, 0, 0, 1246, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 1249, 0, 1268, 1340, 0,
	1232, 312, 1243, 413, 272, 1386, 0, 465, 1347, 1357,
	1290, 577, 1361, 1288, 1287, 1334, 1247, 1353, 1281, 377,
	1245, 344, 218, 242, 0, 1279, 423, 473, 485, 1352,
	1264, 1273, 270, 1271, 483, 437, 554, 250, 299, 470,
	443, 481, 453, 302, 1313, 1332, 482, 384, 539, 463,
	551, 578, 579, 278, 417, 563, 523, 572, 605, 243,
	275, 431, 516, 557, 505, 409, 535, 536, 343, 504,
	310, 221, 381, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 644, 645, 646,
	647, 648, 0, 0, 643, 649, 584, 241, 491, 383,
	259, 248, 541, 560, 304, 468, 447, 448, 586, 600,
	587, 589, 590, 230, 518, 549, 256, 495, 0, 0,
	607, 264, 515, 232, 546, 514, 405, 340, 341, 231,
	0, 469, 283, 308, 0, 0, 273, 426, 543, 544,
	271, 608, 245, 571, 237, 1244, 570, 419, 538, 547,
	406, 395, 236, 545, 404, 394, 348, 367, 368, 295,
	321, 460, 387, 461, 320, 322, 415, 414, 416, 225,
	558, 0, 226, 0, 510, 559, 609, 251, 252, 254,
	1259, 294, 298, 306, 309, 317, 318, 327, 379, 430,
	459, 455, 464, 1348, 533, 552, 564, 576, 582, 583,
	585, 591, 592, 593, 595, 601, 599, 596, 597, 598,
	594, 588, 418, 325, 506, 347, 385, 1337, 1379, 436,
	484, 257, 556, 507, 1382, 1383, 1384, 1385, 1254, 1258,
	1252, 1319, 1253, 1308, 1309, 1255, 1370, 1371, 1372, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 1341, 1248,
	0, 1256, 1257, 1350, 1359, 1360, 642, 396, 497, 553,
	349, 361, 364, 354, 373, 0, 374, 350, 351, 356,
	358, 359, 360, 365, 366, 370, 376, 266, 228, 402,
	410, 532, 326, 233, 234, 235, 525, 526, 527, 528,
	568, 569, 573, 474, 475, 476, 477, 307, 562, 323,
	480, 479, 345, 346, 391, 462, 1312, 217, 238, 380,
	1375, 466, 303, 606, 567, 561, 224, 240, 1251, 277,
	1262, 1270, 0, 1276, 1284, 1285, 1297, 1299, 1300, 1301,
	1302, 1320, 1321, 1323, 1331, 1333, 1336, 1338, 1345, 1356,
	1378, 219, 220, 227, 239, 249, 253, 260, 276, 291,
	293, 300, 313, 324, 332, 333, 336, 342, 392, 398,
	399, 400, 401, 420, 421, 422, 425, 428, 429, 432,
	434, 435, 438, 442, 446, 449, 450, 452, 454, 456,
	467, 472, 486, 487, 488, 489, 490, 493, 494, 499,
	500, 501, 502, 503, 511, 512, 517, 540, 542, 555,
	574, 580, 492, 315, 316, 457, 458, 328, 329, 603,
	604, 314, 550, 581, 548, 602, 575, 451, 390, 1311,
	1381, 565, 1317, 393, 296, 319, 334, 1326, 566, 513,
	244, 478, 305, 268, 1344, 1346, 229, 263, 247, 274,
	289, 292, 338, 403, 411, 440, 445, 311, 286, 261,
	471, 258, 496, 520, 521, 522, 524, 407, 281, 444,
	1307, 1335, 388, 530, 531, 330, 408, 0, 0, 0,
	1364, 1349, 529, 0, 1292, 1367, 1261, 1280, 1377, 1283,
	1286, 1328, 1240, 1306, 427, 1277, 1233, 1265, 1235, 1272,
	1236, 1263, 1294, 285, 1260, 1351, 1310, 1366, 378, 282,
	1242, 1266, 441, 1282, 223, 1330, 498, 269, 389, 386,
	537, 297, 288, 284, 267, 331, 397, 439, 519, 433,
	1373, 382, 1316, 0, 508, 412, 0, 0, 0, 1296,
	1355, 1304, 1342, 1291, 1329, 1250, 1315, 1368, 1278, 1325,
	1369, 337, 265, 339, 222, 424, 509, 301, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 262, 0, 0, 0,
	363, 372, 371, 352, 353, 355, 357, 362, 369, 375,
	1274, 1322, 1363, 1275, 1324, 280, 335, 287, 279, 534,
	1374, 1354, 1239, 1303, 1362, 0, 0, 246, 1365, 1298,
	0, 1327, 0, 1380, 1234, 1318, 0, 1237, 1241, 1376,
	1358, 1269, 290, 0, 0, 0, 0, 0, 0, 0,
	1295, 1305, 1339, 1343, 1289, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 1314, 0, 0, 0, 1246, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 1249, 0, 1268,
	1340, 0, 1232, 312, 1243, 413, 272, 1386, 0, 465,
	1347, 1357, 1290, 577, 1361, 1288, 1287, 1334, 1247, 1353,
	1281, 377, 1245, 344, 218, 242, 0, 1279, 423, 473,
	485, 1352, 1264, 1273, 270, 1271, 483, 437, 554, 250,
	299, 470, 443, 481, 453, 302, 1313, 1332, 482, 384,
	539, 463, 551, 578, 579, 278, 417, 563, 523, 572,
	605, 243, 275, 431, 516, 557, 505, 409, 535, 536,
	343, 504, 310, 221, 381, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 644,
	645, 646, 647, 648, 0, 0, 643, 649, 584, 241,
	491, 383, 259, 248, 541, 560, 304, 468, 447, 448,
	586, 600, 587, 589, 590, 230, 518, 549, 256, 495,
	0, 0, 607, 264, 515, 232, 546, 514, 405, 340,
	341, 231, 0, 469, 283, 308, 0, 0, 273, 426,
	543, 544, 271, 608, 245, 571, 237, 1244, 570, 419,
	538, 547, 406, 395, 236, 545, 404, 394, 348, 367,
	368, 295, 321, 460, 387, 461, 320, 322, 415, 414,
	416, 225, 558, 0, 226, 0, 510, 559, 609, 251,
	252, 254, 1259, 294, 298, 306, 309, 317, 318, 327,
	379, 430, 459, 455, 464, 1348, 533, 552, 564, 576,
	582, 583, 585, 591, 592, 593, 595, 601, 599, 596,
	597, 598, 594, 588, 418, 325, 506, 347, 385, 1337,
	1379, 436, 484, 257, 556, 507, 1382, 1383, 1384, 1385,
	1254, 1258, 1252, 1319, 1253, 1308, 1309, 1255, 1370, 1371,
	1372, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1341, 1248, 0, 1256, 1257, 1350, 1359, 1360, 642, 396,
	497, 553, 349, 361, 364, 354, 373, 0, 374, 350,
	351, 356, 358, 359, 360, 365, 366, 370, 376, 266,
	228, 402, 410, 532, 326, 233, 234, 235, 525, 526,
	527, 528, 568, 569, 573, 474, 475, 476, 477, 307,
	562, 323, 480, 479, 345, 346, 391, 462, 1312, 217,
	238, 380, 1375, 466, 303, 606, 567, 561, 224, 240,
	1251, 277, 1262, 1270, 0, 1276, 1284, 1285, 1297, 1299,
	1300, 1301, 1302, 1320, 1321, 1323, 1331, 1333, 1336, 1338,
	1345, 1356, 1378, 219, 220, 227, 239, 249, 253, 260,
	276, 291, 293, 300, 313, 324, 332, 333, 336, 342,
	392, 398, 399, 400, 401, 420, 421, 422, 425, 428,
	429, 432, 434, 435, 438, 442, 446, 449, 450, 452,
	454, 456, 467, 472, 486, 487, 488, 489, 490, 493,
	494, 499, 500, 501, 502, 503, 511, 512, 517, 540,
	542, 555, 574, 580, 492, 315, 316, 457, 458, 328,
	329, 603, 604, 314, 550, 581, 548, 602, 575, 451,
	390, 1311, 1381, 565, 1317, 393, 296, 319, 334, 1326,
	566, 513, 244, 478, 305, 268, 1344, 1346, 229, 263,
	247, 274, 289, 292, 338, 403, 411, 440, 445, 311,
	286, 261, 471, 258, 496, 520, 521, 522, 524, 407,
	281, 444, 1307, 1335, 388, 530, 531, 330, 408, 0,
	0, 0, 0, 0, 529, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 750, 0, 0, 0, 285, 755, 0, 0, 0,
	378, 282, 0, 0, 441, 0, 223, 0, 498, 269,
	389, 386, 537, 297, 288, 284, 267, 331, 397, 439,
	519, 433, 762, 382, 0, 0, 508, 412, 0, 0,
	0, 0, 0, 758, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 265, 339, 222, 424, 509, 301,
	0, 113, 0, 0, 900, 884, 850, 851, 888, 901,
	902, 903, 904, 889, 0, 255, 890, 891, 262, 892,
	0, 849, 790, 792, 791, 809, 810, 811, 812, 813,
	814, 815, 788, 897, 905, 906, 0, 280, 335, 287,
	279, 534, 0, 0, 2117, 2118, 2119, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 732, 747, 0,
	761, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 745, 0, 0, 0, 0, 844, 0, 746, 0,
	0, 754, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 413, 272, 0,
	0, 465, 843, 0, 0, 577, 0, 0, 841, 0,
	0, 0, 0, 377, 0, 344, 218, 242, 0, 0,
	423, 473, 485, 0, 0, 0, 894, 0, 483, 437,
	554, 250, 299, 470, 443, 481, 453, 302, 0, 0,
	482, 384, 539, 463, 551, 578, 579, 278, 417, 563,
	523, 572, 605, 243, 275, 431, 516, 557, 505, 409,
	535, 536, 343, 504, 310, 221, 381, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 644, 645, 646, 647, 648, 0, 0, 643, 649,
	584, 241, 491, 383, 259, 248, 541, 560, 304, 468,
	447, 448, 586, 600, 587, 589, 590, 230, 518, 549,
	256, 495, 0, 0, 607, 264, 515, 232, 546, 514,
	405, 340, 341, 231, 0, 469, 283, 308, 0, 0,
	273, 426, 895, 896, 271, 608, 796, 571, 237, 0,
	570, 419, 538, 547, 406, 395, 236, 545, 404, 394,
	348, 804, 805, 295, 321, 460, 387, 461, 320, 322,
	415, 414, 416, 225, 558, 0, 226, 0, 510, 559,
	609, 251, 252, 254, 0, 294, 298, 306, 309, 317,
	318, 327, 379, 430, 459, 455, 464, 0, 533, 552,
	564, 576, 582, 583, 585, 591, 592, 593, 595, 601,
	599, 596, 597, 598, 594, 588, 418, 325, 506, 347,
	385, 0, 0, 436, 484, 257, 556, 507, 0, 0,
	0, 0, 854, 842, 767, 858, 769, 855, 856, 764,
	765, 768, 857, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 845, 753, 752, 0, 760, 0, 786, 787,
	789, 793, 794, 795, 806, 807, 808, 816, 818, 819,
	817, 820, 821, 822, 825, 826, 827, 828, 823, 824,
	829, 770, 774, 771, 772, 773, 785, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 868, 869, 870,
	871, 872, 873, 799, 803, 802, 800, 801, 797, 798,
	751, 217, 238, 380, 0, 466, 303, 606, 567, 561,
	224, 240, 859, 277, 860, 0, 0, 864, 0, 0,
	0, 866, 865, 0, 867, 833, 832, 0, 0, 861,
	862, 0, 863, 0, 0, 219, 220, 227, 239, 249,
	253, 260, 276, 291, 293, 300, 313, 324, 332, 333,
	336, 342, 392, 398, 399, 400, 401, 420, 421, 422,
	425, 428, 429, 432, 434, 435, 438, 442, 446, 449,
	450, 452, 454, 456, 467, 472, 486, 487, 488, 489,
	490, 493, 494, 499, 500, 501, 502, 503, 511, 512,
	517, 540, 542, 555, 574, 580, 492, 874, 875, 876,
	877, 878, 879, 880, 881, 314, 550, 581, 548, 602,
	575, 451, 390, 0, 0, 565, 0, 393, 296, 319,
	334, 0, 566, 513, 244, 478, 305, 268, 899, 0,
	229, 263, 247, 274, 289, 292, 338, 403, 411, 440,
	445, 311, 286, 261, 471, 258, 496, 520, 521, 522,
	524, 407, 281, 444, 408, 0, 388, 530, 531, 330,
	529, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 750, 0, 0,
	0, 285, 755, 0, 0, 0, 378, 282, 0, 0,
	441, 0, 223, 0, 498, 269, 389, 386, 537, 297,
	288, 284, 267, 331, 397, 439, 519, 433, 762, 382,
	0, 0, 508, 412, 0, 0, 0, 0, 0, 758,
	759, 0, 0, 0, 0, 0, 0, 2267, 0, 337,
	265, 339, 222, 424, 509, 301, 0, 113, 0, 0,
	900, 884, 850, 851, 888, 901, 902, 903, 904, 889,
	0, 255, 890, 891, 262, 892, 0, 849, 790, 792,
	791, 809, 810, 811, 812, 813, 814, 815, 788, 897,
	905, 906, 2268, 280, 335, 287, 279, 534, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 732, 747, 0, 761, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 745, 0, 0,
	0, 0, 844, 0, 746, 0, 0, 754, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 413, 272, 0, 0, 465, 843, 0,
	0, 577, 0, 0, 841, 0, 0, 0, 0, 377,
	0, 344, 218, 242, 0, 0, 423, 473, 485, 0,
	0, 0, 894, 0, 483, 437, 554, 250, 299, 470,
	443, 481, 453, 302, 0, 0, 482, 384, 539, 463,
	551, 578, 579, 278, 417, 563, 523, 572, 605, 243,
	275, 431, 516, 557, 505, 409, 535, 536, 343, 504,
	310, 221, 381, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 644, 645, 646,
	647, 648, 0, 0, 643, 649, 584, 241, 491, 383,
	259, 248, 541, 560, 304, 468, 447, 448, 586, 600,
	587, 589, 590, 230, 518, 549, 256, 495, 0, 0,
	607, 264, 515, 232, 546, 514, 405, 340, 341, 231,
	0, 469, 283, 308, 0, 0, 273, 426, 895, 896,
	271, 608, 796, 571, 237, 0, 570, 419, 538, 547,
	406, 395, 236, 545, 404, 394, 348, 804, 805, 295,
	321, 460, 387, 461, 320, 322, 415, 414, 416, 225,
	558, 0, 226, 0, 510, 559, 609, 251, 252, 254,
	0, 294, 298, 306, 309, 317, 318, 327, 379, 430,
	459, 455, 464, 0, 533, 552, 564, 576, 582, 583,
	585, 591, 592, 593, 595, 601, 599, 596, 597, 598,
	594, 588, 418, 325, 506, 347, 385, 0, 0, 436,
	484, 257, 556, 507, 0, 0, 0, 0, 854, 842,
	767, 858, 769, 855, 856, 764, 765, 768, 857, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 845, 753,
	752, 0, 760, 0, 786, 787, 789, 793, 794, 795,
	806, 807, 808, 816, 818, 819, 817, 820, 821, 822,
	825, 826, 827, 828, 823, 824, 829, 770, 774, 771,
	772, 773, 785, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 868, 869, 870, 871, 872, 873, 799,
	803, 802, 800, 801, 797, 798, 751, 217, 238, 380,
	0, 466, 303, 606, 567, 561, 224, 240, 859, 277,
	860, 0, 0, 864, 0, 0, 0, 866, 865, 0,
	867, 833, 832, 0, 0, 861, 862, 0, 863, 0,
	0, 219, 220, 227, 239, 249, 253, 260, 276, 291,
	293, 300, 313, 324, 332, 333, 336, 342, 392, 398,
	399, 400, 401, 420, 421, 422, 425, 428, 429, 432,
	434, 435, 438, 442, 446, 449, 450, 452, 454, 456,
	467, 472, 486, 487, 488, 489, 490, 493, 494, 499,
	500, 501, 502, 503, 511, 512, 517, 540, 542, 555,
	574, 580, 492, 874, 875, 876, 877, 878, 879, 880,
	881, 314, 550, 581, 548, 602, 575, 451, 390, 0,
	0, 565, 0, 393, 296, 319, 334, 0, 566, 513,
	244, 478, 305, 268, 899, 0, 229, 263, 247, 274,
	289, 292, 338, 403, 411, 440, 445, 311, 286, 261,
	471, 258, 496, 520, 521, 522, 524, 407, 281, 444,
	0, 408, 388, 530, 531, 330, 103, 529, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 750, 0, 0, 0, 285, 755,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 762, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 113, 0, 0, 900, 884, 850,
	851, 888, 901, 902, 903, 904, 889, 0, 255, 890,
	891, 262, 892, 0, 849, 790, 792, 791, 809, 810,
	811, 812, 813, 814, 815, 788, 897, 905, 906, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	732, 747, 0, 761, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 844,
	0, 746, 0, 0, 754, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 843, 0, 0, 577, 0,
	0, 841, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 894,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 895, 896, 271, 608, 796,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 804, 805, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 854, 842, 767, 858, 769,
	855, 856, 764, 765, 768, 857, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 845, 753, 752, 0, 760,
	0, 786, 787, 789, 793, 794, 795, 806, 807, 808,
	816, 818, 819, 817, 820, 821, 822, 825, 826, 827,
	828, 823, 824, 829, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	868, 869, 870, 871, 872, 873, 799, 803, 802, 800,
	801, 797, 798, 751, 217, 238, 380, 112, 466, 303,
	606, 567, 561, 224, 240, 859, 277, 860, 0, 0,
	864, 0, 0, 0, 866, 865, 0, 867, 833, 832,
	0, 0, 861, 862, 0, 863, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	874, 875, 876, 877, 878, 879, 880, 881, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 899, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	750, 0, 0, 0, 285, 755, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 762, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 758, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	113, 0, 0, 900, 884, 850, 851, 888, 901, 902,
	903, 904, 889, 0, 255, 890, 891, 262, 892, 0,
	849, 790, 792, 791, 809, 810, 811, 812, 813, 814,
	815, 788, 897, 905, 906, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 732, 747, 0, 761,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	745, 0, 0, 0, 0, 844, 0, 746, 0, 0,
	754, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 843, 0, 0, 577, 0, 0, 841, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 894, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 3733, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 895, 896, 271, 608, 796, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	804, 805, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 854, 842, 767, 858, 769, 855, 856, 764, 765,
	768, 857, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 845, 753, 752, 0, 760, 0, 786, 787, 789,
	793, 794, 795, 806, 807, 808, 816, 818, 819, 817,
	820, 821, 822, 825, 826, 827, 828, 823, 824, 829,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 868, 869, 870, 871,
	872, 873, 799, 803, 802, 800, 801, 797, 798, 751,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 859, 277, 860, 0, 0, 864, 0, 0, 0,
	866, 865, 0, 867, 833, 832, 0, 0, 861, 862,
	0, 863, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 874, 875, 876, 877,
	878, 879, 880, 881, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 899, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 750, 0, 0, 0,
	285, 755, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 762, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 113, 0, 1628, 900,
	884, 850, 851, 888, 901, 902, 903, 904, 889, 0,
	255, 890, 891, 262, 892, 0, 849, 790, 792, 791,
	809, 810, 811, 812, 813, 814, 815, 788, 897, 905,
	906, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 732, 747, 0, 761, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 745, 0, 0, 0,
	0, 844, 0, 746, 0, 0, 754, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 843, 0, 0,
	577, 0, 0, 841, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 894, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 895, 896, 271,
	608, 796, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 804, 805, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 854, 842, 767,
	858, 769, 855, 856, 764, 765, 768, 857, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 845, 753, 752,
	0, 760, 0, 786, 787, 789, 793, 794, 795, 806,
	807, 808, 816, 818, 819, 817, 820, 821, 822, 825,
	826, 827, 828, 823, 824, 829, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 868, 869, 870, 871, 872, 873, 799, 803,
	802, 800, 801, 797, 798, 751, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 859, 277, 860,
	0, 0, 864, 0, 0, 0, 866, 865, 0, 867,
	833, 832, 0, 0, 861, 862, 0, 863, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 874, 875, 876, 877, 878, 879, 880, 881,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 899, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 750, 0, 0, 0, 285, 755, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 762, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 113, 0, 0, 900, 884, 850, 851, 888,
	901, 902, 903, 904, 889, 0, 255, 890, 891, 262,
	892, 0, 849, 790, 792, 791, 809, 810, 811, 812,
	813, 814, 815, 788, 897, 905, 906, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 732, 747,
	0, 761, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 745, 994, 0, 0, 0, 844, 0, 746,
	0, 0, 754, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 843, 0, 0, 577, 0, 0, 841,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 894, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 895, 896, 271, 608, 796, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 804, 805, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 854, 842, 767, 858, 769, 855, 856,
	764, 765, 768, 857, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 845, 753, 752, 0, 760, 0, 786,
	787, 789, 793, 794, 795, 806, 807, 808, 816, 818,
	819, 817, 820, 821, 822, 825, 826, 827, 828, 823,
	824, 829, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 868, 869,
	870, 871, 872, 873, 799, 803, 802, 800, 801, 797,
	798, 751, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 859, 277, 860, 0, 0, 864, 0,
	0, 0, 866, 865, 0, 867, 833, 832, 0, 0,
	861, 862, 0, 863, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 874, 875,
	876, 877, 878, 879, 880, 881, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 899,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 750, 0,
	0, 0, 285, 755, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 762,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 113, 0,
	0, 900, 884, 850, 851, 888, 901, 902, 903, 904,
	889, 0, 255, 890, 891, 262, 892, 0, 849, 790,
	792, 791, 809, 810, 811, 812, 813, 814, 815, 788,
	897, 905, 906, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 732, 747, 0, 761, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 745, 0,
	0, 0, 0, 844, 0, 746, 0, 0, 754, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 843,
	0, 0, 577, 0, 0, 841, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 894, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 895,
	896, 271, 608, 796, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 804, 805,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 854,
	842, 767, 858, 769, 855, 856, 764, 765, 768, 857,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 845,
	753, 752, 0, 760, 0, 786, 787, 789, 793, 794,
	795, 806, 807, 808, 816, 818, 819, 817, 820, 821,
	822, 825, 826, 827, 828, 823, 824, 829, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 868, 869, 870, 871, 872, 873,
	799, 803, 802, 800, 801, 797, 798, 751, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 859,
	277, 860, 0, 0, 864, 0, 0, 0, 866, 865,
	0, 867, 833, 832, 0, 0, 861, 862, 0, 863,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 874, 875, 876, 877, 878, 879,
	880, 881, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 899, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 750, 0, 0, 0, 285, 755,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 762, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 113, 0, 0, 900, 884, 850,
	851, 888, 901, 902, 903, 904, 889, 0, 255, 890,
	891, 262, 892, 0, 849, 790, 792, 791, 809, 810,
	811, 812, 813, 814, 815, 788, 897, 905, 906, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 761, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 844,
	0, 746, 0, 0, 754, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 843, 0, 0, 577, 0,
	0, 841, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 894,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 895, 896, 271, 608, 796,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 804, 805, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 854, 842, 767, 858, 769,
	855, 856, 764, 765, 768, 857, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 845, 753, 752, 0, 760,
	0, 786, 787, 789, 793, 794, 795, 806, 807, 808,
	816, 818, 819, 817, 820, 821, 822, 825, 826, 827,
	828, 823, 824, 829, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	868, 869, 870, 871, 872, 873, 799, 803, 802, 800,
	801, 797, 798, 751, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 859, 277, 860, 0, 0,
	864, 0, 0, 0, 866, 865, 0, 867, 833, 832,
	0, 0, 861, 862, 0, 863, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	874, 875, 876, 877, 878, 879, 880, 881, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 899, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1453, 1452, 1454, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 1069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 1068,
	577, 0, 0, 0, 0, 0, 1065, 1066, 377, 1023,
	344, 218, 242, 1059, 1063, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 1591, 884, 0, 0, 1588,
	0, 0, 0, 0, 1586, 0, 255, 1587, 1585, 262,
	1590, 0, 849, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 0, 408, 388, 530, 531,
	330, 103, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 378, 282,
	0, 0, 441, 0, 223, 0, 498, 269, 389, 386,
	537, 297, 288, 284, 267, 331, 397, 439, 519, 433,
	0, 382, 0, 0, 508, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 265, 339, 222, 424, 509, 301, 0, 113,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 262, 0, 0, 0,
	363, 372, 371, 352, 353, 355, 357, 362, 369, 375,
	0, 0, 0, 0, 0, 280, 335, 287, 279, 534,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 413, 272, 0, 0, 465,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 344, 218, 242, 0, 0, 423, 473,
	485, 0, 0, 0, 270, 0, 483, 437, 554, 250,
	299, 470, 443, 481, 453, 302, 0, 0, 482, 384,
	539, 463, 551, 578, 579, 278, 417, 563, 523, 572,
	605, 243, 275, 431, 516, 557, 505, 409, 535, 536,
	343, 504, 310, 221, 381, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 644,
	645, 646, 647, 648, 0, 0, 643, 649, 584, 241,
	491, 383, 259, 248, 541, 560, 304, 468, 447, 448,
	586, 600, 587, 589, 590, 230, 518, 549, 256, 495,
	0, 0, 607, 264, 515, 232, 546, 514, 405, 340,
	341, 231, 0, 469, 283, 308, 0, 0, 273, 426,
	543, 544, 271, 608, 245, 571, 237, 0, 570, 419,
	538, 547, 406, 395, 236, 545, 404, 394, 348, 367,
	368, 295, 321, 460, 387, 461, 320, 322, 415, 414,
	416, 225, 558, 0, 226, 0, 510, 559, 609, 251,
	252, 254, 0, 294, 298, 306, 309, 317, 318, 327,
	379, 430, 459, 455, 464, 0, 533, 552, 564, 576,
	582, 583, 585, 591, 592, 593, 595, 601, 599, 596,
	597, 598, 594, 588, 418, 325, 506, 347, 385, 0,
	0, 436, 484, 257, 556, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 396,
	497, 553, 349, 361, 364, 354, 373, 0, 374, 350,
	351, 356, 358, 359, 360, 365, 366, 370, 376, 266,
	228, 402, 410, 532, 326, 233, 234, 235, 525, 526,
	527, 528, 568, 569, 573, 474, 475, 476, 477, 307,
	562, 323, 480, 479, 345, 346, 391, 462, 0, 217,
	238, 380, 112, 466, 303, 606, 567, 561, 224, 240,
	0, 277, 0, 0, 0, 0, 0, 0, 2254, 0,
	0, 2253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 220, 227, 239, 249, 253, 260,
	276, 291, 293, 300, 313, 324, 332, 333, 336, 342,
	392, 398, 399, 400, 401, 420, 421, 422, 425, 428,
	429, 432, 434, 435, 438, 442, 446, 449, 450, 452,
	454, 456, 467, 472, 486, 487, 488, 489, 490, 493,
	494, 499, 500, 501, 502, 503, 511, 512, 517, 540,
	542, 555, 574, 580, 492, 315, 316, 457, 458, 328,
	329, 603, 604, 314, 550, 581, 548, 602, 575, 451,
	390, 0, 0, 565, 0, 393, 296, 319, 334, 0,
	566, 513, 244, 478, 305, 268, 0, 0, 229, 263,
	247, 274, 289, 292, 338, 403, 411, 440, 445, 311,
	286, 261, 471, 258, 496, 520, 521, 522, 524, 407,
	281, 444, 1654, 0, 388, 530, 531, 330, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 0, 0, 1656, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 378, 282, 0, 0, 441, 0,
	223, 0, 498, 269, 389, 386, 537, 297, 288, 284,
	267, 331, 397, 439, 519, 433, 0, 382, 0, 0,
	508, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 265, 339,
	222, 424, 509, 301, 0, 0, 0, 0, 1658, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 262, 0, 0, 0, 363, 372, 371, 352,
	353, 355, 357, 362, 369, 375, 0, 0, 0, 0,
	0, 280, 335, 287, 279, 534, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 1425, 0, 1426,
	1427, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 413, 272, 0, 0, 465, 0, 0, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 344,
	218, 242, 0, 0, 423, 473, 485, 0, 0, 0,
	270, 0, 483, 437, 554, 250, 299, 470, 443, 481,
	453, 302, 0, 0, 482, 384, 539, 463, 551, 578,
	579, 278, 417, 563, 523, 572, 605, 243, 275, 431,
	516, 557, 505, 409, 535, 536, 343, 504, 310, 221,
	381, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 644, 645, 646, 647, 648,
	0, 0, 643, 649, 584, 241, 491, 383, 259, 248,
	541, 560, 304, 468, 447, 448, 586, 600, 587, 589,
	590, 230, 518, 549, 256, 495, 0, 0, 607, 264,
	515, 232, 546, 514, 405, 340, 341, 231, 0, 469,
	283, 308, 0, 0, 273, 426, 543, 544, 271, 608,
	245, 571, 237, 0, 570, 419, 538, 547, 406, 395,
	236, 545, 404, 394, 348, 367, 368, 295, 321, 460,
	387, 461, 320, 322, 415, 414, 416, 225, 558, 0,
	226, 0, 510, 559, 609, 251, 252, 254, 0, 294,
	298, 306, 309, 317, 318, 327, 379, 430, 459, 455,
	464, 0, 533, 552, 564, 576, 582, 583, 585, 591,
	592, 593, 595, 601, 599, 596, 597, 598, 594, 588,
	418, 325, 506, 347, 385, 0, 0, 436, 484, 257,
	556, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 396, 497, 553, 349, 361,
	364, 354, 373, 0, 374, 350, 351, 356, 358, 359,
	360, 365, 366, 370, 376, 266, 228, 402, 410, 532,
	326, 233, 234, 235, 525, 526, 527, 528, 568, 569,
	573, 474, 475, 476, 477, 307, 562, 323, 480, 479,
	345, 346, 391, 462, 0, 217, 238, 380, 0, 466,
	303, 606, 567, 561, 224, 240, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	220, 227, 239, 249, 253, 260, 276, 291, 293, 300,
	313, 324, 332, 333, 336, 342, 392, 398, 399, 400,
	401, 420, 421, 422, 425, 428, 429, 432, 434, 435,
	438, 442, 446, 449, 450, 452, 454, 456, 467, 472,
	486, 487, 488, 489, 490, 493, 494, 499, 500, 501,
	502, 503, 511, 512, 517, 540, 542, 555, 574, 580,
	492, 315, 316, 457, 458, 328, 329, 603, 604, 314,
	550, 581, 548, 602, 575, 451, 390, 0, 0, 565,
	0, 393, 296, 319, 334, 0, 566, 513, 244, 478,
	305, 268, 0, 0, 229, 263, 247, 274, 289, 292,
	338, 403, 411, 440, 445, 311, 286, 261, 471, 258,
	496, 520, 521, 522, 524, 407, 281, 444, 0, 408,
	388, 530, 531, 330, 103, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 113, 0, 1628, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 112, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 113, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 2254, 0, 0,
	2253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 2204, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 1842, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 2202, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 1023, 344, 218, 242, 1021, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 2204, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 1842,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 1628, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	3629, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 2037, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 2656, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 2638,
	0, 0, 0, 0, 255, 0, 0, 262, 2639, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 1677, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 1676,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 712, 713, 714, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 3771, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 1842, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 3629, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 113, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	2255, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 1658, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 1992, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 1981, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 1809, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 1807,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 1805, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 1803, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 1801, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 1797, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 1795,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 1793, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 1768, 0, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 1662, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 420, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 113, 0, 0, 0,
	884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1403, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 1402, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 408, 0, 388, 530, 531, 330, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 378, 282, 0, 0, 441, 0, 223,
	0, 498, 269, 389, 386, 537, 297, 288, 284, 267,
	331, 397, 439, 519, 433, 0, 382, 0, 0, 508,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 265, 339, 222,
	424, 509, 301, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 262, 0, 0, 0, 363, 372, 371, 352, 353,
	355, 357, 362, 369, 375, 0, 0, 0, 0, 0,
	280, 335, 287, 279, 534, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	413, 272, 0, 0, 465, 0, 652, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 344, 218,
	242, 0, 0, 423, 473, 485, 0, 0, 0, 270,
	0, 483, 437, 554, 250, 299, 470, 443, 481, 453,
	302, 0, 0, 482, 384, 539, 463, 551, 578, 579,
	278, 417, 563, 523, 572, 605, 243, 275, 431, 516,
	557, 505, 409, 535, 536, 343, 504, 310, 221, 381,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 644, 645, 646, 647, 648, 0,
	0, 643, 649, 584, 241, 491, 383, 259, 248, 541,
	560, 304, 468, 447, 448, 586, 600, 587, 589, 590,
	230, 518, 549, 256, 495, 0, 0, 607, 264, 515,
	232, 546, 514, 405, 340, 341, 231, 0, 469, 283,
	308, 0, 0, 273, 426, 543, 544, 271, 608, 245,
	571, 237, 0, 570, 419, 538, 547, 406, 395, 236,
	545, 404, 394, 348, 367, 368, 295, 321, 460, 387,
	461, 320, 322, 415, 414, 416, 225, 558, 0, 226,
	0, 510, 559, 609, 251, 252, 254, 0, 294, 298,
	306, 309, 317, 318, 327, 379, 430, 459, 455, 464,
	0, 533, 552, 564, 576, 582, 583, 585, 591, 592,
	593, 595, 601, 599, 596, 597, 598, 594, 588, 418,
	325, 506, 347, 385, 0, 0, 436, 484, 257, 556,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 396, 497, 553, 349, 361, 364,
	354, 373, 0, 374, 350, 351, 356, 358, 359, 360,
	365, 366, 370, 376, 266, 228, 402, 410, 532, 326,
	233, 234, 235, 525, 526, 527, 528, 568, 569, 573,
	474, 475, 476, 477, 307, 562, 323, 480, 479, 345,
	346, 391, 462, 0, 217, 238, 380, 0, 466, 303,
	606, 567, 561, 224, 240, 0, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 220,
	227, 239, 249, 253, 260, 276, 291, 293, 300, 313,
	324, 332, 333, 336, 342, 392, 398, 399, 400, 401,
	420, 421, 422, 425, 428, 429, 432, 434, 435, 438,
	442, 446, 449, 450, 452, 454, 456, 467, 472, 486,
	487, 488, 489, 490, 493, 494, 499, 500, 501, 502,
	503, 511, 512, 517, 540, 542, 555, 574, 580, 492,
	315, 316, 457, 458, 328, 329, 603, 604, 314, 550,
	581, 548, 602, 575, 451, 390, 0, 0, 565, 0,
	393, 296, 319, 334, 0, 566, 513, 244, 478, 305,
	268, 0, 0, 229, 263, 247, 274, 289, 292, 338,
	403, 411, 440, 445, 311, 286, 261, 471, 258, 496,
	520, 521, 522, 524, 407, 281, 444, 408, 0, 388,
	530, 531, 330, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 378,
	282, 0, 0, 441, 0, 223, 0, 498, 269, 389,
	386, 537, 297, 288, 284, 267, 331, 397, 439, 519,
	433, 0, 382, 0, 0, 508, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 265, 339, 222, 424, 509, 301, 0,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 262, 0, 0,
	0, 363, 372, 371, 352, 353, 355, 357, 362, 369,
	375, 0, 0, 0, 0, 0, 280, 335, 287, 279,
	534, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 413, 272, 0, 0,
	465, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 344, 218, 242, 0, 0, 423,
	473, 485, 0, 0, 0, 270, 0, 483, 437, 554,
	250, 299, 470, 443, 481, 453, 302, 0, 0, 482,
	384, 539, 463, 551, 578, 579, 278, 417, 563, 523,
	572, 605, 243, 275, 431, 516, 557, 505, 409, 535,
	536, 343, 504, 310, 221, 381, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	644, 645, 646, 647, 648, 0, 0, 643, 649, 584,
	241, 491, 383, 259, 248, 541, 560, 304, 468, 447,
	448, 586, 600, 587, 589, 590, 230, 518, 549, 256,
	495, 0, 0, 607, 264, 515, 232, 546, 514, 405,
	340, 341, 231, 0, 469, 283, 308, 0, 0, 273,
	426, 543, 544, 271, 608, 245, 571, 237, 0, 570,
	419, 538, 547, 406, 395, 236, 545, 404, 394, 348,
	367, 368, 295, 321, 460, 387, 461, 320, 322, 415,
	414, 416, 225, 558, 0, 226, 0, 510, 559, 609,
	251, 252, 254, 0, 294, 298, 306, 309, 317, 318,
	327, 379, 430, 459, 455, 464, 0, 533, 552, 564,
	576, 582, 583, 585, 591, 592, 593, 595, 601, 599,
	596, 597, 598, 594, 588, 418, 325, 506, 347, 385,
	0, 0, 436, 484, 257, 556, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	396, 497, 553, 349, 361, 364, 354, 373, 0, 374,
	350, 351, 356, 358, 359, 360, 365, 366, 370, 376,
	266, 228, 402, 410, 532, 326, 233, 234, 235, 525,
	526, 527, 528, 568, 569, 573, 474, 475, 476, 477,
	307, 562, 323, 480, 479, 345, 346, 391, 462, 0,
	217, 238, 380, 0, 466, 303, 606, 567, 561, 224,
	240, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 220, 227, 239, 249, 253,
	260, 276, 291, 293, 300, 313, 324, 332, 333, 336,
	342, 392, 398, 399, 400, 401, 3779, 421, 422, 425,
	428, 429, 432, 434, 435, 438, 442, 446, 449, 450,
	452, 454, 456, 467, 472, 486, 487, 488, 489, 490,
	493, 494, 499, 500, 501, 502, 503, 511, 512, 517,
	540, 542, 555, 574, 580, 492, 315, 316, 457, 458,
	328, 329, 603, 604, 314, 550, 581, 548, 602, 575,
	451, 390, 0, 0, 565, 0, 393, 296, 319, 334,
	0, 566, 513, 244, 478, 305, 268, 0, 0, 229,
	263, 247, 274, 289, 292, 338, 403, 411, 440, 445,
	311, 286, 261, 471, 258, 496, 520, 521, 522, 524,
	407, 281, 444, 408, 0, 388, 530, 531, 330, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 378, 282, 0, 0, 441,
	0, 223, 0, 498, 269, 389, 386, 537, 297, 288,
	284, 267, 331, 397, 439, 519, 433, 0, 382, 0,
	0, 508, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 265,
	339, 222, 424, 509, 301, 0, 0, 0, 0, 0,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 262, 0, 0, 0, 363, 372, 371,
	352, 353, 355, 357, 362, 369, 375, 0, 0, 0,
	0, 0, 280, 335, 287, 279, 534, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 413, 272, 0, 0, 465, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	344, 218, 242, 0, 0, 423, 473, 485, 0, 0,
	0, 270, 0, 483, 437, 554, 250, 299, 470, 443,
	481, 453, 302, 0, 0, 482, 384, 539, 463, 551,
	578, 579, 278, 417, 563, 523, 572, 605, 243, 275,
	431, 516, 557, 505, 409, 535, 536, 343, 504, 310,
	221, 381, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 644, 645, 646, 647,
	648, 0, 0, 643, 649, 584, 241, 491, 383, 259,
	248, 541, 560, 304, 468, 447, 448, 586, 600, 587,
	589, 590, 230, 518, 549, 256, 495, 0, 0, 607,
	264, 515, 232, 546, 514, 405, 340, 341, 231, 0,
	469, 283, 308, 0, 0, 273, 426, 543, 544, 271,
	608, 245, 571, 237, 0, 570, 419, 538, 547, 406,
	395, 236, 545, 404, 394, 348, 367, 368, 295, 321,
	460, 387, 461, 320, 322, 415, 414, 416, 225, 558,
	0, 226, 0, 510, 559, 609, 251, 252, 254, 0,
	294, 298, 306, 309, 317, 318, 327, 379, 430, 459,
	455, 464, 0, 533, 552, 564, 576, 582, 583, 585,
	591, 592, 593, 595, 601, 599, 596, 597, 598, 594,
	588, 418, 325, 506, 347, 385, 0, 0, 436, 484,
	257, 556, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 396, 497, 553, 349,
	361, 364, 354, 373, 0, 374, 350, 351, 356, 358,
	359, 360, 365, 366, 370, 376, 266, 228, 402, 410,
	532, 326, 233, 234, 235, 525, 526, 527, 528, 568,
	569, 573, 474, 475, 476, 477, 307, 562, 323, 480,
	479, 345, 346, 391, 462, 0, 217, 238, 380, 0,
	466, 303, 606, 567, 561, 224, 240, 0, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 220, 227, 239, 249, 253, 260, 276, 291, 293,
	300, 313, 324, 332, 333, 336, 342, 392, 398, 399,
	400, 401, 420, 421, 422, 425, 428, 429, 432, 434,
	435, 438, 442, 446, 449, 450, 452, 454, 456, 467,
	472, 486, 487, 488, 489, 490, 493, 494, 499, 500,
	501, 502, 503, 511, 512, 517, 540, 542, 555, 574,
	580, 492, 315, 316, 457, 458, 328, 329, 603, 604,
	314, 550, 581, 548, 602, 575, 451, 390, 0, 0,
	565, 0, 393, 296, 319, 334, 0, 566, 513, 244,
	478, 305, 268, 0, 0, 229, 263, 247, 274, 289,
	292, 338, 403, 411, 440, 445, 311, 286, 261, 471,
	258, 496, 520, 521, 522, 524, 407, 281, 444, 408,
	0, 388, 530, 531, 330, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 378, 282, 0, 0, 441, 0, 223, 0, 498,
	269, 389, 386, 537, 297, 288, 284, 267, 331, 397,
	439, 519, 433, 0, 382, 0, 0, 508, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 265, 339, 222, 424, 509,
	301, 0, 0, 0, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 262,
	0, 0, 0, 363, 372, 371, 352, 353, 355, 357,
	362, 369, 375, 0, 0, 0, 0, 0, 280, 335,
	287, 279, 534, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 413, 272,
	0, 0, 465, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 344, 218, 242, 0,
	0, 423, 473, 485, 0, 0, 0, 270, 0, 483,
	437, 554, 250, 299, 470, 443, 481, 453, 302, 0,
	0, 482, 384, 539, 463, 551, 578, 579, 278, 417,
	563, 523, 572, 605, 243, 275, 431, 516, 557, 505,
	409, 535, 536, 343, 504, 310, 221, 381, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 644, 645, 646, 647, 648, 0, 0, 643,
	649, 584, 241, 491, 383, 259, 248, 541, 560, 304,
	468, 447, 448, 586, 600, 587, 589, 590, 230, 518,
	549, 256, 495, 0, 0, 607, 264, 515, 232, 546,
	514, 405, 340, 341, 231, 0, 469, 283, 308, 0,
	0, 273, 426, 543, 544, 271, 608, 245, 571, 237,
	0, 570, 419, 538, 547, 406, 395, 236, 545, 404,
	394, 348, 367, 368, 295, 321, 460, 387, 461, 320,
	322, 415, 414, 416, 225, 558, 0, 226, 0, 510,
	559, 609, 251, 252, 254, 0, 294, 298, 306, 309,
	317, 318, 327, 379, 430, 459, 455, 464, 0, 533,
	552, 564, 576, 582, 583, 585, 591, 592, 593, 595,
	601, 599, 596, 597, 598, 594, 588, 418, 325, 506,
	347, 385, 0, 0, 436, 484, 257, 556, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 396, 497, 553, 349, 361, 364, 354, 373,
	0, 374, 350, 351, 356, 358, 359, 360, 365, 366,
	370, 376, 266, 228, 402, 410, 532, 326, 233, 234,
	235, 525, 526, 527, 528, 568, 569, 573, 474, 475,
	476, 477, 307, 562, 323, 480, 479, 345, 346, 391,
	462, 0, 217, 238, 380, 0, 466, 303, 606, 567,
	561, 224, 240, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 220, 227, 239,
	249, 253, 260, 276, 291, 293, 300, 313, 324, 332,
	333, 336, 342, 392, 398, 399, 400, 401, 420, 421,
	422, 425, 428, 429, 432, 434, 435, 438, 442, 446,
	449, 450, 452, 454, 456, 467, 472, 486, 487, 488,
	489, 490, 493, 494, 499, 500, 501, 502, 503, 511,
	512, 517, 540, 542, 555, 574, 580, 492, 315, 316,
	457, 458, 328, 329, 603, 604, 314, 550, 581, 548,
	602, 575, 451, 390, 0, 0, 565, 0, 393, 296,
	319, 334, 0, 566, 513, 244, 478, 305, 268, 0,
	0, 229, 263, 247, 274, 289, 292, 338, 403, 411,
	440, 445, 311, 286, 261, 471, 258, 496, 520, 521,
	522, 524, 407, 281, 444, 408, 0, 388, 530, 531,
	330, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 378, 282, 0,
	0, 441, 0, 223, 0, 498, 269, 389, 386, 537,
	297, 288, 284, 267, 331, 397, 439, 519, 433, 0,
	382, 0, 0, 508, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 265, 339, 222, 424, 509, 301, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 262, 0, 0, 0, 363,
	372, 371, 352, 353, 355, 357, 362, 369, 375, 0,
	0, 0, 0, 0, 280, 335, 287, 279, 534, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 413, 272, 0, 0, 465, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 344, 218, 242, 0, 0, 423, 473, 485,
	0, 0, 0, 270, 0, 483, 437, 554, 250, 299,
	470, 443, 481, 453, 302, 0, 0, 482, 384, 539,
	463, 551, 578, 579, 278, 417, 563, 523, 572, 605,
	243, 275, 431, 516, 557, 505, 409, 535, 536, 343,
	504, 310, 221, 381, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 644, 645,
	646, 647, 648, 0, 0, 643, 649, 584, 241, 491,
	383, 259, 248, 541, 560, 304, 468, 447, 448, 586,
	600, 587, 589, 590, 230, 518, 549, 256, 495, 0,
	0, 607, 264, 515, 232, 546, 514, 405, 340, 341,
	231, 0, 469, 283, 308, 0, 0, 273, 426, 543,
	544, 271, 608, 245, 571, 237, 0, 570, 419, 538,
	547, 406, 395, 236, 545, 404, 394, 348, 367, 368,
	295, 321, 460, 387, 461, 320, 322, 415, 414, 416,
	225, 558, 0, 226, 0, 510, 559, 609, 251, 252,
	254, 0, 294, 298, 306, 309, 317, 318, 327, 379,
	430, 459, 455, 464, 0, 533, 552, 564, 576, 582,
	583, 585, 591, 592, 593, 595, 601, 599, 596, 597,
	598, 594, 588, 418, 325, 506, 347, 385, 0, 0,
	436, 484, 257, 556, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 396, 497,
	553, 349, 361, 364, 354, 373, 0, 374, 350, 351,
	356, 358, 359, 360, 365, 366, 370, 376, 266, 228,
	402, 410, 532, 326, 233, 234, 235, 525, 526, 527,
	528, 568, 569, 573, 474, 475, 476, 477, 307, 562,
	323, 480, 479, 345, 346, 391, 462, 0, 217, 238,
	380, 0, 466, 303, 606, 567, 561, 224, 240, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 227, 239, 249, 253, 260, 276,
	291, 293, 300, 313, 324, 332, 333, 336, 342, 392,
	398, 399, 400, 401, 420, 421, 422, 425, 428, 429,
	432, 434, 435, 438, 442, 446, 449, 450, 452, 454,
	456, 467, 472, 486, 487, 488, 489, 490, 493, 494,
	499, 500, 501, 502, 503, 511, 512, 517, 540, 542,
	555, 574, 580, 492, 315, 316, 457, 458, 328, 329,
	603, 604, 314, 550, 581, 548, 602, 575, 451, 390,
	0, 0, 565, 0, 393, 296, 319, 334, 0, 566,
	513, 244, 478, 305, 268, 0, 0, 229, 263, 247,
	274, 289, 292, 338, 403, 411, 440, 445, 311, 286,
	261, 471, 258, 496, 520, 521, 522, 524, 407, 281,
	444, 0, 0, 388, 530, 531, 330,
}

var yyPact = [...]int{
	-1000, -1000, 3985, -1000, -483, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2516, 2504, -1000, -1000, -1000, -1000, 2745, -1000, 1231,
	2215, -1000, 2485, 360, -1000, 49311, 691, -1000, 46527, 689,
	679, 155, -88, 256, 31215, -1000, 221, -1000, 213, 47919,
	217, -1000, -1000, -1000, -1000, -327, 19381, 2424, 103, 98,
	49311, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2688, 2154, -1000, 418, -1000, -1000, -1000, -1000, -1000,
	393, -1000, 45831, -1000, 1134, -1000, -1000, 2484, 2471, 2748,
	841, 2413, -1000, 2629, 2154, -1000, 19381, 2671, 2544, 18685,
	18685, 583, -1000, -1000, 363, -1000, -1000, -1000, 2753, 26343,
	49311, -1000, 33999, 1213, -1000, 2485, -1000, -1000, -1000, 113,
	-1000, 461, 2096, -1000, 2087, -1000, 1119, 1130, 506, 645,
	607, 504, 503, 502, 501, 500, 499, 480, 475, 524,
	-1000, 908, 908, -129, -130, 3370, 708, 577, 577, 1226,
	617, 2448, 2445, -1000, -1000, 908, 908, 908, 423, 908,
	908, 908, 908, 422, 382, 908, 908, 908, 908, 908,
	908, 908, 908, 908, 908, 908, 908, 908, 908, 908,
	908, 908, 477, 2485, 361, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49311, 276, 49311, -1000, 762, 49311, 49311, -1000, 1351, 1347,
	-1000, -1000, 310, 1036, 1076, -1000, -1000, 1076, 112, 1076,
	1076, 1076, 1076, 266, 780, 96, -1000, 261, 433, 243,
	352, 1035, -1000, -1000, 343, 1035, 991, 1035, 1950, 1937,
	-1000, 845, 349, 278, -1000, 1076, 1076, 1076, -1000, -1000,
	12396, 183, 12396, 12396, -1000, 2466, -1000, -1000, -1000, -1000,
	-1000, 1358, -1000, -1000, -1000, -1000, -10, 615, -1000, -1000,
	-1000, -1000, 47919, 45135, 320, -1000, -1000, 76, -1000, -1000,
	1546, 1364, 19381, 1544, -1000, 1403, 816, -1000, -1000, -1000,
	-1000, -1000, 717, -1000, 20077, 20077, 20077, 20077, -1000, -1000,
	2108, 44439, 2108, 2108, 20077, 2108, -1000, 20077, 2108, 2108,
	2108, 19381, 2108, 2108, 2108, 2108, -1000, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, -1000, -1000, -1000, -1000, 2108,
	759, 2108, 2108, 2108, 2108, 2108, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2108, 2108, 2108, 2108, 2108, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22165, 1709, 1702, 1700, -1000, 16597, 2108,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49311, -1000, 2108, 242, 47919, 47919, 518, 2629, 2154, -1000,
	2688, 2641, 418, 2972, 1854, 1745, 1462, 2154, -100, -100,
	-100, -100, -100, -100, 2054, 49311, -1000, 2137, -1000, -1000,
	-1000, -1000, 2337, 1592, 1906, -1000, -1000, -1000, -1000, 2071,
	19381, -1000, -1000, 2725, -1000, 23558, 757, 2723, 43743, -1000,
	583, 583, 2073, 479, 61, -1000, -1000, -1000, -1000, 957,
	30519, -1000, -1000, -1000, -1000, -1000, 1988, 49311, -1000, -1000,
	4729, 1367, -1000, 2214, -1000, 2588, 1974, -1000, 2166, 19381,
	590, 590, 2222, 672, 1367, 653, 652, 610, -1000, -26,
	-1000, -1000, -1000, -1000, -1000, -1000, 908, 908, 908, -1000,
	522, 2669, 360, 6246, -1000, -1000, -1000, 43047, 2208, 47919,
	-1000, 2207, -1000, 1083, 682, 725, 725, 47919, -1000, -1000,
	48615, 1367, 1062, 1052, 1367, 1367, 47919, 47919, -1000, 42351,
	-1000, 41655, 40959, 1343, 47919, 40263, 39567, 38871, 38175, 37479,
	-1000, 2451, -1000, 2444, -1000, -1000, -1000, 48615, 1367, 1367,
	48615, 47919, 48615, 49311, 1367, -1000, -1000, 416, -1000, -1000,
	1341, 1340, 1339, 908, 908, 1312, 1903, 1889, 1883, 908,
	908, 1304, 1882, 32607, 1881, 378, 1296, 1295, 1291, 1255,
	1866, 208, 1864, 1252, 1239, 1290, 47919, 2202, 1436, 1413,
	49311, -1000, 333, 1056, 900, 554, 737, 956, 2485, 2415,
	2070, 613, 1411, 1408, 668, 1367, 581, 581, 47919, -1000,
	14502, -1000, 560, -1000, -1000, -1000, 1399, -1000, 1396, -1000,
	1394, 1382, 49311, 49311, 49311, 49311, 49311, 49311, 49311, 12396,
	-1000, 1862, 19381, -1000, 1041, 1035, 1035, -1000, -1000, -1000,
	-1000, -1000, -1000, 1076, 49311, 1041, -1000, -1000, -1000, 1035,
	1076, 49311, 1076, 1076, 1076, 1076, 1035, 1035, 1035, 1076,
	49311, 49311, 845, 1076, 1076, -334, 1076, 226, -338, -1000,
	1856, -1000, -1000, 2313, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12396, 12396, -1000,
	-1000, -1000, -1000, -1000, 2067, -1000, 211, 55, 216, -1000,
	36783, 437, 955, -1000, 437, -1000, -1000, -1000, 2060, 36087,
	-1000, -353, -354, -383, -385, -1000, -1000, -1000, -1000, -390,
	-393, -1000, -1000, -1000, 19381, 19381, 19381, 19381, -167, -1000,
	1190, 20077, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 157,
	1185, 20077, 20077, 20077, 20077, 20077, 20077, 20077, 20077, 20077,
	20077, 20077, 20077, 20077, 20077, 20077, -1000, -1000, 28431, 5033,
	5033, 816, 816, 816, 816, -1000, -96, 2056, 48615, -1000,
	-1000, -1000, 751, 19381, 19381, 816, -1000, 1367, 16597, 20773,
	18685, 18685, 19381, 916, 1364, 48615, 19381, -1000, 1462, -1000,
	-1000, -1000, 1233, -1000, 1026, 2472, 2472, 2472, 2472, 19381,
	19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 2472,
	47919, 47919, 943, 19381, 19381, 19381, 19381, 19381, 19381, 15204,
	19381, 19381, 20077, 19381, 19381, 19381, 1462, 19381, 19381, 19381,
	19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381,
	19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381,
	19381, 19381, 19381, 19381, 1462, 19381, 1648, 19381, 19381, 18685,
	13800, 18685, 18685, 18685, 18685, 18685, -1000, -1000, -1000, -1000,
	-1000, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, 1462,
	19381, 19381, 19381, 19381, 19381, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1463, 1755, 1489, 19381, -1000,
	2055, -1000, -105, 25647, 19381, 1838, 1833, 2720, 2238, 47919,
	-1000, -1000, -1000, 2629, -1000, 2629, 1463, 2340, 18685, -1000,
	-1000, 2588, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1837, -1000, -1000, 2201, -1000, -1000, -1000, -1000, -1000, 49311,
	2054, 2539, 47919, 2328, 1831, 439, -1000, 19381, 19381, 2051,
	-1000, 1350, 49311, -1000, -167, -1000, 35391, -1000, -1000, 11694,
	49311, 452, 49311, -1000, 24951, 34695, 286, -1000, 61, 1996,
	-1000, 67, 45, 15900, 799, -1000, -1000, -1000, 3370, 21469,
	1814, 799, 141, -1000, -1000, -1000, 2166, -1000, 2166, 2166,
	2166, 2166, 439, 439, 439, 439, -1000, -1000, -1000, -1000,
	-1000, 2200, 2199, -1000, 2166, 2166, 2166, 2166, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2196, 2196, 2196, 2193, 2193,
	2172, 2172, 563, -1000, 19381, -1000, -1000, 329, 33999, 2509,
	1276, 1822, 1379, 975, 1376, 333, 590, 2236, 1367, 1367,
	1367, 590, -1000, 1451, 1447, 1417, -1000, -474, 2050, -1000,
	-1000, 2666, -1000, -1000, 1077, 1099, 1097, 912, 47919, 307,
	450, -1000, 545, -1000, -1000, 33999, 47919, 1046, 725, 47919,
	-1000, 47919, -1000, -1000, -1000, -1000, 1367, -1000, -1000, 2046,
	-1000, 2038, 1181, 1094, 1153, 1045, 2046, -1000, -1000, -102,
	2046, -1000, 2046, -1000, 2046, -1000, 2046, -1000, 2046, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 913, 252,
	-226, 47919, 307, 609, -1000, 606, 28431, -1000, -1000, -1000,
	28431, 28431, -1000, -1000, -1000, -1000, 1829, 1826, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -458, 49311, -103,
	2192, -1000, 327, 949, 429, 483, 345, 49311, 818, 2619,
	2609, 2608, 2601, 2596, 2594, 2591, 538, 2587, 2584, 2582,
	2581, 2574, 2573, 798, 2571, 2569, 2563, 2549, 2548, 2547,
	2518, 456, 380, 49311, 49311, -1000, -1000, 581, 2273, 49311,
	2513, 49311, -1000, -1000, -1000, -1000, 568, 49311, -1000, 358,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1364, 49311,
	-1000, -1000, 1076, 1076, -1000, -1000, 49311, 1076, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1076, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49311, -1000,
	-1000, -1000, -1000, -10, 209, -1000, -1000, 47919, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -49,
	-1000, 102, 49, 411, -1000, -1000, -1000, -1000, -1000, 2625,
	-1000, 1364, 979, 990, -1000, 2108, -1000, -1000, 1262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 157, 20077, 20077, 20077,
	1852, 661, 1449, 1460, 1564, 1353, 1353, 1306, 1306, 827,
	827, 827, 827, 827, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1808, -1000, 2108, 48615, 1878, 13800, 1513, 2143,
	1462, 3008, -1000, 1853, -1000, 1853, 2052, 970, -1000, 19381,
	1462, 3004, -1000, -1000, 1462, 1462, 1462, 19381, -1000, -1000,
	19381, 19381, 19381, 19381, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 19381, 2043, 2034, 2709, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1506,
	1822, 1822, 1822, 1822, 1822, 19381, 1392, -1000, -1000, -1000,
	1469, 2997, 1840, 2991, 1822, 1822, -1000, 1822, 2987, 2959,
	1462, 1546, 1462, 2016, -1000, 2917, 1822, 2865, 2848, 2823,
	2097, 2796, 2749, 2735, 1822, 1822, 1822, 2065, 2664, 2615,
	2543, 2487, 2482, 2475, 2468, 2461, 2420, 1822, -171, 1822,
	1462, -1000, -1000, -1000, -1000, -1000, 2416, 2057, 1462, 2001,
	2108, 743, -1000, -1000, 1853, 1462, 1462, 1853, 1853, 2402,
	2394, 2380, 2374, 2359, 2354, 1822, 1822, -1000, 1822, 2309,
	2299, 2048, 2039, 1462, -1000, 1489, 49311, -1000, -313, -1000,
	15, 754, 2108, -1000, 32607, 1462, -1000, -1000, 5242, -1000,
	1310, -1000, -1000, -1000, 29823, 1947, 2588, -1000, 1738, -1000,
	2108, 1850, -1000, -1000, 439, 119, 29127, 808, 808, 150,
	1364, 1364, 19381, -1000, -1000, -1000, -1000, -1000, -1000, 738,
	2689, 444, 2108, -1000, 2033, 2568, -1000, -1000, -1000, 2538,
	22862, -1000, -1000, 2108, 2108, 49311, 2032, 2018, -1000, 726,
	-1000, 1374, 1996, 61, 65, -1000, -1000, -1000, -1000, 1364,
	-1000, 1407, 471, 1305, -1000, 558, -1000, -1000, -1000, -1000,
	2439, 133, -1000, -1000, -1000, 283, 439, -1000, -1000, -1000,
	-1000, -1000, -1000, 1806, 1806, -1000, -1000, -1000, -1000, -1000,
	1275, -1000, -1000, -1000, -1000, 1268, -1000, -1000, 1261, -1000,
	-1000, 2188, 2285, 329, -1000, -1000, 908, 1791, -1000, -1000,
	2437, 908, 908, 47919, -1000, -1000, 1798, 2509, -106, 2499,
	2191, 327, 49311, 2271, -1000, 2236, 2236, 2236, 49311, -1000,
	-1000, -1000, -1000, -1000, -1000, -466, 83, 455, -1000, -1000,
	-1000, 4914, 47919, 1845, -1000, 284, -1000, 1756, -1000, 47919,
	-1000, 1841, 2187, 47919, 47919, -1000, -1000, -1000, 47919, 2108,
	-1000, -1000, -1000, -1000, 627, 2470, 338, -1000, -1000, -193,
	-1000, -1000, 307, 284, 48615, 1367, 799, -1000, -1000, -1000,
	-1000, -1000, -461, 1818, 2182, 271, 572, 622, 309, 389,
	49311, 49311, 49311, 49311, 49311, 736, -1000, -1000, 79, -1000,
	-1000, -1000, -1000, 241, -1000, -1000, -1000, -1000, -1000, -1000,
	241, -1000, -1000, -1000, -1000, -1000, 241, -1000, 1784, -1000,
	-1000, -1000, -1000, 241, -1000, -1000, -1000, 69, -1000, -1000,
	-1000, -1000, 241, -1000, -1000, -1000, -1000, -1000, -1000, 241,
	-1000, -1000, -1000, -1000, 370, 605, -1000, 49311, 49311, 716,
	-1000, -1000, -1000, -1000, -1000, -1000, 1035, -1000, -1000, 1035,
	-1000, -1000, -1000, -1000, -1000, -1000, 402, -1000, -1000, -1000,
	-1000, -1000, -1000, 2458, 49311, 35, -423, -1000, -418, 19381,
	-1000, -1000, -1000, -1000, 1548, 626, 1449, 20077, 20077, 20077,
	-1000, -1000, -1000, 902, 902, 28431, -1000, 19381, 18685, -1000,
	-1000, 19381, 19381, 961, -1000, 19381, 1292, -1000, 19381, -1000,
	-1000, -1000, 1489, 1822, 1822, 1822, 1822, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2068, 19381, 19381,
	19381, 1462, 376, -1000, -1000, -1000, -1000, -1000, 2707, -1000,
	19381, -1000, 28431, 19381, 19381, 19381, -1000, -1000, -1000, 19381,
	19381, -1000, -1000, 19381, 19381, -1000, 19381, 19381, 19381, -1000,
	19381, 19381, 19381, 19381, -1000, -1000, -1000, -1000, 19381, 19381,
	19381, 19381, 19381, 19381, 19381, 19381, 19381, 19381, -1000, -1000,
	33999, 130, -171, 1648, 130, 1648, -1000, 18685, 13098, -1000,
	-1000, -1000, -1000, -1000, 19381, 19381, 19381, 19381, 19381, 19381,
	-1000, -1000, -1000, 19381, 19381, -1000, 19381, -1000, 19381, -1000,
	-1000, -1000, -1000, -1000, 754, -1000, 725, 725, 725, 47919,
	-1000, -1000, -1000, -1000, 1995, -1000, 2551, -1000, 2367, 2358,
	2704, 2689, -1000, 24951, 2588, 1813, -1000, 948, -1000, -1000,
	47919, -288, -1000, 2419, 2397, 808, 808, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10992, 2629, 19381, 2270, 48615, 159,
	-1000, 24255, 47919, 48615, 24951, 24951, 24951, 24951, 24951, -1000,
	2307, 2305, -1000, 2322, 2294, 2352, 49311, -1000, 1463, 1805,
	-1000, 19381, 27039, 1986, 24951, -1000, -1000, 24951, 49311, 10290,
	-1000, -1000, 31, 40, -1000, -1000, -1000, -1000, 3370, -1000,
	-1000, 852, 2526, 2429, -1000, -1000, -1000, -1000, -1000, 1801,
	-1000, 1797, 1994, 1788, 1783, 252, -1000, 2148, 2455, 908,
	908, -1000, 1260, -1000, 1367, 1780, 1778, -1000, -1000, -1000,
	2181, -1000, 271, 582, 619, -1000, 49311, 2267, 2264, 2263,
	-1000, -472, 1257, 2178, 2136, 19381, 2177, 2660, 1963, 47919,
	-1000, -1000, 48615, -1000, 189, -1000, 329, 47919, -1000, -1000,
	-1000, 450, 49311, -1000, 8804, -1000, -1000, -1000, 284, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 592, 516, 2174, 1777,
	945, -1000, -1000, -1000, -1000, 49311, 322, -1000, 2173, 1354,
	-1000, -1000, 2227, -1000, -1000, -1000, -1000, 316, 426, 1774,
	236, 1773, 236, 236, 1769, 236, 1764, 236, 236, -1000,
	49311, 709, 2285, 49311, -1000, -1000, -1000, 1076, 1076, -1000,
	-1000, 2453, -1000, 1367, 1822, 20077, 20077, -1000, 816, 303,
	-146, 2166, 2166, -1000, 2166, 2172, -1000, 2166, 198, 2166,
	197, 2166, -1000, -1000, 1462, 1462, 1489, -1000, 2035, 1758,
	-1000, 1364, 19381, 2287, -1000, -1000, -1000, -1000, -1000, -35,
	2254, 2229, 1822, -1000, 2163, 2161, 19381, 1822, 1462, 2030,
	1822, 1822, 1822, 1822, -1000, 1364, 1489, 2204, 1489, 1822,
	1822, 2179, 368, 1822, 1768, 1768, 1768, 1768, 1768, 1489,
	1489, 1489, 1489, 47919, -1000, -171, -1000, -1000, -213, -219,
	-1000, 1462, -171, 1984, 1462, -1000, 2026, 2010, 2169, 1991,
	1822, 2131, 1822, 1822, 1822, 1970, -1000, 2624, 2624, 2624,
	1753, 1310, 49311, -1000, -1000, -1000, -1000, 2689, 2680, 1972,
	-1000, -1000, 1738, 1730, -1000, 119, 491, -1000, 2379, 2397,
	-1000, 2651, 2407, 2650, -1000, -1000, -1000, -1000, -1000, 1364,
	-1000, 2476, 1993, -1000, 944, 1843, -1000, -1000, 17989, 1761,
	2353, 724, 1753, 2041, 2568, 2245, 2259, 2511, -1000, -1000,
	-1000, -1000, 2292, -1000, 2290, -1000, -1000, 2137, -1000, 2113,
	452, 24951, 2037, 2037, -1000, 718, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1109, 8014, 2742, -1000, 1727, -1000, 1373,
	218, 1240, -1000, -1000, 908, 908, -1000, 1023, 1002, -1000,
	49311, 2159, -1000, 439, 1711, 439, 1230, -1000, -1000, 1216,
	-1000, -1000, -1000, -1000, 2324, 2351, -1000, -1000, -1000, -1000,
	608, 458, 1751, 933, -1000, -1000, -1000, 49311, -1000, 49311,
	49311, 49311, 2157, 2647, -1000, 19381, 2155, 925, 2158, 47919,
	47919, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 559, 908, -442, 372, 364, 908, 908, 908,
	-473, -1000, -1000, 1747, 1736, -1000, -131, -1000, 19381, -1000,
	-1000, -1000, 1301, 1301, 1709, 1702, 1700, -1000, 1726, 911,
	-1000, -1000, -1000, -1000, -1000, -1000, 2153, 936, -1000, 572,
	1674, 2137, -1000, -1000, -1000, 1754, -1000, -1000, -112, 47919,
	47919, 47919, 47919, -1000, -1000, 1180, -1000, -1000, -1000, 1671,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 816, 1462, 383, -116, 1462, -1000,
	-1000, 439, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19381, -1000, 19381, -1000, 1364, 19381, 2629, 1660,
	19381, 19381, -1000, 1205, 1201, 1822, -1000, -1000, -1000, 19381,
	-1000, -1000, -1000, -1000, -1000, 19381, -1000, -1000, -1000, 19381,
	285, 902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1462, 451, -1000, -1000, -1000, -1000, 2694, -1000,
	1462, 19381, -1000, -1000, 19381, -1000, 19381, 19381, -1000, 19381,
	-1000, 19381, -1000, -1000, -1000, -1000, 19381, 2108, 2436, 2108,
	2108, 27039, -1000, -1000, 2680, 2674, 2644, -1000, -1000, 2395,
	2381, 2381, 2379, -1000, 2643, 2639, -1000, 1657, 2638, 1636,
	999, -1000, 48615, 19381, 159, -1000, 432, 47919, 159, 47919,
	-1000, 2642, -1000, -1000, 19381, 2142, -1000, 19381, -1000, -1000,
	-1000, -1000, 5033, 2689, 2037, -1000, -1000, 833, -1000, 19381,
	-1000, -1000, -1000, 5264, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1613, 1597, -1000, -1000, 2141, 19381, -1000, -1000,
	-1000, 1748, 1719, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1718, 910, -1000, -1000, -1000, -1000, 2138, -1000, 582,
	1594, 2137, -1000, -1000, -1000, -1000, 450, -468, 2093, 47919,
	1194, -1000, 1685, 1963, 381, 159, 1584, 908, 908, 908,
	1189, 1170, 32607, 1682, -1000, 47919, 539, -1000, 450, -1000,
	-141, -142, 1822, -1000, -1000, -1000, 592, 1580, 325, 1666,
	906, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	897, -1000, 2525, -1000, -1000, 13098, -1000, -1000, 2129, 2234,
	-1000, -1000, -1000, -1000, -1000, 2291, -104, -121, -1000, -1000,
	1822, 1822, 1741, 1462, -1000, 1822, 1822, 1649, 1621, -1000,
	1822, 1489, 1966, -1000, 285, 1462, 2257, -1000, -1000, 5033,
	-1000, -1000, 2642, 2637, 130, -1000, -1000, 315, 130, 1364,
	1961, 1822, 1953, 1949, 1822, 1822, 27735, -1000, 2635, 2572,
	33303, 33303, 754, 2674, -178, 19381, 19381, 2384, 1182, -1000,
	-1000, -1000, -1000, 1578, 1574, -1000, 1572, -1000, 2738, -1000,
	1364, -1000, 159, -1000, 713, 1843, -1000, 2629, 1364, 47919,
	1364, 123, 2642, -1000, 1822, -1000, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, -1000, -1000, 47919, 2081,
	-1000, -1000, -1000, 608, 1568, 325, 896, -1000, 2522, 1653,
	82, -1000, 1490, 1963, -1000, -1000, 154, -1000, 19381, -1000,
	32607, 1566, 1560, -1000, -1000, -1000, -1000, -473, -1000, -1000,
	-1000, -1000, -1000, -1000, 883, -1000, 1635, 881, -1000, -1000,
	-1000, 936, 1556, 1554, 418, 1956, -1000, 875, 47919, 49311,
	-1000, 2268, -1000, -1000, -1000, 19381, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19381, -1000, 1462, 2255, -1000, -295,
	-1000, -446, 19381, -171, -1000, -1000, -171, -1000, 19381, -1000,
	-1000, 19381, -1000, 19381, -1000, -1000, 1620, -1000, -1000, -1000,
	-1000, -1000, 1620, 1620, -1000, -178, -1000, 1880, -1000, 47919,
	1364, 1546, -1000, 1178, -1000, -1000, -1000, -1000, -1000, 48615,
	1843, 47919, -1000, 1589, 1462, 2108, 2629, -1000, 1553, -1000,
	868, -1000, 1550, 1545, 418, -1000, 2127, 2136, -1000, -1000,
	-1000, 17293, -1000, -1000, -1000, -1000, -1000, 219, 1497, -1000,
	325, 1491, 861, -1000, -1000, -111, 13098, 9588, 1519, -1000,
	-110, 1822, 1489, -1000, -397, -1000, -1000, -1000, -1000, 269,
	-1000, -1000, 1546, -1000, -1000, 1887, 1677, 1663, 31911, -1000,
	-1000, -1000, -1000, -178, -1000, -1000, 2519, -1000, -1000, 1471,
	-1000, -1000, 27039, 47223, -1000, -94, 280, 1470, -1000, -1000,
	-111, 19381, 2124, 1462, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 854, -1000, 1454, -1000, 51, -1000, -1000, -1000,
	-1000, -1000, 2227, -119, -1000, -1000, -1000, 162, -432, -216,
	-217, -1000, -1000, 20077, -1000, 19381, -1000, 19381, -1000, 19381,
	-1000, -1000, -1000, 47919, 2108, -1000, 1467, -1000, 3915, -229,
	2249, -1000, -32, -1000, -1000, -1000, 1044, 1404, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2061, 47919, -1000, 1365, -1000,
	561, -1000, -1000, -112, -126, 981, -1000, -1000, -1000, -1000,
	-1000, 1441, 1315, 1822, -1000, 47919, -1000, 47223, -224, 799,
	5033, -1000, 2248, 2230, 2699, -1000, -1000, -1000, -1000, -1000,
	-1000, -479, 1461, -1000, 331, -1000, -1000, 162, -1000, 19381,
	-1000, 19381, -1000, 1462, -1000, -1000, 2493, 123, -1000, 2736,
	-1000, 2728, 777, 777, -1000, 1142, -479, -1000, -1000, 1822,
	1822, -1000, -230, -1000, -1000, -1000, -1000, -1000, 557, 1221,
	-1000, -1000, -1000, -1000, -1000, 5033, -1000, -1000, -1000, 245,
	245, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3252, 3251, 22, 6, 44, 43, 3250, 39, 130,
	224, 24, 272, 117, 3249, 200, 3248, 3247, 3246, 3244,
	3243, 3241, 2775, 2771, 2769, 3240, 3239, 2764, 3238, 3237,
	3236, 3235, 3234, 3233, 3231, 3230, 3229, 3228, 3227, 3226,
	3225, 3224, 3223, 3222, 3221, 3220, 3219, 3218, 3217, 214,
	85, 3216, 3215, 201, 193, 215, 3214, 3213, 3212, 136,
	207, 105, 107, 208, 3211, 3210, 99, 3209, 3208, 3207,
	213, 212, 211, 957, 3206, 206, 135, 55, 3205, 3203,
	3202, 3201, 3200, 3199, 3198, 3197, 3196, 3195, 3194, 3193,
	3192, 3191, 3190, 3189, 3188, 3187, 3186, 3185, 256, 3183,
	3182, 9, 3181, 102, 3180, 3179, 3178, 3177, 3176, 71,
	3172, 3171, 21, 111, 3168, 3167, 50, 3166, 3165, 3164,
	3163, 3162, 8, 3161, 16, 3160, 31, 3159, 3158, 150,
	3157, 3156, 3155, 29, 3154, 3151, 3148, 3144, 3142, 3141,
	3140, 165, 3137, 3135, 3134, 195, 221, 3131, 3127, 194,
	122, 131, 3125, 3124, 121, 209, 3118, 138, 3117, 3115,
	3113, 174, 3112, 2306, 3109, 3108, 81, 114, 3107, 146,
	3106, 3105, 61, 97, 78, 59, 53, 54, 3104, 3103,
	79, 96, 3102, 127, 3099, 3097, 124, 84, 3095, 119,
	116, 3094, 3093, 77, 28, 3091, 12, 14, 5, 86,
	3090, 3089, 132, 3088, 3087, 3082, 115, 3081, 3080, 2925,
	3078, 109, 154, 125, 93, 3077, 47, 60, 3074, 3072,
	3071, 3070, 3069, 63, 3067, 3065, 3057, 162, 158, 192,
	3049, 34, 56, 64, 171, 3045, 67, 94, 216, 190,
	3044, 3043, 159, 160, 3042, 3041, 68, 45, 48, 3032,
	129, 153, 139, 35, 110, 157, 3030, 3029, 70, 89,
	3027, 3026, 3025, 3020, 196, 3018, 3015, 83, 3014, 73,
	3013, 203, 3010, 2, 58, 3009, 46, 184, 3003, 87,
	3002, 3000, 82, 118, 92, 20, 2999, 183, 188, 151,
	191, 2993, 2986, 65, 2983, 2981, 2977, 217, 254, 2973,
	2972, 88, 198, 170, 185, 106, 2970, 361, 2967, 2966,
	112, 0, 5256, 2955, 23, 189, 2948, 2945, 6091, 161,
	32, 13, 2941, 134, 2939, 2931, 2926, 2920, 243, 197,
	128, 186, 72, 2918, 2914, 2912, 4, 2909, 2906, 2905,
	2902, 2901, 2900, 104, 41, 38, 37, 257, 90, 76,
	120, 187, 179, 98, 2898, 2892, 2887, 148, 123, 2886,
	181, 180, 168, 156, 2885, 199, 172, 145, 2882, 95,
	36, 2881, 2880, 2879, 2878, 108, 2875, 2872, 2871, 2870,
	178, 173, 147, 100, 2856, 101, 137, 177, 175, 57,
	2855, 52, 2854, 2851, 18, 205, 25, 2850, 1, 126,
	149, 2845, 4931, 202, 2844, 7, 356, 176, 2842, 2841,
	19, 3, 10, 2840, 2839, 2831, 2828, 155, 2822, 2820,
	2819, 2816, 15, 51, 11, 40, 133, 166, 2815, 2814,
	167, 169, 2813, 2811, 2810, 2809, 2807, 2804, 2798, 103,
	33, 2790, 62, 74, 26, 17, 2788, 2787, 30, 49,
	2786, 2781, 3900, 782, 152, 2780, 218,
}

//line sql.y:9092
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) alterWescaleCDCUnion() *AlterWescaleCDC {
	v, _ := st.union.(*AlterWescaleCDC)
	return v
}

func (st *yySymType) alterWescaleFilterUnion() *AlterWescaleFilter {
	v, _ := st.union.(*AlterWescaleFilter)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createWescaleCDCUnion() *CreateWescaleCDC {
	v, _ := st.union.(*CreateWescaleCDC)
	return v
}

func (st *yySymType) createWescaleFilterUnion() *CreateWescaleFilter {
	v, _ := st.union.(*CreateWescaleFilter)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) dropWescaleCDCUnion() *DropWescaleCDC {
	v, _ := st.union.(*DropWescaleCDC)
	return v
}

func (st *yySymType) dropWescaleFilterUnion() *DropWescaleFilter {
	v, _ := st.union.(*DropWescaleFilter)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) showWescaleCDCUnion() *ShowWescaleCDC {
	v, _ := st.union.(*ShowWescaleCDC)
	return v
}

func (st *yySymType) showWescaleFilterUnion() *ShowWescaleFilter {
	v, _ := st.union.(*ShowWescaleFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) wescaleFilterActionUnion() *WescaleFilterAction {
	v, _ := st.union.(*WescaleFilterAction)
	return v
}

func (st *yySymType) wescaleFilterPatternUnion() *WescaleFilterPattern {
	v, _ := st.union.(*WescaleFilterPattern)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

func (st *yySymType) withParamsUnion() *WithParams {
	v, _ := st.union.(*WithParams)
	return v
}

var yyR1 = [...]int{
	0, 450, 451, 451, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 279, 402, 403, 403, 277, 277, 33, 93, 53,
	53, 52, 52, 55, 55, 54, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 127, 127, 23,
	24, 24, 24, 24, 454, 454, 204, 204, 202, 202,
	203, 203, 282, 282, 25, 286, 286, 288, 288, 288,
	288, 278, 278, 278, 26, 26, 287, 287, 289, 289,
	289, 292, 292, 292, 292, 331, 331, 331, 41, 41,
	41, 40, 38, 39, 446, 446, 447, 447, 448, 448,
	448, 448, 449, 449, 449, 449, 449, 42, 42, 42,
	42, 42, 42, 43, 44, 45, 46, 47, 48, 49,
	49, 51, 51, 50, 34, 35, 36, 37, 37, 37,
	437, 437, 435, 435, 439, 439, 441, 441, 434, 434,
	436, 436, 442, 442, 442, 443, 443, 443, 443, 438,
	438, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	440, 440, 445, 445, 27, 27, 27, 27, 27, 27,
	27, 147, 147, 405, 405, 404, 398, 398, 397, 397,
	396, 401, 401, 400, 400, 399, 57, 58, 67, 67,
	67, 67, 68, 69, 406, 406, 371, 74, 74, 73,
	73, 73, 73, 73, 73, 75, 75, 71, 71, 70,
	70, 72, 72, 373, 373, 359, 359, 372, 372, 372,
	372, 372, 372, 372, 358, 358, 158, 158, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 421, 421, 421, 420, 420,
	257, 257, 257, 257, 257, 257, 257, 257, 168, 168,
	180, 180, 180, 180, 180, 166, 166, 167, 165, 165,
	165, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	179, 179, 175, 175, 175, 176, 176, 176, 177, 177,
	422, 422, 422, 422, 336, 336, 336, 336, 339, 339,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 338,
	338, 338, 338, 338, 338, 338, 340, 340, 340, 340,
	340, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 342, 342, 342,
	342, 342, 342, 342, 342, 357, 357, 343, 343, 351,
	351, 352, 352, 353, 353, 353, 354, 354, 354, 355,
	355, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	350, 350, 349, 349, 349, 360, 385, 385, 384, 384,
	382, 382, 382, 382, 382, 382, 382, 382, 369, 369,
	379, 379, 379, 379, 379, 368, 368, 364, 364, 364,
	365, 365, 366, 366, 363, 363, 367, 367, 381, 381,
	380, 380, 361, 361, 362, 362, 387, 423, 423, 423,
	423, 423, 424, 424, 388, 413, 415, 415, 415, 414,
	414, 411, 412, 410, 410, 410, 410, 410, 103, 103,
	103, 305, 305, 306, 306, 377, 377, 376, 376, 376,
	378, 378, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 300, 300, 300, 409, 409, 409, 409,
	409, 409, 408, 408, 408, 374, 374, 374, 407, 407,
	76, 76, 237, 237, 426, 426, 427, 427, 427, 64,
	64, 64, 64, 64, 64, 63, 63, 63, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 65,
	65, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 129, 129, 130, 130, 130, 130,
	132, 132, 132, 390, 390, 77, 77, 3, 3, 192,
	194, 195, 195, 193, 193, 193, 193, 193, 193, 79,
	79, 78, 78, 197, 196, 198, 198, 198, 1, 1,
	2, 2, 4, 4, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 356, 356, 356, 389,
	389, 391, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 135, 134, 134, 133, 136, 136, 136, 136,
	136, 136, 136, 136, 393, 393, 393, 80, 80, 394,
	344, 345, 346, 5, 6, 370, 392, 143, 143, 29,
	56, 56, 30, 30, 30, 30, 31, 31, 81, 82,
	433, 433, 86, 86, 86, 87, 87, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 299, 299,
	308, 308, 298, 298, 323, 323, 323, 301, 301, 301,
	302, 302, 419, 419, 419, 295, 295, 84, 84, 84,
	324, 324, 324, 324, 88, 88, 428, 428, 429, 429,
	430, 430, 430, 89, 90, 90, 326, 326, 327, 327,
	91, 92, 104, 104, 104, 104, 104, 104, 104, 105,
	105, 105, 105, 128, 128, 128, 15, 15, 15, 15,
	15, 100, 100, 100, 14, 14, 17, 85, 85, 94,
	416, 416, 417, 418, 418, 418, 418, 95, 97, 97,
	32, 32, 32, 32, 32, 32, 153, 153, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 148, 148, 148, 142, 142, 455, 98, 99, 99,
	146, 146, 146, 139, 139, 139, 145, 145, 145, 16,
	16, 18, 281, 281, 19, 19, 150, 150, 152, 152,
	152, 152, 152, 154, 154, 154, 154, 154, 154, 154,
	149, 149, 151, 151, 151, 151, 316, 316, 316, 315,
	315, 186, 186, 188, 187, 187, 189, 189, 190, 190,
	190, 190, 235, 235, 212, 212, 274, 274, 275, 275,
	273, 273, 280, 280, 276, 276, 276, 276, 283, 283,
	191, 191, 191, 191, 199, 199, 200, 200, 201, 201,
	325, 325, 321, 321, 321, 320, 320, 205, 205, 205,
	207, 206, 206, 206, 206, 208, 208, 210, 210, 209,
	209, 211, 216, 216, 215, 215, 213, 213, 213, 213,
	214, 214, 214, 214, 217, 217, 163, 163, 163, 163,
	163, 163, 163, 178, 178, 178, 178, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 264, 264,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 172, 240,
	240, 239, 239, 106, 106, 106, 107, 107, 108, 108,
	108, 108, 108, 109, 109, 109, 109, 109, 164, 164,
	111, 111, 110, 110, 230, 230, 313, 313, 112, 113,
	113, 116, 116, 115, 114, 114, 120, 120, 117, 117,
	119, 119, 118, 121, 121, 122, 123, 123, 296, 296,
	218, 218, 226, 226, 226, 226, 219, 219, 219, 219,
	219, 219, 219, 227, 227, 227, 234, 228, 228, 224,
	224, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 183, 183, 183,
	183, 245, 245, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 171, 171,
	184, 184, 184, 184, 185, 185, 185, 185, 185, 185,
	185, 333, 333, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 456, 456, 347, 347, 347, 347,
	225, 225, 225, 225, 225, 144, 144, 144, 144, 144,
	330, 330, 330, 334, 334, 334, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 335, 335, 243, 243, 140, 140, 241, 241, 242,
	244, 244, 236, 236, 236, 236, 238, 238, 221, 221,
	221, 246, 246, 247, 247, 124, 125, 125, 126, 126,
	248, 248, 250, 249, 249, 251, 252, 252, 252, 253,
	253, 254, 254, 254, 66, 66, 66, 66, 66, 61,
	61, 61, 61, 62, 62, 62, 62, 155, 155, 155,
	155, 157, 157, 156, 156, 101, 101, 102, 102, 102,
	432, 432, 432, 431, 431, 431, 431, 431, 431, 161,
	161, 162, 162, 162, 159, 159, 160, 160, 271, 271,
	255, 255, 255, 262, 262, 262, 258, 258, 260, 260,
	260, 261, 261, 261, 259, 268, 268, 270, 270, 269,
	269, 265, 265, 266, 266, 267, 267, 267, 263, 263,
	220, 220, 220, 220, 220, 272, 272, 272, 272, 284,
	284, 231, 231, 233, 233, 232, 232, 182, 285, 285,
	293, 290, 290, 291, 291, 317, 317, 317, 294, 294,
	307, 307, 303, 303, 304, 304, 297, 297, 309, 309,
	309, 96, 229, 229, 386, 386, 383, 312, 312, 314,
	314, 318, 318, 322, 322, 319, 319, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 452, 453, 328, 329, 329,
	329,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 4, 4,
	3, 4, 9, 8, 3, 5, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 0,
	4, 1, 3, 3, 11, 7, 4, 4, 4, 3,
	0, 3, 0, 3, 0, 4, 0, 4, 3, 5,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 2, 2, 2, 3, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 1, 3, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 3, 3, 2, 2, 2, 1, 2, 2,
	0, 1, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 1, 1, 3, 3, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 4, 3, 1, 3, 1, 7, 6, 7, 7,
	8, 8, 0, 1, 5, 2, 1, 1, 1, 0,
	1, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 1, 2, 0, 1, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 2, 0, 2, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 8, 5, 5, 4,
	4, 4, 6, 5, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 3, 3, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 7,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 7, 8, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 4,
	1, 3, 2, 3, 3, 2, 2, 3, 2, 2,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 4, 3, 4, 4, 4, 2, 3, 3,
	3, 3, 5, 2, 3, 3, 3, 2, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	3, 2, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 7, 7,
	6, 6, 2, 2, 1, 6, 3, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 4, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 8, 8, 8, 6, 5, 4, 4, 4,
	4, 4, 7, 4, 4, 6, 6, 6, 8, 6,
	6, 4, 4, 3, 4, 6, 6, 4, 4, 4,
	6, 8, 6, 4, 6, 6, 8, 10, 7, 8,
	8, 9, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 6, 5,
	9, 6, 9, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 5, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 2, 1, 3, 0, 1,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 1, 2, 2, 1, 1, 1, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -450, -98, -455, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -81, -82,
	-86, -87, -83, -84, -88, -89, -90, -91, -92, -14,
	-17, -85, -32, -33, -93, -94, -95, -96, -97, -16,
	-18, -19, -34, -35, -36, -37, -38, -39, -40, -41,
	-42, -9, -8, -13, 10, 11, -127, -52, 33, -57,
	-67, 225, -68, -58, 226, -69, 228, 227, 266, 229,
	250, 660, 235, 259, 75, 343, 344, 346, 347, 348,
	349, -128, 656, 264, 265, 231, 37, 46, 34, 35,
	38, 236, 272, 273, 234, -43, -44, -45, -46, -47,
	-48, -10, -53, 9, -452, 12, 488, 261, 260, 29,
	317, -12, 550, 87, -99, -451, 706, -271, -255, 23,
	34, 30, -254, -250, -146, -255, 21, 19, 8, -98,
	-98, -98, 13, 14, -98, -371, -373, -12, 26, 87,
	159, 9, 87, -98, -74, -73, -71, -70, -72, -75,
	32, -64, -65, -395, -63, -60, 230, 227, 276, 123,
	124, 266, 267, 268, 229, 250, 265, 269, 264, 285,
	-59, 82, 34, 550, 553, -378, 226, 232, 233, 228,
	489, 126, 125, 76, -375, 402, 583, 676, -75, 678,
	101, 104, 677, 45, 240, 679, 680, 681, 590, 682,
	249, 683, 684, 685, 686, 692, 631, 693, 694, 695,
	127, 8, -98, -322, -318, 91, -311, 547, 252, 581,
	582, 301, 82, 42, 556, 399, 402, 583, 518, 676,
	343, 359, 353, 523, 524, 525, 382, 374, 548, 584,
	557, 327, 253, 289, 670, 372, 135, 678, 331, 585,
	267, 407, 408, 586, 409, 101, 346, 451, 691, 330,
	587, 689, 104, 677, 351, 80, 517, 52, 673, 45,
	262, 370, 234, 366, 679, 290, 588, 559, 283, 126,
	123, 698, 37, 362, 51, 31, 688, 125, 50, 680,
	150, 589, 681, 590, 411, 389, 664, 49, 412, 268,
	591, 85, 273, 552, 334, 672, 413, 537, 363, 414,
	300, 687, 231, 592, 651, 643, 644, 415, 416, 665,
	394, 390, 395, 539, 593, 443, 522, 417, 647, 648,
	705, 53, 594, 595, 666, 124, 596, 79, 682, 81,
	357, 358, 597, 298, 251, 542, 543, 445, 386, 500,
	507, 508, 111, 112, 503, 113, 509, 114, 510, 511,
	512, 501, 115, 108, 502, 513, 514, 387, 388, 116,
	515, 110, 109, 504, 506, 117, 516, 249, 36, 418,
	549, 302, 59, 329, 277, 446, 47, 392, 702, 46,
	658, 544, 598, 663, 385, 381, 497, 54, 599, 600,
	601, 602, 519, 683, 384, 356, 380, 697, 4, 295,
	520, 684, 63, 233, 397, 396, 398, 284, 442, 377,
	603, 604, 605, 256, 83, 606, 367, 22, 607, 608,
	419, 291, 609, 57, 610, 611, 449, 265, 612, 55,
	685, 40, 613, 270, 699, 686, 614, 336, 337, 615,
	616, 657, 617, 272, 618, 421, 619, 645, 646, 420,
	391, 393, 545, 279, 422, 237, 551, 620, 335, 361,
	269, 690, 621, 257, 533, 534, 535, 536, 671, 541,
	540, 271, 276, 264, 450, 258, 622, 623, 624, 625,
	626, 328, 642, 627, 628, 347, 692, 498, 44, 629,
	630, 631, 632, 633, 299, 294, 444, 453, 62, 84,
	404, 634, 635, 669, 355, 352, 292, 636, 344, 56,
	693, 694, 695, 286, 696, 526, 527, 528, 529, 10,
	703, 704, 521, 424, 127, 296, 297, 48, 378, 278,
	637, 332, 638, 368, 369, 383, 354, 379, 654, 345,
	652, 280, 425, 499, 266, 639, 452, 293, 400, 405,
	333, 555, 538, 285, 426, 661, 668, 554, 530, 531,
	376, 373, 287, 532, 640, 656, 427, 241, 281, 282,
	641, 653, 428, 429, 326, 430, 338, 340, 441, 341,
	342, 431, 432, 433, 440, 434, 437, 438, 439, 436,
	339, 435, 655, 649, 650, 288, 553, 350, 371, 406,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 316, 496, 324, 317, 318, 319, 320, 321, 325,
	239, -98, 239, -209, -318, 239, 239, 96, 551, 677,
	661, 421, -98, 225, -290, 438, 439, 408, -308, 410,
	423, 418, 428, 416, -299, 419, 421, 279, -419, 443,
	239, 425, 411, 420, 429, 430, 338, 441, 340, 326,
	436, 431, 339, 435, 288, 432, 433, 440, 434, 437,
	-402, 177, 681, 696, 135, 375, 415, 413, 444, 658,
	91, -324, 91, 92, 93, -311, 345, -326, 350, -312,
	-402, -311, 348, -98, -98, -328, -328, -148, 658, 662,
	-228, -163, 143, -178, -181, -169, -173, -222, -223, -224,
	-225, -179, -238, -277, 166, 167, 174, 144, -234, -182,
	27, 546, 490, 489, 177, 32, -172, 220, 69, 70,
	492, 146, 58, 12, 465, 466, -180, 460, 467, 462,
	517, 519, 520, 521, 518, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 522, 494, 495, 118, 496,
	108, 110, 109, 497, 498, 499, 372, 544, 545, 539,
	542, 543, 541, 540, 387, 388, 500, 501, 502, 111,
	112, 113, 114, 115, 116, 117, 503, 506, 504, 505,
	507, 508, 509, 514, 515, 510, 511, 512, 513, 516,
	-108, -120, 572, 571, -121, -170, -171, -184, -185, -312,
	-318, 244, 459, 238, 172, 488, -174, -167, -236, 107,
	92, 93, -8, -232, 458, 463, 464, 468, 461, 558,
	560, 575, 576, 578, 563, 568, 567, 570, 533, 534,
	535, 536, 537, 538, 643, 644, 645, 646, 647, 648,
	649, 650, -402, -311, 91, -176, -175, -218, 94, 99,
	102, 103, 105, -425, 262, 368, 369, 119, -452, 674,
	90, 95, 96, 97, 98, 120, 121, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 45,
	424, 424, -209, -98, -98, -98, -98, -248, -146, -250,
	-10, -8, -452, -98, -8, -9, -13, -53, 225, 318,
	319, 320, 321, 259, -55, 577, -54, -318, 100, -255,
	-271, 13, 162, 43, 51, -253, -254, -12, -8, -163,
	20, 24, 25, -151, 168, -163, -318, -151, -297, 243,
	-98, -98, -286, -331, 345, -288, 444, 658, 443, -278,
	-291, 91, -277, -290, 442, -12, -372, 159, -358, -362,
	-312, 254, -388, 250, -209, -98, -381, -380, -312, -452,
	322, 303, -147, -307, 240, 248, 247, 136, -406, 139,
	296, 459, 238, -70, -71, -72, -290, 176, 680, -129,
	271, 275, 88, 88, -362, -361, -360, -407, 275, 254,
	-387, -379, 246, 255, -368, 247, 248, -363, 240, 137,
	-407, -363, 245, 255, 250, 254, 275, 275, 127, 275,
	127, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	270, -369, 151, -369, 554, 554, -375, -407, 250, 240,
	-407, -407, 246, -309, -363, 242, 26, 242, 36, 36,
	-369, -369, -369, -290, 176, -369, -369, -369, -369, 283,
	283, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, 322, 303,
	239, -406, -155, 435, 326, 340, 338, 82, -73, 285,
	-56, -209, 322, 303, -307, 240, 241, -406, 272, -209,
	221, -209, -433, -209, 96, 96, 322, 323, 303, 304,
	322, 303, 459, 412, 416, 279, 239, 280, 241, 426,
	-301, 159, 16, -301, -298, 424, 422, 409, 414, -301,
	-301, -301, -301, 286, 407, -364, 240, 36, 251, 424,
	286, 407, 286, 287, 286, 287, 417, 427, 286, -323,
	15, 162, 287, -323, -323, 90, -323, 90, 90, -302,
	159, 286, 424, 282, -301, -301, -301, -329, -452, -314,
	-312, -310, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 375, 250, 176, 246, 489, 225,
	73, 558, 460, 462, 458, 465, 491, 492, 459, 410,
	32, 14, 560, 29, 260, 25, 39, 170, 227, 149,
	561, 263, 27, 261, 118, 121, 563, 23, 76, 255,
	15, 248, 41, 17, 564, 565, 18, 244, 243, 162,
	240, 71, 12, 220, 30, 158, 67, 566, 137, 567,
	568, 569, 570, 131, 69, 159, 21, 700, 463, 464,
	34, 659, 546, 274, 172, 74, 60, 662, 143, 461,
	571, 572, 119, 573, 122, 77, 667, 139, 19, 72,
	43, 574, 275, 575, 245, 701, 576, 447, 577, 160,
	228, 488, 70, 161, 674, 578, 675, 238, 423, 9,
	493, 33, 259, 247, 129, 68, 579, 239, 148, 494,
	495, 242, 132, 120, 8, 136, 35, 13, 75, 78,
	466, 467, 468, 58, 128, 550, 147, 16, 580, 448,
	141, 660, 454, 455, 456, 457, 235, -402, 663, -329,
	-329, 33, 92, -428, -429, -430, 550, 447, 242, -312,
	-209, -104, 651, 229, -105, 657, 24, 237, -153, 424,
	-141, 177, 681, 664, 665, 666, 663, 421, 661, 671,
	669, 667, 286, 668, 88, 139, 141, 142, 4, -163,
	158, -219, 151, 152, 153, 154, 155, 156, 157, 162,
	143, 145, 159, -264, 140, 163, 164, 165, 166, 167,
	168, 169, 171, 170, 172, 173, 160, 161, 176, 223,
	224, -173, -173, -173, -173, -234, -240, -239, -452, -236,
	-402, -311, -318, -452, -452, -173, -296, -452, -452, -169,
	-452, -452, -452, -243, -163, -452, -452, -456, -452, -456,
	-456, -347, -452, -347, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	221, -452, -452, -452, -452, -452, -347, -347, -347, -347,
	-347, -452, -452, -452, -452, -452, -452, -452, -452, -452,
	-452, -452, -452, -452, -452, 103, 99, 102, 94, -238,
	105, 90, 90, 90, 90, -8, -9, -228, -452, -328,
	-416, -417, -212, -209, -452, 326, 338, -312, -312, 272,
	-253, -12, -8, -248, -254, -250, -8, -139, -152, 64,
	65, -154, 25, 39, 68, 66, 24, -453, 89, -453,
	-271, -453, -49, 550, -49, -49, -49, -49, -49, 88,
	-55, -274, 87, 62, 44, 90, 90, 88, 22, -249,
	-251, -163, 15, -316, 4, -315, 26, -312, 90, 221,
	15, -210, 30, -209, -297, -297, 88, 91, 345, -287,
	-289, 445, 447, 151, -317, -312, 90, 32, 89, 88,
	-209, -336, -339, -341, -340, -342, -337, -338, 372, 373,
	177, 376, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 389, 33, 262, 368, 369, 370, 371, 390, 391,
	392, 393, 395, 396, 397, 398, 353, 374, 548, 354,
	355, 356, 357, 358, 359, 361, 362, 365, 363, 364,
	366, 367, -403, -402, 87, 64, 65, 89, 88, -343,
	87, -163, -304, 244, -304, -155, 239, -402, 240, 240,
	240, -98, 488, -369, -369, -369, 270, 20, -63, -60,
	-395, 19, -59, -60, 230, 123, 124, 227, 87, -358,
	87, -367, -403, -312, -402, 87, 137, 245, 136, -366,
	-363, -366, -367, -236, -402, 137, 137, -402, -402, -283,
	-312, -283, -283, 24, -283, 24, -283, 24, 96, -312,
	-283, 24, -283, 24, -283, 24, -283, 24, -283, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -236, -402,
	-402, -236, -358, -236, -209, -402, -290, 96, 96, 96,
	-369, -369, 96, 90, 90, 90, -369, -369, 96, 90,
	-320, -318, 90, 90, -408, 256, 300, 302, 96, 96,
	96, 96, 32, 90, -409, 32, 688, 687, 689, 690,
	691, 90, 96, 32, 96, 32, 96, -312, 87, 91,
	91, -209, -161, 290, 225, 227, 230, 77, 90, 329,
	330, 327, 336, 337, 332, 333, 90, 329, 327, 336,
	337, 332, 333, 90, 329, 330, 327, 336, 337, 332,
	333, 151, 45, 88, 242, 91, 91, 239, -402, -303,
	244, -303, -312, -319, -318, -310, -432, 88, -431, 23,
	454, 455, 457, 413, 456, 91, 91, 91, 91, -209,
	-209, -209, -209, -209, -209, -209, -329, 90, -163, -365,
	15, 162, -323, -323, -301, -209, -365, -323, -301, -209,
	-301, -301, -301, -301, -323, -323, -323, -301, -318, -318,
	-302, -301, -301, 663, -301, 341, 663, 90, -295, 15,
	77, -329, -329, 88, 351, 448, 449, -327, 348, -100,
	-312, 90, -15, -11, -23, -22, -24, -27, 225, 151,
	-15, 88, 550, -202, -209, 663, 663, 663, 663, 663,
	663, -163, -163, -163, -163, 573, -226, 119, 143, 120,
	121, -181, -227, -232, -234, 106, 162, 145, 159, -264,
	-169, -173, -169, -169, -169, -169, -169, -169, -169, -169,
	-169, -169, -169, -169, -169, -330, -312, 90, 177, -177,
	-176, 105, -425, -177, 547, 88, -239, 221, -163, -163,
	-402, -163, -312, -149, -151, -149, -163, -241, -242, 147,
	-236, -163, -453, -453, 96, 105, 168, -145, 25, 39,
	-145, -145, -145, -145, -163, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -145, -312, -312, -138, -137, 470,
	471, 472, 473, 475, 476, 477, 480, 481, 485, 486,
	469, 487, 474, 479, 482, 483, 484, 478, 371, -163,
	-163, -163, -163, -163, -163, -106, -163, 130, 131, 132,
	-228, -163, -169, -163, -163, -163, -453, -163, -163, -163,
	-229, -228, -401, -400, -399, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -163, -163, -163, -453, -163,
	-183, -167, 96, -279, 105, 92, -163, -163, -150, -149,
	-314, -319, -310, -311, -149, -150, -150, -149, -149, -163,
	-163, -163, -163, -163, -163, -163, -163, -453, -163, -163,
	-163, -163, -163, -271, -453, -228, 88, -418, 447, 448,
	659, -321, 275, -320, 26, -229, 90, 90, 15, -281,
	78, -312, -253, -253, 60, -149, -154, -453, 87, -54,
	26, -273, -312, 63, 90, -348, -290, 399, 400, 177,
	-163, -163, 88, -252, 28, 29, -209, -315, 168, -319,
	-209, -282, 275, -209, -187, -189, -190, -191, -212, -235,
	-452, -192, -8, 569, 566, 15, -202, -203, -211, -318,
	-288, -331, -287, 88, 446, 448, 449, 77, 122, -163,
	-349, 176, -377, -376, -375, -358, -360, -361, -362, 89,
	-349, -354, 405, 404, -343, -343, -343, -343, -343, -348,
	-348, -348, -348, 87, 87, -343, -343, -343, -343, -351,
	87, -351, -351, -352, -351, 87, -352, -353, 87, -353,
	-388, -163, -385, -384, -382, -383, 249, 101, 641, 597,
	550, 590, 631, 78, -380, -252, 96, -453, 91, 143,
	91, -161, -304, -386, -383, -402, -402, -402, -304, 91,
	90, 91, 90, 91, 90, -130, -77, -1, 700, 701,
	702, 88, 20, -359, -358, -76, 300, -391, -392, 275,
	-387, -381, -367, 137, -366, -367, -367, -402, 88, 30,
	127, 127, 127, 127, 550, 227, 33, -305, 589, 143,
	641, 597, -358, -76, 242, 242, -330, -330, -330, 90,
	90, -300, 696, -202, 550, -437, 87, -157, 292, 151,
	281, 281, 239, 239, 294, -209, 328, 331, 329, 330,
	327, 336, 337, 332, 333, 24, 24, 24, 24, 24,
	24, 24, 329, 327, 336, 337, 332, 333, 342, 24,
	24, 24, 24, 24, 24, 328, 331, 329, 330, 327,
	336, 337, 332, 333, 24, 24, 24, 24, 24, 24,
	24, 293, 295, 297, 283, -209, -209, -303, 77, -204,
	-209, 27, -318, -431, -209, 285, -209, -301, -301, -209,
	-301, -301, -209, -430, 352, -312, -98, 386, 652, 653,
	655, 654, -141, 447, 88, 550, 23, -142, 23, -452,
	119, 120, 121, -227, -169, -173, -169, 142, 263, -452,
	-236, -453, -314, 26, 88, 78, -453, 88, 88, -453,
	-453, 88, 15, -244, -242, 149, -163, -453, 88, -453,
	-453, -453, -228, -163, -163, -163, -163, -453, -453, -453,
	-453, -453, -453, -453, -453, -453, -453, -228, 88, 88,
	15, -334, 26, -453, -453, -453, -453, -453, -243, -453,
	15, -453, 78, 88, 162, 88, -453, -453, -453, 88,
	88, -453, -453, 88, 88, -453, 88, 88, 88, -453,
	88, 88, 88, 88, -453, -453, -453, -453, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, -453, -113,
	574, -453, -453, 88, -453, 88, -453, -452, 221, -453,
	-453, -453, -453, -453, 88, 88, 88, 88, 88, 88,
	-453, -453, -453, 88, 88, -453, 88, -453, 88, -453,
	-417, 658, 448, -216, -215, -213, 75, 243, 76, -452,
	-320, -453, -177, -279, -280, -279, -221, -312, 96, 105,
	-255, -186, -188, 15, -154, -51, -50, 90, -234, 89,
	88, -348, -259, -265, -298, -312, 90, 177, -350, 177,
	-350, 399, 400, -251, 221, -217, 16, -220, 33, 58,
	-11, -452, -452, 33, 88, -205, -207, -206, -208, 67,
	71, 73, 68, 69, 70, 74, -325, 26, -8, -187,
	-8, -452, -209, -202, -454, 15, 78, -454, 88, 221,
	-289, -292, 450, 447, 453, -402, 90, -129, 88, -375,
	-362, -256, -158, 41, -355, 406, -348, 557, -348, -357,
	90, -357, 96, 96, 96, 89, -66, -61, -62, 34,
	82, -382, -369, 90, 40, -369, -369, -312, 89, -252,
	550, 27, -435, 87, -157, -209, 77, -386, -386, -386,
	-318, -2, 699, 705, 137, 87, 409, 19, -273, 88,
	89, -237, 301, 89, -131, -312, 89, 87, -367, -367,
	-312, -452, 239, 32, 32, 641, 597, 589, -76, -237,
	-236, -402, -349, 698, 697, 89, 87, -439, 305, -436,
	-443, 284, 29, 306, 286, 241, 299, -162, 465, -159,
	90, 91, -209, -209, -209, -209, -209, 230, 227, 432,
	-426, 334, -426, -426, 90, -426, 432, -426, -426, 284,
	242, -202, -209, 88, -103, 258, 253, -323, -323, 34,
	-209, 447, 672, 670, -163, 142, 263, -181, -173, -169,
	-332, 177, 372, 262, 370, 366, 386, 377, 404, 368,
	405, 363, 362, 361, -332, -330, -228, -151, -163, -163,
	150, -163, 148, -163, -453, -453, -453, -453, -453, -248,
	-163, -163, -163, -453, 177, 372, 15, -163, -330, -163,
	-163, -163, -163, -163, -399, -163, -228, -163, -228, -163,
	-163, -163, -163, -163, -400, -400, -400, -400, -400, -228,
	-228, -228, -228, -452, -312, -116, -115, -114, 624, 243,
	-113, -183, -116, -183, -150, -314, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -163, -213, -363, -363, -363,
	-283, 88, -294, 23, 15, 58, 58, -186, -217, -187,
	-154, 89, 88, 151, -312, -262, 651, -268, 47, -266,
	-267, 48, -263, 49, 57, -350, -350, 168, -253, -163,
	-284, 77, -285, -293, -236, -231, -233, -232, -452, -272,
	-453, -312, -283, -285, -189, -190, -190, -189, -190, 67,
	67, 67, 72, 67, 72, 67, -206, -318, -453, -163,
	-321, 78, -187, -187, -211, -318, 168, 447, 451, 452,
	-375, -424, 119, 143, 32, 77, 402, 101, -422, 176,
	586, 636, 641, 597, 590, 631, -423, 245, 136, 137,
	257, 26, 42, 89, 88, 89, 88, 89, 89, 88,
	-306, -305, -62, -61, -369, -369, 96, -402, 90, 90,
	87, -439, -434, -442, 29, 306, 286, 241, -209, 77,
	77, 77, -132, 703, 96, 87, -3, 82, -163, 87,
	20, -358, -236, -393, -344, -394, -345, -346, -5, -6,
	-370, -135, 58, 101, -80, 45, 240, 683, 684, 127,
	-452, 696, -385, -273, -389, -391, -209, -166, -452, -165,
	-167, -174, 166, 167, 262, 368, 369, -237, -447, -449,
	284, 29, 125, 324, 325, -441, 273, 87, 89, 88,
	151, -209, -156, 290, 298, 87, -160, 92, -405, 78,
	281, 402, 281, 90, -427, 335, 90, -427, -427, 90,
	-427, 90, -427, -427, -209, -103, -66, -209, -301, -301,
	34, -402, -453, -181, -173, -144, 162, 550, -335, 556,
	-343, -343, -343, -353, -343, 358, -343, 358, -343, -453,
	-453, -453, 88, -453, 23, -453, -163, 88, -140, 493,
	88, 88, -453, 87, 87, -163, -453, -453, -453, 88,
	-453, -453, -453, -453, -453, 88, -453, -453, -453, 88,
	-333, 642, -453, -453, -453, -453, -453, -453, -453, -453,
	-453, -453, -112, -313, -312, -113, 606, 606, -453, -113,
	-245, 88, -453, -453, 88, -453, 88, 88, -453, 88,
	-453, 88, -453, -453, -453, -453, 88, -214, 23, -214,
	-214, -453, -279, -209, -217, -246, 17, -50, 90, -259,
	52, 378, -270, -269, 56, 48, -267, 20, 50, 20,
	31, -284, 88, 151, 88, -453, -453, 88, 58, 221,
	-453, -217, -200, -199, 77, 78, -201, 77, -199, 67,
	67, -274, 88, -282, -187, -217, -217, 221, 119, -452,
	-168, -180, -166, 13, 90, 90, -402, -421, 687, 688,
	32, 96, -369, -369, 137, 137, -209, 87, -348, 90,
	-348, 96, 96, 32, 83, 84, 85, 32, 79, 80,
	81, -446, -448, 29, 125, 324, 325, 273, 89, 88,
	151, -209, -209, -209, -209, -390, 87, 20, -163, 87,
	151, 89, -273, -273, 277, 162, -369, 681, 283, 283,
	-369, -369, -369, -134, -133, 703, 89, -453, 88, -356,
	550, 553, -163, -175, -175, 89, 88, 151, 87, -438,
	-444, 307, 308, 309, 310, 311, 312, 313, 314, 315,
	-443, 90, -274, 89, -398, 550, -404, -312, -312, -312,
	-312, 96, 98, 90, -453, 548, 74, 551, -453, -348,
	-163, -163, -163, -253, 90, -163, -163, 96, 96, -453,
	-163, -228, -163, -453, -197, -196, -198, 664, 119, 32,
	-332, -453, -230, 275, -119, -118, -117, 15, -453, -163,
	-163, -163, -163, -163, -163, -163, -452, 67, 19, 17,
	-452, -452, -321, -246, -247, 18, 20, -260, 54, -258,
	53, -258, -269, 20, 20, 90, 20, 90, 137, -293,
	-163, -233, 58, -11, -312, -231, -312, -248, -163, 87,
	-163, -177, -217, -217, -163, -223, 517, 519, 520, 521,
	518, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 522, 496, 108, 110, 109, 497, 498, 499, 372,
	544, 545, 539, 542, 543, 541, 540, 387, 388, 500,
	501, 502, 111, 112, 113, 114, 115, 116, 117, 503,
	506, 504, 507, 508, 509, 514, 515, 510, 511, 512,
	513, 516, 533, 534, 535, 536, 537, 538, 643, 644,
	645, 646, 647, 648, 649, 650, 90, 90, 87, -163,
	89, 89, 89, 88, 151, 87, -442, 90, -274, -389,
	-77, 89, -275, -273, 96, 89, 278, -232, -452, 90,
	-369, -369, -369, 96, 96, -320, -453, 88, -312, -423,
	-391, 554, 554, -453, -449, 90, -440, -445, 252, 316,
	89, 88, 151, 151, 26, -397, -396, -314, 87, 78,
	63, 549, 552, -453, -453, 88, -453, -453, -453, 89,
	89, -453, -453, -453, 88, -453, -196, -198, -453, 77,
	-177, -248, 20, -116, 300, 302, -116, -453, 88, -453,
	-453, 88, -453, 88, -453, -453, -276, -453, -312, 245,
	20, 20, -276, -276, -216, -247, -126, -125, -124, 580,
	-163, -228, -261, 55, 77, 122, 90, 90, 90, 13,
	-231, 221, -253, -273, -194, 409, -248, -453, -273, 89,
	-448, 90, -440, 151, 26, 89, 705, 137, 89, -232,
	-143, -452, 274, -320, 90, 90, -133, -136, 151, 89,
	88, 151, -444, 90, 90, -11, 88, 151, -273, -209,
	63, -163, -228, -453, 77, 561, 664, -111, -110, -107,
	675, 701, -228, -113, -113, -163, -163, -163, 88, -453,
	-453, -453, -126, 88, -123, -122, -312, 77, 122, -285,
	-312, 89, -453, -452, -253, 89, -257, 151, 89, 90,
	-11, 87, -3, 274, -344, -394, -345, -346, -5, -6,
	-370, 90, -445, 90, 151, -101, 550, -396, -374, -314,
	90, 96, 89, 550, -453, -453, -109, 145, 673, 639,
	-164, -175, -172, 220, -453, 88, -453, 88, -453, 88,
	-312, 245, -124, 88, 26, -321, -195, -193, -312, 603,
	-414, -413, 546, -424, -420, 119, 143, 101, -422, 641,
	597, 128, 129, 90, -101, -163, 87, -453, 151, 90,
	-102, 289, 658, -405, 551, -109, 674, 617, 592, 617,
	592, -163, -163, -163, -122, -452, -453, 88, 23, -336,
	-79, 614, -411, -412, 77, -415, 415, 613, 634, 119,
	90, 89, -273, 90, 250, -398, 552, 142, -453, 88,
	-453, 88, -453, -112, -193, 610, -349, -177, -412, 77,
	-411, 77, 14, 13, -4, 704, 89, 291, -109, -163,
	-163, -453, -78, 27, -194, -410, 258, 253, 256, 33,
	-410, 96, -4, -453, -453, 614, 252, 32, 119, -177,
	-197, -196, -196,
}

var yyDef = [...]int{
	1016, -2, -2, 1018, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 82, 84, 85, 1016, 1016, 1016, 0, 1016, 0,
	0, 1016, -2, -2, 1016, 1633, 0, 1016, 0, 0,
	0, 0, 0, -2, 928, 934, 0, 943, -2, 0,
	0, 1016, 1016, 2227, 2227, 1011, 0, 0, 0, 0,
	0, 1016, 1016, 1016, 1016, 157, 158, 159, 160, 161,
	162, 1490, 62, 1016, 0, 97, 98, 963, 964, 965,
	0, 77, 0, 2225, 1017, 1, 3, 83, 87, 0,
	0, 0, 70, 1499, 0, 90, 0, 0, 1020, 0,
	0, 1616, 1016, 1016, 0, 214, 215, 216, 0, 0,
	0, 1016, 0, -2, 220, -2, 249, 250, 251, 0,
	256, 724, 612, 664, 610, 649, -2, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	615, 488, 488, 0, 0, -2, 598, 598, 598, 1618,
	0, 0, 0, 646, 550, 488, 488, 488, 0, 488,
	488, 488, 488, 0, 0, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 1517, 255, 1634, 1631, 1632, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	0, 1610, 0, 837, 1119, 0, 0, 842, 0, 0,
	845, 846, 0, 0, 917, 848, 849, 917, 0, 917,
	917, 917, 917, 0, 0, 0, 859, 0, 0, 0,
	0, 914, 875, 876, 0, 914, 914, 914, 0, 0,
	887, 920, 0, 0, 893, 917, 917, 917, 897, 898,
	2228, 0, 2228, 2228, 1601, 0, 911, 909, 923, 924,
	52, 927, 930, 931, 932, 933, 936, 0, 947, 950,
	1627, 1628, 0, 952, 959, 977, 978, 0, 1012, 1013,
	57, 1267, 0, 1141, 1146, 1157, 1172, 1173, 1174, 1175,
	1176, 1178, 1179, 1180, 0, 0, 0, 0, 1185, 1186,
	0, 0, 0, 0, 0, 1248, 1194, 0, 0, 0,
	0, 1463, 0, 0, 1424, 1424, 1282, 1424, 1426, 1426,
	1841, 1977, 1985, 2107, 1803, 1808, 1809, 1810, 2100, 2101,
	2102, 2103, 2143, 2144, 2148, 1901, 0, 0, 0, 2217,
	1938, 1946, 1947, 1971, 2072, 2128, 1820, 1966, 2037, 1898,
	1920, 1921, 2054, 2055, 1942, 1943, 1924, 1936, 1939, 1927,
	1928, 1930, 1932, 1937, 1944, 1950, 1929, 1949, 1948, 0,
	1925, 1926, 1931, 1941, 1945, 1933, 1934, 1935, 1940, 1951,
	0, 0, 0, 0, 0, 1363, 1364, 1365, 1366, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 1476, 1477,
	55, 56, 1266, 1597, 1426, 1426, 1426, 1426, 1426, 1208,
	1209, 1210, 1211, 1212, 1236, 1237, 1243, 1244, 2049, 2050,
	2051, 2052, 1882, 2137, 1890, 1891, 2032, 2033, 1903, 1904,
	2178, 2179, -2, -2, -2, 321, 322, 323, 324, 325,
	326, 327, 328, 0, 1845, 2118, 2119, 317, 0, 0,
	385, 386, 382, 383, 384, 1250, 1251, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 2227,
	0, 987, 0, 0, 0, 0, 0, 1499, 0, 1491,
	1490, 75, 0, -2, 0, 0, 0, 0, 169, 169,
	169, 169, 169, 169, 59, 0, 64, 1076, 1019, 89,
	88, 1548, 0, 0, 0, 71, 1500, 79, 81, 1501,
	0, 1021, 1022, 0, 1052, 1056, 0, 0, 0, 1617,
	1616, 1616, 114, 0, 0, 115, 135, 136, 137, 0,
	0, 121, 122, 1603, 1604, 217, 0, 0, 267, 268,
	0, 53, 515, 0, 263, 1038, 0, 508, 447, 0,
	1614, 1614, 1517, 0, 0, 0, 0, 0, 1016, 0,
	1611, 244, 245, 252, 253, 254, 488, 488, 488, 661,
	0, 0, 255, 255, 619, 620, 621, 0, 0, -2,
	513, 0, 599, 0, 0, 502, 502, 506, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 0, 489, 0, 659, 660, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1620, 0, 636, 637,
	0, 0, 0, 488, 488, 0, 0, 0, 0, 488,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 1539, 0, 0, 0, 0, 0, -2, 0,
	829, 0, 0, 0, 0, 0, 1612, 1612, 0, 836,
	0, 838, 1530, 840, 843, 844, 0, 140, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	847, 0, 0, 850, 0, 914, 914, 912, 913, 852,
	853, 854, 855, 917, 0, 0, 497, 498, 499, 914,
	917, 0, 917, 917, 917, 917, 914, 914, 914, 917,
	0, 0, 920, 917, 917, 0, 917, 883, 0, 888,
	0, 889, 890, 891, 894, 895, 896, 899, 2229, 2230,
	1629, 1630, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 2228, 2228, 903,
	907, 1602, 929, 935, 937, 938, 0, 0, 948, 951,
	971, 61, 1889, 958, 61, 960, 961, 962, 990, 991,
	996, 0, 0, 0, 0, 1002, 1003, 1004, 1005, 0,
	0, 1008, 1009, 1010, 0, 0, 0, 0, 0, 1139,
	0, 0, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 1159, 0, 0,
	0, 1181, 1182, 1183, 1184, 1187, 0, 1199, 0, 1201,
	1472, -2, 0, 0, 0, 1192, 1193, 0, 0, 0,
	0, 0, 0, 0, 1464, 0, 0, 1280, 0, 1281,
	1283, 1284, 0, 1285, 1026, 1026, 1026, 1026, 1026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	0, 0, 1036, 1036, 0, 0, 310, 311, 312, 313,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	334, 387, 335, 336, 337, 1266, 0, 0, 0, 58,
	979, 980, 0, 1102, 1622, 0, 0, 0, 1032, 0,
	69, 78, 80, 1499, 73, 1499, 0, 0, 0, -2,
	-2, 1039, 1045, 1046, 1047, 1048, 1049, 66, 2226, 67,
	0, 86, 163, 0, 164, 165, 166, 167, 168, 0,
	60, 0, 0, 0, 0, 461, 1551, 0, 0, 1492,
	1493, 1496, 0, 1053, 1983, 1057, 0, 1059, 1060, 0,
	0, 112, 0, 1118, 0, 0, 0, 123, 0, 125,
	126, 0, 0, 0, 472, 1605, 1606, 1607, -2, 495,
	0, 472, 456, 395, 396, 397, 447, 399, 447, 447,
	447, 447, 461, 461, 461, 461, 430, 431, 432, 433,
	434, 0, 0, 416, 447, 447, 447, 447, 437, 438,
	439, 440, 441, 442, 443, 444, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 449, 449, 449, 449, 449,
	453, 453, 0, 54, 0, 1043, 1044, 476, 0, 1496,
	0, 0, 0, 0, 0, 1539, 1614, 1624, 0, 0,
	0, 1614, 222, 0, 0, 0, 662, 735, 613, 650,
	663, 0, 616, 617, -2, 0, 0, 598, 0, 600,
	0, 496, 0, 507, -2, 0, 506, 0, 502, 506,
	503, 506, 494, 640, 641, 642, 0, 644, 645, 765,
	1088, 0, 0, 0, 0, 0, 771, 772, 773, 0,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	651, 652, 653, 654, 655, 656, 657, 658, 0, 0,
	0, 0, 600, 0, 647, 0, 0, 552, 553, 554,
	0, 0, 557, 558, 559, 560, 0, 0, 563, 564,
	565, 1105, 1106, 566, 567, 592, 593, 594, 568, 569,
	570, 571, 572, 573, 574, 586, 587, 588, 589, 590,
	591, 575, 576, 577, 578, 579, 580, 583, 0, 0,
	180, 237, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 176, 1612, 0, 0,
	0, 0, 1035, 1120, 1635, 1636, 839, 0, 1531, 0,
	1534, 1535, 1536, 1537, 1538, 138, 177, 139, 178, 868,
	869, 870, 871, 872, 873, 874, 900, 918, 919, 0,
	500, 501, 917, 917, 856, 904, 0, 917, 860, 905,
	861, 863, 862, 864, 877, 878, 917, 867, 915, 916,
	879, 880, 881, 886, 882, 884, 885, 921, 0, 925,
	926, 901, 902, 0, 0, 941, 942, 0, 949, 974,
	972, 973, 975, 966, 967, 968, 969, 970, 1016, 0,
	976, 0, 0, 993, 108, 998, 999, 1000, 1001, 1014,
	1007, 1268, 1136, 1137, 1138, 0, 1140, 1143, 0, 1252,
	1254, 1145, 1147, 1263, 1264, 1265, 0, 0, 0, 0,
	0, 1151, 1155, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1177, 1440, 1441, 1442, 1196,
	388, 389, 0, 1197, 0, 0, 0, 0, 0, 0,
	0, 1267, 1198, 0, 1050, 0, 0, 1470, 1467, 0,
	0, 0, 1425, 1427, 0, 0, 0, 0, 1027, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1443,
	0, 0, 0, 0, 0, 1463, 0, 1203, 1204, 1205,
	0, 0, 0, 0, 0, 0, 1323, 0, 0, 0,
	0, 1623, 0, 232, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 1368, 1369, 1370, 51, 0, 0, 0, 1037,
	1474, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 982, 983, 985,
	0, 1122, 0, 1103, 0, 0, 988, 989, 0, 1031,
	0, 1034, 72, 74, 0, 1061, 1040, 68, 0, 63,
	0, 0, 1080, 1549, 461, 1571, 0, 470, 470, 467,
	1502, 1503, 0, 1495, 1497, 1498, 91, 1058, 1054, 0,
	1134, 0, 0, 1117, 0, 1064, 1066, 1067, 1068, 1100,
	0, 1071, 1072, 0, 0, 0, 0, 0, 110, 1119,
	116, 0, 124, 0, 0, 129, 130, 117, 118, 119,
	120, 0, 724, -2, 547, 269, 271, 272, 273, 264,
	-2, 459, 457, 458, 398, 461, 461, 424, 425, 426,
	427, 428, 429, 0, 0, 417, 418, 419, 420, 409,
	0, 410, 411, 412, 451, 0, 413, 414, 0, 415,
	514, 0, 1504, 477, 478, 480, 488, 0, 483, 484,
	0, 488, 488, 0, 509, 510, 0, 1496, 0, 0,
	182, 1521, 0, 0, 1625, 1624, 1624, 1624, 0, 257,
	258, 259, 260, 261, 262, 760, 0, 0, 736, 758,
	759, 255, 0, 0, 265, 602, 601, 0, 792, 0,
	512, 0, 0, 506, 506, 491, 492, 643, 0, 0,
	767, 768, 769, 770, 0, 0, 0, 629, 541, 0,
	630, 631, 600, 602, 0, 0, 472, 555, 556, 561,
	562, 581, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 677, 678, 681,
	683, 684, 685, 604, 691, 680, 682, 686, 687, 688,
	604, 692, 693, 695, 696, 697, 604, 703, 0, 694,
	698, 699, 700, 604, 704, 707, 708, 709, 712, 714,
	715, 716, 604, 722, 711, 713, 717, 718, 719, 604,
	723, 1518, 1519, 1520, 0, 0, 830, 0, 0, 538,
	106, 1613, 835, 1532, 841, 1533, 914, 866, 906, 914,
	858, 865, 892, 939, 940, 945, -2, 953, 954, 955,
	956, 957, 997, 0, 0, 0, 0, 1006, 0, 0,
	1144, 1253, 1255, 1148, 0, 1152, 1156, 0, 0, 0,
	1202, 1200, 1474, 0, 0, 0, 1249, 0, 0, 1271,
	1272, 0, 0, 0, 1468, 0, 0, 1278, 0, 1428,
	1429, 1286, 0, 0, 0, 0, 0, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1490, 0, 0,
	0, 0, 0, 1307, 1308, 1309, 1310, 1311, 0, 1313,
	0, 1314, 0, 0, 0, 0, 1321, 1322, 1324, 0,
	0, 1327, 1328, 0, 0, 1329, 0, 0, 0, 1333,
	0, 0, 0, 0, 1342, 1343, 1344, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1357,
	0, 1231, 0, 0, 1231, 0, 1269, 1036, 0, 1430,
	1431, 1432, 1433, 1434, 0, 0, 0, 0, 0, 0,
	1390, 1391, 1393, 0, 0, 1396, 0, 1398, 0, 1596,
	981, 984, 986, 1074, 1123, 1124, 0, 0, 0, 0,
	1104, 1621, 1029, 1030, 1033, 1082, 0, 1478, 0, 0,
	1061, 1134, 1062, 0, 1041, 0, 171, 0, 65, 1077,
	0, 1553, 1552, 1565, 1578, 470, 470, 464, 465, 471,
	466, 468, 469, 1494, 0, 1499, 0, 1589, 0, 0,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 1110, 0, 0, 0, 0, 1101, 1072, 0,
	1073, 0, -2, 0, 0, 104, 105, 0, 0, 0,
	127, 128, 0, 0, 134, 473, 474, 246, 255, 549,
	270, 522, 0, 0, 394, 460, 421, 422, 423, 0,
	445, 0, 0, 0, 0, 543, 218, 1508, 1507, 488,
	488, 479, 0, 482, 0, 0, 0, 1626, 448, 511,
	0, 1615, 184, 0, 0, 236, 0, 0, 0, 0,
	242, 730, 0, 0, 737, 0, 0, 0, 611, 0,
	622, 623, 0, 764, -2, 826, 476, 0, 490, 493,
	1089, 0, 0, 624, 0, 627, 628, 542, 602, 633,
	634, 648, 635, 584, 585, 582, 0, 186, 0, 0,
	0, 195, 196, 197, 198, 0, 0, 1540, 1541, 1546,
	1544, 1545, 223, 669, 671, 670, 674, 0, 0, 0,
	606, 0, 606, 606, 0, 606, 0, 606, 606, 667,
	0, 538, 1504, 0, 834, 539, 540, 917, 917, 992,
	109, 0, 995, 0, 0, 0, 0, 1149, 1153, 1435,
	1461, 447, 447, 1448, 447, 453, 1451, 447, 1453, 447,
	1456, 447, 1459, 1460, 0, 0, 0, 1051, 0, 0,
	1277, 1471, 0, 0, 1287, 1288, 1289, 1290, 1291, 1465,
	0, 0, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 235, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 1230, 0, 1232, 1233, 0, 0,
	1359, 0, 0, 1371, 0, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1125, 1130, 1130, 1130,
	0, 0, 0, 1608, 1609, 1479, 1480, 1134, 1481, 1063,
	1042, 170, 0, 0, 1081, 1571, 0, 1564, 0, -2,
	1573, 0, 0, 0, 1579, 462, 463, 1055, 92, 1135,
	95, 0, 1589, 1598, 0, 1580, 1591, 1593, 0, 0,
	0, 1585, 0, 1134, 1065, 1096, 1098, 0, 1093, 1108,
	1109, 1111, 0, 1113, 0, 1115, 1116, 1076, 1070, 0,
	112, 0, 1134, 1134, 111, 0, 1121, 131, 132, 133,
	548, 274, 279, 0, 0, 0, 284, 0, 286, 0,
	0, 0, 291, 292, 488, 488, 523, 0, 391, 393,
	0, 0, 277, 461, 0, 461, 0, 452, 454, 0,
	524, 544, 1505, 1506, 0, 0, 481, 485, 486, 487,
	0, 0, 0, 0, 192, 193, 194, 0, 238, 0,
	0, 0, 733, 0, 761, 0, 0, 0, 0, 0,
	0, 266, 603, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 0, 488, 0, 0, 0, 488, 488, 488,
	0, 818, 475, 0, 0, 789, 786, 625, 0, 315,
	316, 318, 0, 0, 0, 0, 0, 632, 0, 0,
	152, 153, 154, 155, 156, 175, 0, 0, 181, 0,
	0, 1076, 1522, 1523, 1524, 0, 1543, 1547, 226, 0,
	0, 0, 0, 679, 689, 0, 605, 690, 701, 705,
	702, 710, 720, 721, 831, 832, 833, 107, 851, 857,
	994, 1015, 1142, 1150, 1154, 0, 0, 0, 0, 1462,
	1446, 461, 1449, 1450, 1452, 1454, 1455, 1457, 1458, 1190,
	1191, 1195, 0, 1274, 0, 1276, 1469, 0, 1499, 0,
	0, 0, 1305, 0, 0, 0, 1316, 1315, 1317, 0,
	1319, 1320, 1325, 1326, 1330, 0, 1332, 1334, 1335, 0,
	0, 0, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 0, 1224, 1227, 1358, 1234, 1235, 1240, 1361,
	0, 0, 1270, 1373, 0, 1378, 0, 0, 1384, 0,
	1388, 0, 1394, 1395, 1397, 1399, 0, 0, 0, 0,
	0, 1102, 1083, 76, 1481, 1483, 0, 172, 173, 1558,
	1556, 1556, 1566, 1567, 0, 0, 1574, 0, 0, 0,
	0, 96, 0, 0, 0, 1594, 0, 0, 0, 0,
	113, 1490, 1090, 1097, 0, 0, 1091, 0, 1092, 1112,
	1114, 1069, 0, 1134, 1134, 102, 103, 0, 280, 0,
	282, 308, 309, 0, 285, 287, 288, 289, 295, 296,
	297, 290, 0, 0, 390, 392, 0, 0, 435, 446,
	436, 0, 0, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 0, 0, 148, 149, 150, 151, 0, 183, 0,
	0, 1076, 239, 240, 241, 725, 0, 735, 0, 1078,
	0, 728, 0, 614, 0, 0, 0, 488, 488, 488,
	0, 0, 0, 0, 803, 0, 0, 766, 0, 774,
	0, 0, 0, 319, 320, 143, 0, 0, 0, 0,
	0, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	0, 190, 0, 1542, 668, 0, 224, 225, 0, 0,
	673, 607, 608, 706, 1188, 0, 0, 0, 1189, 1447,
	0, 0, 0, 0, 1466, 0, 0, 0, 0, 1312,
	0, 0, 0, 1338, 0, 0, 0, 755, 756, 0,
	1402, 1229, 1490, 0, 1231, 1241, 1242, 0, 1231, 1372,
	0, 0, 0, 0, 0, 0, 0, 1131, 0, 0,
	0, 0, 1122, 1483, 1488, 0, 0, 1561, 0, 1554,
	1557, 1555, 1568, 0, 0, 1575, 0, 1577, 0, 1599,
	1600, 1592, 0, 1584, 1587, 1583, 1586, 1499, 1094, 0,
	1099, 0, 1490, 101, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 0, 0,
	450, 455, 142, 0, 0, 0, 0, 188, 0, 0,
	0, 726, 0, 1079, 738, 729, 0, 816, 0, 820,
	0, 0, 0, 823, 824, 825, 802, 0, 806, 516,
	790, 787, 788, 626, 0, 146, 0, 0, 212, 213,
	185, 0, 0, 0, 0, 227, 228, 0, 0, 0,
	1436, 0, 1439, 1273, 1275, 0, 1302, 1303, 1304, 1444,
	1445, 1318, 1331, 1336, 0, 1339, 0, 0, 1340, 0,
	757, 1220, 0, 0, 1238, 1239, 0, 1374, 0, 1379,
	1380, 0, 1385, 0, 1389, 1400, 0, 1127, 1084, 1085,
	1132, 1133, 0, 0, 1075, 1488, 94, 1489, 1486, 0,
	1484, 1482, 1550, 0, 1559, 1560, 1569, 1570, 1576, 0,
	1582, 0, 99, 0, 0, 0, 1499, 281, 0, 300,
	0, 144, 0, 0, 0, 734, 0, 737, 727, 814,
	815, 0, 827, 819, 821, 822, 804, -2, 0, 187,
	0, 0, 0, 199, 191, 1525, 0, 0, 0, 675,
	1437, 0, 0, 1341, 0, 753, 754, 1228, 1221, 0,
	1206, 1207, 1225, 1360, 1362, 0, 0, 0, 0, 1126,
	1128, 1129, 93, 0, 1485, 1246, 0, 1562, 1563, 1590,
	1588, 1095, 1102, 0, 100, 529, 522, 0, 174, 189,
	1525, 0, 0, 0, 807, 808, 809, 810, 811, 812,
	813, 147, 0, 210, 0, 665, 1527, 229, 230, 595,
	596, 597, 223, 0, 1279, 1337, 1222, 0, 0, 0,
	0, 1218, 1219, 0, 1375, 0, 1381, 0, 1386, 0,
	1086, 1087, 1487, 0, 0, 739, 0, 741, 0, -2,
	517, 530, 0, 275, 301, 302, 0, 0, 305, 306,
	307, 298, 299, 145, 219, 0, 0, 828, 0, 200,
	0, 1528, 1529, 226, 0, 0, 1213, 1214, 1215, 1216,
	1217, 0, 0, 0, 1247, 1226, 740, 0, 0, 472,
	0, 750, 518, 519, 0, 525, 526, 527, 528, 303,
	304, 762, 0, 211, 0, 672, 1438, 0, 1376, 0,
	1382, 0, 1387, 0, 742, 743, 751, 0, 520, 0,
	521, 0, 0, 0, 731, 0, 762, 1526, 1223, 0,
	0, 1245, 0, 752, 748, 531, 533, 534, 0, 0,
	532, 763, 732, 1377, 1383, 0, 535, 536, 537, 744,
	745, 746, 747,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 706,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:702
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			setParseTree(yylex, nil)
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:762
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:773
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:783
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:787
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:805
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:809
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:828
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:834
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:895
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:918
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:922
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:926
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:940
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:944
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:949
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:953
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:959
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:963
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:968
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:974
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:980
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:1001
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:1005
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1035
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1039
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1051
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1055
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1068
		{
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1069
		{
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1073
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1083
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1093
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1106
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1112
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1118
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1128
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1132
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1136
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1140
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1146
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1150
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1154
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1160
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1164
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1170
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1180
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1184
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1188
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.str = RepeatableReadStr
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.str = ReadCommittedStr
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.str = SerializableStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1212
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1216
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1220
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1227
		{
			yyLOCAL = &ShowWescaleCDC{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1231
		{
			yyLOCAL = &ShowWescaleCDC{Name: yyDollar[4].str, ShowCreate: true}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1235
		{
			yyLOCAL = &ShowWescaleCDC{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1241
		{
			yyLOCAL = &DropWescaleCDC{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1247
		{
			yyLOCAL = &CreateWescaleCDC{IfNotExists: yyDollar[4].booleanUnion(), Name: yyDollar[5].str, Description: yyDollar[8].createWescaleCDCUnion().Description, Enable: yyDollar[8].createWescaleCDCUnion().Enable, WasmBinaryName: yyDollar[8].createWescaleCDCUnion().WasmBinaryName, Env: yyDollar[8].createWescaleCDCUnion().Env}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1253
		{
			yyLOCAL = &AlterWescaleCDC{OriginName: yyDollar[4].str, Name: yyDollar[7].alterWescaleCDCUnion().Name, Description: yyDollar[7].alterWescaleCDCUnion().Description, Enable: yyDollar[7].alterWescaleCDCUnion().Enable, WasmBinaryName: yyDollar[7].alterWescaleCDCUnion().WasmBinaryName, Env: yyDollar[7].alterWescaleCDCUnion().Env}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleCDC
//line sql.y:1259
		{
			yyLOCAL = &CreateWescaleCDC{Name: "-75516781", Description: "-75516781", Enable: "-75516781", WasmBinaryName: "-75516781", Env: "-75516781"}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "enable" {
				yyLOCAL.Enable = yyDollar[3].str
			}
			if yyDollar[1].str == "wasm_binary_name" {
				yyLOCAL.WasmBinaryName = yyDollar[3].str
			}
			if yyDollar[1].str == "env" {
				yyLOCAL.Env = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1275
		{
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleCDCUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "enable" {
				yyVAL.createWescaleCDCUnion().Enable = yyDollar[5].str
			}
			if yyDollar[3].str == "wasm_binary_name" {
				yyVAL.createWescaleCDCUnion().WasmBinaryName = yyDollar[5].str
			}
			if yyDollar[3].str == "env" {
				yyVAL.createWescaleCDCUnion().Env = yyDollar[5].str
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleCDC
//line sql.y:1293
		{
			yyLOCAL = &AlterWescaleCDC{Name: "-75516781", Description: "-75516781", Enable: "-75516781", WasmBinaryName: "-75516781", Env: "-75516781"}
			if yyDollar[1].str == "name" {
				yyLOCAL.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "enable" {
				yyLOCAL.Enable = yyDollar[3].str
			}
			if yyDollar[1].str == "wasm_binary_name" {
				yyLOCAL.WasmBinaryName = yyDollar[3].str
			}
			if yyDollar[1].str == "env" {
				yyLOCAL.Env = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1312
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleCDCUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleCDCUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "enable" {
				yyVAL.alterWescaleCDCUnion().Enable = yyDollar[5].str
			}
			if yyDollar[3].str == "wasm_binary_name" {
				yyVAL.alterWescaleCDCUnion().WasmBinaryName = yyDollar[5].str
			}
			if yyDollar[3].str == "env" {
				yyVAL.alterWescaleCDCUnion().Env = yyDollar[5].str
			}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.str = "description"
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.str = "enable"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.str = "wasm_binary_name"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.str = "env"
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = "name"
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = "description"
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = "enable"
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = "wasm_binary_name"
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = "env"
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1372
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1376
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1384
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1399
		{
			yyLOCAL = &BranchCommand{
				Type:   "create",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1409
		{
			yyLOCAL = &BranchCommand{
				Type:   "diff",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1419
		{
			yyLOCAL = &BranchCommand{
				Type:   "prepareMergeBack",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1429
		{
			yyLOCAL = &BranchCommand{
				Type:   "mergeBack",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1439
		{
			yyLOCAL = &BranchCommand{
				Type:   "cleanUp",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1449
		{
			yyLOCAL = &BranchCommand{
				Type:   "show",
				Params: yyDollar[3].withParamsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WithParams
//line sql.y:1459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WithParams
//line sql.y:1463
		{
			yyLOCAL = yyDollar[3].withParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *WithParams
//line sql.y:1469
		{
			yyLOCAL = yyDollar[1].withParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WithParams
//line sql.y:1473
		{
			for _, v := range yyDollar[3].withParamsUnion().Keys {
				yyDollar[1].withParamsUnion().Keys = append(yyDollar[1].withParamsUnion().Keys, v)
			}
			for _, v := range yyDollar[3].withParamsUnion().Values {
				yyDollar[1].withParamsUnion().Values = append(yyDollar[1].withParamsUnion().Values, v)
			}
			yyLOCAL = yyDollar[1].withParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WithParams
//line sql.y:1485
		{
			yyLOCAL = &WithParams{
				Keys:   []string{yyDollar[1].str},
				Values: []string{yyDollar[3].str},
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1494
		{
			yyLOCAL = &CreateWescaleFilter{Name: yyDollar[5].str, Description: yyDollar[6].createWescaleFilterUnion().Description, Priority: yyDollar[6].createWescaleFilterUnion().Priority, Status: yyDollar[6].createWescaleFilterUnion().Status, IfNotExists: yyDollar[4].booleanUnion(), Pattern: yyDollar[7].wescaleFilterPatternUnion(), Action: yyDollar[10].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1500
		{
			yyLOCAL = &AlterWescaleFilter{OriginName: yyDollar[4].str, AlterInfo: &CreateWescaleFilter{Name: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Name, Description: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Description, Status: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Status, Priority: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Priority, Pattern: yyDollar[6].wescaleFilterPatternUnion(), Action: yyDollar[7].wescaleFilterActionUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1506
		{
			yyLOCAL = &DropWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1512
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1516
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[4].str, ShowCreate: true}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1520
		{
			yyLOCAL = &ShowWescaleFilter{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1528
		{
			yyLOCAL = &AlterWescaleFilter{AlterInfo: &CreateWescaleFilter{Name: "-75516781", Description: "-75516781", Priority: "-75516781", Status: "-75516781"}}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1532
		{
			yyLOCAL = yyDollar[2].alterWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1538
		{
			yyLOCAL = &CreateWescaleFilter{Description: "-75516781", Priority: "-75516781", Status: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1542
		{
			yyLOCAL = yyDollar[2].createWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1548
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-75516781", FullyQualifiedTableNames: "-75516781", QueryRegex: "-75516781", QueryTemplate: "-75516781", RequestIPRegex: "-75516781", UserRegex: "-75516781", LeadingCommentRegex: "-75516781", TrailingCommentRegex: "-75516781", BindVarConds: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1552
		{
			yyLOCAL = yyDollar[3].wescaleFilterPatternUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1558
		{
			yyLOCAL = &WescaleFilterAction{Action: "-75516781", ActionArgs: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1562
		{
			yyLOCAL = yyDollar[3].wescaleFilterActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1570
		{
			yyLOCAL = &CreateWescaleFilter{Description: "-75516781", Priority: "-75516781", Status: "-75516781"}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1583
		{
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createWescaleFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1598
		{
			yyLOCAL = &AlterWescaleFilter{AlterInfo: &CreateWescaleFilter{Name: "-75516781", Description: "-75516781", Priority: "-75516781", Status: "-75516781"}}
			if yyDollar[1].str == "name" {
				yyLOCAL.AlterInfo.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.AlterInfo.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.AlterInfo.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.AlterInfo.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1614
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Status = yyDollar[5].str
			}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = "description"
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = "priority"
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = "status"
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = "name"
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = "description"
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = "priority"
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = "status"
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1664
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-75516781", FullyQualifiedTableNames: "-75516781", QueryRegex: "-75516781", QueryTemplate: "-75516781", RequestIPRegex: "-75516781", UserRegex: "-75516781", LeadingCommentRegex: "-75516781", TrailingCommentRegex: "-75516781", BindVarConds: "-75516781"}
			if yyDollar[1].str == "plans" {
				yyLOCAL.Plans = yyDollar[3].str
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL.FullyQualifiedTableNames = yyDollar[3].str
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL.QueryRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL.QueryTemplate = yyDollar[3].str
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL.RequestIPRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL.UserRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL.LeadingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL.TrailingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL.BindVarConds = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			if yyDollar[3].str == "plans" {
				yyVAL.wescaleFilterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.wescaleFilterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.wescaleFilterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.wescaleFilterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.wescaleFilterPatternUnion().RequestIPRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.wescaleFilterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.wescaleFilterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = "plans"
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = "query_regex"
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = "query_template"
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = "request_ip_regex"
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = "user_regex"
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = "bind_var_conds"
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1766
		{
			yyLOCAL = &WescaleFilterAction{Action: "-75516781", ActionArgs: "-75516781"}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			if yyDollar[3].str == "action" {
				yyVAL.wescaleFilterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.wescaleFilterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = "action"
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = "action_args"
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1798
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1804
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1811
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1816
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1821
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1830
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1834
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1850
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1865
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1870
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1876
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1887
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1896
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1902
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1906
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1918
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1925
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1932
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1937
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1942
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1947
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1954
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1961
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1972
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1983
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1989
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1993
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1997
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2015
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2019
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2025
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2029
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2035
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2039
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2045
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2049
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:2055
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:2059
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:2065
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:2075
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:2080
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2089
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:2112
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:2121
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = ""
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = ""
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2143
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2147
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2153
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2159
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2164
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2169
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2174
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2179
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2184
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2193
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2202
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2207
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2213
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2219
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2223
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2229
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2233
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2237
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:2243
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:2247
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2252
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2256
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2261
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2267
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2273
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2278
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2283
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2289
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2297
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2304
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2308
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2312
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2316
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2320
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2330
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2337
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2341
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2347
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2351
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2355
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2359
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2363
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2367
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2371
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2375
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2380
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2384
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2388
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2392
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2396
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2400
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2405
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2409
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2413
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = Armscii8Str
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = ASCIIStr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = Big5Str
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = UBinaryStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = Cp1250Str
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = Cp1251Str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = Cp1256Str
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = Cp1257Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = Cp850Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = Cp852Str
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = Cp866Str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = Cp932Str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = Dec8Str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = EucjpmsStr
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = EuckrStr
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = Gb18030Str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = Gb2312Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = GbkStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = Geostd8Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = GreekStr
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = HebrewStr
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = Hp8Str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = Keybcs2Str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = Koi8rStr
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = Koi8uStr
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = Latin1Str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = Latin2Str
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = Latin5Str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = Latin7Str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = MacceStr
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = MacromanStr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = SjisStr
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = Swe7Str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = Tis620Str
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = Ucs2Str
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = UjisStr
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = Utf16Str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = Utf16leStr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = Utf32Str
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = Utf8Str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = Utf8mb4Str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = Utf8Str
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2593
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2597
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2601
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2607
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2611
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2615
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2625
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2632
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2636
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2640
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2644
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2834
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2893
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2902
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2932
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2944
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2948
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2953
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2957
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2962
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:3027
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:3032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:3036
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:3042
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3046
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3052
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3056
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3061
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3065
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3069
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3073
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3077
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:3081
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:3097
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:3101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:3105
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:3109
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:3113
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = yyDollar[2].str
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = "key"
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = yyDollar[1].str
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:3180
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3184
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:3190
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:3194
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3200
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3204
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3210
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3214
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:3220
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3226
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3230
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3234
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3238
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3242
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3251
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:3257
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3263
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3269
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3273
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3277
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3282
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3286
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3292
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3298
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3304
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3308
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3312
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3316
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3320
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3361
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3367
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3375
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3381
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3403
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3427
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3431
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3467
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3471
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3475
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3479
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3483
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3487
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3491
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3495
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3499
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3503
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3575
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3593
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3597
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3606
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3610
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3614
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3622
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3628
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3642
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3646
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3650
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3654
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3658
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3662
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3666
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3670
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3674
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3678
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3683
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3688
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3692
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3696
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3700
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3704
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3708
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3712
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3716
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3720
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3724
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3728
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3732
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3736
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3740
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3744
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3748
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3752
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3756
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3760
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3764
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3770
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3780
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3784
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3788
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3792
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3796
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3800
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3804
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3808
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3812
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3816
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4254
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4296
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4305
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4313
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4322
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4329
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4341
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4350
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4365
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4379
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4383
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4389
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4395
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4401
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4411
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4415
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4421
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4427
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4433
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4439
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4463
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4475
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4479
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4483
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4489
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4493
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4498
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4502
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4507
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4511
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4517
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4521
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4525
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4529
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4533
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4537
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4541
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4545
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4549
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4553
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4557
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4561
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4565
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4569
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4573
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4577
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4581
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4585
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4589
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4593
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4597
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4601
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4620
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4635
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4639
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4644
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4649
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4654
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4659
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4664
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4670
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4676
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4681
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4687
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4693
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4703
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4708
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4712
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4717
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4722
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4727
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4732
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4738
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4744
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4751
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4758
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4765
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4773
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4783
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4789
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4795
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4801
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4807
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4813
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4825
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = ""
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4841
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4847
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4851
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4857
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4861
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4870
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4874
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4880
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4884
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4890
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4896
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4902
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4912
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4916
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4920
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4926
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4930
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4936
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4940
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4944
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4948
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4952
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4956
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4960
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4964
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4976
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4980
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4984
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4988
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4992
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4996
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5004
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5008
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5020
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5024
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5028
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5032
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5036
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5040
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5044
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5052
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5056
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5060
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5064
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5068
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5072
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5076
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5080
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5084
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5088
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5092
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5096
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5100
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5104
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5108
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5112
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5120
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5128
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5132
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5140
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5147
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5151
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5155
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5159
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5163
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.str = ""
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = "extended "
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5215
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5223
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5233
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5237
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5247
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5253
		{
			yyVAL.empty = struct{}{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			yyVAL.empty = struct{}{}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.empty = struct{}{}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5277
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5281
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5285
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5300
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5304
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5311
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5315
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5330
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5334
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5340
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5344
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5348
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5355
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5361
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5365
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5370
		{
			yyVAL.empty = struct{}{}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.empty = struct{}{}
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5375
		{
			yyVAL.empty = struct{}{}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.empty = struct{}{}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5381
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5387
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5392
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5396
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5400
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5404
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5408
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5412
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5416
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5421
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5425
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5429
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5433
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5465
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5469
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = ""
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5488
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5492
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5498
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5504
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5508
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5514
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5520
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5524
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5530
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5536
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5540
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5544
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5548
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5554
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5560
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5564
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5578
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5586
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5600
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5610
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5614
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5672
		{
			yyVAL.str = ""
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5681
		{
			setAllowComments(yylex, true)
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5685
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5691
		{
			yyVAL.strs = nil
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5695
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = SQLCacheStr
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5735
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5741
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5745
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5755
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5764
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5770
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5774
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5783
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.strs = nil
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5792
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5796
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5800
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5804
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = SQLCacheStr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = DistinctStr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = DistinctStr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = StraightJoinHint
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5830
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5834
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5840
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5844
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5850
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5854
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5858
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5862
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5867
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5871
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5887
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5891
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5897
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5903
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5907
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5917
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5921
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5925
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5929
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5935
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5939
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5949
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5958
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5967
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5973
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5977
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5983
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5987
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5993
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5997
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6001
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6005
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:6011
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:6028
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:6032
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:6036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:6040
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6046
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6048
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6052
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6058
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6060
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6063
		{
			yyVAL.empty = struct{}{}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.empty = struct{}{}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6068
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6072
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6076
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6089
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6093
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6097
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6103
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6109
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6113
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6117
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6121
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6127
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:6131
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6141
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6145
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6151
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6161
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6170
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6176
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6180
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6186
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6190
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6194
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6198
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6203
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6207
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6211
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6215
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6326
		{
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6329
		{
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6505
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6509
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6515
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6519
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6525
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6529
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6533
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6539
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6543
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6550
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6554
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6558
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6562
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6566
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6572
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6576
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6580
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6584
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6588
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6607
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6613
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6617
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6626
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6631
		{
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6640
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6646
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6650
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6662
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6668
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6672
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6678
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6682
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6688
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6692
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6704
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6710
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6714
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6720
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6726
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6730
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = ""
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6746
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6750
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6757
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6761
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6765
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6769
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6775
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6779
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6783
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6787
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6791
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6795
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6799
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6805
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6809
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6813
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6820
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6826
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6830
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6866
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6870
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6874
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6878
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6882
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6886
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6890
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6956
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6960
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6964
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6968
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7004
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7008
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7016
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7020
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7024
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7028
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7032
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7036
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7040
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7044
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7048
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7052
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7056
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7060
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7064
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7068
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7072
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7076
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7080
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7084
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7088
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7092
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7096
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7100
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7104
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7108
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7112
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7116
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7120
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7124
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7128
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7132
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7144
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7148
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7152
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7156
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7168
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7172
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7176
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7180
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7184
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7188
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7192
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7196
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7200
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7204
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7208
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7212
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7228
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7242
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7246
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7250
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7260
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7266
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7270
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7274
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7278
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7282
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7287
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7291
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7295
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7312
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7316
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7320
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7324
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7335
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7341
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7345
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7349
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7353
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7359
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7363
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7367
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7371
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7375
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7379
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7383
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7392
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7398
		{
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7400
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7404
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7408
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7412
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7416
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7420
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7424
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7428
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7432
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7436
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7440
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7446
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7450
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7454
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7458
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7462
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7466
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7470
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7474
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7478
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7496
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7500
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7511
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7515
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7519
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7523
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7527
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7533
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7537
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7541
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7545
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7549
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7555
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7559
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7573
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7577
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7583
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7587
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7591
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7595
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7599
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7605
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7609
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7613
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7617
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7621
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7625
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7629
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7633
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7637
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7641
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7660
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7665
		{
			yyVAL.str = string("")
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7669
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7675
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7679
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7685
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7694
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7700
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7704
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7708
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7712
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7718
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7722
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7728
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7737
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7741
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7751
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7760
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7766
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7772
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7776
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7785
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7794
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7800
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7806
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7810
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7816
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7821
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7825
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7829
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7838
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7844
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7848
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7852
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7861
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7865
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7869
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7873
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7883
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7887
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7891
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7895
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7901
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7905
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7909
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7913
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7918
		{
			yyVAL.str = ""
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7922
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7926
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7930
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7935
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7939
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7949
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7954
		{
			yyVAL.str = ""
		}
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7958
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7963
		{
			yyVAL.str = "cascaded"
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7980
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7990
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7994
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7998
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:8002
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:8006
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:8010
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8020
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8026
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8032
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8038
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8047
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8051
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8056
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8060
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8066
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8070
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8076
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8080
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8084
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8089
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8093
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8097
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8102
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8106
		{
			yyVAL.str = " header"
		}
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8111
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8115
		{
			yyVAL.str = " manifest on"
		}
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8119
		{
			yyVAL.str = " manifest off"
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8124
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8128
		{
			yyVAL.str = " overwrite on"
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8132
		{
			yyVAL.str = " overwrite off"
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8138
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8143
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8147
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8153
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8157
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8163
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8167
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8172
		{
			yyVAL.str = ""
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8176
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8186
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8192
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8196
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8200
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8205
		{
			yyVAL.str = ""
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8209
		{
			yyVAL.str = " optionally"
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8222
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8226
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8230
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8234
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8238
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8244
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8248
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8252
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8256
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8265
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8271
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8275
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8281
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8285
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8291
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8295
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8300
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8310
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8314
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8320
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8327
		{
			yyVAL.str = "charset"
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8337
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8341
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8345
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8366
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8374
		{
			yyVAL.empty = struct{}{}
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8376
		{
			yyVAL.empty = struct{}{}
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8378
		{
			yyVAL.empty = struct{}{}
		}
	case 1621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8382
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8391
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8398
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8408
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8412
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8419
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8425
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8429
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8435
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8439
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8446
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9062
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9071
		{
			decNesting(yylex)
		}
	case 2227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9076
		{
			skipToEnd(yylex)
		}
	case 2228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9081
		{
			skipToEnd(yylex)
		}
	case 2229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9085
		{
			skipToEnd(yylex)
		}
	case 2230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9089
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
