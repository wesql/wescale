// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const CODE = 57702
const COLLATION = 57703
const COLUMNS = 57704
const DATABASES = 57705
const ENGINES = 57706
const EVENT = 57707
const EXTENDED = 57708
const FIELDS = 57709
const FULL = 57710
const FUNCTION = 57711
const GTID_EXECUTED = 57712
const KEYSPACES = 57713
const OPEN = 57714
const PLUGINS = 57715
const PRIVILEGES = 57716
const PROCESSLIST = 57717
const SCHEMAS = 57718
const TABLES = 57719
const TRIGGERS = 57720
const USER = 57721
const VGTID_EXECUTED = 57722
const VITESS_KEYSPACES = 57723
const VITESS_METADATA = 57724
const VITESS_MIGRATIONS = 57725
const VITESS_REPLICATION_STATUS = 57726
const VITESS_SHARDS = 57727
const VITESS_TABLETS = 57728
const VITESS_TARGET = 57729
const VSCHEMA = 57730
const VITESS_THROTTLED_APPS = 57731
const WORKLOAD = 57732
const LASTSEENGTID = 57733
const FAILPOINTS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const FAST = 57747
const QUICK = 57748
const CHANGED = 57749
const MEDIUM = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_DATE = 57753
const NOW = 57754
const CURRENT_TIME = 57755
const LOCALTIME = 57756
const LOCALTIMESTAMP = 57757
const CURRENT_USER = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const DAY = 57762
const DAY_HOUR = 57763
const DAY_MICROSECOND = 57764
const DAY_MINUTE = 57765
const DAY_SECOND = 57766
const HOUR = 57767
const HOUR_MICROSECOND = 57768
const HOUR_MINUTE = 57769
const HOUR_SECOND = 57770
const MICROSECOND = 57771
const MINUTE = 57772
const MINUTE_MICROSECOND = 57773
const MINUTE_SECOND = 57774
const MONTH = 57775
const QUARTER = 57776
const SECOND = 57777
const SECOND_MICROSECOND = 57778
const YEAR_MONTH = 57779
const WEEK = 57780
const REPLACE = 57781
const CONVERT = 57782
const CAST = 57783
const SUBSTR = 57784
const SUBSTRING = 57785
const SEPARATOR = 57786
const TIMESTAMPADD = 57787
const TIMESTAMPDIFF = 57788
const WEIGHT_STRING = 57789
const LTRIM = 57790
const RTRIM = 57791
const TRIM = 57792
const JSON_ARRAY = 57793
const JSON_OBJECT = 57794
const JSON_QUOTE = 57795
const JSON_DEPTH = 57796
const JSON_TYPE = 57797
const JSON_LENGTH = 57798
const JSON_VALID = 57799
const JSON_ARRAY_APPEND = 57800
const JSON_ARRAY_INSERT = 57801
const JSON_INSERT = 57802
const JSON_MERGE = 57803
const JSON_MERGE_PATCH = 57804
const JSON_MERGE_PRESERVE = 57805
const JSON_REMOVE = 57806
const JSON_REPLACE = 57807
const JSON_SET = 57808
const JSON_UNQUOTE = 57809
const COUNT = 57810
const AVG = 57811
const MAX = 57812
const MIN = 57813
const SUM = 57814
const GROUP_CONCAT = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const STD = 57819
const STDDEV = 57820
const STDDEV_POP = 57821
const STDDEV_SAMP = 57822
const VAR_POP = 57823
const VAR_SAMP = 57824
const VARIANCE = 57825
const REGEXP_INSTR = 57826
const REGEXP_LIKE = 57827
const REGEXP_REPLACE = 57828
const REGEXP_SUBSTR = 57829
const ExtractValue = 57830
const UpdateXML = 57831
const GET_LOCK = 57832
const RELEASE_LOCK = 57833
const RELEASE_ALL_LOCKS = 57834
const IS_FREE_LOCK = 57835
const IS_USED_LOCK = 57836
const LOCATE = 57837
const POSITION = 57838
const MATCH = 57839
const AGAINST = 57840
const BOOLEAN = 57841
const LANGUAGE = 57842
const WITH = 57843
const QUERY = 57844
const EXPANSION = 57845
const WITHOUT = 57846
const VALIDATION = 57847
const UNUSED = 57848
const ARRAY = 57849
const BYTE = 57850
const CUME_DIST = 57851
const DESCRIPTION = 57852
const DENSE_RANK = 57853
const EMPTY = 57854
const EXCEPT = 57855
const FIRST_VALUE = 57856
const GROUPING = 57857
const GROUPS = 57858
const JSON_TABLE = 57859
const LAG = 57860
const LAST_VALUE = 57861
const LATERAL = 57862
const LEAD = 57863
const NTH_VALUE = 57864
const NTILE = 57865
const OF = 57866
const OVER = 57867
const PERCENT_RANK = 57868
const RANK = 57869
const RECURSIVE = 57870
const ROW_NUMBER = 57871
const SYSTEM = 57872
const WINDOW = 57873
const ACTIVE = 57874
const ADMIN = 57875
const AUTOEXTEND_SIZE = 57876
const BUCKETS = 57877
const CLONE = 57878
const COLUMN_FORMAT = 57879
const COMPONENT = 57880
const DEFINITION = 57881
const ENFORCED = 57882
const ENGINE_ATTRIBUTE = 57883
const EXCLUDE = 57884
const FOLLOWING = 57885
const GET_MASTER_PUBLIC_KEY = 57886
const HISTOGRAM = 57887
const HISTORY = 57888
const INACTIVE = 57889
const INVISIBLE = 57890
const LOCKED = 57891
const MASTER_COMPRESSION_ALGORITHMS = 57892
const MASTER_PUBLIC_KEY_PATH = 57893
const MASTER_TLS_CIPHERSUITES = 57894
const MASTER_ZSTD_COMPRESSION_LEVEL = 57895
const NESTED = 57896
const NETWORK_NAMESPACE = 57897
const NOWAIT = 57898
const NULLS = 57899
const OJ = 57900
const OLD = 57901
const OPTIONAL = 57902
const ORDINALITY = 57903
const ORGANIZATION = 57904
const OTHERS = 57905
const PARTIAL = 57906
const PATH = 57907
const PERSIST = 57908
const PERSIST_ONLY = 57909
const PRECEDING = 57910
const PRIVILEGE_CHECKS_USER = 57911
const PROCESS = 57912
const RANDOM = 57913
const REFERENCE = 57914
const REQUIRE_ROW_FORMAT = 57915
const RESOURCE = 57916
const RESPECT = 57917
const RESTART = 57918
const RETAIN = 57919
const REUSE = 57920
const ROLE = 57921
const SECONDARY = 57922
const SECONDARY_ENGINE = 57923
const SECONDARY_ENGINE_ATTRIBUTE = 57924
const SECONDARY_LOAD = 57925
const SECONDARY_UNLOAD = 57926
const SIMPLE = 57927
const SKIP = 57928
const SRID = 57929
const THREAD_PRIORITY = 57930
const TIES = 57931
const UNBOUNDED = 57932
const VCPU = 57933
const VISIBLE = 57934
const RETURNING = 57935
const FORMAT_BYTES = 57936
const FORMAT_PICO_TIME = 57937
const PS_CURRENT_THREAD_ID = 57938
const PS_THREAD_ID = 57939
const GTID_SUBSET = 57940
const GTID_SUBTRACT = 57941
const WAIT_FOR_EXECUTED_GTID_SET = 57942
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57943
const FORMAT = 57944
const TREE = 57945
const VITESS = 57946
const TRADITIONAL = 57947
const VTEXPLAIN = 57948
const VEXPLAIN = 57949
const PLAN = 57950
const LOCAL = 57951
const LOW_PRIORITY = 57952
const KILL = 57953
const NO_WRITE_TO_BINLOG = 57954
const LOGS = 57955
const ERROR = 57956
const GENERAL = 57957
const HOSTS = 57958
const OPTIMIZER_COSTS = 57959
const USER_RESOURCES = 57960
const SLOW = 57961
const CHANNEL = 57962
const RELAY = 57963
const EXPORT = 57964
const CURRENT = 57965
const ROW = 57966
const ROWS = 57967
const AVG_ROW_LENGTH = 57968
const CONNECTION = 57969
const CHECKSUM = 57970
const DELAY_KEY_WRITE = 57971
const ENCRYPTION = 57972
const ENGINE = 57973
const INSERT_METHOD = 57974
const MAX_ROWS = 57975
const MIN_ROWS = 57976
const PACK_KEYS = 57977
const PASSWORD = 57978
const FIXED = 57979
const DYNAMIC = 57980
const COMPRESSED = 57981
const REDUNDANT = 57982
const COMPACT = 57983
const ROW_FORMAT = 57984
const STATS_AUTO_RECALC = 57985
const STATS_PERSISTENT = 57986
const STATS_SAMPLE_PAGES = 57987
const STORAGE = 57988
const MEMORY = 57989
const DISK = 57990
const PARTITIONS = 57991
const LINEAR = 57992
const RANGE = 57993
const LIST = 57994
const SUBPARTITION = 57995
const SUBPARTITIONS = 57996
const HASH = 57997

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 161,
	673, 161,
	-2, 169,
	-1, 53,
	135, 169,
	176, 169,
	345, 169,
	-2, 523,
	-1, 62,
	36, 779,
	239, 779,
	250, 779,
	285, 793,
	286, 793,
	-2, 781,
	-1, 67,
	241, 817,
	-2, 815,
	-1, 125,
	238, 1478,
	-2, 135,
	-1, 127,
	1, 162,
	673, 162,
	-2, 169,
	-1, 138,
	136, 409,
	244, 409,
	-2, 512,
	-1, 157,
	135, 169,
	176, 169,
	345, 169,
	-2, 532,
	-1, 827,
	87, 1495,
	-2, 1340,
	-1, 828,
	87, 1496,
	221, 1500,
	-2, 1341,
	-1, 829,
	221, 1499,
	-2, 42,
	-1, 908,
	60, 891,
	-2, 906,
	-1, 996,
	249, 43,
	254, 43,
	-2, 420,
	-1, 1081,
	1, 580,
	673, 580,
	-2, 169,
	-1, 1389,
	221, 1500,
	-2, 1341,
	-1, 1536,
	60, 892,
	-2, 911,
	-1, 1537,
	60, 893,
	-2, 912,
	-1, 1588,
	135, 169,
	176, 169,
	345, 169,
	-2, 459,
	-1, 1671,
	136, 409,
	244, 409,
	-2, 512,
	-1, 1680,
	249, 44,
	254, 44,
	-2, 421,
	-1, 2048,
	221, 1504,
	-2, 1498,
	-1, 2049,
	221, 1500,
	-2, 1496,
	-1, 2147,
	135, 169,
	176, 169,
	345, 169,
	-2, 460,
	-1, 2154,
	26, 190,
	-2, 192,
	-1, 2524,
	78, 98,
	88, 98,
	-2, 970,
	-1, 2593,
	648, 696,
	-2, 670,
	-1, 2760,
	50, 1446,
	-2, 1440,
	-1, 3413,
	648, 696,
	-2, 684,
	-1, 3501,
	90, 628,
	95, 628,
	105, 628,
	178, 628,
	179, 628,
	180, 628,
	181, 628,
	182, 628,
	183, 628,
	184, 628,
	185, 628,
	186, 628,
	187, 628,
	188, 628,
	189, 628,
	190, 628,
	191, 628,
	192, 628,
	193, 628,
	194, 628,
	195, 628,
	196, 628,
	197, 628,
	198, 628,
	199, 628,
	200, 628,
	201, 628,
	202, 628,
	203, 628,
	204, 628,
	205, 628,
	206, 628,
	207, 628,
	208, 628,
	209, 628,
	210, 628,
	211, 628,
	212, 628,
	213, 628,
	214, 628,
	215, 628,
	216, 628,
	217, 628,
	218, 628,
	219, 628,
	-2, 1862,
}

const yyPrivate = 57344

const yyLast = 47715

var yyAct = [...]int{
	1544, 3572, 828, 838, 831, 3583, 2095, 3478, 3541, 701,
	3542, 2144, 3131, 1591, 3444, 2910, 3467, 3499, 2812, 2819,
	2988, 3394, 3378, 3326, 2077, 2861, 924, 2870, 2875, 3160,
	2872, 2871, 2869, 2874, 2873, 3161, 3162, 2773, 3376, 3118,
	1149, 902, 2424, 2079, 3190, 798, 2776, 2890, 3366, 2458,
	680, 2827, 1861, 793, 2218, 5, 2719, 683, 198, 2777,
	2774, 198, 2889, 2654, 3027, 3021, 660, 711, 3195, 2892,
	1551, 666, 791, 2115, 3047, 2497, 2771, 2761, 2118, 2484,
	3013, 830, 198, 1915, 2099, 792, 2039, 2181, 2558, 2916,
	681, 2638, 2590, 2559, 1649, 2206, 679, 198, 2560, 2249,
	1097, 1151, 2509, 2186, 925, 797, 43, 2132, 42, 2490,
	166, 2476, 2119, 957, 1911, 2120, 1028, 2460, 2010, 2036,
	1930, 2630, 1538, 904, 666, 198, 41, 666, 1126, 2227,
	2044, 1696, 1869, 152, 2107, 2266, 1678, 2205, 2188, 2551,
	991, 986, 1580, 1560, 100, 2526, 693, 104, 1401, 2009,
	2122, 1515, 1519, 1799, 1934, 1888, 1314, 965, 1329, 1804,
	1685, 961, 2203, 997, 1777, 966, 105, 1795, 2177, 992,
	993, 994, 1579, 2178, 915, 688, 942, 944, 1565, 1004,
	1943, 2006, 2045, 1385, 1361, 912, 99, 107, 85, 1860,
	1140, 906, 1813, 909, 911, 2100, 170, 130, 128, 1642,
	1147, 129, 1670, 937, 135, 136, 1077, 913, 670, 687,
	1405, 3403, 927, 93, 910, 98, 2583, 3573, 2220, 2221,
	2222, 3429, 3119, 2858, 2220, 2613, 2612, 675, 2581, 84,
	2264, 3074, 932, 936, 3111, 655, 1330, 649, 609, 1762,
	95, 95, 3525, 106, 918, 95, 2646, 3430, 2647, 131,
	3424, 3425, 655, 1876, 1875, 1874, 137, 1873, 612, 3165,
	1891, 2880, 958, 119, 1409, 847, 848, 849, 1033, 1872,
	1330, 1030, 1871, 847, 848, 849, 3165, 1844, 984, 649,
	673, 3520, 671, 674, 1047, 1048, 1049, 919, 1052, 1053,
	1054, 1055, 951, 2, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1007, 952, 2456, 3479, 905, 1545, 2878, 2757, 1008,
	926, 646, 1346, 2603, 131, 982, 981, 983, 903, 980,
	1034, 1037, 1038, 2723, 954, 3593, 2312, 2880, 111, 112,
	113, 1041, 116, 2884, 1340, 125, 3164, 193, 194, 1325,
	2877, 603, 3425, 970, 950, 795, 796, 2486, 2586, 950,
	795, 796, 2253, 3164, 668, 669, 1050, 2074, 2075, 630,
	3529, 132, 3545, 154, 898, 899, 900, 901, 1340, 95,
	908, 3540, 628, 3563, 175, 3527, 2993, 2992, 2606, 3485,
	975, 2251, 131, 2878, 3379, 3528, 2425, 3485, 649, 1881,
	2935, 3322, 3321, 649, 2197, 86, 2252, 1032, 939, 940,
	3526, 3124, 1031, 86, 3125, 165, 3554, 964, 3332, 2884,
	3523, 153, 625, 2321, 3143, 649, 3408, 2191, 3132, 2500,
	3468, 640, 3475, 1316, 2246, 86, 86, 3331, 88, 3142,
	172, 1920, 3504, 173, 2955, 1659, 635, 650, 1362, 2457,
	1336, 2809, 2810, 1328, 2501, 2881, 638, 1343, 2808, 1344,
	1345, 2645, 1672, 1673, 164, 163, 192, 2103, 2318, 3509,
	2932, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1370,
	1372, 1373, 2138, 95, 1336, 3208, 1805, 3507, 2319, 650,
	2629, 95, 2620, 2621, 1116, 2535, 3513, 3514, 2534, 2139,
	2140, 2536, 1853, 1854, 2829, 2830, 979, 896, 1086, 1087,
	1080, 3508, 1144, 95, 95, 895, 1581, 974, 1582, 2584,
	976, 2547, 615, 1117, 617, 631, 3395, 652, 3024, 651,
	621, 2881, 619, 623, 632, 624, 1315, 618, 2688, 629,
	1089, 1110, 620, 633, 634, 637, 641, 642, 643, 639,
	636, 644, 613, 614, 1104, 627, 653, 2157, 2156, 1105,
	2912, 1326, 193, 2943, 977, 158, 1674, 161, 3546, 1671,
	1852, 159, 160, 2941, 2190, 2493, 2494, 649, 176, 2076,
	2310, 663, 1856, 943, 667, 1076, 132, 182, 649, 3547,
	1133, 661, 1135, 2917, 1577, 2631, 649, 1752, 1523, 175,
	2313, 2314, 2316, 2315, 1805, 198, 2591, 198, 650, 2228,
	198, 198, 2828, 650, 3354, 1118, 3355, 2616, 979, 3521,
	971, 1104, 2272, 2267, 2831, 1143, 1105, 973, 972, 1051,
	1132, 1134, 2905, 1111, 1103, 650, 1102, 3575, 2103, 1778,
	2906, 1753, 2540, 1754, 1137, 1121, 1122, 1142, 666, 1125,
	666, 666, 2913, 2301, 1082, 172, 1119, 1120, 173, 2101,
	2102, 610, 2633, 2271, 3113, 979, 1075, 3112, 2290, 1803,
	666, 198, 2914, 953, 947, 945, 977, 2273, 953, 947,
	945, 192, 2287, 2722, 2288, 1057, 2289, 1056, 2269, 1335,
	1332, 1333, 1334, 1339, 1341, 1338, 978, 1337, 3306, 1389,
	3109, 1526, 1663, 2689, 1017, 2270, 987, 1331, 193, 2231,
	988, 167, 3169, 2116, 988, 1026, 1100, 1025, 1106, 1107,
	1108, 1109, 1024, 1335, 1332, 1333, 1334, 1339, 1341, 1338,
	1079, 1337, 132, 1015, 1130, 1376, 1023, 1027, 1131, 1022,
	1021, 1331, 1145, 1146, 1020, 175, 3402, 1123, 1136, 985,
	1387, 2582, 1019, 1397, 1014, 2319, 2831, 1124, 962, 1376,
	962, 3594, 960, 1138, 3552, 1000, 962, 2637, 1036, 1684,
	654, 999, 2634, 1796, 999, 2204, 3481, 938, 1035, 1129,
	1379, 1380, 1381, 1382, 3481, 2257, 611, 650, 2256, 1792,
	1393, 1307, 647, 176, 844, 844, 162, 1317, 650, 844,
	2851, 172, 182, 1044, 173, 2250, 650, 648, 978, 3480,
	2615, 2585, 1657, 1006, 3108, 2549, 2601, 3480, 1578, 1656,
	1793, 2650, 3391, 1655, 3025, 1653, 2933, 192, 2461, 2463,
	2101, 2102, 608, 1078, 1783, 2618, 3587, 607, 602, 3061,
	2628, 1389, 1383, 2627, 2194, 2333, 1809, 3043, 1308, 1309,
	2248, 1018, 2531, 3072, 3073, 978, 2605, 155, 3163, 1006,
	156, 1764, 1763, 1765, 1766, 1767, 2882, 2883, 2279, 2275,
	2277, 2278, 2276, 2280, 2281, 3163, 2496, 1683, 2433, 2886,
	1016, 3141, 89, 1923, 2195, 1806, 1807, 1810, 1808, 946,
	168, 2193, 1114, 1569, 946, 1478, 1043, 180, 198, 1091,
	2604, 2491, 666, 666, 1377, 1378, 2145, 1376, 1373, 1782,
	2807, 1546, 1548, 1944, 94, 1005, 921, 198, 2320, 2640,
	127, 1407, 94, 1408, 2639, 2196, 167, 1945, 2977, 1527,
	1127, 2640, 1814, 3512, 123, 2192, 2639, 666, 188, 176,
	198, 1141, 2882, 2883, 94, 94, 3416, 1530, 182, 1513,
	1324, 120, 666, 1099, 2674, 2886, 1029, 1085, 3104, 198,
	3037, 1005, 2268, 1865, 1809, 1789, 1583, 999, 1002, 1003,
	1514, 962, 1935, 1006, 1101, 996, 1000, 3511, 1935, 1411,
	2350, 2574, 169, 174, 171, 177, 178, 179, 181, 183,
	184, 185, 186, 3555, 1088, 2462, 995, 666, 187, 189,
	190, 191, 1345, 1806, 1807, 1810, 1808, 1006, 3204, 1529,
	1389, 1531, 121, 1533, 104, 3079, 666, 666, 906, 666,
	3078, 666, 666, 2235, 666, 666, 666, 666, 666, 666,
	1532, 1344, 1345, 105, 1514, 1693, 1692, 1389, 1682, 2245,
	1389, 666, 1389, 198, 2247, 2243, 1520, 1786, 1507, 1784,
	1785, 1017, 1787, 1788, 107, 3585, 1942, 1779, 3586, 1780,
	3584, 1690, 1781, 198, 1484, 1485, 1486, 1487, 1488, 1006,
	1015, 3548, 167, 3446, 2240, 1005, 666, 1128, 198, 1815,
	1009, 999, 3384, 3595, 122, 1011, 2240, 3062, 1725, 1012,
	1010, 1728, 666, 1730, 198, 1113, 1098, 1547, 3589, 917,
	1660, 1661, 1662, 1517, 1747, 168, 1115, 3314, 1676, 1005,
	1013, 1042, 180, 2244, 198, 1039, 1081, 1528, 3447, 3313,
	1772, 198, 1550, 3304, 1669, 2242, 1006, 3385, 3154, 3153,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 666,
	3086, 1688, 905, 1574, 1575, 3138, 1698, 3139, 1699, 903,
	1701, 1703, 1729, 188, 1707, 1709, 1711, 1713, 1715, 1545,
	2655, 2325, 2326, 2327, 1687, 1346, 1940, 1737, 1738, 1346,
	3596, 1005, 1770, 1743, 1744, 1941, 1652, 999, 1002, 1003,
	3085, 962, 1686, 1686, 1771, 996, 1000, 2041, 1883, 1885,
	1886, 1759, 1666, 1801, 1667, 1665, 1679, 169, 174, 171,
	177, 178, 179, 181, 183, 184, 185, 186, 2909, 3075,
	2859, 1818, 1884, 187, 189, 190, 191, 2847, 1822, 2556,
	1824, 1825, 1826, 1827, 847, 848, 849, 1831, 1005, 2555,
	2554, 1816, 1817, 1009, 999, 2200, 1769, 1773, 1011, 1843,
	1733, 1757, 1012, 1010, 2657, 1821, 1756, 1755, 1346, 3559,
	1545, 168, 1828, 1829, 1830, 1758, 1797, 1893, 180, 1368,
	1369, 1371, 1370, 1372, 1373, 1362, 1745, 1739, 1358, 1658,
	1359, 1894, 1374, 1375, 1892, 1736, 1735, 1734, 131, 982,
	981, 1705, 1096, 980, 1360, 1374, 1375, 1357, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1371, 1370, 1372, 1373, 188,
	1343, 1095, 1344, 1345, 1343, 1820, 1344, 1345, 1311, 666,
	666, 3069, 655, 2676, 2667, 2666, 2665, 1346, 655, 2659,
	1577, 2663, 666, 2658, 3549, 2656, 2538, 655, 1842, 3411,
	2661, 198, 3557, 1545, 1554, 2216, 2215, 1841, 3410, 2660,
	1362, 3388, 2649, 169, 174, 171, 177, 178, 179, 181,
	183, 184, 185, 186, 2214, 2213, 3387, 2662, 2664, 187,
	189, 190, 191, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1371, 1370, 1372, 1373, 2212, 2211, 3386, 2387, 3309, 666,
	1555, 1918, 1918, 1343, 3293, 1344, 1345, 1342, 1545, 1389,
	1364, 1365, 1366, 1367, 1368, 1369, 1371, 1370, 1372, 1373,
	666, 3491, 1545, 1889, 1346, 3292, 1389, 1938, 3203, 1346,
	1896, 1939, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 3201, 42, 2482, 3574, 42,
	110, 666, 666, 101, 2041, 3536, 1545, 1545, 2038, 3150,
	1387, 109, 1512, 108, 102, 2002, 1887, 2040, 1511, 1346,
	1510, 1897, 1343, 3083, 1344, 1345, 3068, 1936, 2918, 1916,
	1916, 842, 1919, 1366, 1367, 1368, 1369, 1371, 1370, 1372,
	1373, 1342, 1545, 2034, 2482, 3474, 2482, 3454, 1346, 2482,
	3450, 2049, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1348,
	110, 1998, 2915, 3489, 1545, 3437, 1545, 103, 2063, 1545,
	3404, 109, 1513, 108, 1890, 2850, 85, 1849, 1850, 85,
	2849, 1545, 103, 1866, 2565, 1546, 2070, 3122, 3401, 2046,
	2552, 1346, 1509, 1514, 198, 101, 3317, 1545, 3340, 666,
	2262, 2261, 103, 3487, 1545, 1346, 102, 2098, 2815, 1343,
	2082, 1344, 1345, 1895, 1343, 1845, 1344, 1345, 2092, 2482,
	3305, 3339, 198, 3122, 1545, 666, 1545, 2087, 1811, 2088,
	2037, 1768, 3363, 1545, 3297, 198, 2482, 3120, 3296, 666,
	1922, 1545, 2049, 198, 1760, 198, 1750, 198, 198, 1346,
	2048, 1929, 1931, 2816, 1343, 1746, 1344, 1345, 2240, 1545,
	1996, 1545, 666, 1742, 1946, 1947, 1948, 1949, 3041, 1545,
	2007, 2398, 1545, 2154, 2527, 3361, 1545, 2818, 1960, 1346,
	2046, 2051, 2052, 1343, 1741, 1344, 1345, 1740, 104, 3358,
	1545, 2840, 2839, 2837, 2838, 2813, 1346, 2835, 2836, 3130,
	1346, 1556, 2047, 2108, 2109, 1139, 1346, 105, 104, 2835,
	2834, 2385, 2829, 2830, 2506, 1545, 2319, 2614, 2377, 2814,
	2498, 666, 2201, 1346, 1648, 2595, 1343, 105, 1344, 1345,
	2592, 2091, 2050, 3344, 1545, 2053, 2054, 2528, 2071, 2527,
	1343, 2048, 1344, 1345, 2007, 2588, 2589, 2530, 666, 2570,
	2126, 2241, 2820, 2478, 666, 2482, 2481, 2163, 2164, 2165,
	2166, 2158, 918, 2159, 2160, 2161, 2162, 2498, 103, 2148,
	2505, 2069, 2772, 2149, 2081, 2343, 1545, 2153, 2130, 2169,
	2170, 2171, 2172, 3036, 1343, 1545, 1344, 1345, 2090, 3036,
	3012, 1545, 2506, 2113, 2093, 2229, 1921, 1545, 1346, 2183,
	2152, 666, 2528, 1648, 1647, 1342, 666, 3005, 1545, 2240,
	666, 666, 2319, 2189, 1343, 2111, 1344, 1345, 1589, 1588,
	2828, 2136, 951, 2135, 2134, 2506, 2343, 3038, 3442, 2151,
	2150, 1343, 2831, 1344, 1345, 1343, 1346, 1344, 1345, 3036,
	2802, 1343, 952, 1344, 1345, 3415, 1346, 2482, 198, 2506,
	2319, 2997, 2837, 1984, 2199, 198, 109, 2745, 1343, 2226,
	1344, 1345, 2862, 2137, 198, 198, 2343, 2398, 198, 2374,
	198, 2373, 2240, 1362, 2184, 2223, 198, 2106, 2180, 2173,
	2175, 2176, 3002, 1545, 2198, 1549, 198, 2202, 2072, 2234,
	1921, 2210, 2237, 198, 2238, 2389, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1371, 1370, 1372, 1373, 1867, 1851, 2233,
	1791, 2184, 2254, 2232, 1362, 2236, 1007, 3087, 2258, 198,
	3000, 1545, 2259, 2260, 1008, 1342, 1576, 123, 666, 2255,
	2965, 1545, 990, 1343, 1686, 1344, 1345, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1371, 1370, 1372, 1373, 2817, 1976,
	1965, 1966, 1967, 1968, 1978, 1969, 1970, 1971, 1983, 1979,
	1972, 1973, 1980, 1981, 1982, 1974, 1975, 1977, 3088, 3089,
	3090, 1343, 989, 1344, 1345, 95, 3517, 3457, 2265, 3328,
	1552, 1343, 3294, 1344, 1345, 1721, 3215, 2303, 2304, 3103,
	3100, 1346, 2306, 2336, 1389, 3081, 2049, 2341, 2960, 2959,
	2344, 2307, 2345, 1650, 2182, 95, 2907, 2352, 1889, 2864,
	2950, 2354, 2355, 2356, 2329, 2860, 2331, 2596, 2179, 2174,
	2168, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2293, 2299, 1346, 2337, 2167, 1722, 1723, 1724, 1775,
	2561, 1681, 1677, 1644, 2347, 2335, 124, 2562, 1080, 2911,
	3091, 3329, 1346, 1717, 2197, 2330, 2085, 2378, 2379, 2380,
	2381, 2382, 3569, 2384, 3054, 1847, 1346, 2386, 3048, 3049,
	1346, 2391, 2392, 3567, 2393, 3543, 1545, 2396, 2309, 2397,
	3423, 3349, 3051, 2400, 2856, 2855, 2854, 2404, 2562, 2772,
	2575, 2409, 2410, 2411, 2412, 2048, 2317, 3092, 3093, 3094,
	1718, 1719, 1720, 2294, 2423, 2794, 2426, 2427, 1346, 1890,
	2795, 2792, 3053, 2791, 2429, 2431, 2793, 2346, 2328, 2790,
	3419, 2434, 2435, 2436, 2437, 2438, 1343, 1848, 1344, 1345,
	2821, 1346, 2445, 2446, 2825, 2447, 2948, 1545, 2450, 2452,
	2092, 2824, 2454, 3330, 2097, 198, 2796, 2047, 2515, 2516,
	2453, 1545, 2466, 198, 2451, 1545, 1553, 1918, 2349, 3185,
	2089, 3184, 666, 2762, 2764, 2357, 3042, 2750, 1343, 2749,
	1344, 1345, 2765, 666, 3383, 2826, 3029, 3194, 3196, 3032,
	2822, 1346, 2372, 922, 3028, 2823, 2759, 1343, 1790, 1344,
	1345, 923, 2430, 1545, 2465, 894, 1362, 198, 2332, 1558,
	1346, 1343, 198, 1344, 1345, 1343, 2833, 1344, 1345, 3183,
	2383, 2545, 2566, 2926, 1346, 2413, 1545, 1944, 676, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1371, 1370, 1372, 1373,
	1046, 1945, 1310, 1346, 1045, 1916, 101, 2467, 2502, 2561,
	2468, 101, 2470, 1343, 2602, 1344, 1345, 102, 103, 1346,
	2643, 132, 102, 2483, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1371, 1370, 1372, 1373, 1557, 1343, 110, 1344, 1345,
	666, 3034, 1346, 2521, 2108, 2109, 198, 103, 109, 3581,
	108, 2852, 2492, 198, 2479, 1545, 2748, 2297, 1346, 103,
	3496, 42, 3400, 1520, 2747, 2455, 3324, 666, 2405, 1545,
	2520, 2587, 1346, 2522, 666, 2475, 2832, 2340, 2519, 2094,
	2286, 2480, 2285, 666, 2548, 2550, 1343, 2339, 1344, 1345,
	2495, 1514, 3371, 2284, 2338, 2283, 1346, 928, 2541, 1389,
	934, 934, 2525, 2282, 3550, 1343, 3014, 1344, 1345, 2323,
	2611, 108, 198, 198, 198, 198, 198, 2529, 1346, 1343,
	2532, 1344, 1345, 2189, 1346, 930, 931, 3399, 2539, 3370,
	2542, 1543, 1539, 3352, 109, 1346, 198, 198, 1343, 3202,
	1344, 1345, 3335, 1346, 3200, 3199, 1540, 2564, 2553, 3192,
	2609, 1346, 2567, 2568, 1343, 1346, 1344, 1345, 3101, 3191,
	3033, 1346, 198, 3031, 2865, 1346, 2563, 3173, 2224, 1664,
	929, 1645, 1646, 1542, 1346, 1541, 2571, 1343, 2572, 1344,
	1345, 3301, 1346, 666, 3022, 2576, 2577, 2578, 2608, 2498,
	3571, 3570, 123, 1343, 2478, 1344, 1345, 1669, 2678, 2679,
	2680, 2681, 2682, 3105, 110, 110, 2690, 1343, 3056, 1344,
	1345, 3571, 2597, 2598, 2375, 109, 109, 2687, 108, 3007,
	2083, 1570, 1562, 3570, 2607, 2653, 3389, 3003, 114, 115,
	666, 1343, 3067, 1344, 1345, 2975, 920, 1864, 1862, 2971,
	10, 9, 3, 2668, 1346, 2957, 97, 2632, 1863, 2956,
	1, 8, 1093, 1343, 2683, 1344, 1345, 1802, 2953, 1343,
	1313, 1344, 1345, 1312, 2652, 3071, 2635, 2557, 666, 2651,
	1343, 2641, 1344, 1345, 2642, 3506, 666, 626, 1343, 2073,
	1344, 1345, 1518, 3544, 1346, 3502, 1343, 3503, 1344, 1345,
	1343, 1346, 1344, 1345, 1761, 2669, 1343, 1751, 1344, 1345,
	1343, 3133, 1344, 1345, 2671, 2008, 3325, 666, 2868, 1343,
	2724, 1344, 1345, 2230, 2729, 3099, 2187, 1343, 998, 1344,
	1345, 198, 157, 2146, 2147, 666, 2726, 3470, 2449, 2511,
	2514, 2515, 2516, 2512, 2670, 2513, 2517, 118, 955, 666,
	117, 1001, 2692, 1389, 2781, 1112, 666, 666, 1389, 198,
	198, 198, 198, 198, 2037, 2225, 2037, 2698, 3123, 2546,
	2155, 198, 2799, 1595, 2769, 1593, 1594, 198, 2448, 198,
	1592, 1597, 198, 198, 198, 2444, 1596, 2729, 2934, 1343,
	2376, 1344, 1345, 2784, 2976, 1346, 1855, 2778, 2725, 2801,
	2727, 662, 2752, 2700, 2775, 2702, 2518, 2753, 656, 2775,
	195, 1584, 1563, 2728, 2708, 2709, 2710, 2711, 2712, 2989,
	1040, 2713, 2714, 2715, 2716, 616, 2841, 2740, 198, 1343,
	2263, 1344, 1345, 622, 2126, 1394, 1343, 2751, 1344, 1345,
	1846, 666, 2746, 2533, 1389, 949, 2744, 2766, 2767, 666,
	941, 2084, 2754, 2888, 198, 2803, 1543, 1539, 2804, 909,
	911, 2469, 2126, 2126, 2126, 2126, 2126, 948, 198, 2785,
	2797, 1540, 2788, 2786, 2787, 104, 2789, 3302, 2780, 2443,
	910, 3026, 2126, 1801, 2758, 2126, 2783, 198, 2805, 1346,
	198, 2741, 2742, 2743, 105, 2867, 1536, 1537, 1542, 2928,
	1541, 2811, 1346, 2760, 2844, 2485, 2763, 2842, 2843, 2756,
	1346, 3382, 3193, 3455, 1346, 2543, 1559, 2996, 2348, 2945,
	2946, 2947, 1933, 2949, 2951, 1346, 2896, 1384, 2845, 2846,
	1343, 1346, 1344, 1345, 2123, 3168, 1882, 2958, 685, 2895,
	684, 2189, 2962, 2963, 2964, 2966, 2967, 2968, 2969, 2887,
	2902, 2970, 2866, 2972, 2973, 2974, 682, 1346, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2471, 2499,
	666, 1349, 2919, 2442, 832, 2922, 2994, 2921, 2459, 2998,
	1571, 2999, 3001, 2510, 3004, 3006, 2441, 3008, 3009, 3010,
	3011, 2930, 2924, 2925, 2440, 3017, 2929, 2939, 2439, 198,
	2936, 2937, 2508, 2938, 2507, 2295, 2940, 1346, 2942, 2428,
	2944, 2131, 2991, 3050, 3046, 2422, 3498, 2125, 2121, 2995,
	2477, 783, 1346, 782, 1343, 694, 1344, 1345, 686, 678,
	3039, 3040, 781, 780, 3044, 3064, 2894, 1343, 3482, 1344,
	1345, 2421, 1346, 2617, 2908, 1343, 2619, 1344, 1345, 1343,
	2544, 1344, 1345, 1346, 2904, 198, 1327, 1535, 672, 1346,
	1343, 969, 1344, 1345, 1346, 2931, 1343, 3406, 1344, 1345,
	1346, 2322, 2954, 3015, 3016, 1534, 1347, 3020, 1346, 1963,
	1964, 3413, 3018, 2876, 198, 3117, 3023, 2857, 3030, 2593,
	2217, 2420, 1343, 70, 1344, 1345, 46, 1346, 3377, 3443,
	3035, 779, 776, 1346, 198, 1402, 2419, 198, 198, 198,
	3045, 3170, 3171, 3052, 3172, 2720, 2721, 666, 666, 3055,
	1346, 3106, 3107, 3426, 3427, 3057, 2418, 1346, 775, 3059,
	3060, 3058, 3428, 3065, 1991, 3066, 1346, 2417, 2896, 1323,
	3121, 1346, 1343, 2416, 1344, 1345, 1346, 1320, 2415, 3519,
	1857, 2895, 3127, 3128, 2414, 96, 37, 1343, 2126, 1344,
	1345, 36, 2408, 35, 666, 666, 666, 666, 1346, 3082,
	34, 3084, 33, 27, 26, 25, 1346, 1343, 24, 1344,
	1345, 2407, 3140, 1346, 23, 3144, 20, 2406, 1343, 30,
	1344, 1345, 3076, 3077, 1343, 22, 1344, 1345, 21, 1343,
	19, 1344, 1345, 18, 2403, 1343, 2879, 1344, 1345, 3539,
	3580, 2402, 3155, 1343, 1346, 1344, 1345, 126, 55, 52,
	2401, 50, 134, 133, 3129, 2399, 53, 3159, 1346, 49,
	2395, 3149, 1343, 1083, 1344, 1345, 47, 32, 1343, 3167,
	1344, 1345, 31, 17, 16, 3110, 15, 3174, 14, 3114,
	3115, 3116, 2394, 13, 12, 1343, 11, 1344, 1345, 7,
	2390, 6, 1343, 40, 1344, 1345, 39, 2388, 29, 38,
	198, 1343, 3145, 1344, 1345, 28, 1343, 4, 1344, 1345,
	2580, 1343, 2219, 1344, 1345, 0, 0, 0, 0, 1389,
	0, 3166, 3188, 0, 666, 0, 666, 0, 2353, 0,
	0, 0, 0, 1343, 0, 1344, 1345, 0, 0, 0,
	1918, 1343, 2342, 1344, 1345, 0, 0, 0, 1343, 0,
	1344, 1345, 0, 0, 0, 0, 0, 0, 1561, 0,
	0, 0, 0, 0, 2778, 1521, 3189, 3213, 2778, 3211,
	2775, 3198, 0, 3209, 3197, 0, 0, 3205, 3207, 1343,
	843, 1344, 1345, 87, 0, 0, 666, 0, 0, 0,
	3303, 0, 0, 1343, 0, 1344, 1345, 1651, 3316, 198,
	0, 0, 666, 3157, 0, 3221, 0, 3323, 0, 0,
	0, 0, 0, 3218, 3219, 666, 0, 0, 1916, 0,
	3217, 0, 0, 0, 605, 0, 42, 3333, 3334, 0,
	3336, 0, 3337, 3338, 0, 3307, 3300, 3341, 3342, 3343,
	3315, 3345, 3348, 3299, 0, 897, 3298, 0, 0, 1918,
	3320, 0, 3319, 3327, 0, 0, 0, 3357, 3359, 3360,
	3362, 3364, 3365, 3367, 0, 666, 907, 0, 87, 666,
	666, 0, 0, 0, 0, 0, 3346, 3347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 907, 963, 0,
	3351, 0, 0, 2511, 2514, 2515, 2516, 2512, 666, 2513,
	2517, 3397, 3393, 3048, 3049, 968, 0, 3353, 3310, 3311,
	3312, 3356, 0, 0, 3375, 3372, 3373, 0, 3374, 0,
	3392, 0, 0, 0, 0, 0, 0, 1916, 1812, 3350,
	0, 0, 0, 0, 2778, 3390, 0, 0, 0, 0,
	3396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 3398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 198, 0, 0, 3417, 0, 0, 0, 0,
	0, 0, 0, 0, 3381, 0, 0, 3422, 0, 0,
	0, 0, 3405, 0, 3409, 0, 0, 3412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3438, 0, 0,
	0, 0, 0, 3439, 3440, 0, 0, 3414, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 0, 666, 3451, 3432, 0, 0, 3433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3441, 0, 0, 0, 666, 666,
	0, 3476, 3477, 3453, 0, 0, 0, 3448, 0, 3458,
	42, 0, 0, 3483, 0, 3486, 3488, 3490, 3484, 3469,
	666, 3461, 3466, 2775, 3463, 3462, 3460, 3465, 3464, 0,
	0, 0, 0, 3456, 198, 666, 3327, 3471, 0, 0,
	3518, 0, 0, 0, 0, 3494, 0, 0, 0, 0,
	0, 0, 0, 3515, 3505, 3510, 3497, 0, 0, 0,
	0, 0, 0, 0, 3483, 0, 0, 3524, 0, 3484,
	3522, 1877, 1878, 1879, 1880, 0, 3421, 0, 666, 3535,
	0, 0, 0, 0, 3431, 0, 42, 0, 0, 0,
	3533, 0, 0, 0, 3538, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 3551, 0, 0, 0, 0, 0,
	0, 3556, 3558, 3560, 0, 3553, 1397, 666, 0, 666,
	1924, 1925, 0, 1918, 0, 1927, 0, 934, 934, 1932,
	3564, 3568, 3566, 1937, 3562, 3561, 0, 0, 0, 0,
	3483, 0, 3579, 3576, 0, 3484, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 3590, 3588, 3591, 3592,
	1985, 1986, 1987, 1988, 1989, 1990, 1992, 3582, 1997, 0,
	1999, 2000, 2001, 0, 2003, 2004, 2005, 1918, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 1916, 2035, 3565, 2042, 2043, 934, 3598, 934, 934,
	934, 934, 934, 3599, 3600, 3347, 0, 0, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 3537, 2064, 2065, 2066,
	2067, 2068, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1916, 0, 3597, 0, 0,
	0, 0, 0, 0, 934, 0, 0, 0, 1084, 0,
	1090, 0, 0, 1092, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 1148, 1148,
	0, 0, 0, 0, 1319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2185, 0, 0, 907, 1386, 1391, 1392,
	1600, 1395, 0, 1396, 1398, 1399, 1400, 0, 1403, 1404,
	1406, 1406, 0, 1406, 1410, 1410, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 0, 0, 0, 1613, 1477, 0, 1479, 1480, 1481,
	1482, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 1410, 1410, 1410, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 1626, 1629, 1630, 1631,
	1632, 1633, 1634, 0, 1635, 1636, 1638, 1639, 1637, 1640,
	1641, 1614, 1615, 1616, 1617, 1598, 1599, 1627, 0, 1601,
	0, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	0, 0, 1611, 1618, 1619, 1620, 1621, 0, 1622, 1623,
	1624, 1625, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 907, 0, 0, 0, 907, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	86, 44, 45, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 48, 77, 78, 0, 75, 79,
	0, 0, 0, 0, 2351, 0, 132, 76, 154, 0,
	0, 0, 0, 0, 0, 2358, 2359, 2360, 2361, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 95, 0,
	165, 0, 0, 0, 0, 0, 153, 0, 0, 1628,
	1402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 173, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 142, 164,
	163, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 54, 57, 56,
	59, 0, 74, 0, 0, 83, 80, 0, 0, 0,
	158, 139, 161, 146, 138, 0, 159, 160, 0, 0,
	60, 0, 0, 176, 0, 0, 0, 0, 0, 62,
	91, 90, 182, 147, 72, 73, 58, 0, 0, 827,
	0, 0, 81, 82, 0, 0, 0, 150, 148, 143,
	144, 145, 149, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 65, 0, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1148, 1148, 0,
	0, 193, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 87, 1668, 0, 87, 0, 167, 0, 0, 0,
	0, 665, 0, 0, 665, 132, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2648, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 2672, 2673, 89, 0, 2675,
	1612, 0, 2677, 0, 172, 0, 0, 173, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2684, 2685, 2686, 0, 1672, 1673, 164, 163,
	192, 0, 0, 0, 2691, 0, 0, 2693, 2694, 2695,
	0, 0, 0, 2696, 2697, 0, 0, 2011, 2699, 0,
	0, 2701, 0, 0, 2703, 2704, 2705, 2706, 784, 94,
	0, 0, 2707, 2011, 2011, 2011, 2011, 2011, 0, 0,
	0, 0, 155, 0, 0, 156, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 2730, 2731,
	2732, 2733, 2734, 2735, 0, 0, 0, 2736, 2737, 0,
	2738, 0, 2739, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 158,
	1674, 161, 0, 1671, 0, 159, 160, 0, 0, 0,
	0, 0, 176, 0, 1600, 0, 0, 2770, 2110, 0,
	0, 182, 0, 188, 0, 0, 2114, 0, 2117, 0,
	0, 1870, 0, 0, 0, 71, 0, 0, 0, 61,
	0, 0, 2800, 0, 0, 2124, 0, 0, 0, 0,
	959, 0, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 174, 171,
	177, 178, 179, 181, 183, 184, 185, 186, 0, 0,
	0, 0, 0, 187, 189, 190, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 2863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 0, 0, 0, 0,
	1626, 1629, 1630, 1631, 1632, 1633, 1634, 0, 1635, 1636,
	1638, 1639, 1637, 1640, 1641, 1614, 1615, 1616, 1617, 1598,
	1599, 1627, 0, 1601, 0, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 0, 2952, 1611, 1618, 1619, 1620,
	1621, 0, 1622, 1623, 1624, 1625, 0, 0, 0, 2961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 1870, 0, 0, 0, 0, 0, 0, 2274, 0,
	0, 0, 0, 0, 0, 0, 0, 2291, 2292, 0,
	0, 2296, 0, 0, 0, 0, 0, 0, 0, 2300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2302,
	0, 0, 0, 0, 0, 0, 2305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 2308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 665, 1306, 665, 665, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 0, 2324, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 1388, 0, 0, 3102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3126, 0, 0, 0, 169, 174, 171, 177,
	178, 179, 181, 183, 184, 185, 186, 0, 0, 0,
	0, 0, 187, 189, 190, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3146, 0, 3147,
	0, 0, 3148, 0, 0, 3151, 3152, 0, 0, 0,
	0, 0, 0, 0, 3156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3175, 2432, 1388, 3176,
	0, 3177, 3178, 0, 3179, 0, 3180, 0, 0, 0,
	0, 3181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 3206, 0, 0, 0,
	0, 0, 0, 0, 0, 907, 0, 3214, 0, 0,
	3216, 0, 0, 0, 1150, 0, 1150, 1150, 0, 665,
	665, 0, 3220, 0, 0, 2524, 2503, 2504, 0, 0,
	0, 0, 0, 0, 0, 2124, 1318, 0, 907, 2523,
	3295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1654, 0, 0, 0, 0, 0, 0, 0, 2573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 1388, 1691, 0,
	0, 1694, 1695, 665, 665, 0, 665, 0, 665, 665,
	0, 665, 665, 665, 665, 665, 665, 0, 0, 0,
	3380, 0, 2600, 0, 1388, 1726, 1727, 1388, 665, 1388,
	0, 1732, 0, 0, 0, 2622, 2623, 2624, 2625, 2626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	2636, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 665,
	0, 0, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1524, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3420, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3434, 1585, 0,
	3435, 0, 3436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1697, 0, 1697, 0, 1697, 1697, 2124,
	1706, 1697, 1697, 1697, 1697, 1697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 2779, 0, 87, 0, 3516, 2124, 2124, 2124,
	2124, 2124, 0, 0, 0, 0, 665, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2124, 0, 665,
	2124, 0, 1774, 0, 0, 0, 3530, 0, 3531, 0,
	3532, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 845, 0, 2041, 0, 0, 846, 0, 0,
	0, 2853, 0, 0, 0, 0, 0, 1917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 2891, 0, 0,
	0, 0, 0, 0, 2885, 1150, 1388, 0, 0, 0,
	0, 2903, 0, 0, 2893, 1926, 3577, 665, 3578, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	2920, 0, 0, 2923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 665,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 0, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3019, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 1150, 1150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 1858, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 2124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3063, 3080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1912, 0, 3095, 0, 0,
	3096, 3097, 3098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1928, 0, 665, 0,
	0, 0, 0, 0, 0, 2207, 2208, 2209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 1961, 1962, 0,
	0, 665, 1689, 0, 0, 1689, 0, 1689, 0, 0,
	0, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 606, 1150, 665, 0,
	0, 0, 0, 665, 0, 0, 0, 665, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2086, 0, 0, 0, 935,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 0, 3182, 0, 3186, 3187, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2779,
	0, 87, 0, 2779, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 845, 0, 0, 0, 0, 846, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 1917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	3308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 665, 959, 0, 0, 0, 0, 0,
	967, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 1912, 0, 0, 0, 1912, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 3407, 0, 0,
	665, 0, 0, 0, 2311, 3418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3452, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 665, 0, 0,
	95, 0, 0, 845, 0, 0, 0, 833, 846, 847,
	848, 849, 834, 0, 0, 835, 836, 0, 837, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 665, 842, 850, 851, 1689, 1689, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 2610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 606, 0, 0, 606, 606, 0, 0, 2897,
	2898, 0, 0, 0, 0, 0, 0, 3534, 0, 0,
	0, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 0, 0, 0, 606, 0, 2472, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 2487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2569, 0, 0, 0,
	0, 2900, 2901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	2594, 0, 665, 0, 0, 0, 0, 0, 0, 2599,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	1388, 0, 0, 665, 665, 1388, 1390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 803, 0, 800, 801, 0, 0, 0, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 2848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 0, 0, 665, 1912,
	0, 1388, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2718, 1390, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 1390, 0, 1390, 606, 0,
	0, 0, 0, 1697, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 2755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 1150, 0, 0, 0, 0,
	0, 0, 2782, 1697, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1833, 606, 606, 606,
	606, 606, 606, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3070, 0, 0, 0, 95, 0, 0, 845, 0, 0,
	0, 833, 846, 847, 848, 849, 834, 959, 0, 835,
	836, 0, 837, 0, 0, 2096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 842, 850, 851, 0,
	0, 0, 0, 0, 665, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2897, 2898, 0, 0, 0, 0, 0,
	0, 665, 665, 665, 665, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 2899, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 0, 0, 0,
	0, 665, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 935, 0, 0,
	0, 1390, 0, 0, 0, 2900, 2901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 2096, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 1800, 935, 935, 935,
	935, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	3134, 3135, 3136, 3137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 665, 665, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 0, 0, 1800, 606, 0,
	606, 0, 606, 2133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3210, 0, 3212, 0, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 1150, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3368, 0, 0, 0, 3368, 3368, 665, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 0,
	606, 0, 665, 0, 0, 0, 0, 0, 0, 606,
	606, 0, 0, 606, 2096, 2298, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 665, 0, 0, 0,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1390,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1150, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 3445, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2990, 0, 3500, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 0, 2579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 606, 606,
	606, 606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 606, 0, 0, 0, 0, 0, 3239, 3241,
	3240, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1390, 0,
	0, 0, 0, 1390, 606, 606, 606, 606, 606, 0,
	0, 0, 0, 0, 0, 0, 2798, 0, 0, 0,
	0, 0, 1748, 0, 606, 0, 0, 606, 2806, 1800,
	0, 0, 3245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3253, 3254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 799, 0, 712, 803,
	714, 800, 801, 0, 710, 713, 802, 0, 0, 0,
	0, 0, 606, 0, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 732, 3238, 3242, 3243, 3244, 3255, 3256,
	3257, 3265, 3267, 764, 3266, 3268, 3269, 3270, 3273, 3274,
	3275, 3276, 3271, 3272, 3277, 3222, 3226, 3223, 3224, 3225,
	3237, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235,
	3236, 3278, 3279, 3280, 3281, 3282, 3283, 3248, 3252, 3251,
	3249, 3250, 3246, 3247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 805, 0,
	0, 809, 0, 0, 0, 811, 810, 0, 812, 778,
	777, 0, 0, 806, 807, 0, 808, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 606, 606, 606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 1284, 1269,
	509, 0, 1212, 1287, 1181, 1200, 1297, 1203, 1206, 1248,
	1160, 1226, 409, 1197, 1153, 1185, 1155, 1192, 1156, 1183,
	1214, 267, 1180, 1271, 1230, 1286, 360, 264, 1162, 1186,
	423, 1202, 205, 1250, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 1293, 364,
	1236, 0, 488, 394, 0, 0, 0, 1216, 1275, 1224,
	1262, 1211, 1249, 1170, 1235, 1288, 1198, 1245, 1289, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 1748, 0,
	3472, 655, 0, 0, 0, 0, 3473, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 606, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 1194, 1242,
	1283, 1195, 1244, 262, 317, 269, 261, 514, 1294, 1274,
	1159, 1223, 1282, 0, 0, 228, 1285, 1218, 0, 1247,
	0, 1300, 1154, 1238, 0, 1157, 1161, 1296, 1278, 1189,
	272, 0, 0, 0, 0, 0, 0, 0, 1215, 1225,
	1259, 1263, 1209, 0, 0, 0, 0, 1390, 0, 0,
	1187, 0, 1234, 0, 0, 0, 1166, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 1169, 0, 1188, 1260, 1748,
	1152, 294, 1163, 395, 254, 0, 445, 1267, 1277, 1210,
	556, 1281, 1208, 1207, 1254, 1167, 1273, 1201, 359, 1165,
	326, 200, 224, 0, 1199, 405, 453, 465, 1272, 1184,
	1193, 252, 1191, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 1233, 1252, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 1164, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	1179, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 1268, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 1257, 1299, 418, 464, 239,
	536, 487, 1302, 1303, 1304, 1305, 1174, 1178, 1172, 1239,
	1173, 1228, 1229, 1175, 1290, 1291, 1292, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 1261, 1168, 0, 1176,
	1177, 1270, 1279, 1280, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 1232, 199, 220, 362, 1295, 446,
	285, 579, 546, 541, 206, 222, 1171, 259, 1182, 1190,
	0, 1196, 1204, 1205, 1217, 1219, 1220, 1221, 1222, 1240,
	1241, 1243, 1251, 1253, 1256, 1258, 1265, 1276, 1298, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 1231, 1301, 1237,
	375, 278, 301, 316, 1246, 545, 493, 226, 458, 287,
	250, 1264, 1266, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 1227, 1255, 370,
	510, 511, 312, 390, 0, 0, 0, 1284, 1269, 509,
	0, 1212, 1287, 1181, 1200, 1297, 1203, 1206, 1248, 1160,
	1226, 409, 1197, 1153, 1185, 1155, 1192, 1156, 1183, 1214,
	267, 1180, 1271, 1230, 1286, 360, 264, 1162, 1186, 423,
	1202, 205, 1250, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 1293, 364, 1236,
	0, 488, 394, 0, 0, 0, 1216, 1275, 1224, 1262,
	1211, 1249, 1170, 1235, 1288, 1198, 1245, 1289, 319, 247,
	321, 204, 406, 489, 283, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 1194, 1242, 1283,
	1195, 1244, 262, 317, 269, 261, 514, 1294, 1274, 1159,
	1223, 1282, 0, 0, 228, 1285, 1218, 0, 1247, 0,
	1300, 1154, 1238, 0, 1157, 1161, 1296, 1278, 1189, 272,
	0, 0, 0, 0, 0, 0, 0, 1215, 1225, 1259,
	1263, 1209, 0, 0, 0, 0, 0, 2807, 0, 1187,
	0, 1234, 0, 0, 0, 1166, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 1169, 0, 1188, 1260, 0, 1152,
	294, 1163, 395, 254, 0, 445, 1267, 1277, 1210, 556,
	1281, 1208, 1207, 1254, 1167, 1273, 1201, 359, 1165, 326,
	200, 224, 0, 1199, 405, 453, 465, 1272, 1184, 1193,
	252, 1191, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 1233, 1252, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 523, 524, 253,
	581, 227, 550, 219, 1164, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 1179,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 1268, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 1257, 1299, 418, 464, 239, 536,
	487, 1302, 1303, 1304, 1305, 1174, 1178, 1172, 1239, 1173,
	1228, 1229, 1175, 1290, 1291, 1292, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 1261, 1168, 0, 1176, 1177,
	1270, 1279, 1280, 601, 378, 477, 533, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 512, 308,
	215, 216, 217, 505, 506, 507, 508, 547, 548, 552,
	454, 455, 456, 457, 289, 542, 305, 460, 459, 327,
	328, 373, 442, 1232, 199, 220, 362, 1295, 446, 285,
	579, 546, 541, 206, 222, 1171, 259, 1182, 1190, 0,
	1196, 1204, 1205, 1217, 1219, 1220, 1221, 1222, 1240, 1241,
	1243, 1251, 1253, 1256, 1258, 1265, 1276, 1298, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	297, 298, 437, 438, 310, 311, 576, 577, 296, 530,
	560, 528, 575, 554, 431, 372, 1231, 1301, 1237, 375,
	278, 301, 316, 1246, 545, 493, 226, 458, 287, 250,
	1264, 1266, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 1227, 1255, 370, 510,
	511, 312, 390, 0, 0, 0, 1284, 1269, 509, 0,
	1212, 1287, 1181, 1200, 1297, 1203, 1206, 1248, 1160, 1226,
	409, 1197, 1153, 1185, 1155, 1192, 1156, 1183, 1214, 267,
	1180, 1271, 1230, 1286, 360, 264, 1162, 1186, 423, 1202,
	205, 1250, 478, 251, 371, 368, 517, 279, 270, 266,
	249, 313, 379, 421, 499, 415, 1293, 364, 1236, 0,
	488, 394, 0, 0, 0, 1216, 1275, 1224, 1262, 1211,
	1249, 1170, 1235, 1288, 1198, 1245, 1289, 319, 247, 321,
	204, 406, 489, 283, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 1194, 1242, 1283, 1195,
	1244, 262, 317, 269, 261, 514, 1294, 1274, 1159, 1223,
	1282, 0, 0, 228, 1285, 1218, 0, 1247, 0, 1300,
	1154, 1238, 0, 1157, 1161, 1296, 1278, 1189, 272, 0,
	0, 0, 0, 0, 0, 0, 1215, 1225, 1259, 1263,
	1209, 0, 0, 0, 0, 0, 2768, 0, 1187, 0,
	1234, 0, 0, 0, 1166, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1213, 0,
	0, 0, 0, 1169, 0, 1188, 1260, 0, 1152, 294,
	1163, 395, 254, 0, 445, 1267, 1277, 1210, 556, 1281,
	1208, 1207, 1254, 1167, 1273, 1201, 359, 1165, 326, 200,
	224, 0, 1199, 405, 453, 465, 1272, 1184, 1193, 252,
	1191, 463, 419, 534, 232, 281, 450, 425, 461, 433,
	284, 1233, 1252, 462, 366, 519, 443, 531, 557, 558,
	260, 399, 543, 503, 551, 578, 225, 257, 413, 496,
	537, 485, 391, 515, 516, 325, 484, 292, 203, 363,
	563, 223, 471, 365, 241, 230, 521, 540, 286, 448,
	573, 212, 498, 529, 238, 475, 0, 0, 580, 246,
	495, 214, 526, 494, 387, 322, 323, 213, 0, 449,
	265, 290, 0, 0, 255, 408, 523, 524, 253, 581,
	227, 550, 219, 1164, 549, 401, 518, 527, 388, 377,
	218, 525, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 207, 538, 0,
	208, 0, 490, 539, 582, 233, 234, 236, 1179, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 1268, 513, 532, 544, 555, 561, 562, 564, 565,
	566, 567, 568, 574, 572, 569, 570, 571, 400, 307,
	486, 329, 367, 1257, 1299, 418, 464, 239, 536, 487,
	1302, 1303, 1304, 1305, 1174, 1178, 1172, 1239, 1173, 1228,
	1229, 1175, 1290, 1291, 1292, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 1261, 1168, 0, 1176, 1177, 1270,
	1279, 1280, 601, 378, 477, 533, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 512, 308, 215,
	216, 217, 505, 506, 507, 508, 547, 548, 552, 454,
	455, 456, 457, 289, 542, 305, 460, 459, 327, 328,
	373, 442, 1232, 199, 220, 362, 1295, 446, 285, 579,
	546, 541, 206, 222, 1171, 259, 1182, 1190, 0, 1196,
	1204, 1205, 1217, 1219, 1220, 1221, 1222, 1240, 1241, 1243,
	1251, 1253, 1256, 1258, 1265, 1276, 1298, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 520, 522, 535, 553, 559, 472, 297,
	298, 437, 438, 310, 311, 576, 577, 296, 530, 560,
	528, 575, 554, 431, 372, 1231, 1301, 1237, 375, 278,
	301, 316, 1246, 545, 493, 226, 458, 287, 250, 1264,
	1266, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 451, 240, 476, 500, 501,
	502, 504, 389, 263, 426, 1227, 1255, 370, 510, 511,
	312, 390, 0, 0, 0, 1284, 1269, 509, 0, 1212,
	1287, 1181, 1200, 1297, 1203, 1206, 1248, 1160, 1226, 409,
	1197, 1153, 1185, 1155, 1192, 1156, 1183, 1214, 267, 1180,
	1271, 1230, 1286, 360, 264, 1162, 1186, 423, 1202, 205,
	1250, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 1293, 364, 1236, 0, 488,
	394, 0, 0, 0, 1216, 1275, 1224, 1262, 1211, 1249,
	1170, 1235, 1288, 1198, 1245, 1289, 319, 247, 321, 204,
	406, 489, 283, 0, 0, 0, 0, 0, 829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 1194, 1242, 1283, 1195, 1244,
	262, 317, 269, 261, 514, 1294, 1274, 1159, 1223, 1282,
	0, 0, 228, 1285, 1218, 0, 1247, 0, 1300, 1154,
	1238, 0, 1157, 1161, 1296, 1278, 1189, 272, 0, 0,
	0, 0, 0, 0, 0, 1215, 1225, 1259, 1263, 1209,
	0, 0, 0, 0, 0, 2112, 0, 1187, 0, 1234,
	0, 0, 0, 1166, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 1169, 0, 1188, 1260, 0, 1152, 294, 1163,
	395, 254, 0, 445, 1267, 1277, 1210, 556, 1281, 1208,
	1207, 1254, 1167, 1273, 1201, 359, 1165, 326, 200, 224,
	0, 1199, 405, 453, 465, 1272, 1184, 1193, 252, 1191,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	1233, 1252, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 1164, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 1179, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	1268, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 1257, 1299, 418, 464, 239, 536, 487, 1302,
	1303, 1304, 1305, 1174, 1178, 1172, 1239, 1173, 1228, 1229,
	1175, 1290, 1291, 1292, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 1261, 1168, 0, 1176, 1177, 1270, 1279,
	1280, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 1232, 199, 220, 362, 1295, 446, 285, 579, 546,
	541, 206, 222, 1171, 259, 1182, 1190, 0, 1196, 1204,
	1205, 1217, 1219, 1220, 1221, 1222, 1240, 1241, 1243, 1251,
	1253, 1256, 1258, 1265, 1276, 1298, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 1231, 1301, 1237, 375, 278, 301,
	316, 1246, 545, 493, 226, 458, 287, 250, 1264, 1266,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 1227, 1255, 370, 510, 511, 312,
	390, 0, 0, 0, 1284, 1269, 509, 0, 1212, 1287,
	1181, 1200, 1297, 1203, 1206, 1248, 1160, 1226, 409, 1197,
	1153, 1185, 1155, 1192, 1156, 1183, 1214, 267, 1180, 1271,
	1230, 1286, 360, 264, 1162, 1186, 423, 1202, 205, 1250,
	478, 251, 371, 368, 517, 279, 270, 266, 249, 313,
	379, 421, 499, 415, 1293, 364, 1236, 0, 488, 394,
	0, 0, 0, 1216, 1275, 1224, 1262, 1211, 1249, 1170,
	1235, 1288, 1198, 1245, 1289, 319, 247, 321, 204, 406,
	489, 283, 0, 95, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 1194, 1242, 1283, 1195, 1244, 262,
	317, 269, 261, 514, 1294, 1274, 1159, 1223, 1282, 0,
	0, 228, 1285, 1218, 0, 1247, 0, 1300, 1154, 1238,
	0, 1157, 1161, 1296, 1278, 1189, 272, 0, 0, 0,
	0, 0, 0, 0, 1215, 1225, 1259, 1263, 1209, 0,
	0, 0, 0, 0, 0, 0, 1187, 0, 1234, 0,
	0, 0, 1166, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 0, 0, 0,
	0, 1169, 0, 1188, 1260, 0, 1152, 294, 1163, 395,
	254, 0, 445, 1267, 1277, 1210, 556, 1281, 1208, 1207,
	1254, 1167, 1273, 1201, 359, 1165, 326, 200, 224, 0,
	1199, 405, 453, 465, 1272, 1184, 1193, 252, 1191, 463,
	419, 534, 232, 281, 450, 425, 461, 433, 284, 1233,
	1252, 462, 366, 519, 443, 531, 557, 558, 260, 399,
	543, 503, 551, 578, 225, 257, 413, 496, 537, 485,
	391, 515, 516, 325, 484, 292, 203, 363, 563, 223,
	471, 365, 241, 230, 521, 540, 286, 448, 573, 212,
	498, 529, 238, 475, 0, 0, 580, 246, 495, 214,
	526, 494, 387, 322, 323, 213, 0, 449, 265, 290,
	0, 0, 255, 408, 523, 524, 253, 581, 227, 550,
	219, 1164, 549, 401, 518, 527, 388, 377, 218, 525,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 207, 538, 0, 208, 0,
	490, 539, 582, 233, 234, 236, 1179, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 1268,
	513, 532, 544, 555, 561, 562, 564, 565, 566, 567,
	568, 574, 572, 569, 570, 571, 400, 307, 486, 329,
	367, 1257, 1299, 418, 464, 239, 536, 487, 1302, 1303,
	1304, 1305, 1174, 1178, 1172, 1239, 1173, 1228, 1229, 1175,
	1290, 1291, 1292, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 1261, 1168, 0, 1176, 1177, 1270, 1279, 1280,
	601, 378, 477, 533, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 512, 308, 215, 216, 217,
	505, 506, 507, 508, 547, 548, 552, 454, 455, 456,
	457, 289, 542, 305, 460, 459, 327, 328, 373, 442,
	1232, 199, 220, 362, 1295, 446, 285, 579, 546, 541,
	206, 222, 1171, 259, 1182, 1190, 0, 1196, 1204, 1205,
	1217, 1219, 1220, 1221, 1222, 1240, 1241, 1243, 1251, 1253,
	1256, 1258, 1265, 1276, 1298, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 520, 522, 535, 553, 559, 472, 297, 298, 437,
	438, 310, 311, 576, 577, 296, 530, 560, 528, 575,
	554, 431, 372, 1231, 1301, 1237, 375, 278, 301, 316,
	1246, 545, 493, 226, 458, 287, 250, 1264, 1266, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 451, 240, 476, 500, 501, 502, 504,
	389, 263, 426, 1227, 1255, 370, 510, 511, 312, 390,
	0, 0, 0, 1284, 1269, 509, 0, 1212, 1287, 1181,
	1200, 1297, 1203, 1206, 1248, 1160, 1226, 409, 1197, 1153,
	1185, 1155, 1192, 1156, 1183, 1214, 267, 1180, 1271, 1230,
	1286, 360, 264, 1162, 1186, 423, 1202, 205, 1250, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 1293, 364, 1236, 0, 488, 394, 0,
	0, 0, 1216, 1275, 1224, 1262, 1211, 1249, 1170, 1235,
	1288, 1198, 1245, 1289, 319, 247, 321, 204, 406, 489,
	283, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 1194, 1242, 1283, 1195, 1244, 262, 317,
	269, 261, 514, 1294, 1274, 1159, 1223, 1282, 0, 0,
	228, 1285, 1218, 0, 1247, 0, 1300, 1154, 1238, 0,
	1157, 1161, 1296, 1278, 1189, 272, 0, 0, 0, 0,
	0, 0, 0, 1215, 1225, 1259, 1263, 1209, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 1234, 0, 0,
	0, 1166, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 0, 0, 0, 0,
	1169, 0, 1188, 1260, 0, 1152, 294, 1163, 395, 254,
	0, 445, 1267, 1277, 1210, 556, 1281, 1208, 1207, 1254,
	1167, 1273, 1201, 359, 1165, 326, 200, 224, 0, 1199,
	405, 453, 465, 1272, 1184, 1193, 252, 1191, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 1233, 1252,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 523, 524, 253, 581, 227, 550, 219,
	1164, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 1179, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 1268, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	1257, 1299, 418, 464, 239, 536, 487, 1302, 1303, 1304,
	1305, 1174, 1178, 1172, 1239, 1173, 1228, 1229, 1175, 1290,
	1291, 1292, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 1261, 1168, 0, 1176, 1177, 1270, 1279, 1280, 601,
	378, 477, 533, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 512, 308, 215, 216, 217, 505,
	506, 507, 508, 547, 548, 552, 454, 455, 456, 457,
	289, 542, 305, 460, 459, 327, 328, 373, 442, 1232,
	199, 220, 362, 1295, 446, 285, 579, 546, 541, 206,
	222, 1171, 259, 1182, 1190, 0, 1196, 1204, 1205, 1217,
	1219, 1220, 1221, 1222, 1240, 1241, 1243, 1251, 1253, 1256,
	1258, 1265, 1276, 1298, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 297, 298, 437, 438,
	310, 311, 576, 577, 296, 530, 560, 528, 575, 554,
	431, 372, 1231, 1301, 1237, 375, 278, 301, 316, 1246,
	545, 493, 226, 458, 287, 250, 1264, 1266, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 1227, 1255, 370, 510, 511, 312, 390, 0,
	0, 0, 1284, 1269, 509, 0, 1212, 1287, 1181, 1200,
	1297, 1203, 1206, 1248, 1160, 1226, 409, 1197, 1153, 1185,
	1155, 1192, 1156, 1183, 1214, 267, 1180, 1271, 1230, 1286,
	360, 264, 1162, 1186, 423, 1202, 205, 1250, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 1293, 364, 1236, 0, 488, 394, 0, 0,
	0, 1216, 1275, 1224, 1262, 1211, 1249, 1170, 1235, 1288,
	1198, 1245, 1289, 319, 247, 321, 204, 406, 489, 283,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 1194, 1242, 1283, 1195, 1244, 262, 317, 269,
	261, 514, 1294, 1274, 1159, 1223, 1282, 0, 0, 228,
	1285, 1218, 0, 1247, 0, 1300, 1154, 1238, 0, 1157,
	1161, 1296, 1278, 1189, 272, 0, 0, 0, 0, 0,
	0, 0, 1215, 1225, 1259, 1263, 1209, 0, 0, 0,
	0, 0, 0, 0, 1187, 0, 1234, 0, 0, 0,
	1166, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 1169,
	0, 1188, 1260, 0, 1152, 294, 1163, 395, 254, 0,
	445, 1267, 1277, 1210, 556, 1281, 1208, 1207, 1254, 1167,
	1273, 1201, 359, 1165, 326, 200, 224, 0, 1199, 405,
	453, 465, 1272, 1184, 1193, 252, 1191, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 1233, 1252, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 523, 524, 253, 581, 227, 550, 219, 1164,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 1179, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 1268, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 1257,
	1299, 418, 464, 239, 536, 487, 1302, 1303, 1304, 1305,
	1174, 1178, 1172, 1239, 1173, 1228, 1229, 1175, 1290, 1291,
	1292, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	1261, 1168, 0, 1176, 1177, 1270, 1279, 1280, 601, 378,
	477, 533, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 512, 308, 215, 216, 217, 505, 506,
	507, 508, 547, 548, 552, 454, 455, 456, 457, 289,
	542, 305, 460, 459, 327, 328, 373, 442, 1232, 199,
	220, 362, 1295, 446, 285, 579, 546, 541, 206, 222,
	1171, 259, 1182, 1190, 0, 1196, 1204, 1205, 1217, 1219,
	1220, 1221, 1222, 1240, 1241, 1243, 1251, 1253, 1256, 1258,
	1265, 1276, 1298, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 297, 298, 437, 438, 310,
	311, 576, 577, 296, 530, 560, 528, 575, 554, 431,
	372, 1231, 1301, 1237, 375, 278, 301, 316, 1246, 545,
	493, 226, 458, 287, 250, 1264, 1266, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 1227, 1255, 370, 510, 511, 312, 390, 0, 0,
	0, 1284, 1269, 509, 0, 1212, 1287, 1181, 1200, 1297,
	1203, 1206, 1248, 1160, 1226, 409, 1197, 1153, 1185, 1155,
	1192, 1156, 1183, 1214, 267, 1180, 1271, 1230, 1286, 360,
	264, 1162, 1186, 423, 1202, 205, 1250, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 1293, 364, 1236, 0, 488, 394, 0, 0, 0,
	1216, 1275, 1224, 1262, 1211, 1249, 1170, 1235, 1288, 1198,
	1245, 1289, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 1194, 1242, 1283, 1195, 1244, 262, 317, 269, 261,
	514, 1294, 1274, 1159, 1223, 1282, 0, 0, 228, 1285,
	1218, 0, 1247, 0, 1300, 1154, 1238, 0, 1157, 1161,
	1296, 1278, 1189, 272, 0, 0, 0, 0, 0, 0,
	0, 1215, 1225, 1259, 1263, 1209, 0, 0, 0, 0,
	0, 0, 0, 1187, 0, 1234, 0, 0, 0, 1166,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 1169, 0,
	1188, 1260, 0, 1152, 294, 1163, 395, 254, 0, 445,
	1267, 1277, 1210, 556, 1281, 1208, 1207, 1254, 1167, 1273,
	1201, 359, 1165, 326, 200, 224, 0, 1199, 405, 453,
	465, 1272, 1184, 1193, 252, 1191, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 1233, 1252, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 1164, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 1179, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 1268, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 1257, 1299,
	418, 464, 239, 536, 487, 1302, 1303, 1304, 1305, 1174,
	1178, 1172, 1239, 1173, 1228, 1229, 1175, 1290, 1291, 1292,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 1261,
	1168, 0, 1176, 1177, 1270, 1279, 1280, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 1232, 199, 220,
	362, 1295, 446, 285, 579, 546, 541, 206, 222, 1171,
	259, 1182, 1190, 0, 1196, 1204, 1205, 1217, 1219, 1220,
	1221, 1222, 1240, 1241, 1243, 1251, 1253, 1256, 1258, 1265,
	1276, 1298, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	1231, 1301, 1237, 375, 278, 301, 316, 1246, 545, 493,
	226, 458, 287, 250, 1264, 1266, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	1227, 1255, 370, 510, 511, 312, 390, 0, 0, 0,
	0, 0, 509, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 695,
	0, 0, 0, 267, 700, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	707, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 703, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 95,
	0, 0, 845, 829, 795, 796, 833, 846, 847, 848,
	849, 834, 0, 237, 835, 836, 244, 837, 0, 794,
	735, 737, 736, 754, 755, 756, 757, 758, 759, 760,
	733, 842, 850, 851, 0, 262, 317, 269, 261, 514,
	0, 0, 1993, 1994, 1995, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 677, 692, 0, 706, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 689, 690,
	0, 0, 0, 0, 789, 0, 691, 0, 0, 699,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 788,
	0, 0, 556, 0, 0, 786, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 839, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 0, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	840, 841, 253, 581, 741, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 749,
	750, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 799, 787,
	712, 803, 714, 800, 801, 709, 710, 713, 802, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 790, 698,
	697, 0, 705, 0, 731, 732, 734, 738, 739, 740,
	751, 752, 753, 761, 763, 764, 762, 765, 766, 767,
	770, 771, 772, 773, 768, 769, 774, 715, 719, 716,
	717, 718, 730, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 813, 814, 815, 816, 817, 818, 744,
	748, 747, 745, 746, 742, 743, 696, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 804, 259,
	805, 0, 0, 809, 0, 0, 0, 811, 810, 0,
	812, 778, 777, 0, 0, 806, 807, 0, 808, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 819, 820, 821, 822, 823, 824, 825,
	826, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 844, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 390,
	0, 370, 510, 511, 312, 509, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 695, 0, 0, 0, 267, 700, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 707, 364, 0, 0, 488, 394, 0,
	0, 0, 0, 0, 703, 704, 0, 0, 0, 0,
	0, 0, 2141, 0, 319, 247, 321, 204, 406, 489,
	283, 0, 95, 0, 0, 845, 829, 795, 796, 833,
	846, 847, 848, 849, 834, 0, 237, 835, 836, 244,
	837, 0, 794, 735, 737, 736, 754, 755, 756, 757,
	758, 759, 760, 733, 842, 850, 851, 2142, 262, 317,
	269, 261, 514, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 677, 692,
	0, 706, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 690, 0, 0, 0, 0, 789, 0, 691,
	0, 0, 699, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 445, 788, 0, 0, 556, 0, 0, 786, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 453, 465, 0, 0, 0, 839, 0, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 0, 0,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 840, 841, 253, 581, 741, 550, 219,
	0, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 749, 750, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	0, 0, 418, 464, 239, 536, 487, 0, 0, 0,
	0, 799, 787, 712, 803, 714, 800, 801, 709, 710,
	713, 802, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 790, 698, 697, 0, 705, 0, 731, 732, 734,
	738, 739, 740, 751, 752, 753, 761, 763, 764, 762,
	765, 766, 767, 770, 771, 772, 773, 768, 769, 774,
	715, 719, 716, 717, 718, 730, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 813, 814, 815, 816,
	817, 818, 744, 748, 747, 745, 746, 742, 743, 696,
	199, 220, 362, 0, 446, 285, 579, 546, 541, 206,
	222, 804, 259, 805, 0, 0, 809, 0, 0, 0,
	811, 810, 0, 812, 778, 777, 0, 0, 806, 807,
	0, 808, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 819, 820, 821, 822,
	823, 824, 825, 826, 296, 530, 560, 528, 575, 554,
	431, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	545, 493, 226, 458, 287, 250, 844, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 0, 390, 370, 510, 511, 312, 86, 509,
	0, 708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 695, 0, 0, 0,
	267, 700, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 707, 364, 0,
	0, 488, 394, 0, 0, 0, 0, 0, 703, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 489, 283, 0, 95, 0, 0, 845,
	829, 795, 796, 833, 846, 847, 848, 849, 834, 0,
	237, 835, 836, 244, 837, 0, 794, 735, 737, 736,
	754, 755, 756, 757, 758, 759, 760, 733, 842, 850,
	851, 0, 262, 317, 269, 261, 514, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 677, 692, 0, 706, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 689, 690, 0, 0, 0,
	0, 789, 0, 691, 0, 0, 699, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 445, 788, 0, 0, 556,
	0, 0, 786, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 453, 465, 0, 0, 0,
	839, 0, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 0, 0, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 840, 841, 253,
	581, 741, 550, 219, 0, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 749, 750, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 0, 0, 418, 464, 239, 536,
	487, 0, 0, 0, 0, 799, 787, 712, 803, 714,
	800, 801, 709, 710, 713, 802, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 790, 698, 697, 0, 705,
	0, 731, 732, 734, 738, 739, 740, 751, 752, 753,
	761, 763, 764, 762, 765, 766, 767, 770, 771, 772,
	773, 768, 769, 774, 715, 719, 716, 717, 718, 730,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	813, 814, 815, 816, 817, 818, 744, 748, 747, 745,
	746, 742, 743, 696, 199, 220, 362, 94, 446, 285,
	579, 546, 541, 206, 222, 804, 259, 805, 0, 0,
	809, 0, 0, 0, 811, 810, 0, 812, 778, 777,
	0, 0, 806, 807, 0, 808, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	819, 820, 821, 822, 823, 824, 825, 826, 296, 530,
	560, 528, 575, 554, 431, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 545, 493, 226, 458, 287, 250,
	844, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 390, 0, 370, 510,
	511, 312, 509, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 695,
	0, 0, 0, 267, 700, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	707, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 703, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 95,
	0, 0, 845, 829, 795, 796, 833, 846, 847, 848,
	849, 834, 0, 237, 835, 836, 244, 837, 0, 794,
	735, 737, 736, 754, 755, 756, 757, 758, 759, 760,
	733, 842, 850, 851, 0, 262, 317, 269, 261, 514,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 677, 692, 0, 706, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 689, 690,
	0, 0, 0, 0, 789, 0, 691, 0, 0, 699,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 788,
	0, 0, 556, 0, 0, 786, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 839, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 3459, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	840, 841, 253, 581, 741, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 749,
	750, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 799, 787,
	712, 803, 714, 800, 801, 709, 710, 713, 802, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 790, 698,
	697, 0, 705, 0, 731, 732, 734, 738, 739, 740,
	751, 752, 753, 761, 763, 764, 762, 765, 766, 767,
	770, 771, 772, 773, 768, 769, 774, 715, 719, 716,
	717, 718, 730, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 813, 814, 815, 816, 817, 818, 744,
	748, 747, 745, 746, 742, 743, 696, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 804, 259,
	805, 0, 0, 809, 0, 0, 0, 811, 810, 0,
	812, 778, 777, 0, 0, 806, 807, 0, 808, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 819, 820, 821, 822, 823, 824, 825,
	826, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 844, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 390,
	0, 370, 510, 511, 312, 509, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 695, 0, 0, 0, 267, 700, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 707, 364, 0, 0, 488, 394, 0,
	0, 0, 0, 0, 703, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 489,
	283, 0, 95, 0, 1545, 845, 829, 795, 796, 833,
	846, 847, 848, 849, 834, 0, 237, 835, 836, 244,
	837, 0, 794, 735, 737, 736, 754, 755, 756, 757,
	758, 759, 760, 733, 842, 850, 851, 0, 262, 317,
	269, 261, 514, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 677, 692,
	0, 706, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 690, 0, 0, 0, 0, 789, 0, 691,
	0, 0, 699, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 445, 788, 0, 0, 556, 0, 0, 786, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 453, 465, 0, 0, 0, 839, 0, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 0, 0,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 840, 841, 253, 581, 741, 550, 219,
	0, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 749, 750, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	0, 0, 418, 464, 239, 536, 487, 0, 0, 0,
	0, 799, 787, 712, 803, 714, 800, 801, 709, 710,
	713, 802, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 790, 698, 697, 0, 705, 0, 731, 732, 734,
	738, 739, 740, 751, 752, 753, 761, 763, 764, 762,
	765, 766, 767, 770, 771, 772, 773, 768, 769, 774,
	715, 719, 716, 717, 718, 730, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 813, 814, 815, 816,
	817, 818, 744, 748, 747, 745, 746, 742, 743, 696,
	199, 220, 362, 0, 446, 285, 579, 546, 541, 206,
	222, 804, 259, 805, 0, 0, 809, 0, 0, 0,
	811, 810, 0, 812, 778, 777, 0, 0, 806, 807,
	0, 808, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 819, 820, 821, 822,
	823, 824, 825, 826, 296, 530, 560, 528, 575, 554,
	431, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	545, 493, 226, 458, 287, 250, 844, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 390, 0, 370, 510, 511, 312, 509, 0,
	708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 695, 0, 0, 0, 267,
	700, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 478, 251, 371, 368, 517, 279, 270, 266,
	249, 313, 379, 421, 499, 415, 707, 364, 0, 0,
	488, 394, 0, 0, 0, 0, 0, 703, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 489, 283, 0, 95, 0, 0, 845, 829,
	795, 796, 833, 846, 847, 848, 849, 834, 0, 237,
	835, 836, 244, 837, 0, 794, 735, 737, 736, 754,
	755, 756, 757, 758, 759, 760, 733, 842, 850, 851,
	0, 262, 317, 269, 261, 514, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 677, 692, 0, 706, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 689, 690, 933, 0, 0, 0,
	789, 0, 691, 0, 0, 699, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 445, 788, 0, 0, 556, 0,
	0, 786, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 453, 465, 0, 0, 0, 839,
	0, 463, 419, 534, 232, 281, 450, 425, 461, 433,
	284, 0, 0, 462, 366, 519, 443, 531, 557, 558,
	260, 399, 543, 503, 551, 578, 225, 257, 413, 496,
	537, 485, 391, 515, 516, 325, 484, 292, 203, 363,
	563, 223, 471, 365, 241, 230, 521, 540, 286, 448,
	573, 212, 498, 529, 238, 475, 0, 0, 580, 246,
	495, 214, 526, 494, 387, 322, 323, 213, 0, 449,
	265, 290, 0, 0, 255, 408, 840, 841, 253, 581,
	741, 550, 219, 0, 549, 401, 518, 527, 388, 377,
	218, 525, 386, 376, 330, 749, 750, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 207, 538, 0,
	208, 0, 490, 539, 582, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 513, 532, 544, 555, 561, 562, 564, 565,
	566, 567, 568, 574, 572, 569, 570, 571, 400, 307,
	486, 329, 367, 0, 0, 418, 464, 239, 536, 487,
	0, 0, 0, 0, 799, 787, 712, 803, 714, 800,
	801, 709, 710, 713, 802, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 790, 698, 697, 0, 705, 0,
	731, 732, 734, 738, 739, 740, 751, 752, 753, 761,
	763, 764, 762, 765, 766, 767, 770, 771, 772, 773,
	768, 769, 774, 715, 719, 716, 717, 718, 730, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 813,
	814, 815, 816, 817, 818, 744, 748, 747, 745, 746,
	742, 743, 696, 199, 220, 362, 0, 446, 285, 579,
	546, 541, 206, 222, 804, 259, 805, 0, 0, 809,
	0, 0, 0, 811, 810, 0, 812, 778, 777, 0,
	0, 806, 807, 0, 808, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 520, 522, 535, 553, 559, 472, 819,
	820, 821, 822, 823, 824, 825, 826, 296, 530, 560,
	528, 575, 554, 431, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 545, 493, 226, 458, 287, 250, 844,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 451, 240, 476, 500, 501,
	502, 504, 389, 263, 426, 390, 0, 370, 510, 511,
	312, 509, 0, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 695, 0,
	0, 0, 267, 700, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 478, 251, 371, 368, 517,
	279, 270, 266, 249, 313, 379, 421, 499, 415, 707,
	364, 0, 0, 488, 394, 0, 0, 0, 0, 0,
	703, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 489, 283, 0, 95, 0,
	0, 845, 829, 795, 796, 833, 846, 847, 848, 849,
	834, 0, 237, 835, 836, 244, 837, 0, 794, 735,
	737, 736, 754, 755, 756, 757, 758, 759, 760, 733,
	842, 850, 851, 0, 262, 317, 269, 261, 514, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 677, 692, 0, 706, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 690, 0,
	0, 0, 0, 789, 0, 691, 0, 0, 699, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 445, 788, 0,
	0, 556, 0, 0, 786, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 453, 465, 0,
	0, 0, 839, 0, 463, 419, 534, 232, 281, 450,
	425, 461, 433, 284, 0, 0, 462, 366, 519, 443,
	531, 557, 558, 260, 399, 543, 503, 551, 578, 225,
	257, 413, 496, 537, 485, 391, 515, 516, 325, 484,
	292, 203, 363, 563, 223, 471, 365, 241, 230, 521,
	540, 286, 448, 573, 212, 498, 529, 238, 475, 0,
	0, 580, 246, 495, 214, 526, 494, 387, 322, 323,
	213, 0, 449, 265, 290, 0, 0, 255, 408, 840,
	841, 253, 581, 741, 550, 219, 0, 549, 401, 518,
	527, 388, 377, 218, 525, 386, 376, 330, 749, 750,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	207, 538, 0, 208, 0, 490, 539, 582, 233, 234,
	236, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 513, 532, 544, 555, 561,
	562, 564, 565, 566, 567, 568, 574, 572, 569, 570,
	571, 400, 307, 486, 329, 367, 0, 0, 418, 464,
	239, 536, 487, 0, 0, 0, 0, 799, 787, 712,
	803, 714, 800, 801, 709, 710, 713, 802, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 0, 790, 698, 697,
	0, 705, 0, 731, 732, 734, 738, 739, 740, 751,
	752, 753, 761, 763, 764, 762, 765, 766, 767, 770,
	771, 772, 773, 768, 769, 774, 715, 719, 716, 717,
	718, 730, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 813, 814, 815, 816, 817, 818, 744, 748,
	747, 745, 746, 742, 743, 696, 199, 220, 362, 0,
	446, 285, 579, 546, 541, 206, 222, 804, 259, 805,
	0, 0, 809, 0, 0, 0, 811, 810, 0, 812,
	778, 777, 0, 0, 806, 807, 0, 808, 0, 0,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 520, 522, 535, 553,
	559, 472, 819, 820, 821, 822, 823, 824, 825, 826,
	296, 530, 560, 528, 575, 554, 431, 372, 0, 0,
	0, 375, 278, 301, 316, 0, 545, 493, 226, 458,
	287, 250, 844, 0, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 451, 240,
	476, 500, 501, 502, 504, 389, 263, 426, 390, 0,
	370, 510, 511, 312, 509, 0, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 695, 0, 0, 0, 267, 700, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 707, 364, 0, 0, 488, 394, 0, 0,
	0, 0, 0, 703, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 489, 283,
	0, 95, 0, 0, 845, 829, 795, 796, 833, 846,
	847, 848, 849, 834, 0, 237, 835, 836, 244, 837,
	0, 794, 735, 737, 736, 754, 755, 756, 757, 758,
	759, 760, 733, 842, 850, 851, 0, 262, 317, 269,
	261, 514, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 692, 0,
	706, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 690, 0, 0, 0, 0, 789, 0, 691, 0,
	0, 699, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	445, 788, 0, 0, 556, 0, 0, 786, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	453, 465, 0, 0, 0, 839, 0, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 0, 0, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 840, 841, 253, 581, 741, 550, 219, 0,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 749, 750, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 0,
	0, 418, 464, 239, 536, 487, 0, 0, 0, 0,
	799, 787, 712, 803, 714, 800, 801, 709, 710, 713,
	802, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	790, 698, 697, 0, 705, 0, 731, 732, 734, 738,
	739, 740, 751, 752, 753, 761, 763, 764, 762, 765,
	766, 767, 770, 771, 772, 773, 768, 769, 774, 715,
	719, 716, 717, 718, 730, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 813, 814, 815, 816, 817,
	818, 744, 748, 747, 745, 746, 742, 743, 696, 199,
	220, 362, 0, 446, 285, 579, 546, 541, 206, 222,
	804, 259, 805, 0, 0, 809, 0, 0, 0, 811,
	810, 0, 812, 778, 777, 0, 0, 806, 807, 0,
	808, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 819, 820, 821, 822, 823,
	824, 825, 826, 296, 530, 560, 528, 575, 554, 431,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 545,
	493, 226, 458, 287, 250, 844, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 390, 0, 370, 510, 511, 312, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1370, 1372,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 0, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 390, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 0, 1005,
	556, 0, 0, 0, 0, 0, 1002, 1003, 359, 962,
	326, 200, 224, 996, 1000, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 0, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 390, 0, 370,
	510, 511, 312, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 0, 364, 0, 0, 488, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 1509, 829, 0, 0, 1506, 0, 0,
	0, 0, 1504, 0, 237, 1505, 1503, 244, 1508, 0,
	794, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	514, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 445,
	0, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 453,
	465, 0, 0, 0, 252, 0, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 0, 0, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 0, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 0, 0,
	418, 464, 239, 536, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 0, 199, 220,
	362, 0, 446, 285, 579, 546, 541, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 545, 493,
	226, 458, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	0, 390, 370, 510, 511, 312, 86, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 95, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 94, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 2128, 0, 0, 2127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 1564, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 1566, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	1568, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 1343,
	0, 1344, 1345, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 0, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 0, 390, 370,
	510, 511, 312, 86, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 0, 364, 0, 0, 488, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 489, 283,
	0, 95, 0, 1545, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 514, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	445, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	453, 465, 0, 0, 0, 252, 0, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 0, 0, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 523, 524, 253, 581, 227, 550, 219, 0,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 0,
	0, 418, 464, 239, 536, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 378,
	477, 533, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 512, 308, 215, 216, 217, 505, 506,
	507, 508, 547, 548, 552, 454, 455, 456, 457, 289,
	542, 305, 460, 459, 327, 328, 373, 442, 0, 199,
	220, 362, 94, 446, 285, 579, 546, 541, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 297, 298, 437, 438, 310,
	311, 576, 577, 296, 530, 560, 528, 575, 554, 431,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 545,
	493, 226, 458, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 390, 0, 370, 510, 511, 312, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 95, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 0, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 2128, 0, 0, 2127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 390, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 2080, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	1749, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 2078, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 390, 0, 370,
	510, 511, 312, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 0, 364, 0, 0, 488, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	514, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 445,
	0, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 359, 962, 326, 200, 224, 960, 0, 405, 453,
	465, 0, 0, 0, 252, 0, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 0, 0, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 0, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 0, 0,
	418, 464, 239, 536, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 0, 199, 220,
	362, 0, 446, 285, 579, 546, 541, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 545, 493,
	226, 458, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	390, 0, 370, 510, 511, 312, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 2080, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	478, 251, 371, 368, 517, 279, 270, 266, 249, 313,
	379, 421, 499, 415, 0, 364, 0, 0, 488, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	489, 283, 0, 0, 0, 0, 1749, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 514, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 445, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 453, 465, 0, 0, 0, 252, 0, 463,
	419, 534, 232, 281, 450, 425, 461, 433, 284, 0,
	0, 462, 366, 519, 443, 531, 557, 558, 260, 399,
	543, 503, 551, 578, 225, 257, 413, 496, 537, 485,
	391, 515, 516, 325, 484, 292, 203, 363, 563, 223,
	471, 365, 241, 230, 521, 540, 286, 448, 573, 212,
	498, 529, 238, 475, 0, 0, 580, 246, 495, 214,
	526, 494, 387, 322, 323, 213, 0, 449, 265, 290,
	0, 0, 255, 408, 523, 524, 253, 581, 227, 550,
	219, 0, 549, 401, 518, 527, 388, 377, 218, 525,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 207, 538, 0, 208, 0,
	490, 539, 582, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	513, 532, 544, 555, 561, 562, 564, 565, 566, 567,
	568, 574, 572, 569, 570, 571, 400, 307, 486, 329,
	367, 0, 0, 418, 464, 239, 536, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 378, 477, 533, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 512, 308, 215, 216, 217,
	505, 506, 507, 508, 547, 548, 552, 454, 455, 456,
	457, 289, 542, 305, 460, 459, 327, 328, 373, 442,
	0, 199, 220, 362, 0, 446, 285, 579, 546, 541,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 520, 522, 535, 553, 559, 472, 297, 298, 437,
	438, 310, 311, 576, 577, 296, 530, 560, 528, 575,
	554, 431, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 545, 493, 226, 458, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 451, 240, 476, 500, 501, 502, 504,
	389, 263, 426, 390, 0, 370, 510, 511, 312, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 0, 364, 0,
	0, 488, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 489, 283, 0, 0, 0, 1545, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 514, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 445, 0, 0, 0, 556,
	0, 0, 0, 3369, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 453, 465, 0, 0, 0,
	252, 0, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 0, 0, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 523, 524, 253,
	581, 227, 550, 219, 0, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 0, 0, 418, 464, 239, 536,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 378, 477, 533, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 512, 308,
	215, 216, 217, 505, 506, 507, 508, 547, 548, 552,
	454, 455, 456, 457, 289, 542, 305, 460, 459, 327,
	328, 373, 442, 0, 199, 220, 362, 0, 446, 285,
	579, 546, 541, 206, 222, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	297, 298, 437, 438, 310, 311, 576, 577, 296, 530,
	560, 528, 575, 554, 431, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 545, 493, 226, 458, 287, 250,
	0, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 390, 0, 370, 510,
	511, 312, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	0, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 0,
	0, 0, 1913, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 514,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 252, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 0, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	523, 524, 253, 581, 227, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 378, 477, 533,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 512, 308, 215, 216, 217, 505, 506, 507, 508,
	547, 548, 552, 454, 455, 456, 457, 289, 542, 305,
	460, 459, 327, 328, 373, 442, 0, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 297, 298, 437, 438, 310, 311, 576,
	577, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 390,
	0, 370, 510, 511, 312, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 0, 364, 0, 0, 488, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 489,
	283, 0, 0, 0, 0, 2488, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 514, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 445, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 453, 465, 0, 0, 0, 252, 0, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 0, 0,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 523, 524, 253, 581, 227, 550, 219,
	0, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	0, 0, 418, 464, 239, 536, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	378, 477, 533, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 512, 308, 215, 216, 217, 505,
	506, 507, 508, 547, 548, 552, 454, 455, 456, 457,
	289, 542, 305, 460, 459, 327, 328, 373, 442, 0,
	199, 220, 362, 0, 446, 285, 579, 546, 541, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 297, 298, 437, 438,
	310, 311, 576, 577, 296, 530, 560, 528, 575, 554,
	431, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	545, 493, 226, 458, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 390, 0, 370, 510, 511, 312, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 478, 251, 371, 368, 517, 279, 270, 266,
	249, 313, 379, 421, 499, 415, 0, 364, 0, 0,
	488, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 489, 283, 0, 0, 0, 0, 0, 655,
	0, 0, 0, 0, 2473, 0, 0, 0, 0, 237,
	0, 0, 244, 2474, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 514, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 445, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 453, 465, 0, 0, 0, 252,
	0, 463, 419, 534, 232, 281, 450, 425, 461, 433,
	284, 0, 0, 462, 366, 519, 443, 531, 557, 558,
	260, 399, 543, 503, 551, 578, 225, 257, 413, 496,
	537, 485, 391, 515, 516, 325, 484, 292, 203, 363,
	563, 223, 471, 365, 241, 230, 521, 540, 286, 448,
	573, 212, 498, 529, 238, 475, 0, 0, 580, 246,
	495, 214, 526, 494, 387, 322, 323, 213, 0, 449,
	265, 290, 0, 0, 255, 408, 523, 524, 253, 581,
	227, 550, 219, 0, 549, 401, 518, 527, 388, 377,
	218, 525, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 207, 538, 0,
	208, 0, 490, 539, 582, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 513, 532, 544, 555, 561, 562, 564, 565,
	566, 567, 568, 574, 572, 569, 570, 571, 400, 307,
	486, 329, 367, 0, 0, 418, 464, 239, 536, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 378, 477, 533, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 512, 308, 215,
	216, 217, 505, 506, 507, 508, 547, 548, 552, 454,
	455, 456, 457, 289, 542, 305, 460, 459, 327, 328,
	373, 442, 0, 199, 220, 362, 0, 446, 285, 579,
	546, 541, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 520, 522, 535, 553, 559, 472, 297,
	298, 437, 438, 310, 311, 576, 577, 296, 530, 560,
	528, 575, 554, 431, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 545, 493, 226, 458, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 451, 240, 476, 500, 501,
	502, 504, 389, 263, 426, 390, 0, 370, 510, 511,
	312, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 1587, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 478, 251, 371, 368, 517,
	279, 270, 266, 249, 313, 379, 421, 499, 415, 0,
	364, 0, 0, 488, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 489, 283, 0, 0, 0,
	0, 1586, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 514, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 445, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 453, 465, 0,
	0, 0, 252, 0, 463, 419, 534, 232, 281, 450,
	425, 461, 433, 284, 0, 0, 462, 366, 519, 443,
	531, 557, 558, 260, 399, 543, 503, 551, 578, 225,
	257, 413, 496, 537, 485, 391, 515, 516, 325, 484,
	292, 203, 363, 563, 223, 471, 365, 241, 230, 521,
	540, 286, 448, 573, 212, 498, 529, 238, 475, 0,
	0, 580, 246, 495, 214, 526, 494, 387, 322, 323,
	213, 0, 449, 265, 290, 0, 0, 255, 408, 523,
	524, 253, 581, 227, 550, 219, 0, 549, 401, 518,
	527, 388, 377, 218, 525, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	207, 538, 0, 208, 0, 490, 539, 582, 233, 234,
	236, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 513, 532, 544, 555, 561,
	562, 564, 565, 566, 567, 568, 574, 572, 569, 570,
	571, 400, 307, 486, 329, 367, 0, 0, 418, 464,
	239, 536, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 378, 477, 533, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	512, 308, 215, 216, 217, 505, 506, 507, 508, 547,
	548, 552, 454, 455, 456, 457, 289, 542, 305, 460,
	459, 327, 328, 373, 442, 0, 199, 220, 362, 0,
	446, 285, 579, 546, 541, 206, 222, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 520, 522, 535, 553,
	559, 472, 297, 298, 437, 438, 310, 311, 576, 577,
	296, 530, 560, 528, 575, 554, 431, 372, 0, 0,
	0, 375, 278, 301, 316, 0, 545, 493, 226, 458,
	287, 250, 0, 0, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 451, 240,
	476, 500, 501, 502, 504, 389, 263, 426, 390, 0,
	370, 510, 511, 312, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 0, 364, 0, 0, 488, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 489, 283,
	0, 0, 0, 0, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 514, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	445, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	453, 465, 0, 0, 0, 252, 0, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 0, 0, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 523, 524, 253, 581, 227, 550, 219, 0,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 0,
	0, 418, 464, 239, 536, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 378,
	477, 533, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 512, 308, 215, 216, 217, 505, 506,
	507, 508, 547, 548, 552, 454, 455, 456, 457, 289,
	542, 305, 460, 459, 327, 328, 373, 442, 0, 199,
	220, 362, 0, 446, 285, 579, 546, 541, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 297, 298, 437, 438, 310,
	311, 576, 577, 296, 530, 560, 528, 575, 554, 431,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 545,
	493, 226, 458, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 390, 0, 370, 510, 511, 312, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 3493, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 0, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 390, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	1749, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 0, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 390, 0, 370,
	510, 511, 312, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 0, 364, 0, 0, 488, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	514, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 445,
	0, 0, 0, 556, 0, 0, 0, 3369, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 453,
	465, 0, 0, 0, 252, 0, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 0, 0, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 0, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 0, 0,
	418, 464, 239, 536, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 0, 199, 220,
	362, 0, 446, 285, 579, 546, 541, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 545, 493,
	226, 458, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	390, 0, 370, 510, 511, 312, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	478, 251, 371, 368, 517, 279, 270, 266, 249, 313,
	379, 421, 499, 415, 0, 364, 0, 0, 488, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	489, 283, 0, 95, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 514, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 445, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 453, 465, 0, 0, 0, 252, 0, 463,
	419, 534, 232, 281, 450, 425, 461, 433, 284, 0,
	0, 462, 366, 519, 443, 531, 557, 558, 260, 399,
	543, 503, 551, 578, 225, 257, 413, 496, 537, 485,
	391, 515, 516, 325, 484, 292, 203, 363, 563, 223,
	471, 365, 241, 230, 521, 540, 286, 448, 573, 212,
	498, 529, 238, 475, 0, 0, 580, 246, 495, 214,
	526, 494, 387, 322, 323, 213, 0, 449, 265, 290,
	0, 0, 255, 408, 523, 524, 253, 581, 227, 550,
	219, 0, 549, 401, 518, 527, 388, 377, 218, 525,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 207, 538, 0, 208, 0,
	490, 539, 582, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	513, 532, 544, 555, 561, 562, 564, 565, 566, 567,
	568, 574, 572, 569, 570, 571, 400, 307, 486, 329,
	367, 0, 0, 418, 464, 239, 536, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 378, 477, 533, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 512, 308, 215, 216, 217,
	505, 506, 507, 508, 547, 548, 552, 454, 455, 456,
	457, 289, 542, 305, 460, 459, 327, 328, 373, 442,
	0, 199, 220, 362, 0, 446, 285, 579, 546, 541,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 520, 522, 535, 553, 559, 472, 297, 298, 437,
	438, 310, 311, 576, 577, 296, 530, 560, 528, 575,
	554, 431, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 545, 493, 226, 458, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 451, 240, 476, 500, 501, 502, 504,
	389, 263, 426, 390, 0, 370, 510, 511, 312, 509,
	0, 0, 0, 0, 2129, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 0, 364, 0,
	0, 488, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 489, 283, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 514, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 445, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 453, 465, 0, 0, 0,
	252, 0, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 0, 0, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 523, 524, 253,
	581, 227, 550, 219, 0, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 0, 0, 418, 464, 239, 536,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 378, 477, 533, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 512, 308,
	215, 216, 217, 505, 506, 507, 508, 547, 548, 552,
	454, 455, 456, 457, 289, 542, 305, 460, 459, 327,
	328, 373, 442, 0, 199, 220, 362, 0, 446, 285,
	579, 546, 541, 206, 222, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	297, 298, 437, 438, 310, 311, 576, 577, 296, 530,
	560, 528, 575, 554, 431, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 545, 493, 226, 458, 287, 250,
	0, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 390, 0, 370, 510,
	511, 312, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	0, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 0,
	0, 0, 1568, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 514,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 252, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 0, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	523, 524, 253, 581, 227, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 378, 477, 533,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 512, 308, 215, 216, 217, 505, 506, 507, 508,
	547, 548, 552, 454, 455, 456, 457, 289, 542, 305,
	460, 459, 327, 328, 373, 442, 0, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 297, 298, 437, 438, 310, 311, 576,
	577, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 390,
	0, 370, 510, 511, 312, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 0, 364, 0, 0, 488, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 489,
	283, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 514, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 445, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 453, 465, 0, 0, 0, 252, 0, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 0, 0,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 523, 524, 253, 581, 227, 550, 219,
	0, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	0, 0, 418, 464, 239, 536, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	378, 477, 533, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 512, 308, 215, 216, 217, 505,
	506, 507, 508, 547, 548, 552, 454, 455, 456, 457,
	289, 542, 305, 460, 459, 327, 328, 373, 442, 0,
	199, 220, 362, 1868, 446, 285, 579, 546, 541, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 297, 298, 437, 438,
	310, 311, 576, 577, 296, 530, 560, 528, 575, 554,
	431, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	545, 493, 226, 458, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 390, 0, 370, 510, 511, 312, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 478, 251, 371, 368, 517, 279, 270, 266,
	249, 313, 379, 421, 499, 415, 0, 364, 0, 0,
	488, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 489, 283, 0, 0, 0, 0, 1859, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 514, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 445, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 453, 465, 0, 0, 0, 252,
	0, 463, 419, 534, 232, 281, 450, 425, 461, 433,
	284, 0, 0, 462, 366, 519, 443, 531, 557, 558,
	260, 399, 543, 503, 551, 578, 225, 257, 413, 496,
	537, 485, 391, 515, 516, 325, 484, 292, 203, 363,
	563, 223, 471, 365, 241, 230, 521, 540, 286, 448,
	573, 212, 498, 529, 238, 475, 0, 0, 580, 246,
	495, 214, 526, 494, 387, 322, 323, 213, 0, 449,
	265, 290, 0, 0, 255, 408, 523, 524, 253, 581,
	227, 550, 219, 0, 549, 401, 518, 527, 388, 377,
	218, 525, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 207, 538, 0,
	208, 0, 490, 539, 582, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 513, 532, 544, 555, 561, 562, 564, 565,
	566, 567, 568, 574, 572, 569, 570, 571, 400, 307,
	486, 329, 367, 0, 0, 418, 464, 239, 536, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 378, 477, 533, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 512, 308, 215,
	216, 217, 505, 506, 507, 508, 547, 548, 552, 454,
	455, 456, 457, 289, 542, 305, 460, 459, 327, 328,
	373, 442, 0, 199, 220, 362, 0, 446, 285, 579,
	546, 541, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 520, 522, 535, 553, 559, 472, 297,
	298, 437, 438, 310, 311, 576, 577, 296, 530, 560,
	528, 575, 554, 431, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 545, 493, 226, 458, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 451, 240, 476, 500, 501,
	502, 504, 389, 263, 426, 390, 0, 370, 510, 511,
	312, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 1716, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 478, 251, 371, 368, 517,
	279, 270, 266, 249, 313, 379, 421, 499, 415, 0,
	364, 0, 0, 488, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 489, 283, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 514, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 445, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 453, 465, 0,
	0, 0, 252, 0, 463, 419, 534, 232, 281, 450,
	425, 461, 433, 284, 0, 0, 462, 366, 519, 443,
	531, 557, 558, 260, 399, 543, 503, 551, 578, 225,
	257, 413, 496, 537, 485, 391, 515, 516, 325, 484,
	292, 203, 363, 563, 223, 471, 365, 241, 230, 521,
	540, 286, 448, 573, 212, 498, 529, 238, 475, 0,
	0, 580, 246, 495, 214, 526, 494, 387, 322, 323,
	213, 0, 449, 265, 290, 0, 0, 255, 408, 523,
	524, 253, 581, 227, 550, 219, 0, 549, 401, 518,
	527, 388, 377, 218, 525, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	207, 538, 0, 208, 0, 490, 539, 582, 233, 234,
	236, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 513, 532, 544, 555, 561,
	562, 564, 565, 566, 567, 568, 574, 572, 569, 570,
	571, 400, 307, 486, 329, 367, 0, 0, 418, 464,
	239, 536, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 378, 477, 533, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	512, 308, 215, 216, 217, 505, 506, 507, 508, 547,
	548, 552, 454, 455, 456, 457, 289, 542, 305, 460,
	459, 327, 328, 373, 442, 0, 199, 220, 362, 0,
	446, 285, 579, 546, 541, 206, 222, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 520, 522, 535, 553,
	559, 472, 297, 298, 437, 438, 310, 311, 576, 577,
	296, 530, 560, 528, 575, 554, 431, 372, 0, 0,
	0, 375, 278, 301, 316, 0, 545, 493, 226, 458,
	287, 250, 0, 0, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 451, 240,
	476, 500, 501, 502, 504, 389, 263, 426, 390, 0,
	370, 510, 511, 312, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 1714, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 0, 364, 0, 0, 488, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 489, 283,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 514, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	445, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	453, 465, 0, 0, 0, 252, 0, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 0, 0, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 523, 524, 253, 581, 227, 550, 219, 0,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 0,
	0, 418, 464, 239, 536, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 378,
	477, 533, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 512, 308, 215, 216, 217, 505, 506,
	507, 508, 547, 548, 552, 454, 455, 456, 457, 289,
	542, 305, 460, 459, 327, 328, 373, 442, 0, 199,
	220, 362, 0, 446, 285, 579, 546, 541, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 297, 298, 437, 438, 310,
	311, 576, 577, 296, 530, 560, 528, 575, 554, 431,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 545,
	493, 226, 458, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 390, 0, 370, 510, 511, 312, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 1712, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 0, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 390, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 1710, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 0, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 390, 0, 370,
	510, 511, 312, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1708, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 0, 364, 0, 0, 488, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	514, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 445,
	0, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 453,
	465, 0, 0, 0, 252, 0, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 0, 0, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 0, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 0, 0,
	418, 464, 239, 536, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 0, 199, 220,
	362, 0, 446, 285, 579, 546, 541, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 545, 493,
	226, 458, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	390, 0, 370, 510, 511, 312, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	1704, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	478, 251, 371, 368, 517, 279, 270, 266, 249, 313,
	379, 421, 499, 415, 0, 364, 0, 0, 488, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	489, 283, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 514, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 445, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 453, 465, 0, 0, 0, 252, 0, 463,
	419, 534, 232, 281, 450, 425, 461, 433, 284, 0,
	0, 462, 366, 519, 443, 531, 557, 558, 260, 399,
	543, 503, 551, 578, 225, 257, 413, 496, 537, 485,
	391, 515, 516, 325, 484, 292, 203, 363, 563, 223,
	471, 365, 241, 230, 521, 540, 286, 448, 573, 212,
	498, 529, 238, 475, 0, 0, 580, 246, 495, 214,
	526, 494, 387, 322, 323, 213, 0, 449, 265, 290,
	0, 0, 255, 408, 523, 524, 253, 581, 227, 550,
	219, 0, 549, 401, 518, 527, 388, 377, 218, 525,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 207, 538, 0, 208, 0,
	490, 539, 582, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	513, 532, 544, 555, 561, 562, 564, 565, 566, 567,
	568, 574, 572, 569, 570, 571, 400, 307, 486, 329,
	367, 0, 0, 418, 464, 239, 536, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 378, 477, 533, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 512, 308, 215, 216, 217,
	505, 506, 507, 508, 547, 548, 552, 454, 455, 456,
	457, 289, 542, 305, 460, 459, 327, 328, 373, 442,
	0, 199, 220, 362, 0, 446, 285, 579, 546, 541,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 520, 522, 535, 553, 559, 472, 297, 298, 437,
	438, 310, 311, 576, 577, 296, 530, 560, 528, 575,
	554, 431, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 545, 493, 226, 458, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 451, 240, 476, 500, 501, 502, 504,
	389, 263, 426, 390, 0, 370, 510, 511, 312, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 1702, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 0, 364, 0,
	0, 488, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 489, 283, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 514, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 445, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 453, 465, 0, 0, 0,
	252, 0, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 0, 0, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 523, 524, 253,
	581, 227, 550, 219, 0, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 0, 0, 418, 464, 239, 536,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 378, 477, 533, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 512, 308,
	215, 216, 217, 505, 506, 507, 508, 547, 548, 552,
	454, 455, 456, 457, 289, 542, 305, 460, 459, 327,
	328, 373, 442, 0, 199, 220, 362, 0, 446, 285,
	579, 546, 541, 206, 222, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	297, 298, 437, 438, 310, 311, 576, 577, 296, 530,
	560, 528, 575, 554, 431, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 545, 493, 226, 458, 287, 250,
	0, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 390, 0, 370, 510,
	511, 312, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 1700, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	0, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 514,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 252, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 0, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	523, 524, 253, 581, 227, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 378, 477, 533,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 512, 308, 215, 216, 217, 505, 506, 507, 508,
	547, 548, 552, 454, 455, 456, 457, 289, 542, 305,
	460, 459, 327, 328, 373, 442, 0, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 297, 298, 437, 438, 310, 311, 576,
	577, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 390,
	0, 370, 510, 511, 312, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 478,
	251, 371, 368, 517, 279, 270, 266, 249, 313, 379,
	421, 499, 415, 0, 364, 0, 0, 488, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 247, 321, 204, 406, 489,
	283, 0, 1675, 0, 0, 0, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 514, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 445, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 453, 465, 0, 0, 0, 252, 0, 463, 419,
	534, 232, 281, 450, 425, 461, 433, 284, 0, 0,
	462, 366, 519, 443, 531, 557, 558, 260, 399, 543,
	503, 551, 578, 225, 257, 413, 496, 537, 485, 391,
	515, 516, 325, 484, 292, 203, 363, 563, 223, 471,
	365, 241, 230, 521, 540, 286, 448, 573, 212, 498,
	529, 238, 475, 0, 0, 580, 246, 495, 214, 526,
	494, 387, 322, 323, 213, 0, 449, 265, 290, 0,
	0, 255, 408, 523, 524, 253, 581, 227, 550, 219,
	0, 549, 401, 518, 527, 388, 377, 218, 525, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 207, 538, 0, 208, 0, 490,
	539, 582, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 513,
	532, 544, 555, 561, 562, 564, 565, 566, 567, 568,
	574, 572, 569, 570, 571, 400, 307, 486, 329, 367,
	0, 0, 418, 464, 239, 536, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	378, 477, 533, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 512, 308, 215, 216, 217, 505,
	506, 507, 508, 547, 548, 552, 454, 455, 456, 457,
	289, 542, 305, 460, 459, 327, 328, 373, 442, 0,
	199, 220, 362, 0, 446, 285, 579, 546, 541, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	520, 522, 535, 553, 559, 472, 297, 298, 437, 438,
	310, 311, 576, 577, 296, 530, 560, 528, 575, 554,
	431, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	545, 493, 226, 458, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 451, 240, 476, 500, 501, 502, 504, 389,
	263, 426, 390, 0, 370, 510, 511, 312, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 1572, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 478, 251, 371, 368, 517, 279, 270, 266,
	249, 313, 379, 421, 499, 415, 0, 364, 0, 0,
	488, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 489, 283, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 514, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 445, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 453, 465, 0, 0, 0, 252,
	0, 463, 419, 534, 232, 281, 450, 425, 461, 433,
	284, 0, 0, 462, 366, 519, 443, 531, 557, 558,
	260, 399, 543, 503, 551, 578, 225, 257, 413, 496,
	537, 485, 391, 515, 516, 325, 484, 292, 203, 363,
	563, 223, 471, 365, 241, 230, 521, 540, 286, 448,
	573, 212, 498, 529, 238, 475, 0, 0, 580, 246,
	495, 214, 526, 494, 387, 322, 323, 213, 0, 449,
	265, 290, 0, 0, 255, 408, 523, 524, 253, 581,
	227, 550, 219, 0, 549, 401, 518, 527, 388, 377,
	218, 525, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 207, 538, 0,
	208, 0, 490, 539, 582, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 513, 532, 544, 555, 561, 562, 564, 565,
	566, 567, 568, 574, 572, 569, 570, 571, 400, 307,
	486, 329, 367, 0, 0, 418, 464, 239, 536, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 378, 477, 533, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 512, 308, 215,
	216, 217, 505, 506, 507, 508, 547, 548, 552, 454,
	455, 456, 457, 289, 542, 305, 460, 459, 327, 328,
	373, 442, 0, 199, 220, 362, 0, 446, 285, 579,
	546, 541, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 520, 522, 535, 553, 559, 472, 297,
	298, 437, 438, 310, 311, 576, 577, 296, 530, 560,
	528, 575, 554, 431, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 545, 493, 226, 458, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 451, 240, 476, 500, 501,
	502, 504, 389, 263, 426, 390, 0, 370, 510, 511,
	312, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 478, 251, 371, 368, 517,
	279, 270, 266, 249, 313, 379, 421, 499, 415, 0,
	364, 0, 0, 488, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 489, 283, 0, 95, 0,
	0, 0, 829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 514, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 445, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 453, 465, 0,
	0, 0, 252, 0, 463, 419, 534, 232, 281, 450,
	425, 461, 433, 284, 0, 0, 462, 366, 519, 443,
	531, 557, 558, 260, 399, 543, 503, 551, 578, 225,
	257, 413, 496, 537, 485, 391, 515, 516, 325, 484,
	292, 203, 363, 563, 223, 471, 365, 241, 230, 521,
	540, 286, 448, 573, 212, 498, 529, 238, 475, 0,
	0, 580, 246, 495, 214, 526, 494, 387, 322, 323,
	213, 0, 449, 265, 290, 0, 0, 255, 408, 523,
	524, 253, 581, 227, 550, 219, 0, 549, 401, 518,
	527, 388, 377, 218, 525, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	207, 538, 0, 208, 0, 490, 539, 582, 233, 234,
	236, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 513, 532, 544, 555, 561,
	562, 564, 565, 566, 567, 568, 574, 572, 569, 570,
	571, 400, 307, 486, 329, 367, 0, 0, 418, 464,
	239, 536, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 378, 477, 533, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	512, 308, 215, 216, 217, 505, 506, 507, 508, 547,
	548, 552, 454, 455, 456, 457, 289, 542, 305, 460,
	459, 327, 328, 373, 442, 0, 199, 220, 362, 0,
	446, 285, 579, 546, 541, 206, 222, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 520, 522, 535, 553,
	559, 472, 297, 298, 437, 438, 310, 311, 576, 577,
	296, 530, 560, 528, 575, 554, 431, 372, 0, 0,
	0, 375, 278, 301, 316, 0, 545, 493, 226, 458,
	287, 250, 0, 0, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 451, 240,
	476, 500, 501, 502, 504, 389, 263, 426, 390, 0,
	370, 510, 511, 312, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 205, 0, 478, 251,
	371, 368, 517, 279, 270, 266, 249, 313, 379, 421,
	499, 415, 0, 364, 0, 0, 488, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 247, 321, 204, 406, 489, 283,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 514, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 0, 294, 0, 395, 254, 0,
	445, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 200, 224, 0, 0, 405,
	453, 465, 0, 0, 0, 252, 0, 463, 419, 534,
	232, 281, 450, 425, 461, 433, 284, 0, 0, 462,
	366, 519, 443, 531, 557, 558, 260, 399, 543, 503,
	551, 578, 225, 257, 413, 496, 537, 485, 391, 515,
	516, 325, 484, 292, 203, 363, 563, 223, 471, 365,
	241, 230, 521, 540, 286, 448, 573, 212, 498, 529,
	238, 475, 0, 0, 580, 246, 495, 214, 526, 494,
	387, 322, 323, 213, 0, 449, 265, 290, 0, 0,
	255, 408, 523, 524, 253, 581, 227, 550, 219, 0,
	549, 401, 518, 527, 388, 377, 218, 525, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 207, 538, 0, 208, 0, 490, 539,
	582, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 513, 532,
	544, 555, 561, 562, 564, 565, 566, 567, 568, 574,
	572, 569, 570, 571, 400, 307, 486, 329, 367, 0,
	0, 418, 464, 239, 536, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 378,
	477, 533, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 512, 308, 215, 216, 217, 505, 506,
	507, 508, 547, 548, 552, 454, 455, 456, 457, 289,
	542, 305, 460, 459, 327, 328, 373, 442, 0, 199,
	220, 362, 0, 446, 285, 579, 546, 541, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 520,
	522, 535, 553, 559, 472, 297, 298, 437, 438, 310,
	311, 576, 577, 1321, 530, 560, 528, 575, 554, 431,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 545,
	493, 226, 458, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 451, 240, 476, 500, 501, 502, 504, 389, 263,
	426, 390, 0, 370, 510, 511, 312, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 478, 251, 371, 368, 517, 279, 270, 266, 249,
	313, 379, 421, 499, 415, 0, 364, 0, 0, 488,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 489, 283, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 514, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 445, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 453, 465, 0, 0, 0, 252, 0,
	463, 419, 534, 232, 281, 450, 425, 461, 433, 284,
	0, 0, 462, 366, 519, 443, 531, 557, 558, 260,
	399, 543, 503, 551, 578, 225, 257, 413, 496, 537,
	485, 391, 515, 516, 325, 484, 292, 203, 363, 563,
	223, 471, 365, 241, 230, 521, 540, 286, 448, 573,
	212, 498, 529, 238, 475, 0, 0, 580, 246, 495,
	214, 526, 494, 387, 322, 323, 213, 0, 449, 265,
	290, 0, 0, 255, 408, 523, 524, 253, 581, 227,
	550, 219, 0, 549, 401, 518, 527, 388, 377, 218,
	525, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 207, 538, 0, 208,
	0, 490, 539, 582, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 513, 532, 544, 555, 561, 562, 564, 565, 566,
	567, 568, 574, 572, 569, 570, 571, 400, 307, 486,
	329, 367, 0, 0, 418, 464, 239, 536, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 378, 477, 533, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 512, 308, 215, 216,
	217, 505, 506, 507, 508, 547, 548, 552, 454, 455,
	456, 457, 289, 542, 305, 460, 459, 327, 328, 373,
	442, 0, 199, 220, 362, 0, 446, 285, 579, 546,
	541, 206, 222, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 914, 0, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 520, 522, 535, 553, 559, 472, 297, 298,
	437, 438, 310, 311, 576, 577, 296, 530, 560, 528,
	575, 554, 431, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 545, 493, 226, 458, 287, 250, 0, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 451, 240, 476, 500, 501, 502,
	504, 389, 263, 426, 390, 0, 370, 510, 511, 312,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 478, 251, 371, 368, 517, 279,
	270, 266, 249, 313, 379, 421, 499, 415, 0, 364,
	0, 0, 488, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 489, 283, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 514, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 445, 0, 604, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 453, 465, 0, 0,
	0, 252, 0, 463, 419, 534, 232, 281, 450, 425,
	461, 433, 284, 0, 0, 462, 366, 519, 443, 531,
	557, 558, 260, 399, 543, 503, 551, 578, 225, 257,
	413, 496, 537, 485, 391, 515, 516, 325, 484, 292,
	203, 363, 563, 223, 471, 365, 241, 230, 521, 540,
	286, 448, 573, 212, 498, 529, 238, 475, 0, 0,
	580, 246, 495, 214, 526, 494, 387, 322, 323, 213,
	0, 449, 265, 290, 0, 0, 255, 408, 523, 524,
	253, 581, 227, 550, 219, 0, 549, 401, 518, 527,
	388, 377, 218, 525, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 207,
	538, 0, 208, 0, 490, 539, 582, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 513, 532, 544, 555, 561, 562,
	564, 565, 566, 567, 568, 574, 572, 569, 570, 571,
	400, 307, 486, 329, 367, 0, 0, 418, 464, 239,
	536, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 378, 477, 533, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 512,
	308, 215, 216, 217, 505, 506, 507, 508, 547, 548,
	552, 454, 455, 456, 457, 289, 542, 305, 460, 459,
	327, 328, 373, 442, 0, 199, 220, 362, 0, 446,
	285, 579, 546, 541, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 520, 522, 535, 553, 559,
	472, 297, 298, 437, 438, 310, 311, 576, 577, 296,
	530, 560, 528, 575, 554, 431, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 545, 493, 226, 458, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 451, 240, 476,
	500, 501, 502, 504, 389, 263, 426, 390, 0, 370,
	510, 511, 312, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 478, 251, 371,
	368, 517, 279, 270, 266, 249, 313, 379, 421, 499,
	415, 0, 364, 0, 0, 488, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 489, 283, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	514, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 445,
	0, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 453,
	465, 0, 0, 0, 252, 0, 463, 419, 534, 232,
	281, 450, 425, 461, 433, 284, 0, 0, 462, 366,
	519, 443, 531, 557, 558, 260, 399, 543, 503, 551,
	578, 225, 257, 413, 496, 537, 485, 391, 515, 516,
	325, 484, 292, 203, 363, 563, 223, 471, 365, 241,
	230, 521, 540, 286, 448, 573, 212, 498, 529, 238,
	475, 0, 0, 580, 246, 495, 214, 526, 494, 387,
	322, 323, 213, 0, 449, 265, 290, 0, 0, 255,
	408, 523, 524, 253, 581, 227, 550, 219, 0, 549,
	401, 518, 527, 388, 377, 218, 525, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 207, 538, 0, 208, 0, 490, 539, 582,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 513, 532, 544,
	555, 561, 562, 564, 565, 566, 567, 568, 574, 572,
	569, 570, 571, 400, 307, 486, 329, 367, 0, 0,
	418, 464, 239, 536, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 378, 477,
	533, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 512, 308, 215, 216, 217, 505, 506, 507,
	508, 547, 548, 552, 454, 455, 456, 457, 289, 542,
	305, 460, 459, 327, 328, 373, 442, 0, 199, 220,
	362, 0, 446, 285, 579, 546, 541, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 3501, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 520, 522,
	535, 553, 559, 472, 297, 298, 437, 438, 310, 311,
	576, 577, 296, 530, 560, 528, 575, 554, 431, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 545, 493,
	226, 458, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	451, 240, 476, 500, 501, 502, 504, 389, 263, 426,
	390, 0, 370, 510, 511, 312, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	478, 251, 371, 368, 517, 279, 270, 266, 249, 313,
	379, 421, 499, 415, 0, 364, 0, 0, 488, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	489, 283, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 514, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 445, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 453, 465, 0, 0, 0, 252, 0, 463,
	419, 534, 232, 281, 450, 425, 461, 433, 284, 0,
	0, 462, 366, 519, 443, 531, 557, 558, 260, 399,
	543, 503, 551, 578, 225, 257, 413, 496, 537, 485,
	391, 515, 516, 325, 484, 292, 203, 363, 563, 223,
	471, 365, 241, 230, 521, 540, 286, 448, 573, 212,
	498, 529, 238, 475, 0, 0, 580, 246, 495, 214,
	526, 494, 387, 322, 323, 213, 0, 449, 265, 290,
	0, 0, 255, 408, 523, 524, 253, 581, 227, 550,
	219, 0, 549, 401, 518, 527, 388, 377, 218, 525,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 207, 538, 0, 208, 0,
	490, 539, 582, 233, 234, 236, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	513, 532, 544, 555, 561, 562, 564, 565, 566, 567,
	568, 574, 572, 569, 570, 571, 400, 307, 486, 329,
	367, 0, 0, 418, 464, 239, 536, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 378, 477, 533, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 512, 308, 215, 216, 217,
	505, 506, 507, 508, 547, 548, 552, 454, 455, 456,
	457, 289, 542, 305, 460, 459, 327, 328, 373, 442,
	0, 199, 220, 362, 0, 446, 285, 579, 546, 541,
	206, 222, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 520, 522, 535, 553, 559, 472, 297, 298, 437,
	438, 310, 311, 576, 577, 296, 530, 560, 528, 575,
	554, 431, 372, 0, 0, 0, 375, 278, 301, 316,
	0, 545, 493, 226, 458, 287, 250, 0, 0, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 451, 240, 476, 500, 501, 502, 504,
	389, 263, 426, 390, 0, 370, 510, 511, 312, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 205, 0, 478, 251, 371, 368, 517, 279, 270,
	266, 249, 313, 379, 421, 499, 415, 0, 364, 0,
	0, 488, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 247,
	321, 204, 406, 489, 283, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 514, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 445, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	200, 224, 0, 0, 405, 453, 465, 0, 0, 0,
	252, 0, 463, 419, 534, 232, 281, 450, 425, 461,
	433, 284, 0, 0, 462, 366, 519, 443, 531, 557,
	558, 260, 399, 543, 503, 551, 578, 225, 257, 413,
	496, 537, 485, 391, 515, 516, 325, 484, 292, 203,
	363, 563, 223, 471, 365, 241, 230, 521, 540, 286,
	448, 573, 212, 498, 529, 238, 475, 0, 0, 580,
	246, 495, 214, 526, 494, 387, 322, 323, 213, 0,
	449, 265, 290, 0, 0, 255, 408, 523, 524, 253,
	581, 227, 550, 219, 0, 549, 401, 518, 527, 388,
	377, 218, 525, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 207, 538,
	0, 208, 0, 490, 539, 582, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 513, 532, 544, 555, 561, 562, 564,
	565, 566, 567, 568, 574, 572, 569, 570, 571, 400,
	307, 486, 329, 367, 0, 0, 418, 464, 239, 536,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 378, 477, 533, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 512, 308,
	215, 216, 217, 505, 506, 507, 508, 547, 548, 552,
	454, 455, 456, 457, 289, 542, 305, 460, 459, 327,
	328, 373, 442, 0, 199, 220, 362, 0, 446, 285,
	579, 546, 541, 206, 222, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 520, 522, 535, 553, 559, 472,
	297, 298, 437, 438, 310, 311, 576, 577, 296, 530,
	560, 528, 575, 554, 431, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 545, 493, 226, 458, 287, 250,
	0, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 451, 240, 476, 500,
	501, 502, 504, 389, 263, 426, 390, 0, 370, 510,
	511, 312, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 478, 251, 371, 368,
	517, 279, 270, 266, 249, 313, 379, 421, 499, 415,
	0, 364, 0, 0, 488, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 489, 283, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 514,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 445, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 453, 465,
	0, 0, 0, 252, 0, 463, 419, 534, 232, 281,
	450, 425, 461, 433, 284, 0, 0, 462, 366, 519,
	443, 531, 557, 558, 260, 399, 543, 503, 551, 578,
	225, 257, 413, 496, 537, 485, 391, 515, 516, 325,
	484, 292, 203, 363, 563, 223, 471, 365, 241, 230,
	521, 540, 286, 448, 573, 212, 498, 529, 238, 475,
	0, 0, 580, 246, 495, 214, 526, 494, 387, 322,
	323, 213, 0, 449, 265, 290, 0, 0, 255, 408,
	523, 524, 253, 581, 227, 550, 219, 0, 549, 401,
	518, 527, 388, 377, 218, 525, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 207, 538, 0, 208, 0, 490, 539, 582, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 513, 532, 544, 555,
	561, 562, 564, 565, 566, 567, 568, 574, 572, 569,
	570, 571, 400, 307, 486, 329, 367, 0, 0, 418,
	464, 239, 536, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 378, 477, 533,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 248, 210, 384,
	392, 512, 308, 215, 216, 217, 505, 506, 507, 508,
	547, 548, 552, 454, 455, 456, 457, 289, 542, 305,
	460, 459, 327, 328, 373, 442, 0, 199, 220, 362,
	0, 446, 285, 579, 546, 541, 206, 222, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 520, 522, 535,
	553, 559, 472, 297, 298, 437, 438, 310, 311, 576,
	577, 296, 530, 560, 528, 575, 554, 431, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 545, 493, 226,
	458, 287, 250, 0, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 451,
	240, 476, 500, 501, 502, 504, 389, 263, 426, 0,
	0, 370, 510, 511, 312,
}

var yyPact = [...]int{
	-1000, -1000, 4041, -1000, -458, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2148, 2189, -1000, -1000, -1000, -1000, 2375, -1000, 925,
	1889, -1000, 2149, 4054, -1000, 47042, 600, -1000, 44390, 599,
	594, 142, 144, 29804, -1000, 276, -1000, 261, 45716, 266,
	-1000, -1000, -1000, -1000, -346, 18531, 2080, 121, 113, 47042,
	-1000, -1000, -1000, -1000, 2356, 1848, -1000, 404, -1000, -1000,
	-1000, -1000, -1000, -1000, 43727, -1000, 999, -1000, -1000, 2177,
	2143, 2383, 754, 2070, -1000, 2250, 1848, -1000, 18531, 2310,
	2261, 17868, 17868, 535, -1000, -1000, 268, -1000, -1000, -1000,
	2343, 25163, 47042, -1000, 32456, 381, -1000, 2149, -1000, -1000,
	-1000, 102, -1000, 436, 1814, -1000, 1774, -1000, 722, 836,
	480, 606, 577, 478, 470, 466, 465, 462, 448, 443,
	441, 468, -1000, 805, 805, -110, -115, 700, 529, 526,
	526, 870, 562, 2128, 2124, -1000, -1000, 805, 805, 805,
	453, 805, 805, 805, 805, 405, 403, 805, 805, 805,
	805, 805, 805, 805, 805, 805, 805, 805, 805, 805,
	805, 805, 805, 805, 428, 2149, 370, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47042, 269, 47042, -1000, 678, 47042, 47042, -1000,
	1205, 1186, 937, -1000, -1000, 937, 242, 937, 937, 937,
	937, 256, 856, 100, -1000, 238, 371, 360, 364, 915,
	352, -1000, -1000, 358, 915, 1545, -1000, 782, 362, 231,
	-1000, 937, 937, -1000, -1000, 11876, 161, 11876, 11876, -1000,
	2129, -1000, -1000, -1000, -1000, -1000, 1216, -1000, -1000, -1000,
	-1000, 18, 556, -1000, -1000, -1000, -1000, 45716, 43064, 325,
	-1000, -1000, 59, -1000, -1000, 1647, 1400, 18531, 1331, -1000,
	1125, 731, -1000, -1000, -1000, -1000, -1000, 681, -1000, 19194,
	19194, 19194, 19194, -1000, -1000, 1818, 42401, 1818, 1818, 19194,
	1818, -1000, 19194, 1818, 1818, 1818, 18531, 1818, 1818, 1818,
	1818, -1000, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	-1000, -1000, -1000, -1000, 1818, 674, 1818, 1818, 1818, 1818,
	1818, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1818,
	1818, 1818, 1818, 1818, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21183, 1360,
	1358, 1352, -1000, 15879, 1818, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47042, -1000, 1818, 296, 45716,
	45716, 430, 2250, 1848, -1000, 2356, 2357, 404, 2582, 1482,
	1502, 1348, 1848, 1727, 47042, -1000, 1823, -1000, -1000, -1000,
	-1000, 2024, 1290, 1541, -1000, -1000, -1000, -1000, 2107, 18531,
	-1000, -1000, 2367, -1000, 22510, 672, 2366, 41738, -1000, 535,
	535, 1768, 503, 103, -1000, -1000, -1000, -1000, 815, 29141,
	-1000, -1000, -1000, -1000, -1000, 1660, 47042, -1000, -1000, 4467,
	1227, -1000, 1886, -1000, 2267, 1645, -1000, 1846, 18531, 1896,
	587, 1227, 584, 580, 573, -1000, -11, -1000, -1000, -1000,
	-1000, -1000, -1000, 805, 805, 805, -1000, 433, 2309, 4054,
	4403, -1000, -1000, -1000, 41075, 1885, 1227, -1000, 1884, -1000,
	901, 633, 676, 676, 1227, -1000, -1000, 46379, 1227, 899,
	898, 1227, 1227, 45716, 45716, -1000, 40412, -1000, 39749, 39086,
	1185, 45716, 38423, 37760, 37097, 36434, 35771, -1000, 1951, -1000,
	1883, -1000, -1000, -1000, 46379, 1227, 1227, 46379, 45716, 46379,
	47042, 1227, -1000, -1000, 442, -1000, -1000, 1181, 1180, 1179,
	805, 805, 1171, 1527, 1524, 1503, 805, 805, 1170, 1495,
	31130, 1486, 342, 1151, 1150, 1145, 1159, 1484, 207, 1471,
	1140, 1088, 1141, 45716, 1882, 47042, -1000, 350, 832, 744,
	814, 2149, 2073, 1752, 548, 582, 1227, 530, 530, 45716,
	-1000, 13883, -1000, 581, -1000, -1000, -1000, -1000, 1468, 18531,
	-1000, 917, 915, 915, -1000, -1000, -1000, -1000, -1000, -1000,
	937, 47042, 917, -1000, -1000, -1000, 915, 937, 47042, 937,
	937, 937, 937, 915, 915, 915, 937, 47042, 47042, 47042,
	47042, 47042, 47042, 47042, 47042, 47042, 11876, 782, 937, -353,
	-1000, 1455, -1000, -1000, 1980, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11876, 11876, -1000, -1000,
	-1000, -1000, -1000, 1750, -1000, 249, 86, 264, -1000, 35108,
	426, 812, -1000, 426, -1000, -1000, -1000, 1749, 34445, -1000,
	-358, -361, -373, -375, -1000, -1000, -1000, -376, -377, -1000,
	-1000, -1000, 18531, 18531, 18531, 18531, -142, -1000, 1069, 19194,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 154, 1112, 19194,
	19194, 19194, 19194, 19194, 19194, 19194, 19194, 19194, 19194, 19194,
	19194, 19194, 19194, 19194, -1000, -1000, 27152, 6063, 6063, 731,
	731, 731, 731, -1000, -74, 1732, 46379, -1000, -1000, -1000,
	662, 18531, 18531, 731, -1000, 1227, 15879, 19857, 17868, 17868,
	18531, 825, 1400, 46379, 18531, -1000, 1348, -1000, -1000, -1000,
	1070, -1000, 888, 2122, 2122, 2122, 2122, 18531, 18531, 18531,
	18531, 18531, 18531, 18531, 18531, 18531, 18531, 2122, 45716, 45716,
	1442, 18531, 18531, 18531, 18531, 18531, 18531, 14552, 18531, 18531,
	19194, 18531, 18531, 18531, 1348, 18531, 18531, 18531, 18531, 18531,
	18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531,
	18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531, 18531,
	18531, 18531, 1348, 18531, 1342, 18531, 18531, 17868, 13214, 17868,
	17868, 17868, 17868, 17868, -1000, -1000, -1000, -1000, -1000, 18531,
	18531, 18531, 18531, 18531, 18531, 18531, 18531, 1348, 18531, 18531,
	18531, 18531, 18531, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1422, 1410, 1383, 18531, -1000, 1730, -1000,
	-48, 24500, 18531, 1450, 2365, 1908, 45716, -1000, -1000, -1000,
	2250, -1000, 2250, 1422, 2030, 17868, -1000, -1000, 2267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1467, -1000, 47042,
	1727, 2213, 45716, 2011, 1447, 461, -1000, 18531, 18531, 1719,
	-1000, 1605, 47042, -1000, -142, -1000, 33782, -1000, -1000, 11207,
	47042, 439, 47042, -1000, 23837, 33119, 263, -1000, 103, 1705,
	-1000, 68, 83, 15215, 730, -1000, -1000, -1000, 700, 20520,
	1618, 730, 183, -1000, -1000, -1000, 1846, -1000, 1846, 1846,
	1846, 1846, 461, 461, 461, 461, -1000, -1000, -1000, -1000,
	-1000, 1878, 1863, -1000, 1846, 1846, 1846, 1846, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1862, 1862, 1862, 1861, 1861,
	1847, 1847, 517, -1000, 18531, -1000, -1000, 326, 32456, 2176,
	1139, 2126, 350, 532, 1906, 1227, 1227, 1227, 532, -1000,
	1284, 1264, 1245, -1000, -449, 1717, -1000, -1000, 2308, -1000,
	-1000, 932, 943, 924, 989, 45716, 310, 435, -1000, 511,
	-1000, 32456, 1227, 886, 676, 1227, -1000, 1227, -1000, -1000,
	-1000, -1000, -1000, 1227, -1000, -1000, 1714, -1000, 1651, 998,
	918, 986, 912, 1714, -1000, -1000, -84, 1714, -1000, 1714,
	-1000, 1714, -1000, 1714, -1000, 1714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 817, 248, -203, 45716, 310,
	547, -1000, 544, 27152, -1000, -1000, -1000, 27152, 27152, -1000,
	-1000, -1000, -1000, 1441, 1440, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -433, 47042, -1000, 332, 811, 408,
	425, 384, 47042, 565, 2239, 2231, 2229, 2218, 2216, 390,
	386, 47042, 47042, 530, 1956, 47042, 2190, 47042, -1000, -1000,
	-1000, -1000, 463, 47042, -1000, 369, -1000, -1000, -1000, -1000,
	-1000, -1000, 1400, 47042, -1000, -1000, 937, 937, -1000, -1000,
	47042, 937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	937, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47042, -1000, -1000, -1000,
	-1000, 18, 258, -1000, -1000, 45716, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -20, -1000, 93, 53, 400,
	-1000, -1000, -1000, -1000, -1000, 2246, -1000, 1400, 890, 860,
	-1000, 1818, -1000, -1000, 1042, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 154, 19194, 19194, 19194, 1986, 583, 1704, 2021,
	1226, 1297, 1297, 1091, 1091, 735, 735, 735, 735, 735,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1432, -1000,
	1818, 46379, 1638, 13214, 2228, 2159, 1348, 2974, -1000, 1617,
	-1000, 1617, 1959, 831, -1000, 18531, 1348, 2960, -1000, -1000,
	1348, 1348, 1348, 18531, -1000, -1000, 18531, 18531, 18531, 18531,
	2126, 2126, 2126, 2126, 2126, 2126, 2126, 2126, 2126, 2126,
	18531, 1713, 1711, 2359, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1622, 2126, 2126, 2126, 2126,
	2126, 18531, 1626, -1000, -1000, -1000, 1299, 2929, 1663, 2922,
	2126, 2126, -1000, 2126, 2914, 2892, 1348, 1647, 1348, 1709,
	-1000, 2887, 2126, 2882, 2873, 2866, 2140, 2849, 2843, 2824,
	2126, 2126, 2126, 2057, 2816, 2810, 2805, 2799, 2788, 2768,
	2753, 2703, 2677, 2126, -146, 2126, 1348, -1000, -1000, -1000,
	-1000, -1000, 2671, 2034, 1348, 1708, 1818, 657, -1000, -1000,
	1617, 1348, 1348, 1617, 1617, 2660, 2656, 2648, 2635, 2541,
	2447, 2126, 2126, -1000, 2126, 2440, 2400, 1996, 1992, 1348,
	-1000, 1383, 47042, -1000, -313, -1000, 33, 753, 1818, -1000,
	31130, 1348, -1000, 5562, -1000, 1095, -1000, -1000, -1000, 28478,
	1668, 2267, -1000, -1000, 1818, 1597, -1000, -1000, 461, 175,
	27815, 724, 724, 206, 1400, 1400, 18531, -1000, -1000, -1000,
	-1000, -1000, -1000, 655, 2333, 396, 1818, -1000, 1667, 2422,
	-1000, -1000, -1000, 2212, 21847, -1000, -1000, 1818, 1818, 47042,
	1654, 1589, -1000, 631, -1000, 1229, 1705, 103, 80, -1000,
	-1000, -1000, -1000, 1400, -1000, 1236, 440, 554, -1000, 509,
	-1000, -1000, -1000, -1000, 2100, 145, -1000, -1000, -1000, 290,
	461, -1000, -1000, -1000, -1000, -1000, -1000, 1430, 1430, -1000,
	-1000, -1000, -1000, -1000, 1134, -1000, -1000, -1000, -1000, 1133,
	-1000, -1000, 1123, -1000, -1000, 2338, 1936, 326, -1000, -1000,
	805, 1424, -1000, -1000, 2102, 805, 805, 45716, -1000, -1000,
	1590, 2176, 332, 47042, 838, 1943, -1000, 1906, 1906, 1906,
	47042, -1000, -1000, -1000, -1000, -1000, -1000, -438, 79, 432,
	-1000, -1000, -1000, 339, 45716, 1587, -1000, 306, -1000, 1571,
	-1000, 45716, -1000, 1566, 1860, 1227, 1227, -1000, -1000, -1000,
	45716, 1818, -1000, -1000, -1000, -1000, 578, 2142, 291, -1000,
	-1000, -169, -1000, -1000, 310, 306, 46379, 1227, 730, -1000,
	-1000, -1000, -1000, -1000, -439, 1558, 570, 319, 402, 47042,
	47042, 47042, 47042, 47042, 613, -1000, -1000, 88, -1000, -1000,
	285, -1000, -1000, -1000, -1000, 285, -1000, -1000, -1000, -1000,
	379, 531, -1000, 47042, 47042, 679, -1000, -1000, -1000, -1000,
	-1000, -1000, 915, -1000, -1000, 915, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2146, 47042,
	46, -393, -1000, -389, 18531, -1000, -1000, -1000, -1000, 1200,
	559, 1704, 19194, 19194, 19194, -1000, -1000, -1000, 983, 983,
	27152, -1000, 18531, 17868, -1000, -1000, 18531, 18531, 804, -1000,
	18531, 1165, -1000, 18531, -1000, -1000, -1000, 1383, 2126, 2126,
	2126, 2126, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1767, 18531, 18531, 18531, 1348, 361, -1000, -1000,
	-1000, -1000, -1000, 2351, -1000, 18531, -1000, 27152, 18531, 18531,
	18531, -1000, -1000, -1000, 18531, 18531, -1000, -1000, 18531, 18531,
	-1000, 18531, 18531, 18531, -1000, 18531, 18531, 18531, 18531, -1000,
	-1000, -1000, -1000, 18531, 18531, 18531, 18531, 18531, 18531, 18531,
	18531, 18531, 18531, -1000, -1000, 32456, 91, -146, 1342, 91,
	1342, -1000, 17868, 12545, -1000, -1000, -1000, -1000, -1000, 18531,
	18531, 18531, 18531, 18531, 18531, -1000, -1000, -1000, 18531, 18531,
	-1000, 18531, -1000, 18531, -1000, -1000, -1000, -1000, -1000, 753,
	-1000, 676, 676, 676, 45716, -1000, -1000, -1000, -1000, 1699,
	-1000, 2201, -1000, 2041, 2039, 2339, 2333, -1000, 23837, 2267,
	-1000, -1000, 45716, -301, -1000, 2069, 2045, 724, 724, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10538, 2250, 18531, 1942,
	46379, 158, -1000, 23174, 45716, 46379, 23837, 23837, 23837, 23837,
	23837, -1000, 1982, 1976, -1000, 1974, 1968, 2009, 47042, -1000,
	1422, 1556, -1000, 18531, 25826, 1692, 23837, -1000, -1000, 23837,
	47042, 9869, -1000, -1000, 43, 32, -1000, -1000, -1000, -1000,
	700, -1000, -1000, 1506, 2210, 2094, -1000, -1000, -1000, -1000,
	-1000, 1551, -1000, 1539, 1694, 1535, 1533, 248, -1000, 1895,
	2135, 805, 805, -1000, 1121, -1000, 1227, 1420, 1415, -1000,
	-1000, -1000, 560, -1000, 2184, 47042, 1939, 1938, 1937, -1000,
	-447, 1114, 1858, 1710, 18531, 1852, 2304, 1689, 45716, -1000,
	-1000, 46379, -1000, 292, -1000, 326, 45716, -1000, -1000, -1000,
	435, 47042, -1000, 7047, -1000, -1000, -1000, 306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47042, 343, -1000, 1849, 1116,
	-1000, -1000, 1901, -1000, -1000, -1000, -1000, 280, 392, 1402,
	282, 1368, 282, -1000, 47042, 667, 1936, 47042, -1000, -1000,
	-1000, 937, 937, -1000, -1000, 2109, -1000, 1227, 2126, 19194,
	19194, -1000, 731, 308, -124, 1846, 1846, -1000, 1846, 1847,
	-1000, 1846, 245, 1846, 235, 1846, -1000, -1000, 1348, 1348,
	1383, -1000, 1978, 1917, -1000, 1400, 18531, 2330, -1000, -1000,
	-1000, -1000, -1000, -17, 2321, 2317, 2126, -1000, 1842, 1841,
	18531, 2126, 1348, 1772, 2126, 2126, 2126, 2126, -1000, 1400,
	1383, 2311, 1383, 2126, 2126, 2307, 318, 2126, 1513, 1513,
	1513, 1513, 1513, 1383, 1383, 1383, 1383, 45716, -1000, -146,
	-1000, -1000, -187, -188, -1000, 1348, -146, 1693, 1348, -1000,
	1762, 1724, 2299, 1649, 2126, 2291, 2126, 2126, 2126, 1632,
	-1000, 2243, 2243, 2243, 1500, 1095, 47042, -1000, -1000, -1000,
	-1000, 2333, 2327, 1691, -1000, -1000, 175, 476, -1000, 2058,
	2045, -1000, 2303, 2059, 2300, -1000, -1000, -1000, -1000, -1000,
	1400, -1000, 2170, 1625, -1000, 809, 1669, -1000, -1000, 17205,
	1510, 2038, 626, 1500, 1681, 2422, 1921, 1935, 3146, -1000,
	-1000, -1000, -1000, 1975, -1000, 1927, -1000, -1000, 1823, -1000,
	2280, 439, 23837, 1634, 1634, -1000, 618, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 968, 6423, 2379, -1000, 1366, -1000,
	1221, 199, 1113, -1000, -1000, 805, 805, -1000, 883, 878,
	-1000, 47042, 1838, -1000, 461, 1363, 461, 1084, -1000, -1000,
	1044, -1000, -1000, -1000, -1000, 1815, 1948, -1000, -1000, -1000,
	-1000, 47042, -1000, -1000, 47042, 47042, 47042, 1833, 2298, -1000,
	18531, 1832, 807, 2274, 45716, 45716, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 538, 805, -414,
	385, 382, 805, 805, 805, -448, -1000, -1000, 1478, 1465,
	-1000, -107, -1000, 18531, -1000, -1000, -1000, 1128, 1128, 1360,
	1358, 1352, -1000, 1823, -1000, -1000, -1000, 1540, -1000, -1000,
	-90, 45716, 45716, 45716, 45716, -1000, -1000, 1049, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	731, 1348, 365, -95, 1348, -1000, -1000, 461, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18531, -1000,
	18531, -1000, 1400, 18531, 2250, 1349, 18531, 18531, -1000, 1033,
	1032, 2126, -1000, -1000, -1000, 18531, -1000, -1000, -1000, -1000,
	-1000, 18531, -1000, -1000, -1000, 18531, 227, 983, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1348, 438,
	-1000, -1000, -1000, -1000, 2312, -1000, 1348, 18531, -1000, -1000,
	18531, -1000, 18531, 18531, -1000, 18531, -1000, 18531, -1000, -1000,
	-1000, -1000, 18531, 1818, 2072, 1818, 1818, 25826, -1000, -1000,
	2327, 2301, 2289, 2053, 2055, 2055, 2058, -1000, 2285, 2284,
	-1000, 1335, 2279, 1318, 871, -1000, 46379, 18531, 158, -1000,
	427, 45716, 158, 45716, -1000, 2275, -1000, -1000, 18531, 1829,
	-1000, 18531, -1000, -1000, -1000, -1000, 6063, 2333, 1634, -1000,
	-1000, 742, -1000, 18531, -1000, -1000, -1000, 8170, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1315, 1294, -1000, -1000,
	1825, 18531, -1000, -1000, -1000, 1479, 1475, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1823, -1000, -1000, -1000, -1000,
	435, -443, 2252, 45716, 1027, -1000, 1461, 1689, 421, 158,
	1288, 805, 805, 805, 1023, 1011, 31130, 1438, -1000, 45716,
	500, -1000, 435, -1000, -120, -121, 2126, -1000, -1000, 2200,
	-1000, -1000, 12545, -1000, -1000, 1822, 1903, -1000, -1000, -1000,
	-1000, 2010, -80, -102, -1000, -1000, 2126, 2126, 2214, 1348,
	-1000, 2126, 2126, 1462, 1439, -1000, 2126, 1383, 1575, -1000,
	227, 1348, 1934, -1000, -1000, 6063, -1000, -1000, 2275, 2273,
	91, -1000, -1000, 315, 91, 1400, 1531, 2126, 1517, 1474,
	2126, 2126, 26489, -1000, 2269, 2232, 31793, 31793, 753, 2301,
	-154, 18531, 18531, 2049, 1005, -1000, -1000, -1000, -1000, 1286,
	1266, -1000, 1251, -1000, 2373, -1000, 1400, -1000, 158, -1000,
	601, 1669, -1000, 2250, 1400, 45716, 1400, 147, 2275, -1000,
	2126, -1000, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, -1000, -1000, 45716, 2198, -1000, -1000, 2196, 1429,
	74, -1000, 1411, 1689, -1000, -1000, 153, -1000, 18531, -1000,
	31130, 1248, 1239, -1000, -1000, -1000, -1000, -448, -1000, -1000,
	-1000, -1000, -1000, -1000, 404, 1687, -1000, 795, 45716, 47042,
	-1000, 1987, -1000, -1000, -1000, 18531, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18531, -1000, 1348, 1933, -1000, -279,
	-1000, -421, 18531, -146, -1000, -1000, -146, -1000, 18531, -1000,
	-1000, 18531, -1000, 18531, -1000, -1000, 1407, -1000, -1000, -1000,
	-1000, -1000, 1407, 1407, -1000, -154, -1000, 1670, -1000, 45716,
	1400, 1647, -1000, 996, -1000, -1000, -1000, -1000, -1000, 46379,
	1669, 45716, -1000, 1391, 1348, 1818, 2250, -1000, 1388, -1000,
	404, -1000, 1820, 1710, -1000, -1000, -1000, 16542, -1000, -1000,
	-1000, -1000, -1000, 216, -88, 12545, 9200, 1386, -1000, -86,
	2126, 1383, -1000, -380, -1000, -1000, -1000, -1000, 169, -1000,
	-1000, 1647, -1000, -1000, 1445, 1405, 1313, 30467, -1000, -1000,
	-1000, -1000, -154, -1000, -1000, 2194, -1000, -1000, 1631, -1000,
	-1000, 25826, 45053, -1000, -72, 368, -88, 18531, 1819, 1348,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -7, -1000,
	-1000, -1000, -1000, -1000, 1901, -99, -1000, -1000, -1000, 177,
	-399, -175, -190, -1000, -1000, 19194, -1000, 18531, -1000, 18531,
	-1000, 18531, -1000, -1000, -1000, 45716, 1818, -1000, 1347, -1000,
	3623, -201, 1928, -1000, -13, -1000, -1000, -1000, 952, 1234,
	-1000, -1000, -1000, -1000, -1000, -1000, 2175, 45716, -1000, 515,
	-1000, -1000, -90, -104, 851, -1000, -1000, -1000, -1000, -1000,
	1244, 1161, 2126, -1000, 45716, -1000, 45053, -195, 730, 6063,
	-1000, 1926, 1915, 2337, -1000, -1000, -1000, -1000, -1000, -1000,
	-454, 1339, 347, -1000, -1000, 177, -1000, 18531, -1000, 18531,
	-1000, 1348, -1000, -1000, 2182, 147, -1000, 2358, -1000, 2369,
	803, 803, -1000, 1002, -454, -1000, -1000, 2126, 2126, -1000,
	-247, -1000, -1000, -1000, -1000, -1000, 510, 1051, -1000, -1000,
	-1000, -1000, -1000, 6063, -1000, -1000, -1000, 244, 244, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3032, 3030, 25, 1, 34, 33, 3027, 105, 126,
	229, 52, 213, 106, 3025, 189, 3019, 3018, 3016, 3013,
	3011, 3009, 2408, 2398, 2397, 3006, 3004, 3003, 2998, 2996,
	2994, 2993, 2992, 2987, 2986, 185, 174, 207, 2983, 2979,
	2976, 133, 202, 93, 98, 205, 2973, 2972, 88, 2971,
	2969, 2968, 201, 198, 197, 920, 2967, 196, 129, 54,
	2960, 2959, 2956, 2953, 2950, 2948, 2945, 2939, 2936, 2934,
	2928, 2925, 2924, 2923, 2922, 2920, 2913, 2911, 2906, 293,
	2905, 2900, 16, 2899, 91, 2897, 2889, 2884, 2882, 2878,
	7, 2874, 2873, 20, 42, 2866, 2865, 56, 2864, 2862,
	2861, 2852, 2851, 14, 2849, 22, 2848, 38, 2846, 2843,
	141, 2840, 2839, 2837, 39, 2835, 2833, 2831, 2830, 2829,
	2825, 2822, 158, 2821, 2817, 2815, 180, 243, 2811, 2808,
	182, 130, 120, 2807, 2806, 122, 206, 2804, 135, 2800,
	2796, 2794, 164, 2793, 2148, 2788, 2786, 69, 85, 2785,
	50, 2783, 2782, 9, 90, 72, 4, 81, 83, 2779,
	2778, 67, 96, 2775, 119, 2773, 2771, 111, 78, 2770,
	112, 115, 2768, 2767, 17, 21, 2766, 35, 29, 36,
	74, 2764, 2763, 132, 2761, 2755, 2754, 102, 2752, 2733,
	3085, 2730, 107, 150, 117, 80, 2728, 49, 75, 2724,
	2721, 2719, 2718, 2706, 57, 2690, 2688, 2686, 155, 151,
	181, 2685, 46, 45, 59, 146, 2684, 53, 92, 209,
	183, 2677, 2672, 154, 148, 2668, 2667, 65, 44, 41,
	2666, 123, 143, 134, 26, 104, 144, 2665, 2663, 68,
	79, 2662, 2661, 2659, 2656, 184, 2655, 2653, 77, 2634,
	64, 2631, 186, 2628, 6, 70, 2627, 48, 175, 2617,
	86, 2611, 2601, 73, 131, 76, 37, 2600, 172, 177,
	142, 195, 2595, 2593, 60, 2592, 2590, 2585, 203, 357,
	2583, 2580, 100, 190, 167, 162, 99, 2576, 353, 2575,
	2570, 101, 2, 4558, 2569, 40, 178, 2562, 2561, 5977,
	153, 43, 24, 2560, 128, 2558, 2556, 2551, 2546, 208,
	200, 114, 176, 63, 2544, 2540, 2538, 13, 2536, 2531,
	2530, 2526, 2525, 2523, 94, 32, 31, 30, 264, 84,
	11, 109, 173, 168, 87, 2520, 2519, 2518, 139, 113,
	2515, 170, 169, 140, 179, 2505, 192, 160, 136, 2501,
	116, 28, 2500, 2498, 2497, 2487, 110, 2484, 2483, 2482,
	2478, 165, 157, 138, 95, 2476, 103, 137, 163, 161,
	62, 2475, 47, 2473, 2468, 27, 204, 23, 2466, 12,
	118, 149, 2465, 4309, 199, 2461, 15, 390, 171, 2457,
	2454, 5, 8, 10, 2447, 2445, 2443, 2442, 152, 2439,
	2437, 2435, 2425, 19, 51, 18, 3, 121, 89, 2423,
	2420, 156, 159, 2417, 2412, 2410, 2406, 3100, 0, 145,
	2402, 210,
}

//line sql.y:8106
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 415, 416, 416, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 383, 384, 384, 258, 258, 33, 74, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 108, 108, 23,
	24, 24, 24, 24, 419, 419, 185, 185, 183, 183,
	184, 184, 263, 263, 25, 267, 267, 269, 269, 269,
	269, 259, 259, 259, 26, 26, 268, 268, 270, 270,
	270, 273, 273, 273, 273, 312, 312, 312, 27, 27,
	27, 27, 27, 27, 27, 128, 128, 386, 386, 385,
	379, 379, 378, 378, 377, 382, 382, 381, 381, 380,
	39, 40, 49, 49, 49, 49, 50, 51, 387, 387,
	352, 56, 56, 55, 55, 55, 55, 55, 55, 57,
	57, 53, 53, 52, 52, 54, 54, 354, 354, 340,
	340, 353, 353, 353, 353, 353, 353, 353, 339, 339,
	139, 139, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 402,
	402, 402, 401, 401, 238, 238, 238, 238, 238, 238,
	238, 238, 149, 149, 161, 161, 161, 161, 161, 147,
	147, 148, 146, 146, 146, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 160, 160, 156, 156, 156, 157,
	157, 157, 158, 158, 403, 403, 403, 403, 317, 317,
	317, 317, 320, 320, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 319, 319, 319, 319, 319, 319, 319,
	321, 321, 321, 321, 321, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 323, 323, 323, 323, 323, 323, 323, 323, 338,
	338, 324, 324, 332, 332, 333, 333, 334, 334, 334,
	335, 335, 335, 336, 336, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 331, 331, 330, 330, 330, 341,
	366, 366, 365, 365, 363, 363, 363, 363, 363, 363,
	363, 363, 350, 350, 360, 360, 360, 360, 360, 349,
	349, 345, 345, 345, 346, 346, 347, 347, 344, 344,
	348, 348, 362, 362, 361, 361, 342, 342, 343, 343,
	368, 404, 404, 404, 404, 404, 405, 405, 369, 394,
	396, 396, 396, 395, 395, 392, 393, 391, 391, 391,
	391, 391, 84, 84, 84, 286, 286, 287, 287, 358,
	358, 357, 357, 357, 359, 359, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 281, 281, 281,
	390, 390, 390, 390, 390, 390, 389, 389, 389, 355,
	355, 355, 388, 388, 58, 58, 218, 218, 407, 407,
	408, 408, 408, 46, 46, 46, 46, 46, 46, 45,
	45, 45, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 47, 47, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 110, 110, 111, 111, 111, 111, 113,
	113, 113, 371, 371, 59, 59, 3, 3, 173, 175,
	176, 176, 174, 174, 174, 174, 174, 174, 61, 61,
	60, 60, 178, 177, 179, 179, 179, 1, 1, 2,
	2, 4, 4, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 337, 337, 337, 370, 370,
	372, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 116, 115, 115, 114, 117, 117, 117, 117, 117,
	117, 117, 117, 374, 374, 374, 62, 62, 375, 325,
	326, 327, 5, 6, 351, 373, 124, 124, 29, 38,
	38, 30, 30, 30, 30, 31, 31, 63, 64, 414,
	414, 68, 68, 68, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 280,
	280, 289, 289, 279, 279, 304, 304, 304, 282, 282,
	282, 283, 283, 400, 400, 400, 276, 276, 66, 66,
	66, 305, 305, 305, 305, 69, 69, 409, 409, 410,
	410, 411, 411, 411, 70, 71, 71, 307, 307, 308,
	308, 72, 73, 85, 85, 85, 85, 85, 85, 85,
	86, 86, 86, 86, 109, 109, 109, 15, 15, 15,
	15, 81, 81, 81, 14, 14, 17, 67, 67, 75,
	397, 397, 398, 399, 399, 399, 399, 76, 78, 32,
	32, 32, 32, 32, 32, 134, 134, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 129,
	129, 129, 123, 123, 420, 79, 80, 80, 127, 127,
	127, 120, 120, 120, 126, 126, 126, 16, 16, 18,
	262, 262, 19, 19, 131, 131, 133, 133, 133, 133,
	133, 135, 135, 135, 135, 135, 135, 135, 130, 130,
	132, 132, 132, 132, 297, 297, 297, 296, 296, 167,
	167, 169, 168, 168, 170, 170, 171, 171, 171, 171,
	216, 216, 193, 193, 255, 255, 256, 256, 254, 254,
	261, 261, 257, 257, 257, 257, 264, 264, 172, 172,
	172, 172, 180, 180, 181, 181, 182, 182, 306, 306,
	302, 302, 302, 301, 301, 186, 186, 186, 188, 187,
	187, 187, 187, 189, 189, 191, 191, 190, 190, 192,
	197, 197, 196, 196, 194, 194, 194, 194, 195, 195,
	195, 195, 198, 198, 144, 144, 144, 144, 144, 144,
	144, 159, 159, 159, 159, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 245, 245, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 153, 221, 221, 220,
	220, 87, 87, 87, 88, 88, 89, 89, 89, 89,
	89, 90, 90, 90, 90, 90, 145, 145, 92, 92,
	91, 91, 211, 211, 294, 294, 93, 94, 94, 97,
	97, 96, 95, 95, 101, 101, 98, 98, 100, 100,
	99, 102, 102, 103, 104, 104, 277, 277, 199, 199,
	207, 207, 207, 207, 200, 200, 200, 200, 200, 200,
	200, 208, 208, 208, 215, 209, 209, 205, 205, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 164, 164, 164, 164, 226,
	226, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 165, 165,
	165, 165, 166, 166, 166, 166, 166, 166, 166, 314,
	314, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 421, 421, 328, 328, 328, 328, 206, 206,
	206, 206, 206, 125, 125, 125, 125, 125, 311, 311,
	311, 315, 315, 315, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 316,
	316, 224, 224, 121, 121, 222, 222, 223, 225, 225,
	217, 217, 217, 217, 219, 219, 202, 202, 202, 227,
	227, 228, 228, 105, 106, 106, 107, 107, 229, 229,
	231, 230, 230, 232, 233, 233, 233, 234, 234, 235,
	235, 235, 48, 48, 48, 48, 48, 43, 43, 43,
	43, 44, 44, 44, 44, 136, 136, 136, 136, 138,
	138, 137, 137, 82, 82, 83, 83, 83, 413, 413,
	413, 412, 412, 412, 412, 412, 412, 142, 142, 143,
	143, 143, 140, 140, 141, 141, 252, 252, 236, 236,
	236, 243, 243, 243, 239, 239, 241, 241, 241, 242,
	242, 242, 240, 249, 249, 251, 251, 250, 250, 246,
	246, 247, 247, 248, 248, 248, 244, 244, 201, 201,
	201, 201, 201, 253, 253, 253, 253, 265, 265, 212,
	212, 214, 214, 213, 213, 163, 266, 266, 274, 271,
	271, 272, 272, 298, 298, 298, 275, 275, 288, 288,
	284, 284, 285, 285, 278, 278, 290, 290, 290, 77,
	210, 210, 367, 367, 364, 293, 293, 295, 295, 299,
	299, 303, 303, 300, 300, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 417, 418, 309, 310, 310, 310,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	2, 3, 6, 12, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	6, 4, 7, 8, 8, 8, 6, 3, 1, 1,
	5, 0, 1, 1, 1, 1, 2, 2, 2, 0,
	1, 4, 4, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 3, 3, 2, 2, 4, 4, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 4, 1,
	3, 2, 3, 3, 3, 2, 2, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 4, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	1, 2, 3, 7, 0, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 1, 6, 3, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	8, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 6, 5, 9, 6,
	9, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 5, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	2, 2, 1, 1, 1, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -415, -79, -420, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -65, -66, -69, -70, -71, -72, -73, -14, -17,
	-67, -32, -33, -74, -75, -76, -77, -78, -16, -18,
	-19, -9, -8, -13, 10, 11, -108, -34, 33, -39,
	-49, 225, -50, -40, 226, -51, 228, 227, 265, 229,
	249, 628, 258, 75, 313, 314, 316, 317, 318, 319,
	-109, 624, 263, 264, 231, 37, 46, 34, 35, 38,
	235, 271, 272, 234, -10, -35, 9, -417, 12, 456,
	260, 259, 29, -12, 518, 87, -80, -416, 673, -252,
	-236, 23, 34, 30, -235, -231, -127, -236, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -352, -354, -12,
	26, 87, 159, 9, 87, -79, -56, -55, -53, -52,
	-54, -57, 32, -46, -47, -376, -45, -42, 230, 227,
	275, 123, 124, 265, 266, 267, 229, 249, 264, 268,
	263, 284, -41, 82, 34, 518, 521, -359, 226, 232,
	233, 228, 457, 126, 125, 76, -356, 372, 551, 643,
	-57, 645, 101, 104, 644, 45, 239, 646, 647, 648,
	558, 649, 248, 650, 651, 652, 653, 659, 599, 660,
	661, 662, 127, 8, -79, -303, -299, 91, -292, 515,
	251, 549, 550, 300, 82, 42, 524, 369, 372, 551,
	486, 643, 313, 329, 323, 491, 492, 493, 352, 344,
	516, 552, 525, 303, 252, 288, 637, 342, 135, 645,
	307, 553, 266, 377, 378, 554, 379, 101, 316, 419,
	658, 306, 555, 656, 104, 644, 321, 80, 485, 52,
	640, 45, 261, 340, 234, 336, 646, 289, 556, 527,
	282, 126, 123, 665, 37, 332, 51, 31, 655, 125,
	50, 647, 150, 557, 648, 558, 381, 359, 631, 49,
	382, 267, 559, 85, 272, 520, 310, 639, 383, 505,
	333, 384, 299, 654, 231, 560, 619, 611, 612, 385,
	386, 632, 364, 360, 365, 507, 561, 411, 490, 387,
	615, 616, 672, 53, 562, 563, 633, 124, 564, 79,
	649, 81, 327, 328, 565, 297, 250, 510, 511, 413,
	356, 468, 475, 476, 111, 112, 471, 113, 477, 114,
	478, 479, 480, 469, 115, 108, 470, 481, 482, 357,
	358, 116, 483, 110, 109, 472, 474, 117, 484, 248,
	36, 388, 517, 301, 59, 305, 276, 414, 47, 362,
	669, 46, 626, 512, 566, 630, 355, 351, 465, 54,
	567, 568, 569, 570, 487, 650, 354, 326, 350, 664,
	4, 294, 488, 651, 63, 233, 367, 366, 368, 283,
	410, 347, 571, 572, 573, 255, 83, 574, 337, 22,
	575, 576, 389, 290, 577, 57, 578, 579, 417, 264,
	580, 55, 652, 40, 581, 269, 666, 653, 582, 583,
	584, 625, 585, 271, 586, 391, 587, 613, 614, 390,
	361, 363, 513, 278, 392, 236, 519, 588, 311, 331,
	268, 657, 589, 256, 501, 502, 503, 504, 638, 509,
	508, 270, 275, 263, 418, 257, 590, 591, 592, 593,
	594, 304, 610, 595, 596, 317, 659, 466, 44, 597,
	598, 599, 600, 601, 298, 293, 412, 421, 62, 84,
	374, 602, 603, 636, 325, 322, 291, 604, 314, 56,
	660, 661, 662, 285, 663, 494, 495, 496, 497, 10,
	670, 671, 489, 394, 127, 295, 296, 48, 348, 277,
	605, 308, 606, 338, 339, 353, 324, 349, 622, 315,
	620, 279, 395, 467, 265, 607, 420, 292, 370, 375,
	309, 523, 506, 284, 396, 635, 522, 498, 499, 346,
	343, 286, 500, 608, 624, 397, 240, 280, 281, 609,
	621, 398, 399, 302, 400, 401, 402, 403, 404, 407,
	408, 409, 406, 312, 405, 623, 617, 618, 287, 521,
	320, 341, 376, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 464, 238, -79, 238, -190, -299, 238, 238, 96,
	519, 644, -271, 408, 409, 378, -289, 380, 393, 388,
	398, 386, -280, 389, 391, 278, -400, 411, 238, 395,
	225, 381, 390, 399, 400, 302, 406, 401, 312, 405,
	287, 402, 403, 404, 407, -383, 177, 648, 663, 135,
	345, 385, 383, 412, 626, 91, -305, 91, 92, 93,
	-292, 315, -307, 320, -293, -383, -292, 318, -79, -79,
	-309, -309, -129, 626, 629, -209, -144, 143, -159, -162,
	-150, -154, -203, -204, -205, -206, -160, -219, -258, 166,
	167, 174, 144, -215, -163, 27, 514, 458, 457, 177,
	32, -153, 220, 69, 70, 460, 146, 58, 12, 433,
	434, -161, 428, 435, 430, 485, 487, 488, 489, 486,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	490, 462, 463, 118, 464, 108, 110, 109, 465, 466,
	467, 342, 512, 513, 507, 510, 511, 509, 508, 357,
	358, 468, 469, 470, 111, 112, 113, 114, 115, 116,
	117, 471, 474, 472, 473, 475, 476, 477, 482, 483,
	478, 479, 480, 481, 484, -89, -101, 540, 539, -102,
	-151, -152, -165, -166, -293, -299, 243, 427, 237, 172,
	456, -155, -148, -217, 107, 92, 93, -8, -213, 426,
	431, 432, 436, 429, 526, 528, 543, 544, 546, 531,
	536, 535, 538, 501, 502, 503, 504, 505, 506, 611,
	612, 613, 614, 615, 616, 617, 618, -383, -292, 91,
	-157, -156, -199, 94, 99, 102, 103, 105, -406, 261,
	338, 339, 119, -417, 641, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 394, 394, -190, -79, -79,
	-79, -79, -229, -127, -231, -10, -8, -417, -79, -8,
	-9, -13, -35, -37, 545, -36, -299, 100, -236, -252,
	13, 162, 43, 51, -234, -235, -12, -8, -144, 20,
	24, 25, -132, 168, -144, -299, -132, -278, 242, -79,
	-79, -267, -312, 315, -269, 412, 626, 411, -259, -272,
	91, -258, -271, 410, -12, -353, 159, -339, -343, -293,
	253, -369, 249, -190, -79, -362, -361, -293, -417, -128,
	-288, 239, 247, 246, 136, -387, 139, 295, 427, 237,
	-52, -53, -54, -271, 176, 647, -110, 270, 274, 88,
	88, -343, -342, -341, -388, 274, 253, -368, -360, 245,
	254, -349, 246, 247, -344, 239, 137, -388, -344, 244,
	254, 249, 253, 274, 274, 127, 274, 127, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 269, -350, 151,
	-350, 522, 522, -356, -388, 249, 239, -388, -388, 245,
	-290, -344, 241, 26, 241, 36, 36, -350, -350, -350,
	-271, 176, -350, -350, -350, -350, 282, 282, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, 238, -387, -136, 405, 302,
	82, -55, 284, -38, -190, -288, 239, 240, -387, 271,
	-190, 221, -190, -414, -190, 96, 96, -282, 159, 16,
	-282, -279, 394, 392, 379, 384, -282, -282, -282, -282,
	285, 377, -345, 239, 36, 250, 394, 285, 377, 285,
	286, 285, 286, 387, 397, 285, -304, 15, 162, 427,
	382, 386, 278, 238, 279, 240, 396, 286, -304, 90,
	-283, 159, 285, 394, 281, -282, -282, -310, -417, -295,
	-293, -291, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 345, 249, 176, 245, 457, 225,
	73, 526, 428, 430, 426, 433, 459, 460, 427, 380,
	32, 14, 528, 29, 259, 25, 39, 170, 227, 149,
	529, 262, 27, 260, 118, 121, 531, 23, 76, 254,
	15, 247, 41, 17, 532, 533, 18, 243, 242, 162,
	239, 71, 12, 220, 30, 158, 67, 534, 137, 535,
	536, 537, 538, 131, 69, 159, 21, 667, 431, 432,
	34, 627, 514, 273, 172, 74, 60, 629, 143, 429,
	539, 540, 119, 541, 122, 77, 634, 139, 19, 72,
	43, 542, 274, 543, 244, 668, 544, 415, 545, 160,
	228, 456, 70, 161, 641, 546, 642, 237, 393, 9,
	461, 33, 258, 246, 129, 68, 547, 238, 148, 462,
	463, 241, 132, 120, 8, 136, 35, 13, 75, 78,
	434, 435, 436, 58, 128, 518, 147, 16, 548, 416,
	141, 628, 422, 423, 424, 425, -383, 630, -310, -310,
	33, 92, -409, -410, -411, 518, 415, 241, -293, -190,
	-85, 619, 229, -86, 625, 24, 236, -134, 394, -122,
	177, 648, 631, 632, 633, 630, 391, 638, 636, 634,
	285, 635, 88, 139, 141, 142, 4, -144, 158, -200,
	151, 152, 153, 154, 155, 156, 157, 162, 143, 145,
	159, -245, 140, 163, 164, 165, 166, 167, 168, 169,
	171, 170, 172, 173, 160, 161, 176, 223, 224, -154,
	-154, -154, -154, -215, -221, -220, -417, -217, -383, -292,
	-299, -417, -417, -154, -277, -417, -417, -150, -417, -417,
	-417, -224, -144, -417, -417, -421, -417, -421, -421, -328,
	-417, -328, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, 221, -417,
	-417, -417, -417, -417, -328, -328, -328, -328, -328, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, 103, 99, 102, 94, -219, 105, 90,
	90, 90, 90, -8, -9, -209, -417, -309, -397, -398,
	-193, -190, -417, 302, -293, -293, 271, -234, -12, -8,
	-229, -235, -231, -8, -120, -133, 64, 65, -135, 25,
	39, 68, 66, 24, -418, 89, -418, -252, -418, 88,
	-37, -255, 87, 62, 44, 90, 90, 88, 22, -230,
	-232, -144, 15, -297, 4, -296, 26, -293, 90, 221,
	15, -191, 30, -190, -278, -278, 88, 91, 315, -268,
	-270, 413, 415, 151, -298, -293, 90, 32, 89, 88,
	-190, -317, -320, -322, -321, -323, -318, -319, 342, 343,
	177, 346, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 359, 33, 261, 338, 339, 340, 341, 360, 361,
	362, 363, 365, 366, 367, 368, 323, 344, 516, 324,
	325, 326, 327, 328, 329, 331, 332, 335, 333, 334,
	336, 337, -384, -383, 87, 64, 65, 89, 88, -324,
	87, -144, -136, 238, -383, 239, 239, 239, -79, 456,
	-350, -350, -350, 269, 20, -45, -42, -376, 19, -41,
	-42, 230, 123, 124, 227, 87, -339, 87, -348, -384,
	-383, 87, 137, 244, 136, -347, -344, -347, -348, -383,
	-217, -383, 137, 137, -383, -383, -264, -293, -264, -264,
	24, -264, 24, -264, 24, 96, -293, -264, 24, -264,
	24, -264, 24, -264, 24, -264, 24, 32, 79, 80,
	81, 32, 83, 84, 85, -217, -383, -383, -217, -339,
	-217, -190, -383, -271, 96, 96, 96, -350, -350, 96,
	90, 90, 90, -350, -350, 96, 90, -301, -299, 90,
	90, -389, 255, 299, 301, 96, 96, 96, 96, 32,
	90, -390, 32, 655, 654, 656, 657, 658, 90, 96,
	32, 96, 32, 96, -293, 87, -190, -142, 289, 225,
	227, 230, 77, 90, 305, 306, 303, 308, 309, 151,
	45, 88, 241, 238, -383, -284, 243, -284, -293, -300,
	-299, -291, -413, 88, -412, 23, 422, 423, 425, 383,
	424, 90, -144, -346, 15, 162, -304, -304, -282, -190,
	-346, -304, -282, -190, -282, -282, -282, -282, -304, -304,
	-304, -282, -299, -299, -190, -190, -190, -190, -190, -190,
	-190, -310, -283, -282, 630, 90, -276, 15, 77, -310,
	-310, 88, 321, 416, 417, -308, 318, -81, -293, 90,
	-15, -11, -23, -22, -24, 151, -15, 88, 518, -183,
	-190, 630, 630, 630, 630, 630, 630, -144, -144, -144,
	-144, 541, -207, 119, 143, 120, 121, -162, -208, -213,
	-215, 106, 162, 145, 159, -245, -150, -154, -150, -150,
	-150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -311, -293, 90, 177, -158, -157, 105, -406, -158,
	515, 88, -220, 221, -144, -144, -383, -144, -293, -130,
	-132, -130, -144, -222, -223, 147, -217, -144, -418, -418,
	96, 105, 168, -126, 25, 39, -126, -126, -126, -126,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-126, -293, -293, -119, -118, 438, 439, 440, 441, 443,
	444, 445, 448, 449, 453, 454, 437, 455, 442, 447,
	450, 451, 452, 446, 341, -144, -144, -144, -144, -144,
	-144, -87, -144, 130, 131, 132, -209, -144, -150, -144,
	-144, -144, -418, -144, -144, -144, -210, -209, -382, -381,
	-380, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -418, -144, -164, -148, 96, -260,
	105, 92, -144, -144, -131, -130, -295, -300, -291, -292,
	-130, -131, -131, -130, -130, -144, -144, -144, -144, -144,
	-144, -144, -144, -418, -144, -144, -144, -144, -144, -252,
	-418, -209, 88, -399, 415, 416, 627, -302, 274, -301,
	26, -210, 90, 15, -262, 78, -293, -234, -234, 60,
	-130, -135, -418, -36, 26, -254, -293, 63, 90, -329,
	-271, 369, 370, 177, -144, -144, 88, -233, 28, 29,
	-190, -296, 168, -300, -190, -263, 274, -190, -168, -170,
	-171, -172, -193, -216, -417, -173, -8, 537, 534, 15,
	-183, -184, -192, -299, -269, -312, -268, 88, 414, 416,
	417, 77, 122, -144, -330, 176, -358, -357, -356, -339,
	-341, -342, -343, 89, -330, -335, 375, 374, -324, -324,
	-324, -324, -324, -329, -329, -329, -329, 87, 87, -324,
	-324, -324, -324, -332, 87, -332, -332, -333, -332, 87,
	-333, -334, 87, -334, -369, -144, -366, -365, -363, -364,
	248, 101, 609, 565, 518, 558, 599, 78, -361, -233,
	96, -418, -142, -285, 243, -367, -364, -383, -383, -383,
	-285, 91, 90, 91, 90, 91, 90, -111, -59, -1,
	667, 668, 669, 88, 20, -340, -339, -58, 299, -372,
	-373, 274, -368, -362, -348, 137, -347, -348, -348, -383,
	88, 30, 127, 127, 127, 127, 518, 227, 33, -286,
	557, 143, 609, 565, -339, -58, 241, 241, -311, -311,
	-311, 90, 90, -281, 663, -183, -138, 291, 151, 280,
	280, 238, 238, 293, -190, 304, 307, 305, 306, 303,
	308, 309, 24, 24, 24, 24, 24, 292, 294, 296,
	282, -190, -190, -284, 77, -185, -190, 27, -299, -412,
	-190, 284, -190, -282, -282, -190, -282, -282, -190, -411,
	322, -293, 356, 620, 621, 623, 622, -122, 415, 88,
	518, 23, -123, 23, -417, 119, 120, 121, -208, -150,
	-154, -150, 142, 262, -417, -217, -418, -295, 26, 88,
	78, -418, 88, 88, -418, -418, 88, 15, -225, -223,
	149, -144, -418, 88, -418, -418, -418, -209, -144, -144,
	-144, -144, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -209, 88, 88, 15, -315, 26, -418, -418,
	-418, -418, -418, -224, -418, 15, -418, 78, 88, 162,
	88, -418, -418, -418, 88, 88, -418, -418, 88, 88,
	-418, 88, 88, 88, -418, 88, 88, 88, 88, -418,
	-418, -418, -418, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -418, -94, 542, -418, -418, 88, -418,
	88, -418, -417, 221, -418, -418, -418, -418, -418, 88,
	88, 88, 88, 88, 88, -418, -418, -418, 88, 88,
	-418, 88, -418, 88, -418, -398, 626, 416, -197, -196,
	-194, 75, 242, 76, -417, -301, -418, -158, -260, -261,
	-260, -202, -293, 96, 105, -236, -167, -169, 15, -135,
	-215, 89, 88, -329, -240, -246, -279, -293, 90, 177,
	-331, 177, -331, 369, 370, -232, 221, -198, 16, -201,
	33, 58, -11, -417, -417, 33, 88, -186, -188, -187,
	-189, 67, 71, 73, 68, 69, 70, 74, -306, 26,
	-8, -168, -8, -417, -190, -183, -419, 15, 78, -419,
	88, 221, -270, -273, 418, 415, 421, -383, 90, -110,
	88, -356, -343, -237, -139, 41, -336, 376, -329, 525,
	-329, -338, 90, -338, 96, 96, 96, 89, -48, -43,
	-44, 34, 82, -363, -350, 90, 40, -350, -350, -293,
	89, -233, -138, -190, 143, 77, -367, -367, -367, -299,
	-2, 666, 672, 137, 87, 379, 19, -254, 88, 89,
	-218, 300, 89, -112, -293, 89, 87, -348, -348, -293,
	-417, 238, 32, 32, 609, 565, 557, -58, -218, -217,
	-383, -330, 665, 664, 89, 240, 298, -143, 433, -140,
	90, 91, -190, -190, -190, -190, -190, 230, 227, 402,
	-407, 310, -407, 283, 241, -183, -190, 88, -84, 257,
	252, -304, -304, 34, -190, 415, 639, 637, -144, 142,
	262, -162, -154, -150, -313, 177, 342, 261, 340, 336,
	356, 347, 374, 338, 375, 333, 332, 331, -313, -311,
	-209, -132, -144, -144, 150, -144, 148, -144, -418, -418,
	-418, -418, -418, -229, -144, -144, -144, -418, 177, 342,
	15, -144, -311, -144, -144, -144, -144, -144, -380, -144,
	-209, -144, -209, -144, -144, -144, -144, -144, -381, -381,
	-381, -381, -381, -209, -209, -209, -209, -417, -293, -97,
	-96, -95, 592, 242, -94, -164, -97, -164, -131, -295,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-194, -344, -344, -344, -264, 88, -275, 23, 15, 58,
	58, -167, -198, -168, -135, -293, -243, 619, -249, 47,
	-247, -248, 48, -244, 49, 57, -331, -331, 168, -234,
	-144, -265, 77, -266, -274, -217, -212, -214, -213, -417,
	-253, -418, -293, -264, -266, -170, -171, -171, -170, -171,
	67, 67, 67, 72, 67, 72, 67, -187, -299, -418,
	-144, -302, 78, -168, -168, -192, -299, 168, 415, 419,
	420, -356, -405, 119, 143, 32, 77, 372, 101, -403,
	176, 554, 604, 609, 565, 558, 599, -404, 244, 136,
	137, 256, 26, 42, 89, 88, 89, 88, 89, 89,
	88, -287, -286, -44, -43, -350, -350, 96, -383, 90,
	90, 240, 27, -190, 77, 77, 77, -113, 670, 96,
	87, -3, 82, -144, 87, 20, -339, -217, -374, -325,
	-375, -326, -327, -5, -6, -351, -116, 58, 101, -62,
	45, 239, 650, 651, 127, -417, 663, -366, -254, -370,
	-372, -190, -147, -417, -146, -148, -155, 166, 167, 261,
	338, 339, -218, -190, -137, 289, 297, 87, -141, 92,
	-386, 78, 280, 372, 280, 90, -408, 311, 90, -408,
	-190, -84, -48, -190, -282, -282, 34, -383, -418, -162,
	-154, -125, 162, 518, -316, 524, -324, -324, -324, -334,
	-324, 328, -324, 328, -324, -418, -418, -418, 88, -418,
	23, -418, -144, 88, -121, 461, 88, 88, -418, 87,
	87, -144, -418, -418, -418, 88, -418, -418, -418, -418,
	-418, 88, -418, -418, -418, 88, -314, 610, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -93, -294,
	-293, -94, 574, 574, -418, -94, -226, 88, -418, -418,
	88, -418, 88, 88, -418, 88, -418, 88, -418, -418,
	-418, -418, 88, -195, 23, -195, -195, -418, -260, -190,
	-198, -227, 17, -240, 52, 348, -251, -250, 56, 48,
	-248, 20, 50, 20, 31, -265, 88, 151, 88, -418,
	-418, 88, 58, 221, -418, -198, -181, -180, 77, 78,
	-182, 77, -180, 67, 67, -255, 88, -263, -168, -198,
	-198, 221, 119, -417, -149, -161, -147, 13, 90, 90,
	-383, -402, 654, 655, 32, 96, -350, -350, 137, 137,
	-190, 87, -329, 90, -329, 96, 96, 32, 83, 84,
	85, 32, 79, 80, 81, -190, -190, -190, -190, -371,
	87, 20, -144, 87, 151, 89, -254, -254, 276, 162,
	-350, 648, 282, 282, -350, -350, -350, -115, -114, 670,
	89, -418, 88, -337, 518, 521, -144, -156, -156, -255,
	89, -379, 518, -385, -293, -293, -293, -293, 96, 98,
	-418, 516, 74, 519, -418, -329, -144, -144, -144, -234,
	90, -144, -144, 96, 96, -418, -144, -209, -144, -418,
	-178, -177, -179, 631, 119, 32, -313, -418, -211, 274,
	-100, -99, -98, 15, -418, -144, -144, -144, -144, -144,
	-144, -144, -417, 67, 19, 17, -417, -417, -302, -227,
	-228, 18, 20, -241, 54, -239, 53, -239, -250, 20,
	20, 90, 20, 90, 137, -274, -144, -214, 58, -11,
	-293, -212, -293, -229, -144, 87, -144, -158, -198, -198,
	-144, -204, 485, 487, 488, 489, 486, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 490, 464, 108,
	110, 109, 465, 466, 467, 342, 512, 513, 507, 510,
	511, 509, 508, 357, 358, 468, 469, 470, 111, 112,
	113, 114, 115, 116, 117, 471, 474, 472, 475, 476,
	477, 482, 483, 478, 479, 480, 481, 484, 501, 502,
	503, 504, 505, 506, 611, 612, 613, 614, 615, 616,
	617, 618, 90, 90, 87, -144, 89, 89, -255, -370,
	-59, 89, -256, -254, 96, 89, 277, -213, -417, 90,
	-350, -350, -350, 96, 96, -301, -418, 88, -293, -404,
	-372, 522, 522, -418, 26, -378, -377, -295, 87, 78,
	63, 517, 520, -418, -418, 88, -418, -418, -418, 89,
	89, -418, -418, -418, 88, -418, -177, -179, -418, 77,
	-158, -229, 20, -97, 299, 301, -97, -418, 88, -418,
	-418, 88, -418, 88, -418, -418, -257, -418, -293, 244,
	20, 20, -257, -257, -197, -228, -107, -106, -105, 548,
	-144, -209, -242, 55, 77, 122, 90, 90, 90, 13,
	-212, 221, -234, -254, -175, 379, -229, -418, -254, 89,
	26, 89, 672, 137, 89, -213, -124, -417, 273, -301,
	90, 90, -114, -117, -11, 88, 151, -254, -190, 63,
	-144, -209, -418, 77, 529, 631, -92, -91, -88, 642,
	668, -209, -94, -94, -144, -144, -144, 88, -418, -418,
	-418, -107, 88, -104, -103, -293, 77, 122, -266, -293,
	89, -418, -417, -234, 89, -238, -11, 87, -3, 273,
	-325, -375, -326, -327, -5, -6, -351, -82, 518, -377,
	-355, -295, 90, 96, 89, 518, -418, -418, -90, 145,
	640, 607, -145, -156, -153, 220, -418, 88, -418, 88,
	-418, 88, -293, 244, -105, 88, 26, -302, -176, -174,
	-293, 571, -395, -394, 514, -405, -401, 119, 143, 101,
	-403, 609, 565, 128, 129, -82, -144, 87, -418, -83,
	288, 626, -386, 519, -90, 641, 585, 560, 585, 560,
	-144, -144, -144, -103, -417, -418, 88, 23, -317, -61,
	582, -392, -393, 77, -396, 385, 581, 602, 119, 90,
	89, -254, 249, -379, 520, 142, -418, 88, -418, 88,
	-418, -93, -174, 578, -330, -158, -393, 77, -392, 77,
	14, 13, -4, 671, 89, 290, -90, -144, -144, -418,
	-60, 27, -175, -391, 257, 252, 255, 33, -391, 96,
	-4, -418, -418, 582, 251, 32, 119, -158, -178, -177,
	-177,
}

var yyDef = [...]int{
	884, -2, -2, 886, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 884, 884, 884, 0, 884, 0,
	0, 884, -2, -2, 884, 1501, 0, 884, 0, 0,
	0, 0, -2, 799, 805, 0, 814, -2, 0, 0,
	884, 884, 2064, 2064, 879, 0, 0, 0, 0, 0,
	884, 884, 884, 884, 1358, 52, 884, 0, 87, 88,
	834, 835, 836, 67, 0, 2062, 885, 1, 3, 73,
	77, 0, 0, 0, 60, 1367, 0, 80, 0, 0,
	888, 0, 0, 1484, 884, 884, 0, 128, 129, 130,
	0, 0, 0, 884, 0, -2, 134, -2, 163, 164,
	165, 0, 170, 603, 526, 578, 524, 563, -2, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 402, 402, 0, 0, -2, 512, 512,
	512, 1486, 0, 0, 0, 560, 464, 402, 402, 402,
	0, 402, 402, 402, 402, 0, 0, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 1385, 169, 1502, 1499, 1500, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 0, 1478, 0, 716, 987, 0, 0, 721,
	0, 0, 788, 725, 726, 788, 0, 788, 788, 788,
	788, 0, 0, 0, 736, 0, 0, 0, 0, 785,
	0, 752, 753, 0, 785, 0, 759, 791, 0, 0,
	765, 788, 788, 768, 769, 2065, 0, 2065, 2065, 1469,
	0, 782, 780, 794, 795, 42, 798, 801, 802, 803,
	804, 807, 0, 818, 821, 1495, 1496, 0, 823, 830,
	847, 848, 0, 880, 881, 47, 1135, 0, 1009, 1014,
	1025, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 0,
	0, 0, 0, 1053, 1054, 0, 0, 0, 0, 0,
	1116, 1062, 0, 0, 0, 0, 1331, 0, 0, 1292,
	1292, 1150, 1292, 1294, 1294, 1708, 1844, 1852, 1972, 1670,
	1675, 1676, 1677, 1965, 1966, 1967, 1968, 2007, 2008, 2012,
	1768, 0, 0, 0, 2061, 1805, 1813, 1814, 1838, 1937,
	1993, 1687, 1833, 1902, 1765, 1787, 1788, 1919, 1920, 1809,
	1810, 1791, 1803, 1806, 1794, 1795, 1797, 1799, 1804, 1811,
	1817, 1796, 1816, 1815, 0, 1792, 1793, 1798, 1808, 1812,
	1800, 1801, 1802, 1807, 1818, 0, 0, 0, 0, 0,
	1231, 1232, 1233, 1234, 0, 0, 0, 0, 0, 0,
	0, 294, 295, 1344, 1345, 45, 46, 1134, 1465, 1294,
	1294, 1294, 1294, 1294, 1076, 1077, 1078, 1079, 1080, 1104,
	1105, 1111, 1112, 1914, 1915, 1916, 1917, 1749, 2002, 1757,
	1758, 1897, 1898, 1770, 1771, 2036, 2037, -2, -2, -2,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 1712,
	1983, 1984, 231, 0, 0, 299, 300, 296, 297, 298,
	1118, 1119, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 289,
	290, 291, 292, 293, 2064, 0, 857, 0, 0, 0,
	0, 0, 1367, 0, 1359, 1358, 65, 0, -2, 0,
	0, 0, 0, 49, 0, 54, 944, 887, 79, 78,
	1416, 0, 0, 0, 61, 1368, 69, 71, 1369, 0,
	889, 890, 0, 920, 924, 0, 0, 0, 1485, 1484,
	1484, 104, 0, 0, 105, 125, 126, 127, 0, 0,
	111, 112, 1471, 1472, 131, 0, 0, 181, 182, 0,
	43, 429, 0, 177, 906, 0, 422, 361, 0, 1385,
	0, 0, 0, 0, 0, 884, 0, 1479, 158, 159,
	166, 167, 168, 402, 402, 402, 575, 0, 0, 169,
	169, 533, 534, 535, 0, 0, -2, 427, 0, 513,
	0, 0, 416, 416, 420, 418, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 403,
	0, 573, 574, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 1487, 1488, 0, 550, 551, 0, 0, 0,
	402, 402, 0, 0, 0, 0, 402, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 1407, 0, 0,
	0, -2, 0, 708, 0, 0, 0, 1480, 1480, 0,
	715, 0, 717, 1398, 719, 722, 723, 724, 0, 0,
	727, 0, 785, 785, 783, 784, 729, 730, 731, 732,
	788, 0, 0, 411, 412, 413, 785, 788, 0, 788,
	788, 788, 788, 785, 785, 785, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 791, 788, 0,
	760, 0, 761, 762, 763, 766, 767, 770, 2066, 2067,
	1497, 1498, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 2065, 2065, 774, 778,
	1470, 800, 806, 808, 809, 0, 0, 819, 822, 841,
	51, 1756, 829, 51, 831, 832, 833, 859, 860, 865,
	0, 0, 0, 0, 871, 872, 873, 0, 0, 876,
	877, 878, 0, 0, 0, 0, 0, 1007, 0, 0,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 1027, 0, 0, 0, 1049,
	1050, 1051, 1052, 1055, 0, 1067, 0, 1069, 1340, -2,
	0, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 1148, 0, 1149, 1151, 1152,
	0, 1153, 894, 894, 894, 894, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 904, 0, 0,
	904, 904, 0, 0, 224, 225, 226, 227, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 301,
	249, 250, 251, 1134, 0, 0, 0, 48, 849, 850,
	0, 970, 1490, 0, 0, 900, 0, 59, 68, 70,
	1367, 63, 1367, 0, 0, 0, -2, -2, 907, 913,
	914, 915, 916, 917, 56, 2063, 57, 0, 76, 0,
	50, 0, 0, 0, 0, 375, 1419, 0, 0, 1360,
	1361, 1364, 0, 921, 1850, 925, 0, 927, 928, 0,
	0, 102, 0, 986, 0, 0, 0, 113, 0, 115,
	116, 0, 0, 0, 386, 1473, 1474, 1475, -2, 409,
	0, 386, 370, 309, 310, 311, 361, 313, 361, 361,
	361, 361, 375, 375, 375, 375, 344, 345, 346, 347,
	348, 0, 0, 330, 361, 361, 361, 361, 351, 352,
	353, 354, 355, 356, 357, 358, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 363, 363, 363, 363, 363,
	367, 367, 0, 44, 0, 911, 912, 390, 0, 1364,
	0, 0, 1407, 1482, 1492, 0, 0, 0, 1482, 136,
	0, 0, 0, 576, 614, 527, 564, 577, 0, 530,
	531, -2, 0, 0, 512, 0, 514, 0, 410, 0,
	-2, 0, 420, 0, 416, 420, 417, 420, 408, 421,
	554, 555, 556, 0, 558, 559, 644, 956, 0, 0,
	0, 0, 0, 650, 651, 652, 0, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 565, 566, 567,
	568, 569, 570, 571, 572, 0, 0, 0, 0, 514,
	0, 561, 0, 0, 466, 467, 468, 0, 0, 471,
	472, 473, 474, 0, 0, 477, 478, 479, 973, 974,
	480, 481, 506, 507, 508, 482, 483, 484, 485, 486,
	487, 488, 500, 501, 502, 503, 504, 505, 489, 490,
	491, 492, 493, 494, 497, 0, 151, 1389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 903, 988,
	1503, 1504, 718, 0, 1399, 0, 1402, 1403, 1404, 1405,
	1406, 789, 790, 0, 414, 415, 788, 788, 733, 775,
	0, 788, 737, 776, 738, 740, 739, 741, 754, 755,
	788, 744, 786, 787, 745, 746, 747, 748, 749, 750,
	751, 771, 756, 757, 758, 792, 0, 796, 797, 772,
	773, 0, 0, 812, 813, 0, 820, 844, 842, 843,
	845, 837, 838, 839, 840, 0, 846, 0, 0, 862,
	98, 867, 868, 869, 870, 882, 875, 1136, 1004, 1005,
	1006, 0, 1008, 1011, 0, 1120, 1122, 1013, 1015, 1131,
	1132, 1133, 0, 0, 0, 0, 0, 1019, 1023, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1045, 1308, 1309, 1310, 1064, 302, 303, 0, 1065,
	0, 0, 0, 0, 0, 0, 0, 1135, 1066, 0,
	918, 0, 0, 1338, 1335, 0, 0, 0, 1293, 1295,
	0, 0, 0, 0, 895, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1311, 0, 0, 0, 0,
	0, 1331, 0, 1071, 1072, 1073, 0, 0, 0, 0,
	0, 0, 1191, 0, 0, 0, 0, 1491, 0, 146,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 1236, 1237,
	1238, 41, 0, 0, 0, 905, 1342, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	1463, 0, 0, 852, 853, 855, 0, 990, 0, 971,
	0, 0, 858, 0, 899, 0, 902, 62, 64, 0,
	929, 908, 58, 53, 0, 0, 948, 1417, 375, 1439,
	0, 384, 384, 381, 1370, 1371, 0, 1363, 1365, 1366,
	81, 926, 922, 0, 1002, 0, 0, 985, 0, 932,
	934, 935, 936, 968, 0, 939, 940, 0, 0, 0,
	0, 0, 100, 987, 106, 0, 114, 0, 0, 119,
	120, 107, 108, 109, 110, 0, 603, -2, 461, 183,
	185, 186, 187, 178, -2, 373, 371, 372, 312, 375,
	375, 338, 339, 340, 341, 342, 343, 0, 0, 331,
	332, 333, 334, 323, 0, 324, 325, 326, 365, 0,
	327, 328, 0, 329, 428, 0, 1372, 391, 392, 394,
	402, 0, 397, 398, 0, 402, 402, 0, 423, 424,
	0, 1364, 1389, 0, 0, 0, 1493, 1492, 1492, 1492,
	0, 171, 172, 173, 174, 175, 176, 639, 0, 0,
	615, 637, 638, 169, 0, 0, 179, 516, 515, 0,
	671, 0, 426, 0, 0, 420, 420, 405, 406, 557,
	0, 0, 646, 647, 648, 649, 0, 0, 0, 543,
	455, 0, 544, 545, 514, 516, 0, 0, 386, 469,
	470, 475, 476, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 595, 597,
	518, 601, 594, 596, 598, 518, 602, 1386, 1387, 1388,
	0, 0, 709, 0, 0, 452, 96, 1481, 714, 1400,
	720, 1401, 785, 743, 777, 785, 735, 742, 764, 810,
	811, 816, 824, 825, 826, 827, 828, 866, 0, 0,
	0, 0, 874, 0, 0, 1012, 1121, 1123, 1016, 0,
	1020, 1024, 0, 0, 0, 1070, 1068, 1342, 0, 0,
	0, 1117, 0, 0, 1139, 1140, 0, 0, 0, 1336,
	0, 0, 1146, 0, 1296, 1297, 1154, 0, 0, 0,
	0, 0, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1358, 0, 0, 0, 0, 0, 1175, 1176,
	1177, 1178, 1179, 0, 1181, 0, 1182, 0, 0, 0,
	0, 1189, 1190, 1192, 0, 0, 1195, 1196, 0, 0,
	1197, 0, 0, 0, 1201, 0, 0, 0, 0, 1210,
	1211, 1212, 1213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 1225, 0, 1099, 0, 0, 1099,
	0, 1137, 904, 0, 1298, 1299, 1300, 1301, 1302, 0,
	0, 0, 0, 0, 0, 1258, 1259, 1261, 0, 0,
	1264, 0, 1266, 0, 1464, 851, 854, 856, 942, 991,
	992, 0, 0, 0, 0, 972, 1489, 897, 898, 901,
	950, 0, 1346, 0, 0, 929, 1002, 930, 0, 909,
	55, 945, 0, 1421, 1420, 1433, 1446, 384, 384, 378,
	379, 385, 380, 382, 383, 1362, 0, 1367, 0, 1457,
	0, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 978, 0, 0, 0, 0, 969,
	940, 0, 941, 0, -2, 0, 0, 94, 95, 0,
	0, 0, 117, 118, 0, 0, 124, 387, 388, 160,
	169, 463, 184, 436, 0, 0, 308, 374, 335, 336,
	337, 0, 359, 0, 0, 0, 0, 457, 132, 1376,
	1375, 402, 402, 393, 0, 396, 0, 0, 0, 1494,
	362, 425, 0, 150, 0, 0, 0, 0, 0, 156,
	609, 0, 0, 616, 0, 0, 0, 525, 0, 536,
	537, 0, 643, -2, 705, 390, 0, 404, 407, 957,
	0, 0, 538, 0, 541, 542, 456, 516, 547, 548,
	562, 549, 498, 499, 496, 0, 0, 1408, 1409, 1414,
	1412, 1413, 137, 583, 585, 584, 588, 0, 0, 0,
	520, 0, 520, 581, 0, 452, 1372, 0, 713, 453,
	454, 788, 788, 861, 99, 0, 864, 0, 0, 0,
	0, 1017, 1021, 1303, 1329, 361, 361, 1316, 361, 367,
	1319, 361, 1321, 361, 1324, 361, 1327, 1328, 0, 0,
	0, 919, 0, 0, 1145, 1339, 0, 0, 1155, 1156,
	1157, 1158, 1159, 1333, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 149,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 1098, 0,
	1100, 1101, 0, 0, 1227, 0, 0, 1239, 0, 1343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	993, 998, 998, 998, 0, 0, 0, 1476, 1477, 1347,
	1348, 1002, 1349, 931, 910, 949, 1439, 0, 1432, 0,
	-2, 1441, 0, 0, 0, 1447, 376, 377, 923, 82,
	1003, 85, 0, 1457, 1466, 0, 1448, 1459, 1461, 0,
	0, 0, 1453, 0, 1002, 933, 964, 966, 0, 961,
	976, 977, 979, 0, 981, 0, 983, 984, 944, 938,
	0, 102, 0, 1002, 1002, 101, 0, 989, 121, 122,
	123, 462, 188, 193, 0, 0, 0, 198, 0, 200,
	0, 0, 0, 205, 206, 402, 402, 437, 0, 305,
	307, 0, 0, 191, 375, 0, 375, 0, 366, 368,
	0, 438, 458, 1373, 1374, 0, 0, 395, 399, 400,
	401, 0, 1483, 152, 0, 0, 0, 612, 0, 640,
	0, 0, 0, 0, 0, 0, 180, 517, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 0, 402, 0,
	0, 0, 402, 402, 402, 0, 697, 389, 0, 0,
	668, 665, 539, 0, 229, 230, 232, 0, 0, 0,
	0, 0, 546, 944, 1390, 1391, 1392, 0, 1411, 1415,
	140, 0, 0, 0, 0, 593, 599, 0, 519, 600,
	710, 711, 712, 97, 728, 734, 863, 883, 1010, 1018,
	1022, 0, 0, 0, 0, 1330, 1314, 375, 1317, 1318,
	1320, 1322, 1323, 1325, 1326, 1058, 1059, 1063, 0, 1142,
	0, 1144, 1337, 0, 1367, 0, 0, 0, 1173, 0,
	0, 0, 1184, 1183, 1185, 0, 1187, 1188, 1193, 1194,
	1198, 0, 1200, 1202, 1203, 0, 0, 0, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 0, 1092,
	1095, 1226, 1102, 1103, 1108, 1229, 0, 0, 1138, 1241,
	0, 1246, 0, 0, 1252, 0, 1256, 0, 1262, 1263,
	1265, 1267, 0, 0, 0, 0, 0, 970, 951, 66,
	1349, 1351, 0, 1426, 1424, 1424, 1434, 1435, 0, 0,
	1442, 0, 0, 0, 0, 86, 0, 0, 0, 1462,
	0, 0, 0, 0, 103, 1358, 958, 965, 0, 0,
	959, 0, 960, 980, 982, 937, 0, 1002, 1002, 92,
	93, 0, 194, 0, 196, 222, 223, 0, 199, 201,
	202, 203, 209, 210, 211, 204, 0, 0, 304, 306,
	0, 0, 349, 360, 350, 0, 0, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 944, 153, 154, 155, 604,
	0, 614, 0, 946, 0, 607, 0, 528, 0, 0,
	0, 402, 402, 402, 0, 0, 0, 0, 682, 0,
	0, 645, 0, 653, 0, 0, 0, 233, 234, 0,
	1410, 582, 0, 138, 139, 0, 0, 587, 521, 522,
	1056, 0, 0, 0, 1057, 1315, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1180, 0, 0, 0, 1206,
	0, 0, 0, 634, 635, 0, 1270, 1097, 1358, 0,
	1099, 1109, 1110, 0, 1099, 1240, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 990, 1351,
	1356, 0, 0, 1429, 0, 1422, 1425, 1423, 1436, 0,
	0, 1443, 0, 1445, 0, 1467, 1468, 1460, 0, 1452,
	1455, 1451, 1454, 1367, 962, 0, 967, 0, 1358, 91,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 0, 0, 364, 369, 0, 0,
	0, 605, 0, 947, 617, 608, 0, 695, 0, 699,
	0, 0, 0, 702, 703, 704, 681, 0, 685, 430,
	669, 666, 667, 540, 0, 141, 142, 0, 0, 0,
	1304, 0, 1307, 1141, 1143, 0, 1170, 1171, 1172, 1312,
	1313, 1186, 1199, 1204, 0, 1207, 0, 0, 1208, 0,
	636, 1088, 0, 0, 1106, 1107, 0, 1242, 0, 1247,
	1248, 0, 1253, 0, 1257, 1268, 0, 995, 952, 953,
	1000, 1001, 0, 0, 943, 1356, 84, 1357, 1354, 0,
	1352, 1350, 1418, 0, 1427, 1428, 1437, 1438, 1444, 0,
	1450, 0, 89, 0, 0, 0, 1367, 195, 0, 214,
	0, 613, 0, 616, 606, 693, 694, 0, 706, 698,
	700, 701, 683, -2, 1393, 0, 0, 0, 589, 1305,
	0, 0, 1209, 0, 632, 633, 1096, 1089, 0, 1074,
	1075, 1093, 1228, 1230, 0, 0, 0, 0, 994, 996,
	997, 83, 0, 1353, 1114, 0, 1430, 1431, 1458, 1456,
	963, 970, 0, 90, 443, 436, 1393, 0, 0, 0,
	686, 687, 688, 689, 690, 691, 692, 579, 1395, 143,
	144, 509, 510, 511, 137, 0, 1147, 1205, 1090, 0,
	0, 0, 0, 1086, 1087, 0, 1243, 0, 1249, 0,
	1254, 0, 954, 955, 1355, 0, 0, 618, 0, 620,
	0, -2, 431, 444, 0, 189, 215, 216, 0, 0,
	219, 220, 221, 212, 213, 133, 0, 0, 707, 0,
	1396, 1397, 140, 0, 0, 1081, 1082, 1083, 1084, 1085,
	0, 0, 0, 1115, 1094, 619, 0, 0, 386, 0,
	629, 432, 433, 0, 439, 440, 441, 442, 217, 218,
	641, 0, 0, 586, 1306, 0, 1244, 0, 1250, 0,
	1255, 0, 621, 622, 630, 0, 434, 0, 435, 0,
	0, 0, 610, 0, 641, 1394, 1091, 0, 0, 1113,
	0, 631, 627, 445, 447, 448, 0, 0, 446, 642,
	611, 1245, 1251, 0, 449, 450, 451, 623, 624, 625,
	626,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 673,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:695
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:705
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:750
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:756
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:957
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1005
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1015
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1180
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1184
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1215
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1226
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1246
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1252
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1268
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1304
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1311
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1322
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1339
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1343
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1347
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1395
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1399
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1405
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1409
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1415
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1425
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1439
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1462
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1471
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1563
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1579
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1583
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1587
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1593
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1597
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1623
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1628
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1633
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1763
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = Utf8Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1961
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1986
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1994
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2243
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2282
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2377
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2392
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = "key"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2530
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2540
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2544
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2560
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2570
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2584
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2601
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2607
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2619
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2632
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2662
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2717
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2731
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2925
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2943
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2947
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2978
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3120
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3420
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3432
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3441
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3456
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3470
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3474
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3480
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3486
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3492
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3502
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3518
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3524
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3530
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3560
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3566
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3570
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3580
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3584
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3589
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3598
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3602
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3711
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3726
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3772
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3778
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3784
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3794
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3799
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3842
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3849
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3856
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3874
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3880
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3886
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3892
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3898
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3904
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3916
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3938
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3942
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:3993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = "extended "
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4253
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4257
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4277
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4281
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4291
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4295
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4305
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4382
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4388
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4398
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4402
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4406
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4428
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4433
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4450
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4454
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4458
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4462
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4466
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4470
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4474
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4479
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4483
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4487
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4491
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4574
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4584
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4590
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4594
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4598
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4602
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4632
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4636
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4727
		{
			setAllowComments(yylex, true)
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4731
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.strs = nil
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4741
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4747
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4760
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = SQLCacheStr
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4773
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4781
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4801
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4810
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4816
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4820
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4829
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4834
		{
			yyVAL.strs = nil
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = SQLCacheStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = DistinctStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = DistinctStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = StraightJoinHint
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4886
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4896
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4900
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4904
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4908
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4913
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4917
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4928
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4933
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4943
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4949
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4953
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4963
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4967
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4971
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4975
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4981
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4985
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4991
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4995
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5004
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5013
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5019
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5029
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5039
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5043
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5047
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5051
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5057
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5074
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5078
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5082
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5086
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5092
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5094
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5098
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5104
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5106
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5109
		{
			yyVAL.empty = struct{}{}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.empty = struct{}{}
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5114
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5135
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5139
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5143
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5149
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5155
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5159
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5163
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5167
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5173
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5177
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5191
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5201
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5207
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5216
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5222
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5226
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5232
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5236
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5240
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5244
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5249
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5253
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5257
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5261
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5551
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5555
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5561
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5565
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5571
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5575
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5579
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5585
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5589
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5596
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5600
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5604
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5608
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5612
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5618
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5622
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5626
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5630
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5634
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5653
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5659
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5663
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5672
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5677
		{
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5680
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5686
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5692
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5696
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5708
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5714
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5718
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5724
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5728
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5734
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5738
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5750
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5756
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5760
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5766
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5772
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5776
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5792
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5796
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5803
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5807
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5811
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5815
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5821
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5825
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5829
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5833
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5837
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5841
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5845
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5851
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5855
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5859
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5866
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5872
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5876
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6438
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6444
		{
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6446
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6450
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6454
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6458
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6462
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6466
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6470
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6474
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6478
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6482
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6486
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6492
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6496
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6500
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6504
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6508
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6512
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6516
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6520
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6524
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6579
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6583
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6587
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6591
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6595
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6609
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6619
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6623
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6629
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6633
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6637
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6641
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6645
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6651
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6655
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6659
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6663
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6667
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6671
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6675
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6679
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6683
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6687
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6711
		{
			yyVAL.str = string("")
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6721
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6725
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6731
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6746
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6750
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6754
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6758
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6797
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6812
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6818
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6822
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6831
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6840
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6846
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6852
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6856
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6862
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6867
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6871
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6875
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6884
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6890
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6894
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6898
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6907
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6911
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6919
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6929
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6933
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6937
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6941
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6947
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6951
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6955
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6959
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6964
		{
			yyVAL.str = ""
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6968
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6981
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6985
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6991
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7000
		{
			yyVAL.str = ""
		}
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7009
		{
			yyVAL.str = "cascaded"
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7026
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7030
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7036
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7040
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7044
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7048
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7052
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7056
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7066
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7072
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7078
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7084
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7102
		{
			yyVAL.str = ""
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7112
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7116
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7122
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7126
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7130
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7135
		{
			yyVAL.str = ""
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7139
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7143
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7148
		{
			yyVAL.str = ""
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7152
		{
			yyVAL.str = " header"
		}
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7157
		{
			yyVAL.str = ""
		}
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7161
		{
			yyVAL.str = " manifest on"
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = " manifest off"
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7170
		{
			yyVAL.str = ""
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7174
		{
			yyVAL.str = " overwrite on"
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7178
		{
			yyVAL.str = " overwrite off"
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7184
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7189
		{
			yyVAL.str = ""
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7193
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7203
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7209
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7213
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7218
		{
			yyVAL.str = ""
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7222
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7232
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7238
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7242
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7251
		{
			yyVAL.str = ""
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7255
		{
			yyVAL.str = " optionally"
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7268
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7272
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7276
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7280
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7284
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7290
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7294
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7298
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7302
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7311
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7317
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7321
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7327
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7331
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7337
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7341
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7346
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7356
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7360
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7366
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7373
		{
			yyVAL.str = "charset"
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7383
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7387
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7391
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7405
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7412
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7415
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7420
		{
			yyVAL.empty = struct{}{}
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7422
		{
			yyVAL.empty = struct{}{}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7424
		{
			yyVAL.empty = struct{}{}
		}
	case 1489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7428
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7437
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7444
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7448
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7454
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7458
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7471
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7475
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7481
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7485
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7492
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8076
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8085
		{
			decNesting(yylex)
		}
	case 2064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8090
		{
			skipToEnd(yylex)
		}
	case 2065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8095
		{
			skipToEnd(yylex)
		}
	case 2066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8099
		{
			skipToEnd(yylex)
		}
	case 2067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8103
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
