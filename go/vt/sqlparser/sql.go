/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const PAUSE = 57637
const RESUME = 57638
const VITESS_THROTTLER = 57639
const BEGIN = 57640
const START = 57641
const TRANSACTION = 57642
const COMMIT = 57643
const ROLLBACK = 57644
const SAVEPOINT = 57645
const RELEASE = 57646
const WORK = 57647
const CONSISTENT = 57648
const SNAPSHOT = 57649
const BIT = 57650
const TINYINT = 57651
const SMALLINT = 57652
const MEDIUMINT = 57653
const INT = 57654
const INTEGER = 57655
const BIGINT = 57656
const INTNUM = 57657
const REAL = 57658
const DOUBLE = 57659
const FLOAT_TYPE = 57660
const FLOAT4_TYPE = 57661
const FLOAT8_TYPE = 57662
const DECIMAL_TYPE = 57663
const NUMERIC = 57664
const TIME = 57665
const TIMESTAMP = 57666
const DATETIME = 57667
const YEAR = 57668
const CHAR = 57669
const VARCHAR = 57670
const BOOL = 57671
const CHARACTER = 57672
const VARBINARY = 57673
const NCHAR = 57674
const TEXT = 57675
const TINYTEXT = 57676
const MEDIUMTEXT = 57677
const LONGTEXT = 57678
const BLOB = 57679
const TINYBLOB = 57680
const MEDIUMBLOB = 57681
const LONGBLOB = 57682
const JSON = 57683
const JSON_SCHEMA_VALID = 57684
const JSON_SCHEMA_VALIDATION_REPORT = 57685
const ENUM = 57686
const GEOMETRY = 57687
const POINT = 57688
const LINESTRING = 57689
const POLYGON = 57690
const GEOMCOLLECTION = 57691
const GEOMETRYCOLLECTION = 57692
const MULTIPOINT = 57693
const MULTILINESTRING = 57694
const MULTIPOLYGON = 57695
const ASCII = 57696
const UNICODE = 57697
const NULLX = 57698
const AUTO_INCREMENT = 57699
const APPROXNUM = 57700
const SIGNED = 57701
const UNSIGNED = 57702
const ZEROFILL = 57703
const CODE = 57704
const COLLATION = 57705
const COLUMNS = 57706
const DATABASES = 57707
const ENGINES = 57708
const EVENT = 57709
const EXTENDED = 57710
const FIELDS = 57711
const FULL = 57712
const FUNCTION = 57713
const GTID_EXECUTED = 57714
const KEYSPACES = 57715
const OPEN = 57716
const PLUGINS = 57717
const PRIVILEGES = 57718
const PROCESSLIST = 57719
const SCHEMAS = 57720
const TABLES = 57721
const TRIGGERS = 57722
const USER = 57723
const VGTID_EXECUTED = 57724
const VITESS_KEYSPACES = 57725
const VITESS_METADATA = 57726
const VITESS_MIGRATIONS = 57727
const VITESS_REPLICATION_STATUS = 57728
const VITESS_SHARDS = 57729
const VITESS_TABLETS = 57730
const VITESS_TARGET = 57731
const VSCHEMA = 57732
const VITESS_THROTTLED_APPS = 57733
const WORKLOAD = 57734
const LASTSEENGTID = 57735
const FAILPOINTS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const FAST = 57749
const QUICK = 57750
const CHANGED = 57751
const MEDIUM = 57752
const CURRENT_TIMESTAMP = 57753
const DATABASE = 57754
const CURRENT_DATE = 57755
const NOW = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const CURRENT_USER = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const DAY = 57764
const DAY_HOUR = 57765
const DAY_MICROSECOND = 57766
const DAY_MINUTE = 57767
const DAY_SECOND = 57768
const HOUR = 57769
const HOUR_MICROSECOND = 57770
const HOUR_MINUTE = 57771
const HOUR_SECOND = 57772
const MICROSECOND = 57773
const MINUTE = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const MONTH = 57777
const QUARTER = 57778
const SECOND = 57779
const SECOND_MICROSECOND = 57780
const YEAR_MONTH = 57781
const WEEK = 57782
const REPLACE = 57783
const CONVERT = 57784
const CAST = 57785
const SUBSTR = 57786
const SUBSTRING = 57787
const SEPARATOR = 57788
const TIMESTAMPADD = 57789
const TIMESTAMPDIFF = 57790
const WEIGHT_STRING = 57791
const LTRIM = 57792
const RTRIM = 57793
const TRIM = 57794
const JSON_ARRAY = 57795
const JSON_OBJECT = 57796
const JSON_QUOTE = 57797
const JSON_DEPTH = 57798
const JSON_TYPE = 57799
const JSON_LENGTH = 57800
const JSON_VALID = 57801
const JSON_ARRAY_APPEND = 57802
const JSON_ARRAY_INSERT = 57803
const JSON_INSERT = 57804
const JSON_MERGE = 57805
const JSON_MERGE_PATCH = 57806
const JSON_MERGE_PRESERVE = 57807
const JSON_REMOVE = 57808
const JSON_REPLACE = 57809
const JSON_SET = 57810
const JSON_UNQUOTE = 57811
const COUNT = 57812
const AVG = 57813
const MAX = 57814
const MIN = 57815
const SUM = 57816
const GROUP_CONCAT = 57817
const BIT_AND = 57818
const BIT_OR = 57819
const BIT_XOR = 57820
const STD = 57821
const STDDEV = 57822
const STDDEV_POP = 57823
const STDDEV_SAMP = 57824
const VAR_POP = 57825
const VAR_SAMP = 57826
const VARIANCE = 57827
const REGEXP_INSTR = 57828
const REGEXP_LIKE = 57829
const REGEXP_REPLACE = 57830
const REGEXP_SUBSTR = 57831
const ExtractValue = 57832
const UpdateXML = 57833
const GET_LOCK = 57834
const RELEASE_LOCK = 57835
const RELEASE_ALL_LOCKS = 57836
const IS_FREE_LOCK = 57837
const IS_USED_LOCK = 57838
const LOCATE = 57839
const POSITION = 57840
const MATCH = 57841
const AGAINST = 57842
const BOOLEAN = 57843
const LANGUAGE = 57844
const WITH = 57845
const QUERY = 57846
const EXPANSION = 57847
const WITHOUT = 57848
const VALIDATION = 57849
const UNUSED = 57850
const ARRAY = 57851
const BYTE = 57852
const CUME_DIST = 57853
const DESCRIPTION = 57854
const DENSE_RANK = 57855
const EMPTY = 57856
const EXCEPT = 57857
const FIRST_VALUE = 57858
const GROUPING = 57859
const GROUPS = 57860
const JSON_TABLE = 57861
const LAG = 57862
const LAST_VALUE = 57863
const LATERAL = 57864
const LEAD = 57865
const NTH_VALUE = 57866
const NTILE = 57867
const OF = 57868
const OVER = 57869
const PERCENT_RANK = 57870
const RANK = 57871
const RECURSIVE = 57872
const ROW_NUMBER = 57873
const SYSTEM = 57874
const WINDOW = 57875
const ACTIVE = 57876
const ADMIN = 57877
const AUTOEXTEND_SIZE = 57878
const BUCKETS = 57879
const CLONE = 57880
const COLUMN_FORMAT = 57881
const COMPONENT = 57882
const DEFINITION = 57883
const ENFORCED = 57884
const ENGINE_ATTRIBUTE = 57885
const EXCLUDE = 57886
const FOLLOWING = 57887
const GET_MASTER_PUBLIC_KEY = 57888
const HISTOGRAM = 57889
const HISTORY = 57890
const INACTIVE = 57891
const INVISIBLE = 57892
const LOCKED = 57893
const MASTER_COMPRESSION_ALGORITHMS = 57894
const MASTER_PUBLIC_KEY_PATH = 57895
const MASTER_TLS_CIPHERSUITES = 57896
const MASTER_ZSTD_COMPRESSION_LEVEL = 57897
const NESTED = 57898
const NETWORK_NAMESPACE = 57899
const NOWAIT = 57900
const NULLS = 57901
const OJ = 57902
const OLD = 57903
const OPTIONAL = 57904
const ORDINALITY = 57905
const ORGANIZATION = 57906
const OTHERS = 57907
const PARTIAL = 57908
const PATH = 57909
const PERSIST = 57910
const PERSIST_ONLY = 57911
const PRECEDING = 57912
const PRIVILEGE_CHECKS_USER = 57913
const PROCESS = 57914
const RANDOM = 57915
const REFERENCE = 57916
const REQUIRE_ROW_FORMAT = 57917
const RESOURCE = 57918
const RESPECT = 57919
const RESTART = 57920
const RETAIN = 57921
const REUSE = 57922
const ROLE = 57923
const SECONDARY = 57924
const SECONDARY_ENGINE = 57925
const SECONDARY_ENGINE_ATTRIBUTE = 57926
const SECONDARY_LOAD = 57927
const SECONDARY_UNLOAD = 57928
const SIMPLE = 57929
const SKIP = 57930
const SRID = 57931
const THREAD_PRIORITY = 57932
const TIES = 57933
const UNBOUNDED = 57934
const VCPU = 57935
const VISIBLE = 57936
const RETURNING = 57937
const FORMAT_BYTES = 57938
const FORMAT_PICO_TIME = 57939
const PS_CURRENT_THREAD_ID = 57940
const PS_THREAD_ID = 57941
const GTID_SUBSET = 57942
const GTID_SUBTRACT = 57943
const WAIT_FOR_EXECUTED_GTID_SET = 57944
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57945
const FORMAT = 57946
const TREE = 57947
const VITESS = 57948
const TRADITIONAL = 57949
const VTEXPLAIN = 57950
const VEXPLAIN = 57951
const PLAN = 57952
const LOCAL = 57953
const LOW_PRIORITY = 57954
const KILL = 57955
const NO_WRITE_TO_BINLOG = 57956
const LOGS = 57957
const ERROR = 57958
const GENERAL = 57959
const HOSTS = 57960
const OPTIMIZER_COSTS = 57961
const USER_RESOURCES = 57962
const SLOW = 57963
const CHANNEL = 57964
const RELAY = 57965
const EXPORT = 57966
const CURRENT = 57967
const ROW = 57968
const ROWS = 57969
const AVG_ROW_LENGTH = 57970
const CONNECTION = 57971
const CHECKSUM = 57972
const DELAY_KEY_WRITE = 57973
const ENCRYPTION = 57974
const ENGINE = 57975
const INSERT_METHOD = 57976
const MAX_ROWS = 57977
const MIN_ROWS = 57978
const PACK_KEYS = 57979
const PASSWORD = 57980
const FIXED = 57981
const DYNAMIC = 57982
const COMPRESSED = 57983
const REDUNDANT = 57984
const COMPACT = 57985
const ROW_FORMAT = 57986
const STATS_AUTO_RECALC = 57987
const STATS_PERSISTENT = 57988
const STATS_SAMPLE_PAGES = 57989
const STORAGE = 57990
const MEMORY = 57991
const DISK = 57992
const PARTITIONS = 57993
const LINEAR = 57994
const RANGE = 57995
const LIST = 57996
const SUBPARTITION = 57997
const SUBPARTITIONS = 57998
const HASH = 57999

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 161,
	675, 161,
	-2, 169,
	-1, 53,
	135, 169,
	176, 169,
	347, 169,
	-2, 523,
	-1, 62,
	36, 783,
	239, 783,
	250, 783,
	285, 797,
	286, 797,
	-2, 785,
	-1, 67,
	241, 821,
	-2, 819,
	-1, 125,
	238, 1482,
	-2, 135,
	-1, 127,
	1, 162,
	675, 162,
	-2, 169,
	-1, 138,
	136, 409,
	244, 409,
	-2, 512,
	-1, 157,
	135, 169,
	176, 169,
	347, 169,
	-2, 532,
	-1, 829,
	87, 1499,
	-2, 1344,
	-1, 830,
	87, 1500,
	221, 1504,
	-2, 1345,
	-1, 831,
	221, 1503,
	-2, 42,
	-1, 910,
	60, 895,
	-2, 910,
	-1, 998,
	249, 43,
	254, 43,
	-2, 420,
	-1, 1083,
	1, 580,
	675, 580,
	-2, 169,
	-1, 1391,
	221, 1504,
	-2, 1345,
	-1, 1538,
	60, 896,
	-2, 915,
	-1, 1539,
	60, 897,
	-2, 916,
	-1, 1590,
	135, 169,
	176, 169,
	347, 169,
	-2, 459,
	-1, 1673,
	136, 409,
	244, 409,
	-2, 512,
	-1, 1682,
	249, 44,
	254, 44,
	-2, 421,
	-1, 2052,
	221, 1508,
	-2, 1502,
	-1, 2053,
	221, 1504,
	-2, 1500,
	-1, 2151,
	135, 169,
	176, 169,
	347, 169,
	-2, 460,
	-1, 2158,
	26, 190,
	-2, 192,
	-1, 2532,
	78, 98,
	88, 98,
	-2, 974,
	-1, 2601,
	650, 700,
	-2, 674,
	-1, 2768,
	50, 1450,
	-2, 1444,
	-1, 3421,
	650, 700,
	-2, 688,
	-1, 3509,
	90, 632,
	95, 632,
	105, 632,
	178, 632,
	179, 632,
	180, 632,
	181, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	-2, 1866,
}

const yyPrivate = 57344

const yyLast = 47855

var yyAct = [...]int{
	1546, 1919, 830, 840, 3591, 3580, 3549, 3170, 3402, 833,
	3168, 3550, 2148, 703, 3486, 3507, 2099, 3139, 832, 2996,
	1593, 3452, 2918, 3475, 2081, 2820, 2827, 3386, 3334, 2878,
	2869, 2883, 2880, 2879, 2877, 2882, 2881, 2781, 1865, 795,
	1151, 5, 3126, 2083, 904, 800, 2784, 3384, 2432, 3198,
	682, 2898, 799, 3374, 3169, 42, 2466, 685, 198, 2727,
	2785, 198, 2222, 2782, 2897, 2835, 662, 926, 3035, 2662,
	1553, 668, 3203, 3029, 2119, 2505, 2103, 793, 713, 2900,
	2769, 3055, 198, 2492, 2566, 794, 2043, 2779, 2646, 2122,
	683, 1651, 3021, 2567, 2924, 2190, 1030, 198, 2598, 2253,
	1099, 2185, 681, 2210, 2568, 166, 1153, 2517, 2136, 2498,
	41, 959, 2124, 43, 2484, 1540, 2468, 2123, 2014, 2040,
	2048, 1934, 1873, 927, 668, 198, 1128, 668, 2638, 906,
	1915, 2231, 152, 2209, 2111, 2270, 1680, 2192, 908, 2559,
	911, 988, 1698, 1562, 1521, 993, 1582, 2534, 100, 2126,
	695, 1403, 1938, 1803, 2013, 1892, 1316, 1331, 963, 929,
	1808, 967, 999, 1779, 996, 968, 104, 1687, 1799, 2207,
	1006, 2181, 105, 994, 995, 1581, 690, 1567, 944, 2104,
	946, 2049, 917, 1387, 1363, 914, 1864, 2010, 85, 1149,
	99, 107, 1947, 2182, 1142, 1817, 1644, 135, 912, 170,
	130, 913, 128, 129, 1672, 136, 1079, 915, 1407, 106,
	689, 939, 84, 3411, 2591, 98, 3581, 3127, 672, 2866,
	193, 3437, 93, 2224, 2225, 2226, 2224, 2621, 2620, 657,
	2589, 2268, 1332, 934, 938, 3119, 611, 95, 95, 3533,
	2654, 95, 614, 2655, 132, 3082, 3173, 3438, 920, 3433,
	3432, 1032, 131, 1411, 1764, 1880, 651, 175, 137, 657,
	1895, 1879, 1878, 1035, 1049, 1050, 1051, 960, 1054, 1055,
	1056, 1057, 119, 651, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 921, 673, 953, 905, 1877, 954, 986, 907, 2,
	2548, 1876, 2888, 1547, 1009, 849, 850, 851, 1875, 1848,
	1010, 985, 1327, 172, 3528, 648, 173, 3173, 1332, 675,
	2078, 2079, 676, 1036, 1039, 1040, 2464, 131, 984, 928,
	983, 982, 1043, 3172, 2765, 952, 797, 798, 193, 192,
	1342, 2494, 1517, 956, 111, 112, 113, 972, 116, 2611,
	1052, 125, 3433, 2320, 194, 1348, 2257, 605, 2886, 952,
	797, 798, 132, 632, 154, 2731, 3601, 3537, 3535, 3548,
	670, 671, 3571, 3001, 3000, 175, 630, 2614, 3387, 651,
	900, 901, 902, 903, 2892, 3553, 910, 2433, 2888, 849,
	850, 851, 3536, 3534, 977, 131, 2255, 1885, 2943, 3330,
	2256, 2885, 3329, 651, 3172, 3132, 165, 1034, 3133, 3562,
	1033, 3340, 153, 86, 941, 942, 627, 3531, 677, 2329,
	3151, 3140, 3476, 966, 3416, 642, 1342, 651, 3483, 3493,
	95, 172, 2250, 86, 173, 3339, 86, 2508, 3487, 88,
	637, 1924, 3150, 3512, 2886, 3517, 2963, 1318, 1338, 1661,
	2465, 176, 640, 141, 142, 164, 163, 192, 86, 1583,
	182, 1584, 2509, 3515, 2628, 2629, 2817, 2818, 652, 2107,
	2892, 2816, 3521, 3522, 976, 1364, 1135, 978, 1137, 1082,
	2837, 2838, 3216, 2543, 2327, 652, 2542, 3516, 2653, 2544,
	1345, 95, 1346, 1347, 2637, 2326, 2889, 2940, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1373, 1372, 1374, 1375, 2143,
	2144, 95, 2142, 3493, 95, 1146, 1134, 1136, 617, 3032,
	619, 633, 1118, 654, 1328, 653, 623, 898, 621, 625,
	634, 626, 2080, 620, 1338, 631, 95, 1330, 622, 635,
	636, 639, 643, 644, 645, 641, 638, 646, 615, 616,
	1317, 629, 655, 1857, 1858, 897, 158, 139, 161, 146,
	138, 945, 159, 160, 2201, 981, 3403, 1088, 1089, 176,
	2555, 1123, 1124, 2951, 2592, 981, 1119, 973, 182, 147,
	1112, 3554, 2889, 2920, 975, 974, 167, 2195, 2836, 1078,
	651, 652, 2696, 150, 148, 143, 144, 145, 149, 1091,
	2839, 1106, 3555, 2161, 2160, 140, 1107, 198, 651, 198,
	2501, 2502, 198, 198, 151, 652, 1106, 2321, 2322, 2324,
	2323, 1107, 1132, 979, 2949, 2318, 1133, 1856, 665, 1105,
	1145, 1104, 1860, 979, 981, 1077, 1138, 663, 669, 652,
	2925, 2639, 1525, 2913, 3362, 1579, 3363, 2599, 2232, 1053,
	668, 2914, 668, 668, 3529, 2624, 955, 949, 947, 2276,
	1809, 612, 2271, 2105, 2106, 3583, 1780, 1131, 1121, 1122,
	1120, 1809, 668, 198, 1113, 1125, 1139, 2921, 1144, 1127,
	955, 949, 947, 2309, 1754, 1126, 2922, 1337, 1334, 1335,
	1336, 1341, 1343, 1340, 2295, 1339, 2296, 1084, 2297, 1081,
	651, 1391, 2641, 193, 167, 1333, 2283, 2279, 2281, 2282,
	2280, 2286, 2287, 3121, 2277, 2284, 2285, 2730, 1102, 3120,
	1108, 1109, 1110, 1111, 2298, 1807, 1059, 132, 1755, 1058,
	1756, 2273, 3117, 3314, 2194, 989, 2235, 3177, 1389, 990,
	175, 1019, 2107, 2120, 1147, 1148, 1017, 1528, 2275, 990,
	3410, 2590, 1028, 1027, 1026, 1399, 1025, 980, 1024, 2697,
	1665, 1029, 1023, 1140, 1022, 168, 656, 980, 1021, 1016,
	987, 2839, 180, 1337, 1334, 1335, 1336, 1341, 1343, 1340,
	3602, 1339, 1381, 1382, 1383, 1384, 613, 1116, 649, 162,
	2274, 1333, 1395, 846, 846, 3560, 172, 846, 964, 173,
	1309, 1378, 652, 650, 1080, 1378, 964, 1001, 940, 2626,
	964, 1002, 2254, 188, 962, 1038, 1800, 3033, 3489, 2557,
	652, 1001, 192, 2208, 1686, 1037, 980, 2642, 2261, 2260,
	2469, 2471, 1796, 1319, 2327, 1045, 1046, 2859, 1008, 1310,
	1311, 2645, 2623, 1391, 1659, 1658, 3116, 3171, 1385, 1657,
	155, 3488, 3399, 156, 2609, 2941, 1797, 169, 174, 171,
	177, 178, 179, 181, 183, 184, 185, 186, 2593, 3080,
	3081, 1580, 948, 187, 189, 190, 191, 1655, 1766, 1765,
	1767, 1768, 1769, 168, 2613, 89, 3149, 2658, 1020, 610,
	180, 2341, 609, 1018, 604, 2252, 948, 2499, 1515, 3069,
	198, 3051, 3489, 2636, 668, 668, 2635, 1379, 1380, 2890,
	2891, 3520, 652, 1548, 1550, 1326, 2328, 2539, 3171, 198,
	2504, 1409, 2894, 1410, 94, 2441, 1927, 1571, 2612, 1480,
	1093, 188, 1685, 127, 176, 3488, 2105, 2106, 3595, 668,
	1007, 2149, 198, 182, 94, 1784, 1008, 94, 1378, 1375,
	2815, 923, 1532, 1087, 668, 3519, 1516, 1143, 1531, 1948,
	1103, 198, 1535, 2985, 1785, 3424, 1129, 908, 1031, 94,
	1413, 3112, 1529, 1949, 1818, 169, 174, 171, 177, 178,
	179, 181, 183, 184, 185, 186, 3045, 2272, 1101, 1869,
	1115, 187, 189, 190, 191, 2890, 2891, 2470, 2648, 668,
	1090, 1117, 1008, 2647, 1793, 2648, 2198, 1585, 2894, 2682,
	2647, 1939, 1391, 2358, 1939, 2582, 1346, 1347, 668, 668,
	1516, 668, 1813, 668, 668, 3563, 668, 668, 668, 668,
	668, 668, 1533, 1813, 1347, 104, 3212, 3087, 1534, 1391,
	3086, 105, 1391, 668, 1391, 198, 2199, 1522, 1007, 1692,
	1044, 1509, 2239, 2197, 1041, 1486, 1487, 1488, 1489, 1490,
	107, 1810, 1811, 1814, 1812, 198, 1887, 1889, 1890, 167,
	1695, 2249, 1810, 1811, 1814, 1812, 1727, 1694, 668, 1730,
	198, 1732, 1662, 1663, 1664, 1684, 1008, 2200, 123, 2251,
	1888, 2247, 1019, 1781, 668, 1782, 198, 2196, 1783, 1008,
	2663, 1017, 1946, 1549, 1007, 120, 1749, 3556, 1678, 1348,
	1001, 1004, 1005, 1130, 964, 1519, 198, 905, 998, 1002,
	3070, 1819, 919, 198, 1552, 1671, 2244, 907, 1530, 1083,
	1897, 1100, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 668, 2244, 1690, 1898, 1376, 1377, 1896, 3603, 1739,
	1740, 3597, 1731, 1576, 1577, 1745, 1746, 3593, 3322, 1700,
	3594, 1701, 3592, 1703, 1705, 2248, 121, 1709, 1711, 1713,
	1715, 1717, 3321, 1689, 3454, 1688, 1688, 1788, 1654, 1786,
	1787, 2246, 1791, 1792, 2665, 3392, 1789, 1790, 1007, 1669,
	1008, 3312, 3162, 1011, 1001, 1681, 1668, 1667, 1013, 3161,
	1805, 1007, 1014, 1012, 2333, 2334, 2335, 1001, 1004, 1005,
	3146, 964, 3147, 1822, 1774, 998, 1002, 1348, 1772, 3455,
	1826, 1761, 1828, 1829, 1830, 1831, 1735, 1547, 2355, 1835,
	3393, 1820, 1821, 3094, 1944, 3604, 997, 3093, 122, 3083,
	2867, 1847, 1348, 1945, 1345, 1825, 1346, 1347, 168, 849,
	850, 851, 1832, 1833, 1834, 180, 2675, 2674, 2673, 1801,
	1560, 2667, 2855, 2671, 2564, 2666, 1348, 2664, 2563, 2562,
	2204, 1775, 2669, 1759, 1758, 1757, 2045, 1660, 1773, 1747,
	2042, 2668, 1771, 131, 984, 1760, 983, 982, 1741, 2044,
	1364, 1738, 1007, 1737, 1736, 2045, 188, 1011, 1001, 2670,
	2672, 2354, 1013, 844, 1707, 1098, 1014, 1012, 1097, 657,
	1824, 668, 668, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1373, 1372, 1374, 1375, 668, 2917, 1559, 1015, 1845, 3077,
	657, 2546, 657, 198, 1846, 2220, 2219, 2218, 2217, 1364,
	169, 174, 171, 177, 178, 179, 181, 183, 184, 185,
	186, 1313, 1345, 3557, 1346, 1347, 187, 189, 190, 191,
	1988, 2397, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373,
	1372, 1374, 1375, 2216, 2215, 42, 1579, 1345, 42, 1346,
	1347, 668, 1923, 1922, 1922, 1370, 1371, 1373, 1372, 1374,
	1375, 1391, 1348, 2490, 3582, 3544, 1547, 1547, 1920, 1920,
	1556, 1345, 668, 1346, 1347, 1893, 3419, 3418, 1391, 1942,
	2684, 1348, 1900, 1943, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 3396, 1389, 1344,
	1547, 1348, 3395, 668, 668, 1366, 1367, 1368, 1369, 1370,
	1371, 1373, 1372, 1374, 1375, 1940, 1557, 2006, 2490, 3482,
	3412, 1515, 3394, 1901, 1891, 3317, 1980, 1969, 1970, 1971,
	1972, 1982, 1973, 1974, 1975, 1987, 1983, 1976, 1977, 1984,
	1985, 1986, 1978, 1979, 1981, 2038, 3567, 1547, 2490, 3462,
	2490, 3458, 3348, 2053, 1368, 1369, 1370, 1371, 1373, 1372,
	1374, 1375, 2395, 2002, 3301, 3565, 1547, 3347, 1853, 1854,
	2067, 3300, 1344, 1547, 3305, 1348, 3445, 1547, 85, 1516,
	1894, 85, 1870, 1348, 3211, 3499, 1547, 1548, 2074, 3130,
	3409, 2050, 3325, 1547, 2490, 3313, 198, 1345, 3209, 1346,
	1347, 668, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373,
	1372, 1374, 1375, 3158, 1514, 1899, 1345, 110, 1346, 1347,
	2096, 1513, 3044, 1512, 198, 3130, 1547, 668, 109, 101,
	108, 3091, 2041, 3076, 1348, 2926, 1345, 198, 1346, 1347,
	102, 668, 1926, 2923, 2053, 198, 2858, 198, 2857, 198,
	198, 2573, 1933, 1935, 2560, 1348, 1511, 2052, 2266, 3497,
	1547, 1348, 2490, 3128, 668, 2244, 1547, 3495, 1547, 3304,
	2091, 2265, 2092, 2055, 2056, 2102, 2158, 2086, 1950, 1951,
	1952, 1953, 2050, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1350, 1849, 1964, 1815, 110, 1547, 3049, 1547, 1547, 2130,
	2406, 1547, 1348, 1770, 2051, 109, 1348, 108, 103, 104,
	1345, 1762, 1346, 1347, 1752, 105, 103, 1348, 1345, 1547,
	1346, 1347, 1748, 668, 2205, 2958, 2095, 1348, 2393, 104,
	1744, 101, 1743, 2054, 1742, 105, 2057, 2058, 103, 3371,
	1547, 3138, 102, 2848, 2847, 3369, 1547, 1348, 2052, 1558,
	668, 2167, 2168, 2169, 2170, 1141, 668, 2845, 2846, 2600,
	2162, 2506, 2163, 2164, 2165, 2166, 2152, 1547, 920, 1345,
	2134, 1346, 1347, 2153, 2578, 1547, 109, 2073, 2173, 2174,
	2175, 2176, 2085, 2843, 2844, 2535, 3366, 1547, 2157, 2094,
	1345, 1547, 1346, 1347, 1344, 2117, 1345, 1547, 1346, 1347,
	3046, 2233, 1547, 668, 2097, 2843, 2842, 2156, 668, 2514,
	1547, 3343, 668, 668, 2535, 2187, 2115, 2327, 2622, 1650,
	2603, 2596, 2597, 2193, 1348, 953, 2140, 2139, 954, 2138,
	3450, 3352, 1547, 2514, 1348, 2155, 2154, 1345, 1348, 1346,
	1347, 1345, 1348, 1346, 1347, 1344, 1348, 3423, 2536, 2506,
	198, 1348, 1345, 2000, 1346, 1347, 2203, 198, 2538, 2230,
	2490, 2489, 1345, 2011, 1346, 1347, 2486, 2490, 198, 198,
	2112, 2113, 198, 2188, 198, 2351, 1547, 2536, 1925, 1547,
	198, 103, 1345, 2184, 1346, 1347, 2202, 2327, 2206, 2514,
	198, 2238, 1650, 1649, 2241, 2780, 2242, 198, 1591, 1590,
	2214, 2177, 2179, 2180, 3005, 2513, 3044, 2245, 3020, 1547,
	2188, 1009, 2258, 2845, 2236, 2237, 2348, 1010, 3013, 1547,
	1348, 3044, 3064, 198, 2240, 1364, 2347, 1688, 1360, 2753,
	1361, 2075, 668, 2259, 2141, 3015, 2262, 2011, 2351, 2351,
	2263, 2264, 2385, 2406, 1362, 1376, 1377, 1359, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1373, 1372, 1374, 1375, 1345,
	2514, 1346, 1347, 2382, 2810, 2244, 2381, 95, 1348, 1345,
	2269, 1346, 1347, 1345, 2327, 1346, 1347, 1345, 2244, 1346,
	1347, 1345, 2227, 1346, 1347, 2110, 1345, 1551, 1346, 1347,
	2076, 2311, 2312, 1925, 1871, 1348, 2314, 2344, 1391, 1855,
	2053, 2349, 1795, 1578, 2352, 2315, 2353, 123, 992, 991,
	3525, 2360, 1893, 3465, 3336, 2362, 2363, 2364, 2337, 1364,
	2339, 2657, 1554, 3302, 3223, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2343, 2301, 2307, 2345, 3111,
	3108, 3089, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373,
	1372, 1374, 1375, 3558, 2968, 1345, 2967, 1346, 1347, 2338,
	1652, 2386, 2387, 2388, 2389, 2390, 2186, 2392, 2915, 2872,
	1348, 2394, 2868, 2604, 1348, 2399, 2400, 2183, 2401, 3010,
	1547, 2404, 2317, 2405, 1348, 95, 2178, 2408, 1348, 2172,
	2171, 2412, 1777, 1683, 1348, 2417, 2418, 2419, 2420, 2325,
	1348, 1679, 1646, 1345, 2052, 1346, 1347, 124, 2431, 2870,
	2434, 2435, 2570, 1082, 2919, 1348, 3337, 1894, 2437, 2439,
	3056, 3057, 2336, 1348, 2201, 2442, 2443, 2444, 2445, 2446,
	1345, 1348, 1346, 1347, 2569, 1348, 2453, 2454, 2089, 2455,
	1348, 1851, 2458, 2460, 2096, 2346, 2462, 1555, 3577, 198,
	3575, 2051, 3551, 3431, 3008, 1547, 2474, 198, 3011, 2475,
	2357, 1922, 1364, 3357, 2340, 3059, 668, 2093, 2973, 1547,
	2864, 2863, 2956, 1547, 2862, 2780, 1920, 668, 2461, 1547,
	2583, 2302, 2570, 1348, 2983, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1373, 1372, 1374, 1375, 3062, 1348, 2473, 2459,
	1547, 198, 3061, 1852, 2799, 1345, 198, 1346, 1347, 1345,
	2798, 1346, 1347, 2802, 3427, 2438, 1547, 2391, 2803, 1345,
	3407, 1346, 1347, 1345, 2979, 1346, 1347, 3338, 2510, 1345,
	3050, 1346, 1347, 2101, 2800, 1345, 3099, 1346, 1347, 2801,
	2758, 2757, 42, 678, 2476, 3391, 2478, 3095, 3202, 2491,
	1345, 2528, 1346, 1347, 2530, 1348, 1719, 3040, 1345, 1348,
	1346, 1347, 2804, 3204, 2523, 2524, 1345, 2965, 1346, 1347,
	1345, 3037, 1346, 1347, 668, 1345, 2767, 1346, 1347, 3036,
	198, 2487, 3309, 3100, 3101, 3102, 2500, 198, 2529, 1348,
	1794, 2463, 896, 2553, 1348, 2841, 1522, 2574, 3096, 3097,
	3098, 668, 1048, 1720, 1721, 1722, 924, 1348, 668, 1516,
	2556, 2558, 1047, 2483, 925, 2595, 1348, 668, 1345, 2488,
	1346, 1347, 2770, 2772, 2503, 2934, 2533, 2549, 3193, 1348,
	3192, 2773, 1345, 1391, 1346, 1347, 1348, 2610, 2569, 2421,
	1547, 1348, 2651, 2413, 1547, 2619, 198, 198, 198, 198,
	198, 1348, 930, 2537, 1723, 936, 936, 101, 2540, 1312,
	2365, 2572, 2547, 132, 103, 2193, 2575, 2576, 102, 2550,
	2617, 3042, 101, 2964, 198, 198, 103, 2380, 3191, 3113,
	3589, 1348, 2561, 102, 2860, 1348, 2112, 2113, 1948, 2305,
	1345, 2961, 1346, 1347, 1345, 3504, 1346, 1347, 1348, 2571,
	198, 2565, 1949, 2294, 3408, 1724, 1725, 1726, 3332, 1348,
	2579, 2840, 2580, 2457, 2527, 2584, 2585, 2586, 2098, 2293,
	2456, 668, 932, 933, 1345, 2452, 1346, 1347, 2616, 1345,
	1671, 1346, 1347, 1348, 2292, 2451, 2686, 2687, 2688, 2689,
	2690, 1348, 1345, 2291, 1346, 1347, 2605, 2606, 110, 2756,
	2290, 1345, 2289, 1346, 1347, 2695, 2288, 2755, 3022, 109,
	2615, 108, 2331, 2661, 1345, 2450, 1346, 1347, 668, 2449,
	103, 1345, 110, 1346, 1347, 108, 1345, 3379, 1346, 1347,
	3378, 3360, 2448, 109, 109, 108, 1345, 2676, 1346, 1347,
	1545, 1541, 2640, 2447, 2643, 2691, 3210, 2519, 2522, 2523,
	2524, 2520, 2660, 2521, 2525, 1542, 668, 2649, 3208, 3207,
	2650, 3200, 3109, 2659, 668, 3041, 1345, 2436, 1346, 1347,
	1345, 3039, 1346, 1347, 1348, 2430, 2873, 2228, 1666, 1348,
	1647, 1648, 1544, 1345, 1543, 1346, 1347, 110, 931, 3199,
	3030, 3578, 2506, 2679, 1345, 668, 1346, 1347, 109, 2677,
	3181, 1348, 2737, 2486, 2732, 3579, 3578, 3579, 2698, 198,
	2383, 2087, 3, 668, 1572, 1564, 3397, 2734, 1345, 1348,
	1346, 1347, 114, 115, 3075, 922, 1345, 668, 1346, 1347,
	123, 1391, 2789, 97, 668, 668, 1391, 198, 198, 198,
	198, 198, 2041, 1, 2041, 2706, 2700, 1095, 1868, 198,
	2807, 10, 1806, 1348, 1315, 198, 1314, 198, 2429, 2130,
	198, 198, 198, 2428, 1866, 2737, 1867, 9, 2783, 8,
	3079, 2792, 3514, 2783, 628, 2786, 2733, 2809, 2735, 2077,
	2760, 2736, 1520, 3552, 911, 2427, 3510, 2130, 2130, 2130,
	2130, 2130, 3511, 2777, 1763, 1753, 2761, 2716, 2717, 2718,
	2719, 2720, 3141, 2426, 2748, 2012, 198, 2130, 3333, 1345,
	2130, 1346, 1347, 2876, 1345, 2234, 1346, 1347, 2759, 668,
	3107, 2191, 1391, 2762, 1000, 2774, 2775, 668, 157, 2150,
	2151, 3478, 198, 118, 957, 2752, 1345, 2425, 1346, 1347,
	117, 2896, 912, 1003, 2811, 913, 198, 2812, 2794, 2795,
	1114, 2797, 2793, 2805, 1345, 2796, 1346, 1347, 2229, 2875,
	2749, 2750, 2751, 1348, 3131, 198, 1805, 2813, 198, 1348,
	2554, 2159, 104, 1597, 2819, 2791, 1595, 2936, 105, 1596,
	1348, 1594, 2852, 1599, 1598, 2850, 2853, 2854, 1345, 2942,
	1346, 1347, 2851, 2384, 2984, 1859, 664, 2953, 2954, 2955,
	1348, 2957, 2959, 2526, 1348, 658, 195, 1586, 1565, 2904,
	1348, 2997, 1042, 2678, 618, 2966, 2849, 2903, 2267, 2895,
	2970, 2971, 2972, 2974, 2975, 2976, 2977, 2193, 2874, 2978,
	624, 2980, 2981, 2982, 2910, 1396, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 2994, 2995, 1850, 2424, 668, 2930,
	2754, 2541, 2929, 2423, 3002, 2927, 1348, 3006, 951, 3007,
	3009, 943, 3012, 3014, 2422, 3016, 3017, 3018, 3019, 2938,
	2932, 2933, 2708, 3025, 2710, 2944, 2945, 198, 2946, 2088,
	2937, 2948, 2477, 2950, 2416, 2952, 950, 3310, 2415, 2947,
	2721, 2722, 2723, 2724, 2414, 1348, 2999, 2788, 1345, 3034,
	1346, 1347, 2766, 3003, 1345, 2768, 1346, 1347, 3047, 3048,
	2493, 2771, 3052, 2764, 3390, 1345, 3201, 1346, 1347, 1348,
	3463, 2551, 1561, 3004, 2356, 1937, 1386, 1348, 2127, 3176,
	1886, 1348, 687, 198, 686, 1345, 684, 1346, 1347, 1345,
	2411, 1346, 1347, 1348, 2479, 1345, 2507, 1346, 1347, 1351,
	1348, 834, 2467, 1573, 1348, 3028, 2518, 2516, 2515, 2303,
	3026, 2135, 198, 3023, 3024, 3058, 3054, 3506, 3031, 3038,
	2129, 2125, 2485, 1349, 785, 1348, 784, 696, 688, 2410,
	680, 783, 198, 2130, 782, 198, 198, 198, 3053, 3043,
	3072, 1345, 1348, 1346, 1347, 668, 668, 3063, 3060, 2902,
	3490, 2625, 1404, 2409, 3065, 2916, 2627, 3067, 3068, 3114,
	3115, 2407, 2552, 2912, 1329, 2403, 1537, 674, 3129, 971,
	3066, 2904, 3073, 3074, 2939, 3414, 2330, 2402, 2962, 2903,
	1345, 1536, 1346, 1347, 2398, 3135, 3136, 1967, 2396, 3090,
	1968, 3092, 668, 668, 668, 668, 3421, 2884, 3125, 2865,
	3084, 3085, 2601, 2221, 1345, 70, 1346, 1347, 46, 2361,
	3148, 3385, 1345, 3152, 1346, 1347, 1345, 3451, 1346, 1347,
	781, 778, 3178, 3179, 3180, 2728, 2350, 2729, 1345, 3434,
	1346, 1347, 1545, 1541, 3435, 1345, 777, 1346, 1347, 1345,
	3163, 1346, 1347, 3436, 1995, 1325, 1322, 1542, 3527, 1861,
	96, 37, 3137, 3118, 36, 3167, 35, 3122, 3123, 3124,
	1345, 34, 1346, 1347, 33, 27, 26, 3175, 25, 24,
	23, 20, 1538, 1539, 1544, 3182, 1543, 1345, 30, 1346,
	1347, 22, 21, 2519, 2522, 2523, 2524, 2520, 19, 2521,
	2525, 18, 3153, 3056, 3057, 2887, 3547, 3588, 198, 126,
	3157, 55, 52, 50, 134, 133, 53, 49, 1085, 47,
	32, 31, 17, 16, 15, 14, 13, 1391, 12, 11,
	3196, 7, 668, 6, 668, 3174, 40, 39, 29, 38,
	28, 4, 2588, 2223, 0, 0, 3225, 0, 1922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1920, 2783, 0, 0, 3217, 0, 0,
	0, 0, 2786, 0, 0, 0, 2786, 3219, 3221, 0,
	0, 42, 3197, 3206, 0, 1563, 3205, 3215, 3213, 0,
	0, 0, 0, 0, 668, 0, 0, 0, 845, 0,
	0, 87, 0, 0, 0, 0, 3324, 198, 3311, 0,
	668, 0, 0, 3229, 0, 3331, 0, 0, 0, 0,
	0, 3226, 3227, 668, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3341, 3342, 0, 3344, 0,
	3345, 3346, 0, 3315, 0, 3349, 3350, 3351, 3323, 3353,
	3356, 0, 3308, 3307, 3306, 3358, 3355, 1922, 0, 0,
	0, 3335, 3328, 0, 0, 3365, 3367, 3368, 3370, 3372,
	3373, 3375, 1920, 668, 3327, 0, 0, 668, 668, 0,
	0, 0, 0, 0, 909, 0, 87, 0, 0, 0,
	0, 0, 2823, 0, 0, 0, 3318, 3319, 3320, 0,
	0, 3359, 0, 3354, 0, 909, 668, 0, 0, 3405,
	0, 0, 0, 0, 0, 0, 0, 0, 3361, 0,
	3401, 0, 3364, 970, 0, 0, 0, 3383, 3380, 3381,
	0, 0, 0, 3382, 0, 0, 0, 2824, 0, 0,
	0, 0, 2786, 3398, 0, 0, 0, 0, 0, 0,
	0, 3404, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 2826, 0, 0, 0, 0, 0, 0, 0, 3400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2821,
	0, 0, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2837, 2838, 0, 3406,
	0, 198, 3165, 2822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	198, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 3425, 0, 3430, 2828, 0, 0, 0,
	3413, 0, 3417, 0, 0, 0, 0, 0, 3420, 0,
	0, 3422, 0, 0, 0, 3446, 0, 0, 0, 0,
	0, 3447, 3448, 0, 0, 42, 0, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 0, 668, 3459, 0, 0, 0, 607, 0, 0,
	3440, 0, 0, 3441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2836, 0, 668, 668, 899, 3484,
	3485, 3449, 0, 0, 0, 3456, 2839, 2783, 0, 0,
	0, 0, 3466, 3494, 3496, 3498, 3491, 3464, 668, 0,
	3492, 3469, 3477, 3474, 3471, 3470, 3468, 3473, 3472, 0,
	0, 42, 198, 668, 3335, 3479, 0, 0, 3526, 0,
	0, 965, 3461, 0, 0, 0, 0, 0, 3502, 0,
	0, 0, 0, 0, 3505, 0, 0, 0, 3523, 3513,
	3518, 0, 0, 0, 0, 0, 0, 3491, 0, 0,
	0, 3492, 3532, 0, 0, 3530, 668, 3543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 1882,
	1883, 1884, 0, 0, 0, 3541, 0, 0, 668, 3546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3564,
	3566, 3568, 3559, 3389, 1399, 668, 0, 668, 3561, 3573,
	0, 1922, 0, 0, 2825, 0, 0, 3576, 0, 3572,
	3570, 3574, 3569, 0, 0, 0, 1920, 1928, 1929, 0,
	3587, 0, 1931, 3491, 936, 936, 1936, 3492, 3584, 0,
	1941, 0, 3590, 0, 3596, 0, 3599, 3600, 3598, 0,
	0, 0, 0, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 3605, 0, 1922, 0, 1989, 1990, 1991,
	1992, 1993, 1994, 1996, 3355, 2001, 3606, 2003, 2004, 2005,
	1920, 2007, 2008, 2009, 0, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 0, 2039,
	0, 2046, 2047, 936, 0, 936, 936, 936, 936, 936,
	3607, 3608, 0, 0, 0, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 0, 2068, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 0, 0, 0, 0,
	0, 0, 0, 3439, 0, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 2109, 0, 2829, 0, 0, 0,
	2833, 0, 0, 0, 0, 0, 0, 2832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2147,
	0, 0, 0, 0, 0, 0, 1150, 0, 1150, 1150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2834, 0, 0, 0, 0, 2830, 0, 0, 0,
	0, 2831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 1388, 1393, 1394,
	2189, 1397, 0, 1398, 1400, 1401, 1402, 0, 1405, 1406,
	1408, 1408, 0, 1408, 1412, 1412, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 0, 0, 0, 0, 1479, 0, 1481, 1482, 1483,
	1484, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 1412, 1412, 1412, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 0, 0,
	0, 0, 0, 1086, 0, 1092, 0, 0, 1094, 1096,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1524, 1321,
	0, 0, 0, 0, 909, 0, 0, 0, 909, 0,
	0, 0, 0, 909, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 44, 45, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 48, 77, 78, 0,
	75, 79, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2594, 0, 0, 0, 63, 0,
	0, 0, 0, 2359, 0, 0, 0, 132, 0, 154,
	95, 0, 0, 0, 2366, 2367, 2368, 2369, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 153, 0, 1404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 1675,
	164, 163, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 51, 54,
	57, 56, 59, 0, 74, 0, 0, 83, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 1563, 0, 0, 0, 1575, 0,
	0, 62, 91, 90, 0, 0, 72, 73, 58, 0,
	0, 0, 0, 0, 81, 82, 0, 1592, 0, 0,
	0, 158, 1676, 161, 0, 1673, 0, 159, 160, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 65,
	0, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 1150, 1150, 0,
	0, 647, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 87, 0, 0, 87, 0, 0, 0, 3247, 3249,
	3248, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 735, 167,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 0, 0, 0,
	667, 89, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 2680, 2681,
	0, 0, 2683, 0, 0, 2685, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 2692, 2693, 2694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2699, 0, 0,
	2701, 2702, 2703, 0, 0, 0, 2704, 2705, 0, 0,
	2015, 2707, 0, 0, 2709, 0, 0, 2711, 2712, 2713,
	2714, 0, 0, 0, 0, 2715, 2015, 2015, 2015, 2015,
	2015, 0, 0, 0, 0, 155, 0, 0, 156, 0,
	0, 0, 0, 0, 936, 0, 0, 0, 0, 0,
	0, 2738, 2739, 2740, 2741, 2742, 2743, 0, 0, 0,
	2744, 2745, 0, 2746, 0, 2747, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	2778, 0, 0, 0, 3253, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 2128, 0, 0, 0, 3261,
	3262, 0, 0, 0, 0, 2808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 174, 171, 177, 178, 179, 181, 183, 184, 185,
	186, 0, 0, 0, 0, 0, 187, 189, 190, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 801, 970,
	714, 805, 716, 802, 803, 0, 712, 715, 804, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 970, 0, 733, 734, 3246, 3250, 3251, 3252,
	3263, 3264, 3265, 3273, 3275, 766, 3274, 3276, 3277, 3278,
	3281, 3282, 3283, 3284, 3279, 3280, 3285, 3230, 3234, 3231,
	3232, 3233, 3245, 3235, 3236, 3237, 3238, 3239, 3240, 3241,
	3242, 3243, 3244, 3286, 3287, 3288, 3289, 3290, 3291, 3256,
	3260, 3259, 3257, 3258, 3254, 3255, 0, 0, 2960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	807, 0, 2969, 811, 0, 0, 0, 813, 812, 0,
	814, 780, 779, 0, 0, 808, 809, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2114, 0, 0, 0, 0, 0, 0,
	0, 2118, 0, 2121, 0, 0, 1874, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 3292, 3293, 3294, 3295, 3296, 3297, 3298,
	3299, 0, 0, 0, 132, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2332, 0, 0, 0, 165, 0,
	0, 0, 1615, 0, 153, 0, 667, 1308, 667, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 173, 0, 667, 0,
	0, 0, 3110, 2342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1674, 1675, 164, 163, 192,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	0, 0, 0, 0, 0, 3134, 1628, 1631, 1632, 1633,
	1634, 1635, 1636, 0, 1637, 1638, 1640, 1641, 1639, 1642,
	1643, 1616, 1617, 1618, 1619, 1600, 1601, 1629, 0, 1603,
	0, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	0, 0, 1613, 1620, 1621, 1622, 1623, 0, 1624, 1625,
	1626, 1627, 0, 0, 0, 0, 1874, 0, 0, 0,
	3154, 0, 3155, 2278, 786, 3156, 0, 0, 3159, 3160,
	0, 0, 0, 0, 2299, 2300, 0, 3164, 2304, 0,
	0, 0, 0, 0, 0, 0, 2308, 3166, 158, 1676,
	161, 0, 1673, 0, 159, 160, 2310, 0, 0, 2440,
	0, 176, 0, 2313, 0, 0, 0, 0, 0, 3183,
	182, 0, 3184, 0, 3185, 3186, 0, 3187, 0, 3188,
	0, 0, 0, 0, 3189, 0, 0, 0, 0, 2316,
	0, 2472, 0, 666, 0, 0, 0, 0, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 909, 0, 3214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3222, 0, 0, 3224, 0, 0, 0, 0, 2511, 2512,
	0, 0, 0, 0, 0, 3228, 0, 2128, 0, 0,
	909, 2531, 0, 0, 0, 0, 961, 0, 0, 969,
	0, 0, 0, 3303, 0, 0, 0, 0, 0, 1630,
	667, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2608, 667, 0, 1682, 0, 0,
	0, 0, 0, 3388, 0, 1691, 0, 0, 1390, 1693,
	0, 0, 1696, 1697, 667, 667, 0, 667, 0, 667,
	667, 162, 667, 667, 667, 667, 667, 667, 0, 0,
	0, 0, 0, 0, 0, 1390, 1728, 1729, 1390, 667,
	1390, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 156, 0, 1798, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2532, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3545, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 3428, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	3442, 0, 0, 3443, 0, 3444, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 2581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 174, 171,
	177, 178, 179, 181, 183, 184, 185, 186, 0, 0,
	0, 0, 0, 187, 189, 190, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 2128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2630, 2631, 2632, 2633, 2634, 0, 2787, 0,
	87, 0, 0, 2128, 2128, 2128, 2128, 2128, 0, 3524,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 2644, 0, 2128, 0, 0, 2128, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 3538,
	0, 3539, 0, 3540, 0, 0, 2652, 667, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2893, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	2901, 0, 0, 0, 0, 0, 918, 0, 0, 3585,
	0, 3586, 0, 0, 1615, 0, 0, 667, 0, 0,
	0, 0, 0, 937, 937, 0, 0, 1390, 0, 0,
	0, 0, 0, 0, 608, 0, 1930, 0, 667, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 1152, 1152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	667, 0, 0, 0, 1320, 0, 0, 0, 1628, 1631,
	1632, 1633, 1634, 1635, 1636, 0, 1637, 1638, 1640, 1641,
	1639, 1642, 1643, 1616, 1617, 1618, 1619, 1600, 1601, 1629,
	0, 1603, 0, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 0, 0, 1613, 1620, 1621, 1622, 1623, 667,
	1624, 1625, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 0, 0, 2128,
	0, 0, 2861, 0, 0, 0, 0, 667, 0, 0,
	667, 0, 3071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2899, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2928, 0, 0, 2931, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 2211, 2212, 2213, 0,
	0, 0, 0, 0, 0, 0, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 667, 1691, 0, 0, 1691, 0, 1691, 0,
	0, 0, 0, 0, 2243, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 3027, 667, 0, 0, 0, 667, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	3190, 0, 3194, 3195, 0, 0, 0, 0, 0, 0,
	1699, 1699, 0, 1699, 0, 1699, 1699, 0, 1708, 1699,
	1699, 1699, 1699, 1699, 0, 2787, 0, 87, 0, 2787,
	0, 0, 0, 0, 0, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3103, 0,
	1776, 3104, 3105, 3106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 667, 0,
	0, 0, 0, 0, 0, 0, 3316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 608, 0,
	0, 608, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2787, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1152, 1152, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 1392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1916, 0, 0, 0, 0, 2545, 0,
	0, 0, 3460, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 0,
	0, 0, 0, 0, 0, 1965, 1966, 0, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	608, 0, 0, 0, 667, 0, 0, 0, 1691, 1691,
	0, 0, 0, 667, 0, 1152, 0, 0, 0, 0,
	0, 0, 0, 3542, 0, 0, 0, 0, 0, 1390,
	2618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1392, 0,
	0, 1392, 0, 1392, 608, 0, 3426, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 1750, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 608,
	0, 0, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 608, 0, 667, 0, 0, 0, 0, 0,
	0, 1836, 1837, 608, 608, 608, 608, 608, 608, 608,
	0, 0, 0, 0, 0, 969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 2045, 0,
	0, 848, 667, 0, 0, 0, 0, 0, 0, 0,
	667, 1921, 961, 0, 0, 0, 0, 0, 969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 961, 0, 0, 0, 0,
	1916, 0, 0, 667, 1916, 1916, 0, 1390, 0, 0,
	667, 667, 1390, 0, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 1390, 0,
	0, 0, 608, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2935, 0, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 937, 0, 0, 0, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 1804, 937, 937, 937, 937, 937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 847, 0, 0, 0, 835,
	848, 849, 850, 851, 836, 1750, 0, 837, 838, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 844, 852, 853, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 3078, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 0, 0, 1804, 608, 0, 608, 0, 608, 2137,
	0, 0, 0, 0, 0, 0, 0, 0, 2480, 0,
	0, 2905, 2906, 0, 0, 0, 0, 0, 0, 2495,
	0, 667, 667, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 0, 0, 0, 667, 667,
	667, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	2602, 0, 0, 0, 0, 0, 0, 0, 0, 2607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2908, 2909, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 667, 608,
	667, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 608, 0,
	0, 608, 0, 2306, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 1916, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1916, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 667, 667, 0, 0, 1392, 2726, 1804,
	0, 0, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1152,
	0, 0, 0, 0, 0, 0, 2790, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 667, 0,
	608, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 2587, 0, 0, 0,
	2998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 1392, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 667, 0, 608, 608, 608, 608, 608,
	0, 847, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1921, 0, 0, 0,
	0, 0, 0, 608, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2100, 2100, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 0, 0, 0, 3142, 3143, 3144, 3145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1392, 0, 0, 0, 0, 1392, 608, 608, 608, 608,
	608, 0, 0, 0, 0, 0, 0, 0, 2806, 0,
	0, 0, 0, 0, 1750, 0, 608, 0, 0, 608,
	2814, 1804, 0, 0, 3218, 0, 3220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1392, 0, 0, 0, 0, 2100, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3326, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3376, 0, 0, 0, 3376,
	3376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 608, 608, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2100, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2998, 0, 3508,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	1286, 1271, 511, 0, 1214, 1289, 1183, 1202, 1299, 1205,
	1208, 1250, 1162, 1228, 409, 1199, 1155, 1187, 1157, 1194,
	1158, 1185, 1216, 267, 1182, 1273, 1232, 1288, 360, 264,
	1164, 1188, 423, 1204, 205, 1252, 480, 251, 371, 368,
	519, 279, 270, 266, 249, 313, 379, 421, 501, 415,
	1295, 364, 1238, 0, 490, 394, 0, 0, 0, 1218,
	1277, 1226, 1264, 1213, 1251, 1172, 1237, 1290, 1200, 1247,
	1291, 319, 247, 321, 204, 406, 491, 283, 0, 0,
	1750, 0, 3480, 657, 0, 0, 0, 0, 3481, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 608,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	1196, 1244, 1285, 1197, 1246, 262, 317, 269, 261, 516,
	1296, 1276, 1161, 1225, 1284, 0, 0, 228, 1287, 1220,
	0, 1249, 0, 1302, 1156, 1240, 0, 1159, 1163, 1298,
	1280, 1191, 272, 0, 0, 0, 0, 0, 0, 0,
	1217, 1227, 1261, 1265, 1211, 0, 0, 0, 0, 1392,
	0, 0, 1189, 0, 1236, 0, 0, 0, 1168, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 1171, 0, 1190,
	1262, 1750, 1154, 294, 1165, 395, 254, 0, 447, 1269,
	1279, 1212, 558, 1283, 1210, 1209, 1256, 1169, 1275, 1203,
	359, 1167, 326, 200, 224, 0, 1201, 405, 455, 467,
	1274, 1186, 1195, 252, 1193, 465, 419, 536, 232, 281,
	452, 425, 463, 435, 284, 1235, 1254, 464, 366, 521,
	445, 533, 559, 560, 260, 399, 545, 505, 553, 580,
	225, 257, 413, 498, 539, 487, 391, 517, 518, 325,
	486, 292, 203, 363, 565, 223, 473, 365, 241, 230,
	523, 542, 286, 450, 429, 430, 575, 212, 500, 531,
	238, 477, 0, 0, 582, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 583, 227, 552, 219, 1166,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	584, 233, 234, 236, 1181, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 1270, 515, 534,
	546, 557, 563, 564, 566, 567, 568, 569, 570, 576,
	574, 571, 572, 573, 400, 307, 488, 329, 367, 1259,
	1301, 418, 466, 239, 538, 489, 1304, 1305, 1306, 1307,
	1176, 1180, 1174, 1241, 1175, 1230, 1231, 1177, 1292, 1293,
	1294, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 0,
	1263, 1170, 0, 1178, 1179, 1272, 1281, 1282, 603, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 1234, 199,
	220, 362, 1297, 448, 285, 581, 548, 543, 206, 222,
	1173, 259, 1184, 1192, 0, 1198, 1206, 1207, 1219, 1221,
	1222, 1223, 1224, 1242, 1243, 1245, 1253, 1255, 1258, 1260,
	1267, 1278, 1300, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 578, 579, 296, 532, 562, 530, 577, 556, 433,
	372, 1233, 1303, 1239, 375, 278, 301, 316, 1248, 547,
	495, 226, 460, 287, 250, 1266, 1268, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 1229, 1257, 370, 512, 513, 312, 390, 0, 0,
	0, 1286, 1271, 511, 0, 1214, 1289, 1183, 1202, 1299,
	1205, 1208, 1250, 1162, 1228, 409, 1199, 1155, 1187, 1157,
	1194, 1158, 1185, 1216, 267, 1182, 1273, 1232, 1288, 360,
	264, 1164, 1188, 423, 1204, 205, 1252, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 1295, 364, 1238, 0, 490, 394, 0, 0, 0,
	1218, 1277, 1226, 1264, 1213, 1251, 1172, 1237, 1290, 1200,
	1247, 1291, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 1196, 1244, 1285, 1197, 1246, 262, 317, 269, 261,
	516, 1296, 1276, 1161, 1225, 1284, 0, 0, 228, 1287,
	1220, 0, 1249, 0, 1302, 1156, 1240, 0, 1159, 1163,
	1298, 1280, 1191, 272, 0, 0, 0, 0, 0, 0,
	0, 1217, 1227, 1261, 1265, 1211, 0, 0, 0, 0,
	0, 2815, 0, 1189, 0, 1236, 0, 0, 0, 1168,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 1171, 0,
	1190, 1262, 0, 1154, 294, 1165, 395, 254, 0, 447,
	1269, 1279, 1212, 558, 1283, 1210, 1209, 1256, 1169, 1275,
	1203, 359, 1167, 326, 200, 224, 0, 1201, 405, 455,
	467, 1274, 1186, 1195, 252, 1193, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 1235, 1254, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	1166, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 1181, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 1270, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	1259, 1301, 418, 466, 239, 538, 489, 1304, 1305, 1306,
	1307, 1176, 1180, 1174, 1241, 1175, 1230, 1231, 1177, 1292,
	1293, 1294, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 1263, 1170, 0, 1178, 1179, 1272, 1281, 1282, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 1234,
	199, 220, 362, 1297, 448, 285, 581, 548, 543, 206,
	222, 1173, 259, 1184, 1192, 0, 1198, 1206, 1207, 1219,
	1221, 1222, 1223, 1224, 1242, 1243, 1245, 1253, 1255, 1258,
	1260, 1267, 1278, 1300, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 1233, 1303, 1239, 375, 278, 301, 316, 1248,
	547, 495, 226, 460, 287, 250, 1266, 1268, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 1229, 1257, 370, 512, 513, 312, 390, 0,
	0, 0, 1286, 1271, 511, 0, 1214, 1289, 1183, 1202,
	1299, 1205, 1208, 1250, 1162, 1228, 409, 1199, 1155, 1187,
	1157, 1194, 1158, 1185, 1216, 267, 1182, 1273, 1232, 1288,
	360, 264, 1164, 1188, 423, 1204, 205, 1252, 480, 251,
	371, 368, 519, 279, 270, 266, 249, 313, 379, 421,
	501, 415, 1295, 364, 1238, 0, 490, 394, 0, 0,
	0, 1218, 1277, 1226, 1264, 1213, 1251, 1172, 1237, 1290,
	1200, 1247, 1291, 319, 247, 321, 204, 406, 491, 283,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 1196, 1244, 1285, 1197, 1246, 262, 317, 269,
	261, 516, 1296, 1276, 1161, 1225, 1284, 0, 0, 228,
	1287, 1220, 0, 1249, 0, 1302, 1156, 1240, 0, 1159,
	1163, 1298, 1280, 1191, 272, 0, 0, 0, 0, 0,
	0, 0, 1217, 1227, 1261, 1265, 1211, 0, 0, 0,
	0, 0, 2776, 0, 1189, 0, 1236, 0, 0, 0,
	1168, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 1171,
	0, 1190, 1262, 0, 1154, 294, 1165, 395, 254, 0,
	447, 1269, 1279, 1212, 558, 1283, 1210, 1209, 1256, 1169,
	1275, 1203, 359, 1167, 326, 200, 224, 0, 1201, 405,
	455, 467, 1274, 1186, 1195, 252, 1193, 465, 419, 536,
	232, 281, 452, 425, 463, 435, 284, 1235, 1254, 464,
	366, 521, 445, 533, 559, 560, 260, 399, 545, 505,
	553, 580, 225, 257, 413, 498, 539, 487, 391, 517,
	518, 325, 486, 292, 203, 363, 565, 223, 473, 365,
	241, 230, 523, 542, 286, 450, 429, 430, 575, 212,
	500, 531, 238, 477, 0, 0, 582, 246, 497, 214,
	528, 496, 387, 322, 323, 213, 0, 451, 265, 290,
	0, 0, 255, 408, 525, 526, 253, 583, 227, 552,
	219, 1166, 551, 401, 520, 529, 388, 377, 218, 527,
	386, 376, 330, 349, 350, 277, 303, 442, 369, 443,
	302, 304, 397, 396, 398, 207, 540, 0, 208, 0,
	492, 541, 584, 233, 234, 236, 1181, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 441, 437, 446, 1270,
	515, 534, 546, 557, 563, 564, 566, 567, 568, 569,
	570, 576, 574, 571, 572, 573, 400, 307, 488, 329,
	367, 1259, 1301, 418, 466, 239, 538, 489, 1304, 1305,
	1306, 1307, 1176, 1180, 1174, 1241, 1175, 1230, 1231, 1177,
	1292, 1293, 1294, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 0, 1263, 1170, 0, 1178, 1179, 1272, 1281, 1282,
	603, 378, 479, 535, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 248, 210, 384, 392, 514, 308, 215, 216, 217,
	507, 508, 509, 510, 549, 550, 554, 456, 457, 458,
	459, 289, 544, 305, 462, 461, 327, 328, 373, 444,
	1234, 199, 220, 362, 1297, 448, 285, 581, 548, 543,
	206, 222, 1173, 259, 1184, 1192, 0, 1198, 1206, 1207,
	1219, 1221, 1222, 1223, 1224, 1242, 1243, 1245, 1253, 1255,
	1258, 1260, 1267, 1278, 1300, 201, 202, 209, 221, 231,
	235, 242, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 431,
	432, 434, 436, 438, 449, 454, 468, 469, 470, 471,
	472, 475, 476, 481, 482, 483, 484, 485, 493, 494,
	499, 522, 524, 537, 555, 561, 474, 297, 298, 439,
	440, 310, 311, 578, 579, 296, 532, 562, 530, 577,
	556, 433, 372, 1233, 1303, 1239, 375, 278, 301, 316,
	1248, 547, 495, 226, 460, 287, 250, 1266, 1268, 211,
	245, 229, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 243, 453, 240, 478, 502, 503, 504, 506,
	389, 263, 426, 1229, 1257, 370, 512, 513, 312, 390,
	0, 0, 0, 1286, 1271, 511, 0, 1214, 1289, 1183,
	1202, 1299, 1205, 1208, 1250, 1162, 1228, 409, 1199, 1155,
	1187, 1157, 1194, 1158, 1185, 1216, 267, 1182, 1273, 1232,
	1288, 360, 264, 1164, 1188, 423, 1204, 205, 1252, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 1295, 364, 1238, 0, 490, 394, 0,
	0, 0, 1218, 1277, 1226, 1264, 1213, 1251, 1172, 1237,
	1290, 1200, 1247, 1291, 319, 247, 321, 204, 406, 491,
	283, 0, 0, 0, 0, 0, 831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 1196, 1244, 1285, 1197, 1246, 262, 317,
	269, 261, 516, 1296, 1276, 1161, 1225, 1284, 0, 0,
	228, 1287, 1220, 0, 1249, 0, 1302, 1156, 1240, 0,
	1159, 1163, 1298, 1280, 1191, 272, 0, 0, 0, 0,
	0, 0, 0, 1217, 1227, 1261, 1265, 1211, 0, 0,
	0, 0, 0, 2116, 0, 1189, 0, 1236, 0, 0,
	0, 1168, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	1171, 0, 1190, 1262, 0, 1154, 294, 1165, 395, 254,
	0, 447, 1269, 1279, 1212, 558, 1283, 1210, 1209, 1256,
	1169, 1275, 1203, 359, 1167, 326, 200, 224, 0, 1201,
	405, 455, 467, 1274, 1186, 1195, 252, 1193, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 1235, 1254,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 580, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 575,
	212, 500, 531, 238, 477, 0, 0, 582, 246, 497,
	214, 528, 496, 387, 322, 323, 213, 0, 451, 265,
	290, 0, 0, 255, 408, 525, 526, 253, 583, 227,
	552, 219, 1166, 551, 401, 520, 529, 388, 377, 218,
	527, 386, 376, 330, 349, 350, 277, 303, 442, 369,
	443, 302, 304, 397, 396, 398, 207, 540, 0, 208,
	0, 492, 541, 584, 233, 234, 236, 1181, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 441, 437, 446,
	1270, 515, 534, 546, 557, 563, 564, 566, 567, 568,
	569, 570, 576, 574, 571, 572, 573, 400, 307, 488,
	329, 367, 1259, 1301, 418, 466, 239, 538, 489, 1304,
	1305, 1306, 1307, 1176, 1180, 1174, 1241, 1175, 1230, 1231,
	1177, 1292, 1293, 1294, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 0, 1263, 1170, 0, 1178, 1179, 1272, 1281,
	1282, 603, 378, 479, 535, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 248, 210, 384, 392, 514, 308, 215, 216,
	217, 507, 508, 509, 510, 549, 550, 554, 456, 457,
	458, 459, 289, 544, 305, 462, 461, 327, 328, 373,
	444, 1234, 199, 220, 362, 1297, 448, 285, 581, 548,
	543, 206, 222, 1173, 259, 1184, 1192, 0, 1198, 1206,
	1207, 1219, 1221, 1222, 1223, 1224, 1242, 1243, 1245, 1253,
	1255, 1258, 1260, 1267, 1278, 1300, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	431, 432, 434, 436, 438, 449, 454, 468, 469, 470,
	471, 472, 475, 476, 481, 482, 483, 484, 485, 493,
	494, 499, 522, 524, 537, 555, 561, 474, 297, 298,
	439, 440, 310, 311, 578, 579, 296, 532, 562, 530,
	577, 556, 433, 372, 1233, 1303, 1239, 375, 278, 301,
	316, 1248, 547, 495, 226, 460, 287, 250, 1266, 1268,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 453, 240, 478, 502, 503, 504,
	506, 389, 263, 426, 1229, 1257, 370, 512, 513, 312,
	390, 0, 0, 0, 1286, 1271, 511, 0, 1214, 1289,
	1183, 1202, 1299, 1205, 1208, 1250, 1162, 1228, 409, 1199,
	1155, 1187, 1157, 1194, 1158, 1185, 1216, 267, 1182, 1273,
	1232, 1288, 360, 264, 1164, 1188, 423, 1204, 205, 1252,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 1295, 364, 1238, 0, 490, 394,
	0, 0, 0, 1218, 1277, 1226, 1264, 1213, 1251, 1172,
	1237, 1290, 1200, 1247, 1291, 319, 247, 321, 204, 406,
	491, 283, 0, 95, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 1196, 1244, 1285, 1197, 1246, 262,
	317, 269, 261, 516, 1296, 1276, 1161, 1225, 1284, 0,
	0, 228, 1287, 1220, 0, 1249, 0, 1302, 1156, 1240,
	0, 1159, 1163, 1298, 1280, 1191, 272, 0, 0, 0,
	0, 0, 0, 0, 1217, 1227, 1261, 1265, 1211, 0,
	0, 0, 0, 0, 0, 0, 1189, 0, 1236, 0,
	0, 0, 1168, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	0, 1171, 0, 1190, 1262, 0, 1154, 294, 1165, 395,
	254, 0, 447, 1269, 1279, 1212, 558, 1283, 1210, 1209,
	1256, 1169, 1275, 1203, 359, 1167, 326, 200, 224, 0,
	1201, 405, 455, 467, 1274, 1186, 1195, 252, 1193, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 1235,
	1254, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 580, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	575, 212, 500, 531, 238, 477, 0, 0, 582, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 583,
	227, 552, 219, 1166, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 584, 233, 234, 236, 1181, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 1270, 515, 534, 546, 557, 563, 564, 566, 567,
	568, 569, 570, 576, 574, 571, 572, 573, 400, 307,
	488, 329, 367, 1259, 1301, 418, 466, 239, 538, 489,
	1304, 1305, 1306, 1307, 1176, 1180, 1174, 1241, 1175, 1230,
	1231, 1177, 1292, 1293, 1294, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 0, 1263, 1170, 0, 1178, 1179, 1272,
	1281, 1282, 603, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 1234, 199, 220, 362, 1297, 448, 285, 581,
	548, 543, 206, 222, 1173, 259, 1184, 1192, 0, 1198,
	1206, 1207, 1219, 1221, 1222, 1223, 1224, 1242, 1243, 1245,
	1253, 1255, 1258, 1260, 1267, 1278, 1300, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 578, 579, 296, 532, 562,
	530, 577, 556, 433, 372, 1233, 1303, 1239, 375, 278,
	301, 316, 1248, 547, 495, 226, 460, 287, 250, 1266,
	1268, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 1229, 1257, 370, 512, 513,
	312, 390, 0, 0, 0, 1286, 1271, 511, 0, 1214,
	1289, 1183, 1202, 1299, 1205, 1208, 1250, 1162, 1228, 409,
	1199, 1155, 1187, 1157, 1194, 1158, 1185, 1216, 267, 1182,
	1273, 1232, 1288, 360, 264, 1164, 1188, 423, 1204, 205,
	1252, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 1295, 364, 1238, 0, 490,
	394, 0, 0, 0, 1218, 1277, 1226, 1264, 1213, 1251,
	1172, 1237, 1290, 1200, 1247, 1291, 319, 247, 321, 204,
	406, 491, 283, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 1196, 1244, 1285, 1197, 1246,
	262, 317, 269, 261, 516, 1296, 1276, 1161, 1225, 1284,
	0, 0, 228, 1287, 1220, 0, 1249, 0, 1302, 1156,
	1240, 0, 1159, 1163, 1298, 1280, 1191, 272, 0, 0,
	0, 0, 0, 0, 0, 1217, 1227, 1261, 1265, 1211,
	0, 0, 0, 0, 0, 0, 0, 1189, 0, 1236,
	0, 0, 0, 1168, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 1171, 0, 1190, 1262, 0, 1154, 294, 1165,
	395, 254, 0, 447, 1269, 1279, 1212, 558, 1283, 1210,
	1209, 1256, 1169, 1275, 1203, 359, 1167, 326, 200, 224,
	0, 1201, 405, 455, 467, 1274, 1186, 1195, 252, 1193,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	1235, 1254, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 580, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 575, 212, 500, 531, 238, 477, 0, 0, 582,
	246, 497, 214, 528, 496, 387, 322, 323, 213, 0,
	451, 265, 290, 0, 0, 255, 408, 525, 526, 253,
	583, 227, 552, 219, 1166, 551, 401, 520, 529, 388,
	377, 218, 527, 386, 376, 330, 349, 350, 277, 303,
	442, 369, 443, 302, 304, 397, 396, 398, 207, 540,
	0, 208, 0, 492, 541, 584, 233, 234, 236, 1181,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 441,
	437, 446, 1270, 515, 534, 546, 557, 563, 564, 566,
	567, 568, 569, 570, 576, 574, 571, 572, 573, 400,
	307, 488, 329, 367, 1259, 1301, 418, 466, 239, 538,
	489, 1304, 1305, 1306, 1307, 1176, 1180, 1174, 1241, 1175,
	1230, 1231, 1177, 1292, 1293, 1294, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 0, 1263, 1170, 0, 1178, 1179,
	1272, 1281, 1282, 603, 378, 479, 535, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 514, 308,
	215, 216, 217, 507, 508, 509, 510, 549, 550, 554,
	456, 457, 458, 459, 289, 544, 305, 462, 461, 327,
	328, 373, 444, 1234, 199, 220, 362, 1297, 448, 285,
	581, 548, 543, 206, 222, 1173, 259, 1184, 1192, 0,
	1198, 1206, 1207, 1219, 1221, 1222, 1223, 1224, 1242, 1243,
	1245, 1253, 1255, 1258, 1260, 1267, 1278, 1300, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 431, 432, 434, 436, 438, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 522, 524, 537, 555, 561, 474,
	297, 298, 439, 440, 310, 311, 578, 579, 296, 532,
	562, 530, 577, 556, 433, 372, 1233, 1303, 1239, 375,
	278, 301, 316, 1248, 547, 495, 226, 460, 287, 250,
	1266, 1268, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 453, 240, 478, 502,
	503, 504, 506, 389, 263, 426, 1229, 1257, 370, 512,
	513, 312, 390, 0, 0, 0, 1286, 1271, 511, 0,
	1214, 1289, 1183, 1202, 1299, 1205, 1208, 1250, 1162, 1228,
	409, 1199, 1155, 1187, 1157, 1194, 1158, 1185, 1216, 267,
	1182, 1273, 1232, 1288, 360, 264, 1164, 1188, 423, 1204,
	205, 1252, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 1295, 364, 1238, 0,
	490, 394, 0, 0, 0, 1218, 1277, 1226, 1264, 1213,
	1251, 1172, 1237, 1290, 1200, 1247, 1291, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 1196, 1244, 1285, 1197,
	1246, 262, 317, 269, 261, 516, 1296, 1276, 1161, 1225,
	1284, 0, 0, 228, 1287, 1220, 0, 1249, 0, 1302,
	1156, 1240, 0, 1159, 1163, 1298, 1280, 1191, 272, 0,
	0, 0, 0, 0, 0, 0, 1217, 1227, 1261, 1265,
	1211, 0, 0, 0, 0, 0, 0, 0, 1189, 0,
	1236, 0, 0, 0, 1168, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 1171, 0, 1190, 1262, 0, 1154, 294,
	1165, 395, 254, 0, 447, 1269, 1279, 1212, 558, 1283,
	1210, 1209, 1256, 1169, 1275, 1203, 359, 1167, 326, 200,
	224, 0, 1201, 405, 455, 467, 1274, 1186, 1195, 252,
	1193, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 1235, 1254, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 1166, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	1181, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 1270, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 1259, 1301, 418, 466, 239,
	538, 489, 1304, 1305, 1306, 1307, 1176, 1180, 1174, 1241,
	1175, 1230, 1231, 1177, 1292, 1293, 1294, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 1263, 1170, 0, 1178,
	1179, 1272, 1281, 1282, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 1234, 199, 220, 362, 1297, 448,
	285, 581, 548, 543, 206, 222, 1173, 259, 1184, 1192,
	0, 1198, 1206, 1207, 1219, 1221, 1222, 1223, 1224, 1242,
	1243, 1245, 1253, 1255, 1258, 1260, 1267, 1278, 1300, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 1233, 1303, 1239,
	375, 278, 301, 316, 1248, 547, 495, 226, 460, 287,
	250, 1266, 1268, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 1229, 1257, 370,
	512, 513, 312, 390, 0, 0, 0, 1286, 1271, 511,
	0, 1214, 1289, 1183, 1202, 1299, 1205, 1208, 1250, 1162,
	1228, 409, 1199, 1155, 1187, 1157, 1194, 1158, 1185, 1216,
	267, 1182, 1273, 1232, 1288, 360, 264, 1164, 1188, 423,
	1204, 205, 1252, 480, 251, 371, 368, 519, 279, 270,
	266, 249, 313, 379, 421, 501, 415, 1295, 364, 1238,
	0, 490, 394, 0, 0, 0, 1218, 1277, 1226, 1264,
	1213, 1251, 1172, 1237, 1290, 1200, 1247, 1291, 319, 247,
	321, 204, 406, 491, 283, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 1196, 1244, 1285,
	1197, 1246, 262, 317, 269, 261, 516, 1296, 1276, 1161,
	1225, 1284, 0, 0, 228, 1287, 1220, 0, 1249, 0,
	1302, 1156, 1240, 0, 1159, 1163, 1298, 1280, 1191, 272,
	0, 0, 0, 0, 0, 0, 0, 1217, 1227, 1261,
	1265, 1211, 0, 0, 0, 0, 0, 0, 0, 1189,
	0, 1236, 0, 0, 0, 1168, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 1171, 0, 1190, 1262, 0, 1154,
	294, 1165, 395, 254, 0, 447, 1269, 1279, 1212, 558,
	1283, 1210, 1209, 1256, 1169, 1275, 1203, 359, 1167, 326,
	200, 224, 0, 1201, 405, 455, 467, 1274, 1186, 1195,
	252, 1193, 465, 419, 536, 232, 281, 452, 425, 463,
	435, 284, 1235, 1254, 464, 366, 521, 445, 533, 559,
	560, 260, 399, 545, 505, 553, 580, 225, 257, 413,
	498, 539, 487, 391, 517, 518, 325, 486, 292, 203,
	363, 565, 223, 473, 365, 241, 230, 523, 542, 286,
	450, 429, 430, 575, 212, 500, 531, 238, 477, 0,
	0, 582, 246, 497, 214, 528, 496, 387, 322, 323,
	213, 0, 451, 265, 290, 0, 0, 255, 408, 525,
	526, 253, 583, 227, 552, 219, 1166, 551, 401, 520,
	529, 388, 377, 218, 527, 386, 376, 330, 349, 350,
	277, 303, 442, 369, 443, 302, 304, 397, 396, 398,
	207, 540, 0, 208, 0, 492, 541, 584, 233, 234,
	236, 1181, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 441, 437, 446, 1270, 515, 534, 546, 557, 563,
	564, 566, 567, 568, 569, 570, 576, 574, 571, 572,
	573, 400, 307, 488, 329, 367, 1259, 1301, 418, 466,
	239, 538, 489, 1304, 1305, 1306, 1307, 1176, 1180, 1174,
	1241, 1175, 1230, 1231, 1177, 1292, 1293, 1294, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 0, 1263, 1170, 0,
	1178, 1179, 1272, 1281, 1282, 603, 378, 479, 535, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 248, 210, 384, 392,
	514, 308, 215, 216, 217, 507, 508, 509, 510, 549,
	550, 554, 456, 457, 458, 459, 289, 544, 305, 462,
	461, 327, 328, 373, 444, 1234, 199, 220, 362, 1297,
	448, 285, 581, 548, 543, 206, 222, 1173, 259, 1184,
	1192, 0, 1198, 1206, 1207, 1219, 1221, 1222, 1223, 1224,
	1242, 1243, 1245, 1253, 1255, 1258, 1260, 1267, 1278, 1300,
	201, 202, 209, 221, 231, 235, 242, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 431, 432, 434, 436, 438, 449,
	454, 468, 469, 470, 471, 472, 475, 476, 481, 482,
	483, 484, 485, 493, 494, 499, 522, 524, 537, 555,
	561, 474, 297, 298, 439, 440, 310, 311, 578, 579,
	296, 532, 562, 530, 577, 556, 433, 372, 1233, 1303,
	1239, 375, 278, 301, 316, 1248, 547, 495, 226, 460,
	287, 250, 1266, 1268, 211, 245, 229, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 243, 453, 240,
	478, 502, 503, 504, 506, 389, 263, 426, 1229, 1257,
	370, 512, 513, 312, 390, 0, 0, 0, 0, 0,
	511, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 697, 0, 0,
	0, 267, 702, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 205, 0, 480, 251, 371, 368, 519, 279,
	270, 266, 249, 313, 379, 421, 501, 415, 709, 364,
	0, 0, 490, 394, 0, 0, 0, 0, 0, 705,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	247, 321, 204, 406, 491, 283, 0, 95, 0, 0,
	847, 831, 797, 798, 835, 848, 849, 850, 851, 836,
	0, 237, 837, 838, 244, 839, 0, 796, 737, 739,
	738, 756, 757, 758, 759, 760, 761, 762, 735, 844,
	852, 853, 0, 262, 317, 269, 261, 516, 0, 0,
	1997, 1998, 1999, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 679, 694, 0, 708, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 691, 692, 0, 0,
	0, 0, 791, 0, 693, 0, 0, 701, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 447, 790, 0, 0,
	558, 0, 0, 788, 0, 0, 0, 0, 359, 0,
	326, 200, 224, 0, 0, 405, 455, 467, 0, 0,
	0, 841, 0, 465, 419, 536, 232, 281, 452, 425,
	463, 435, 284, 0, 0, 464, 366, 521, 445, 533,
	559, 560, 260, 399, 545, 505, 553, 580, 225, 257,
	413, 498, 539, 487, 391, 517, 518, 325, 486, 292,
	203, 363, 565, 223, 473, 365, 241, 230, 523, 542,
	286, 450, 429, 430, 575, 212, 500, 531, 238, 477,
	0, 0, 582, 246, 497, 214, 528, 496, 387, 322,
	323, 213, 0, 451, 265, 290, 0, 0, 255, 408,
	842, 843, 253, 583, 743, 552, 219, 0, 551, 401,
	520, 529, 388, 377, 218, 527, 386, 376, 330, 751,
	752, 277, 303, 442, 369, 443, 302, 304, 397, 396,
	398, 207, 540, 0, 208, 0, 492, 541, 584, 233,
	234, 236, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 441, 437, 446, 0, 515, 534, 546, 557,
	563, 564, 566, 567, 568, 569, 570, 576, 574, 571,
	572, 573, 400, 307, 488, 329, 367, 0, 0, 418,
	466, 239, 538, 489, 0, 0, 0, 0, 801, 789,
	714, 805, 716, 802, 803, 711, 712, 715, 804, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 0, 792, 700,
	699, 0, 707, 0, 733, 734, 736, 740, 741, 742,
	753, 754, 755, 763, 765, 766, 764, 767, 768, 769,
	772, 773, 774, 775, 770, 771, 776, 717, 721, 718,
	719, 720, 732, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 815, 816, 817, 818, 819, 820, 746,
	750, 749, 747, 748, 744, 745, 698, 199, 220, 362,
	0, 448, 285, 581, 548, 543, 206, 222, 806, 259,
	807, 0, 0, 811, 0, 0, 0, 813, 812, 0,
	814, 780, 779, 0, 0, 808, 809, 0, 810, 0,
	0, 201, 202, 209, 221, 231, 235, 242, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 431, 432, 434, 436, 438,
	449, 454, 468, 469, 470, 471, 472, 475, 476, 481,
	482, 483, 484, 485, 493, 494, 499, 522, 524, 537,
	555, 561, 474, 821, 822, 823, 824, 825, 826, 827,
	828, 296, 532, 562, 530, 577, 556, 433, 372, 0,
	0, 0, 375, 278, 301, 316, 0, 547, 495, 226,
	460, 287, 250, 846, 0, 211, 245, 229, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 243, 453,
	240, 478, 502, 503, 504, 506, 389, 263, 426, 390,
	0, 370, 512, 513, 312, 511, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 697, 0, 0, 0, 267, 702, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 205, 0, 480,
	251, 371, 368, 519, 279, 270, 266, 249, 313, 379,
	421, 501, 415, 709, 364, 0, 0, 490, 394, 0,
	0, 0, 0, 0, 705, 706, 0, 0, 0, 0,
	0, 0, 2145, 0, 319, 247, 321, 204, 406, 491,
	283, 0, 95, 0, 0, 847, 831, 797, 798, 835,
	848, 849, 850, 851, 836, 0, 237, 837, 838, 244,
	839, 0, 796, 737, 739, 738, 756, 757, 758, 759,
	760, 761, 762, 735, 844, 852, 853, 2146, 262, 317,
	269, 261, 516, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 679, 694,
	0, 708, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 691, 692, 0, 0, 0, 0, 791, 0, 693,
	0, 0, 701, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 447, 790, 0, 0, 558, 0, 0, 788, 0,
	0, 0, 0, 359, 0, 326, 200, 224, 0, 0,
	405, 455, 467, 0, 0, 0, 841, 0, 465, 419,
	536, 232, 281, 452, 425, 463, 435, 284, 0, 0,
	464, 366, 521, 445, 533, 559, 560, 260, 399, 545,
	505, 553, 580, 225, 257, 413, 498, 539, 487, 391,
	517, 518, 325, 486, 292, 203, 363, 565, 223, 473,
	365, 241, 230, 523, 542, 286, 450, 429, 430, 575,
	212, 500, 531, 238, 477, 0, 0, 582, 246, 497,
	214, 528, 496, 387, 322, 323, 213, 0, 451, 265,
	290, 0, 0, 255, 408, 842, 843, 253, 583, 743,
	552, 219, 0, 551, 401, 520, 529, 388, 377, 218,
	527, 386, 376, 330, 751, 752, 277, 303, 442, 369,
	443, 302, 304, 397, 396, 398, 207, 540, 0, 208,
	0, 492, 541, 584, 233, 234, 236, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 441, 437, 446,
	0, 515, 534, 546, 557, 563, 564, 566, 567, 568,
	569, 570, 576, 574, 571, 572, 573, 400, 307, 488,
	329, 367, 0, 0, 418, 466, 239, 538, 489, 0,
	0, 0, 0, 801, 789, 714, 805, 716, 802, 803,
	711, 712, 715, 804, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 0, 792, 700, 699, 0, 707, 0, 733,
	734, 736, 740, 741, 742, 753, 754, 755, 763, 765,
	766, 764, 767, 768, 769, 772, 773, 774, 775, 770,
	771, 776, 717, 721, 718, 719, 720, 732, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 815, 816,
	817, 818, 819, 820, 746, 750, 749, 747, 748, 744,
	745, 698, 199, 220, 362, 0, 448, 285, 581, 548,
	543, 206, 222, 806, 259, 807, 0, 0, 811, 0,
	0, 0, 813, 812, 0, 814, 780, 779, 0, 0,
	808, 809, 0, 810, 0, 0, 201, 202, 209, 221,
	231, 235, 242, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	431, 432, 434, 436, 438, 449, 454, 468, 469, 470,
	471, 472, 475, 476, 481, 482, 483, 484, 485, 493,
	494, 499, 522, 524, 537, 555, 561, 474, 821, 822,
	823, 824, 825, 826, 827, 828, 296, 532, 562, 530,
	577, 556, 433, 372, 0, 0, 0, 375, 278, 301,
	316, 0, 547, 495, 226, 460, 287, 250, 846, 0,
	211, 245, 229, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 243, 453, 240, 478, 502, 503, 504,
	506, 389, 263, 426, 0, 390, 370, 512, 513, 312,
	86, 511, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 697, 0,
	0, 0, 267, 702, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 709,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	705, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 95, 0,
	0, 847, 831, 797, 798, 835, 848, 849, 850, 851,
	836, 0, 237, 837, 838, 244, 839, 0, 796, 737,
	739, 738, 756, 757, 758, 759, 760, 761, 762, 735,
	844, 852, 853, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 679, 694, 0, 708, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 692, 0,
	0, 0, 0, 791, 0, 693, 0, 0, 701, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 790, 0,
	0, 558, 0, 0, 788, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 841, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 580, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 575, 212, 500, 531, 238,
	477, 0, 0, 582, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 842, 843, 253, 583, 743, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	751, 752, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 584,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 567, 568, 569, 570, 576, 574,
	571, 572, 573, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 801,
	789, 714, 805, 716, 802, 803, 711, 712, 715, 804,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 0, 792,
	700, 699, 0, 707, 0, 733, 734, 736, 740, 741,
	742, 753, 754, 755, 763, 765, 766, 764, 767, 768,
	769, 772, 773, 774, 775, 770, 771, 776, 717, 721,
	718, 719, 720, 732, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 815, 816, 817, 818, 819, 820,
	746, 750, 749, 747, 748, 744, 745, 698, 199, 220,
	362, 94, 448, 285, 581, 548, 543, 206, 222, 806,
	259, 807, 0, 0, 811, 0, 0, 0, 813, 812,
	0, 814, 780, 779, 0, 0, 808, 809, 0, 810,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 821, 822, 823, 824, 825, 826,
	827, 828, 296, 532, 562, 530, 577, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 846, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	390, 0, 370, 512, 513, 312, 511, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 697, 0, 0, 0, 267, 702, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 709, 364, 0, 0, 490, 394,
	0, 0, 0, 0, 0, 705, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	491, 283, 0, 95, 0, 0, 847, 831, 797, 798,
	835, 848, 849, 850, 851, 836, 0, 237, 837, 838,
	244, 839, 0, 796, 737, 739, 738, 756, 757, 758,
	759, 760, 761, 762, 735, 844, 852, 853, 0, 262,
	317, 269, 261, 516, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 679,
	694, 0, 708, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 691, 692, 0, 0, 0, 0, 791, 0,
	693, 0, 0, 701, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 447, 790, 0, 0, 558, 0, 0, 788,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 455, 467, 0, 0, 0, 841, 0, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 3467,
	0, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 580, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	575, 212, 500, 531, 238, 477, 0, 0, 582, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 842, 843, 253, 583,
	743, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 751, 752, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 584, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 567,
	568, 569, 570, 576, 574, 571, 572, 573, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 801, 789, 714, 805, 716, 802,
	803, 711, 712, 715, 804, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 0, 792, 700, 699, 0, 707, 0,
	733, 734, 736, 740, 741, 742, 753, 754, 755, 763,
	765, 766, 764, 767, 768, 769, 772, 773, 774, 775,
	770, 771, 776, 717, 721, 718, 719, 720, 732, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 815,
	816, 817, 818, 819, 820, 746, 750, 749, 747, 748,
	744, 745, 698, 199, 220, 362, 0, 448, 285, 581,
	548, 543, 206, 222, 806, 259, 807, 0, 0, 811,
	0, 0, 0, 813, 812, 0, 814, 780, 779, 0,
	0, 808, 809, 0, 810, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 821,
	822, 823, 824, 825, 826, 827, 828, 296, 532, 562,
	530, 577, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 846,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 697, 0,
	0, 0, 267, 702, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 709,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	705, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 95, 0,
	1547, 847, 831, 797, 798, 835, 848, 849, 850, 851,
	836, 0, 237, 837, 838, 244, 839, 0, 796, 737,
	739, 738, 756, 757, 758, 759, 760, 761, 762, 735,
	844, 852, 853, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 679, 694, 0, 708, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 692, 0,
	0, 0, 0, 791, 0, 693, 0, 0, 701, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 790, 0,
	0, 558, 0, 0, 788, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 841, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 580, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 575, 212, 500, 531, 238,
	477, 0, 0, 582, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 842, 843, 253, 583, 743, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	751, 752, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 584,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 567, 568, 569, 570, 576, 574,
	571, 572, 573, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 801,
	789, 714, 805, 716, 802, 803, 711, 712, 715, 804,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 0, 792,
	700, 699, 0, 707, 0, 733, 734, 736, 740, 741,
	742, 753, 754, 755, 763, 765, 766, 764, 767, 768,
	769, 772, 773, 774, 775, 770, 771, 776, 717, 721,
	718, 719, 720, 732, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 815, 816, 817, 818, 819, 820,
	746, 750, 749, 747, 748, 744, 745, 698, 199, 220,
	362, 0, 448, 285, 581, 548, 543, 206, 222, 806,
	259, 807, 0, 0, 811, 0, 0, 0, 813, 812,
	0, 814, 780, 779, 0, 0, 808, 809, 0, 810,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 821, 822, 823, 824, 825, 826,
	827, 828, 296, 532, 562, 530, 577, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 846, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	390, 0, 370, 512, 513, 312, 511, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 697, 0, 0, 0, 267, 702, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 709, 364, 0, 0, 490, 394,
	0, 0, 0, 0, 0, 705, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	491, 283, 0, 95, 0, 0, 847, 831, 797, 798,
	835, 848, 849, 850, 851, 836, 0, 237, 837, 838,
	244, 839, 0, 796, 737, 739, 738, 756, 757, 758,
	759, 760, 761, 762, 735, 844, 852, 853, 0, 262,
	317, 269, 261, 516, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 679,
	694, 0, 708, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 691, 692, 935, 0, 0, 0, 791, 0,
	693, 0, 0, 701, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 447, 790, 0, 0, 558, 0, 0, 788,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 455, 467, 0, 0, 0, 841, 0, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 0,
	0, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 580, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	575, 212, 500, 531, 238, 477, 0, 0, 582, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 842, 843, 253, 583,
	743, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 751, 752, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 584, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 567,
	568, 569, 570, 576, 574, 571, 572, 573, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 801, 789, 714, 805, 716, 802,
	803, 711, 712, 715, 804, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 0, 792, 700, 699, 0, 707, 0,
	733, 734, 736, 740, 741, 742, 753, 754, 755, 763,
	765, 766, 764, 767, 768, 769, 772, 773, 774, 775,
	770, 771, 776, 717, 721, 718, 719, 720, 732, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 815,
	816, 817, 818, 819, 820, 746, 750, 749, 747, 748,
	744, 745, 698, 199, 220, 362, 0, 448, 285, 581,
	548, 543, 206, 222, 806, 259, 807, 0, 0, 811,
	0, 0, 0, 813, 812, 0, 814, 780, 779, 0,
	0, 808, 809, 0, 810, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 821,
	822, 823, 824, 825, 826, 827, 828, 296, 532, 562,
	530, 577, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 846,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 697, 0,
	0, 0, 267, 702, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 709,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	705, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 95, 0,
	0, 847, 831, 797, 798, 835, 848, 849, 850, 851,
	836, 0, 237, 837, 838, 244, 839, 0, 796, 737,
	739, 738, 756, 757, 758, 759, 760, 761, 762, 735,
	844, 852, 853, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 679, 694, 0, 708, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 692, 0,
	0, 0, 0, 791, 0, 693, 0, 0, 701, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 790, 0,
	0, 558, 0, 0, 788, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 841, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 580, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 575, 212, 500, 531, 238,
	477, 0, 0, 582, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 842, 843, 253, 583, 743, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	751, 752, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 584,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 567, 568, 569, 570, 576, 574,
	571, 572, 573, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 801,
	789, 714, 805, 716, 802, 803, 711, 712, 715, 804,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 0, 792,
	700, 699, 0, 707, 0, 733, 734, 736, 740, 741,
	742, 753, 754, 755, 763, 765, 766, 764, 767, 768,
	769, 772, 773, 774, 775, 770, 771, 776, 717, 721,
	718, 719, 720, 732, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 815, 816, 817, 818, 819, 820,
	746, 750, 749, 747, 748, 744, 745, 698, 199, 220,
	362, 0, 448, 285, 581, 548, 543, 206, 222, 806,
	259, 807, 0, 0, 811, 0, 0, 0, 813, 812,
	0, 814, 780, 779, 0, 0, 808, 809, 0, 810,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 821, 822, 823, 824, 825, 826,
	827, 828, 296, 532, 562, 530, 577, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 846, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	390, 0, 370, 512, 513, 312, 511, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 697, 0, 0, 0, 267, 702, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 709, 364, 0, 0, 490, 394,
	0, 0, 0, 0, 0, 705, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	491, 283, 0, 95, 0, 0, 847, 831, 797, 798,
	835, 848, 849, 850, 851, 836, 0, 237, 837, 838,
	244, 839, 0, 796, 737, 739, 738, 756, 757, 758,
	759, 760, 761, 762, 735, 844, 852, 853, 0, 262,
	317, 269, 261, 516, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 708, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 691, 692, 0, 0, 0, 0, 791, 0,
	693, 0, 0, 701, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 447, 790, 0, 0, 558, 0, 0, 788,
	0, 0, 0, 0, 359, 0, 326, 200, 224, 0,
	0, 405, 455, 467, 0, 0, 0, 841, 0, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 0,
	0, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 580, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	575, 212, 500, 531, 238, 477, 0, 0, 582, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 842, 843, 253, 583,
	743, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 751, 752, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 584, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 567,
	568, 569, 570, 576, 574, 571, 572, 573, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 801, 789, 714, 805, 716, 802,
	803, 711, 712, 715, 804, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 0, 792, 700, 699, 0, 707, 0,
	733, 734, 736, 740, 741, 742, 753, 754, 755, 763,
	765, 766, 764, 767, 768, 769, 772, 773, 774, 775,
	770, 771, 776, 717, 721, 718, 719, 720, 732, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 815,
	816, 817, 818, 819, 820, 746, 750, 749, 747, 748,
	744, 745, 698, 199, 220, 362, 0, 448, 285, 581,
	548, 543, 206, 222, 806, 259, 807, 0, 0, 811,
	0, 0, 0, 813, 812, 0, 814, 780, 779, 0,
	0, 808, 809, 0, 810, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 821,
	822, 823, 824, 825, 826, 827, 828, 296, 532, 562,
	530, 577, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 846,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 1364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1373, 1372, 1374, 1375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 580, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 575, 212, 500, 531, 238,
	477, 0, 0, 582, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 525, 526, 253, 583, 227, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	349, 350, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 584,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 567, 568, 569, 570, 576, 574,
	571, 572, 573, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 378, 479,
	535, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 514, 308, 215, 216, 217, 507, 508, 509,
	510, 549, 550, 554, 456, 457, 458, 459, 289, 544,
	305, 462, 461, 327, 328, 373, 444, 0, 199, 220,
	362, 0, 448, 285, 581, 548, 543, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 297, 298, 439, 440, 310, 311,
	578, 579, 296, 532, 562, 530, 577, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	390, 0, 370, 512, 513, 312, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 205, 0,
	480, 251, 371, 368, 519, 279, 270, 266, 249, 313,
	379, 421, 501, 415, 0, 364, 0, 0, 490, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 247, 321, 204, 406,
	491, 283, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 516, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 1008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 447, 0, 0, 1007, 558, 0, 0, 0,
	0, 0, 1004, 1005, 359, 964, 326, 200, 224, 998,
	1002, 405, 455, 467, 0, 0, 0, 252, 0, 465,
	419, 536, 232, 281, 452, 425, 463, 435, 284, 0,
	0, 464, 366, 521, 445, 533, 559, 560, 260, 399,
	545, 505, 553, 580, 225, 257, 413, 498, 539, 487,
	391, 517, 518, 325, 486, 292, 203, 363, 565, 223,
	473, 365, 241, 230, 523, 542, 286, 450, 429, 430,
	575, 212, 500, 531, 238, 477, 0, 0, 582, 246,
	497, 214, 528, 496, 387, 322, 323, 213, 0, 451,
	265, 290, 0, 0, 255, 408, 525, 526, 253, 583,
	227, 552, 219, 0, 551, 401, 520, 529, 388, 377,
	218, 527, 386, 376, 330, 349, 350, 277, 303, 442,
	369, 443, 302, 304, 397, 396, 398, 207, 540, 0,
	208, 0, 492, 541, 584, 233, 234, 236, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 441, 437,
	446, 0, 515, 534, 546, 557, 563, 564, 566, 567,
	568, 569, 570, 576, 574, 571, 572, 573, 400, 307,
	488, 329, 367, 0, 0, 418, 466, 239, 538, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 378, 479, 535, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 248, 210, 384, 392, 514, 308, 215,
	216, 217, 507, 508, 509, 510, 549, 550, 554, 456,
	457, 458, 459, 289, 544, 305, 462, 461, 327, 328,
	373, 444, 0, 199, 220, 362, 0, 448, 285, 581,
	548, 543, 206, 222, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 202, 209,
	221, 231, 235, 242, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 431, 432, 434, 436, 438, 449, 454, 468, 469,
	470, 471, 472, 475, 476, 481, 482, 483, 484, 485,
	493, 494, 499, 522, 524, 537, 555, 561, 474, 297,
	298, 439, 440, 310, 311, 578, 579, 296, 532, 562,
	530, 577, 556, 433, 372, 0, 0, 0, 375, 278,
	301, 316, 0, 547, 495, 226, 460, 287, 250, 0,
	0, 211, 245, 229, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 243, 453, 240, 478, 502, 503,
	504, 506, 389, 263, 426, 390, 0, 370, 512, 513,
	312, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 205, 0, 480, 251, 371, 368, 519,
	279, 270, 266, 249, 313, 379, 421, 501, 415, 0,
	364, 0, 0, 490, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 247, 321, 204, 406, 491, 283, 0, 0, 0,
	0, 1511, 831, 0, 0, 1508, 0, 0, 0, 0,
	1506, 0, 237, 1507, 1505, 244, 1510, 0, 796, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 516, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 447, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 200, 224, 0, 0, 405, 455, 467, 0,
	0, 0, 252, 0, 465, 419, 536, 232, 281, 452,
	425, 463, 435, 284, 0, 0, 464, 366, 521, 445,
	533, 559, 560, 260, 399, 545, 505, 553, 580, 225,
	257, 413, 498, 539, 487, 391, 517, 518, 325, 486,
	292, 203, 363, 565, 223, 473, 365, 241, 230, 523,
	542, 286, 450, 429, 430, 575, 212, 500, 531, 238,
	477, 0, 0, 582, 246, 497, 214, 528, 496, 387,
	322, 323, 213, 0, 451, 265, 290, 0, 0, 255,
	408, 525, 526, 253, 583, 227, 552, 219, 0, 551,
	401, 520, 529, 388, 377, 218, 527, 386, 376, 330,
	349, 350, 277, 303, 442, 369, 443, 302, 304, 397,
	396, 398, 207, 540, 0, 208, 0, 492, 541, 584,
	233, 234, 236, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 441, 437, 446, 0, 515, 534, 546,
	557, 563, 564, 566, 567, 568, 569, 570, 576, 574,
	571, 572, 573, 400, 307, 488, 329, 367, 0, 0,
	418, 466, 239, 538, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 378, 479,
	535, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 248, 210,
	384, 392, 514, 308, 215, 216, 217, 507, 508, 509,
	510, 549, 550, 554, 456, 457, 458, 459, 289, 544,
	305, 462, 461, 327, 328, 373, 444, 0, 199, 220,
	362, 0, 448, 285, 581, 548, 543, 206, 222, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 202, 209, 221, 231, 235, 242, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 431, 432, 434, 436,
	438, 449, 454, 468, 469, 470, 471, 472, 475, 476,
	481, 482, 483, 484, 485, 493, 494, 499, 522, 524,
	537, 555, 561, 474, 297, 298, 439, 440, 310, 311,
	578, 579, 296, 532, 562, 530, 577, 556, 433, 372,
	0, 0, 0, 375, 278, 301, 316, 0, 547, 495,
	226, 460, 287, 250, 0, 0, 211, 245, 229, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 243,
	453, 240, 478, 502, 503, 504, 506, 389, 263, 426,
	0, 390, 370, 512, 513, 312, 86, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 205,
	0, 480, 251, 371, 368, 519, 279, 270, 266, 249,
	313, 379, 421, 501, 415, 0, 364, 0, 0, 490,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 247, 321, 204,
	406, 491, 283, 0, 95, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 516, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 447, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 200, 224,
	0, 0, 405, 455, 467, 0, 0, 0, 252, 0,
	465, 419, 536, 232, 281, 452, 425, 463, 435, 284,
	0, 0, 464, 366, 521, 445, 533, 559, 560, 260,
	399, 545, 505, 553, 580, 225, 257, 413, 498, 539,
	487, 391, 517, 518, 325, 486, 292, 203, 363, 565,
	223, 473, 365, 241, 230, 523, 542, 286, 450, 429,
	430, 575, 212, 500, 531, 238, 477, 0, 0, 582,
	246, 497, 214, 528, 496, 387, 322, 323, 213, 0,
	451, 265, 290, 0, 0, 255, 408, 525, 526, 253,
	583, 227, 552, 219, 0, 551, 401, 520, 529, 388,
	377, 218, 527, 386, 376, 330, 349, 350, 277, 303,
	442, 369, 443, 302, 304, 397, 396, 398, 207, 540,
	0, 208, 0, 492, 541, 584, 233, 234, 236, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 441,
	437, 446, 0, 515, 534, 546, 557, 563, 564, 566,
	567, 568, 569, 570, 576, 574, 571, 572, 573, 400,
	307, 488, 329, 367, 0, 0, 418, 466, 239, 538,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 603, 378, 479, 535, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 248, 210, 384, 392, 514, 308,
	215, 216, 217, 507, 508, 509, 510, 549, 550, 554,
	456, 457, 458, 459, 289, 544, 305, 462, 461, 327,
	328, 373, 444, 0, 199, 220, 362, 94, 448, 285,
	581, 548, 543, 206, 222, 0, 259, 0, 0, 0,
	0, 0, 0, 2132, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 202,
	209, 221, 231, 235, 242, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 431, 432, 434, 436, 438, 449, 454, 468,
	469, 470, 471, 472, 475, 476, 481, 482, 483, 484,
	485, 493, 494, 499, 522, 524, 537, 555, 561, 474,
	297, 298, 439, 440, 310, 311, 578, 579, 296, 532,
	562, 530, 577, 556, 433, 372, 0, 0, 0, 375,
	278, 301, 316, 0, 547, 495, 226, 460, 287, 250,
	0, 0, 211, 245, 229, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 243, 453, 240, 478, 502,
	503, 504, 506, 389, 263, 426, 1566, 0, 370, 512,
	513, 312, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 1568, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 205, 0, 480, 251, 371, 368,
	519, 279, 270, 266, 249, 313, 379, 421, 501, 415,
	0, 364, 0, 0, 490, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 247, 321, 204, 406, 491, 283, 0, 0,
	0, 0, 1570, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 516,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 1345, 0, 1346, 1347, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 447, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 200, 224, 0, 0, 405, 455, 467,
	0, 0, 0, 252, 0, 465, 419, 536, 232, 281,
	452, 425, 463, 435, 284, 0, 0, 464, 366, 521,
	445, 533, 559, 560, 260, 399, 545, 505, 553, 580,
	225, 257, 413, 498, 539, 487, 391, 517, 518, 325,
	486, 292, 203, 363, 565, 223, 473, 365, 241, 230,
	523, 542, 286, 450, 429, 430, 575, 212, 500, 531,
	238, 477, 0, 0, 582, 246, 497, 214, 528, 496,
	387, 322, 323, 213, 0, 451, 265, 290, 0, 0,
	255, 408, 525, 526, 253, 583, 227, 552, 219, 0,
	551, 401, 520, 529, 388, 377, 218, 527, 386, 376,
	330, 349, 350, 277, 303, 442, 369, 443, 302, 304,
	397, 396, 398, 207, 540, 0, 208, 0, 492, 541,
	584, 233, 234, 236, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 441, 437, 446, 0, 515, 534,
	546, 557, 563, 564, 566, 567, 568, 569, 570, 576,
	574, 571, 572, 573, 400, 307, 488, 329, 367, 0,
	0, 418, 466, 239, 538, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 378,
	479, 535, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 248,
	210, 384, 392, 514, 308, 215, 216, 217, 507, 508,
	509, 510, 549, 550, 554, 456, 457, 458, 459, 289,
	544, 305, 462, 461, 327, 328, 373, 444, 0, 199,
	220, 362, 0, 448, 285, 581, 548, 543, 206, 222,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 202, 209, 221, 231, 235, 242,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 431, 432, 434,
	436, 438, 449, 454, 468, 469, 470, 471, 472, 475,
	476, 481, 482, 483, 484, 485, 493, 494, 499, 522,
	524, 537, 555, 561, 474, 297, 298, 439, 440, 310,
	311, 578, 579, 296, 532, 562, 530, 577, 556, 433,
	372, 0, 0, 0, 375, 278, 301, 316, 0, 547,
	495, 226, 460, 287, 250, 0, 0, 211, 245, 229,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	243, 453, 240, 478, 502, 503, 504, 506, 389, 263,
	426, 0, 390, 370, 512, 513, 312, 86, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 95, 0, 1547, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 94, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	95, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 2132,
	0, 0, 2131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 2084, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1751, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 2082, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 964, 326, 200, 224, 962, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 2084, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1751, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 1547, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 3377, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1917, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 2496, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 2481, 0, 0, 0, 0, 237,
	0, 0, 244, 2482, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 1589, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 1588, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 659,
	660, 661, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 3501, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1751, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 3377, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 95, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 2133, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1570, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 1872, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 1863, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1718, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 1716, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1714, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 1712, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1710, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 1706, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1704, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 1702, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	1677, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 1574, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	95, 0, 0, 0, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 1323,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 606, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 3509, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 390, 0, 370,
	512, 513, 312, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 205, 0, 480, 251, 371,
	368, 519, 279, 270, 266, 249, 313, 379, 421, 501,
	415, 0, 364, 0, 0, 490, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 247, 321, 204, 406, 491, 283, 0,
	0, 0, 0, 0, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	516, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 447,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 200, 224, 0, 0, 405, 455,
	467, 0, 0, 0, 252, 0, 465, 419, 536, 232,
	281, 452, 425, 463, 435, 284, 0, 0, 464, 366,
	521, 445, 533, 559, 560, 260, 399, 545, 505, 553,
	580, 225, 257, 413, 498, 539, 487, 391, 517, 518,
	325, 486, 292, 203, 363, 565, 223, 473, 365, 241,
	230, 523, 542, 286, 450, 429, 430, 575, 212, 500,
	531, 238, 477, 0, 0, 582, 246, 497, 214, 528,
	496, 387, 322, 323, 213, 0, 451, 265, 290, 0,
	0, 255, 408, 525, 526, 253, 583, 227, 552, 219,
	0, 551, 401, 520, 529, 388, 377, 218, 527, 386,
	376, 330, 349, 350, 277, 303, 442, 369, 443, 302,
	304, 397, 396, 398, 207, 540, 0, 208, 0, 492,
	541, 584, 233, 234, 236, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 441, 437, 446, 0, 515,
	534, 546, 557, 563, 564, 566, 567, 568, 569, 570,
	576, 574, 571, 572, 573, 400, 307, 488, 329, 367,
	0, 0, 418, 466, 239, 538, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 603,
	378, 479, 535, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	248, 210, 384, 392, 514, 308, 215, 216, 217, 507,
	508, 509, 510, 549, 550, 554, 456, 457, 458, 459,
	289, 544, 305, 462, 461, 327, 328, 373, 444, 0,
	199, 220, 362, 0, 448, 285, 581, 548, 543, 206,
	222, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 202, 209, 221, 231, 235,
	242, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 431, 432,
	434, 436, 438, 449, 454, 468, 469, 470, 471, 472,
	475, 476, 481, 482, 483, 484, 485, 493, 494, 499,
	522, 524, 537, 555, 561, 474, 297, 298, 439, 440,
	310, 311, 578, 579, 296, 532, 562, 530, 577, 556,
	433, 372, 0, 0, 0, 375, 278, 301, 316, 0,
	547, 495, 226, 460, 287, 250, 0, 0, 211, 245,
	229, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 243, 453, 240, 478, 502, 503, 504, 506, 389,
	263, 426, 390, 0, 370, 512, 513, 312, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	205, 0, 480, 251, 371, 368, 519, 279, 270, 266,
	249, 313, 379, 421, 501, 415, 0, 364, 0, 0,
	490, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 247, 321,
	204, 406, 491, 283, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 516, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 447, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 200,
	224, 0, 0, 405, 455, 467, 0, 0, 0, 252,
	0, 465, 419, 536, 232, 281, 452, 425, 463, 435,
	284, 0, 0, 464, 366, 521, 445, 533, 559, 560,
	260, 399, 545, 505, 553, 580, 225, 257, 413, 498,
	539, 487, 391, 517, 518, 325, 486, 292, 203, 363,
	565, 223, 473, 365, 241, 230, 523, 542, 286, 450,
	429, 430, 575, 212, 500, 531, 238, 477, 0, 0,
	582, 246, 497, 214, 528, 496, 387, 322, 323, 213,
	0, 451, 265, 290, 0, 0, 255, 408, 525, 526,
	253, 583, 227, 552, 219, 0, 551, 401, 520, 529,
	388, 377, 218, 527, 386, 376, 330, 349, 350, 277,
	303, 442, 369, 443, 302, 304, 397, 396, 398, 207,
	540, 0, 208, 0, 492, 541, 584, 233, 234, 236,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	441, 437, 446, 0, 515, 534, 546, 557, 563, 564,
	566, 567, 568, 569, 570, 576, 574, 571, 572, 573,
	400, 307, 488, 329, 367, 0, 0, 418, 466, 239,
	538, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 378, 479, 535, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 248, 210, 384, 392, 514,
	308, 215, 216, 217, 507, 508, 509, 510, 549, 550,
	554, 456, 457, 458, 459, 289, 544, 305, 462, 461,
	327, 328, 373, 444, 0, 199, 220, 362, 0, 448,
	285, 581, 548, 543, 206, 222, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	202, 209, 221, 231, 235, 242, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 431, 432, 434, 436, 438, 449, 454,
	468, 469, 470, 471, 472, 475, 476, 481, 482, 483,
	484, 485, 493, 494, 499, 522, 524, 537, 555, 561,
	474, 297, 298, 439, 440, 310, 311, 578, 579, 296,
	532, 562, 530, 577, 556, 433, 372, 0, 0, 0,
	375, 278, 301, 316, 0, 547, 495, 226, 460, 287,
	250, 0, 0, 211, 245, 229, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 243, 453, 240, 478,
	502, 503, 504, 506, 389, 263, 426, 0, 0, 370,
	512, 513, 312, 95, 0, 0, 847, 0, 0, 0,
	835, 848, 849, 850, 851, 836, 0, 0, 837, 838,
	0, 839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 844, 852, 853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2905, 2906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2908, 2909, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 801, 0, 0, 805, 0, 802,
	803, 0, 0, 0, 804,
}

var yyPact = [...]int{
	-1000, -1000, 4033, -1000, -460, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2264, 2370, -1000, -1000, -1000, -1000, 2489, -1000, 1079,
	1950, -1000, 2261, 330, -1000, 46828, 656, -1000, 44168, 654,
	651, 140, 138, 29538, -1000, 320, -1000, 306, 45498, 318,
	-1000, -1000, -1000, -1000, -309, 18231, 2177, 159, 131, 46828,
	-1000, -1000, -1000, -1000, 2459, 1928, -1000, 449, -1000, -1000,
	-1000, -1000, -1000, -1000, 43503, -1000, 1022, -1000, -1000, 2276,
	2279, 2492, 789, 2193, -1000, 2384, 1928, -1000, 18231, 2448,
	2328, 17566, 17566, 566, -1000, -1000, 244, -1000, -1000, -1000,
	2501, 24883, 46828, -1000, 32198, 338, -1000, 2261, -1000, -1000,
	-1000, 121, -1000, 465, 1851, -1000, 1850, -1000, 962, 1053,
	495, 619, 614, 494, 490, 488, 484, 482, 480, 479,
	478, 492, -1000, 817, 817, -114, -117, 695, 576, 562,
	562, 809, 595, 2206, 2196, -1000, -1000, 817, 817, 817,
	473, 817, 817, 817, 817, 447, 444, 817, 817, 817,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	817, 817, 817, 817, 397, 2261, 413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46828, 328, 46828, -1000, 709, 46828,
	46828, -1000, 1212, 1209, 972, -1000, -1000, 972, 235, 972,
	972, 972, 972, 295, 751, 126, -1000, 291, 383, 286,
	394, 951, 238, -1000, -1000, 390, 951, 1595, -1000, 798,
	393, 234, -1000, 972, 972, -1000, -1000, 11556, 168, 11556,
	11556, -1000, 2256, -1000, -1000, -1000, -1000, -1000, 1259, -1000,
	-1000, -1000, -1000, 30, 592, -1000, -1000, -1000, -1000, 45498,
	42838, 288, -1000, -1000, 141, -1000, -1000, 1636, 1105, 18231,
	1462, -1000, 1715, 772, -1000, -1000, -1000, -1000, -1000, 684,
	-1000, 18896, 18896, 18896, 18896, -1000, -1000, 1810, 42173, 1810,
	1810, 18896, 1810, -1000, 18896, 1810, 1810, 1810, 18231, 1810,
	1810, 1810, 1810, -1000, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, -1000, -1000, -1000, -1000, 1810, 708, 1810, 1810,
	1810, 1810, 1810, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1810, 1810, 1810, 1810, 1810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20891, 1463, 1461, 1454, -1000, 15571, 1810, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 46828, -1000, 1810,
	340, 45498, 45498, 476, 2384, 1928, -1000, 2459, 2394, 449,
	2938, 1616, 1638, 1308, 1928, 1829, 46828, -1000, 1865, -1000,
	-1000, -1000, -1000, 2015, 1356, 1589, -1000, -1000, -1000, -1000,
	1238, 18231, -1000, -1000, 2480, -1000, 22222, 706, 2479, 41508,
	-1000, 566, 566, 1845, 554, 44, -1000, -1000, -1000, -1000,
	856, 28873, -1000, -1000, -1000, -1000, -1000, 1740, 46828, -1000,
	-1000, 4751, 1218, -1000, 1945, -1000, 2396, 1734, -1000, 1903,
	18231, 1961, 639, 1218, 610, 606, 605, -1000, -9, -1000,
	-1000, -1000, -1000, -1000, -1000, 817, 817, 817, -1000, 491,
	2438, 330, 4932, -1000, -1000, -1000, 40843, 1944, 1218, -1000,
	1936, -1000, 948, 688, 701, 701, 1218, -1000, -1000, 46163,
	1218, 940, 933, 1218, 1218, 45498, 45498, -1000, 40178, -1000,
	39513, 38848, 1208, 45498, 38183, 37518, 36853, 36188, 35523, -1000,
	2154, -1000, 2252, -1000, -1000, -1000, 46163, 1218, 1218, 46163,
	45498, 46163, 46828, 1218, -1000, -1000, 455, -1000, -1000, 1198,
	1197, 1195, 817, 817, 1192, 1574, 1572, 1570, 817, 817,
	1183, 1562, 30868, 1554, 429, 1179, 1178, 1177, 1189, 1551,
	222, 1543, 1186, 1182, 1175, 45498, 1935, 46828, -1000, 377,
	868, 874, 853, 2261, 2175, 1844, 591, 618, 1218, 573,
	573, 45498, -1000, 13569, -1000, 637, -1000, -1000, -1000, -1000,
	1533, 18231, -1000, 959, 951, 951, -1000, -1000, -1000, -1000,
	-1000, -1000, 972, 46828, 959, -1000, -1000, -1000, 951, 972,
	46828, 972, 972, 972, 972, 951, 951, 951, 972, 46828,
	46828, 46828, 46828, 46828, 46828, 46828, 46828, 46828, 11556, 798,
	972, -323, -1000, 1531, -1000, -1000, 2056, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11556, 11556,
	-1000, -1000, -1000, -1000, -1000, 1841, -1000, 304, 135, 312,
	-1000, 34858, 427, 838, -1000, 427, -1000, -1000, -1000, 1836,
	34193, -1000, -324, -331, -337, -370, -1000, -1000, -1000, -371,
	-377, -1000, -1000, -1000, 18231, 18231, 18231, 18231, -146, -1000,
	947, 18896, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 154,
	985, 18896, 18896, 18896, 18896, 18896, 18896, 18896, 18896, 18896,
	18896, 18896, 18896, 18896, 18896, 18896, -1000, -1000, 26878, 7831,
	7831, 772, 772, 772, 772, -1000, -76, 1835, 46163, -1000,
	-1000, -1000, 705, 18231, 18231, 772, -1000, 1218, 15571, 19561,
	17566, 17566, 18231, 867, 1105, 46163, 18231, -1000, 1308, -1000,
	-1000, -1000, 1138, -1000, 934, 2293, 2293, 2293, 2293, 18231,
	18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 2293,
	45498, 45498, 1017, 18231, 18231, 18231, 18231, 18231, 18231, 14240,
	18231, 18231, 18896, 18231, 18231, 18231, 1308, 18231, 18231, 18231,
	18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231,
	18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231,
	18231, 18231, 18231, 18231, 1308, 18231, 1184, 18231, 18231, 17566,
	12898, 17566, 17566, 17566, 17566, 17566, -1000, -1000, -1000, -1000,
	-1000, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 1308,
	18231, 18231, 18231, 18231, 18231, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1539, 1536, 1341, 18231, -1000,
	1832, -1000, -97, 24218, 18231, 1517, 2476, 1990, 45498, -1000,
	-1000, -1000, 2384, -1000, 2384, 1539, 2037, 17566, -1000, -1000,
	2396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1608,
	-1000, 46828, 1829, 2322, 45498, 2100, 1515, 565, -1000, 18231,
	18231, 1827, -1000, 1772, 46828, -1000, -146, -1000, 33528, -1000,
	-1000, 10885, 46828, 469, 46828, -1000, 23553, 32863, 268, -1000,
	44, 1776, -1000, 96, 91, 14905, 765, -1000, -1000, -1000,
	695, 20226, 1629, 765, 227, -1000, -1000, -1000, 1903, -1000,
	1903, 1903, 1903, 1903, 565, 565, 565, 565, -1000, -1000,
	-1000, -1000, -1000, 1933, 1932, -1000, 1903, 1903, 1903, 1903,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1929, 1929, 1929,
	1920, 1920, 1909, 1909, 549, -1000, 18231, -1000, -1000, 486,
	32198, 2288, 1174, 1560, 377, 580, 1976, 1218, 1218, 1218,
	580, -1000, 1283, 1247, 1245, -1000, -446, 1824, -1000, -1000,
	2437, -1000, -1000, 865, 974, 965, 949, 45498, 349, 462,
	-1000, 557, -1000, 32198, 1218, 915, 701, 1218, -1000, 1218,
	-1000, -1000, -1000, -1000, -1000, 1218, -1000, -1000, 1820, -1000,
	1807, 1054, 964, 1038, 944, 1820, -1000, -1000, -88, 1820,
	-1000, 1820, -1000, 1820, -1000, 1820, -1000, 1820, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 862, 253, -211,
	45498, 349, 588, -1000, 587, 26878, -1000, -1000, -1000, 26878,
	26878, -1000, -1000, -1000, -1000, 1511, 1498, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -434, 46828, -1000, 371,
	836, 451, 510, 421, 46828, 403, 2362, 2358, 2356, 2349,
	2340, 2325, 2309, 402, 442, 46828, 46828, 573, 2034, 46828,
	2292, 46828, -1000, -1000, -1000, -1000, 648, 46828, -1000, 399,
	-1000, -1000, -1000, -1000, -1000, -1000, 1105, 46828, -1000, -1000,
	972, 972, -1000, -1000, 46828, 972, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 972, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	46828, -1000, -1000, -1000, -1000, 30, 301, -1000, -1000, 45498,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -5,
	-1000, 55, 78, 396, -1000, -1000, -1000, -1000, -1000, 2369,
	-1000, 1105, 875, 892, -1000, 1810, -1000, -1000, 1085, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 154, 18896, 18896, 18896,
	1952, 629, 1150, 1369, 1271, 1318, 1318, 1217, 1217, 776,
	776, 776, 776, 776, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1496, -1000, 1810, 46163, 1720, 12898, 2049, 1768,
	1308, 2868, -1000, 1717, -1000, 1717, 1213, 864, -1000, 18231,
	1308, 2851, -1000, -1000, 1308, 1308, 1308, 18231, -1000, -1000,
	18231, 18231, 18231, 18231, 1560, 1560, 1560, 1560, 1560, 1560,
	1560, 1560, 1560, 1560, 18231, 1808, 1805, 2475, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1846,
	1560, 1560, 1560, 1560, 1560, 18231, 1643, -1000, -1000, -1000,
	1414, 2830, 1199, 2826, 1560, 1560, -1000, 1560, 2819, 2807,
	1308, 1636, 1308, 1785, -1000, 2803, 1560, 2795, 2771, 2732,
	2185, 2686, 2680, 2676, 1560, 1560, 1560, 2181, 2656, 2645,
	2639, 2529, 2495, 2477, 2455, 2450, 2367, 1560, -157, 1560,
	1308, -1000, -1000, -1000, -1000, -1000, 2359, 2057, 1308, 1780,
	1810, 704, -1000, -1000, 1717, 1308, 1308, 1717, 1717, 2335,
	2324, 2311, 2307, 2277, 2267, 1560, 1560, -1000, 1560, 2262,
	2255, 2041, 2020, 1308, -1000, 1341, 46828, -1000, -302, -1000,
	32, 755, 1810, -1000, 30868, 1308, -1000, 6706, -1000, 1203,
	-1000, -1000, -1000, 28208, 1781, 2396, -1000, -1000, 1810, 1702,
	-1000, -1000, 565, 220, 27543, 720, 720, 239, 1105, 1105,
	18231, -1000, -1000, -1000, -1000, -1000, -1000, 699, 2456, 404,
	1810, -1000, 1802, 2360, -1000, -1000, -1000, 2318, 21557, -1000,
	-1000, 1810, 1810, 46828, 1729, 1700, -1000, 696, -1000, 1285,
	1776, 44, 66, -1000, -1000, -1000, -1000, 1105, -1000, 1241,
	475, 212, -1000, 561, -1000, -1000, -1000, -1000, 2182, 192,
	-1000, -1000, -1000, 292, 565, -1000, -1000, -1000, -1000, -1000,
	-1000, 1494, 1494, -1000, -1000, -1000, -1000, -1000, 1173, -1000,
	-1000, -1000, -1000, 1172, -1000, -1000, 1168, -1000, -1000, 2242,
	2030, 486, -1000, -1000, 817, 1491, -1000, -1000, 2187, 817,
	817, 45498, -1000, -1000, 1615, 2288, 371, 46828, 872, 2033,
	-1000, 1976, 1976, 1976, 46828, -1000, -1000, -1000, -1000, -1000,
	-1000, -438, 77, 487, -1000, -1000, -1000, 4085, 45498, 1663,
	-1000, 347, -1000, 1600, -1000, 45498, -1000, 1661, 1916, 1218,
	1218, -1000, -1000, -1000, 45498, 1810, -1000, -1000, -1000, -1000,
	616, 2235, 317, -1000, -1000, -182, -1000, -1000, 349, 347,
	46163, 1218, 765, -1000, -1000, -1000, -1000, -1000, -439, 1659,
	602, 357, 374, 46828, 46828, 46828, 46828, 46828, 676, -1000,
	-1000, 90, -1000, -1000, -1000, -1000, 331, -1000, -1000, -1000,
	-1000, -1000, -1000, 331, -1000, -1000, -1000, -1000, 419, 586,
	-1000, 46828, 46828, 753, -1000, -1000, -1000, -1000, -1000, -1000,
	951, -1000, -1000, 951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2238, 46828, 71, -401,
	-1000, -396, 18231, -1000, -1000, -1000, -1000, 1809, 625, 1150,
	18896, 18896, 18896, -1000, -1000, -1000, 923, 923, 26878, -1000,
	18231, 17566, -1000, -1000, 18231, 18231, 859, -1000, 18231, 1262,
	-1000, 18231, -1000, -1000, -1000, 1341, 1560, 1560, 1560, 1560,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1687, 18231, 18231, 18231, 1308, 415, -1000, -1000, -1000, -1000,
	-1000, 2473, -1000, 18231, -1000, 26878, 18231, 18231, 18231, -1000,
	-1000, -1000, 18231, 18231, -1000, -1000, 18231, 18231, -1000, 18231,
	18231, 18231, -1000, 18231, 18231, 18231, 18231, -1000, -1000, -1000,
	-1000, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231, 18231,
	18231, -1000, -1000, 32198, 123, -157, 1184, 123, 1184, -1000,
	17566, 12227, -1000, -1000, -1000, -1000, -1000, 18231, 18231, 18231,
	18231, 18231, 18231, -1000, -1000, -1000, 18231, 18231, -1000, 18231,
	-1000, 18231, -1000, -1000, -1000, -1000, -1000, 755, -1000, 701,
	701, 701, 45498, -1000, -1000, -1000, -1000, 1771, -1000, 2364,
	-1000, 2113, 2112, 2468, 2456, -1000, 23553, 2396, -1000, -1000,
	45498, -287, -1000, 2159, 2204, 720, 720, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10214, 2384, 18231, 2028, 46163, 150,
	-1000, 22888, 45498, 46163, 23553, 23553, 23553, 23553, 23553, -1000,
	2073, 2067, -1000, 2097, 2076, 2125, 46828, -1000, 1539, 1651,
	-1000, 18231, 25548, 1816, 23553, -1000, -1000, 23553, 46828, 9543,
	-1000, -1000, 54, 45, -1000, -1000, -1000, -1000, 695, -1000,
	-1000, 3180, 2315, 2183, -1000, -1000, -1000, -1000, -1000, 1647,
	-1000, 1625, 1755, 1599, 1585, 253, -1000, 1960, 2234, 817,
	817, -1000, 1166, -1000, 1218, 1488, 1486, -1000, -1000, -1000,
	597, -1000, 2287, 46828, 2027, 2024, 2023, -1000, -453, 1144,
	1915, 1957, 18231, 1912, 2436, 1709, 45498, -1000, -1000, 46163,
	-1000, 343, -1000, 486, 45498, -1000, -1000, -1000, 462, 46828,
	-1000, 7065, -1000, -1000, -1000, 347, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46828, 354, -1000, 1911, 1233, -1000, -1000,
	1966, -1000, -1000, -1000, -1000, 303, 406, 1483, 329, 1475,
	329, -1000, 46828, 746, 2030, 46828, -1000, -1000, -1000, 972,
	972, -1000, -1000, 2221, -1000, 1218, 1560, 18896, 18896, -1000,
	772, 335, -128, 1903, 1903, -1000, 1903, 1909, -1000, 1903,
	294, 1903, 243, 1903, -1000, -1000, 1308, 1308, 1341, -1000,
	2014, 1632, -1000, 1105, 18231, 2233, -1000, -1000, -1000, -1000,
	-1000, -17, 2215, 2109, 1560, -1000, 1899, 1897, 18231, 1560,
	1308, 2010, 1560, 1560, 1560, 1560, -1000, 1105, 1341, 2066,
	1341, 1560, 1560, 2026, 351, 1560, 1542, 1542, 1542, 1542,
	1542, 1341, 1341, 1341, 1341, 45498, -1000, -157, -1000, -1000,
	-202, -203, -1000, 1308, -157, 1746, 1308, -1000, 1996, 1921,
	2000, 1760, 1560, 1777, 1560, 1560, 1560, 1750, -1000, 2365,
	2365, 2365, 1507, 1203, 46828, -1000, -1000, -1000, -1000, 2456,
	2453, 1731, -1000, -1000, 220, 467, -1000, 2153, 2204, -1000,
	2431, 2137, 2425, -1000, -1000, -1000, -1000, -1000, 1105, -1000,
	2270, 1748, -1000, 835, 1642, -1000, -1000, 16901, 1538, 2102,
	680, 1507, 1763, 2360, 1973, 2018, 2946, -1000, -1000, -1000,
	-1000, 2065, -1000, 2059, -1000, -1000, 1865, -1000, 1764, 469,
	23553, 1675, 1675, -1000, 678, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1001, 47416, 2491, -1000, 1473, -1000, 1239, 213,
	1143, -1000, -1000, 817, 817, -1000, 903, 900, -1000, 46828,
	1884, -1000, 565, 1471, 565, 1141, -1000, -1000, 1137, -1000,
	-1000, -1000, -1000, 2145, 2134, -1000, -1000, -1000, -1000, 46828,
	-1000, -1000, 46828, 46828, 46828, 1883, 2422, -1000, 18231, 1882,
	820, 2220, 45498, 45498, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 570, 817, -415, 437, 431,
	817, 817, 817, -455, -1000, -1000, 1504, 1467, -1000, -115,
	-1000, 18231, -1000, -1000, -1000, 1153, 1153, 1463, 1461, 1454,
	-1000, 1865, -1000, -1000, -1000, 1582, -1000, -1000, -99, 45498,
	45498, 45498, 45498, -1000, -1000, 1114, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 772, 1308,
	368, -101, 1308, -1000, -1000, 565, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18231, -1000, 18231, -1000,
	1105, 18231, 2384, 1453, 18231, 18231, -1000, 1103, 1096, 1560,
	-1000, -1000, -1000, 18231, -1000, -1000, -1000, -1000, -1000, 18231,
	-1000, -1000, -1000, 18231, 214, 923, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1308, 463, -1000, -1000,
	-1000, -1000, 2465, -1000, 1308, 18231, -1000, -1000, 18231, -1000,
	18231, 18231, -1000, 18231, -1000, 18231, -1000, -1000, -1000, -1000,
	18231, 1810, 2241, 1810, 1810, 25548, -1000, -1000, 2453, 2451,
	2421, 2124, 2140, 2140, 2153, -1000, 2419, 2418, -1000, 1438,
	2406, 1424, 899, -1000, 46163, 18231, 150, -1000, 424, 45498,
	150, 45498, -1000, 2395, -1000, -1000, 18231, 1867, -1000, 18231,
	-1000, -1000, -1000, -1000, 7831, 2456, 1675, -1000, -1000, 782,
	-1000, 18231, -1000, -1000, -1000, 4340, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1411, 1404, -1000, -1000, 1866, 18231,
	-1000, -1000, -1000, 1510, 1415, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1865, -1000, -1000, -1000, -1000, 462, -443,
	2123, 45498, 1095, -1000, 1436, 1709, 456, 150, 1365, 817,
	817, 817, 1076, 1062, 30868, 1434, -1000, 45498, 515, -1000,
	462, -1000, -122, -125, 1560, -1000, -1000, 2312, -1000, -1000,
	12227, -1000, -1000, 1857, 1968, -1000, -1000, -1000, -1000, 2094,
	-84, -111, -1000, -1000, 1560, 1560, 1653, 1308, -1000, 1560,
	1560, 1408, 1393, -1000, 1560, 1341, 1673, -1000, 214, 1308,
	2016, -1000, -1000, 7831, -1000, -1000, 2395, 2391, 123, -1000,
	-1000, 345, 123, 1105, 1628, 1560, 1587, 1581, 1560, 1560,
	26213, -1000, 2390, 2387, 31533, 31533, 755, 2451, -172, 18231,
	18231, 2120, 1108, -1000, -1000, -1000, -1000, 1362, 1342, -1000,
	1337, -1000, 2483, -1000, 1105, -1000, 150, -1000, 631, 1642,
	-1000, 2384, 1105, 45498, 1105, 185, 2395, -1000, 1560, -1000,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810, 1810,
	-1000, -1000, 45498, 2061, -1000, -1000, 2308, 1431, 76, -1000,
	1361, 1709, -1000, -1000, 151, -1000, 18231, -1000, 30868, 1317,
	1316, -1000, -1000, -1000, -1000, -455, -1000, -1000, -1000, -1000,
	-1000, -1000, 449, 1689, -1000, 814, 45498, 46828, -1000, 2081,
	-1000, -1000, -1000, 18231, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18231, -1000, 1308, 2006, -1000, -281, -1000, -423,
	18231, -157, -1000, -1000, -157, -1000, 18231, -1000, -1000, 18231,
	-1000, 18231, -1000, -1000, 1418, -1000, -1000, -1000, -1000, -1000,
	1418, 1418, -1000, -172, -1000, 1672, -1000, 45498, 1105, 1636,
	-1000, 1097, -1000, -1000, -1000, -1000, -1000, 46163, 1642, 45498,
	-1000, 1392, 1308, 1810, 2384, -1000, 1390, -1000, 449, -1000,
	1856, 1957, -1000, -1000, -1000, 16236, -1000, -1000, -1000, -1000,
	-1000, 257, -98, 12227, 8872, 1360, -1000, -92, 1560, 1341,
	-1000, -384, -1000, -1000, -1000, -1000, 293, -1000, -1000, 1636,
	-1000, -1000, 1509, 1501, 1427, 30203, -1000, -1000, -1000, -1000,
	-172, -1000, -1000, 2299, -1000, -1000, 1464, -1000, -1000, 25548,
	44833, -1000, -73, 344, -98, 18231, 1853, 1308, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26, -1000, -1000, -1000,
	-1000, -1000, 1966, -104, -1000, -1000, -1000, 209, -404, -194,
	-195, -1000, -1000, 18896, -1000, 18231, -1000, 18231, -1000, 18231,
	-1000, -1000, -1000, 45498, 1810, -1000, 1307, -1000, 5483, -215,
	2005, -1000, -2, -1000, -1000, -1000, 988, 1263, -1000, -1000,
	-1000, -1000, -1000, -1000, 1894, 45498, -1000, 546, -1000, -1000,
	-99, -113, 883, -1000, -1000, -1000, -1000, -1000, 1407, 1388,
	1560, -1000, 45498, -1000, 44833, -208, 765, 7831, -1000, 2003,
	2001, 2472, -1000, -1000, -1000, -1000, -1000, -1000, -457, 1305,
	375, -1000, -1000, 209, -1000, 18231, -1000, 18231, -1000, 1308,
	-1000, -1000, 2283, 185, -1000, 2474, -1000, 2457, 905, 905,
	-1000, 1055, -457, -1000, -1000, 1560, 1560, -1000, -218, -1000,
	-1000, -1000, -1000, -1000, 529, 1116, -1000, -1000, -1000, -1000,
	-1000, 7831, -1000, -1000, -1000, 285, 285, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3063, 3062, 30, 5, 36, 35, 3061, 52, 110,
	212, 38, 222, 113, 3060, 186, 3059, 3058, 3057, 3056,
	3053, 3051, 2546, 2544, 2528, 3049, 3048, 3046, 3045, 3044,
	3043, 3042, 3041, 3040, 3039, 185, 182, 207, 3038, 3037,
	3036, 132, 204, 93, 104, 205, 3035, 3034, 84, 3033,
	3032, 3031, 203, 202, 200, 933, 3029, 199, 131, 62,
	3027, 3026, 3025, 3021, 3018, 3012, 3011, 3008, 3001, 3000,
	2999, 2998, 2996, 2995, 2994, 2991, 2986, 2984, 2981, 299,
	2980, 2979, 23, 2978, 88, 2976, 2975, 2974, 2973, 2966,
	14, 2964, 2959, 19, 48, 2957, 2955, 59, 2954, 2953,
	2952, 2951, 2950, 21, 2947, 27, 2941, 47, 2938, 2935,
	141, 2933, 2932, 2929, 42, 2928, 2927, 2926, 2920, 2917,
	2911, 2908, 157, 2906, 2905, 2904, 192, 209, 2899, 2897,
	181, 120, 121, 2896, 2894, 115, 206, 2893, 135, 2892,
	2886, 2885, 163, 2881, 2173, 2880, 2879, 79, 85, 2870,
	50, 2864, 2861, 13, 90, 77, 9, 18, 1, 2860,
	2858, 78, 102, 2857, 119, 2856, 2854, 114, 89, 2852,
	117, 112, 2851, 2850, 15, 8, 2847, 54, 10, 7,
	81, 2846, 2845, 122, 2841, 2839, 2838, 107, 2837, 2836,
	3348, 2833, 108, 149, 116, 92, 2832, 56, 75, 2831,
	2829, 2826, 2824, 2816, 57, 2814, 2812, 2810, 155, 342,
	187, 2809, 46, 45, 60, 150, 2808, 39, 98, 210,
	183, 2806, 2805, 152, 151, 2804, 2803, 73, 49, 44,
	2802, 129, 143, 134, 67, 123, 148, 2801, 2800, 72,
	83, 2796, 2794, 2793, 2791, 184, 2790, 2785, 80, 2782,
	68, 2779, 190, 2777, 16, 70, 2767, 53, 176, 2766,
	86, 2762, 2759, 74, 142, 87, 37, 2741, 175, 180,
	146, 179, 2738, 2731, 63, 2730, 2726, 2715, 211, 341,
	2710, 2698, 100, 194, 168, 169, 99, 2696, 347, 2694,
	2692, 106, 2, 5134, 2691, 40, 177, 2688, 2687, 5641,
	153, 43, 24, 2686, 126, 2685, 2683, 2676, 2675, 218,
	189, 130, 178, 69, 2674, 2673, 2669, 20, 2664, 2663,
	2661, 2659, 2656, 2653, 91, 34, 33, 32, 253, 76,
	12, 109, 193, 171, 101, 2651, 2650, 2644, 139, 111,
	2638, 174, 173, 145, 170, 2630, 195, 167, 136, 2623,
	96, 31, 2620, 2614, 2613, 2611, 105, 2610, 2609, 2608,
	2604, 165, 161, 137, 103, 2601, 95, 133, 162, 158,
	64, 2600, 51, 2595, 2593, 29, 197, 28, 2588, 17,
	118, 154, 2585, 4368, 196, 2582, 22, 394, 164, 2575,
	2574, 4, 6, 11, 2572, 2566, 2563, 2562, 144, 2559,
	2554, 2552, 2550, 26, 65, 25, 3, 128, 94, 2536,
	2534, 156, 160, 2532, 2527, 2523, 2513, 3118, 0, 147,
	2492, 208,
}

//line sql.y:8134
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 415, 416, 416, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 383, 384, 384, 258, 258, 33, 74, 35,
	35, 34, 34, 37, 37, 36, 8, 8, 8, 9,
	9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
	10, 10, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 20, 21, 12, 12, 22, 22, 108, 108, 23,
	24, 24, 24, 24, 419, 419, 185, 185, 183, 183,
	184, 184, 263, 263, 25, 267, 267, 269, 269, 269,
	269, 259, 259, 259, 26, 26, 268, 268, 270, 270,
	270, 273, 273, 273, 273, 312, 312, 312, 27, 27,
	27, 27, 27, 27, 27, 128, 128, 386, 386, 385,
	379, 379, 378, 378, 377, 382, 382, 381, 381, 380,
	39, 40, 49, 49, 49, 49, 50, 51, 387, 387,
	352, 56, 56, 55, 55, 55, 55, 55, 55, 57,
	57, 53, 53, 52, 52, 54, 54, 354, 354, 340,
	340, 353, 353, 353, 353, 353, 353, 353, 339, 339,
	139, 139, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 402,
	402, 402, 401, 401, 238, 238, 238, 238, 238, 238,
	238, 238, 149, 149, 161, 161, 161, 161, 161, 147,
	147, 148, 146, 146, 146, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 160, 160, 156, 156, 156, 157,
	157, 157, 158, 158, 403, 403, 403, 403, 317, 317,
	317, 317, 320, 320, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 319, 319, 319, 319, 319, 319, 319,
	321, 321, 321, 321, 321, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 323, 323, 323, 323, 323, 323, 323, 323, 338,
	338, 324, 324, 332, 332, 333, 333, 334, 334, 334,
	335, 335, 335, 336, 336, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 331, 331, 330, 330, 330, 341,
	366, 366, 365, 365, 363, 363, 363, 363, 363, 363,
	363, 363, 350, 350, 360, 360, 360, 360, 360, 349,
	349, 345, 345, 345, 346, 346, 347, 347, 344, 344,
	348, 348, 362, 362, 361, 361, 342, 342, 343, 343,
	368, 404, 404, 404, 404, 404, 405, 405, 369, 394,
	396, 396, 396, 395, 395, 392, 393, 391, 391, 391,
	391, 391, 84, 84, 84, 286, 286, 287, 287, 358,
	358, 357, 357, 357, 359, 359, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 281, 281, 281,
	390, 390, 390, 390, 390, 390, 389, 389, 389, 355,
	355, 355, 388, 388, 58, 58, 218, 218, 407, 407,
	408, 408, 408, 46, 46, 46, 46, 46, 46, 45,
	45, 45, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 47, 47, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 110, 110, 111,
	111, 111, 111, 113, 113, 113, 371, 371, 59, 59,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 61, 61, 60, 60, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 337,
	337, 337, 370, 370, 372, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 116, 115, 115, 114, 117,
	117, 117, 117, 117, 117, 117, 117, 374, 374, 374,
	62, 62, 375, 325, 326, 327, 5, 6, 351, 373,
	124, 124, 29, 38, 38, 30, 30, 30, 30, 31,
	31, 63, 64, 414, 414, 68, 68, 68, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 280, 280, 289, 289, 279, 279, 304,
	304, 304, 282, 282, 282, 283, 283, 400, 400, 400,
	276, 276, 66, 66, 66, 305, 305, 305, 305, 69,
	69, 409, 409, 410, 410, 411, 411, 411, 70, 71,
	71, 307, 307, 308, 308, 72, 73, 85, 85, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 109, 109,
	109, 15, 15, 15, 15, 81, 81, 81, 14, 14,
	17, 67, 67, 75, 397, 397, 398, 399, 399, 399,
	399, 76, 78, 32, 32, 32, 32, 32, 32, 134,
	134, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 129, 129, 129, 123, 123, 420, 79,
	80, 80, 127, 127, 127, 120, 120, 120, 126, 126,
	126, 16, 16, 18, 262, 262, 19, 19, 131, 131,
	133, 133, 133, 133, 133, 135, 135, 135, 135, 135,
	135, 135, 130, 130, 132, 132, 132, 132, 297, 297,
	297, 296, 296, 167, 167, 169, 168, 168, 170, 170,
	171, 171, 171, 171, 216, 216, 193, 193, 255, 255,
	256, 256, 254, 254, 261, 261, 257, 257, 257, 257,
	264, 264, 172, 172, 172, 172, 180, 180, 181, 181,
	182, 182, 306, 306, 302, 302, 302, 301, 301, 186,
	186, 186, 188, 187, 187, 187, 187, 189, 189, 191,
	191, 190, 190, 192, 197, 197, 196, 196, 194, 194,
	194, 194, 195, 195, 195, 195, 198, 198, 144, 144,
	144, 144, 144, 144, 144, 159, 159, 159, 159, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	245, 245, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	153, 221, 221, 220, 220, 87, 87, 87, 88, 88,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	145, 145, 92, 92, 91, 91, 211, 211, 294, 294,
	93, 94, 94, 97, 97, 96, 95, 95, 101, 101,
	98, 98, 100, 100, 99, 102, 102, 103, 104, 104,
	277, 277, 199, 199, 207, 207, 207, 207, 200, 200,
	200, 200, 200, 200, 200, 208, 208, 208, 215, 209,
	209, 205, 205, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 164,
	164, 164, 164, 226, 226, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	152, 152, 165, 165, 165, 165, 166, 166, 166, 166,
	166, 166, 166, 314, 314, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 421, 421, 328, 328,
	328, 328, 206, 206, 206, 206, 206, 125, 125, 125,
	125, 125, 311, 311, 311, 315, 315, 315, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 316, 316, 224, 224, 121, 121, 222,
	222, 223, 225, 225, 217, 217, 217, 217, 219, 219,
	202, 202, 202, 227, 227, 228, 228, 105, 106, 106,
	107, 107, 229, 229, 231, 230, 230, 232, 233, 233,
	233, 234, 234, 235, 235, 235, 48, 48, 48, 48,
	48, 43, 43, 43, 43, 44, 44, 44, 44, 136,
	136, 136, 136, 138, 138, 137, 137, 82, 82, 83,
	83, 83, 413, 413, 413, 412, 412, 412, 412, 412,
	412, 142, 142, 143, 143, 143, 140, 140, 141, 141,
	252, 252, 236, 236, 236, 243, 243, 243, 239, 239,
	241, 241, 241, 242, 242, 242, 240, 249, 249, 251,
	251, 250, 250, 246, 246, 247, 247, 248, 248, 248,
	244, 244, 201, 201, 201, 201, 201, 253, 253, 253,
	253, 265, 265, 212, 212, 214, 214, 213, 213, 163,
	266, 266, 274, 271, 271, 272, 272, 298, 298, 298,
	275, 275, 288, 288, 284, 284, 285, 285, 278, 278,
	290, 290, 290, 77, 210, 210, 367, 367, 364, 293,
	293, 295, 295, 299, 299, 303, 303, 300, 300, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 417, 418,
	309, 310, 310, 310,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	2, 3, 6, 12, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	6, 4, 7, 8, 8, 8, 6, 3, 1, 1,
	5, 0, 1, 1, 1, 1, 2, 2, 2, 0,
	1, 4, 4, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 3, 3, 2, 2, 4, 4, 1,
	1, 1, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 4, 1, 3, 2, 3, 3, 3, 2,
	2, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -415, -79, -420, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-68, -65, -66, -69, -70, -71, -72, -73, -14, -17,
	-67, -32, -33, -74, -75, -76, -77, -78, -16, -18,
	-19, -9, -8, -13, 10, 11, -108, -34, 33, -39,
	-49, 225, -50, -40, 226, -51, 228, 227, 265, 229,
	249, 630, 258, 75, 315, 316, 318, 319, 320, 321,
	-109, 626, 263, 264, 231, 37, 46, 34, 35, 38,
	235, 271, 272, 234, -10, -35, 9, -417, 12, 458,
	260, 259, 29, -12, 520, 87, -80, -416, 675, -252,
	-236, 23, 34, 30, -235, -231, -127, -236, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -352, -354, -12,
	26, 87, 159, 9, 87, -79, -56, -55, -53, -52,
	-54, -57, 32, -46, -47, -376, -45, -42, 230, 227,
	275, 123, 124, 265, 266, 267, 229, 249, 264, 268,
	263, 284, -41, 82, 34, 520, 523, -359, 226, 232,
	233, 228, 459, 126, 125, 76, -356, 374, 553, 645,
	-57, 647, 101, 104, 646, 45, 239, 648, 649, 650,
	560, 651, 248, 652, 653, 654, 655, 661, 601, 662,
	663, 664, 127, 8, -79, -303, -299, 91, -292, 517,
	251, 551, 552, 300, 82, 42, 526, 371, 374, 553,
	488, 645, 315, 331, 325, 493, 494, 495, 354, 346,
	518, 554, 527, 303, 252, 288, 639, 344, 135, 647,
	307, 555, 266, 379, 380, 556, 381, 101, 318, 421,
	660, 306, 557, 658, 104, 646, 323, 80, 487, 52,
	642, 45, 261, 342, 234, 338, 648, 289, 558, 529,
	282, 126, 123, 667, 37, 334, 51, 31, 657, 125,
	50, 649, 150, 559, 650, 560, 383, 361, 633, 49,
	384, 267, 561, 85, 272, 522, 310, 641, 385, 507,
	335, 386, 299, 656, 231, 562, 621, 613, 614, 387,
	388, 634, 366, 362, 367, 509, 563, 413, 492, 389,
	617, 618, 674, 53, 564, 565, 635, 124, 566, 79,
	651, 81, 329, 330, 567, 297, 250, 512, 513, 415,
	358, 470, 477, 478, 111, 112, 473, 113, 479, 114,
	480, 481, 482, 471, 115, 108, 472, 483, 484, 359,
	360, 116, 485, 110, 109, 474, 476, 117, 486, 248,
	36, 390, 519, 301, 59, 305, 276, 416, 47, 364,
	671, 46, 628, 514, 568, 632, 357, 353, 467, 54,
	569, 570, 571, 572, 489, 652, 356, 328, 352, 666,
	4, 294, 490, 653, 63, 233, 369, 368, 370, 283,
	412, 349, 573, 574, 575, 255, 83, 576, 339, 22,
	577, 578, 391, 290, 579, 57, 580, 581, 419, 264,
	582, 55, 654, 40, 583, 269, 668, 655, 584, 312,
	313, 585, 586, 627, 587, 271, 588, 393, 589, 615,
	616, 392, 363, 365, 515, 278, 394, 236, 521, 590,
	311, 333, 268, 659, 591, 256, 503, 504, 505, 506,
	640, 511, 510, 270, 275, 263, 420, 257, 592, 593,
	594, 595, 596, 304, 612, 597, 598, 319, 661, 468,
	44, 599, 600, 601, 602, 603, 298, 293, 414, 423,
	62, 84, 376, 604, 605, 638, 327, 324, 291, 606,
	316, 56, 662, 663, 664, 285, 665, 496, 497, 498,
	499, 10, 672, 673, 491, 396, 127, 295, 296, 48,
	350, 277, 607, 308, 608, 340, 341, 355, 326, 351,
	624, 317, 622, 279, 397, 469, 265, 609, 422, 292,
	372, 377, 309, 525, 508, 284, 398, 637, 524, 500,
	501, 348, 345, 286, 502, 610, 626, 399, 240, 280,
	281, 611, 623, 400, 401, 302, 402, 403, 404, 405,
	406, 409, 410, 411, 408, 314, 407, 625, 619, 620,
	287, 523, 322, 343, 378, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 466, 238, -79, 238, -190, -299, 238,
	238, 96, 521, 646, -271, 410, 411, 380, -289, 382,
	395, 390, 400, 388, -280, 391, 393, 278, -400, 413,
	238, 397, 225, 383, 392, 401, 402, 302, 408, 403,
	314, 407, 287, 404, 405, 406, 409, -383, 177, 650,
	665, 135, 347, 387, 385, 414, 628, 91, -305, 91,
	92, 93, -292, 317, -307, 322, -293, -383, -292, 320,
	-79, -79, -309, -309, -129, 628, 631, -209, -144, 143,
	-159, -162, -150, -154, -203, -204, -205, -206, -160, -219,
	-258, 166, 167, 174, 144, -215, -163, 27, 516, 460,
	459, 177, 32, -153, 220, 69, 70, 462, 146, 58,
	12, 435, 436, -161, 430, 437, 432, 487, 489, 490,
	491, 488, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 492, 464, 465, 118, 466, 108, 110, 109,
	467, 468, 469, 344, 514, 515, 509, 512, 513, 511,
	510, 359, 360, 470, 471, 472, 111, 112, 113, 114,
	115, 116, 117, 473, 476, 474, 475, 477, 478, 479,
	484, 485, 480, 481, 482, 483, 486, -89, -101, 542,
	541, -102, -151, -152, -165, -166, -293, -299, 243, 429,
	237, 172, 458, -155, -148, -217, 107, 92, 93, -8,
	-213, 428, 433, 434, 438, 431, 528, 530, 545, 546,
	548, 533, 538, 537, 540, 503, 504, 505, 506, 507,
	508, 613, 614, 615, 616, 617, 618, 619, 620, -383,
	-292, 91, -157, -156, -199, 94, 99, 102, 103, 105,
	-406, 261, 340, 341, 119, -417, 643, 90, 95, 96,
	97, 98, 120, 121, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 45, 396, 396, -190,
	-79, -79, -79, -79, -229, -127, -231, -10, -8, -417,
	-79, -8, -9, -13, -35, -37, 547, -36, -299, 100,
	-236, -252, 13, 162, 43, 51, -234, -235, -12, -8,
	-144, 20, 24, 25, -132, 168, -144, -299, -132, -278,
	242, -79, -79, -267, -312, 317, -269, 414, 628, 413,
	-259, -272, 91, -258, -271, 412, -12, -353, 159, -339,
	-343, -293, 253, -369, 249, -190, -79, -362, -361, -293,
	-417, -128, -288, 239, 247, 246, 136, -387, 139, 295,
	429, 237, -52, -53, -54, -271, 176, 649, -110, 270,
	274, 88, 88, -343, -342, -341, -388, 274, 253, -368,
	-360, 245, 254, -349, 246, 247, -344, 239, 137, -388,
	-344, 244, 254, 249, 253, 274, 274, 127, 274, 127,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 269,
	-350, 151, -350, 524, 524, -356, -388, 249, 239, -388,
	-388, 245, -290, -344, 241, 26, 241, 36, 36, -350,
	-350, -350, -271, 176, -350, -350, -350, -350, 282, 282,
	-350, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -350, -350, -350, 238, -387, -136,
	407, 302, 82, -55, 284, -38, -190, -288, 239, 240,
	-387, 271, -190, 221, -190, -414, -190, 96, 96, -282,
	159, 16, -282, -279, 396, 394, 381, 386, -282, -282,
	-282, -282, 285, 379, -345, 239, 36, 250, 396, 285,
	379, 285, 286, 285, 286, 389, 399, 285, -304, 15,
	162, 429, 384, 388, 278, 238, 279, 240, 398, 286,
	-304, 90, -283, 159, 285, 396, 281, -282, -282, -310,
	-417, -295, -293, -291, 230, 24, 142, 26, 28, 145,
	177, 130, 20, 146, 38, 232, 347, 249, 176, 245,
	459, 225, 73, 528, 430, 432, 428, 435, 461, 462,
	429, 382, 32, 14, 530, 29, 259, 25, 39, 170,
	227, 149, 531, 262, 27, 260, 118, 121, 533, 23,
	76, 254, 15, 247, 41, 17, 534, 535, 18, 243,
	242, 162, 239, 71, 12, 220, 30, 158, 67, 536,
	137, 537, 538, 539, 540, 131, 69, 159, 21, 669,
	433, 434, 34, 629, 516, 273, 172, 74, 60, 631,
	143, 431, 541, 542, 119, 543, 122, 77, 636, 139,
	19, 72, 43, 544, 274, 545, 244, 670, 546, 417,
	547, 160, 228, 458, 70, 161, 643, 548, 644, 237,
	395, 9, 463, 33, 258, 246, 129, 68, 549, 238,
	148, 464, 465, 241, 132, 120, 8, 136, 35, 13,
	75, 78, 436, 437, 438, 58, 128, 520, 147, 16,
	550, 418, 141, 630, 424, 425, 426, 427, -383, 632,
	-310, -310, 33, 92, -409, -410, -411, 520, 417, 241,
	-293, -190, -85, 621, 229, -86, 627, 24, 236, -134,
	396, -122, 177, 650, 633, 634, 635, 632, 393, 640,
	638, 636, 285, 637, 88, 139, 141, 142, 4, -144,
	158, -200, 151, 152, 153, 154, 155, 156, 157, 162,
	143, 145, 159, -245, 140, 163, 164, 165, 166, 167,
	168, 169, 171, 170, 172, 173, 160, 161, 176, 223,
	224, -154, -154, -154, -154, -215, -221, -220, -417, -217,
	-383, -292, -299, -417, -417, -154, -277, -417, -417, -150,
	-417, -417, -417, -224, -144, -417, -417, -421, -417, -421,
	-421, -328, -417, -328, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	221, -417, -417, -417, -417, -417, -328, -328, -328, -328,
	-328, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, 103, 99, 102, 94, -219,
	105, 90, 90, 90, 90, -8, -9, -209, -417, -309,
	-397, -398, -193, -190, -417, 302, -293, -293, 271, -234,
	-12, -8, -229, -235, -231, -8, -120, -133, 64, 65,
	-135, 25, 39, 68, 66, 24, -418, 89, -418, -252,
	-418, 88, -37, -255, 87, 62, 44, 90, 90, 88,
	22, -230, -232, -144, 15, -297, 4, -296, 26, -293,
	90, 221, 15, -191, 30, -190, -278, -278, 88, 91,
	317, -268, -270, 415, 417, 151, -298, -293, 90, 32,
	89, 88, -190, -317, -320, -322, -321, -323, -318, -319,
	344, 345, 177, 348, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 361, 33, 261, 340, 341, 342, 343,
	362, 363, 364, 365, 367, 368, 369, 370, 325, 346,
	518, 326, 327, 328, 329, 330, 331, 333, 334, 337,
	335, 336, 338, 339, -384, -383, 87, 64, 65, 89,
	88, -324, 87, -144, -136, 238, -383, 239, 239, 239,
	-79, 458, -350, -350, -350, 269, 20, -45, -42, -376,
	19, -41, -42, 230, 123, 124, 227, 87, -339, 87,
	-348, -384, -383, 87, 137, 244, 136, -347, -344, -347,
	-348, -383, -217, -383, 137, 137, -383, -383, -264, -293,
	-264, -264, 24, -264, 24, -264, 24, 96, -293, -264,
	24, -264, 24, -264, 24, -264, 24, -264, 24, 32,
	79, 80, 81, 32, 83, 84, 85, -217, -383, -383,
	-217, -339, -217, -190, -383, -271, 96, 96, 96, -350,
	-350, 96, 90, 90, 90, -350, -350, 96, 90, -301,
	-299, 90, 90, -389, 255, 299, 301, 96, 96, 96,
	96, 32, 90, -390, 32, 657, 656, 658, 659, 660,
	90, 96, 32, 96, 32, 96, -293, 87, -190, -142,
	289, 225, 227, 230, 77, 90, 305, 306, 303, 312,
	313, 308, 309, 151, 45, 88, 241, 238, -383, -284,
	243, -284, -293, -300, -299, -291, -413, 88, -412, 23,
	424, 425, 427, 385, 426, 90, -144, -346, 15, 162,
	-304, -304, -282, -190, -346, -304, -282, -190, -282, -282,
	-282, -282, -304, -304, -304, -282, -299, -299, -190, -190,
	-190, -190, -190, -190, -190, -310, -283, -282, 632, 90,
	-276, 15, 77, -310, -310, 88, 323, 418, 419, -308,
	320, -81, -293, 90, -15, -11, -23, -22, -24, 151,
	-15, 88, 520, -183, -190, 632, 632, 632, 632, 632,
	632, -144, -144, -144, -144, 543, -207, 119, 143, 120,
	121, -162, -208, -213, -215, 106, 162, 145, 159, -245,
	-150, -154, -150, -150, -150, -150, -150, -150, -150, -150,
	-150, -150, -150, -150, -150, -311, -293, 90, 177, -158,
	-157, 105, -406, -158, 517, 88, -220, 221, -144, -144,
	-383, -144, -293, -130, -132, -130, -144, -222, -223, 147,
	-217, -144, -418, -418, 96, 105, 168, -126, 25, 39,
	-126, -126, -126, -126, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -126, -293, -293, -119, -118, 440,
	441, 442, 443, 445, 446, 447, 450, 451, 455, 456,
	439, 457, 444, 449, 452, 453, 454, 448, 343, -144,
	-144, -144, -144, -144, -144, -87, -144, 130, 131, 132,
	-209, -144, -150, -144, -144, -144, -418, -144, -144, -144,
	-210, -209, -382, -381, -380, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -418, -144,
	-164, -148, 96, -260, 105, 92, -144, -144, -131, -130,
	-295, -300, -291, -292, -130, -131, -131, -130, -130, -144,
	-144, -144, -144, -144, -144, -144, -144, -418, -144, -144,
	-144, -144, -144, -252, -418, -209, 88, -399, 417, 418,
	629, -302, 274, -301, 26, -210, 90, 15, -262, 78,
	-293, -234, -234, 60, -130, -135, -418, -36, 26, -254,
	-293, 63, 90, -329, -271, 371, 372, 177, -144, -144,
	88, -233, 28, 29, -190, -296, 168, -300, -190, -263,
	274, -190, -168, -170, -171, -172, -193, -216, -417, -173,
	-8, 539, 536, 15, -183, -184, -192, -299, -269, -312,
	-268, 88, 416, 418, 419, 77, 122, -144, -330, 176,
	-358, -357, -356, -339, -341, -342, -343, 89, -330, -335,
	377, 376, -324, -324, -324, -324, -324, -329, -329, -329,
	-329, 87, 87, -324, -324, -324, -324, -332, 87, -332,
	-332, -333, -332, 87, -333, -334, 87, -334, -369, -144,
	-366, -365, -363, -364, 248, 101, 611, 567, 520, 560,
	601, 78, -361, -233, 96, -418, -142, -285, 243, -367,
	-364, -383, -383, -383, -285, 91, 90, 91, 90, 91,
	90, -111, -59, -1, 669, 670, 671, 88, 20, -340,
	-339, -58, 299, -372, -373, 274, -368, -362, -348, 137,
	-347, -348, -348, -383, 88, 30, 127, 127, 127, 127,
	520, 227, 33, -286, 559, 143, 611, 567, -339, -58,
	241, 241, -311, -311, -311, 90, 90, -281, 665, -183,
	-138, 291, 151, 280, 280, 238, 238, 293, -190, 304,
	307, 305, 306, 303, 312, 313, 308, 309, 24, 24,
	24, 24, 24, 24, 24, 292, 294, 296, 282, -190,
	-190, -284, 77, -185, -190, 27, -299, -412, -190, 284,
	-190, -282, -282, -190, -282, -282, -190, -411, 324, -293,
	358, 622, 623, 625, 624, -122, 417, 88, 520, 23,
	-123, 23, -417, 119, 120, 121, -208, -150, -154, -150,
	142, 262, -417, -217, -418, -295, 26, 88, 78, -418,
	88, 88, -418, -418, 88, 15, -225, -223, 149, -144,
	-418, 88, -418, -418, -418, -209, -144, -144, -144, -144,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-209, 88, 88, 15, -315, 26, -418, -418, -418, -418,
	-418, -224, -418, 15, -418, 78, 88, 162, 88, -418,
	-418, -418, 88, 88, -418, -418, 88, 88, -418, 88,
	88, 88, -418, 88, 88, 88, 88, -418, -418, -418,
	-418, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, -418, -94, 544, -418, -418, 88, -418, 88, -418,
	-417, 221, -418, -418, -418, -418, -418, 88, 88, 88,
	88, 88, 88, -418, -418, -418, 88, 88, -418, 88,
	-418, 88, -418, -398, 628, 418, -197, -196, -194, 75,
	242, 76, -417, -301, -418, -158, -260, -261, -260, -202,
	-293, 96, 105, -236, -167, -169, 15, -135, -215, 89,
	88, -329, -240, -246, -279, -293, 90, 177, -331, 177,
	-331, 371, 372, -232, 221, -198, 16, -201, 33, 58,
	-11, -417, -417, 33, 88, -186, -188, -187, -189, 67,
	71, 73, 68, 69, 70, 74, -306, 26, -8, -168,
	-8, -417, -190, -183, -419, 15, 78, -419, 88, 221,
	-270, -273, 420, 417, 423, -383, 90, -110, 88, -356,
	-343, -237, -139, 41, -336, 378, -329, 527, -329, -338,
	90, -338, 96, 96, 96, 89, -48, -43, -44, 34,
	82, -363, -350, 90, 40, -350, -350, -293, 89, -233,
	-138, -190, 143, 77, -367, -367, -367, -299, -2, 668,
	674, 137, 87, 381, 19, -254, 88, 89, -218, 300,
	89, -112, -293, 89, 87, -348, -348, -293, -417, 238,
	32, 32, 611, 567, 559, -58, -218, -217, -383, -330,
	667, 666, 89, 240, 298, -143, 435, -140, 90, 91,
	-190, -190, -190, -190, -190, 230, 227, 404, -407, 310,
	-407, 283, 241, -183, -190, 88, -84, 257, 252, -304,
	-304, 34, -190, 417, 641, 639, -144, 142, 262, -162,
	-154, -150, -313, 177, 344, 261, 342, 338, 358, 349,
	376, 340, 377, 335, 334, 333, -313, -311, -209, -132,
	-144, -144, 150, -144, 148, -144, -418, -418, -418, -418,
	-418, -229, -144, -144, -144, -418, 177, 344, 15, -144,
	-311, -144, -144, -144, -144, -144, -380, -144, -209, -144,
	-209, -144, -144, -144, -144, -144, -381, -381, -381, -381,
	-381, -209, -209, -209, -209, -417, -293, -97, -96, -95,
	594, 242, -94, -164, -97, -164, -131, -295, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -194, -344,
	-344, -344, -264, 88, -275, 23, 15, 58, 58, -167,
	-198, -168, -135, -293, -243, 621, -249, 47, -247, -248,
	48, -244, 49, 57, -331, -331, 168, -234, -144, -265,
	77, -266, -274, -217, -212, -214, -213, -417, -253, -418,
	-293, -264, -266, -170, -171, -171, -170, -171, 67, 67,
	67, 72, 67, 72, 67, -187, -299, -418, -144, -302,
	78, -168, -168, -192, -299, 168, 417, 421, 422, -356,
	-405, 119, 143, 32, 77, 374, 101, -403, 176, 556,
	606, 611, 567, 560, 601, -404, 244, 136, 137, 256,
	26, 42, 89, 88, 89, 88, 89, 89, 88, -287,
	-286, -44, -43, -350, -350, 96, -383, 90, 90, 240,
	27, -190, 77, 77, 77, -113, 672, 96, 87, -3,
	82, -144, 87, 20, -339, -217, -374, -325, -375, -326,
	-327, -5, -6, -351, -116, 58, 101, -62, 45, 239,
	652, 653, 127, -417, 665, -366, -254, -370, -372, -190,
	-147, -417, -146, -148, -155, 166, 167, 261, 340, 341,
	-218, -190, -137, 289, 297, 87, -141, 92, -386, 78,
	280, 374, 280, 90, -408, 311, 90, -408, -190, -84,
	-48, -190, -282, -282, 34, -383, -418, -162, -154, -125,
	162, 520, -316, 526, -324, -324, -324, -334, -324, 330,
	-324, 330, -324, -418, -418, -418, 88, -418, 23, -418,
	-144, 88, -121, 463, 88, 88, -418, 87, 87, -144,
	-418, -418, -418, 88, -418, -418, -418, -418, -418, 88,
	-418, -418, -418, 88, -314, 612, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -93, -294, -293, -94,
	576, 576, -418, -94, -226, 88, -418, -418, 88, -418,
	88, 88, -418, 88, -418, 88, -418, -418, -418, -418,
	88, -195, 23, -195, -195, -418, -260, -190, -198, -227,
	17, -240, 52, 350, -251, -250, 56, 48, -248, 20,
	50, 20, 31, -265, 88, 151, 88, -418, -418, 88,
	58, 221, -418, -198, -181, -180, 77, 78, -182, 77,
	-180, 67, 67, -255, 88, -263, -168, -198, -198, 221,
	119, -417, -149, -161, -147, 13, 90, 90, -383, -402,
	656, 657, 32, 96, -350, -350, 137, 137, -190, 87,
	-329, 90, -329, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -190, -190, -190, -190, -371, 87, 20,
	-144, 87, 151, 89, -254, -254, 276, 162, -350, 650,
	282, 282, -350, -350, -350, -115, -114, 672, 89, -418,
	88, -337, 520, 523, -144, -156, -156, -255, 89, -379,
	520, -385, -293, -293, -293, -293, 96, 98, -418, 518,
	74, 521, -418, -329, -144, -144, -144, -234, 90, -144,
	-144, 96, 96, -418, -144, -209, -144, -418, -178, -177,
	-179, 633, 119, 32, -313, -418, -211, 274, -100, -99,
	-98, 15, -418, -144, -144, -144, -144, -144, -144, -144,
	-417, 67, 19, 17, -417, -417, -302, -227, -228, 18,
	20, -241, 54, -239, 53, -239, -250, 20, 20, 90,
	20, 90, 137, -274, -144, -214, 58, -11, -293, -212,
	-293, -229, -144, 87, -144, -158, -198, -198, -144, -204,
	487, 489, 490, 491, 488, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 492, 466, 108, 110, 109,
	467, 468, 469, 344, 514, 515, 509, 512, 513, 511,
	510, 359, 360, 470, 471, 472, 111, 112, 113, 114,
	115, 116, 117, 473, 476, 474, 477, 478, 479, 484,
	485, 480, 481, 482, 483, 486, 503, 504, 505, 506,
	507, 508, 613, 614, 615, 616, 617, 618, 619, 620,
	90, 90, 87, -144, 89, 89, -255, -370, -59, 89,
	-256, -254, 96, 89, 277, -213, -417, 90, -350, -350,
	-350, 96, 96, -301, -418, 88, -293, -404, -372, 524,
	524, -418, 26, -378, -377, -295, 87, 78, 63, 519,
	522, -418, -418, 88, -418, -418, -418, 89, 89, -418,
	-418, -418, 88, -418, -177, -179, -418, 77, -158, -229,
	20, -97, 299, 301, -97, -418, 88, -418, -418, 88,
	-418, 88, -418, -418, -257, -418, -293, 244, 20, 20,
	-257, -257, -197, -228, -107, -106, -105, 550, -144, -209,
	-242, 55, 77, 122, 90, 90, 90, 13, -212, 221,
	-234, -254, -175, 381, -229, -418, -254, 89, 26, 89,
	674, 137, 89, -213, -124, -417, 273, -301, 90, 90,
	-114, -117, -11, 88, 151, -254, -190, 63, -144, -209,
	-418, 77, 531, 633, -92, -91, -88, 644, 670, -209,
	-94, -94, -144, -144, -144, 88, -418, -418, -418, -107,
	88, -104, -103, -293, 77, 122, -266, -293, 89, -418,
	-417, -234, 89, -238, -11, 87, -3, 273, -325, -375,
	-326, -327, -5, -6, -351, -82, 520, -377, -355, -295,
	90, 96, 89, 520, -418, -418, -90, 145, 642, 609,
	-145, -156, -153, 220, -418, 88, -418, 88, -418, 88,
	-293, 244, -105, 88, 26, -302, -176, -174, -293, 573,
	-395, -394, 516, -405, -401, 119, 143, 101, -403, 611,
	567, 128, 129, -82, -144, 87, -418, -83, 288, 628,
	-386, 521, -90, 643, 587, 562, 587, 562, -144, -144,
	-144, -103, -417, -418, 88, 23, -317, -61, 584, -392,
	-393, 77, -396, 387, 583, 604, 119, 90, 89, -254,
	249, -379, 522, 142, -418, 88, -418, 88, -418, -93,
	-174, 580, -330, -158, -393, 77, -392, 77, 14, 13,
	-4, 673, 89, 290, -90, -144, -144, -418, -60, 27,
	-175, -391, 257, 252, 255, 33, -391, 96, -4, -418,
	-418, 584, 251, 32, 119, -158, -178, -177, -177,
}

var yyDef = [...]int{
	888, -2, -2, 890, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 888, 888, 888, 0, 888, 0,
	0, 888, -2, -2, 888, 1505, 0, 888, 0, 0,
	0, 0, -2, 803, 809, 0, 818, -2, 0, 0,
	888, 888, 2070, 2070, 883, 0, 0, 0, 0, 0,
	888, 888, 888, 888, 1362, 52, 888, 0, 87, 88,
	838, 839, 840, 67, 0, 2068, 889, 1, 3, 73,
	77, 0, 0, 0, 60, 1371, 0, 80, 0, 0,
	892, 0, 0, 1488, 888, 888, 0, 128, 129, 130,
	0, 0, 0, 888, 0, -2, 134, -2, 163, 164,
	165, 0, 170, 607, 526, 578, 524, 563, -2, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 402, 402, 0, 0, -2, 512, 512,
	512, 1490, 0, 0, 0, 560, 464, 402, 402, 402,
	0, 402, 402, 402, 402, 0, 0, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 1389, 169, 1506, 1503, 1504, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 0, 1482, 0, 720, 991, 0,
	0, 725, 0, 0, 792, 729, 730, 792, 0, 792,
	792, 792, 792, 0, 0, 0, 740, 0, 0, 0,
	0, 789, 0, 756, 757, 0, 789, 0, 763, 795,
	0, 0, 769, 792, 792, 772, 773, 2071, 0, 2071,
	2071, 1473, 0, 786, 784, 798, 799, 42, 802, 805,
	806, 807, 808, 811, 0, 822, 825, 1499, 1500, 0,
	827, 834, 851, 852, 0, 884, 885, 47, 1139, 0,
	1013, 1018, 1029, 1044, 1045, 1046, 1047, 1048, 1050, 1051,
	1052, 0, 0, 0, 0, 1057, 1058, 0, 0, 0,
	0, 0, 1120, 1066, 0, 0, 0, 0, 1335, 0,
	0, 1296, 1296, 1154, 1296, 1298, 1298, 1712, 1848, 1856,
	1978, 1674, 1679, 1680, 1681, 1971, 1972, 1973, 1974, 2013,
	2014, 2018, 1772, 0, 0, 0, 2067, 1809, 1817, 1818,
	1842, 1943, 1999, 1691, 1837, 1908, 1769, 1791, 1792, 1925,
	1926, 1813, 1814, 1795, 1807, 1810, 1798, 1799, 1801, 1803,
	1808, 1815, 1821, 1800, 1820, 1819, 0, 1796, 1797, 1802,
	1812, 1816, 1804, 1805, 1806, 1811, 1822, 0, 0, 0,
	0, 0, 1235, 1236, 1237, 1238, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 1348, 1349, 45, 46, 1138,
	1469, 1298, 1298, 1298, 1298, 1298, 1080, 1081, 1082, 1083,
	1084, 1108, 1109, 1115, 1116, 1920, 1921, 1922, 1923, 1753,
	2008, 1761, 1762, 1903, 1904, 1774, 1775, 2042, 2043, -2,
	-2, -2, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 1716, 1989, 1990, 231, 0, 0, 299, 300, 296,
	297, 298, 1122, 1123, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 292, 293, 2070, 0, 861, 0,
	0, 0, 0, 0, 1371, 0, 1363, 1362, 65, 0,
	-2, 0, 0, 0, 0, 49, 0, 54, 948, 891,
	79, 78, 1420, 0, 0, 0, 61, 1372, 69, 71,
	1373, 0, 893, 894, 0, 924, 928, 0, 0, 0,
	1489, 1488, 1488, 104, 0, 0, 105, 125, 126, 127,
	0, 0, 111, 112, 1475, 1476, 131, 0, 0, 181,
	182, 0, 43, 429, 0, 177, 910, 0, 422, 361,
	0, 1389, 0, 0, 0, 0, 0, 888, 0, 1483,
	158, 159, 166, 167, 168, 402, 402, 402, 575, 0,
	0, 169, 169, 533, 534, 535, 0, 0, -2, 427,
	0, 513, 0, 0, 416, 416, 420, 418, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 403, 0, 573, 574, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 1492, 0, 550, 551, 0,
	0, 0, 402, 402, 0, 0, 0, 0, 402, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 1411,
	0, 0, 0, -2, 0, 712, 0, 0, 0, 1484,
	1484, 0, 719, 0, 721, 1402, 723, 726, 727, 728,
	0, 0, 731, 0, 789, 789, 787, 788, 733, 734,
	735, 736, 792, 0, 0, 411, 412, 413, 789, 792,
	0, 792, 792, 792, 792, 789, 789, 789, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2071, 795,
	792, 0, 764, 0, 765, 766, 767, 770, 771, 774,
	2072, 2073, 1501, 1502, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 2071, 2071,
	778, 782, 1474, 804, 810, 812, 813, 0, 0, 823,
	826, 845, 51, 1760, 833, 51, 835, 836, 837, 863,
	864, 869, 0, 0, 0, 0, 875, 876, 877, 0,
	0, 880, 881, 882, 0, 0, 0, 0, 0, 1011,
	0, 0, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1030, 1031, 0, 0,
	0, 1053, 1054, 1055, 1056, 1059, 0, 1071, 0, 1073,
	1344, -2, 0, 0, 0, 1064, 1065, 0, 0, 0,
	0, 0, 0, 0, 1336, 0, 0, 1152, 0, 1153,
	1155, 1156, 0, 1157, 898, 898, 898, 898, 898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 908,
	0, 0, 908, 908, 0, 0, 224, 225, 226, 227,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 301, 249, 250, 251, 1138, 0, 0, 0, 48,
	853, 854, 0, 974, 1494, 0, 0, 904, 0, 59,
	68, 70, 1371, 63, 1371, 0, 0, 0, -2, -2,
	911, 917, 918, 919, 920, 921, 56, 2069, 57, 0,
	76, 0, 50, 0, 0, 0, 0, 375, 1423, 0,
	0, 1364, 1365, 1368, 0, 925, 1854, 929, 0, 931,
	932, 0, 0, 102, 0, 990, 0, 0, 0, 113,
	0, 115, 116, 0, 0, 0, 386, 1477, 1478, 1479,
	-2, 409, 0, 386, 370, 309, 310, 311, 361, 313,
	361, 361, 361, 361, 375, 375, 375, 375, 344, 345,
	346, 347, 348, 0, 0, 330, 361, 361, 361, 361,
	351, 352, 353, 354, 355, 356, 357, 358, 314, 315,
	316, 317, 318, 319, 320, 321, 322, 363, 363, 363,
	363, 363, 367, 367, 0, 44, 0, 915, 916, 390,
	0, 1368, 0, 0, 1411, 1486, 1496, 0, 0, 0,
	1486, 136, 0, 0, 0, 576, 618, 527, 564, 577,
	0, 530, 531, -2, 0, 0, 512, 0, 514, 0,
	410, 0, -2, 0, 420, 0, 416, 420, 417, 420,
	408, 421, 554, 555, 556, 0, 558, 559, 648, 960,
	0, 0, 0, 0, 0, 654, 655, 656, 0, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 565,
	566, 567, 568, 569, 570, 571, 572, 0, 0, 0,
	0, 514, 0, 561, 0, 0, 466, 467, 468, 0,
	0, 471, 472, 473, 474, 0, 0, 477, 478, 479,
	977, 978, 480, 481, 506, 507, 508, 482, 483, 484,
	485, 486, 487, 488, 500, 501, 502, 503, 504, 505,
	489, 490, 491, 492, 493, 494, 497, 0, 151, 1393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 907, 992, 1507, 1508, 722, 0, 1403, 0,
	1406, 1407, 1408, 1409, 1410, 793, 794, 0, 414, 415,
	792, 792, 737, 779, 0, 792, 741, 780, 742, 744,
	743, 745, 758, 759, 792, 748, 790, 791, 749, 750,
	751, 752, 753, 754, 755, 775, 760, 761, 762, 796,
	0, 800, 801, 776, 777, 0, 0, 816, 817, 0,
	824, 848, 846, 847, 849, 841, 842, 843, 844, 0,
	850, 0, 0, 866, 98, 871, 872, 873, 874, 886,
	879, 1140, 1008, 1009, 1010, 0, 1012, 1015, 0, 1124,
	1126, 1017, 1019, 1135, 1136, 1137, 0, 0, 0, 0,
	0, 1023, 1027, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1049, 1312, 1313, 1314, 1068,
	302, 303, 0, 1069, 0, 0, 0, 0, 0, 0,
	0, 1139, 1070, 0, 922, 0, 0, 1342, 1339, 0,
	0, 0, 1297, 1299, 0, 0, 0, 0, 899, 900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1315,
	0, 0, 0, 0, 0, 1335, 0, 1075, 1076, 1077,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 1495, 0, 146, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 1240, 1241, 1242, 41, 0, 0, 0, 909,
	1346, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 0, 1467, 0, 0, 856, 857, 859,
	0, 994, 0, 975, 0, 0, 862, 0, 903, 0,
	906, 62, 64, 0, 933, 912, 58, 53, 0, 0,
	952, 1421, 375, 1443, 0, 384, 384, 381, 1374, 1375,
	0, 1367, 1369, 1370, 81, 930, 926, 0, 1006, 0,
	0, 989, 0, 936, 938, 939, 940, 972, 0, 943,
	944, 0, 0, 0, 0, 0, 100, 991, 106, 0,
	114, 0, 0, 119, 120, 107, 108, 109, 110, 0,
	607, -2, 461, 183, 185, 186, 187, 178, -2, 373,
	371, 372, 312, 375, 375, 338, 339, 340, 341, 342,
	343, 0, 0, 331, 332, 333, 334, 323, 0, 324,
	325, 326, 365, 0, 327, 328, 0, 329, 428, 0,
	1376, 391, 392, 394, 402, 0, 397, 398, 0, 402,
	402, 0, 423, 424, 0, 1368, 1393, 0, 0, 0,
	1497, 1496, 1496, 1496, 0, 171, 172, 173, 174, 175,
	176, 643, 0, 0, 619, 641, 642, 169, 0, 0,
	179, 516, 515, 0, 675, 0, 426, 0, 0, 420,
	420, 405, 406, 557, 0, 0, 650, 651, 652, 653,
	0, 0, 0, 543, 455, 0, 544, 545, 514, 516,
	0, 0, 386, 469, 470, 475, 476, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	591, 592, 595, 597, 598, 599, 518, 605, 594, 596,
	600, 601, 602, 518, 606, 1390, 1391, 1392, 0, 0,
	713, 0, 0, 452, 96, 1485, 718, 1404, 724, 1405,
	789, 747, 781, 789, 739, 746, 768, 814, 815, 820,
	828, 829, 830, 831, 832, 870, 0, 0, 0, 0,
	878, 0, 0, 1016, 1125, 1127, 1020, 0, 1024, 1028,
	0, 0, 0, 1074, 1072, 1346, 0, 0, 0, 1121,
	0, 0, 1143, 1144, 0, 0, 0, 1340, 0, 0,
	1150, 0, 1300, 1301, 1158, 0, 0, 0, 0, 0,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1362, 0, 0, 0, 0, 0, 1179, 1180, 1181, 1182,
	1183, 0, 1185, 0, 1186, 0, 0, 0, 0, 1193,
	1194, 1196, 0, 0, 1199, 1200, 0, 0, 1201, 0,
	0, 0, 1205, 0, 0, 0, 0, 1214, 1215, 1216,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 1229, 0, 1103, 0, 0, 1103, 0, 1141,
	908, 0, 1302, 1303, 1304, 1305, 1306, 0, 0, 0,
	0, 0, 0, 1262, 1263, 1265, 0, 0, 1268, 0,
	1270, 0, 1468, 855, 858, 860, 946, 995, 996, 0,
	0, 0, 0, 976, 1493, 901, 902, 905, 954, 0,
	1350, 0, 0, 933, 1006, 934, 0, 913, 55, 949,
	0, 1425, 1424, 1437, 1450, 384, 384, 378, 379, 385,
	380, 382, 383, 1366, 0, 1371, 0, 1461, 0, 0,
	1453, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 982, 0, 0, 0, 0, 973, 944, 0,
	945, 0, -2, 0, 0, 94, 95, 0, 0, 0,
	117, 118, 0, 0, 124, 387, 388, 160, 169, 463,
	184, 436, 0, 0, 308, 374, 335, 336, 337, 0,
	359, 0, 0, 0, 0, 457, 132, 1380, 1379, 402,
	402, 393, 0, 396, 0, 0, 0, 1498, 362, 425,
	0, 150, 0, 0, 0, 0, 0, 156, 613, 0,
	0, 620, 0, 0, 0, 525, 0, 536, 537, 0,
	647, -2, 709, 390, 0, 404, 407, 961, 0, 0,
	538, 0, 541, 542, 456, 516, 547, 548, 562, 549,
	498, 499, 496, 0, 0, 1412, 1413, 1418, 1416, 1417,
	137, 583, 585, 584, 588, 0, 0, 0, 520, 0,
	520, 581, 0, 452, 1376, 0, 717, 453, 454, 792,
	792, 865, 99, 0, 868, 0, 0, 0, 0, 1021,
	1025, 1307, 1333, 361, 361, 1320, 361, 367, 1323, 361,
	1325, 361, 1328, 361, 1331, 1332, 0, 0, 0, 923,
	0, 0, 1149, 1343, 0, 0, 1159, 1160, 1161, 1162,
	1163, 1337, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 149, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 1102, 0, 1104, 1105,
	0, 0, 1231, 0, 0, 1243, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 997, 1002,
	1002, 1002, 0, 0, 0, 1480, 1481, 1351, 1352, 1006,
	1353, 935, 914, 953, 1443, 0, 1436, 0, -2, 1445,
	0, 0, 0, 1451, 376, 377, 927, 82, 1007, 85,
	0, 1461, 1470, 0, 1452, 1463, 1465, 0, 0, 0,
	1457, 0, 1006, 937, 968, 970, 0, 965, 980, 981,
	983, 0, 985, 0, 987, 988, 948, 942, 0, 102,
	0, 1006, 1006, 101, 0, 993, 121, 122, 123, 462,
	188, 193, 0, 0, 0, 198, 0, 200, 0, 0,
	0, 205, 206, 402, 402, 437, 0, 305, 307, 0,
	0, 191, 375, 0, 375, 0, 366, 368, 0, 438,
	458, 1377, 1378, 0, 0, 395, 399, 400, 401, 0,
	1487, 152, 0, 0, 0, 616, 0, 644, 0, 0,
	0, 0, 0, 0, 180, 517, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 0, 402, 0, 0, 0,
	402, 402, 402, 0, 701, 389, 0, 0, 672, 669,
	539, 0, 229, 230, 232, 0, 0, 0, 0, 0,
	546, 948, 1394, 1395, 1396, 0, 1415, 1419, 140, 0,
	0, 0, 0, 593, 603, 0, 519, 604, 714, 715,
	716, 97, 732, 738, 867, 887, 1014, 1022, 1026, 0,
	0, 0, 0, 1334, 1318, 375, 1321, 1322, 1324, 1326,
	1327, 1329, 1330, 1062, 1063, 1067, 0, 1146, 0, 1148,
	1341, 0, 1371, 0, 0, 0, 1177, 0, 0, 0,
	1188, 1187, 1189, 0, 1191, 1192, 1197, 1198, 1202, 0,
	1204, 1206, 1207, 0, 0, 0, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 0, 1096, 1099, 1230,
	1106, 1107, 1112, 1233, 0, 0, 1142, 1245, 0, 1250,
	0, 0, 1256, 0, 1260, 0, 1266, 1267, 1269, 1271,
	0, 0, 0, 0, 0, 974, 955, 66, 1353, 1355,
	0, 1430, 1428, 1428, 1438, 1439, 0, 0, 1446, 0,
	0, 0, 0, 86, 0, 0, 0, 1466, 0, 0,
	0, 0, 103, 1362, 962, 969, 0, 0, 963, 0,
	964, 984, 986, 941, 0, 1006, 1006, 92, 93, 0,
	194, 0, 196, 222, 223, 0, 199, 201, 202, 203,
	209, 210, 211, 204, 0, 0, 304, 306, 0, 0,
	349, 360, 350, 0, 0, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 948, 153, 154, 155, 608, 0, 618,
	0, 950, 0, 611, 0, 528, 0, 0, 0, 402,
	402, 402, 0, 0, 0, 0, 686, 0, 0, 649,
	0, 657, 0, 0, 0, 233, 234, 0, 1414, 582,
	0, 138, 139, 0, 0, 587, 521, 522, 1060, 0,
	0, 0, 1061, 1319, 0, 0, 0, 0, 1338, 0,
	0, 0, 0, 1184, 0, 0, 0, 1210, 0, 0,
	0, 638, 639, 0, 1274, 1101, 1362, 0, 1103, 1113,
	1114, 0, 1103, 1244, 0, 0, 0, 0, 0, 0,
	0, 1003, 0, 0, 0, 0, 994, 1355, 1360, 0,
	0, 1433, 0, 1426, 1429, 1427, 1440, 0, 0, 1447,
	0, 1449, 0, 1471, 1472, 1464, 0, 1456, 1459, 1455,
	1458, 1371, 966, 0, 971, 0, 1362, 91, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 0, 0, 364, 369, 0, 0, 0, 609,
	0, 951, 621, 612, 0, 699, 0, 703, 0, 0,
	0, 706, 707, 708, 685, 0, 689, 430, 673, 670,
	671, 540, 0, 141, 142, 0, 0, 0, 1308, 0,
	1311, 1145, 1147, 0, 1174, 1175, 1176, 1316, 1317, 1190,
	1203, 1208, 0, 1211, 0, 0, 1212, 0, 640, 1092,
	0, 0, 1110, 1111, 0, 1246, 0, 1251, 1252, 0,
	1257, 0, 1261, 1272, 0, 999, 956, 957, 1004, 1005,
	0, 0, 947, 1360, 84, 1361, 1358, 0, 1356, 1354,
	1422, 0, 1431, 1432, 1441, 1442, 1448, 0, 1454, 0,
	89, 0, 0, 0, 1371, 195, 0, 214, 0, 617,
	0, 620, 610, 697, 698, 0, 710, 702, 704, 705,
	687, -2, 1397, 0, 0, 0, 589, 1309, 0, 0,
	1213, 0, 636, 637, 1100, 1093, 0, 1078, 1079, 1097,
	1232, 1234, 0, 0, 0, 0, 998, 1000, 1001, 83,
	0, 1357, 1118, 0, 1434, 1435, 1462, 1460, 967, 974,
	0, 90, 443, 436, 1397, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 579, 1399, 143, 144, 509,
	510, 511, 137, 0, 1151, 1209, 1094, 0, 0, 0,
	0, 1090, 1091, 0, 1247, 0, 1253, 0, 1258, 0,
	958, 959, 1359, 0, 0, 622, 0, 624, 0, -2,
	431, 444, 0, 189, 215, 216, 0, 0, 219, 220,
	221, 212, 213, 133, 0, 0, 711, 0, 1400, 1401,
	140, 0, 0, 1085, 1086, 1087, 1088, 1089, 0, 0,
	0, 1119, 1098, 623, 0, 0, 386, 0, 633, 432,
	433, 0, 439, 440, 441, 442, 217, 218, 645, 0,
	0, 586, 1310, 0, 1248, 0, 1254, 0, 1259, 0,
	625, 626, 634, 0, 434, 0, 435, 0, 0, 0,
	614, 0, 645, 1398, 1095, 0, 0, 1117, 0, 635,
	631, 445, 447, 448, 0, 0, 446, 646, 615, 1249,
	1255, 0, 449, 450, 451, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 675,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:678
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:695
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:705
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:709
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:750
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:756
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:927
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:957
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:961
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:995
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1005
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1015
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1028
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1058
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1072
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1076
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1106
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1110
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1138
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1142
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1154
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1180
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1184
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1215
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1226
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1246
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1252
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1268
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1282
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1304
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1311
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1322
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1339
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1343
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1347
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1395
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1399
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1405
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1409
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1415
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1425
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1439
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1462
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1471
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = ""
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1563
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1579
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1583
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1587
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1593
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1597
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1623
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1628
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1633
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1746
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1750
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1759
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1763
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = Utf8Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1961
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1986
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1994
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2243
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2282
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2377
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2392
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = "key"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2530
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2540
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2544
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2550
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2560
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2570
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2584
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2601
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2607
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2619
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2632
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2662
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2717
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2731
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2925
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2943
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2947
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2978
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3120
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3378
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3422
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3430
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3446
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3458
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3467
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3482
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3496
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3500
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3506
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3512
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3518
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3528
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3550
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3556
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3586
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3592
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3596
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3600
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3606
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3610
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3615
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3619
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3628
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3710
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3714
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3718
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3737
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3766
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3771
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3776
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3781
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3787
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3804
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3810
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3820
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3825
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3834
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3839
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3844
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3849
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3855
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3861
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3868
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3875
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3882
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3900
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3906
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3912
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3918
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3924
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3930
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3942
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3964
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3968
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4019
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = "extended "
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4299
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4303
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4317
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4321
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4331
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4384
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4408
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4414
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4424
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4428
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4432
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4476
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4480
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4484
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4488
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4492
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4496
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4500
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4505
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4509
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4513
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4517
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = yyDollar[1].str
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4545
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4572
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4584
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4600
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4604
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4610
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4616
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4620
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4624
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4628
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4650
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4654
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4658
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4662
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4666
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4676
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4731
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4735
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4748
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4753
		{
			setAllowComments(yylex, true)
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			yyVAL.strs = nil
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4773
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4777
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4781
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.str = SQLCacheStr
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4803
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4813
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4817
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4836
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4842
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4846
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4855
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4860
		{
			yyVAL.strs = nil
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4868
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4876
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.str = SQLCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			yyVAL.str = DistinctStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = DistinctStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4898
		{
			yyVAL.str = StraightJoinHint
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4906
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4912
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4922
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4926
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4930
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4934
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4939
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4947
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4954
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4959
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4963
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4969
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4975
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4979
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4989
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4993
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4997
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5007
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5011
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5017
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5021
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5030
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5039
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5045
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5049
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5055
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5059
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5065
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5069
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5073
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5077
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5083
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5100
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5104
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5108
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5112
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5120
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5130
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.empty = struct{}{}
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5137
		{
			yyVAL.empty = struct{}{}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5140
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5148
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5155
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5161
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5165
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5169
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5175
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5181
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5185
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5189
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5193
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5199
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5203
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5217
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5223
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5227
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5242
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5248
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5258
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5262
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5266
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5270
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5275
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5279
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5283
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5287
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5577
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5581
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5587
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5597
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5601
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5605
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5611
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5615
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5622
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5626
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5630
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5634
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5638
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5644
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5648
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5652
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5656
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5660
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5679
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5685
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5689
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5698
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5703
		{
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5712
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5718
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5722
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5734
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5740
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5744
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5750
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5754
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5760
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5764
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5776
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5782
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5786
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5792
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5798
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5808
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5812
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5818
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5822
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5829
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5833
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5837
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5841
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5847
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5851
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5855
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5859
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5863
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5867
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5871
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5877
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5881
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5885
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5892
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5898
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6464
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6470
		{
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6472
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6476
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6480
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6484
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6488
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6492
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6496
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6500
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6504
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6508
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6512
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6518
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6522
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6526
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6530
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6534
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6538
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6542
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6546
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6550
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6605
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6609
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6613
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6617
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6621
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6627
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6645
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6649
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6655
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6659
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6663
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6667
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6671
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6677
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6681
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6685
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6689
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6693
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6697
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6701
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6705
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6709
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6713
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.str = string("")
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6741
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6747
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6751
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6757
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6766
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6772
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6776
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6780
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6784
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6823
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6838
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6844
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6848
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6857
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6866
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6872
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6878
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6882
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6888
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6893
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6897
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6901
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6910
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6916
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6920
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6924
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6933
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6937
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6941
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6945
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6955
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6959
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6963
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6967
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6973
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6977
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6981
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6985
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6990
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6994
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6998
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7002
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7007
		{
			yyVAL.str = ""
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7011
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = ""
		}
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7030
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7035
		{
			yyVAL.str = "cascaded"
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7039
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7052
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7056
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7062
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7066
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7070
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7074
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7078
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7082
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7092
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7098
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7104
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7110
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7119
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7123
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7128
		{
			yyVAL.str = ""
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7132
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7138
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7142
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7148
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7152
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7156
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7161
		{
			yyVAL.str = ""
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7165
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7174
		{
			yyVAL.str = ""
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7178
		{
			yyVAL.str = " header"
		}
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7183
		{
			yyVAL.str = ""
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7187
		{
			yyVAL.str = " manifest on"
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7191
		{
			yyVAL.str = " manifest off"
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7196
		{
			yyVAL.str = ""
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7200
		{
			yyVAL.str = " overwrite on"
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7204
		{
			yyVAL.str = " overwrite off"
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7210
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7215
		{
			yyVAL.str = ""
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7219
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7225
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7229
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7235
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7239
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7244
		{
			yyVAL.str = ""
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7248
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7254
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7258
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7264
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7268
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7272
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7277
		{
			yyVAL.str = ""
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.str = " optionally"
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7294
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7298
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7302
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7306
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7310
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7316
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7320
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7324
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7328
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7337
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7343
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7347
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7353
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7357
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7363
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7367
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7372
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7382
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7386
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7392
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7399
		{
			yyVAL.str = "charset"
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7409
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7413
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7417
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7446
		{
			yyVAL.empty = struct{}{}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7448
		{
			yyVAL.empty = struct{}{}
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7450
		{
			yyVAL.empty = struct{}{}
		}
	case 1493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7454
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7463
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7470
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7474
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7480
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7484
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7491
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7497
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7507
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7518
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8104
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8113
		{
			decNesting(yylex)
		}
	case 2070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8118
		{
			skipToEnd(yylex)
		}
	case 2071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8123
		{
			skipToEnd(yylex)
		}
	case 2072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8127
		{
			skipToEnd(yylex)
		}
	case 2073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8131
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
