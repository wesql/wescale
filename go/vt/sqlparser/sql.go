// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const WITHPATTERN = 57629
const FILTER_INFO_DESCRIPTION = 57630
const FILTER_INFO_PRIORITY = 57631
const FILTER_PATTERN_INFO_PLANS = 57632
const FILTER_PATTERN_INFO_TABLE_NAME = 57633
const FILTER_PATTERN_INFO_QUERY_REGEX = 57634
const FILTER_PATTERN_INFO_QUERY_TEMPLATE = 57635
const FILTER_PATTERN_INFO_REQUEST_IP_REGEX = 57636
const FILTER_PATTERN_INFO_USER_REGEX = 57637
const FILTER_PATTERN_INFO_LEADING_COMMENT_REGEX = 57638
const FILTER_PATTERN_INFO_TRAILING_COMMENT_REGEX = 57639
const FILTER_PATTERN_INFO_BIND_VAR_CONDS = 57640
const FILTER_ACTION_INFO_ACTION_ARGS = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const EXPIRE = 57650
const RATIO = 57651
const PAUSE = 57652
const RESUME = 57653
const SCHEMA_MIGRATION = 57654
const VITESS_THROTTLER = 57655
const DML_JOB = 57656
const DETAILS = 57657
const TIME_PERIOD = 57658
const BEGIN = 57659
const START = 57660
const TRANSACTION = 57661
const COMMIT = 57662
const ROLLBACK = 57663
const SAVEPOINT = 57664
const RELEASE = 57665
const WORK = 57666
const CONSISTENT = 57667
const SNAPSHOT = 57668
const BIT = 57669
const TINYINT = 57670
const SMALLINT = 57671
const MEDIUMINT = 57672
const INT = 57673
const INTEGER = 57674
const BIGINT = 57675
const INTNUM = 57676
const REAL = 57677
const DOUBLE = 57678
const FLOAT_TYPE = 57679
const FLOAT4_TYPE = 57680
const FLOAT8_TYPE = 57681
const DECIMAL_TYPE = 57682
const NUMERIC = 57683
const TIME = 57684
const TIMESTAMP = 57685
const DATETIME = 57686
const YEAR = 57687
const CHAR = 57688
const VARCHAR = 57689
const BOOL = 57690
const CHARACTER = 57691
const VARBINARY = 57692
const NCHAR = 57693
const TEXT = 57694
const TINYTEXT = 57695
const MEDIUMTEXT = 57696
const LONGTEXT = 57697
const BLOB = 57698
const TINYBLOB = 57699
const MEDIUMBLOB = 57700
const LONGBLOB = 57701
const JSON = 57702
const JSON_SCHEMA_VALID = 57703
const JSON_SCHEMA_VALIDATION_REPORT = 57704
const ENUM = 57705
const GEOMETRY = 57706
const POINT = 57707
const LINESTRING = 57708
const POLYGON = 57709
const GEOMCOLLECTION = 57710
const GEOMETRYCOLLECTION = 57711
const MULTIPOINT = 57712
const MULTILINESTRING = 57713
const MULTIPOLYGON = 57714
const ASCII = 57715
const UNICODE = 57716
const NULLX = 57717
const AUTO_INCREMENT = 57718
const APPROXNUM = 57719
const SIGNED = 57720
const UNSIGNED = 57721
const ZEROFILL = 57722
const CODE = 57723
const COLLATION = 57724
const COLUMNS = 57725
const DATABASES = 57726
const ENGINES = 57727
const EVENT = 57728
const EXTENDED = 57729
const FIELDS = 57730
const FULL = 57731
const FUNCTION = 57732
const GTID_EXECUTED = 57733
const KEYSPACES = 57734
const OPEN = 57735
const PLUGINS = 57736
const PRIVILEGES = 57737
const PROCESSLIST = 57738
const SCHEMAS = 57739
const TABLES = 57740
const TRIGGERS = 57741
const USER = 57742
const VGTID_EXECUTED = 57743
const VITESS_KEYSPACES = 57744
const VITESS_METADATA = 57745
const VITESS_MIGRATIONS = 57746
const VITESS_REPLICATION_STATUS = 57747
const VITESS_SHARDS = 57748
const VITESS_TABLETS = 57749
const VITESS_TARGET = 57750
const VSCHEMA = 57751
const VITESS_THROTTLED_APPS = 57752
const WORKLOAD = 57753
const LASTSEENGTID = 57754
const FAILPOINTS = 57755
const TABLETS_PLANS = 57756
const DML_JOBS = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const FAST = 57770
const QUICK = 57771
const CHANGED = 57772
const MEDIUM = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_DATE = 57776
const NOW = 57777
const CURRENT_TIME = 57778
const LOCALTIME = 57779
const LOCALTIMESTAMP = 57780
const CURRENT_USER = 57781
const UTC_DATE = 57782
const UTC_TIME = 57783
const UTC_TIMESTAMP = 57784
const DAY = 57785
const DAY_HOUR = 57786
const DAY_MICROSECOND = 57787
const DAY_MINUTE = 57788
const DAY_SECOND = 57789
const HOUR = 57790
const HOUR_MICROSECOND = 57791
const HOUR_MINUTE = 57792
const HOUR_SECOND = 57793
const MICROSECOND = 57794
const MINUTE = 57795
const MINUTE_MICROSECOND = 57796
const MINUTE_SECOND = 57797
const MONTH = 57798
const QUARTER = 57799
const SECOND = 57800
const SECOND_MICROSECOND = 57801
const YEAR_MONTH = 57802
const WEEK = 57803
const REPLACE = 57804
const CONVERT = 57805
const CAST = 57806
const SUBSTR = 57807
const SUBSTRING = 57808
const SEPARATOR = 57809
const TIMESTAMPADD = 57810
const TIMESTAMPDIFF = 57811
const WEIGHT_STRING = 57812
const LTRIM = 57813
const RTRIM = 57814
const TRIM = 57815
const JSON_ARRAY = 57816
const JSON_OBJECT = 57817
const JSON_QUOTE = 57818
const JSON_DEPTH = 57819
const JSON_TYPE = 57820
const JSON_LENGTH = 57821
const JSON_VALID = 57822
const JSON_ARRAY_APPEND = 57823
const JSON_ARRAY_INSERT = 57824
const JSON_INSERT = 57825
const JSON_MERGE = 57826
const JSON_MERGE_PATCH = 57827
const JSON_MERGE_PRESERVE = 57828
const JSON_REMOVE = 57829
const JSON_REPLACE = 57830
const JSON_SET = 57831
const JSON_UNQUOTE = 57832
const COUNT = 57833
const AVG = 57834
const MAX = 57835
const MIN = 57836
const SUM = 57837
const GROUP_CONCAT = 57838
const BIT_AND = 57839
const BIT_OR = 57840
const BIT_XOR = 57841
const STD = 57842
const STDDEV = 57843
const STDDEV_POP = 57844
const STDDEV_SAMP = 57845
const VAR_POP = 57846
const VAR_SAMP = 57847
const VARIANCE = 57848
const REGEXP_INSTR = 57849
const REGEXP_LIKE = 57850
const REGEXP_REPLACE = 57851
const REGEXP_SUBSTR = 57852
const ExtractValue = 57853
const UpdateXML = 57854
const GET_LOCK = 57855
const RELEASE_LOCK = 57856
const RELEASE_ALL_LOCKS = 57857
const IS_FREE_LOCK = 57858
const IS_USED_LOCK = 57859
const LOCATE = 57860
const POSITION = 57861
const MATCH = 57862
const AGAINST = 57863
const BOOLEAN = 57864
const LANGUAGE = 57865
const WITH = 57866
const QUERY = 57867
const EXPANSION = 57868
const WITHOUT = 57869
const VALIDATION = 57870
const UNUSED = 57871
const ARRAY = 57872
const BYTE = 57873
const CUME_DIST = 57874
const DESCRIPTION = 57875
const DENSE_RANK = 57876
const EMPTY = 57877
const EXCEPT = 57878
const FIRST_VALUE = 57879
const GROUPING = 57880
const GROUPS = 57881
const JSON_TABLE = 57882
const LAG = 57883
const LAST_VALUE = 57884
const LATERAL = 57885
const LEAD = 57886
const NTH_VALUE = 57887
const NTILE = 57888
const OF = 57889
const OVER = 57890
const PERCENT_RANK = 57891
const RANK = 57892
const RECURSIVE = 57893
const ROW_NUMBER = 57894
const SYSTEM = 57895
const WINDOW = 57896
const ACTIVE = 57897
const ADMIN = 57898
const AUTOEXTEND_SIZE = 57899
const BUCKETS = 57900
const CLONE = 57901
const COLUMN_FORMAT = 57902
const COMPONENT = 57903
const DEFINITION = 57904
const ENFORCED = 57905
const ENGINE_ATTRIBUTE = 57906
const EXCLUDE = 57907
const FOLLOWING = 57908
const GET_MASTER_PUBLIC_KEY = 57909
const HISTOGRAM = 57910
const HISTORY = 57911
const INACTIVE = 57912
const INVISIBLE = 57913
const LOCKED = 57914
const MASTER_COMPRESSION_ALGORITHMS = 57915
const MASTER_PUBLIC_KEY_PATH = 57916
const MASTER_TLS_CIPHERSUITES = 57917
const MASTER_ZSTD_COMPRESSION_LEVEL = 57918
const NESTED = 57919
const NETWORK_NAMESPACE = 57920
const NOWAIT = 57921
const NULLS = 57922
const OJ = 57923
const OLD = 57924
const OPTIONAL = 57925
const ORDINALITY = 57926
const ORGANIZATION = 57927
const OTHERS = 57928
const PARTIAL = 57929
const PATH = 57930
const PERSIST = 57931
const PERSIST_ONLY = 57932
const PRECEDING = 57933
const PRIVILEGE_CHECKS_USER = 57934
const PROCESS = 57935
const RANDOM = 57936
const REFERENCE = 57937
const REQUIRE_ROW_FORMAT = 57938
const RESOURCE = 57939
const RESPECT = 57940
const RESTART = 57941
const RETAIN = 57942
const REUSE = 57943
const ROLE = 57944
const SECONDARY = 57945
const SECONDARY_ENGINE = 57946
const SECONDARY_ENGINE_ATTRIBUTE = 57947
const SECONDARY_LOAD = 57948
const SECONDARY_UNLOAD = 57949
const SIMPLE = 57950
const SKIP = 57951
const SRID = 57952
const THREAD_PRIORITY = 57953
const TIES = 57954
const UNBOUNDED = 57955
const VCPU = 57956
const VISIBLE = 57957
const RETURNING = 57958
const FORMAT_BYTES = 57959
const FORMAT_PICO_TIME = 57960
const PS_CURRENT_THREAD_ID = 57961
const PS_THREAD_ID = 57962
const GTID_SUBSET = 57963
const GTID_SUBTRACT = 57964
const WAIT_FOR_EXECUTED_GTID_SET = 57965
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57966
const FORMAT = 57967
const TREE = 57968
const VITESS = 57969
const TRADITIONAL = 57970
const VTEXPLAIN = 57971
const VEXPLAIN = 57972
const PLAN = 57973
const LOCAL = 57974
const LOW_PRIORITY = 57975
const KILL = 57976
const USERS = 57977
const NO_WRITE_TO_BINLOG = 57978
const LOGS = 57979
const ERROR = 57980
const GENERAL = 57981
const HOSTS = 57982
const OPTIMIZER_COSTS = 57983
const USER_RESOURCES = 57984
const SLOW = 57985
const CHANNEL = 57986
const RELAY = 57987
const EXPORT = 57988
const CURRENT = 57989
const ROW = 57990
const ROWS = 57991
const AVG_ROW_LENGTH = 57992
const CONNECTION = 57993
const CHECKSUM = 57994
const DELAY_KEY_WRITE = 57995
const ENCRYPTION = 57996
const ENGINE = 57997
const INSERT_METHOD = 57998
const MAX_ROWS = 57999
const MIN_ROWS = 58000
const PACK_KEYS = 58001
const PASSWORD = 58002
const FIXED = 58003
const DYNAMIC = 58004
const COMPRESSED = 58005
const REDUNDANT = 58006
const COMPACT = 58007
const ROW_FORMAT = 58008
const STATS_AUTO_RECALC = 58009
const STATS_PERSISTENT = 58010
const STATS_SAMPLE_PAGES = 58011
const STORAGE = 58012
const MEMORY = 58013
const DISK = 58014
const PARTITIONS = 58015
const LINEAR = 58016
const RANGE = 58017
const LIST = 58018
const SUBPARTITION = 58019
const SUBPARTITIONS = 58020
const HASH = 58021

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"WITHPATTERN",
	"FILTER_INFO_DESCRIPTION",
	"FILTER_INFO_PRIORITY",
	"FILTER_PATTERN_INFO_PLANS",
	"FILTER_PATTERN_INFO_TABLE_NAME",
	"FILTER_PATTERN_INFO_QUERY_REGEX",
	"FILTER_PATTERN_INFO_QUERY_TEMPLATE",
	"FILTER_PATTERN_INFO_REQUEST_IP_REGEX",
	"FILTER_PATTERN_INFO_USER_REGEX",
	"FILTER_PATTERN_INFO_LEADING_COMMENT_REGEX",
	"FILTER_PATTERN_INFO_TRAILING_COMMENT_REGEX",
	"FILTER_PATTERN_INFO_BIND_VAR_CONDS",
	"FILTER_ACTION_INFO_ACTION_ARGS",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 53,
	14, 53,
	-2, 42,
	-1, 54,
	1, 185,
	697, 185,
	-2, 193,
	-1, 55,
	135, 193,
	176, 193,
	366, 193,
	-2, 547,
	-1, 65,
	36, 846,
	240, 846,
	251, 846,
	286, 860,
	287, 860,
	-2, 848,
	-1, 70,
	242, 884,
	-2, 882,
	-1, 129,
	239, 1547,
	-2, 159,
	-1, 131,
	1, 186,
	697, 186,
	-2, 193,
	-1, 142,
	136, 433,
	245, 433,
	-2, 536,
	-1, 161,
	135, 193,
	176, 193,
	366, 193,
	-2, 556,
	-1, 847,
	87, 1564,
	-2, 1409,
	-1, 848,
	87, 1565,
	221, 1569,
	-2, 1410,
	-1, 849,
	221, 1568,
	-2, 44,
	-1, 928,
	60, 960,
	-2, 975,
	-1, 1018,
	250, 45,
	255, 45,
	-2, 444,
	-1, 1105,
	1, 604,
	697, 604,
	-2, 193,
	-1, 1420,
	221, 1569,
	-2, 1410,
	-1, 1568,
	60, 961,
	-2, 980,
	-1, 1569,
	60, 962,
	-2, 981,
	-1, 1620,
	135, 193,
	176, 193,
	366, 193,
	-2, 483,
	-1, 1705,
	136, 433,
	245, 433,
	-2, 536,
	-1, 1714,
	250, 46,
	255, 46,
	-2, 445,
	-1, 2103,
	221, 1573,
	-2, 1567,
	-1, 2104,
	221, 1569,
	-2, 1565,
	-1, 2203,
	135, 193,
	176, 193,
	366, 193,
	-2, 484,
	-1, 2210,
	26, 214,
	-2, 216,
	-1, 2619,
	78, 100,
	88, 100,
	-2, 1039,
	-1, 2690,
	672, 755,
	-2, 729,
	-1, 2863,
	50, 1515,
	-2, 1509,
	-1, 3542,
	672, 755,
	-2, 743,
	-1, 3633,
	90, 687,
	95, 687,
	105, 687,
	178, 687,
	179, 687,
	180, 687,
	181, 687,
	182, 687,
	183, 687,
	184, 687,
	185, 687,
	186, 687,
	187, 687,
	188, 687,
	189, 687,
	190, 687,
	191, 687,
	192, 687,
	193, 687,
	194, 687,
	195, 687,
	196, 687,
	197, 687,
	198, 687,
	199, 687,
	200, 687,
	201, 687,
	202, 687,
	203, 687,
	204, 687,
	205, 687,
	206, 687,
	207, 687,
	208, 687,
	209, 687,
	210, 687,
	211, 687,
	212, 687,
	213, 687,
	214, 687,
	215, 687,
	216, 687,
	217, 687,
	218, 687,
	219, 687,
	-2, 1932,
}

const yyPrivate = 57344

const yyLast = 51103

var yyAct = [...]int{
	1576, 3274, 3275, 3276, 3685, 858, 3714, 3725, 3520, 851,
	721, 3675, 3631, 3610, 3676, 3244, 2151, 3099, 850, 1623,
	1970, 3573, 3599, 3015, 2915, 2200, 2132, 2922, 3504, 3452,
	2975, 3413, 2980, 2977, 2976, 2974, 2979, 2978, 2966, 1916,
	3502, 3231, 5, 1178, 2876, 2519, 922, 3304, 2879, 2553,
	2995, 2134, 700, 3492, 2822, 2280, 2930, 703, 2877, 1583,
	2994, 2880, 3138, 3132, 2757, 2155, 812, 2171, 3309, 811,
	813, 731, 2997, 3158, 2874, 2592, 2864, 2579, 3124, 2094,
	699, 1121, 2237, 2174, 2653, 818, 1050, 2687, 2268, 2741,
	817, 1681, 944, 44, 2242, 2654, 977, 2259, 2655, 2188,
	701, 2311, 2175, 2604, 43, 1570, 2555, 45, 2065, 1150,
	2571, 1966, 2091, 945, 924, 1985, 2176, 2585, 2289, 2727,
	1924, 1712, 156, 2267, 170, 2328, 2163, 2244, 2646, 1612,
	2621, 1730, 1008, 1592, 3021, 2178, 1013, 713, 1550, 696,
	1989, 1432, 1943, 1359, 1344, 1855, 103, 985, 1846, 1719,
	981, 1019, 1016, 1811, 989, 986, 2233, 1014, 107, 108,
	1015, 2234, 2099, 1611, 962, 1597, 964, 1180, 1850, 1026,
	935, 2156, 708, 2061, 1392, 1168, 1915, 1864, 174, 926,
	1416, 929, 1176, 932, 1674, 102, 88, 134, 132, 133,
	1704, 110, 139, 140, 1099, 930, 933, 109, 931, 707,
	947, 957, 1436, 101, 87, 1440, 3532, 2680, 3715, 3232,
	690, 2282, 2283, 2284, 2282, 2963, 3558, 2710, 2709, 2326,
	2678, 3185, 98, 3224, 1546, 98, 1796, 623, 3659, 98,
	952, 956, 2749, 135, 2750, 2064, 3554, 628, 675, 1931,
	1998, 2985, 3559, 96, 1930, 1052, 141, 1929, 1946, 938,
	1360, 948, 2100, 669, 954, 954, 1928, 3553, 1069, 1070,
	1071, 978, 1074, 1075, 1076, 1077, 1927, 1926, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 923, 1055, 691, 1899, 939,
	2, 972, 971, 925, 1006, 122, 1029, 2983, 675, 1896,
	627, 693, 3654, 695, 3279, 694, 2551, 1005, 2129, 2130,
	135, 3279, 1355, 1030, 2860, 1056, 1059, 1060, 2581, 1004,
	1003, 1002, 2407, 2989, 2700, 197, 2315, 992, 970, 815,
	816, 2826, 3679, 3663, 997, 1063, 3737, 114, 115, 116,
	3674, 119, 669, 3702, 129, 1377, 1072, 198, 3661, 136,
	617, 158, 3104, 946, 867, 868, 869, 3103, 3662, 1371,
	3554, 1577, 179, 2703, 688, 689, 3505, 974, 2985, 2520,
	2314, 1936, 669, 3660, 918, 919, 920, 921, 135, 2313,
	928, 2982, 3046, 3448, 666, 3447, 1054, 867, 868, 869,
	1053, 3278, 3237, 169, 89, 3238, 3693, 91, 3278, 157,
	3458, 3657, 3257, 3611, 1346, 2416, 3245, 3600, 959, 960,
	98, 89, 3537, 3607, 89, 2308, 89, 984, 176, 3457,
	669, 177, 3256, 1975, 2983, 1360, 3636, 89, 46, 47,
	91, 3641, 646, 3066, 1693, 2595, 2986, 2912, 2913, 2552,
	145, 146, 168, 167, 196, 2911, 644, 95, 2748, 3639,
	2989, 50, 80, 81, 2413, 78, 82, 2194, 3645, 3646,
	2596, 2733, 2159, 3322, 79, 2726, 2932, 2933, 2717, 2718,
	2414, 1140, 98, 3640, 1172, 970, 815, 816, 3617, 1613,
	1374, 1614, 1375, 1376, 670, 1366, 641, 916, 1358, 98,
	2195, 2196, 98, 66, 98, 659, 2630, 915, 3521, 2629,
	1908, 1909, 2631, 2253, 1128, 98, 2642, 1345, 1128, 1129,
	2681, 3617, 1141, 1129, 1001, 3135, 1110, 1111, 3054, 669,
	2131, 1127, 2791, 1126, 654, 1356, 2247, 3052, 1134, 1157,
	3680, 1159, 669, 1098, 1371, 1907, 651, 657, 653, 683,
	626, 2213, 2212, 162, 143, 165, 150, 142, 1113, 163,
	164, 3681, 2588, 2589, 2405, 3017, 1911, 180, 687, 669,
	681, 1898, 1554, 2986, 1609, 3022, 186, 151, 2728, 1156,
	1158, 669, 999, 670, 1555, 2931, 1786, 2260, 3480, 2263,
	3481, 154, 152, 147, 148, 149, 153, 2934, 2408, 2409,
	2411, 2410, 3686, 144, 2329, 2334, 2688, 128, 2261, 2262,
	2954, 2159, 155, 670, 2290, 2713, 631, 1171, 633, 647,
	3717, 672, 1073, 671, 637, 1812, 635, 639, 648, 640,
	1787, 634, 1788, 645, 1142, 1161, 636, 649, 650, 656,
	660, 661, 663, 658, 655, 664, 629, 630, 662, 652,
	1135, 643, 673, 53, 56, 59, 58, 61, 1170, 77,
	2335, 670, 86, 64, 83, 1149, 3687, 3010, 1856, 2396,
	1366, 1106, 3655, 1145, 1146, 3011, 996, 3018, 62, 998,
	973, 967, 965, 624, 2246, 2157, 2158, 65, 94, 93,
	1143, 1144, 75, 76, 60, 2736, 3226, 197, 3432, 3225,
	84, 85, 2333, 1154, 2385, 1079, 1856, 1155, 1078, 1039,
	3019, 2331, 2382, 2825, 2383, 2293, 2384, 1160, 2792, 3222,
	171, 136, 197, 1124, 1037, 1130, 1131, 1132, 1133, 3283,
	963, 2172, 1010, 1854, 179, 1367, 1000, 1365, 1362, 1363,
	1364, 1370, 1372, 1369, 2332, 1368, 136, 1009, 3585, 1048,
	1153, 1010, 1173, 1174, 1175, 1361, 1047, 1046, 1697, 179,
	670, 1045, 67, 68, 1044, 69, 70, 71, 72, 1043,
	1162, 1163, 1165, 670, 1042, 3531, 2679, 2635, 1001, 1041,
	993, 1036, 1558, 1104, 1049, 1428, 1407, 995, 994, 2934,
	176, 982, 1407, 177, 3729, 1147, 1022, 1418, 982, 1007,
	670, 2414, 980, 3738, 3691, 1148, 982, 166, 1021, 625,
	864, 1337, 670, 864, 1718, 176, 196, 864, 177, 1610,
	1410, 1411, 1412, 1413, 2157, 2158, 2312, 973, 967, 965,
	1424, 1847, 1832, 2682, 3221, 990, 999, 1138, 2556, 2558,
	1058, 196, 3136, 2644, 2715, 958, 1021, 1378, 2737, 2354,
	1057, 2353, 1691, 2319, 2357, 2358, 2740, 1040, 2355, 2356,
	1338, 1339, 2318, 1414, 2359, 1843, 674, 1347, 159, 1066,
	2957, 160, 1038, 2753, 92, 2712, 1433, 3183, 3184, 2428,
	2987, 2988, 1798, 1797, 1799, 1800, 1801, 1690, 1028, 667,
	2702, 1689, 2698, 2991, 1844, 1687, 966, 3255, 3613, 622,
	621, 172, 616, 2725, 668, 3517, 2724, 92, 184, 3172,
	1367, 2310, 1365, 1362, 1363, 1364, 1370, 1372, 1369, 2201,
	1368, 1408, 1409, 1717, 1816, 3154, 2626, 2591, 3644, 180,
	1361, 3613, 3612, 2415, 2701, 2586, 97, 3277, 186, 1001,
	1097, 1578, 1580, 1438, 3277, 1439, 1354, 2528, 1978, 192,
	1442, 1601, 1509, 97, 180, 1109, 97, 1115, 97, 1407,
	131, 1125, 1112, 186, 1544, 3612, 2743, 1404, 2910, 97,
	941, 2742, 3643, 2758, 1169, 3741, 2250, 1151, 1545, 3713,
	3648, 3545, 1562, 3528, 3088, 1865, 1051, 3217, 3207, 1151,
	1000, 1027, 3148, 2669, 173, 178, 175, 181, 182, 183,
	185, 187, 188, 189, 190, 2330, 2557, 2987, 2988, 1123,
	191, 193, 194, 195, 3727, 1920, 2251, 3728, 1101, 3726,
	2991, 2743, 1840, 2249, 1561, 1559, 2742, 1615, 1565, 1990,
	1103, 126, 1102, 926, 2777, 1515, 1516, 1517, 1518, 1519,
	1685, 1137, 1545, 966, 1817, 1065, 1375, 1376, 123, 1860,
	1563, 1564, 1139, 107, 108, 3694, 1376, 2252, 2760, 3318,
	1835, 1551, 1833, 1834, 1164, 1838, 1839, 2248, 1538, 1836,
	1837, 3190, 1813, 1377, 1814, 74, 1990, 1815, 2445, 63,
	1825, 1948, 171, 3189, 2297, 1727, 110, 1860, 1726, 1393,
	1857, 1858, 1861, 1859, 1716, 1949, 1405, 1406, 1947, 1593,
	2302, 3575, 1694, 1695, 1696, 2309, 1377, 171, 2307, 124,
	1724, 3043, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402,
	1401, 1403, 1404, 1710, 1152, 2305, 1579, 1100, 1857, 1858,
	1861, 1859, 1866, 923, 1039, 1548, 1152, 1759, 1683, 2306,
	1762, 1582, 1764, 1037, 1781, 1703, 3576, 925, 2770, 2769,
	2768, 1000, 1122, 2762, 1999, 2766, 1028, 2761, 1722, 2759,
	1105, 2420, 2421, 2422, 2764, 3739, 3682, 1763, 2000, 1771,
	1772, 1606, 1607, 2763, 3173, 1777, 1778, 1560, 1732, 937,
	1733, 125, 1735, 1737, 3510, 1721, 1741, 1743, 1745, 1747,
	1749, 2765, 2767, 2302, 3733, 3440, 1686, 2370, 2366, 2368,
	2369, 2367, 2373, 2374, 1720, 1720, 2371, 2372, 1374, 1577,
	1375, 1376, 1700, 1713, 1701, 1699, 1995, 2779, 2341, 2337,
	2339, 2340, 2338, 2344, 2345, 1996, 1869, 2342, 2343, 3511,
	3439, 1028, 2304, 1873, 3430, 1875, 1876, 1877, 1878, 3268,
	3267, 1374, 1882, 1375, 1376, 1806, 1867, 1868, 1767, 2096,
	3197, 1804, 3740, 2093, 1894, 1895, 3251, 1897, 3252, 1027,
	1872, 1064, 2095, 172, 3196, 1061, 3186, 1879, 1880, 1881,
	184, 1848, 1820, 1863, 1818, 1819, 862, 1823, 1824, 1793,
	2964, 1821, 1822, 1938, 1940, 1941, 2950, 2651, 172, 867,
	868, 869, 2650, 1852, 135, 184, 2649, 1997, 1692, 2256,
	1807, 1791, 1790, 1004, 1003, 1002, 2039, 1939, 1827, 1805,
	1826, 192, 1377, 1830, 1831, 1803, 1789, 1828, 1829, 1779,
	1773, 1770, 1769, 2442, 1871, 3414, 3415, 3416, 3417, 3418,
	3419, 3420, 3421, 3422, 1027, 1768, 192, 1739, 1120, 1377,
	1021, 1024, 1025, 1792, 982, 1119, 2096, 1893, 1018, 1022,
	3180, 675, 675, 1892, 3014, 1609, 173, 178, 175, 181,
	182, 183, 185, 187, 188, 189, 190, 2633, 675, 1017,
	1028, 1341, 191, 193, 194, 195, 2278, 2277, 2276, 2275,
	3743, 173, 178, 175, 181, 182, 183, 185, 187, 188,
	189, 190, 2274, 2273, 1028, 1586, 2441, 191, 193, 194,
	195, 3732, 3688, 1393, 2031, 2020, 2021, 2022, 2023, 2033,
	2024, 2025, 2026, 2038, 2034, 2027, 2028, 2035, 2036, 2037,
	2029, 2030, 2032, 3461, 1973, 1973, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1402, 1401, 1403, 1404, 1971, 1971, 3683,
	1974, 1587, 1028, 2577, 3716, 3712, 3711, 1374, 1993, 1375,
	1376, 44, 1994, 1951, 44, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 3670, 1577,
	2482, 1942, 3587, 1027, 1374, 3540, 1375, 1376, 1031, 1021,
	1373, 1577, 1577, 1033, 1944, 3539, 2057, 1034, 1032, 3514,
	3044, 1399, 1400, 1402, 1401, 1403, 1404, 1027, 1418, 1373,
	1577, 3533, 1952, 1021, 1024, 1025, 113, 982, 1035, 104,
	104, 1018, 1022, 3513, 2089, 1991, 106, 112, 3512, 111,
	105, 105, 3435, 1932, 1933, 1934, 1935, 3423, 1544, 1904,
	1905, 2577, 3606, 3466, 2053, 3407, 1945, 2577, 3583, 2118,
	1921, 3406, 1545, 3317, 88, 1027, 3315, 88, 2577, 3579,
	1031, 1021, 3566, 1577, 3465, 1033, 1578, 2125, 3264, 1034,
	1032, 3235, 3530, 2101, 1397, 1398, 1399, 1400, 1402, 1401,
	1403, 1404, 1979, 1980, 1950, 1577, 1577, 1982, 3253, 954,
	954, 1987, 2092, 3527, 3526, 1992, 1543, 1577, 3443, 1577,
	2148, 2577, 3431, 98, 1542, 1541, 3235, 1577, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 1977, 2577,
	3233, 3411, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 3194,
	2052, 1377, 2054, 2055, 2056, 3179, 2058, 2059, 2060, 3028,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 3026, 2090, 2101, 2097, 2098, 954, 2210,
	954, 954, 954, 954, 954, 2143, 3023, 2144, 107, 108,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 3020, 2119,
	2120, 2121, 2122, 2123, 2106, 2107, 2147, 2103, 2102, 107,
	108, 2956, 1984, 1986, 2257, 2001, 2002, 2003, 2004, 2302,
	1577, 3152, 1577, 3410, 2051, 3698, 1577, 2182, 2953, 2015,
	2219, 2220, 2221, 2222, 2062, 2493, 1577, 954, 1395, 1396,
	1397, 1398, 1399, 1400, 1402, 1401, 1403, 1404, 2205, 2952,
	2214, 2731, 2215, 2216, 2217, 2218, 938, 2136, 2186, 2160,
	2161, 2124, 1377, 2943, 2942, 2940, 2941, 3243, 2225, 2226,
	2227, 2228, 2938, 2939, 2689, 2204, 1374, 2660, 1375, 1376,
	2647, 3061, 2149, 1540, 1377, 2199, 2239, 2324, 2208, 2938,
	2937, 1393, 2291, 2105, 2167, 2480, 2108, 2109, 2245, 2103,
	2169, 1377, 2126, 2191, 2192, 2190, 2601, 1577, 2062, 2207,
	972, 971, 2206, 2484, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1402, 1401, 1403, 1404, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1402, 1401, 1403, 1404, 2288, 2918, 2255, 2414,
	2711, 1680, 2692, 2685, 2686, 2665, 2241, 1577, 2668, 2667,
	2146, 1377, 2577, 2576, 112, 2240, 2438, 1577, 2236, 2229,
	2231, 2232, 1976, 1577, 2573, 2323, 2254, 2154, 2296, 1577,
	2265, 2299, 2266, 2300, 2138, 2164, 2165, 2272, 2137, 106,
	1900, 1377, 2919, 1862, 106, 3696, 1577, 3016, 1802, 2316,
	1794, 1029, 1784, 2295, 2240, 2294, 1780, 1374, 2298, 1375,
	1376, 1776, 1393, 2472, 2752, 1775, 2921, 1774, 1030, 2320,
	1588, 1377, 2317, 2321, 2322, 1167, 1377, 1166, 1720, 1374,
	1377, 1375, 1376, 1373, 2916, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1402, 1401, 1403, 1404, 1374, 2438, 1375, 1376,
	2622, 2932, 2933, 1577, 1393, 1680, 1679, 1389, 2917, 1390,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1379, 1621, 1620,
	2327, 2622, 2209, 1391, 1405, 1406, 1388, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1402, 1401, 1403, 1404, 3147, 2398,
	2399, 2923, 1373, 2875, 2401, 3149, 1374, 2593, 1375, 1376,
	3571, 3544, 2593, 2402, 3147, 3623, 1577, 2905, 113, 2577,
	3621, 1577, 2303, 2623, 3619, 1577, 1377, 2414, 2431, 112,
	2600, 111, 2436, 2625, 2601, 2439, 1374, 2440, 1375, 1376,
	106, 3108, 2447, 2388, 2623, 2940, 2449, 2450, 2451, 2394,
	2848, 2424, 2193, 2426, 2414, 2438, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 1374, 1377, 1375, 1376,
	2931, 1374, 2432, 1375, 1376, 1374, 2493, 1375, 1376, 2601,
	2302, 3198, 2934, 1944, 3147, 2601, 2469, 2468, 2302, 2285,
	2162, 1581, 2473, 2474, 2475, 2476, 2477, 2430, 2479, 1577,
	2425, 2404, 2481, 2127, 1377, 1976, 2486, 2487, 1922, 2488,
	3489, 1577, 2491, 1906, 2492, 1842, 2412, 1608, 2495, 1012,
	1011, 126, 2499, 3651, 3647, 3589, 2504, 2505, 2506, 2507,
	1377, 1755, 3199, 3200, 3201, 1945, 2967, 3454, 1584, 2518,
	2423, 2521, 2522, 3408, 3329, 3548, 3216, 3213, 1377, 2524,
	2526, 3487, 1577, 3206, 3192, 3071, 2529, 2530, 2531, 2532,
	2533, 1374, 1377, 1375, 1376, 3070, 1682, 2540, 2541, 1377,
	2542, 2238, 3012, 2545, 2547, 2148, 2969, 2549, 2965, 2444,
	2446, 2693, 1756, 1757, 1758, 2235, 2657, 2561, 3484, 1577,
	1377, 2453, 2454, 2455, 2456, 1973, 2103, 2102, 1393, 98,
	2427, 2230, 1374, 2224, 1375, 1376, 2223, 1377, 1971, 1809,
	2562, 1715, 1711, 1104, 3470, 1577, 1684, 1676, 2920, 127,
	1377, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1401,
	1403, 1404, 3123, 1577, 1377, 3455, 1433, 2560, 2478, 1374,
	2656, 1375, 1376, 3159, 3160, 2253, 3116, 1577, 2141, 1377,
	3708, 3706, 3677, 3113, 1577, 1902, 1377, 3552, 3475, 3162,
	2961, 2597, 2960, 1377, 2959, 1374, 2875, 1375, 1376, 2563,
	2578, 2565, 2672, 2452, 3111, 1577, 2389, 1377, 3165, 2897,
	3164, 1377, 2895, 1374, 2898, 1375, 1376, 2896, 2657, 1377,
	2467, 3076, 1577, 1377, 2894, 2893, 3456, 1374, 2153, 1375,
	1376, 1585, 2145, 2574, 1374, 1577, 1375, 1376, 3153, 2853,
	3509, 1377, 44, 1551, 2616, 2852, 2550, 1903, 3059, 1577,
	2899, 2615, 2610, 2611, 2617, 1374, 2587, 1375, 1376, 1590,
	3308, 2643, 2645, 2548, 1577, 1545, 3310, 1377, 2575, 2862,
	2546, 1577, 1374, 2570, 1375, 1376, 2590, 2525, 1577, 3143,
	1841, 1377, 1593, 2684, 914, 1374, 2620, 1375, 1376, 1377,
	2936, 2508, 1577, 2640, 2661, 2500, 1577, 2435, 2624, 1374,
	1068, 1375, 1376, 2627, 3689, 1377, 1999, 2434, 2636, 1377,
	1067, 2433, 2245, 2659, 1374, 2634, 1375, 1376, 2662, 2663,
	2000, 1374, 2637, 1375, 1376, 1589, 2708, 3140, 1374, 104,
	1375, 1376, 2924, 2648, 3037, 3139, 2928, 1377, 2656, 3299,
	105, 3298, 1374, 2927, 1375, 1376, 1374, 1377, 1375, 1376,
	2746, 2658, 3525, 1340, 1374, 942, 1375, 1376, 1374, 2699,
	1375, 1376, 3202, 943, 2666, 1377, 3427, 106, 136, 2706,
	1377, 2670, 3145, 2673, 2674, 2675, 1374, 2929, 1375, 1376,
	3723, 1377, 2925, 2865, 2867, 2705, 1377, 2926, 1703, 3297,
	3218, 2392, 2868, 3167, 1377, 2164, 2165, 2264, 1377, 2694,
	2695, 3628, 1374, 2381, 1375, 1376, 104, 1377, 2380, 3203,
	3204, 3205, 1377, 106, 3125, 2704, 1374, 105, 1375, 1376,
	1751, 3118, 3529, 3450, 1374, 2935, 1375, 1376, 113, 1377,
	2614, 3114, 2150, 2781, 2782, 2783, 2784, 2785, 1377, 112,
	1374, 111, 1375, 1376, 1374, 2851, 1375, 1376, 2379, 3086,
	106, 2729, 2790, 2850, 3082, 2378, 1377, 2730, 3497, 950,
	951, 2377, 2756, 2376, 2732, 3068, 2375, 1752, 1753, 1754,
	3067, 2365, 1374, 2734, 1375, 1376, 111, 2364, 3064, 2771,
	2735, 2363, 1374, 2652, 1375, 1376, 2362, 2744, 2754, 2738,
	2745, 2544, 2361, 2360, 2786, 2352, 2543, 2351, 2350, 2349,
	1374, 1377, 1375, 1376, 2348, 1374, 2347, 1375, 1376, 2755,
	2346, 2418, 3496, 2539, 3478, 1377, 1374, 113, 1375, 1376,
	3316, 1374, 2538, 1375, 1376, 3314, 3313, 2772, 112, 1374,
	111, 1375, 1376, 1374, 2774, 1375, 1376, 3306, 3214, 2751,
	2537, 3144, 1374, 3142, 1375, 1376, 2970, 1374, 2827, 1375,
	1376, 2286, 2832, 1698, 949, 112, 1377, 3305, 954, 2829,
	3133, 2775, 2776, 2593, 1374, 2778, 1375, 1376, 2780, 113,
	2092, 3287, 2092, 1374, 2795, 1375, 1376, 3710, 3709, 2884,
	112, 2573, 2801, 2793, 2470, 2536, 2139, 1602, 2787, 2788,
	2789, 1374, 1594, 1375, 1376, 117, 118, 2902, 3709, 2535,
	2794, 3710, 3515, 2796, 2797, 2798, 3178, 940, 126, 2799,
	2800, 3, 100, 2066, 2802, 2832, 2828, 2804, 2830, 1,
	2806, 2807, 2808, 2809, 3684, 2887, 2904, 2855, 2810, 2066,
	2066, 2066, 2066, 2066, 3412, 2258, 1374, 2856, 1375, 1376,
	2534, 2843, 2773, 1117, 2182, 1919, 2878, 954, 10, 1853,
	1374, 2878, 1375, 1376, 2833, 2834, 2835, 2836, 2837, 2838,
	2857, 2854, 2881, 2839, 2840, 2872, 2841, 1343, 2842, 929,
	2831, 2847, 2182, 2182, 2182, 2182, 2182, 1342, 3182, 1917,
	2869, 2870, 9, 930, 2888, 2906, 931, 2891, 2907, 3638,
	2993, 1374, 2182, 1375, 1376, 2182, 2900, 642, 2128, 2889,
	2890, 2803, 2892, 2805, 1549, 2908, 2844, 2845, 2846, 107,
	108, 2886, 1918, 2873, 3678, 8, 3634, 3635, 1795, 2816,
	2817, 2818, 2819, 2948, 2949, 2811, 2812, 2813, 2814, 2815,
	1785, 2947, 3039, 2946, 2945, 3246, 2063, 3451, 2903, 2972,
	2914, 2973, 1377, 2292, 848, 3212, 2955, 3000, 1377, 2243,
	3001, 1020, 3056, 3057, 3058, 1377, 3060, 3062, 161, 1377,
	2202, 2245, 2971, 2203, 3602, 121, 975, 2992, 120, 1023,
	3069, 1136, 3007, 2287, 1852, 3073, 3074, 3075, 3077, 3078,
	3079, 3080, 3236, 2641, 3081, 2211, 3083, 3084, 3085, 1377,
	1627, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097,
	3098, 2968, 202, 1625, 3033, 202, 3035, 3036, 3032, 3105,
	1626, 680, 3109, 3040, 3110, 3112, 686, 3115, 3117, 1377,
	3119, 3120, 3121, 3122, 1624, 3050, 2523, 202, 3128, 1629,
	3047, 3048, 2517, 3049, 3041, 1628, 3051, 3045, 3053, 2516,
	3055, 2471, 202, 2515, 3024, 3025, 3087, 3027, 3102, 3029,
	3030, 1377, 1910, 682, 2613, 3106, 676, 199, 1616, 1595,
	3100, 1062, 1377, 3150, 3151, 632, 1377, 3155, 2944, 686,
	202, 1377, 686, 2514, 2325, 1377, 638, 1374, 1425, 1375,
	1376, 1901, 2849, 1374, 2628, 1375, 1376, 969, 961, 2140,
	1374, 2564, 1375, 1376, 1374, 1377, 1375, 1376, 968, 3063,
	1377, 3428, 2883, 2513, 3126, 3127, 1377, 3137, 3129, 2861,
	3131, 2863, 2580, 3072, 1377, 2866, 2859, 3134, 3508, 3307,
	3141, 3584, 2638, 1377, 1374, 1591, 1375, 1376, 3107, 2443,
	1988, 3146, 1377, 1415, 2179, 2512, 1377, 3282, 1937, 705,
	1377, 3166, 704, 3156, 1377, 3163, 2511, 702, 2566, 2594,
	2510, 1380, 3168, 852, 1374, 2509, 1375, 1376, 1377, 2503,
	2554, 1603, 3170, 3171, 2605, 3000, 3219, 3220, 3001, 3169,
	3176, 3177, 2603, 1377, 2602, 3234, 2182, 2390, 1377, 2502,
	2187, 3161, 3157, 3193, 2501, 3195, 1374, 3630, 1375, 1376,
	2498, 2181, 3240, 3241, 2177, 3187, 3188, 1374, 2497, 1375,
	1376, 1374, 2572, 1375, 1376, 803, 1374, 2496, 1375, 1376,
	1374, 802, 1375, 1376, 714, 706, 2494, 698, 801, 800,
	2490, 3175, 2999, 3254, 2489, 3614, 3258, 2714, 2485, 3013,
	1374, 2716, 1375, 1376, 2639, 1374, 3009, 1375, 1376, 1357,
	1567, 1374, 2483, 1375, 1376, 692, 991, 3042, 3242, 1374,
	3223, 1375, 1376, 3269, 3227, 3228, 3229, 2448, 1374, 3535,
	1375, 1376, 2437, 2417, 3065, 1566, 2018, 1374, 3273, 1375,
	1376, 1374, 2019, 1375, 1376, 1374, 3542, 1375, 1376, 1374,
	3281, 1375, 1376, 2981, 3230, 3215, 2962, 2690, 3288, 2279,
	73, 48, 3503, 1374, 3259, 1375, 1376, 2606, 2609, 2610,
	2611, 2607, 3572, 2608, 2612, 799, 796, 3284, 1374, 3285,
	1375, 1376, 3286, 1374, 2823, 1375, 1376, 2824, 3239, 2606,
	2609, 2610, 2611, 2607, 3555, 2608, 2612, 3556, 795, 3159,
	3160, 3557, 2046, 3280, 1353, 3302, 1350, 3653, 3263, 1912,
	99, 38, 37, 36, 35, 34, 28, 27, 26, 25,
	24, 21, 20, 1973, 31, 23, 22, 19, 18, 1575,
	1571, 2984, 3673, 3722, 130, 57, 1971, 54, 3331, 52,
	138, 3323, 137, 55, 1572, 3303, 51, 1107, 49, 3260,
	3312, 3261, 3325, 3327, 3262, 3311, 3319, 3265, 3266, 42,
	33, 3321, 32, 17, 16, 15, 3270, 14, 2878, 1677,
	1678, 1574, 13, 1573, 12, 11, 3272, 7, 6, 41,
	40, 3442, 30, 3429, 39, 2881, 3335, 29, 4, 2881,
	3449, 2677, 44, 2281, 3332, 3333, 0, 0, 3289, 0,
	0, 3290, 0, 3291, 3292, 0, 3293, 0, 3294, 0,
	0, 3459, 3460, 3295, 3462, 0, 3463, 3464, 3424, 0,
	3426, 3467, 3468, 3469, 3425, 3471, 3474, 3472, 3473, 0,
	0, 3441, 0, 0, 0, 1973, 3446, 0, 3320, 3453,
	3445, 3483, 3485, 3486, 3488, 3490, 3491, 3493, 1971, 3328,
	3476, 0, 3330, 0, 0, 0, 0, 3271, 3433, 0,
	0, 3436, 3437, 3438, 3334, 0, 1575, 1571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3477,
	1552, 1572, 3409, 0, 0, 3523, 0, 0, 0, 3479,
	0, 0, 0, 3482, 0, 0, 3519, 0, 0, 0,
	0, 3501, 3500, 0, 3498, 3499, 1568, 1569, 1574, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3516, 0, 0, 0, 0, 0, 0, 0, 3522,
	0, 202, 0, 202, 0, 0, 202, 202, 0, 0,
	0, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2881, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 0, 0,
	3518, 0, 0, 0, 0, 3524, 0, 0, 0, 0,
	686, 0, 686, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3506, 0, 0, 0, 0,
	0, 0, 686, 202, 0, 0, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3546, 0, 3551, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 0, 3541, 0, 0, 3538, 0,
	3543, 0, 0, 3567, 0, 0, 0, 0, 0, 3568,
	3569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3534, 0,
	0, 3580, 0, 0, 0, 3561, 0, 0, 3562, 0,
	0, 3507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 3570, 0, 0, 0, 0, 0, 0, 0,
	3608, 3609, 0, 0, 0, 0, 0, 0, 0, 3586,
	3577, 0, 0, 0, 3618, 3620, 3622, 3615, 3616, 3588,
	0, 3590, 0, 3593, 3601, 3598, 3595, 3594, 3592, 3597,
	3596, 0, 0, 0, 0, 0, 2878, 0, 3453, 3603,
	0, 0, 3652, 0, 0, 0, 0, 0, 0, 0,
	3626, 3549, 0, 0, 0, 0, 0, 3629, 0, 3637,
	0, 3649, 3642, 0, 0, 3582, 0, 0, 0, 0,
	44, 3615, 3616, 1420, 3563, 3658, 0, 3564, 0, 3565,
	3656, 3669, 0, 3671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 0, 3667,
	0, 0, 3672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3695, 3697, 3699, 3690, 0,
	1428, 0, 3692, 0, 0, 0, 0, 0, 0, 1973,
	202, 0, 0, 3701, 686, 686, 3700, 0, 3707, 0,
	3705, 0, 1971, 0, 3704, 3550, 0, 0, 3703, 202,
	0, 3721, 0, 3560, 3615, 3616, 0, 0, 3718, 0,
	0, 0, 0, 3724, 0, 0, 0, 3731, 3730, 686,
	3735, 3736, 202, 3734, 0, 0, 0, 0, 0, 3650,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 202, 0, 1973, 3744, 3745, 0, 3746, 3473, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 3742, 3664,
	0, 3665, 0, 3666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 1420, 0, 0, 0, 0, 0,
	686, 686, 0, 686, 0, 686, 686, 0, 686, 686,
	686, 686, 686, 686, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 1420, 686, 1420, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 3719, 0, 3720, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 686, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 1114,
	0, 0, 1116, 1118, 1658, 1661, 1662, 1663, 1664, 1665,
	1666, 0, 1667, 1668, 1670, 1671, 1669, 1672, 1673, 1646,
	1647, 1648, 1649, 1630, 1631, 1659, 0, 1633, 0, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 0, 0,
	1643, 1650, 1651, 1652, 1653, 0, 1654, 1655, 1656, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 686, 0, 169, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 176,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 1706, 1707, 168, 167, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 1708, 165, 0, 1705, 0,
	163, 164, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 2104, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 686, 0, 0, 2104, 202, 0, 202,
	0, 202, 202, 0, 0, 3353, 3355, 3354, 3372, 3373,
	3374, 3375, 3376, 3377, 3378, 753, 686, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1874, 686, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 686, 0, 0, 0, 686, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 160, 0, 202, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 202, 202, 184,
	0, 202, 0, 202, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	3359, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 3367, 3368, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	0, 0, 0, 0, 0, 173, 178, 175, 181, 182,
	183, 185, 187, 188, 189, 190, 0, 0, 0, 0,
	0, 191, 193, 194, 195, 0, 819, 0, 732, 823,
	734, 820, 821, 0, 730, 733, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 752, 3352, 3356, 3357, 3358, 3369, 3370,
	3371, 3379, 3381, 784, 3380, 3382, 3383, 3384, 3387, 3388,
	3389, 3390, 3385, 3386, 3391, 3336, 3340, 3337, 3338, 3339,
	3351, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349,
	3350, 3392, 3393, 3394, 3395, 3396, 3397, 3362, 3366, 3365,
	3363, 3364, 3360, 3361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 825, 0,
	0, 829, 0, 0, 0, 831, 830, 0, 832, 798,
	797, 0, 0, 826, 827, 0, 828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 158, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 179, 0, 0,
	202, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 2166, 0, 0, 169, 0,
	0, 0, 0, 2170, 157, 2173, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	202, 0, 0, 176, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 1707, 168, 167, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 1708,
	165, 0, 1705, 1420, 163, 164, 0, 863, 0, 0,
	90, 0, 180, 0, 0, 0, 202, 202, 202, 202,
	202, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 2336, 0, 0,
	0, 0, 0, 202, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2386, 2387, 0, 927, 2391, 90, 202,
	0, 0, 0, 0, 0, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2397, 0, 927, 0, 0,
	686, 0, 2400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	1420, 0, 0, 686, 686, 1420, 202, 202, 202, 202,
	202, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 202, 0, 202, 0, 0, 202,
	202, 202, 0, 159, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 1420, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 202, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 2619, 0, 0, 173,
	178, 175, 181, 182, 183, 185, 187, 188, 189, 190,
	0, 0, 0, 0, 0, 191, 193, 194, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	1658, 1661, 1662, 1663, 1664, 1665, 1666, 2671, 1667, 1668,
	1670, 1671, 1669, 1672, 1673, 1646, 1647, 1648, 1649, 1630,
	1631, 1659, 0, 1633, 202, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 0, 0, 1643, 1650, 1651, 1652,
	1653, 0, 1654, 1655, 1656, 1657, 0, 0, 665, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2719, 2720, 2721, 2722, 2723, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 202,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	2739, 0, 202, 0, 202, 202, 202, 0, 0, 0,
	0, 0, 0, 0, 686, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2747, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 1177, 1177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 686, 686, 686, 1660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 927, 1417, 1422, 1423, 0, 1426, 0,
	1427, 1429, 1430, 1431, 0, 1434, 1435, 1437, 1437, 0,
	1437, 1441, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 0, 0,
	0, 0, 1508, 202, 1510, 1511, 1512, 1513, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 1441, 1441, 1441,
	1441, 1441, 1420, 0, 0, 0, 0, 686, 0, 686,
	0, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 686, 0, 0,
	0, 0, 0, 2958, 0, 1553, 0, 865, 0, 2096,
	686, 927, 866, 0, 0, 927, 0, 0, 0, 0,
	927, 0, 1972, 0, 0, 0, 0, 0, 0, 2996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 686, 686, 0, 3031, 0,
	0, 3034, 0, 0, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	3130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 202, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 1336,
	685, 685, 0, 0, 0, 0, 0, 0, 1177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	685, 0, 0, 0, 866, 3191, 0, 0, 0, 0,
	686, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	1420, 0, 686, 0, 0, 0, 0, 0, 3208, 1419,
	3209, 3210, 3211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 686, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 1177, 1177, 0, 0, 0, 0,
	0, 1419, 0, 686, 0, 686, 0, 0, 90, 0,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 1419, 1725, 0, 0, 1728, 1729, 685, 685,
	0, 685, 0, 685, 685, 0, 685, 685, 685, 685,
	685, 685, 0, 0, 0, 0, 0, 0, 0, 1419,
	1760, 1761, 1419, 685, 1419, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 685, 0, 0, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 865, 0, 0, 0,
	853, 866, 867, 868, 869, 854, 0, 0, 855, 856,
	0, 857, 0, 685, 0, 0, 0, 0, 0, 0,
	1179, 0, 1179, 1179, 0, 862, 870, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3547, 0, 0, 0,
	0, 0, 3002, 3003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 988, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 0, 0, 3005, 3006, 0, 0, 0,
	1419, 0, 0, 0, 1556, 1557, 0, 0, 0, 1981,
	0, 685, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2419, 0, 0, 0, 0, 1599,
	0, 0, 685, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 823, 0,
	820, 821, 685, 0, 0, 822, 0, 0, 0, 0,
	0, 979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 1731, 0, 1731, 0, 1731, 1731, 0, 1740, 1731,
	1731, 1731, 1731, 1731, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 685, 0, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 2527,
	0, 0, 0, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 0, 0, 2598,
	2599, 0, 2269, 2270, 2271, 0, 0, 0, 2180, 0,
	0, 927, 2618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 685, 1723,
	0, 0, 1723, 0, 1723, 0, 0, 0, 0, 0,
	2301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 98,
	685, 0, 865, 0, 685, 685, 853, 866, 867, 868,
	869, 854, 0, 0, 855, 856, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 870, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 1179, 0, 0, 0, 0, 0, 3002, 3003,
	0, 0, 0, 0, 1913, 0, 0, 0, 0, 0,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2016, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1419,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2820, 0,
	0, 3005, 3006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2152,
	0, 2180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 1179, 0, 0, 0,
	0, 805, 0, 0, 2882, 0, 90, 0, 0, 2180,
	2180, 2180, 2180, 2180, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2180,
	0, 0, 2180, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2632, 0, 0, 0, 2990, 936,
	0, 0, 0, 0, 979, 0, 0, 0, 2998, 0,
	987, 0, 0, 0, 0, 0, 955, 955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 1967, 0, 0, 0, 1967, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 685, 0, 0, 0,
	1723, 1723, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 2707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2406, 0, 0, 0, 0,
	0, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3174, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 1419, 0,
	0, 685, 685, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3296, 0, 3300, 3301, 0, 0, 0, 0,
	2567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2582, 0, 0, 2951, 0, 0, 2882, 0, 90,
	0, 2882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 1419, 0, 0, 0, 0, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 620, 0,
	620, 0, 0, 620, 620, 0, 0, 0, 0, 0,
	3434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3038, 0, 0, 0, 0, 2664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2152, 0, 0, 0, 0, 0, 0, 2691, 0,
	620, 0, 0, 0, 0, 0, 0, 2696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 0, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 0, 0, 3181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	1421, 0, 685, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	685, 685, 685, 0, 0, 2821, 0, 620, 0, 0,
	0, 0, 0, 1179, 0, 0, 0, 0, 0, 3581,
	0, 0, 0, 0, 0, 0, 936, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2858, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 1179, 0, 0, 0,
	0, 0, 0, 2885, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 0, 0, 0, 3668, 0, 0, 0,
	1419, 0, 0, 0, 0, 685, 0, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1421, 0,
	0, 1421, 0, 1421, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 1782, 0, 0, 0, 2152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 685, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 1883, 1884, 620, 620, 620, 620, 620,
	620, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 685, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3101, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 2152, 2152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	685, 3247, 3248, 3249, 3250, 0, 0, 0, 0, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 955, 0, 0, 0, 1421, 685, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	955, 1851, 955, 955, 955, 955, 955, 0, 0, 0,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 0, 3324, 0, 3326,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 685, 0, 685, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 1851, 620, 0, 620, 0, 620, 2189,
	0, 2152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3494, 0, 0, 0, 3494, 3494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2152, 0, 0, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 620, 0, 0, 620, 2152,
	2393, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3574, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 3578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3632, 0, 1421, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3101, 0, 3632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 2676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 620, 620, 620, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1421, 0, 0,
	0, 0, 1421, 620, 620, 620, 620, 620, 0, 0,
	0, 0, 0, 0, 0, 2901, 0, 0, 0, 0,
	0, 1782, 0, 620, 0, 0, 620, 2909, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 620, 620, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1421, 0, 0,
	394, 0, 0, 0, 1313, 1298, 515, 0, 1241, 1316,
	1210, 1229, 1326, 1232, 1235, 1277, 1189, 1255, 413, 1226,
	1182, 1214, 1184, 1221, 1185, 1212, 1243, 271, 1209, 1300,
	1259, 1315, 364, 268, 1191, 1215, 427, 1231, 209, 1279,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 1322, 368, 1265, 0, 494, 398,
	0, 0, 1782, 1245, 1304, 1253, 1291, 1240, 1278, 1199,
	1264, 1317, 1227, 1274, 1318, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 3604, 675, 0, 0,
	0, 0, 3605, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 1223, 1271, 1312, 1224, 1273, 266,
	321, 273, 265, 520, 1323, 1303, 1188, 1252, 1311, 0,
	0, 232, 1314, 1247, 0, 1276, 0, 1329, 1183, 1267,
	0, 1186, 1190, 1325, 1307, 1218, 276, 0, 0, 0,
	0, 0, 0, 0, 1244, 1254, 1288, 1292, 1238, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 1263, 0,
	0, 0, 1195, 1187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 1198, 0, 1217, 1289, 0, 1181, 298, 1192, 399,
	258, 1335, 0, 451, 1296, 1306, 1239, 563, 1310, 1237,
	1236, 1283, 1196, 1302, 1230, 363, 1194, 330, 204, 228,
	0, 1228, 409, 459, 471, 1301, 1213, 1222, 256, 1220,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	1262, 1281, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 1193, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 1208, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	1297, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 1286, 1328, 422, 470, 243, 542,
	493, 1331, 1332, 1333, 1334, 1203, 1207, 1201, 1268, 1202,
	1257, 1258, 1204, 1319, 1320, 1321, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 1290, 1197, 0, 1205, 1206,
	1299, 1308, 1309, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 1261, 203, 224, 366, 1324, 452, 289,
	592, 553, 547, 210, 226, 1200, 263, 1211, 1219, 0,
	1225, 1233, 1234, 1246, 1248, 1249, 1250, 1251, 1269, 1270,
	1272, 1280, 1282, 1285, 1287, 1294, 1305, 1327, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 1260, 1330, 551, 1266,
	379, 282, 305, 320, 1275, 552, 499, 230, 464, 291,
	254, 1293, 1295, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 1256, 1284, 374,
	516, 517, 316, 394, 0, 0, 0, 1313, 1298, 515,
	0, 1241, 1316, 1210, 1229, 1326, 1232, 1235, 1277, 1189,
	1255, 413, 1226, 1182, 1214, 1184, 1221, 1185, 1212, 1243,
	271, 1209, 1300, 1259, 1315, 364, 268, 1191, 1215, 427,
	1231, 209, 1279, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 1322, 368, 1265,
	0, 494, 398, 0, 0, 0, 1245, 1304, 1253, 1291,
	1240, 1278, 1199, 1264, 1317, 1227, 1274, 1318, 323, 251,
	325, 208, 410, 495, 287, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1223, 1271, 1312,
	1224, 1273, 266, 321, 273, 265, 520, 1323, 1303, 1188,
	1252, 1311, 0, 0, 232, 1314, 1247, 0, 1276, 0,
	1329, 1183, 1267, 0, 1186, 1190, 1325, 1307, 1218, 276,
	0, 0, 0, 0, 0, 0, 0, 1244, 1254, 1288,
	1292, 1238, 0, 0, 0, 0, 0, 2910, 0, 1216,
	0, 1263, 0, 0, 0, 1195, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	0, 0, 0, 0, 1198, 0, 1217, 1289, 0, 1181,
	298, 1192, 399, 258, 1335, 0, 451, 1296, 1306, 1239,
	563, 1310, 1237, 1236, 1283, 1196, 1302, 1230, 363, 1194,
	330, 204, 228, 0, 1228, 409, 459, 471, 1301, 1213,
	1222, 256, 1220, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 1262, 1281, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 1193, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	1208, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 1297, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 1286, 1328, 422,
	470, 243, 542, 493, 1331, 1332, 1333, 1334, 1203, 1207,
	1201, 1268, 1202, 1257, 1258, 1204, 1319, 1320, 1321, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 1290, 1197,
	0, 1205, 1206, 1299, 1308, 1309, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 1261, 203, 224, 366,
	1324, 452, 289, 592, 553, 547, 210, 226, 1200, 263,
	1211, 1219, 0, 1225, 1233, 1234, 1246, 1248, 1249, 1250,
	1251, 1269, 1270, 1272, 1280, 1282, 1285, 1287, 1294, 1305,
	1327, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 1260,
	1330, 551, 1266, 379, 282, 305, 320, 1275, 552, 499,
	230, 464, 291, 254, 1293, 1295, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	1256, 1284, 374, 516, 517, 316, 394, 0, 0, 0,
	1313, 1298, 515, 0, 1241, 1316, 1210, 1229, 1326, 1232,
	1235, 1277, 1189, 1255, 413, 1226, 1182, 1214, 1184, 1221,
	1185, 1212, 1243, 271, 1209, 1300, 1259, 1315, 364, 268,
	1191, 1215, 427, 1231, 209, 1279, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	1322, 368, 1265, 0, 494, 398, 0, 0, 0, 1245,
	1304, 1253, 1291, 1240, 1278, 1199, 1264, 1317, 1227, 1274,
	1318, 323, 251, 325, 208, 410, 495, 287, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 248, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	1223, 1271, 1312, 1224, 1273, 266, 321, 273, 265, 520,
	1323, 1303, 1188, 1252, 1311, 0, 0, 232, 1314, 1247,
	0, 1276, 0, 1329, 1183, 1267, 0, 1186, 1190, 1325,
	1307, 1218, 276, 0, 0, 0, 0, 0, 0, 0,
	1244, 1254, 1288, 1292, 1238, 0, 0, 0, 0, 0,
	2871, 0, 1216, 0, 1263, 0, 0, 0, 1195, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 1198, 0, 1217,
	1289, 0, 1181, 298, 1192, 399, 258, 1335, 0, 451,
	1296, 1306, 1239, 563, 1310, 1237, 1236, 1283, 1196, 1302,
	1230, 363, 1194, 330, 204, 228, 0, 1228, 409, 459,
	471, 1301, 1213, 1222, 256, 1220, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 1262, 1281, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 529, 530, 257, 594, 231, 557, 223, 1193, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	353, 354, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 1208, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 1297, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	1286, 1328, 422, 470, 243, 542, 493, 1331, 1332, 1333,
	1334, 1203, 1207, 1201, 1268, 1202, 1257, 1258, 1204, 1319,
	1320, 1321, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 1290, 1197, 0, 1205, 1206, 1299, 1308, 1309, 614,
	382, 483, 539, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	252, 214, 388, 396, 518, 312, 219, 220, 221, 511,
	512, 513, 514, 554, 555, 559, 460, 461, 462, 463,
	293, 548, 309, 466, 465, 331, 332, 377, 448, 1261,
	203, 224, 366, 1324, 452, 289, 592, 553, 547, 210,
	226, 1200, 263, 1211, 1219, 0, 1225, 1233, 1234, 1246,
	1248, 1249, 1250, 1251, 1269, 1270, 1272, 1280, 1282, 1285,
	1287, 1294, 1305, 1327, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 301, 302, 443, 444,
	314, 315, 589, 590, 300, 536, 567, 534, 588, 561,
	437, 376, 1260, 1330, 551, 1266, 379, 282, 305, 320,
	1275, 552, 499, 230, 464, 291, 254, 1293, 1295, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 1256, 1284, 374, 516, 517, 316, 394,
	0, 0, 0, 1313, 1298, 515, 0, 1241, 1316, 1210,
	1229, 1326, 1232, 1235, 1277, 1189, 1255, 413, 1226, 1182,
	1214, 1184, 1221, 1185, 1212, 1243, 271, 1209, 1300, 1259,
	1315, 364, 268, 1191, 1215, 427, 1231, 209, 1279, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 1322, 368, 1265, 0, 494, 398, 0,
	0, 0, 1245, 1304, 1253, 1291, 1240, 1278, 1199, 1264,
	1317, 1227, 1274, 1318, 323, 251, 325, 208, 410, 495,
	287, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 248,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 1223, 1271, 1312, 1224, 1273, 266, 321,
	273, 265, 520, 1323, 1303, 1188, 1252, 1311, 0, 0,
	232, 1314, 1247, 0, 1276, 0, 1329, 1183, 1267, 0,
	1186, 1190, 1325, 1307, 1218, 276, 0, 0, 0, 0,
	0, 0, 0, 1244, 1254, 1288, 1292, 1238, 0, 0,
	0, 0, 0, 2168, 0, 1216, 0, 1263, 0, 0,
	0, 1195, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	1198, 0, 1217, 1289, 0, 1181, 298, 1192, 399, 258,
	1335, 0, 451, 1296, 1306, 1239, 563, 1310, 1237, 1236,
	1283, 1196, 1302, 1230, 363, 1194, 330, 204, 228, 0,
	1228, 409, 459, 471, 1301, 1213, 1222, 256, 1220, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 1262,
	1281, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 529, 530, 257, 594, 231, 557,
	223, 1193, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 353, 354, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 1208, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 1297,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 1286, 1328, 422, 470, 243, 542, 493,
	1331, 1332, 1333, 1334, 1203, 1207, 1201, 1268, 1202, 1257,
	1258, 1204, 1319, 1320, 1321, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 1290, 1197, 0, 1205, 1206, 1299,
	1308, 1309, 614, 382, 483, 539, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 252, 214, 388, 396, 518, 312, 219,
	220, 221, 511, 512, 513, 514, 554, 555, 559, 460,
	461, 462, 463, 293, 548, 309, 466, 465, 331, 332,
	377, 448, 1261, 203, 224, 366, 1324, 452, 289, 592,
	553, 547, 210, 226, 1200, 263, 1211, 1219, 0, 1225,
	1233, 1234, 1246, 1248, 1249, 1250, 1251, 1269, 1270, 1272,
	1280, 1282, 1285, 1287, 1294, 1305, 1327, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 301,
	302, 443, 444, 314, 315, 589, 590, 300, 536, 567,
	534, 588, 561, 437, 376, 1260, 1330, 551, 1266, 379,
	282, 305, 320, 1275, 552, 499, 230, 464, 291, 254,
	1293, 1295, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 1256, 1284, 374, 516,
	517, 316, 394, 0, 0, 0, 1313, 1298, 515, 0,
	1241, 1316, 1210, 1229, 1326, 1232, 1235, 1277, 1189, 1255,
	413, 1226, 1182, 1214, 1184, 1221, 1185, 1212, 1243, 271,
	1209, 1300, 1259, 1315, 364, 268, 1191, 1215, 427, 1231,
	209, 1279, 484, 255, 375, 372, 523, 283, 274, 270,
	253, 317, 383, 425, 505, 419, 1322, 368, 1265, 0,
	494, 398, 0, 0, 0, 1245, 1304, 1253, 1291, 1240,
	1278, 1199, 1264, 1317, 1227, 1274, 1318, 323, 251, 325,
	208, 410, 495, 287, 0, 98, 0, 0, 0, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 248, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 1223, 1271, 1312, 1224,
	1273, 266, 321, 273, 265, 520, 1323, 1303, 1188, 1252,
	1311, 0, 0, 232, 1314, 1247, 0, 1276, 0, 1329,
	1183, 1267, 0, 1186, 1190, 1325, 1307, 1218, 276, 0,
	0, 0, 0, 0, 0, 0, 1244, 1254, 1288, 1292,
	1238, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	1263, 0, 0, 0, 1195, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 1198, 0, 1217, 1289, 0, 1181, 298,
	1192, 399, 258, 1335, 0, 451, 1296, 1306, 1239, 563,
	1310, 1237, 1236, 1283, 1196, 1302, 1230, 363, 1194, 330,
	204, 228, 0, 1228, 409, 459, 471, 1301, 1213, 1222,
	256, 1220, 469, 423, 540, 236, 285, 456, 429, 467,
	439, 288, 1262, 1281, 468, 370, 525, 449, 537, 564,
	565, 264, 403, 549, 509, 558, 591, 229, 261, 417,
	502, 543, 491, 395, 521, 522, 329, 490, 296, 207,
	367, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 570, 227, 477, 369, 245,
	234, 527, 546, 290, 454, 433, 434, 572, 586, 573,
	575, 576, 216, 504, 535, 242, 481, 0, 0, 593,
	250, 501, 218, 532, 500, 391, 326, 327, 217, 0,
	455, 269, 294, 0, 0, 259, 412, 529, 530, 257,
	594, 231, 557, 223, 1193, 556, 405, 524, 533, 392,
	381, 222, 531, 390, 380, 334, 353, 354, 281, 307,
	446, 373, 447, 306, 308, 401, 400, 402, 211, 544,
	0, 212, 0, 496, 545, 595, 237, 238, 240, 1208,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 445,
	441, 450, 1297, 519, 538, 550, 562, 568, 569, 571,
	577, 578, 579, 581, 587, 585, 582, 583, 584, 580,
	574, 404, 311, 492, 333, 371, 1286, 1328, 422, 470,
	243, 542, 493, 1331, 1332, 1333, 1334, 1203, 1207, 1201,
	1268, 1202, 1257, 1258, 1204, 1319, 1320, 1321, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 1290, 1197, 0,
	1205, 1206, 1299, 1308, 1309, 614, 382, 483, 539, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 252, 214, 388, 396,
	518, 312, 219, 220, 221, 511, 512, 513, 514, 554,
	555, 559, 460, 461, 462, 463, 293, 548, 309, 466,
	465, 331, 332, 377, 448, 1261, 203, 224, 366, 1324,
	452, 289, 592, 553, 547, 210, 226, 1200, 263, 1211,
	1219, 0, 1225, 1233, 1234, 1246, 1248, 1249, 1250, 1251,
	1269, 1270, 1272, 1280, 1282, 1285, 1287, 1294, 1305, 1327,
	205, 206, 213, 225, 235, 239, 246, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 435, 436, 438, 440, 442, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 485, 486,
	487, 488, 489, 497, 498, 503, 526, 528, 541, 560,
	566, 478, 301, 302, 443, 444, 314, 315, 589, 590,
	300, 536, 567, 534, 588, 561, 437, 376, 1260, 1330,
	551, 1266, 379, 282, 305, 320, 1275, 552, 499, 230,
	464, 291, 254, 1293, 1295, 215, 249, 233, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 247, 457,
	244, 482, 506, 507, 508, 510, 393, 267, 430, 1256,
	1284, 374, 516, 517, 316, 394, 0, 0, 0, 1313,
	1298, 515, 0, 1241, 1316, 1210, 1229, 1326, 1232, 1235,
	1277, 1189, 1255, 413, 1226, 1182, 1214, 1184, 1221, 1185,
	1212, 1243, 271, 1209, 1300, 1259, 1315, 364, 268, 1191,
	1215, 427, 1231, 209, 1279, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 1322,
	368, 1265, 0, 494, 398, 0, 0, 0, 1245, 1304,
	1253, 1291, 1240, 1278, 1199, 1264, 1317, 1227, 1274, 1318,
	323, 251, 325, 208, 410, 495, 287, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 248, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 1223,
	1271, 1312, 1224, 1273, 266, 321, 273, 265, 520, 1323,
	1303, 1188, 1252, 1311, 0, 0, 232, 1314, 1247, 0,
	1276, 0, 1329, 1183, 1267, 0, 1186, 1190, 1325, 1307,
	1218, 276, 0, 0, 0, 0, 0, 0, 0, 1244,
	1254, 1288, 1292, 1238, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 1263, 0, 0, 0, 1195, 1187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 1198, 0, 1217, 1289,
	0, 1181, 298, 1192, 399, 258, 1335, 0, 451, 1296,
	1306, 1239, 563, 1310, 1237, 1236, 1283, 1196, 1302, 1230,
	363, 1194, 330, 204, 228, 0, 1228, 409, 459, 471,
	1301, 1213, 1222, 256, 1220, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 1262, 1281, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 1193, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 1208, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 1297, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 1286,
	1328, 422, 470, 243, 542, 493, 1331, 1332, 1333, 1334,
	1203, 1207, 1201, 1268, 1202, 1257, 1258, 1204, 1319, 1320,
	1321, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	1290, 1197, 0, 1205, 1206, 1299, 1308, 1309, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 1261, 203,
	224, 366, 1324, 452, 289, 592, 553, 547, 210, 226,
	1200, 263, 1211, 1219, 0, 1225, 1233, 1234, 1246, 1248,
	1249, 1250, 1251, 1269, 1270, 1272, 1280, 1282, 1285, 1287,
	1294, 1305, 1327, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 1260, 1330, 551, 1266, 379, 282, 305, 320, 1275,
	552, 499, 230, 464, 291, 254, 1293, 1295, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 1256, 1284, 374, 516, 517, 316, 394, 0,
	0, 0, 1313, 1298, 515, 0, 1241, 1316, 1210, 1229,
	1326, 1232, 1235, 1277, 1189, 1255, 413, 1226, 1182, 1214,
	1184, 1221, 1185, 1212, 1243, 271, 1209, 1300, 1259, 1315,
	364, 268, 1191, 1215, 427, 1231, 209, 1279, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 1322, 368, 1265, 0, 494, 398, 0, 0,
	0, 1245, 1304, 1253, 1291, 1240, 1278, 1199, 1264, 1317,
	1227, 1274, 1318, 323, 251, 325, 208, 410, 495, 287,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1223, 1271, 1312, 1224, 1273, 266, 321, 273,
	265, 520, 1323, 1303, 1188, 1252, 1311, 0, 0, 232,
	1314, 1247, 0, 1276, 0, 1329, 1183, 1267, 0, 1186,
	1190, 1325, 1307, 1218, 276, 0, 0, 0, 0, 0,
	0, 0, 1244, 1254, 1288, 1292, 1238, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 1263, 0, 0, 0,
	1195, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 1198,
	0, 1217, 1289, 0, 1181, 298, 1192, 399, 258, 1335,
	0, 451, 1296, 1306, 1239, 563, 1310, 1237, 1236, 1283,
	1196, 1302, 1230, 363, 1194, 330, 204, 228, 0, 1228,
	409, 459, 471, 1301, 1213, 1222, 256, 1220, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 1262, 1281,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	1193, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 1208, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 1297, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 1286, 1328, 422, 470, 243, 542, 493, 1331,
	1332, 1333, 1334, 1203, 1207, 1201, 1268, 1202, 1257, 1258,
	1204, 1319, 1320, 1321, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 1290, 1197, 0, 1205, 1206, 1299, 1308,
	1309, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 1261, 203, 224, 366, 1324, 452, 289, 592, 553,
	547, 210, 226, 1200, 263, 1211, 1219, 0, 1225, 1233,
	1234, 1246, 1248, 1249, 1250, 1251, 1269, 1270, 1272, 1280,
	1282, 1285, 1287, 1294, 1305, 1327, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 300, 536, 567, 534,
	588, 561, 437, 376, 1260, 1330, 551, 1266, 379, 282,
	305, 320, 1275, 552, 499, 230, 464, 291, 254, 1293,
	1295, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 1256, 1284, 374, 516, 517,
	316, 394, 0, 0, 0, 1313, 1298, 515, 0, 1241,
	1316, 1210, 1229, 1326, 1232, 1235, 1277, 1189, 1255, 413,
	1226, 1182, 1214, 1184, 1221, 1185, 1212, 1243, 271, 1209,
	1300, 1259, 1315, 364, 268, 1191, 1215, 427, 1231, 209,
	1279, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 1322, 368, 1265, 0, 494,
	398, 0, 0, 0, 1245, 1304, 1253, 1291, 1240, 1278,
	1199, 1264, 1317, 1227, 1274, 1318, 323, 251, 325, 208,
	410, 495, 287, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 248, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 1223, 1271, 1312, 1224, 1273,
	266, 321, 273, 265, 520, 1323, 1303, 1188, 1252, 1311,
	0, 0, 232, 1314, 1247, 0, 1276, 0, 1329, 1183,
	1267, 0, 1186, 1190, 1325, 1307, 1218, 276, 0, 0,
	0, 0, 0, 0, 0, 1244, 1254, 1288, 1292, 1238,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 1263,
	0, 0, 0, 1195, 1187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 1198, 0, 1217, 1289, 0, 1181, 298, 1192,
	399, 258, 1335, 0, 451, 1296, 1306, 1239, 563, 1310,
	1237, 1236, 1283, 1196, 1302, 1230, 363, 1194, 330, 204,
	228, 0, 1228, 409, 459, 471, 1301, 1213, 1222, 256,
	1220, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 1262, 1281, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 529, 530, 257, 594,
	231, 557, 223, 1193, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 353, 354, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 1208, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 1297, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 1286, 1328, 422, 470, 243,
	542, 493, 1331, 1332, 1333, 1334, 1203, 1207, 1201, 1268,
	1202, 1257, 1258, 1204, 1319, 1320, 1321, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 1290, 1197, 0, 1205,
	1206, 1299, 1308, 1309, 614, 382, 483, 539, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 252, 214, 388, 396, 518,
	312, 219, 220, 221, 511, 512, 513, 514, 554, 555,
	559, 460, 461, 462, 463, 293, 548, 309, 466, 465,
	331, 332, 377, 448, 1261, 203, 224, 366, 1324, 452,
	289, 592, 553, 547, 210, 226, 1200, 263, 1211, 1219,
	0, 1225, 1233, 1234, 1246, 1248, 1249, 1250, 1251, 1269,
	1270, 1272, 1280, 1282, 1285, 1287, 1294, 1305, 1327, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 301, 302, 443, 444, 314, 315, 589, 590, 300,
	536, 567, 534, 588, 561, 437, 376, 1260, 1330, 551,
	1266, 379, 282, 305, 320, 1275, 552, 499, 230, 464,
	291, 254, 1293, 1295, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 1256, 1284,
	374, 516, 517, 316, 394, 0, 0, 0, 0, 0,
	515, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 715, 0, 0,
	0, 271, 720, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 209, 0, 484, 255, 375, 372, 523, 283,
	274, 270, 253, 317, 383, 425, 505, 419, 727, 368,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 723,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	251, 325, 208, 410, 495, 287, 0, 98, 0, 0,
	865, 849, 815, 816, 853, 866, 867, 868, 869, 854,
	0, 241, 855, 856, 248, 857, 0, 814, 755, 757,
	756, 774, 775, 776, 777, 778, 779, 780, 753, 862,
	870, 871, 0, 266, 321, 273, 265, 520, 0, 0,
	2048, 2049, 2050, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 697, 712, 0, 726, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 710, 0, 0,
	0, 0, 809, 0, 711, 0, 0, 719, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 0, 451, 808, 0,
	0, 563, 0, 0, 806, 0, 0, 0, 0, 363,
	0, 330, 204, 228, 0, 0, 409, 459, 471, 0,
	0, 0, 859, 0, 469, 423, 540, 236, 285, 456,
	429, 467, 439, 288, 0, 0, 468, 370, 525, 449,
	537, 564, 565, 264, 403, 549, 509, 558, 591, 229,
	261, 417, 502, 543, 491, 395, 521, 522, 329, 490,
	296, 207, 367, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 570, 227, 477,
	369, 245, 234, 527, 546, 290, 454, 433, 434, 572,
	586, 573, 575, 576, 216, 504, 535, 242, 481, 0,
	0, 593, 250, 501, 218, 532, 500, 391, 326, 327,
	217, 0, 455, 269, 294, 0, 0, 259, 412, 860,
	861, 257, 594, 761, 557, 223, 0, 556, 405, 524,
	533, 392, 381, 222, 531, 390, 380, 334, 769, 770,
	281, 307, 446, 373, 447, 306, 308, 401, 400, 402,
	211, 544, 0, 212, 0, 496, 545, 595, 237, 238,
	240, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 445, 441, 450, 0, 519, 538, 550, 562, 568,
	569, 571, 577, 578, 579, 581, 587, 585, 582, 583,
	584, 580, 574, 404, 311, 492, 333, 371, 0, 0,
	422, 470, 243, 542, 493, 0, 0, 0, 0, 819,
	807, 732, 823, 734, 820, 821, 729, 730, 733, 822,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 810,
	718, 717, 0, 725, 0, 751, 752, 754, 758, 759,
	760, 771, 772, 773, 781, 783, 784, 782, 785, 786,
	787, 790, 791, 792, 793, 788, 789, 794, 735, 739,
	736, 737, 738, 750, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 833, 834, 835, 836, 837, 838,
	764, 768, 767, 765, 766, 762, 763, 716, 203, 224,
	366, 0, 452, 289, 592, 553, 547, 210, 226, 824,
	263, 825, 0, 0, 829, 0, 0, 0, 831, 830,
	0, 832, 798, 797, 0, 0, 826, 827, 0, 828,
	0, 0, 205, 206, 213, 225, 235, 239, 246, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 435, 436, 438, 440,
	442, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	485, 486, 487, 488, 489, 497, 498, 503, 526, 528,
	541, 560, 566, 478, 839, 840, 841, 842, 843, 844,
	845, 846, 300, 536, 567, 534, 588, 561, 437, 376,
	0, 0, 551, 0, 379, 282, 305, 320, 0, 552,
	499, 230, 464, 291, 254, 864, 0, 215, 249, 233,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	247, 457, 244, 482, 506, 507, 508, 510, 393, 267,
	430, 394, 0, 374, 516, 517, 316, 515, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 715, 0, 0, 0, 271, 720,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 209,
	0, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 727, 368, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 723, 724, 0, 0,
	0, 0, 0, 0, 2197, 0, 323, 251, 325, 208,
	410, 495, 287, 0, 98, 0, 0, 865, 849, 815,
	816, 853, 866, 867, 868, 869, 854, 0, 241, 855,
	856, 248, 857, 0, 814, 755, 757, 756, 774, 775,
	776, 777, 778, 779, 780, 753, 862, 870, 871, 2198,
	266, 321, 273, 265, 520, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	697, 712, 0, 726, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 710, 0, 0, 0, 0, 809,
	0, 711, 0, 0, 719, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 0, 451, 808, 0, 0, 563, 0,
	0, 806, 0, 0, 0, 0, 363, 0, 330, 204,
	228, 0, 0, 409, 459, 471, 0, 0, 0, 859,
	0, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 0, 0, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 860, 861, 257, 594,
	761, 557, 223, 0, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 769, 770, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 0, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 0, 0, 422, 470, 243,
	542, 493, 0, 0, 0, 0, 819, 807, 732, 823,
	734, 820, 821, 729, 730, 733, 822, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 810, 718, 717, 0,
	725, 0, 751, 752, 754, 758, 759, 760, 771, 772,
	773, 781, 783, 784, 782, 785, 786, 787, 790, 791,
	792, 793, 788, 789, 794, 735, 739, 736, 737, 738,
	750, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 833, 834, 835, 836, 837, 838, 764, 768, 767,
	765, 766, 762, 763, 716, 203, 224, 366, 0, 452,
	289, 592, 553, 547, 210, 226, 824, 263, 825, 0,
	0, 829, 0, 0, 0, 831, 830, 0, 832, 798,
	797, 0, 0, 826, 827, 0, 828, 0, 0, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 839, 840, 841, 842, 843, 844, 845, 846, 300,
	536, 567, 534, 588, 561, 437, 376, 0, 0, 551,
	0, 379, 282, 305, 320, 0, 552, 499, 230, 464,
	291, 254, 864, 0, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 0, 394,
	374, 516, 517, 316, 89, 515, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 715, 0, 0, 0, 271, 720, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 209, 0, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 727, 368, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 723, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 251, 325, 208, 410, 495,
	287, 0, 98, 0, 0, 865, 849, 815, 816, 853,
	866, 867, 868, 869, 854, 0, 241, 855, 856, 248,
	857, 0, 814, 755, 757, 756, 774, 775, 776, 777,
	778, 779, 780, 753, 862, 870, 871, 0, 266, 321,
	273, 265, 520, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 697, 712,
	0, 726, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 710, 0, 0, 0, 0, 809, 0, 711,
	0, 0, 719, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 0, 451, 808, 0, 0, 563, 0, 0, 806,
	0, 0, 0, 0, 363, 0, 330, 204, 228, 0,
	0, 409, 459, 471, 0, 0, 0, 859, 0, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 0,
	0, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 860, 861, 257, 594, 761, 557,
	223, 0, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 769, 770, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 0,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 0, 0, 422, 470, 243, 542, 493,
	0, 0, 0, 0, 819, 807, 732, 823, 734, 820,
	821, 729, 730, 733, 822, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 810, 718, 717, 0, 725, 0,
	751, 752, 754, 758, 759, 760, 771, 772, 773, 781,
	783, 784, 782, 785, 786, 787, 790, 791, 792, 793,
	788, 789, 794, 735, 739, 736, 737, 738, 750, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 833,
	834, 835, 836, 837, 838, 764, 768, 767, 765, 766,
	762, 763, 716, 203, 224, 366, 97, 452, 289, 592,
	553, 547, 210, 226, 824, 263, 825, 0, 0, 829,
	0, 0, 0, 831, 830, 0, 832, 798, 797, 0,
	0, 826, 827, 0, 828, 0, 0, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 839,
	840, 841, 842, 843, 844, 845, 846, 300, 536, 567,
	534, 588, 561, 437, 376, 0, 0, 551, 0, 379,
	282, 305, 320, 0, 552, 499, 230, 464, 291, 254,
	864, 0, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 394, 0, 374, 516,
	517, 316, 515, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 715,
	0, 0, 0, 271, 720, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 209, 0, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	727, 368, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 723, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 251, 325, 208, 410, 495, 287, 0, 98,
	0, 0, 865, 849, 815, 816, 853, 866, 867, 868,
	869, 854, 0, 241, 855, 856, 248, 857, 0, 814,
	755, 757, 756, 774, 775, 776, 777, 778, 779, 780,
	753, 862, 870, 871, 0, 266, 321, 273, 265, 520,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 697, 712, 0, 726, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 710,
	0, 0, 0, 0, 809, 0, 711, 0, 0, 719,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 0, 451,
	808, 0, 0, 563, 0, 0, 806, 0, 0, 0,
	0, 363, 0, 330, 204, 228, 0, 0, 409, 459,
	471, 0, 0, 0, 859, 0, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 3591, 0, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 860, 861, 257, 594, 761, 557, 223, 0, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	769, 770, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 0, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	0, 0, 422, 470, 243, 542, 493, 0, 0, 0,
	0, 819, 807, 732, 823, 734, 820, 821, 729, 730,
	733, 822, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 810, 718, 717, 0, 725, 0, 751, 752, 754,
	758, 759, 760, 771, 772, 773, 781, 783, 784, 782,
	785, 786, 787, 790, 791, 792, 793, 788, 789, 794,
	735, 739, 736, 737, 738, 750, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 833, 834, 835, 836,
	837, 838, 764, 768, 767, 765, 766, 762, 763, 716,
	203, 224, 366, 0, 452, 289, 592, 553, 547, 210,
	226, 824, 263, 825, 0, 0, 829, 0, 0, 0,
	831, 830, 0, 832, 798, 797, 0, 0, 826, 827,
	0, 828, 0, 0, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 839, 840, 841, 842,
	843, 844, 845, 846, 300, 536, 567, 534, 588, 561,
	437, 376, 0, 0, 551, 0, 379, 282, 305, 320,
	0, 552, 499, 230, 464, 291, 254, 864, 0, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 394, 0, 374, 516, 517, 316, 515,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 715, 0, 0, 0,
	271, 720, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 727, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 723, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 98, 0, 1577, 865,
	849, 815, 816, 853, 866, 867, 868, 869, 854, 0,
	241, 855, 856, 248, 857, 0, 814, 755, 757, 756,
	774, 775, 776, 777, 778, 779, 780, 753, 862, 870,
	871, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 697, 712, 0, 726, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 710, 0, 0, 0,
	0, 809, 0, 711, 0, 0, 719, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 808, 0, 0,
	563, 0, 0, 806, 0, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 859, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 860, 861,
	257, 594, 761, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 769, 770, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 819, 807,
	732, 823, 734, 820, 821, 729, 730, 733, 822, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 810, 718,
	717, 0, 725, 0, 751, 752, 754, 758, 759, 760,
	771, 772, 773, 781, 783, 784, 782, 785, 786, 787,
	790, 791, 792, 793, 788, 789, 794, 735, 739, 736,
	737, 738, 750, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 833, 834, 835, 836, 837, 838, 764,
	768, 767, 765, 766, 762, 763, 716, 203, 224, 366,
	0, 452, 289, 592, 553, 547, 210, 226, 824, 263,
	825, 0, 0, 829, 0, 0, 0, 831, 830, 0,
	832, 798, 797, 0, 0, 826, 827, 0, 828, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 839, 840, 841, 842, 843, 844, 845,
	846, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 864, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	394, 0, 374, 516, 517, 316, 515, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 715, 0, 0, 0, 271, 720, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 727, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 723, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 98, 0, 0, 865, 849, 815, 816,
	853, 866, 867, 868, 869, 854, 0, 241, 855, 856,
	248, 857, 0, 814, 755, 757, 756, 774, 775, 776,
	777, 778, 779, 780, 753, 862, 870, 871, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 697,
	712, 0, 726, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 709, 710, 953, 0, 0, 0, 809, 0,
	711, 0, 0, 719, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 808, 0, 0, 563, 0, 0,
	806, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 859, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 860, 861, 257, 594, 761,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 769, 770, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 819, 807, 732, 823, 734,
	820, 821, 729, 730, 733, 822, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 810, 718, 717, 0, 725,
	0, 751, 752, 754, 758, 759, 760, 771, 772, 773,
	781, 783, 784, 782, 785, 786, 787, 790, 791, 792,
	793, 788, 789, 794, 735, 739, 736, 737, 738, 750,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	833, 834, 835, 836, 837, 838, 764, 768, 767, 765,
	766, 762, 763, 716, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 824, 263, 825, 0, 0,
	829, 0, 0, 0, 831, 830, 0, 832, 798, 797,
	0, 0, 826, 827, 0, 828, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	839, 840, 841, 842, 843, 844, 845, 846, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 864, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 394, 0, 374,
	516, 517, 316, 515, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	715, 0, 0, 0, 271, 720, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 209, 0, 484, 255, 375,
	372, 523, 283, 274, 270, 253, 317, 383, 425, 505,
	419, 727, 368, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 723, 724, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 251, 325, 208, 410, 495, 287, 0,
	98, 0, 0, 865, 849, 815, 816, 853, 866, 867,
	868, 869, 854, 0, 241, 855, 856, 248, 857, 0,
	814, 755, 757, 756, 774, 775, 776, 777, 778, 779,
	780, 753, 862, 870, 871, 0, 266, 321, 273, 265,
	520, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 697, 712, 0, 726,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	710, 0, 0, 0, 0, 809, 0, 711, 0, 0,
	719, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 0,
	451, 808, 0, 0, 563, 0, 0, 806, 0, 0,
	0, 0, 363, 0, 330, 204, 228, 0, 0, 409,
	459, 471, 0, 0, 0, 859, 0, 469, 423, 540,
	236, 285, 456, 429, 467, 439, 288, 0, 0, 468,
	370, 525, 449, 537, 564, 565, 264, 403, 549, 509,
	558, 591, 229, 261, 417, 502, 543, 491, 395, 521,
	522, 329, 490, 296, 207, 367, 0, 0, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 0, 0,
	570, 227, 477, 369, 245, 234, 527, 546, 290, 454,
	433, 434, 572, 586, 573, 575, 576, 216, 504, 535,
	242, 481, 0, 0, 593, 250, 501, 218, 532, 500,
	391, 326, 327, 217, 0, 455, 269, 294, 0, 0,
	259, 412, 860, 861, 257, 594, 761, 557, 223, 0,
	556, 405, 524, 533, 392, 381, 222, 531, 390, 380,
	334, 769, 770, 281, 307, 446, 373, 447, 306, 308,
	401, 400, 402, 211, 544, 0, 212, 0, 496, 545,
	595, 237, 238, 240, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 445, 441, 450, 0, 519, 538,
	550, 562, 568, 569, 571, 577, 578, 579, 581, 587,
	585, 582, 583, 584, 580, 574, 404, 311, 492, 333,
	371, 0, 0, 422, 470, 243, 542, 493, 0, 0,
	0, 0, 819, 807, 732, 823, 734, 820, 821, 729,
	730, 733, 822, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 810, 718, 717, 0, 725, 0, 751, 752,
	754, 758, 759, 760, 771, 772, 773, 781, 783, 784,
	782, 785, 786, 787, 790, 791, 792, 793, 788, 789,
	794, 735, 739, 736, 737, 738, 750, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 833, 834, 835,
	836, 837, 838, 764, 768, 767, 765, 766, 762, 763,
	716, 203, 224, 366, 0, 452, 289, 592, 553, 547,
	210, 226, 824, 263, 825, 0, 0, 829, 0, 0,
	0, 831, 830, 0, 832, 798, 797, 0, 0, 826,
	827, 0, 828, 0, 0, 205, 206, 213, 225, 235,
	239, 246, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 435,
	436, 438, 440, 442, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 485, 486, 487, 488, 489, 497, 498,
	503, 526, 528, 541, 560, 566, 478, 839, 840, 841,
	842, 843, 844, 845, 846, 300, 536, 567, 534, 588,
	561, 437, 376, 0, 0, 551, 0, 379, 282, 305,
	320, 0, 552, 499, 230, 464, 291, 254, 864, 0,
	215, 249, 233, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 247, 457, 244, 482, 506, 507, 508,
	510, 393, 267, 430, 394, 0, 374, 516, 517, 316,
	515, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 715, 0, 0,
	0, 271, 720, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 209, 0, 484, 255, 375, 372, 523, 283,
	274, 270, 253, 317, 383, 425, 505, 419, 727, 368,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 723,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	251, 325, 208, 410, 495, 287, 0, 98, 0, 0,
	865, 849, 815, 816, 853, 866, 867, 868, 869, 854,
	0, 241, 855, 856, 248, 857, 0, 814, 755, 757,
	756, 774, 775, 776, 777, 778, 779, 780, 753, 862,
	870, 871, 0, 266, 321, 273, 265, 520, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 726, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 710, 0, 0,
	0, 0, 809, 0, 711, 0, 0, 719, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 0, 451, 808, 0,
	0, 563, 0, 0, 806, 0, 0, 0, 0, 363,
	0, 330, 204, 228, 0, 0, 409, 459, 471, 0,
	0, 0, 859, 0, 469, 423, 540, 236, 285, 456,
	429, 467, 439, 288, 0, 0, 468, 370, 525, 449,
	537, 564, 565, 264, 403, 549, 509, 558, 591, 229,
	261, 417, 502, 543, 491, 395, 521, 522, 329, 490,
	296, 207, 367, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 570, 227, 477,
	369, 245, 234, 527, 546, 290, 454, 433, 434, 572,
	586, 573, 575, 576, 216, 504, 535, 242, 481, 0,
	0, 593, 250, 501, 218, 532, 500, 391, 326, 327,
	217, 0, 455, 269, 294, 0, 0, 259, 412, 860,
	861, 257, 594, 761, 557, 223, 0, 556, 405, 524,
	533, 392, 381, 222, 531, 390, 380, 334, 769, 770,
	281, 307, 446, 373, 447, 306, 308, 401, 400, 402,
	211, 544, 0, 212, 0, 496, 545, 595, 237, 238,
	240, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 445, 441, 450, 0, 519, 538, 550, 562, 568,
	569, 571, 577, 578, 579, 581, 587, 585, 582, 583,
	584, 580, 574, 404, 311, 492, 333, 371, 0, 0,
	422, 470, 243, 542, 493, 0, 0, 0, 0, 819,
	807, 732, 823, 734, 820, 821, 729, 730, 733, 822,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 810,
	718, 717, 0, 725, 0, 751, 752, 754, 758, 759,
	760, 771, 772, 773, 781, 783, 784, 782, 785, 786,
	787, 790, 791, 792, 793, 788, 789, 794, 735, 739,
	736, 737, 738, 750, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 833, 834, 835, 836, 837, 838,
	764, 768, 767, 765, 766, 762, 763, 716, 203, 224,
	366, 0, 452, 289, 592, 553, 547, 210, 226, 824,
	263, 825, 0, 0, 829, 0, 0, 0, 831, 830,
	0, 832, 798, 797, 0, 0, 826, 827, 0, 828,
	0, 0, 205, 206, 213, 225, 235, 239, 246, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 435, 436, 438, 440,
	442, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	485, 486, 487, 488, 489, 497, 498, 503, 526, 528,
	541, 560, 566, 478, 839, 840, 841, 842, 843, 844,
	845, 846, 300, 536, 567, 534, 588, 561, 437, 376,
	0, 0, 551, 0, 379, 282, 305, 320, 0, 552,
	499, 230, 464, 291, 254, 864, 0, 215, 249, 233,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	247, 457, 244, 482, 506, 507, 508, 510, 393, 267,
	430, 394, 0, 374, 516, 517, 316, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 209,
	0, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 0, 368, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 251, 325, 208,
	410, 495, 287, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 248, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 520, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 1393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1401, 1403,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 0, 451, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 204,
	228, 0, 0, 409, 459, 471, 0, 0, 0, 256,
	0, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 0, 0, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 529, 530, 257, 594,
	231, 557, 223, 0, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 353, 354, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 0, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 0, 0, 422, 470, 243,
	542, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 382, 483, 539, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 252, 214, 388, 396, 518,
	312, 219, 220, 221, 511, 512, 513, 514, 554, 555,
	559, 460, 461, 462, 463, 293, 548, 309, 466, 465,
	331, 332, 377, 448, 0, 203, 224, 366, 0, 452,
	289, 592, 553, 547, 210, 226, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 301, 302, 443, 444, 314, 315, 589, 590, 300,
	536, 567, 534, 588, 561, 437, 376, 0, 0, 551,
	0, 379, 282, 305, 320, 0, 552, 499, 230, 464,
	291, 254, 0, 0, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 394, 0,
	374, 516, 517, 316, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 209, 0, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 0, 368, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 251, 325, 208, 410, 495, 287,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 520, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	0, 451, 0, 0, 1027, 563, 0, 0, 0, 0,
	0, 1024, 1025, 363, 982, 330, 204, 228, 1018, 1022,
	409, 459, 471, 0, 0, 0, 256, 0, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 0, 0,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	0, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 0, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 0, 0, 422, 470, 243, 542, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 0, 203, 224, 366, 0, 452, 289, 592, 553,
	547, 210, 226, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 300, 536, 567, 534,
	588, 561, 437, 376, 0, 0, 551, 0, 379, 282,
	305, 320, 0, 552, 499, 230, 464, 291, 254, 0,
	0, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 394, 0, 374, 516, 517,
	316, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 209, 0, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 0,
	368, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 251, 325, 208, 410, 495, 287, 0, 0, 0,
	0, 1540, 849, 0, 0, 1537, 0, 0, 0, 0,
	1535, 0, 241, 1536, 1534, 248, 1539, 0, 814, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 520, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 0, 451, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 204, 228, 0, 0, 409, 459, 471,
	0, 0, 0, 256, 0, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 0, 0, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 0, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 0, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 0,
	0, 422, 470, 243, 542, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 0, 203,
	224, 366, 0, 452, 289, 592, 553, 547, 210, 226,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 0, 0, 551, 0, 379, 282, 305, 320, 0,
	552, 499, 230, 464, 291, 254, 0, 0, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 0, 394, 374, 516, 517, 316, 89, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 0, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 98, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 256, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 0, 203, 224, 366,
	97, 452, 289, 592, 553, 547, 210, 226, 0, 263,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 2183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 0, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	1596, 0, 374, 516, 517, 316, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 1598, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 0, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 1600, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 1374, 0, 1375, 1376, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 256, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 0, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 0, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 0, 394, 374,
	516, 517, 316, 89, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 209, 0, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 0, 368, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 251, 325, 208, 410, 495, 287,
	0, 98, 0, 1577, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 520, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	0, 451, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 204, 228, 0, 0,
	409, 459, 471, 0, 0, 0, 256, 0, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 0, 0,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	0, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 0, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 0, 0, 422, 470, 243, 542, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 0, 203, 224, 366, 97, 452, 289, 592, 553,
	547, 210, 226, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 300, 536, 567, 534,
	588, 561, 437, 376, 0, 0, 551, 0, 379, 282,
	305, 320, 0, 552, 499, 230, 464, 291, 254, 0,
	0, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 394, 0, 374, 516, 517,
	316, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 209, 0, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 0,
	368, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 251, 325, 208, 410, 495, 287, 0, 98, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 248, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 520, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 0, 451, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 204, 228, 0, 0, 409, 459, 471,
	0, 0, 0, 256, 0, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 0, 0, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 0, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 0, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 0,
	0, 422, 470, 243, 542, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 0, 203,
	224, 366, 0, 452, 289, 592, 553, 547, 210, 226,
	0, 263, 0, 0, 0, 0, 0, 0, 2184, 0,
	0, 2183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 0, 0, 551, 0, 379, 282, 305, 320, 0,
	552, 499, 230, 464, 291, 254, 0, 0, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 394, 0, 374, 516, 517, 316, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 2135, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	209, 0, 484, 255, 375, 372, 523, 283, 274, 270,
	253, 317, 383, 425, 505, 419, 0, 368, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 251, 325,
	208, 410, 495, 287, 0, 0, 0, 0, 1783, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 248, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 520, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 0, 451, 0, 0, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	204, 228, 0, 0, 409, 459, 471, 0, 0, 0,
	256, 0, 469, 423, 540, 236, 285, 456, 429, 467,
	439, 288, 0, 2133, 468, 370, 525, 449, 537, 564,
	565, 264, 403, 549, 509, 558, 591, 229, 261, 417,
	502, 543, 491, 395, 521, 522, 329, 490, 296, 207,
	367, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 570, 227, 477, 369, 245,
	234, 527, 546, 290, 454, 433, 434, 572, 586, 573,
	575, 576, 216, 504, 535, 242, 481, 0, 0, 593,
	250, 501, 218, 532, 500, 391, 326, 327, 217, 0,
	455, 269, 294, 0, 0, 259, 412, 529, 530, 257,
	594, 231, 557, 223, 0, 556, 405, 524, 533, 392,
	381, 222, 531, 390, 380, 334, 353, 354, 281, 307,
	446, 373, 447, 306, 308, 401, 400, 402, 211, 544,
	0, 212, 0, 496, 545, 595, 237, 238, 240, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 445,
	441, 450, 0, 519, 538, 550, 562, 568, 569, 571,
	577, 578, 579, 581, 587, 585, 582, 583, 584, 580,
	574, 404, 311, 492, 333, 371, 0, 0, 422, 470,
	243, 542, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 382, 483, 539, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 252, 214, 388, 396,
	518, 312, 219, 220, 221, 511, 512, 513, 514, 554,
	555, 559, 460, 461, 462, 463, 293, 548, 309, 466,
	465, 331, 332, 377, 448, 0, 203, 224, 366, 0,
	452, 289, 592, 553, 547, 210, 226, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 213, 225, 235, 239, 246, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 435, 436, 438, 440, 442, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 485, 486,
	487, 488, 489, 497, 498, 503, 526, 528, 541, 560,
	566, 478, 301, 302, 443, 444, 314, 315, 589, 590,
	300, 536, 567, 534, 588, 561, 437, 376, 0, 0,
	551, 0, 379, 282, 305, 320, 0, 552, 499, 230,
	464, 291, 254, 0, 0, 215, 249, 233, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 247, 457,
	244, 482, 506, 507, 508, 510, 393, 267, 430, 394,
	0, 374, 516, 517, 316, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 209, 0, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 0, 368, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 251, 325, 208, 410, 495,
	287, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 248,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 520, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 0, 451, 0, 0, 0, 563, 0, 0, 0,
	0, 0, 0, 0, 363, 982, 330, 204, 228, 980,
	0, 409, 459, 471, 0, 0, 0, 256, 0, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 0,
	0, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 529, 530, 257, 594, 231, 557,
	223, 0, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 353, 354, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 0,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 0, 0, 422, 470, 243, 542, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 614, 382, 483, 539, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 252, 214, 388, 396, 518, 312, 219,
	220, 221, 511, 512, 513, 514, 554, 555, 559, 460,
	461, 462, 463, 293, 548, 309, 466, 465, 331, 332,
	377, 448, 0, 203, 224, 366, 0, 452, 289, 592,
	553, 547, 210, 226, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 301,
	302, 443, 444, 314, 315, 589, 590, 300, 536, 567,
	534, 588, 561, 437, 376, 0, 0, 551, 0, 379,
	282, 305, 320, 0, 552, 499, 230, 464, 291, 254,
	0, 0, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 394, 0, 374, 516,
	517, 316, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 2135, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 209, 0, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	0, 368, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 251, 325, 208, 410, 495, 287, 0, 0,
	0, 0, 1783, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 248, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 520,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 0, 451,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 204, 228, 0, 0, 409, 459,
	471, 0, 0, 0, 256, 0, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 0, 0, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 529, 530, 257, 594, 231, 557, 223, 0, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	353, 354, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 0, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	0, 0, 422, 470, 243, 542, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	382, 483, 539, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	252, 214, 388, 396, 518, 312, 219, 220, 221, 511,
	512, 513, 514, 554, 555, 559, 460, 461, 462, 463,
	293, 548, 309, 466, 465, 331, 332, 377, 448, 0,
	203, 224, 366, 0, 452, 289, 592, 553, 547, 210,
	226, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 301, 302, 443, 444,
	314, 315, 589, 590, 300, 536, 567, 534, 588, 561,
	437, 376, 0, 0, 551, 0, 379, 282, 305, 320,
	0, 552, 499, 230, 464, 291, 254, 0, 0, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 394, 0, 374, 516, 517, 316, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 0, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 0, 0, 1577, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 0, 0, 0,
	563, 0, 0, 0, 3495, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 256, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 0, 203, 224, 366,
	0, 452, 289, 592, 553, 547, 210, 226, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 0, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	394, 0, 374, 516, 517, 316, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 0, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 1968, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 256, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 0, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 0, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 394, 0, 374,
	516, 517, 316, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 209, 0, 484, 255, 375,
	372, 523, 283, 274, 270, 253, 317, 383, 425, 505,
	419, 0, 368, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 251, 325, 208, 410, 495, 287, 0,
	0, 0, 0, 2583, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 248, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	520, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 0,
	451, 0, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 204, 228, 0, 0, 409,
	459, 471, 0, 0, 0, 256, 0, 469, 423, 540,
	236, 285, 456, 429, 467, 439, 288, 0, 0, 468,
	370, 525, 449, 537, 564, 565, 264, 403, 549, 509,
	558, 591, 229, 261, 417, 502, 543, 491, 395, 521,
	522, 329, 490, 296, 207, 367, 0, 0, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 0, 0,
	570, 227, 477, 369, 245, 234, 527, 546, 290, 454,
	433, 434, 572, 586, 573, 575, 576, 216, 504, 535,
	242, 481, 0, 0, 593, 250, 501, 218, 532, 500,
	391, 326, 327, 217, 0, 455, 269, 294, 0, 0,
	259, 412, 529, 530, 257, 594, 231, 557, 223, 0,
	556, 405, 524, 533, 392, 381, 222, 531, 390, 380,
	334, 353, 354, 281, 307, 446, 373, 447, 306, 308,
	401, 400, 402, 211, 544, 0, 212, 0, 496, 545,
	595, 237, 238, 240, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 445, 441, 450, 0, 519, 538,
	550, 562, 568, 569, 571, 577, 578, 579, 581, 587,
	585, 582, 583, 584, 580, 574, 404, 311, 492, 333,
	371, 0, 0, 422, 470, 243, 542, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 382, 483, 539, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 252, 214, 388, 396, 518, 312, 219, 220, 221,
	511, 512, 513, 514, 554, 555, 559, 460, 461, 462,
	463, 293, 548, 309, 466, 465, 331, 332, 377, 448,
	0, 203, 224, 366, 0, 452, 289, 592, 553, 547,
	210, 226, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 206, 213, 225, 235,
	239, 246, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 435,
	436, 438, 440, 442, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 485, 486, 487, 488, 489, 497, 498,
	503, 526, 528, 541, 560, 566, 478, 301, 302, 443,
	444, 314, 315, 589, 590, 300, 536, 567, 534, 588,
	561, 437, 376, 0, 0, 551, 0, 379, 282, 305,
	320, 0, 552, 499, 230, 464, 291, 254, 0, 0,
	215, 249, 233, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 247, 457, 244, 482, 506, 507, 508,
	510, 393, 267, 430, 394, 0, 374, 516, 517, 316,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 209, 0, 484, 255, 375, 372, 523, 283,
	274, 270, 253, 317, 383, 425, 505, 419, 0, 368,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	251, 325, 208, 410, 495, 287, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 0, 2568, 0, 0, 0,
	0, 241, 0, 0, 248, 2569, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 520, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 0, 451, 0, 0,
	0, 563, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 204, 228, 0, 0, 409, 459, 471, 0,
	0, 0, 256, 0, 469, 423, 540, 236, 285, 456,
	429, 467, 439, 288, 0, 0, 468, 370, 525, 449,
	537, 564, 565, 264, 403, 549, 509, 558, 591, 229,
	261, 417, 502, 543, 491, 395, 521, 522, 329, 490,
	296, 207, 367, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 570, 227, 477,
	369, 245, 234, 527, 546, 290, 454, 433, 434, 572,
	586, 573, 575, 576, 216, 504, 535, 242, 481, 0,
	0, 593, 250, 501, 218, 532, 500, 391, 326, 327,
	217, 0, 455, 269, 294, 0, 0, 259, 412, 529,
	530, 257, 594, 231, 557, 223, 0, 556, 405, 524,
	533, 392, 381, 222, 531, 390, 380, 334, 353, 354,
	281, 307, 446, 373, 447, 306, 308, 401, 400, 402,
	211, 544, 0, 212, 0, 496, 545, 595, 237, 238,
	240, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 445, 441, 450, 0, 519, 538, 550, 562, 568,
	569, 571, 577, 578, 579, 581, 587, 585, 582, 583,
	584, 580, 574, 404, 311, 492, 333, 371, 0, 0,
	422, 470, 243, 542, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 382, 483,
	539, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 252, 214,
	388, 396, 518, 312, 219, 220, 221, 511, 512, 513,
	514, 554, 555, 559, 460, 461, 462, 463, 293, 548,
	309, 466, 465, 331, 332, 377, 448, 0, 203, 224,
	366, 0, 452, 289, 592, 553, 547, 210, 226, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 206, 213, 225, 235, 239, 246, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 435, 436, 438, 440,
	442, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	485, 486, 487, 488, 489, 497, 498, 503, 526, 528,
	541, 560, 566, 478, 301, 302, 443, 444, 314, 315,
	589, 590, 300, 536, 567, 534, 588, 561, 437, 376,
	0, 0, 551, 0, 379, 282, 305, 320, 0, 552,
	499, 230, 464, 291, 254, 0, 0, 215, 249, 233,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	247, 457, 244, 482, 506, 507, 508, 510, 393, 267,
	430, 394, 0, 374, 516, 517, 316, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 1619,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 209,
	0, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 0, 368, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 251, 325, 208,
	410, 495, 287, 0, 0, 0, 0, 1618, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 248, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 520, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 0, 451, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 204,
	228, 0, 0, 409, 459, 471, 0, 0, 0, 256,
	0, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 0, 0, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 529, 530, 257, 594,
	231, 557, 223, 0, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 353, 354, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 0, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 0, 0, 422, 470, 243,
	542, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 382, 483, 539, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 252, 214, 388, 396, 518,
	312, 219, 220, 221, 511, 512, 513, 514, 554, 555,
	559, 460, 461, 462, 463, 293, 548, 309, 466, 465,
	331, 332, 377, 448, 0, 203, 224, 366, 0, 452,
	289, 592, 553, 547, 210, 226, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 301, 302, 443, 444, 314, 315, 589, 590, 300,
	536, 567, 534, 588, 561, 437, 376, 0, 0, 551,
	0, 379, 282, 305, 320, 0, 552, 499, 230, 464,
	291, 254, 0, 0, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 394, 0,
	374, 516, 517, 316, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 209, 0, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 0, 368, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 251, 325, 208, 410, 495, 287,
	0, 0, 0, 0, 0, 677, 678, 679, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 520, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	0, 451, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 204, 228, 0, 0,
	409, 459, 471, 0, 0, 0, 256, 0, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 0, 0,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	0, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 0, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 0, 0, 422, 470, 243, 542, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 0, 203, 224, 366, 0, 452, 289, 592, 553,
	547, 210, 226, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 300, 536, 567, 534,
	588, 561, 437, 376, 0, 0, 551, 0, 379, 282,
	305, 320, 0, 552, 499, 230, 464, 291, 254, 0,
	0, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 394, 0, 374, 516, 517,
	316, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 209, 0, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 0,
	368, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 251, 325, 208, 410, 495, 287, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 248, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 520, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 0, 451, 0,
	0, 0, 563, 0, 0, 0, 3625, 0, 0, 0,
	363, 0, 330, 204, 228, 0, 0, 409, 459, 471,
	0, 0, 0, 256, 0, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 0, 0, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 0, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 0, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 0,
	0, 422, 470, 243, 542, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 0, 203,
	224, 366, 0, 452, 289, 592, 553, 547, 210, 226,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 0, 0, 551, 0, 379, 282, 305, 320, 0,
	552, 499, 230, 464, 291, 254, 0, 0, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 394, 0, 374, 516, 517, 316, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	209, 0, 484, 255, 375, 372, 523, 283, 274, 270,
	253, 317, 383, 425, 505, 419, 0, 368, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 251, 325,
	208, 410, 495, 287, 0, 0, 0, 0, 1783, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 248, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 520, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 0, 451, 0, 0, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	204, 228, 0, 0, 409, 459, 471, 0, 0, 0,
	256, 0, 469, 423, 540, 236, 285, 456, 429, 467,
	439, 288, 0, 0, 468, 370, 525, 449, 537, 564,
	565, 264, 403, 549, 509, 558, 591, 229, 261, 417,
	502, 543, 491, 395, 521, 522, 329, 490, 296, 207,
	367, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 570, 227, 477, 369, 245,
	234, 527, 546, 290, 454, 433, 434, 572, 586, 573,
	575, 576, 216, 504, 535, 242, 481, 0, 0, 593,
	250, 501, 218, 532, 500, 391, 326, 327, 217, 0,
	455, 269, 294, 0, 0, 259, 412, 529, 530, 257,
	594, 231, 557, 223, 0, 556, 405, 524, 533, 392,
	381, 222, 531, 390, 380, 334, 353, 354, 281, 307,
	446, 373, 447, 306, 308, 401, 400, 402, 211, 544,
	0, 212, 0, 496, 545, 595, 237, 238, 240, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 445,
	441, 450, 0, 519, 538, 550, 562, 568, 569, 571,
	577, 578, 579, 581, 587, 585, 582, 583, 584, 580,
	574, 404, 311, 492, 333, 371, 0, 0, 422, 470,
	243, 542, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 382, 483, 539, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 252, 214, 388, 396,
	518, 312, 219, 220, 221, 511, 512, 513, 514, 554,
	555, 559, 460, 461, 462, 463, 293, 548, 309, 466,
	465, 331, 332, 377, 448, 0, 203, 224, 366, 0,
	452, 289, 592, 553, 547, 210, 226, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 213, 225, 235, 239, 246, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 435, 436, 438, 440, 442, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 485, 486,
	487, 488, 489, 497, 498, 503, 526, 528, 541, 560,
	566, 478, 301, 302, 443, 444, 314, 315, 589, 590,
	300, 536, 567, 534, 588, 561, 437, 376, 0, 0,
	551, 0, 379, 282, 305, 320, 0, 552, 499, 230,
	464, 291, 254, 0, 0, 215, 249, 233, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 247, 457,
	244, 482, 506, 507, 508, 510, 393, 267, 430, 394,
	0, 374, 516, 517, 316, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 209, 0, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 0, 368, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 251, 325, 208, 410, 495,
	287, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 248,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 520, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 0, 451, 0, 0, 0, 563, 0, 0, 0,
	3495, 0, 0, 0, 363, 0, 330, 204, 228, 0,
	0, 409, 459, 471, 0, 0, 0, 256, 0, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 0,
	0, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 529, 530, 257, 594, 231, 557,
	223, 0, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 353, 354, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 0,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 0, 0, 422, 470, 243, 542, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 614, 382, 483, 539, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 252, 214, 388, 396, 518, 312, 219,
	220, 221, 511, 512, 513, 514, 554, 555, 559, 460,
	461, 462, 463, 293, 548, 309, 466, 465, 331, 332,
	377, 448, 0, 203, 224, 366, 0, 452, 289, 592,
	553, 547, 210, 226, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 301,
	302, 443, 444, 314, 315, 589, 590, 300, 536, 567,
	534, 588, 561, 437, 376, 0, 0, 551, 0, 379,
	282, 305, 320, 0, 552, 499, 230, 464, 291, 254,
	0, 0, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 394, 0, 374, 516,
	517, 316, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 209, 0, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	0, 368, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 251, 325, 208, 410, 495, 287, 0, 98,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 248, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 520,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 0, 451,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 204, 228, 0, 0, 409, 459,
	471, 0, 0, 0, 256, 0, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 0, 0, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 529, 530, 257, 594, 231, 557, 223, 0, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	353, 354, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 0, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	0, 0, 422, 470, 243, 542, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	382, 483, 539, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	252, 214, 388, 396, 518, 312, 219, 220, 221, 511,
	512, 513, 514, 554, 555, 559, 460, 461, 462, 463,
	293, 548, 309, 466, 465, 331, 332, 377, 448, 0,
	203, 224, 366, 0, 452, 289, 592, 553, 547, 210,
	226, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 301, 302, 443, 444,
	314, 315, 589, 590, 300, 536, 567, 534, 588, 561,
	437, 376, 0, 0, 551, 0, 379, 282, 305, 320,
	0, 552, 499, 230, 464, 291, 254, 0, 0, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 394, 0, 374, 516, 517, 316, 515,
	0, 0, 0, 0, 2185, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 0, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 256, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 0, 203, 224, 366,
	0, 452, 289, 592, 553, 547, 210, 226, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 0, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	394, 0, 374, 516, 517, 316, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 0, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 1600, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 256, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 0, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 0, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 394, 0, 374,
	516, 517, 316, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 209, 0, 484, 255, 375,
	372, 523, 283, 274, 270, 253, 317, 383, 425, 505,
	419, 0, 368, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 251, 325, 208, 410, 495, 287, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 248, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	520, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 0,
	451, 0, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 204, 228, 0, 0, 409,
	459, 471, 0, 0, 0, 256, 0, 469, 423, 540,
	236, 285, 456, 429, 467, 439, 288, 0, 0, 468,
	370, 525, 449, 537, 564, 565, 264, 403, 549, 509,
	558, 591, 229, 261, 417, 502, 543, 491, 395, 521,
	522, 329, 490, 296, 207, 367, 0, 0, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 0, 0,
	570, 227, 477, 369, 245, 234, 527, 546, 290, 454,
	433, 434, 572, 586, 573, 575, 576, 216, 504, 535,
	242, 481, 0, 0, 593, 250, 501, 218, 532, 500,
	391, 326, 327, 217, 0, 455, 269, 294, 0, 0,
	259, 412, 529, 530, 257, 594, 231, 557, 223, 0,
	556, 405, 524, 533, 392, 381, 222, 531, 390, 380,
	334, 353, 354, 281, 307, 446, 373, 447, 306, 308,
	401, 400, 402, 211, 544, 0, 212, 0, 496, 545,
	595, 237, 238, 240, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 445, 441, 450, 0, 519, 538,
	550, 562, 568, 569, 571, 577, 578, 579, 581, 587,
	585, 582, 583, 584, 580, 574, 404, 311, 492, 333,
	371, 0, 0, 422, 470, 243, 542, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 382, 483, 539, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 252, 214, 388, 396, 518, 312, 219, 220, 221,
	511, 512, 513, 514, 554, 555, 559, 460, 461, 462,
	463, 293, 548, 309, 466, 465, 331, 332, 377, 448,
	0, 203, 224, 366, 1923, 452, 289, 592, 553, 547,
	210, 226, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 206, 213, 225, 235,
	239, 246, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 435,
	436, 438, 440, 442, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 485, 486, 487, 488, 489, 497, 498,
	503, 526, 528, 541, 560, 566, 478, 301, 302, 443,
	444, 314, 315, 589, 590, 300, 536, 567, 534, 588,
	561, 437, 376, 0, 0, 551, 0, 379, 282, 305,
	320, 0, 552, 499, 230, 464, 291, 254, 0, 0,
	215, 249, 233, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 247, 457, 244, 482, 506, 507, 508,
	510, 393, 267, 430, 394, 0, 374, 516, 517, 316,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 209, 0, 484, 255, 375, 372, 523, 283,
	274, 270, 253, 317, 383, 425, 505, 419, 0, 368,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	251, 325, 208, 410, 495, 287, 0, 0, 0, 0,
	1914, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 248, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 520, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 0, 451, 0, 0,
	0, 563, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 204, 228, 0, 0, 409, 459, 471, 0,
	0, 0, 256, 0, 469, 423, 540, 236, 285, 456,
	429, 467, 439, 288, 0, 0, 468, 370, 525, 449,
	537, 564, 565, 264, 403, 549, 509, 558, 591, 229,
	261, 417, 502, 543, 491, 395, 521, 522, 329, 490,
	296, 207, 367, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 570, 227, 477,
	369, 245, 234, 527, 546, 290, 454, 433, 434, 572,
	586, 573, 575, 576, 216, 504, 535, 242, 481, 0,
	0, 593, 250, 501, 218, 532, 500, 391, 326, 327,
	217, 0, 455, 269, 294, 0, 0, 259, 412, 529,
	530, 257, 594, 231, 557, 223, 0, 556, 405, 524,
	533, 392, 381, 222, 531, 390, 380, 334, 353, 354,
	281, 307, 446, 373, 447, 306, 308, 401, 400, 402,
	211, 544, 0, 212, 0, 496, 545, 595, 237, 238,
	240, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 445, 441, 450, 0, 519, 538, 550, 562, 568,
	569, 571, 577, 578, 579, 581, 587, 585, 582, 583,
	584, 580, 574, 404, 311, 492, 333, 371, 0, 0,
	422, 470, 243, 542, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 382, 483,
	539, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 252, 214,
	388, 396, 518, 312, 219, 220, 221, 511, 512, 513,
	514, 554, 555, 559, 460, 461, 462, 463, 293, 548,
	309, 466, 465, 331, 332, 377, 448, 0, 203, 224,
	366, 0, 452, 289, 592, 553, 547, 210, 226, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 206, 213, 225, 235, 239, 246, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 435, 436, 438, 440,
	442, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	485, 486, 487, 488, 489, 497, 498, 503, 526, 528,
	541, 560, 566, 478, 301, 302, 443, 444, 314, 315,
	589, 590, 300, 536, 567, 534, 588, 561, 437, 376,
	0, 0, 551, 0, 379, 282, 305, 320, 0, 552,
	499, 230, 464, 291, 254, 0, 0, 215, 249, 233,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	247, 457, 244, 482, 506, 507, 508, 510, 393, 267,
	430, 394, 0, 374, 516, 517, 316, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1750, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 209,
	0, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 0, 368, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 251, 325, 208,
	410, 495, 287, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 248, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 520, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 0, 451, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 204,
	228, 0, 0, 409, 459, 471, 0, 0, 0, 256,
	0, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 0, 0, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 529, 530, 257, 594,
	231, 557, 223, 0, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 353, 354, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 0, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 0, 0, 422, 470, 243,
	542, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 382, 483, 539, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 252, 214, 388, 396, 518,
	312, 219, 220, 221, 511, 512, 513, 514, 554, 555,
	559, 460, 461, 462, 463, 293, 548, 309, 466, 465,
	331, 332, 377, 448, 0, 203, 224, 366, 0, 452,
	289, 592, 553, 547, 210, 226, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 301, 302, 443, 444, 314, 315, 589, 590, 300,
	536, 567, 534, 588, 561, 437, 376, 0, 0, 551,
	0, 379, 282, 305, 320, 0, 552, 499, 230, 464,
	291, 254, 0, 0, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 394, 0,
	374, 516, 517, 316, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 1748, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 209, 0, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 0, 368, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 251, 325, 208, 410, 495, 287,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 520, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	0, 451, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 204, 228, 0, 0,
	409, 459, 471, 0, 0, 0, 256, 0, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 0, 0,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	0, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 0, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 0, 0, 422, 470, 243, 542, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 0, 203, 224, 366, 0, 452, 289, 592, 553,
	547, 210, 226, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 300, 536, 567, 534,
	588, 561, 437, 376, 0, 0, 551, 0, 379, 282,
	305, 320, 0, 552, 499, 230, 464, 291, 254, 0,
	0, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 394, 0, 374, 516, 517,
	316, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1746, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 209, 0, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 0,
	368, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 251, 325, 208, 410, 495, 287, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 248, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 520, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 0, 451, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 204, 228, 0, 0, 409, 459, 471,
	0, 0, 0, 256, 0, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 0, 0, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 0, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 0, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 0,
	0, 422, 470, 243, 542, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 0, 203,
	224, 366, 0, 452, 289, 592, 553, 547, 210, 226,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 0, 0, 551, 0, 379, 282, 305, 320, 0,
	552, 499, 230, 464, 291, 254, 0, 0, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 394, 0, 374, 516, 517, 316, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 1744, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	209, 0, 484, 255, 375, 372, 523, 283, 274, 270,
	253, 317, 383, 425, 505, 419, 0, 368, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 251, 325,
	208, 410, 495, 287, 0, 0, 0, 0, 0, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 248, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 520, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 0, 451, 0, 0, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	204, 228, 0, 0, 409, 459, 471, 0, 0, 0,
	256, 0, 469, 423, 540, 236, 285, 456, 429, 467,
	439, 288, 0, 0, 468, 370, 525, 449, 537, 564,
	565, 264, 403, 549, 509, 558, 591, 229, 261, 417,
	502, 543, 491, 395, 521, 522, 329, 490, 296, 207,
	367, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 570, 227, 477, 369, 245,
	234, 527, 546, 290, 454, 433, 434, 572, 586, 573,
	575, 576, 216, 504, 535, 242, 481, 0, 0, 593,
	250, 501, 218, 532, 500, 391, 326, 327, 217, 0,
	455, 269, 294, 0, 0, 259, 412, 529, 530, 257,
	594, 231, 557, 223, 0, 556, 405, 524, 533, 392,
	381, 222, 531, 390, 380, 334, 353, 354, 281, 307,
	446, 373, 447, 306, 308, 401, 400, 402, 211, 544,
	0, 212, 0, 496, 545, 595, 237, 238, 240, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 445,
	441, 450, 0, 519, 538, 550, 562, 568, 569, 571,
	577, 578, 579, 581, 587, 585, 582, 583, 584, 580,
	574, 404, 311, 492, 333, 371, 0, 0, 422, 470,
	243, 542, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 382, 483, 539, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 252, 214, 388, 396,
	518, 312, 219, 220, 221, 511, 512, 513, 514, 554,
	555, 559, 460, 461, 462, 463, 293, 548, 309, 466,
	465, 331, 332, 377, 448, 0, 203, 224, 366, 0,
	452, 289, 592, 553, 547, 210, 226, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 213, 225, 235, 239, 246, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 435, 436, 438, 440, 442, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 485, 486,
	487, 488, 489, 497, 498, 503, 526, 528, 541, 560,
	566, 478, 301, 302, 443, 444, 314, 315, 589, 590,
	300, 536, 567, 534, 588, 561, 437, 376, 0, 0,
	551, 0, 379, 282, 305, 320, 0, 552, 499, 230,
	464, 291, 254, 0, 0, 215, 249, 233, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 247, 457,
	244, 482, 506, 507, 508, 510, 393, 267, 430, 394,
	0, 374, 516, 517, 316, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 1742,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 209, 0, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 0, 368, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 251, 325, 208, 410, 495,
	287, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 248,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 520, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 0, 451, 0, 0, 0, 563, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 204, 228, 0,
	0, 409, 459, 471, 0, 0, 0, 256, 0, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 0,
	0, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 529, 530, 257, 594, 231, 557,
	223, 0, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 353, 354, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 0,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 0, 0, 422, 470, 243, 542, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 614, 382, 483, 539, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 252, 214, 388, 396, 518, 312, 219,
	220, 221, 511, 512, 513, 514, 554, 555, 559, 460,
	461, 462, 463, 293, 548, 309, 466, 465, 331, 332,
	377, 448, 0, 203, 224, 366, 0, 452, 289, 592,
	553, 547, 210, 226, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 301,
	302, 443, 444, 314, 315, 589, 590, 300, 536, 567,
	534, 588, 561, 437, 376, 0, 0, 551, 0, 379,
	282, 305, 320, 0, 552, 499, 230, 464, 291, 254,
	0, 0, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 394, 0, 374, 516,
	517, 316, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 1738, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 209, 0, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	0, 368, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 251, 325, 208, 410, 495, 287, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 248, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 520,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 0, 451,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 204, 228, 0, 0, 409, 459,
	471, 0, 0, 0, 256, 0, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 0, 0, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 529, 530, 257, 594, 231, 557, 223, 0, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	353, 354, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 0, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	0, 0, 422, 470, 243, 542, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	382, 483, 539, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	252, 214, 388, 396, 518, 312, 219, 220, 221, 511,
	512, 513, 514, 554, 555, 559, 460, 461, 462, 463,
	293, 548, 309, 466, 465, 331, 332, 377, 448, 0,
	203, 224, 366, 0, 452, 289, 592, 553, 547, 210,
	226, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 301, 302, 443, 444,
	314, 315, 589, 590, 300, 536, 567, 534, 588, 561,
	437, 376, 0, 0, 551, 0, 379, 282, 305, 320,
	0, 552, 499, 230, 464, 291, 254, 0, 0, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 394, 0, 374, 516, 517, 316, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1736, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 0, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 256, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 0, 203, 224, 366,
	0, 452, 289, 592, 553, 547, 210, 226, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 0, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	394, 0, 374, 516, 517, 316, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1734, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 0, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 256, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 0, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 0, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 394, 0, 374,
	516, 517, 316, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 209, 0, 484, 255, 375,
	372, 523, 283, 274, 270, 253, 317, 383, 425, 505,
	419, 0, 368, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 251, 325, 208, 410, 495, 287, 0,
	1709, 0, 0, 0, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 248, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	520, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 0,
	451, 0, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 204, 228, 0, 0, 409,
	459, 471, 0, 0, 0, 256, 0, 469, 423, 540,
	236, 285, 456, 429, 467, 439, 288, 0, 0, 468,
	370, 525, 449, 537, 564, 565, 264, 403, 549, 509,
	558, 591, 229, 261, 417, 502, 543, 491, 395, 521,
	522, 329, 490, 296, 207, 367, 0, 0, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 0, 0,
	570, 227, 477, 369, 245, 234, 527, 546, 290, 454,
	433, 434, 572, 586, 573, 575, 576, 216, 504, 535,
	242, 481, 0, 0, 593, 250, 501, 218, 532, 500,
	391, 326, 327, 217, 0, 455, 269, 294, 0, 0,
	259, 412, 529, 530, 257, 594, 231, 557, 223, 0,
	556, 405, 524, 533, 392, 381, 222, 531, 390, 380,
	334, 353, 354, 281, 307, 446, 373, 447, 306, 308,
	401, 400, 402, 211, 544, 0, 212, 0, 496, 545,
	595, 237, 238, 240, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 445, 441, 450, 0, 519, 538,
	550, 562, 568, 569, 571, 577, 578, 579, 581, 587,
	585, 582, 583, 584, 580, 574, 404, 311, 492, 333,
	371, 0, 0, 422, 470, 243, 542, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 382, 483, 539, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 252, 214, 388, 396, 518, 312, 219, 220, 221,
	511, 512, 513, 514, 554, 555, 559, 460, 461, 462,
	463, 293, 548, 309, 466, 465, 331, 332, 377, 448,
	0, 203, 224, 366, 0, 452, 289, 592, 553, 547,
	210, 226, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 206, 213, 225, 235,
	239, 246, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 435,
	436, 438, 440, 442, 453, 458, 472, 473, 474, 475,
	476, 479, 480, 485, 486, 487, 488, 489, 497, 498,
	503, 526, 528, 541, 560, 566, 478, 301, 302, 443,
	444, 314, 315, 589, 590, 300, 536, 567, 534, 588,
	561, 437, 376, 0, 0, 551, 0, 379, 282, 305,
	320, 0, 552, 499, 230, 464, 291, 254, 0, 0,
	215, 249, 233, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 247, 457, 244, 482, 506, 507, 508,
	510, 393, 267, 430, 394, 0, 374, 516, 517, 316,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	1604, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 209, 0, 484, 255, 375, 372, 523, 283,
	274, 270, 253, 317, 383, 425, 505, 419, 0, 368,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	251, 325, 208, 410, 495, 287, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 248, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 520, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 0, 451, 0, 0,
	0, 563, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 204, 228, 0, 0, 409, 459, 471, 0,
	0, 0, 256, 0, 469, 423, 540, 236, 285, 456,
	429, 467, 439, 288, 0, 0, 468, 370, 525, 449,
	537, 564, 565, 264, 403, 549, 509, 558, 591, 229,
	261, 417, 502, 543, 491, 395, 521, 522, 329, 490,
	296, 207, 367, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 570, 227, 477,
	369, 245, 234, 527, 546, 290, 454, 433, 434, 572,
	586, 573, 575, 576, 216, 504, 535, 242, 481, 0,
	0, 593, 250, 501, 218, 532, 500, 391, 326, 327,
	217, 0, 455, 269, 294, 0, 0, 259, 412, 529,
	530, 257, 594, 231, 557, 223, 0, 556, 405, 524,
	533, 392, 381, 222, 531, 390, 380, 334, 353, 354,
	281, 307, 446, 373, 447, 306, 308, 401, 400, 402,
	211, 544, 0, 212, 0, 496, 545, 595, 237, 238,
	240, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 445, 441, 450, 0, 519, 538, 550, 562, 568,
	569, 571, 577, 578, 579, 581, 587, 585, 582, 583,
	584, 580, 574, 404, 311, 492, 333, 371, 0, 0,
	422, 470, 243, 542, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 382, 483,
	539, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 252, 214,
	388, 396, 518, 312, 219, 220, 221, 511, 512, 513,
	514, 554, 555, 559, 460, 461, 462, 463, 293, 548,
	309, 466, 465, 331, 332, 377, 448, 0, 203, 224,
	366, 0, 452, 289, 592, 553, 547, 210, 226, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 206, 213, 225, 235, 239, 246, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 435, 436, 438, 440,
	442, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	485, 486, 487, 488, 489, 497, 498, 503, 526, 528,
	541, 560, 566, 478, 301, 302, 443, 444, 314, 315,
	589, 590, 300, 536, 567, 534, 588, 561, 437, 376,
	0, 0, 551, 0, 379, 282, 305, 320, 0, 552,
	499, 230, 464, 291, 254, 0, 0, 215, 249, 233,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	247, 457, 244, 482, 506, 507, 508, 510, 393, 267,
	430, 394, 0, 374, 516, 517, 316, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 209,
	0, 484, 255, 375, 372, 523, 283, 274, 270, 253,
	317, 383, 425, 505, 419, 0, 368, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 251, 325, 208,
	410, 495, 287, 0, 98, 0, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 248, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 520, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 0, 451, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 204,
	228, 0, 0, 409, 459, 471, 0, 0, 0, 256,
	0, 469, 423, 540, 236, 285, 456, 429, 467, 439,
	288, 0, 0, 468, 370, 525, 449, 537, 564, 565,
	264, 403, 549, 509, 558, 591, 229, 261, 417, 502,
	543, 491, 395, 521, 522, 329, 490, 296, 207, 367,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 570, 227, 477, 369, 245, 234,
	527, 546, 290, 454, 433, 434, 572, 586, 573, 575,
	576, 216, 504, 535, 242, 481, 0, 0, 593, 250,
	501, 218, 532, 500, 391, 326, 327, 217, 0, 455,
	269, 294, 0, 0, 259, 412, 529, 530, 257, 594,
	231, 557, 223, 0, 556, 405, 524, 533, 392, 381,
	222, 531, 390, 380, 334, 353, 354, 281, 307, 446,
	373, 447, 306, 308, 401, 400, 402, 211, 544, 0,
	212, 0, 496, 545, 595, 237, 238, 240, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 445, 441,
	450, 0, 519, 538, 550, 562, 568, 569, 571, 577,
	578, 579, 581, 587, 585, 582, 583, 584, 580, 574,
	404, 311, 492, 333, 371, 0, 0, 422, 470, 243,
	542, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 614, 382, 483, 539, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 252, 214, 388, 396, 518,
	312, 219, 220, 221, 511, 512, 513, 514, 554, 555,
	559, 460, 461, 462, 463, 293, 548, 309, 466, 465,
	331, 332, 377, 448, 0, 203, 224, 366, 0, 452,
	289, 592, 553, 547, 210, 226, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 213, 225, 235, 239, 246, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 435, 436, 438, 440, 442, 453, 458,
	472, 473, 474, 475, 476, 479, 480, 485, 486, 487,
	488, 489, 497, 498, 503, 526, 528, 541, 560, 566,
	478, 301, 302, 443, 444, 314, 315, 589, 590, 300,
	536, 567, 534, 588, 561, 437, 376, 0, 0, 551,
	0, 379, 282, 305, 320, 0, 552, 499, 230, 464,
	291, 254, 0, 0, 215, 249, 233, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 247, 457, 244,
	482, 506, 507, 508, 510, 393, 267, 430, 394, 0,
	374, 516, 517, 316, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 209, 0, 484, 255,
	375, 372, 523, 283, 274, 270, 253, 317, 383, 425,
	505, 419, 0, 368, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 251, 325, 208, 410, 495, 287,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 248, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 520, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 298, 0, 399, 258, 0,
	0, 451, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 204, 228, 0, 0,
	409, 459, 471, 0, 0, 0, 256, 0, 469, 423,
	540, 236, 285, 456, 429, 467, 439, 288, 0, 0,
	468, 370, 525, 449, 537, 564, 565, 264, 403, 549,
	509, 558, 591, 229, 261, 417, 502, 543, 491, 395,
	521, 522, 329, 490, 296, 207, 367, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 570, 227, 477, 369, 245, 234, 527, 546, 290,
	454, 433, 434, 572, 586, 573, 575, 576, 216, 504,
	535, 242, 481, 0, 0, 593, 250, 501, 218, 532,
	500, 391, 326, 327, 217, 0, 455, 269, 294, 0,
	0, 259, 412, 529, 530, 257, 594, 231, 557, 223,
	0, 556, 405, 524, 533, 392, 381, 222, 531, 390,
	380, 334, 353, 354, 281, 307, 446, 373, 447, 306,
	308, 401, 400, 402, 211, 544, 0, 212, 0, 496,
	545, 595, 237, 238, 240, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 445, 441, 450, 0, 519,
	538, 550, 562, 568, 569, 571, 577, 578, 579, 581,
	587, 585, 582, 583, 584, 580, 574, 404, 311, 492,
	333, 371, 0, 0, 422, 470, 243, 542, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 382, 483, 539, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 252, 214, 388, 396, 518, 312, 219, 220,
	221, 511, 512, 513, 514, 554, 555, 559, 460, 461,
	462, 463, 293, 548, 309, 466, 465, 331, 332, 377,
	448, 0, 203, 224, 366, 0, 452, 289, 592, 553,
	547, 210, 226, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 213, 225,
	235, 239, 246, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	435, 436, 438, 440, 442, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 485, 486, 487, 488, 489, 497,
	498, 503, 526, 528, 541, 560, 566, 478, 301, 302,
	443, 444, 314, 315, 589, 590, 1351, 536, 567, 534,
	588, 561, 437, 376, 0, 0, 551, 0, 379, 282,
	305, 320, 0, 552, 499, 230, 464, 291, 254, 0,
	0, 215, 249, 233, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 247, 457, 244, 482, 506, 507,
	508, 510, 393, 267, 430, 394, 0, 374, 516, 517,
	316, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 209, 0, 484, 255, 375, 372, 523,
	283, 274, 270, 253, 317, 383, 425, 505, 419, 0,
	368, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 251, 325, 208, 410, 495, 287, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 248, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 520, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 0, 451, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 204, 228, 0, 0, 409, 459, 471,
	0, 0, 0, 256, 0, 469, 423, 540, 236, 285,
	456, 429, 467, 439, 288, 0, 0, 468, 370, 525,
	449, 537, 564, 565, 264, 403, 549, 509, 558, 591,
	229, 261, 417, 502, 543, 491, 395, 521, 522, 329,
	490, 296, 207, 367, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 0, 0, 570, 227,
	477, 369, 245, 234, 527, 546, 290, 454, 433, 434,
	572, 586, 573, 575, 576, 216, 504, 535, 242, 481,
	0, 0, 593, 250, 501, 218, 532, 500, 391, 326,
	327, 217, 0, 455, 269, 294, 0, 0, 259, 412,
	529, 530, 257, 594, 231, 557, 223, 0, 556, 405,
	524, 533, 392, 381, 222, 531, 390, 380, 334, 353,
	354, 281, 307, 446, 373, 447, 306, 308, 401, 400,
	402, 211, 544, 0, 212, 0, 496, 545, 595, 237,
	238, 240, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 445, 441, 450, 0, 519, 538, 550, 562,
	568, 569, 571, 577, 578, 579, 581, 587, 585, 582,
	583, 584, 580, 574, 404, 311, 492, 333, 371, 0,
	0, 422, 470, 243, 542, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 614, 382,
	483, 539, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 252,
	214, 388, 396, 518, 312, 219, 220, 221, 511, 512,
	513, 514, 554, 555, 559, 460, 461, 462, 463, 293,
	548, 309, 466, 465, 331, 332, 377, 448, 0, 203,
	224, 366, 0, 452, 289, 592, 553, 547, 210, 226,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 934,
	0, 0, 0, 205, 206, 213, 225, 235, 239, 246,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 435, 436, 438,
	440, 442, 453, 458, 472, 473, 474, 475, 476, 479,
	480, 485, 486, 487, 488, 489, 497, 498, 503, 526,
	528, 541, 560, 566, 478, 301, 302, 443, 444, 314,
	315, 589, 590, 300, 536, 567, 534, 588, 561, 437,
	376, 0, 0, 551, 0, 379, 282, 305, 320, 0,
	552, 499, 230, 464, 291, 254, 0, 0, 215, 249,
	233, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 247, 457, 244, 482, 506, 507, 508, 510, 393,
	267, 430, 394, 0, 374, 516, 517, 316, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	209, 0, 484, 255, 375, 372, 523, 283, 274, 270,
	253, 317, 383, 425, 505, 419, 0, 368, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 251, 325,
	208, 410, 495, 287, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 248, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 520, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 0, 451, 0, 618, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	204, 228, 0, 0, 409, 459, 471, 0, 0, 0,
	256, 0, 469, 423, 540, 236, 285, 456, 429, 467,
	439, 288, 0, 0, 468, 370, 525, 449, 537, 564,
	565, 264, 403, 549, 509, 558, 591, 229, 261, 417,
	502, 543, 491, 395, 521, 522, 329, 490, 296, 207,
	367, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 570, 227, 477, 369, 245,
	234, 527, 546, 290, 454, 433, 434, 572, 586, 573,
	575, 576, 216, 504, 535, 242, 481, 0, 0, 593,
	250, 501, 218, 532, 500, 391, 326, 327, 217, 0,
	455, 269, 294, 0, 0, 259, 412, 529, 530, 257,
	594, 231, 557, 223, 0, 556, 405, 524, 533, 392,
	381, 222, 531, 390, 380, 334, 353, 354, 281, 307,
	446, 373, 447, 306, 308, 401, 400, 402, 211, 544,
	0, 212, 0, 496, 545, 595, 237, 238, 240, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 445,
	441, 450, 0, 519, 538, 550, 562, 568, 569, 571,
	577, 578, 579, 581, 587, 585, 582, 583, 584, 580,
	574, 404, 311, 492, 333, 371, 0, 0, 422, 470,
	243, 542, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 382, 483, 539, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 252, 214, 388, 396,
	518, 312, 219, 220, 221, 511, 512, 513, 514, 554,
	555, 559, 460, 461, 462, 463, 293, 548, 309, 466,
	465, 331, 332, 377, 448, 0, 203, 224, 366, 0,
	452, 289, 592, 553, 547, 210, 226, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 213, 225, 235, 239, 246, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 435, 436, 438, 440, 442, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 485, 486,
	487, 488, 489, 497, 498, 503, 526, 528, 541, 560,
	566, 478, 301, 302, 443, 444, 314, 315, 589, 590,
	300, 536, 567, 534, 588, 561, 437, 376, 0, 0,
	551, 0, 379, 282, 305, 320, 0, 552, 499, 230,
	464, 291, 254, 0, 0, 215, 249, 233, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 247, 457,
	244, 482, 506, 507, 508, 510, 393, 267, 430, 394,
	0, 374, 516, 517, 316, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 209, 0, 484,
	255, 375, 372, 523, 283, 274, 270, 253, 317, 383,
	425, 505, 419, 0, 368, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 251, 325, 208, 410, 495,
	287, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 248,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 520, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 0, 451, 0, 0, 0, 563, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 204, 228, 0,
	0, 409, 459, 471, 0, 0, 0, 256, 0, 469,
	423, 540, 236, 285, 456, 429, 467, 439, 288, 0,
	0, 468, 370, 525, 449, 537, 564, 565, 264, 403,
	549, 509, 558, 591, 229, 261, 417, 502, 543, 491,
	395, 521, 522, 329, 490, 296, 207, 367, 0, 0,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	0, 0, 570, 227, 477, 369, 245, 234, 527, 546,
	290, 454, 433, 434, 572, 586, 573, 575, 576, 216,
	504, 535, 242, 481, 0, 0, 593, 250, 501, 218,
	532, 500, 391, 326, 327, 217, 0, 455, 269, 294,
	0, 0, 259, 412, 529, 530, 257, 594, 231, 557,
	223, 0, 556, 405, 524, 533, 392, 381, 222, 531,
	390, 380, 334, 353, 354, 281, 307, 446, 373, 447,
	306, 308, 401, 400, 402, 211, 544, 0, 212, 0,
	496, 545, 595, 237, 238, 240, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 445, 441, 450, 0,
	519, 538, 550, 562, 568, 569, 571, 577, 578, 579,
	581, 587, 585, 582, 583, 584, 580, 574, 404, 311,
	492, 333, 371, 0, 0, 422, 470, 243, 542, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 614, 382, 483, 539, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 252, 214, 388, 396, 518, 312, 219,
	220, 221, 511, 512, 513, 514, 554, 555, 559, 460,
	461, 462, 463, 293, 548, 309, 466, 465, 331, 332,
	377, 448, 0, 203, 224, 366, 0, 452, 289, 592,
	553, 547, 210, 226, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 206, 213,
	225, 235, 239, 246, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 3633,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 435, 436, 438, 440, 442, 453, 458, 472, 473,
	474, 475, 476, 479, 480, 485, 486, 487, 488, 489,
	497, 498, 503, 526, 528, 541, 560, 566, 478, 301,
	302, 443, 444, 314, 315, 589, 590, 300, 536, 567,
	534, 588, 561, 437, 376, 0, 0, 551, 0, 379,
	282, 305, 320, 0, 552, 499, 230, 464, 291, 254,
	0, 0, 215, 249, 233, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 247, 457, 244, 482, 506,
	507, 508, 510, 393, 267, 430, 394, 0, 374, 516,
	517, 316, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 209, 0, 484, 255, 375, 372,
	523, 283, 274, 270, 253, 317, 383, 425, 505, 419,
	0, 368, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 251, 325, 208, 410, 495, 287, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 248, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 520,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 0, 451,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 204, 228, 0, 0, 409, 459,
	471, 0, 0, 0, 256, 0, 469, 423, 540, 236,
	285, 456, 429, 467, 439, 288, 0, 0, 468, 370,
	525, 449, 537, 564, 565, 264, 403, 549, 509, 558,
	591, 229, 261, 417, 502, 543, 491, 395, 521, 522,
	329, 490, 296, 207, 367, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 570,
	227, 477, 369, 245, 234, 527, 546, 290, 454, 433,
	434, 572, 586, 573, 575, 576, 216, 504, 535, 242,
	481, 0, 0, 593, 250, 501, 218, 532, 500, 391,
	326, 327, 217, 0, 455, 269, 294, 0, 0, 259,
	412, 529, 530, 257, 594, 231, 557, 223, 0, 556,
	405, 524, 533, 392, 381, 222, 531, 390, 380, 334,
	353, 354, 281, 307, 446, 373, 447, 306, 308, 401,
	400, 402, 211, 544, 0, 212, 0, 496, 545, 595,
	237, 238, 240, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 445, 441, 450, 0, 519, 538, 550,
	562, 568, 569, 571, 577, 578, 579, 581, 587, 585,
	582, 583, 584, 580, 574, 404, 311, 492, 333, 371,
	0, 0, 422, 470, 243, 542, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	382, 483, 539, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	252, 214, 388, 396, 518, 312, 219, 220, 221, 511,
	512, 513, 514, 554, 555, 559, 460, 461, 462, 463,
	293, 548, 309, 466, 465, 331, 332, 377, 448, 0,
	203, 224, 366, 0, 452, 289, 592, 553, 547, 210,
	226, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 206, 213, 225, 235, 239,
	246, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 435, 436,
	438, 440, 442, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 485, 486, 487, 488, 489, 497, 498, 503,
	526, 528, 541, 560, 566, 478, 301, 302, 443, 444,
	314, 315, 589, 590, 300, 536, 567, 534, 588, 561,
	437, 376, 0, 0, 551, 0, 379, 282, 305, 320,
	0, 552, 499, 230, 464, 291, 254, 0, 0, 215,
	249, 233, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 247, 457, 244, 482, 506, 507, 508, 510,
	393, 267, 430, 394, 0, 374, 516, 517, 316, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 209, 0, 484, 255, 375, 372, 523, 283, 274,
	270, 253, 317, 383, 425, 505, 419, 0, 368, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 251,
	325, 208, 410, 495, 287, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 248, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 520, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 0, 451, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 204, 228, 0, 0, 409, 459, 471, 0, 0,
	0, 256, 0, 469, 423, 540, 236, 285, 456, 429,
	467, 439, 288, 0, 0, 468, 370, 525, 449, 537,
	564, 565, 264, 403, 549, 509, 558, 591, 229, 261,
	417, 502, 543, 491, 395, 521, 522, 329, 490, 296,
	207, 367, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 0, 0, 570, 227, 477, 369,
	245, 234, 527, 546, 290, 454, 433, 434, 572, 586,
	573, 575, 576, 216, 504, 535, 242, 481, 0, 0,
	593, 250, 501, 218, 532, 500, 391, 326, 327, 217,
	0, 455, 269, 294, 0, 0, 259, 412, 529, 530,
	257, 594, 231, 557, 223, 0, 556, 405, 524, 533,
	392, 381, 222, 531, 390, 380, 334, 353, 354, 281,
	307, 446, 373, 447, 306, 308, 401, 400, 402, 211,
	544, 0, 212, 0, 496, 545, 595, 237, 238, 240,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	445, 441, 450, 0, 519, 538, 550, 562, 568, 569,
	571, 577, 578, 579, 581, 587, 585, 582, 583, 584,
	580, 574, 404, 311, 492, 333, 371, 0, 0, 422,
	470, 243, 542, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 382, 483, 539,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 252, 214, 388,
	396, 518, 312, 219, 220, 221, 511, 512, 513, 514,
	554, 555, 559, 460, 461, 462, 463, 293, 548, 309,
	466, 465, 331, 332, 377, 448, 0, 203, 224, 366,
	0, 452, 289, 592, 553, 547, 210, 226, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 206, 213, 225, 235, 239, 246, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 435, 436, 438, 440, 442,
	453, 458, 472, 473, 474, 475, 476, 479, 480, 485,
	486, 487, 488, 489, 497, 498, 503, 526, 528, 541,
	560, 566, 478, 301, 302, 443, 444, 314, 315, 589,
	590, 300, 536, 567, 534, 588, 561, 437, 376, 0,
	0, 551, 0, 379, 282, 305, 320, 0, 552, 499,
	230, 464, 291, 254, 0, 0, 215, 249, 233, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 247,
	457, 244, 482, 506, 507, 508, 510, 393, 267, 430,
	394, 0, 374, 516, 517, 316, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 209, 0,
	484, 255, 375, 372, 523, 283, 274, 270, 253, 317,
	383, 425, 505, 419, 0, 368, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 251, 325, 208, 410,
	495, 287, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	248, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 520, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 0, 451, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 204, 228,
	0, 0, 409, 459, 471, 0, 0, 0, 256, 0,
	469, 423, 540, 236, 285, 456, 429, 467, 439, 288,
	0, 0, 468, 370, 525, 449, 537, 564, 565, 264,
	403, 549, 509, 558, 591, 229, 261, 417, 502, 543,
	491, 395, 521, 522, 329, 490, 296, 207, 367, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 570, 227, 477, 369, 245, 234, 527,
	546, 290, 454, 433, 434, 572, 586, 573, 575, 576,
	216, 504, 535, 242, 481, 0, 0, 593, 250, 501,
	218, 532, 500, 391, 326, 327, 217, 0, 455, 269,
	294, 0, 0, 259, 412, 529, 530, 257, 594, 231,
	557, 223, 0, 556, 405, 524, 533, 392, 381, 222,
	531, 390, 380, 334, 353, 354, 281, 307, 446, 373,
	447, 306, 308, 401, 400, 402, 211, 544, 0, 212,
	0, 496, 545, 595, 237, 238, 240, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 445, 441, 450,
	0, 519, 538, 550, 562, 568, 569, 571, 577, 578,
	579, 581, 587, 585, 582, 583, 584, 580, 574, 404,
	311, 492, 333, 371, 0, 0, 422, 470, 243, 542,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 382, 483, 539, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 252, 214, 388, 396, 518, 312,
	219, 220, 221, 511, 512, 513, 514, 554, 555, 559,
	460, 461, 462, 463, 293, 548, 309, 466, 465, 331,
	332, 377, 448, 0, 203, 224, 366, 0, 452, 289,
	592, 553, 547, 210, 226, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	213, 225, 235, 239, 246, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 435, 436, 438, 440, 442, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 485, 486, 487, 488,
	489, 497, 498, 503, 526, 528, 541, 560, 566, 478,
	301, 302, 443, 444, 314, 315, 589, 590, 300, 536,
	567, 534, 588, 561, 437, 376, 0, 0, 551, 0,
	379, 282, 305, 320, 0, 552, 499, 230, 464, 291,
	254, 0, 0, 215, 249, 233, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 247, 457, 244, 482,
	506, 507, 508, 510, 393, 267, 430, 0, 0, 374,
	516, 517, 316,
}

var yyPact = [...]int{
	-1000, -1000, 418, -1000, -494, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2403, 2440, -1000, -1000, -1000, -1000, 2602,
	-1000, 1012, 2082, 294, 2356, 317, -1000, 50406, 653, -1000,
	47658, 651, 650, 131, -112, 207, 32544, -1000, 224, -1000,
	198, 49032, 219, -1000, -1000, -1000, -1000, -348, 20863, 2259,
	82, 72, 50406, -1000, -1000, -1000, -1000, 2581, 2062, -1000,
	407, -1000, -1000, -1000, -1000, -1000, -1000, 46971, -1000, 1069,
	-1000, -1000, 2357, 2326, 2614, 798, 2332, -1000, 2475, 2062,
	-1000, 20863, 2554, 2455, 20176, 20176, 592, -1000, -1000, 384,
	-1000, -1000, -1000, 2619, 27735, 50406, -1000, 35292, 581, 530,
	-1000, 2356, -1000, -1000, -1000, 118, -1000, 466, 1982, -1000,
	1981, -1000, 1084, 1223, 496, 587, 572, 494, 489, 484,
	479, 476, 472, 471, 464, 504, -1000, 825, 825, -155,
	-159, 704, 590, 552, 552, 1009, 617, 2294, 2284, -1000,
	-1000, 825, 825, 825, 436, 825, 825, 825, 825, 415,
	412, 825, 825, 825, 825, 825, 825, 825, 825, 825,
	825, 825, 825, 825, 825, 825, 825, 825, 691, 2356,
	376, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50406, 276, 50406, -1000,
	726, 50406, 50406, -1000, 1239, 1232, -1000, -1000, 983, -1000,
	-1000, 983, 108, 983, 983, 983, 983, 242, 791, 56,
	-1000, 226, 394, 377, 369, 952, 290, -1000, -1000, 338,
	952, 964, 952, 1797, 1795, -1000, 805, 362, 192, -1000,
	983, 983, 983, -1000, -1000, 13968, 147, 13968, 13968, -1000,
	2340, -1000, -1000, -1000, -1000, -1000, 1269, -1000, -1000, -1000,
	-1000, -34, 615, -1000, -1000, -1000, -1000, 49032, 46284, 288,
	-1000, -1000, 73, -1000, -1000, 1864, 1092, 20863, 1769, -1000,
	1774, 773, -1000, -1000, -1000, -1000, -1000, 688, -1000, 21550,
	21550, 21550, 21550, -1000, -1000, 1496, 45597, 1496, 1496, 21550,
	1496, -1000, 21550, 1496, 1496, 1496, 20863, 1496, 1496, 1496,
	1496, -1000, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	-1000, -1000, -1000, -1000, 1496, 721, 1496, 1496, 1496, 1496,
	1496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1496,
	1496, 1496, 1496, 1496, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23611, 1495,
	1494, 1486, -1000, 18115, 1496, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 50406, -1000, 1496, 245, 49032,
	49032, 500, 2475, 2062, -1000, 2581, 2529, 407, 3292, 1960,
	1476, 1383, 2062, 1953, 50406, -1000, 2001, -1000, -1000, -1000,
	-1000, 2189, 1341, 1790, -1000, -1000, -1000, -1000, 2257, 20863,
	-1000, -1000, 2597, -1000, 24986, 720, 2592, 44910, -1000, 592,
	592, 1979, 473, 43, -1000, -1000, -1000, -1000, 866, 31857,
	-1000, -1000, -1000, -1000, -1000, 1840, 50406, -1000, -1000, 5246,
	1251, -1000, 2080, -1000, 3155, 1827, -1000, 2029, 20863, 2079,
	887, 2081, 646, 1251, 641, 637, 602, -1000, -45, -1000,
	-1000, -1000, -1000, -1000, -1000, 825, 825, 825, -1000, 478,
	2553, 317, 4852, -1000, -1000, -1000, 44223, 2075, 1251, -1000,
	2074, -1000, 947, 668, 741, 741, 1251, -1000, -1000, 49719,
	1251, 941, 938, 1251, 1251, 49032, 49032, -1000, 43536, -1000,
	42849, 42162, 1231, 49032, 41475, 40788, 40101, 39414, 38727, -1000,
	2408, -1000, 2049, -1000, -1000, -1000, 49719, 1251, 1251, 49719,
	49032, 49719, 50406, 1251, -1000, -1000, 397, -1000, -1000, 1229,
	1216, 1215, 825, 825, 1214, 1787, 1785, 1781, 825, 825,
	1213, 1776, 33918, 1772, 320, 1210, 1196, 1195, 1237, 1770,
	194, 1768, 1209, 1203, 1194, 49032, 2072, 50406, -1000, 325,
	837, 944, 980, 732, 861, 2356, 2255, 1977, 613, 645,
	1251, 577, 577, 49032, -1000, 16047, -1000, 635, -1000, -1000,
	-1000, -1000, 1763, 20863, -1000, 960, 952, 952, -1000, -1000,
	-1000, -1000, -1000, -1000, 983, 50406, 960, -1000, -1000, -1000,
	952, 983, 50406, 983, 983, 983, 983, 952, 952, 952,
	983, 50406, 50406, 50406, 50406, 50406, 50406, 50406, 50406, 50406,
	13968, 805, 983, 983, -355, 983, 229, -366, -1000, 1760,
	-1000, -1000, 2190, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13968, 13968, -1000, -1000,
	-1000, -1000, -1000, 1975, -1000, 193, 61, 217, -1000, 38040,
	385, 854, -1000, 385, -1000, -1000, -1000, 1970, 37353, -1000,
	-387, -388, -398, -407, -1000, -1000, -1000, -1000, -410, -415,
	-1000, -1000, -1000, 20863, 20863, 20863, 20863, -193, -1000, 1154,
	21550, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 142, 926,
	21550, 21550, 21550, 21550, 21550, 21550, 21550, 21550, 21550, 21550,
	21550, 21550, 21550, 21550, 21550, -1000, -1000, 29796, 6169, 6169,
	773, 773, 773, 773, -1000, -115, 1967, 49719, -1000, -1000,
	-1000, 717, 20863, 20863, 773, -1000, 1251, 18115, 22237, 20176,
	20176, 20863, 872, 1092, 49719, 20863, -1000, 1383, -1000, -1000,
	-1000, 1110, -1000, 1119, 2301, 2301, 2301, 2301, 20863, 20863,
	20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 2301, 49032,
	49032, 934, 20863, 20863, 20863, 20863, 20863, 20863, 16740, 20863,
	20863, 21550, 20863, 20863, 20863, 1383, 20863, 20863, 20863, 20863,
	20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863,
	20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863,
	20863, 20863, 20863, 1383, 20863, 1147, 20863, 20863, 20176, 15354,
	20176, 20176, 20176, 20176, 20176, -1000, -1000, -1000, -1000, -1000,
	20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, 1383, 20863,
	20863, 20863, 20863, 20863, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1488, 1477, 1401, 20863, -1000, 1965,
	-1000, -130, 27048, 20863, 1758, 1754, 2591, 2120, 49032, -1000,
	-1000, -1000, 2475, -1000, 2475, 1488, 2192, 20176, -1000, -1000,
	3155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1824,
	-1000, 50406, 1953, 2426, 49032, 2185, 1747, 424, -1000, 20863,
	20863, 1952, -1000, 1817, 50406, -1000, -193, -1000, 36666, -1000,
	-1000, 13275, 50406, 446, 50406, -1000, 26361, 35979, 237, -1000,
	43, 1914, -1000, 20, 51, 17427, 733, -1000, -1000, -1000,
	704, 22924, 1843, 733, 146, -1000, -1000, -1000, 2029, -1000,
	2029, 2029, 2029, 2029, 424, 424, 424, 424, -1000, -1000,
	-1000, -1000, -1000, 2069, 2066, -1000, 2029, 2029, 2029, 2029,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2064, 2064, 2064,
	2048, 2048, 2034, 2034, 546, -1000, 20863, -1000, -1000, 425,
	35292, 2387, 1193, 2166, 293, 2390, 325, 581, 2117, 1251,
	1251, 1251, 581, -1000, 1292, 1278, 1276, -1000, -480, 1951,
	-1000, -1000, 2551, -1000, -1000, 1247, 1006, 997, 1295, 49032,
	304, 430, -1000, 531, -1000, 35292, 1251, 937, 741, 1251,
	-1000, 1251, -1000, -1000, -1000, -1000, -1000, 1251, -1000, -1000,
	1950, -1000, 1942, 1095, 988, 1002, 971, 1950, -1000, -1000,
	-126, 1950, -1000, 1950, -1000, 1950, -1000, 1950, -1000, 1950,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 868,
	236, -262, 49032, 304, 610, -1000, 601, 29796, -1000, -1000,
	-1000, 29796, 29796, -1000, -1000, -1000, -1000, 1745, 1667, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -468, 50406,
	-1000, 302, 844, 420, 453, 356, 50406, 890, 2506, 2502,
	2500, 2495, 2494, 2493, 2491, 521, 2489, 2488, 2482, 2477,
	2473, 2467, 869, 2462, 2459, 2457, 2451, 2444, 2404, 2399,
	409, 411, 50406, 50406, 577, 2149, 50406, 2384, 50406, -1000,
	-1000, -1000, -1000, 673, 50406, -1000, 374, -1000, -1000, -1000,
	-1000, -1000, -1000, 1092, 50406, -1000, -1000, 983, 983, -1000,
	-1000, 50406, 983, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 50406, -1000, -1000, -1000, -1000, -34, 211, -1000, -1000,
	49032, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-55, -1000, 248, 16, 382, -1000, -1000, -1000, -1000, -1000,
	2508, -1000, 1092, 895, 904, -1000, 1496, -1000, -1000, 1032,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 142, 21550, 21550,
	21550, 2008, 606, 1253, 1632, 1544, 1388, 1388, 1313, 1313,
	784, 784, 784, 784, 784, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1663, -1000, 1496, 49719, 1744, 15354, 2305,
	2239, 1383, 2994, -1000, 1738, -1000, 1738, 1298, 919, -1000,
	20863, 1383, 2989, -1000, -1000, 1383, 1383, 1383, 20863, -1000,
	-1000, 20863, 20863, 20863, 20863, 2166, 2166, 2166, 2166, 2166,
	2166, 2166, 2166, 2166, 2166, 20863, 1949, 1948, 2589, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1847, 2166, 2166, 2166, 2166, 2166, 20863, 1750, -1000, -1000,
	-1000, 1382, 2974, 1621, 2960, 2166, 2166, -1000, 2166, 2956,
	2952, 1383, 1864, 1383, 1938, -1000, 2948, 2166, 2939, 2930,
	2922, 2227, 2916, 2911, 2891, 2166, 2166, 2166, 2223, 2887,
	2882, 2878, 2867, 2835, 2805, 2775, 2771, 2764, 2166, -196,
	2166, 1383, -1000, -1000, -1000, -1000, -1000, 2758, 2209, 1383,
	1917, 1496, 716, -1000, -1000, 1738, 1383, 1383, 1738, 1738,
	2572, 2531, 2517, 2472, 2454, 2445, 2166, 2166, -1000, 2166,
	2428, 2423, 2202, 2195, 1383, -1000, 1401, 50406, -1000, -343,
	-1000, 0, 753, 1496, -1000, 33918, 1383, -1000, -1000, 5917,
	-1000, 1244, -1000, -1000, -1000, 31170, 1819, 3155, -1000, -1000,
	1496, 1734, -1000, -1000, 424, 104, 30483, 748, 748, 162,
	1092, 1092, 20863, -1000, -1000, -1000, -1000, -1000, -1000, 696,
	2567, 402, 1496, -1000, 1947, 3050, -1000, -1000, -1000, 2424,
	24299, -1000, -1000, 1496, 1496, 50406, 1916, 1895, -1000, 695,
	-1000, 1254, 1914, 43, 58, -1000, -1000, -1000, -1000, 1092,
	-1000, 1267, 447, 679, -1000, 538, -1000, -1000, -1000, -1000,
	2272, 109, -1000, -1000, -1000, 285, 424, -1000, -1000, -1000,
	-1000, -1000, -1000, 1660, 1660, -1000, -1000, -1000, -1000, -1000,
	1190, -1000, -1000, -1000, -1000, 1186, -1000, -1000, 1181, -1000,
	-1000, 2414, 2156, 425, -1000, -1000, 825, 1657, -1000, -1000,
	2274, 825, 825, 49032, -1000, -1000, 1726, 2387, 1730, 832,
	-1000, -1000, -1000, -1000, -1000, 302, 50406, 2145, -1000, 2117,
	2117, 2117, 50406, -1000, -1000, -1000, -1000, -1000, -1000, -470,
	70, 423, -1000, -1000, -1000, 4028, 49032, 1725, -1000, 295,
	-1000, 1655, -1000, 49032, -1000, 1723, 2044, 1251, 1251, -1000,
	-1000, -1000, 49032, 1496, -1000, -1000, -1000, -1000, 643, 2347,
	292, -1000, -1000, -217, -1000, -1000, 304, 295, 49719, 1251,
	733, -1000, -1000, -1000, -1000, -1000, -471, 1721, 624, 306,
	378, 50406, 50406, 50406, 50406, 50406, 666, -1000, -1000, 42,
	-1000, -1000, -1000, -1000, 243, -1000, -1000, -1000, -1000, -1000,
	-1000, 243, -1000, -1000, -1000, -1000, -1000, 243, -1000, 1631,
	-1000, -1000, -1000, -1000, 243, -1000, -1000, -1000, 38, -1000,
	-1000, -1000, -1000, 243, -1000, -1000, -1000, -1000, -1000, -1000,
	243, -1000, -1000, -1000, -1000, 401, 596, -1000, 50406, 50406,
	758, -1000, -1000, -1000, -1000, -1000, -1000, 952, -1000, -1000,
	952, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2336, 50406, 10, -431, -1000, -427, 20863,
	-1000, -1000, -1000, -1000, 1732, 600, 1253, 21550, 21550, 21550,
	-1000, -1000, -1000, 786, 786, 29796, -1000, 20863, 20176, -1000,
	-1000, 20863, 20863, 874, -1000, 20863, 1059, -1000, 20863, -1000,
	-1000, -1000, 1401, 2166, 2166, 2166, 2166, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1805, 20863, 20863,
	20863, 1383, 345, -1000, -1000, -1000, -1000, -1000, 2588, -1000,
	20863, -1000, 29796, 20863, 20863, 20863, -1000, -1000, -1000, 20863,
	20863, -1000, -1000, 20863, 20863, -1000, 20863, 20863, 20863, -1000,
	20863, 20863, 20863, 20863, -1000, -1000, -1000, -1000, 20863, 20863,
	20863, 20863, 20863, 20863, 20863, 20863, 20863, 20863, -1000, -1000,
	35292, 88, -196, 1147, 88, 1147, -1000, 20176, 14661, -1000,
	-1000, -1000, -1000, -1000, 20863, 20863, 20863, 20863, 20863, 20863,
	-1000, -1000, -1000, 20863, 20863, -1000, 20863, -1000, 20863, -1000,
	-1000, -1000, -1000, -1000, 753, -1000, 741, 741, 741, 49032,
	-1000, -1000, -1000, -1000, 1912, -1000, 2450, -1000, 2207, 2201,
	2586, 2567, -1000, 26361, 3155, -1000, -1000, 49032, -328, -1000,
	2242, 2355, 748, 748, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12582, 2475, 20863, 2139, 49719, 135, -1000, 25674, 49032,
	49719, 26361, 26361, 26361, 26361, 26361, -1000, 2178, 2177, -1000,
	2165, 2162, 2203, 50406, -1000, 1488, 1688, -1000, 20863, 28422,
	1889, 26361, -1000, -1000, 26361, 50406, 11889, -1000, -1000, 7,
	-5, -1000, -1000, -1000, -1000, 704, -1000, -1000, 1775, 2419,
	2268, -1000, -1000, -1000, -1000, -1000, 1671, -1000, 1654, 1907,
	1647, 1645, 236, -1000, 2054, 2324, 825, 825, -1000, 1180,
	-1000, 1251, 1629, 1608, -1000, -1000, -1000, 296, 293, 1591,
	619, -1000, 50406, 2137, 2135, 2133, -1000, -479, 1174, 2041,
	2004, 20863, 2039, 2546, 1881, 49032, -1000, -1000, 49719, -1000,
	323, -1000, 425, 49032, -1000, -1000, -1000, 430, 50406, -1000,
	7252, -1000, -1000, -1000, 295, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 50406, 367, -1000, 2035, 1252, -1000, -1000, 1779,
	-1000, -1000, -1000, -1000, 274, 419, 1578, 239, 1566, 239,
	239, 1553, 239, 1529, 239, 239, -1000, 50406, 703, 2156,
	50406, -1000, -1000, -1000, 983, 983, -1000, -1000, 2320, -1000,
	1251, 2166, 21550, 21550, -1000, 773, 939, -165, 2029, 2029,
	-1000, 2029, 2034, -1000, 2029, 178, 2029, 169, 2029, -1000,
	-1000, 1383, 1383, 1401, -1000, 2180, 1728, -1000, 1092, 20863,
	2410, -1000, -1000, -1000, -1000, -1000, -51, 2402, 2397, 2166,
	-1000, 2028, 2018, 20863, 2166, 1383, 2153, 2166, 2166, 2166,
	2166, -1000, 1092, 1401, 2386, 1401, 2166, 2166, 2381, 341,
	2166, 1617, 1617, 1617, 1617, 1617, 1401, 1401, 1401, 1401,
	49032, -1000, -196, -1000, -1000, -240, -245, -1000, 1383, -196,
	1903, 1383, -1000, 2136, 2115, 2363, 2108, 2166, 2353, 2166,
	2166, 2166, 2094, -1000, 2411, 2411, 2411, 1601, 1244, 50406,
	-1000, -1000, -1000, -1000, 2567, 2563, 1896, -1000, -1000, 104,
	463, -1000, 2299, 2355, -1000, 2543, 2249, 2541, -1000, -1000,
	-1000, -1000, -1000, 1092, -1000, 2361, 1876, -1000, 831, 1867,
	-1000, -1000, 19489, 1603, 2200, 694, 1601, 1946, 3050, 2116,
	2132, 3072, -1000, -1000, -1000, -1000, 2163, -1000, 2161, -1000,
	-1000, 2001, -1000, 2325, 446, 26361, 1941, 1941, -1000, 678,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1045, 6626, 2613,
	-1000, 1525, -1000, 1250, 189, 1160, -1000, -1000, 825, 825,
	-1000, 936, 924, -1000, 50406, 2017, -1000, 424, 1519, 424,
	1158, -1000, -1000, 1144, -1000, -1000, -1000, -1000, 1999, 2350,
	-1000, -1000, -1000, -1000, 2016, 827, -1000, 50406, -1000, 50406,
	50406, 50406, 2010, 2538, -1000, 20863, 2009, 826, 2321, 49032,
	49032, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 547, 825, -449, 406, 403, 825, 825, 825,
	-485, -1000, -1000, 1511, 1498, -1000, -149, -1000, 20863, -1000,
	-1000, -1000, 1183, 1183, 1495, 1494, 1486, -1000, 2001, -1000,
	-1000, -1000, 1648, -1000, -1000, -135, 49032, 49032, 49032, 49032,
	-1000, -1000, 1150, -1000, -1000, -1000, 1478, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 773, 1383, 348, -140, 1383, -1000, -1000, 424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20863,
	-1000, 20863, -1000, 1092, 20863, 2475, 1458, 20863, 20863, -1000,
	1134, 1133, 2166, -1000, -1000, -1000, 20863, -1000, -1000, -1000,
	-1000, -1000, 20863, -1000, -1000, -1000, 20863, 272, 786, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1383,
	444, -1000, -1000, -1000, -1000, 2576, -1000, 1383, 20863, -1000,
	-1000, 20863, -1000, 20863, 20863, -1000, 20863, -1000, 20863, -1000,
	-1000, -1000, -1000, 20863, 1496, 2342, 1496, 1496, 28422, -1000,
	-1000, 2563, 2559, 2537, 2226, 2233, 2233, 2299, -1000, 2526,
	2525, -1000, 1446, 2520, 1443, 912, -1000, 49719, 20863, 135,
	-1000, 405, 49032, 135, 49032, -1000, 2556, -1000, -1000, 20863,
	2007, -1000, 20863, -1000, -1000, -1000, -1000, 6169, 2567, 1941,
	-1000, -1000, 790, -1000, 20863, -1000, -1000, -1000, 4267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1441, 1435, -1000,
	-1000, 2006, 20863, -1000, -1000, -1000, 1604, 1512, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1008, 1427, 2001, -1000,
	-1000, -1000, -1000, 430, -477, 2297, 49032, 1128, -1000, 1493,
	1881, 410, 135, 1422, 825, 825, 825, 1124, 1089, 33918,
	1490, -1000, 49032, 522, -1000, 430, -1000, -160, -162, 2166,
	-1000, -1000, 2417, -1000, -1000, 14661, -1000, -1000, 2000, 2107,
	-1000, -1000, -1000, -1000, -1000, 2183, -121, -143, -1000, -1000,
	2166, 2166, 1325, 1383, -1000, 2166, 2166, 1455, 1434, -1000,
	2166, 1401, 2076, -1000, 272, 1383, 2131, -1000, -1000, 6169,
	-1000, -1000, 2556, 2514, 88, -1000, -1000, 278, 88, 1092,
	2050, 2166, 2013, 1972, 2166, 2166, 29109, -1000, 2512, 2458,
	34605, 34605, 753, 2559, -205, 20863, 20863, 2205, 1097, -1000,
	-1000, -1000, -1000, 1418, 1413, -1000, 1389, -1000, 2609, -1000,
	1092, -1000, 135, -1000, 674, 1867, -1000, 2475, 1092, 49032,
	1092, 98, 2556, -1000, 2166, -1000, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, -1000, -1000, 49032, 2283,
	-1000, -1000, 1485, 822, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2416, 1463, 69, -1000, 1402, 1881,
	-1000, -1000, 138, -1000, 20863, -1000, 33918, 1385, 1375, -1000,
	-1000, -1000, -1000, -485, -1000, -1000, -1000, -1000, -1000, -1000,
	407, 1873, -1000, 820, 49032, 50406, -1000, 2032, -1000, -1000,
	-1000, 20863, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20863, -1000, 1383, 2130, -1000, -295, -1000, -450, 20863, -196,
	-1000, -1000, -196, -1000, 20863, -1000, -1000, 20863, -1000, 20863,
	-1000, -1000, 1454, -1000, -1000, -1000, -1000, -1000, 1454, 1454,
	-1000, -205, -1000, 1872, -1000, 49032, 1092, 1864, -1000, 1014,
	-1000, -1000, -1000, -1000, -1000, 49719, 1867, 49032, -1000, 1450,
	1383, 1496, 2475, -1000, 1439, -1000, 465, 1008, 1372, 407,
	-1000, 1988, 2004, -1000, -1000, -1000, 18802, -1000, -1000, -1000,
	-1000, -1000, 196, -134, 14661, 11196, 1433, -1000, -128, 2166,
	1401, -1000, -419, -1000, -1000, -1000, -1000, 258, -1000, -1000,
	1864, -1000, -1000, 1886, 1882, 1877, 33231, -1000, -1000, -1000,
	-1000, -205, -1000, -1000, 2395, -1000, -1000, 1860, -1000, -1000,
	28422, 48345, -1000, -111, 330, 1987, 819, -1000, -134, 20863,
	1986, 1383, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13, -1000, -1000, -1000, -1000, -1000, 1779, -141, -1000, -1000,
	-1000, 291, -437, -235, -250, -1000, -1000, 21550, -1000, 20863,
	-1000, 20863, -1000, 20863, -1000, -1000, -1000, 49032, 1496, -1000,
	1370, -1000, 3610, -265, 2125, -1000, -74, -1000, -1000, -1000,
	1037, 1339, -1000, -1000, -1000, -1000, -1000, 340, 1302, -1000,
	2235, 49032, -1000, 544, -1000, -1000, -135, -147, 903, -1000,
	-1000, -1000, -1000, -1000, 1767, 1607, 2166, -1000, 49032, -1000,
	48345, -258, 733, 6169, -1000, 2124, 2123, 2584, -1000, -1000,
	-1000, -1000, -1000, -1000, 1347, 818, -1000, -1000, -1000, -487,
	1345, 319, -1000, -1000, 291, -1000, 20863, -1000, 20863, -1000,
	1383, -1000, -1000, 2373, 98, -1000, 2608, -1000, 2604, 751,
	751, -1000, 340, 1301, -1000, 1088, -487, -1000, -1000, 2166,
	2166, -1000, -269, -1000, -1000, -1000, -1000, -1000, 541, 1123,
	-1000, 814, -1000, -1000, -1000, -1000, -1000, 6169, -1000, -1000,
	-1000, 1280, 279, -1000, 279, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3243, 3241, 38, 6, 37, 36, 3238, 90, 104,
	204, 39, 243, 107, 3237, 176, 3234, 3232, 3230, 3229,
	3228, 3227, 2732, 2699, 2665, 3225, 3224, 3222, 3217, 3215,
	3214, 3213, 3212, 3210, 3209, 3198, 183, 170, 196, 3197,
	3196, 3193, 122, 190, 95, 98, 193, 3192, 3190, 84,
	3189, 3187, 3185, 189, 188, 187, 950, 3184, 178, 118,
	55, 3183, 3182, 3181, 3178, 3177, 3176, 3175, 3174, 3172,
	3171, 3170, 3169, 3168, 3167, 3166, 3165, 3164, 3163, 3162,
	3161, 290, 3160, 3159, 22, 3157, 89, 3156, 3154, 3152,
	3151, 3148, 13, 3147, 3144, 17, 45, 3137, 3134, 54,
	3132, 3129, 3127, 3126, 3125, 21, 3122, 28, 3112, 40,
	3111, 3110, 132, 3109, 3107, 3106, 41, 3104, 3103, 3096,
	3092, 3086, 3085, 3084, 143, 3083, 3079, 3067, 240, 197,
	3066, 3065, 252, 162, 115, 3060, 3059, 105, 194, 3056,
	125, 3054, 3051, 3049, 153, 3047, 139, 3045, 3042, 72,
	66, 3041, 52, 3039, 3038, 10, 100, 69, 9, 18,
	20, 3037, 3035, 71, 80, 3034, 112, 3031, 3025, 110,
	83, 3022, 102, 116, 3014, 3011, 12, 8, 3007, 2,
	1, 3, 73, 3002, 3001, 120, 3000, 2997, 2994, 103,
	2992, 2984, 3330, 2981, 99, 135, 106, 78, 2980, 49,
	75, 2973, 2971, 2969, 2968, 2967, 57, 2962, 2959, 2958,
	142, 224, 173, 2957, 48, 85, 61, 137, 2954, 70,
	87, 199, 180, 2953, 2950, 140, 141, 2949, 2948, 63,
	47, 46, 2945, 114, 133, 126, 92, 113, 146, 2942,
	2941, 68, 77, 2939, 2938, 2936, 2935, 174, 2932, 2931,
	76, 2929, 62, 2927, 185, 2922, 16, 59, 2921, 53,
	172, 2918, 79, 2911, 2909, 67, 131, 74, 44, 2908,
	163, 166, 129, 171, 2907, 2904, 58, 2902, 2901, 2898,
	201, 318, 2896, 2894, 81, 175, 148, 154, 101, 2888,
	327, 2885, 2881, 167, 2764, 6074, 2880, 43, 165, 2879,
	2878, 7681, 168, 51, 26, 2877, 109, 2876, 2874, 2873,
	2872, 210, 182, 111, 164, 64, 2866, 2861, 2857, 19,
	2855, 2849, 2844, 2830, 2823, 2810, 91, 35, 34, 33,
	205, 65, 25, 117, 161, 156, 82, 2805, 2803, 2802,
	128, 96, 2793, 160, 157, 136, 169, 2791, 177, 149,
	121, 2789, 86, 32, 2788, 2786, 2785, 2784, 124, 2783,
	2780, 2778, 2771, 155, 147, 127, 88, 2769, 94, 123,
	151, 150, 60, 2765, 50, 2763, 2761, 30, 192, 29,
	2757, 15, 108, 235, 2756, 5572, 184, 2755, 23, 334,
	152, 2750, 2738, 7, 11, 14, 2737, 2736, 2734, 2724,
	138, 2718, 2717, 2709, 2698, 27, 56, 24, 5, 119,
	134, 2697, 2687, 144, 145, 2669, 2663, 2655, 2654, 2644,
	97, 31, 4, 2639, 2632, 5087, 0, 130, 2631, 202,
}

//line sql.y:8634
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createFilterUnion() *CreateFilter {
	v, _ := st.union.(*CreateFilter)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) filterActionUnion() *FilterAction {
	v, _ := st.union.(*FilterAction)
	return v
}

func (st *yySymType) filterPatternUnion() *FilterPattern {
	v, _ := st.union.(*FilterPattern)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 423, 424, 424, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 262, 385, 386, 386, 260, 260, 33,
	76, 36, 36, 35, 35, 38, 38, 37, 8, 8,
	8, 9, 9, 9, 9, 9, 9, 9, 9, 10,
	10, 10, 10, 10, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 20, 21, 12, 12, 22, 22, 110,
	110, 23, 24, 24, 24, 24, 427, 427, 187, 187,
	185, 185, 186, 186, 265, 265, 25, 269, 269, 271,
	271, 271, 271, 261, 261, 261, 26, 26, 270, 270,
	272, 272, 272, 275, 275, 275, 275, 314, 314, 314,
	34, 417, 417, 420, 420, 420, 420, 418, 418, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 419, 419,
	422, 422, 27, 27, 27, 27, 27, 27, 27, 130,
	130, 388, 388, 387, 381, 381, 380, 380, 379, 384,
	384, 383, 383, 382, 40, 41, 50, 50, 50, 50,
	51, 52, 389, 389, 354, 57, 57, 56, 56, 56,
	56, 56, 56, 58, 58, 54, 54, 53, 53, 55,
	55, 356, 356, 342, 342, 355, 355, 355, 355, 355,
	355, 355, 341, 341, 141, 141, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 404, 404, 404, 403, 403, 240, 240,
	240, 240, 240, 240, 240, 240, 151, 151, 163, 163,
	163, 163, 163, 149, 149, 150, 148, 148, 148, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 162, 162,
	158, 158, 158, 159, 159, 159, 160, 160, 405, 405,
	405, 405, 319, 319, 319, 319, 322, 322, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 321, 321, 321,
	321, 321, 321, 321, 323, 323, 323, 323, 323, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 325, 325, 325, 325, 325,
	325, 325, 325, 340, 340, 326, 326, 334, 334, 335,
	335, 336, 336, 336, 337, 337, 337, 338, 338, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 333, 333,
	332, 332, 332, 343, 368, 368, 367, 367, 365, 365,
	365, 365, 365, 365, 365, 365, 352, 352, 362, 362,
	362, 362, 362, 351, 351, 347, 347, 347, 348, 348,
	349, 349, 346, 346, 350, 350, 364, 364, 363, 363,
	344, 344, 345, 345, 370, 406, 406, 406, 406, 406,
	407, 407, 371, 396, 398, 398, 398, 397, 397, 394,
	395, 393, 393, 393, 393, 393, 86, 86, 86, 288,
	288, 289, 289, 360, 360, 359, 359, 359, 361, 361,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 283, 283, 283, 392, 392, 392, 392, 392, 392,
	391, 391, 391, 357, 357, 357, 390, 390, 59, 59,
	220, 220, 409, 409, 410, 410, 410, 47, 47, 47,
	47, 47, 47, 46, 46, 46, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 48, 48, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 112, 112, 113, 113, 113, 113, 115, 115,
	115, 373, 373, 60, 60, 3, 3, 175, 177, 178,
	178, 176, 176, 176, 176, 176, 176, 62, 62, 61,
	61, 180, 179, 181, 181, 181, 1, 1, 2, 2,
	4, 4, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 339, 339, 339, 372, 372, 374,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	118, 117, 117, 116, 119, 119, 119, 119, 119, 119,
	119, 119, 376, 376, 376, 63, 63, 377, 327, 328,
	329, 5, 6, 353, 375, 126, 126, 29, 39, 39,
	30, 30, 30, 30, 31, 31, 64, 65, 416, 416,
	69, 69, 69, 70, 70, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 282, 282, 291, 291,
	281, 281, 306, 306, 306, 284, 284, 284, 285, 285,
	402, 402, 402, 278, 278, 67, 67, 67, 307, 307,
	307, 307, 71, 71, 411, 411, 412, 412, 413, 413,
	413, 72, 73, 73, 309, 309, 310, 310, 74, 75,
	87, 87, 87, 87, 87, 87, 87, 88, 88, 88,
	88, 111, 111, 111, 15, 15, 15, 15, 83, 83,
	83, 14, 14, 17, 68, 68, 77, 399, 399, 400,
	401, 401, 401, 401, 78, 80, 80, 32, 32, 32,
	32, 32, 32, 136, 136, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 131, 131,
	131, 125, 125, 428, 81, 82, 82, 129, 129, 129,
	122, 122, 122, 128, 128, 128, 16, 16, 18, 264,
	264, 19, 19, 133, 133, 135, 135, 135, 135, 135,
	137, 137, 137, 137, 137, 137, 137, 132, 132, 134,
	134, 134, 134, 299, 299, 299, 298, 298, 169, 169,
	171, 170, 170, 172, 172, 173, 173, 173, 173, 218,
	218, 195, 195, 257, 257, 258, 258, 256, 256, 263,
	263, 259, 259, 259, 259, 266, 266, 174, 174, 174,
	174, 182, 182, 183, 183, 184, 184, 308, 308, 304,
	304, 304, 303, 303, 188, 188, 188, 190, 189, 189,
	189, 189, 191, 191, 193, 193, 192, 192, 194, 199,
	199, 198, 198, 196, 196, 196, 196, 197, 197, 197,
	197, 200, 200, 146, 146, 146, 146, 146, 146, 146,
	161, 161, 161, 161, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 247, 247, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 155, 223, 223, 222, 222,
	89, 89, 89, 90, 90, 91, 91, 91, 91, 91,
	92, 92, 92, 92, 92, 147, 147, 94, 94, 93,
	93, 213, 213, 296, 296, 95, 96, 96, 99, 99,
	98, 97, 97, 103, 103, 100, 100, 102, 102, 101,
	104, 104, 105, 106, 106, 279, 279, 201, 201, 209,
	209, 209, 209, 202, 202, 202, 202, 202, 202, 202,
	210, 210, 210, 217, 211, 211, 207, 207, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 166, 166, 166, 166, 228, 228,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 154, 154, 167, 167, 167,
	167, 168, 168, 168, 168, 168, 168, 168, 316, 316,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 429, 429, 330, 330, 330, 330, 208, 208, 208,
	208, 208, 127, 127, 127, 127, 127, 313, 313, 313,
	317, 317, 317, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 318, 318,
	226, 226, 123, 123, 224, 224, 225, 227, 227, 219,
	219, 219, 219, 221, 221, 204, 204, 204, 229, 229,
	230, 230, 107, 108, 108, 109, 109, 231, 231, 233,
	232, 232, 234, 235, 235, 235, 236, 236, 237, 237,
	237, 49, 49, 49, 49, 49, 44, 44, 44, 44,
	45, 45, 45, 45, 138, 138, 138, 138, 140, 140,
	139, 139, 84, 84, 85, 85, 85, 415, 415, 415,
	414, 414, 414, 414, 414, 414, 144, 144, 145, 145,
	145, 142, 142, 143, 143, 254, 254, 238, 238, 238,
	245, 245, 245, 241, 241, 243, 243, 243, 244, 244,
	244, 242, 251, 251, 253, 253, 252, 252, 248, 248,
	249, 249, 250, 250, 250, 246, 246, 203, 203, 203,
	203, 203, 255, 255, 255, 255, 267, 267, 214, 214,
	216, 216, 215, 215, 165, 268, 268, 276, 273, 273,
	274, 274, 300, 300, 300, 277, 277, 290, 290, 286,
	286, 287, 287, 280, 280, 292, 292, 292, 79, 212,
	212, 369, 369, 366, 295, 295, 297, 297, 301, 301,
	305, 305, 302, 302, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 425, 426, 311, 312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 0, 1, 1, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 7, 10, 9, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	14, 3, 5, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 2, 2, 2, 3, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 1,
	3, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	3, 3, 2, 2, 2, 1, 2, 2, 0, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 1, 1, 3, 3, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 4,
	3, 1, 3, 1, 7, 6, 7, 7, 8, 8,
	0, 1, 5, 2, 1, 1, 1, 0, 1, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 1,
	2, 0, 1, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 7, 8, 5, 5, 5, 7, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 4, 1, 3,
	2, 3, 3, 2, 2, 3, 2, 2, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	4, 3, 4, 4, 4, 2, 3, 3, 3, 3,
	5, 2, 3, 3, 3, 2, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 6,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 1, 6, 3, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 8,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 9, 6, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 2,
	2, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -423, -81, -428, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -64, -65,
	-69, -70, -66, -67, -71, -72, -73, -74, -75, -14,
	-17, -68, -32, -33, -76, -77, -78, -79, -80, -16,
	-18, -19, -34, -9, -8, -13, 10, 11, -110, -35,
	33, -40, -50, 225, -51, -41, 226, -52, 228, 227,
	266, 229, 250, 651, 235, 259, 75, 334, 335, 337,
	338, 339, 340, -111, 647, 264, 265, 231, 37, 46,
	34, 35, 38, 236, 272, 273, 234, -10, -36, 9,
	-425, 12, 479, 261, 260, 29, -12, 541, 87, -82,
	-424, 697, -254, -238, 23, 34, 30, -237, -233, -129,
	-238, 21, 19, 8, -81, -81, -81, 13, 14, -81,
	-354, -356, -12, 26, 87, 159, 9, 87, 303, -81,
	-57, -56, -54, -53, -55, -58, 32, -47, -48, -378,
	-46, -43, 230, 227, 276, 123, 124, 266, 267, 268,
	229, 250, 265, 269, 264, 285, -42, 82, 34, 541,
	544, -361, 226, 232, 233, 228, 480, 126, 125, 76,
	-358, 393, 574, 667, -58, 669, 101, 104, 668, 45,
	240, 670, 671, 672, 581, 673, 249, 674, 675, 676,
	677, 683, 622, 684, 685, 686, 127, 8, -81, -305,
	-301, 91, -294, 538, 252, 572, 573, 301, 82, 42,
	547, 390, 393, 574, 509, 667, 334, 350, 344, 514,
	515, 516, 373, 365, 539, 575, 548, 318, 253, 289,
	661, 363, 135, 669, 322, 576, 267, 398, 399, 577,
	400, 101, 337, 442, 682, 321, 578, 680, 104, 668,
	342, 80, 508, 52, 664, 45, 262, 361, 234, 357,
	670, 290, 579, 550, 283, 126, 123, 689, 37, 353,
	51, 31, 679, 125, 50, 671, 150, 580, 672, 581,
	402, 380, 655, 49, 403, 268, 582, 85, 273, 543,
	325, 663, 404, 528, 354, 405, 300, 678, 231, 583,
	642, 634, 635, 406, 407, 656, 385, 381, 386, 530,
	584, 434, 513, 408, 638, 639, 696, 53, 585, 586,
	657, 124, 587, 79, 673, 81, 348, 349, 588, 298,
	251, 533, 534, 436, 377, 491, 498, 499, 111, 112,
	494, 113, 500, 114, 501, 502, 503, 492, 115, 108,
	493, 504, 505, 378, 379, 116, 506, 110, 109, 495,
	497, 117, 507, 249, 36, 409, 540, 302, 59, 320,
	277, 437, 47, 383, 693, 46, 649, 535, 589, 654,
	376, 372, 488, 54, 590, 591, 592, 593, 510, 674,
	375, 347, 371, 688, 4, 295, 511, 675, 63, 233,
	388, 387, 389, 284, 433, 368, 594, 595, 596, 256,
	83, 597, 358, 22, 598, 599, 410, 291, 600, 57,
	601, 602, 440, 265, 603, 55, 676, 40, 604, 270,
	690, 677, 605, 327, 328, 606, 607, 648, 608, 272,
	609, 412, 610, 636, 637, 411, 382, 384, 536, 279,
	413, 237, 542, 611, 326, 352, 269, 681, 612, 257,
	524, 525, 526, 527, 662, 532, 531, 271, 276, 264,
	441, 258, 613, 614, 615, 616, 617, 319, 633, 618,
	619, 338, 683, 489, 44, 620, 621, 622, 623, 624,
	299, 294, 435, 444, 62, 84, 395, 625, 626, 660,
	346, 343, 292, 627, 335, 56, 684, 685, 686, 286,
	687, 517, 518, 519, 520, 10, 694, 695, 512, 415,
	127, 296, 297, 48, 369, 278, 628, 323, 629, 359,
	360, 374, 345, 370, 645, 336, 643, 280, 416, 490,
	266, 630, 443, 293, 391, 396, 324, 546, 529, 285,
	417, 652, 659, 545, 521, 522, 367, 364, 287, 523,
	631, 647, 418, 241, 281, 282, 632, 644, 419, 420,
	317, 421, 329, 331, 432, 332, 333, 422, 423, 424,
	431, 425, 428, 429, 430, 427, 330, 426, 646, 640,
	641, 288, 544, 341, 362, 397, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 487, 310, 239, -81, 239, -192,
	-301, 239, 239, 96, 542, 668, 652, 412, -273, 429,
	430, 399, -291, 401, 414, 409, 419, 407, -282, 410,
	412, 279, -402, 434, 239, 416, 225, 402, 411, 420,
	421, 329, 432, 331, 317, 427, 422, 330, 426, 288,
	423, 424, 431, 425, 428, -385, 177, 672, 687, 135,
	366, 406, 404, 435, 649, 91, -307, 91, 92, 93,
	-294, 336, -309, 341, -295, -385, -294, 339, -81, -81,
	-311, -311, -131, 649, 653, -211, -146, 143, -161, -164,
	-152, -156, -205, -206, -207, -208, -162, -221, -260, 166,
	167, 174, 144, -217, -165, 27, 537, 481, 480, 177,
	32, -155, 220, 69, 70, 483, 146, 58, 12, 456,
	457, -163, 451, 458, 453, 508, 510, 511, 512, 509,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	513, 485, 486, 118, 487, 108, 110, 109, 488, 489,
	490, 363, 535, 536, 530, 533, 534, 532, 531, 378,
	379, 491, 492, 493, 111, 112, 113, 114, 115, 116,
	117, 494, 497, 495, 496, 498, 499, 500, 505, 506,
	501, 502, 503, 504, 507, -91, -103, 563, 562, -104,
	-153, -154, -167, -168, -295, -301, 244, 450, 238, 172,
	479, -157, -150, -219, 107, 92, 93, -8, -215, 449,
	454, 455, 459, 452, 549, 551, 566, 567, 569, 554,
	559, 558, 561, 524, 525, 526, 527, 528, 529, 634,
	635, 636, 637, 638, 639, 640, 641, -385, -294, 91,
	-159, -158, -201, 94, 99, 102, 103, 105, -408, 262,
	359, 360, 119, -425, 665, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 415, 415, -192, -81, -81,
	-81, -81, -231, -129, -233, -10, -8, -425, -81, -8,
	-9, -13, -36, -38, 568, -37, -301, 100, -238, -254,
	13, 162, 43, 51, -236, -237, -12, -8, -146, 20,
	24, 25, -134, 168, -146, -301, -134, -280, 243, -81,
	-81, -269, -314, 336, -271, 435, 649, 434, -261, -274,
	91, -260, -273, 433, -12, -355, 159, -341, -345, -295,
	254, -371, 250, -192, -81, -364, -363, -295, -425, -287,
	244, -130, -290, 240, 248, 247, 136, -389, 139, 296,
	450, 238, -53, -54, -55, -273, 176, 671, -112, 271,
	275, 88, 88, -345, -344, -343, -390, 275, 254, -370,
	-362, 246, 255, -351, 247, 248, -346, 240, 137, -390,
	-346, 245, 255, 250, 254, 275, 275, 127, 275, 127,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 270,
	-352, 151, -352, 545, 545, -358, -390, 250, 240, -390,
	-390, 246, -292, -346, 242, 26, 242, 36, 36, -352,
	-352, -352, -273, 176, -352, -352, -352, -352, 283, 283,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, 239, -389, -138,
	426, 317, 331, 329, 82, -56, 285, -39, -192, -290,
	240, 241, -389, 272, -192, 221, -192, -416, -192, 96,
	96, -284, 159, 16, -284, -281, 415, 413, 400, 405,
	-284, -284, -284, -284, 286, 398, -347, 240, 36, 251,
	415, 286, 398, 286, 287, 286, 287, 408, 418, 286,
	-306, 15, 162, 450, 403, 407, 279, 239, 280, 241,
	417, 287, -306, -306, 90, -306, 90, 90, -285, 159,
	286, 415, 282, -284, -284, -284, -312, -425, -297, -295,
	-293, 230, 24, 142, 26, 28, 145, 177, 130, 20,
	146, 38, 232, 366, 250, 176, 246, 480, 225, 73,
	549, 451, 453, 449, 456, 482, 483, 450, 401, 32,
	14, 551, 29, 260, 25, 39, 170, 227, 149, 552,
	263, 27, 261, 118, 121, 554, 23, 76, 255, 15,
	248, 41, 17, 555, 556, 18, 244, 243, 162, 240,
	71, 12, 220, 30, 158, 67, 557, 137, 558, 559,
	560, 561, 131, 69, 159, 21, 691, 454, 455, 34,
	650, 537, 274, 172, 74, 60, 653, 143, 452, 562,
	563, 119, 564, 122, 77, 658, 139, 19, 72, 43,
	565, 275, 566, 245, 692, 567, 438, 568, 160, 228,
	479, 70, 161, 665, 569, 666, 238, 414, 9, 484,
	33, 259, 247, 129, 68, 570, 239, 148, 485, 486,
	242, 132, 120, 8, 136, 35, 13, 75, 78, 457,
	458, 459, 58, 128, 541, 147, 16, 571, 439, 141,
	651, 445, 446, 447, 448, 235, -385, 654, -312, -312,
	33, 92, -411, -412, -413, 541, 438, 242, -295, -192,
	-87, 642, 229, -88, 648, 24, 237, -136, 415, -124,
	177, 672, 655, 656, 657, 654, 412, 652, 662, 660,
	658, 286, 659, 88, 139, 141, 142, 4, -146, 158,
	-202, 151, 152, 153, 154, 155, 156, 157, 162, 143,
	145, 159, -247, 140, 163, 164, 165, 166, 167, 168,
	169, 171, 170, 172, 173, 160, 161, 176, 223, 224,
	-156, -156, -156, -156, -217, -223, -222, -425, -219, -385,
	-294, -301, -425, -425, -156, -279, -425, -425, -152, -425,
	-425, -425, -226, -146, -425, -425, -429, -425, -429, -429,
	-330, -425, -330, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, 221,
	-425, -425, -425, -425, -425, -330, -330, -330, -330, -330,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, 103, 99, 102, 94, -221, 105,
	90, 90, 90, 90, -8, -9, -211, -425, -311, -399,
	-400, -195, -192, -425, 317, 329, -295, -295, 272, -236,
	-12, -8, -231, -237, -233, -8, -122, -135, 64, 65,
	-137, 25, 39, 68, 66, 24, -426, 89, -426, -254,
	-426, 88, -38, -257, 87, 62, 44, 90, 90, 88,
	22, -232, -234, -146, 15, -299, 4, -298, 26, -295,
	90, 221, 15, -193, 30, -192, -280, -280, 88, 91,
	336, -270, -272, 436, 438, 151, -300, -295, 90, 32,
	89, 88, -192, -319, -322, -324, -323, -325, -320, -321,
	363, 364, 177, 367, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 380, 33, 262, 359, 360, 361, 362,
	381, 382, 383, 384, 386, 387, 388, 389, 344, 365,
	539, 345, 346, 347, 348, 349, 350, 352, 353, 356,
	354, 355, 357, 358, -386, -385, 87, 64, 65, 89,
	88, -326, 87, -146, 87, 143, -138, 239, -385, 240,
	240, 240, -81, 479, -352, -352, -352, 270, 20, -46,
	-43, -378, 19, -42, -43, 230, 123, 124, 227, 87,
	-341, 87, -350, -386, -385, 87, 137, 245, 136, -349,
	-346, -349, -350, -385, -219, -385, 137, 137, -385, -385,
	-266, -295, -266, -266, 24, -266, 24, -266, 24, 96,
	-295, -266, 24, -266, 24, -266, 24, -266, 24, -266,
	24, 32, 79, 80, 81, 32, 83, 84, 85, -219,
	-385, -385, -219, -341, -219, -192, -385, -273, 96, 96,
	96, -352, -352, 96, 90, 90, 90, -352, -352, 96,
	90, -303, -301, 90, 90, -391, 256, 300, 302, 96,
	96, 96, 96, 32, 90, -392, 32, 679, 678, 680,
	681, 682, 90, 96, 32, 96, 32, 96, -295, 87,
	-192, -144, 290, 225, 227, 230, 77, 90, 320, 321,
	318, 327, 328, 323, 324, 90, 320, 318, 327, 328,
	323, 324, 90, 320, 321, 318, 327, 328, 323, 324,
	151, 45, 88, 242, 239, -385, -286, 244, -286, -295,
	-302, -301, -293, -415, 88, -414, 23, 445, 446, 448,
	404, 447, 90, -146, -348, 15, 162, -306, -306, -284,
	-192, -348, -306, -284, -192, -284, -284, -284, -284, -306,
	-306, -306, -284, -301, -301, -192, -192, -192, -192, -192,
	-192, -192, -312, -285, -284, -284, 654, -284, 332, 654,
	90, -278, 15, 77, -312, -312, 88, 342, 439, 440,
	-310, 339, -83, -295, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 541, -185, -192, 654, 654, 654, 654,
	654, 654, -146, -146, -146, -146, 564, -209, 119, 143,
	120, 121, -164, -210, -215, -217, 106, 162, 145, 159,
	-247, -152, -156, -152, -152, -152, -152, -152, -152, -152,
	-152, -152, -152, -152, -152, -152, -313, -295, 90, 177,
	-160, -159, 105, -408, -160, 538, 88, -222, 221, -146,
	-146, -385, -146, -295, -132, -134, -132, -146, -224, -225,
	147, -219, -146, -426, -426, 96, 105, 168, -128, 25,
	39, -128, -128, -128, -128, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -128, -295, -295, -121, -120,
	461, 462, 463, 464, 466, 467, 468, 471, 472, 476,
	477, 460, 478, 465, 470, 473, 474, 475, 469, 362,
	-146, -146, -146, -146, -146, -146, -89, -146, 130, 131,
	132, -211, -146, -152, -146, -146, -146, -426, -146, -146,
	-146, -212, -211, -384, -383, -382, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -426,
	-146, -166, -150, 96, -262, 105, 92, -146, -146, -133,
	-132, -297, -302, -293, -294, -132, -133, -133, -132, -132,
	-146, -146, -146, -146, -146, -146, -146, -146, -426, -146,
	-146, -146, -146, -146, -254, -426, -211, 88, -401, 438,
	439, 650, -304, 275, -303, 26, -212, 90, 90, 15,
	-264, 78, -295, -236, -236, 60, -132, -137, -426, -37,
	26, -256, -295, 63, 90, -331, -273, 390, 391, 177,
	-146, -146, 88, -235, 28, 29, -192, -298, 168, -302,
	-192, -265, 275, -192, -170, -172, -173, -174, -195, -218,
	-425, -175, -8, 560, 557, 15, -185, -186, -194, -301,
	-271, -314, -270, 88, 437, 439, 440, 77, 122, -146,
	-332, 176, -360, -359, -358, -341, -343, -344, -345, 89,
	-332, -337, 396, 395, -326, -326, -326, -326, -326, -331,
	-331, -331, -331, 87, 87, -326, -326, -326, -326, -334,
	87, -334, -334, -335, -334, 87, -335, -336, 87, -336,
	-371, -146, -368, -367, -365, -366, 249, 101, 632, 588,
	541, 581, 622, 78, -363, -235, 96, -426, -417, -420,
	284, 305, 306, 286, 27, -144, -287, -369, -366, -385,
	-385, -385, -287, 91, 90, 91, 90, 91, 90, -113,
	-60, -1, 691, 692, 693, 88, 20, -342, -341, -59,
	300, -374, -375, 275, -370, -364, -350, 137, -349, -350,
	-350, -385, 88, 30, 127, 127, 127, 127, 541, 227,
	33, -288, 580, 143, 632, 588, -341, -59, 242, 242,
	-313, -313, -313, 90, 90, -283, 687, -185, -140, 292,
	151, 281, 281, 239, 239, 294, -192, 319, 322, 320,
	321, 318, 327, 328, 323, 324, 24, 24, 24, 24,
	24, 24, 24, 320, 318, 327, 328, 323, 324, 333,
	24, 24, 24, 24, 24, 24, 319, 322, 320, 321,
	318, 327, 328, 323, 324, 24, 24, 24, 24, 24,
	24, 24, 293, 295, 297, 283, -192, -192, -286, 77,
	-187, -192, 27, -301, -414, -192, 285, -192, -284, -284,
	-192, -284, -284, -192, -413, 343, -295, 377, 643, 644,
	646, 645, -124, 438, 88, 541, 23, -125, 23, -425,
	119, 120, 121, -210, -152, -156, -152, 142, 263, -425,
	-219, -426, -297, 26, 88, 78, -426, 88, 88, -426,
	-426, 88, 15, -227, -225, 149, -146, -426, 88, -426,
	-426, -426, -211, -146, -146, -146, -146, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -211, 88, 88,
	15, -317, 26, -426, -426, -426, -426, -426, -226, -426,
	15, -426, 78, 88, 162, 88, -426, -426, -426, 88,
	88, -426, -426, 88, 88, -426, 88, 88, 88, -426,
	88, 88, 88, 88, -426, -426, -426, -426, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, -426, -96,
	565, -426, -426, 88, -426, 88, -426, -425, 221, -426,
	-426, -426, -426, -426, 88, 88, 88, 88, 88, 88,
	-426, -426, -426, 88, 88, -426, 88, -426, 88, -426,
	-400, 649, 439, -199, -198, -196, 75, 243, 76, -425,
	-303, -426, -160, -262, -263, -262, -204, -295, 96, 105,
	-238, -169, -171, 15, -137, -217, 89, 88, -331, -242,
	-248, -281, -295, 90, 177, -333, 177, -333, 390, 391,
	-234, 221, -200, 16, -203, 33, 58, -11, -425, -425,
	33, 88, -188, -190, -189, -191, 67, 71, 73, 68,
	69, 70, 74, -308, 26, -8, -170, -8, -425, -192,
	-185, -427, 15, 78, -427, 88, 221, -272, -275, 441,
	438, 444, -385, 90, -112, 88, -358, -345, -239, -141,
	41, -338, 397, -331, 548, -331, -340, 90, -340, 96,
	96, 96, 89, -49, -44, -45, 34, 82, -365, -352,
	90, 40, -352, -352, -295, 89, -235, 89, 88, 151,
	-140, -192, 77, -369, -369, -369, -301, -2, 690, 696,
	137, 87, 400, 19, -256, 88, 89, -220, 301, 89,
	-114, -295, 89, 87, -350, -350, -295, -425, 239, 32,
	32, 632, 588, 580, -59, -220, -219, -385, -332, 689,
	688, 89, 241, 299, -145, 456, -142, 90, 91, -192,
	-192, -192, -192, -192, 230, 227, 423, -409, 325, -409,
	-409, 90, -409, 423, -409, -409, 284, 242, -185, -192,
	88, -86, 258, 253, -306, -306, 34, -192, 438, 663,
	661, -146, 142, 263, -164, -156, -152, -315, 177, 363,
	262, 361, 357, 377, 368, 395, 359, 396, 354, 353,
	352, -315, -313, -211, -134, -146, -146, 150, -146, 148,
	-146, -426, -426, -426, -426, -426, -231, -146, -146, -146,
	-426, 177, 363, 15, -146, -313, -146, -146, -146, -146,
	-146, -382, -146, -211, -146, -211, -146, -146, -146, -146,
	-146, -383, -383, -383, -383, -383, -211, -211, -211, -211,
	-425, -295, -99, -98, -97, 615, 243, -96, -166, -99,
	-166, -133, -297, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -196, -346, -346, -346, -266, 88, -277,
	23, 15, 58, 58, -169, -200, -170, -137, -295, -245,
	642, -251, 47, -249, -250, 48, -246, 49, 57, -333,
	-333, 168, -236, -146, -267, 77, -268, -276, -219, -214,
	-216, -215, -425, -255, -426, -295, -266, -268, -172, -173,
	-173, -172, -173, 67, 67, 67, 72, 67, 72, 67,
	-189, -301, -426, -146, -304, 78, -170, -170, -194, -301,
	168, 438, 442, 443, -358, -407, 119, 143, 32, 77,
	393, 101, -405, 176, 577, 627, 632, 588, 581, 622,
	-406, 245, 136, 137, 257, 26, 42, 89, 88, 89,
	88, 89, 89, 88, -289, -288, -45, -44, -352, -352,
	96, -385, 90, 90, 304, -420, 90, 241, -192, 77,
	77, 77, -115, 694, 96, 87, -3, 82, -146, 87,
	20, -341, -219, -376, -327, -377, -328, -329, -5, -6,
	-353, -118, 58, 101, -63, 45, 240, 674, 675, 127,
	-425, 687, -368, -256, -372, -374, -192, -149, -425, -148,
	-150, -157, 166, 167, 262, 359, 360, -220, -192, -139,
	290, 298, 87, -143, 92, -388, 78, 281, 393, 281,
	90, -410, 326, 90, -410, -410, 90, -410, 90, -410,
	-410, -192, -86, -49, -192, -284, -284, 34, -385, -426,
	-164, -156, -127, 162, 541, -318, 547, -326, -326, -326,
	-336, -326, 349, -326, 349, -326, -426, -426, -426, 88,
	-426, 23, -426, -146, 88, -123, 484, 88, 88, -426,
	87, 87, -146, -426, -426, -426, 88, -426, -426, -426,
	-426, -426, 88, -426, -426, -426, 88, -316, 633, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -95,
	-296, -295, -96, 597, 597, -426, -96, -228, 88, -426,
	-426, 88, -426, 88, 88, -426, 88, -426, 88, -426,
	-426, -426, -426, 88, -197, 23, -197, -197, -426, -262,
	-192, -200, -229, 17, -242, 52, 369, -253, -252, 56,
	48, -250, 20, 50, 20, 31, -267, 88, 151, 88,
	-426, -426, 88, 58, 221, -426, -200, -183, -182, 77,
	78, -184, 77, -182, 67, 67, -257, 88, -265, -170,
	-200, -200, 221, 119, -425, -151, -163, -149, 13, 90,
	90, -385, -404, 678, 679, 32, 96, -352, -352, 137,
	137, -192, 87, -331, 90, -331, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, 87, 151, -192, -192,
	-192, -192, -373, 87, 20, -146, 87, 151, 89, -256,
	-256, 277, 162, -352, 672, 283, 283, -352, -352, -352,
	-117, -116, 694, 89, -426, 88, -339, 541, 544, -146,
	-158, -158, -257, 89, -381, 541, -387, -295, -295, -295,
	-295, 96, 98, 90, -426, 539, 74, 542, -426, -331,
	-146, -146, -146, -236, 90, -146, -146, 96, 96, -426,
	-146, -211, -146, -426, -180, -179, -181, 655, 119, 32,
	-315, -426, -213, 275, -102, -101, -100, 15, -426, -146,
	-146, -146, -146, -146, -146, -146, -425, 67, 19, 17,
	-425, -425, -304, -229, -230, 18, 20, -243, 54, -241,
	53, -241, -252, 20, 20, 90, 20, 90, 137, -276,
	-146, -216, 58, -11, -295, -214, -295, -231, -146, 87,
	-146, -160, -200, -200, -146, -206, 508, 510, 511, 512,
	509, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 513, 487, 108, 110, 109, 488, 489, 490, 363,
	535, 536, 530, 533, 534, 532, 531, 378, 379, 491,
	492, 493, 111, 112, 113, 114, 115, 116, 117, 494,
	497, 495, 498, 499, 500, 505, 506, 501, 502, 503,
	504, 507, 524, 525, 526, 527, 528, 529, 634, 635,
	636, 637, 638, 639, 640, 641, 90, 90, 87, -146,
	89, 89, -418, -421, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 90, -257, -372, -60, 89, -258, -256,
	96, 89, 278, -215, -425, 90, -352, -352, -352, 96,
	96, -303, -426, 88, -295, -406, -374, 545, 545, -426,
	26, -380, -379, -297, 87, 78, 63, 540, 543, -426,
	-426, 88, -426, -426, -426, 89, 89, -426, -426, -426,
	88, -426, -179, -181, -426, 77, -160, -231, 20, -99,
	300, 302, -99, -426, 88, -426, -426, 88, -426, 88,
	-426, -426, -259, -426, -295, 245, 20, 20, -259, -259,
	-199, -230, -109, -108, -107, 571, -146, -211, -244, 55,
	77, 122, 90, 90, 90, 13, -214, 221, -236, -256,
	-177, 400, -231, -426, -256, 89, 89, 88, 151, 26,
	89, 696, 137, 89, -215, -126, -425, 274, -303, 90,
	90, -116, -119, -11, 88, 151, -256, -192, 63, -146,
	-211, -426, 77, 552, 655, -94, -93, -90, 666, 692,
	-211, -96, -96, -146, -146, -146, 88, -426, -426, -426,
	-109, 88, -106, -105, -295, 77, 122, -268, -295, 89,
	-426, -425, -236, 89, -240, 273, -421, 90, -11, 87,
	-3, 274, -327, -377, -328, -329, -5, -6, -353, -84,
	541, -379, -357, -297, 90, 96, 89, 541, -426, -426,
	-92, 145, 664, 630, -147, -158, -155, 220, -426, 88,
	-426, 88, -426, 88, -295, 245, -107, 88, 26, -304,
	-178, -176, -295, 594, -397, -396, 537, -407, -403, 119,
	143, 101, -405, 632, 588, 128, 129, 87, 151, -84,
	-146, 87, -426, -85, 289, 649, -388, 542, -92, 665,
	608, 583, 608, 583, -146, -146, -146, -105, -425, -426,
	88, 23, -319, -62, 605, -394, -395, 77, -398, 406,
	604, 625, 119, 90, -419, -422, 252, 316, 90, 89,
	-256, 250, -381, 543, 142, -426, 88, -426, 88, -426,
	-95, -176, 601, -332, -160, -395, 77, -394, 77, 14,
	13, 89, 88, 151, -4, 695, 89, 291, -92, -146,
	-146, -426, -61, 27, -177, -393, 258, 253, 256, 33,
	-393, -422, 90, 96, -4, -426, -426, 605, 252, 32,
	119, 151, -160, 90, -180, -179, -179,
}

var yyDef = [...]int{
	953, -2, -2, 955, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 74, 76, 77, 953, 953, 953, 0,
	953, 0, 0, 953, -2, -2, 953, 1570, 0, 953,
	0, 0, 0, 0, 0, -2, 866, 872, 0, 881,
	-2, 0, 0, 953, 953, 2144, 2144, 948, 0, 0,
	0, 0, 0, 953, 953, 953, 953, 1427, 54, 953,
	0, 89, 90, 901, 902, 903, 69, 0, 2142, 954,
	1, 3, 75, 79, 0, 0, 0, 62, 1436, 0,
	82, 0, 0, 957, 0, 0, 1553, 953, 953, 0,
	152, 153, 154, 0, 0, 0, 953, 0, 1551, -2,
	158, -2, 187, 188, 189, 0, 194, 662, 550, 602,
	548, 587, -2, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 426, 426, 0,
	0, -2, 536, 536, 536, 1555, 0, 0, 0, 584,
	488, 426, 426, 426, 0, 426, 426, 426, 426, 0,
	0, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 1454, 193,
	1571, 1568, 1569, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 0, 1547, 0, 775,
	1056, 0, 0, 780, 0, 0, 783, 784, 855, 786,
	787, 855, 0, 855, 855, 855, 855, 0, 0, 0,
	797, 0, 0, 0, 0, 852, 0, 813, 814, 0,
	852, 852, 852, 0, 0, 825, 858, 0, 0, 831,
	855, 855, 855, 835, 836, 2145, 0, 2145, 2145, 1538,
	0, 849, 847, 861, 862, 44, 865, 868, 869, 870,
	871, 874, 0, 885, 888, 1564, 1565, 0, 890, 897,
	914, 915, 0, 949, 950, 49, 1204, 0, 1078, 1083,
	1094, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 0,
	0, 0, 0, 1122, 1123, 0, 0, 0, 0, 0,
	1185, 1131, 0, 0, 0, 0, 1400, 0, 0, 1361,
	1361, 1219, 1361, 1363, 1363, 1778, 1914, 1922, 2044, 1740,
	1745, 1746, 1747, 2037, 2038, 2039, 2040, 2080, 2081, 2085,
	1838, 0, 0, 0, 2140, 1875, 1883, 1884, 1908, 2009,
	2065, 1757, 1903, 1974, 1835, 1857, 1858, 1991, 1992, 1879,
	1880, 1861, 1873, 1876, 1864, 1865, 1867, 1869, 1874, 1881,
	1887, 1866, 1886, 1885, 0, 1862, 1863, 1868, 1878, 1882,
	1870, 1871, 1872, 1877, 1888, 0, 0, 0, 0, 0,
	1300, 1301, 1302, 1303, 0, 0, 0, 0, 0, 0,
	0, 318, 319, 1413, 1414, 47, 48, 1203, 1534, 1363,
	1363, 1363, 1363, 1363, 1145, 1146, 1147, 1148, 1149, 1173,
	1174, 1180, 1181, 1986, 1987, 1988, 1989, 1819, 2074, 1827,
	1828, 1969, 1970, 1840, 1841, 2115, 2116, -2, -2, -2,
	259, 260, 261, 262, 263, 264, 265, 266, 0, 1782,
	2055, 2056, 255, 0, 0, 323, 324, 320, 321, 322,
	1187, 1188, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
	314, 315, 316, 317, 2144, 0, 924, 0, 0, 0,
	0, 0, 1436, 0, 1428, 1427, 67, 0, -2, 0,
	0, 0, 0, 51, 0, 56, 1013, 956, 81, 80,
	1485, 0, 0, 0, 63, 1437, 71, 73, 1438, 0,
	958, 959, 0, 989, 993, 0, 0, 0, 1554, 1553,
	1553, 106, 0, 0, 107, 127, 128, 129, 0, 0,
	113, 114, 1540, 1541, 155, 0, 0, 205, 206, 0,
	45, 453, 0, 201, 975, 0, 446, 385, 0, 0,
	0, 1454, 0, 0, 0, 0, 0, 953, 0, 1548,
	182, 183, 190, 191, 192, 426, 426, 426, 599, 0,
	0, 193, 193, 557, 558, 559, 0, 0, -2, 451,
	0, 537, 0, 0, 440, 440, 444, 442, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 427, 0, 597, 598, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 1556, 1557, 0, 574, 575, 0,
	0, 0, 426, 426, 0, 0, 0, 0, 426, 426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 1476,
	0, 0, 0, 0, 0, -2, 0, 767, 0, 0,
	0, 1549, 1549, 0, 774, 0, 776, 1467, 778, 781,
	782, 785, 0, 0, 788, 0, 852, 852, 850, 851,
	790, 791, 792, 793, 855, 0, 0, 435, 436, 437,
	852, 855, 0, 855, 855, 855, 855, 852, 852, 852,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 858, 855, 855, 0, 855, 821, 0, 826, 0,
	827, 828, 829, 832, 833, 834, 837, 2146, 2147, 1566,
	1567, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 2145, 2145, 841, 845,
	1539, 867, 873, 875, 876, 0, 0, 886, 889, 908,
	53, 1826, 896, 53, 898, 899, 900, 927, 928, 933,
	0, 0, 0, 0, 939, 940, 941, 942, 0, 0,
	945, 946, 947, 0, 0, 0, 0, 0, 1076, 0,
	0, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	1118, 1119, 1120, 1121, 1124, 0, 1136, 0, 1138, 1409,
	-2, 0, 0, 0, 1129, 1130, 0, 0, 0, 0,
	0, 0, 0, 1401, 0, 0, 1217, 0, 1218, 1220,
	1221, 0, 1222, 963, 963, 963, 963, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	0, 973, 973, 0, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 270, 271, 272,
	325, 273, 274, 275, 1203, 0, 0, 0, 50, 916,
	917, 0, 1039, 1559, 0, 0, 0, 969, 0, 61,
	70, 72, 1436, 65, 1436, 0, 0, 0, -2, -2,
	976, 982, 983, 984, 985, 986, 58, 2143, 59, 0,
	78, 0, 52, 0, 0, 0, 0, 399, 1488, 0,
	0, 1429, 1430, 1433, 0, 990, 1920, 994, 0, 996,
	997, 0, 0, 104, 0, 1055, 0, 0, 0, 115,
	0, 117, 118, 0, 0, 0, 410, 1542, 1543, 1544,
	-2, 433, 0, 410, 394, 333, 334, 335, 385, 337,
	385, 385, 385, 385, 399, 399, 399, 399, 368, 369,
	370, 371, 372, 0, 0, 354, 385, 385, 385, 385,
	375, 376, 377, 378, 379, 380, 381, 382, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 387, 387, 387,
	387, 387, 391, 391, 0, 46, 0, 980, 981, 414,
	0, 1433, 0, 0, 0, 0, 1476, 1551, 1561, 0,
	0, 0, 1551, 160, 0, 0, 0, 600, 673, 551,
	588, 601, 0, 554, 555, -2, 0, 0, 536, 0,
	538, 0, 434, 0, -2, 0, 444, 0, 440, 444,
	441, 444, 432, 445, 578, 579, 580, 0, 582, 583,
	703, 1025, 0, 0, 0, 0, 0, 709, 710, 711,
	0, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 589, 590, 591, 592, 593, 594, 595, 596, 0,
	0, 0, 0, 538, 0, 585, 0, 0, 490, 491,
	492, 0, 0, 495, 496, 497, 498, 0, 0, 501,
	502, 503, 1042, 1043, 504, 505, 530, 531, 532, 506,
	507, 508, 509, 510, 511, 512, 524, 525, 526, 527,
	528, 529, 513, 514, 515, 516, 517, 518, 521, 0,
	175, 1458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 972,
	1057, 1572, 1573, 777, 0, 1468, 0, 1471, 1472, 1473,
	1474, 1475, 856, 857, 0, 438, 439, 855, 855, 794,
	842, 0, 855, 798, 843, 799, 801, 800, 802, 815,
	816, 855, 805, 853, 854, 806, 807, 808, 809, 810,
	811, 812, 838, 817, 818, 819, 824, 820, 822, 823,
	859, 0, 863, 864, 839, 840, 0, 0, 879, 880,
	0, 887, 911, 909, 910, 912, 904, 905, 906, 907,
	0, 913, 0, 0, 930, 100, 935, 936, 937, 938,
	951, 944, 1205, 1073, 1074, 1075, 0, 1077, 1080, 0,
	1189, 1191, 1082, 1084, 1200, 1201, 1202, 0, 0, 0,
	0, 0, 1088, 1092, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1114, 1377, 1378, 1379,
	1133, 326, 327, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 1204, 1135, 0, 987, 0, 0, 1407, 1404,
	0, 0, 0, 1362, 1364, 0, 0, 0, 0, 964,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1380, 0, 0, 0, 0, 0, 1400, 0, 1140, 1141,
	1142, 0, 0, 0, 0, 0, 0, 1260, 0, 0,
	0, 0, 1560, 0, 170, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1304, 1305, 1306, 1307, 43, 0, 0, 0,
	974, 1411, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 919, 920,
	922, 0, 1059, 0, 1040, 0, 0, 925, 926, 0,
	968, 0, 971, 64, 66, 0, 998, 977, 60, 55,
	0, 0, 1017, 1486, 399, 1508, 0, 408, 408, 405,
	1439, 1440, 0, 1432, 1434, 1435, 83, 995, 991, 0,
	1071, 0, 0, 1054, 0, 1001, 1003, 1004, 1005, 1037,
	0, 1008, 1009, 0, 0, 0, 0, 0, 102, 1056,
	108, 0, 116, 0, 0, 121, 122, 109, 110, 111,
	112, 0, 662, -2, 485, 207, 209, 210, 211, 202,
	-2, 397, 395, 396, 336, 399, 399, 362, 363, 364,
	365, 366, 367, 0, 0, 355, 356, 357, 358, 347,
	0, 348, 349, 350, 389, 0, 351, 352, 0, 353,
	452, 0, 1441, 415, 416, 418, 426, 0, 421, 422,
	0, 426, 426, 0, 447, 448, 0, 1433, 0, 0,
	133, 134, 135, 136, 1552, 1458, 0, 0, 1562, 1561,
	1561, 1561, 0, 195, 196, 197, 198, 199, 200, 698,
	0, 0, 674, 696, 697, 193, 0, 0, 203, 540,
	539, 0, 730, 0, 450, 0, 0, 444, 444, 429,
	430, 581, 0, 0, 705, 706, 707, 708, 0, 0,
	0, 567, 479, 0, 568, 569, 538, 540, 0, 0,
	410, 493, 494, 499, 500, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 615, 616,
	619, 621, 622, 623, 542, 629, 618, 620, 624, 625,
	626, 542, 630, 631, 633, 634, 635, 542, 641, 0,
	632, 636, 637, 638, 542, 642, 645, 646, 647, 650,
	652, 653, 654, 542, 660, 649, 651, 655, 656, 657,
	542, 661, 1455, 1456, 1457, 0, 0, 768, 0, 0,
	476, 98, 1550, 773, 1469, 779, 1470, 852, 804, 844,
	852, 796, 803, 830, 877, 878, 883, 891, 892, 893,
	894, 895, 934, 0, 0, 0, 0, 943, 0, 0,
	1081, 1190, 1192, 1085, 0, 1089, 1093, 0, 0, 0,
	1139, 1137, 1411, 0, 0, 0, 1186, 0, 0, 1208,
	1209, 0, 0, 0, 1405, 0, 0, 1215, 0, 1365,
	1366, 1223, 0, 0, 0, 0, 0, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1427, 0, 0,
	0, 0, 0, 1244, 1245, 1246, 1247, 1248, 0, 1250,
	0, 1251, 0, 0, 0, 0, 1258, 1259, 1261, 0,
	0, 1264, 1265, 0, 0, 1266, 0, 0, 0, 1270,
	0, 0, 0, 0, 1279, 1280, 1281, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 1294,
	0, 1168, 0, 0, 1168, 0, 1206, 973, 0, 1367,
	1368, 1369, 1370, 1371, 0, 0, 0, 0, 0, 0,
	1327, 1328, 1330, 0, 0, 1333, 0, 1335, 0, 1533,
	918, 921, 923, 1011, 1060, 1061, 0, 0, 0, 0,
	1041, 1558, 966, 967, 970, 1019, 0, 1415, 0, 0,
	998, 1071, 999, 0, 978, 57, 1014, 0, 1490, 1489,
	1502, 1515, 408, 408, 402, 403, 409, 404, 406, 407,
	1431, 0, 1436, 0, 1526, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 1047,
	0, 0, 0, 0, 1038, 1009, 0, 1010, 0, -2,
	0, 0, 96, 97, 0, 0, 0, 119, 120, 0,
	0, 126, 411, 412, 184, 193, 487, 208, 460, 0,
	0, 332, 398, 359, 360, 361, 0, 383, 0, 0,
	0, 0, 481, 156, 1445, 1444, 426, 426, 417, 0,
	420, 0, 0, 0, 1563, 386, 449, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 180, 668, 0, 0,
	675, 0, 0, 0, 549, 0, 560, 561, 0, 702,
	-2, 764, 414, 0, 428, 431, 1026, 0, 0, 562,
	0, 565, 566, 480, 540, 571, 572, 586, 573, 522,
	523, 520, 0, 0, 1477, 1478, 1483, 1481, 1482, 161,
	607, 609, 608, 612, 0, 0, 0, 544, 0, 544,
	544, 0, 544, 0, 544, 544, 605, 0, 476, 1441,
	0, 772, 477, 478, 855, 855, 929, 101, 0, 932,
	0, 0, 0, 0, 1086, 1090, 1372, 1398, 385, 385,
	1385, 385, 391, 1388, 385, 1390, 385, 1393, 385, 1396,
	1397, 0, 0, 0, 988, 0, 0, 1214, 1408, 0,
	0, 1224, 1225, 1226, 1227, 1228, 1402, 0, 0, 0,
	1243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 1167, 0, 1169, 1170, 0, 0, 1296, 0, 0,
	1308, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1062, 1067, 1067, 1067, 0, 0, 0,
	1545, 1546, 1416, 1417, 1071, 1418, 1000, 979, 1018, 1508,
	0, 1501, 0, -2, 1510, 0, 0, 0, 1516, 400,
	401, 992, 84, 1072, 87, 0, 1526, 1535, 0, 1517,
	1528, 1530, 0, 0, 0, 1522, 0, 1071, 1002, 1033,
	1035, 0, 1030, 1045, 1046, 1048, 0, 1050, 0, 1052,
	1053, 1013, 1007, 0, 104, 0, 1071, 1071, 103, 0,
	1058, 123, 124, 125, 486, 212, 217, 0, 0, 0,
	222, 0, 224, 0, 0, 0, 229, 230, 426, 426,
	461, 0, 329, 331, 0, 0, 215, 399, 0, 399,
	0, 390, 392, 0, 462, 482, 1442, 1443, 0, 0,
	419, 423, 424, 425, 0, 0, 131, 0, 176, 0,
	0, 0, 671, 0, 699, 0, 0, 0, 0, 0,
	0, 204, 541, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 0, 426, 0, 0, 0, 426, 426, 426,
	0, 756, 413, 0, 0, 727, 724, 563, 0, 253,
	254, 256, 0, 0, 0, 0, 0, 570, 1013, 1459,
	1460, 1461, 0, 1480, 1484, 164, 0, 0, 0, 0,
	617, 627, 0, 543, 628, 639, 643, 640, 648, 658,
	659, 769, 770, 771, 99, 789, 795, 931, 952, 1079,
	1087, 1091, 0, 0, 0, 0, 1399, 1383, 399, 1386,
	1387, 1389, 1391, 1392, 1394, 1395, 1127, 1128, 1132, 0,
	1211, 0, 1213, 1406, 0, 1436, 0, 0, 0, 1242,
	0, 0, 0, 1253, 1252, 1254, 0, 1256, 1257, 1262,
	1263, 1267, 0, 1269, 1271, 1272, 0, 0, 0, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 0,
	1161, 1164, 1295, 1171, 1172, 1177, 1298, 0, 0, 1207,
	1310, 0, 1315, 0, 0, 1321, 0, 1325, 0, 1331,
	1332, 1334, 1336, 0, 0, 0, 0, 0, 1039, 1020,
	68, 1418, 1420, 0, 1495, 1493, 1493, 1503, 1504, 0,
	0, 1511, 0, 0, 0, 0, 88, 0, 0, 0,
	1531, 0, 0, 0, 0, 105, 1427, 1027, 1034, 0,
	0, 1028, 0, 1029, 1049, 1051, 1006, 0, 1071, 1071,
	94, 95, 0, 218, 0, 220, 246, 247, 0, 223,
	225, 226, 227, 233, 234, 235, 228, 0, 0, 328,
	330, 0, 0, 373, 384, 374, 0, 0, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 0, 0, 1013, 177,
	178, 179, 663, 0, 673, 0, 1015, 0, 666, 0,
	552, 0, 0, 0, 426, 426, 426, 0, 0, 0,
	0, 741, 0, 0, 704, 0, 712, 0, 0, 0,
	257, 258, 0, 1479, 606, 0, 162, 163, 0, 0,
	611, 545, 546, 644, 1125, 0, 0, 0, 1126, 1384,
	0, 0, 0, 0, 1403, 0, 0, 0, 0, 1249,
	0, 0, 0, 1275, 0, 0, 0, 693, 694, 0,
	1339, 1166, 1427, 0, 1168, 1178, 1179, 0, 1168, 1309,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	0, 0, 1059, 1420, 1425, 0, 0, 1498, 0, 1491,
	1494, 1492, 1505, 0, 0, 1512, 0, 1514, 0, 1536,
	1537, 1529, 0, 1521, 1524, 1520, 1523, 1436, 1031, 0,
	1036, 0, 1427, 93, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 232, 0, 0,
	388, 393, 0, 0, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 132, 0, 0, 0, 664, 0, 1016,
	676, 667, 0, 754, 0, 758, 0, 0, 0, 761,
	762, 763, 740, 0, 744, 454, 728, 725, 726, 564,
	0, 165, 166, 0, 0, 0, 1373, 0, 1376, 1210,
	1212, 0, 1239, 1240, 1241, 1381, 1382, 1255, 1268, 1273,
	0, 1276, 0, 0, 1277, 0, 695, 1157, 0, 0,
	1175, 1176, 0, 1311, 0, 1316, 1317, 0, 1322, 0,
	1326, 1337, 0, 1064, 1021, 1022, 1069, 1070, 0, 0,
	1012, 1425, 86, 1426, 1423, 0, 1421, 1419, 1487, 0,
	1496, 1497, 1506, 1507, 1513, 0, 1519, 0, 91, 0,
	0, 0, 1436, 219, 0, 238, 0, 0, 0, 0,
	672, 0, 675, 665, 752, 753, 0, 765, 757, 759,
	760, 742, -2, 1462, 0, 0, 0, 613, 1374, 0,
	0, 1278, 0, 691, 692, 1165, 1158, 0, 1143, 1144,
	1162, 1297, 1299, 0, 0, 0, 0, 1063, 1065, 1066,
	85, 0, 1422, 1183, 0, 1499, 1500, 1527, 1525, 1032,
	1039, 0, 92, 467, 460, 0, 0, 137, 1462, 0,
	0, 0, 745, 746, 747, 748, 749, 750, 751, 603,
	1464, 167, 168, 533, 534, 535, 161, 0, 1216, 1274,
	1159, 0, 0, 0, 0, 1155, 1156, 0, 1312, 0,
	1318, 0, 1323, 0, 1023, 1024, 1424, 0, 0, 677,
	0, 679, 0, -2, 455, 468, 0, 213, 239, 240,
	0, 0, 243, 244, 245, 236, 237, 0, 0, 157,
	0, 0, 766, 0, 1465, 1466, 164, 0, 0, 1150,
	1151, 1152, 1153, 1154, 0, 0, 0, 1184, 1163, 678,
	0, 0, 410, 0, 688, 456, 457, 0, 463, 464,
	465, 466, 241, 242, 0, 0, 150, 151, 138, 700,
	0, 0, 610, 1375, 0, 1313, 0, 1319, 0, 1324,
	0, 680, 681, 689, 0, 458, 0, 459, 0, 0,
	0, 130, 0, 0, 669, 0, 700, 1463, 1160, 0,
	0, 1182, 0, 690, 686, 469, 471, 472, 0, 0,
	470, 0, 148, 701, 670, 1314, 1320, 0, 473, 474,
	475, 0, 682, 149, 683, 684, 685,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 697,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:659
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:664
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:705
		{
			setParseTree(yylex, nil)
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:711
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:722
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:732
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:736
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:742
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:748
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:754
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:758
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:767
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:773
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:777
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:783
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:883
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:889
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:893
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:898
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:908
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:917
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:923
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:929
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:950
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:954
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:984
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:988
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1008
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1022
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1032
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1042
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1055
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1067
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1077
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1095
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1099
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1103
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1109
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1113
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1119
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1129
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1133
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1137
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1143
		{
			yyVAL.str = RepeatableReadStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yyVAL.str = ReadCommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.str = SerializableStr
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1161
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1165
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1169
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1175
		{
			yyLOCAL = &CreateFilter{Name: yyDollar[5].createFilterUnion().Name, Description: yyDollar[5].createFilterUnion().Description, Priority: yyDollar[5].createFilterUnion().Priority, Status: yyDollar[5].createFilterUnion().Status, IfNotExists: yyDollar[3].booleanUnion(), Pattern: yyDollar[9].filterPatternUnion(), Action: yyDollar[13].filterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateFilter
//line sql.y:1181
		{
			if yyDollar[1].str == "name" {
				yyLOCAL = &CreateFilter{Name: yyDollar[3].str}
			}
			if yyDollar[1].str == "description" {
				yyLOCAL = &CreateFilter{Description: yyDollar[3].str}
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL = &CreateFilter{Priority: yyDollar[3].str}
			}
			if yyDollar[1].str == "status" {
				yyLOCAL = &CreateFilter{Status: yyDollar[3].str}
			}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1196
		{
			if yyDollar[3].str == "name" {
				yyVAL.createFilterUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.createFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createFilterUnion().Status = yyDollar[5].str
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1213
		{
			yyVAL.str = "name"
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.str = "description"
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = "priority"
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = "status"
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *FilterPattern
//line sql.y:1231
		{
			if yyDollar[1].str == "plans" {
				yyLOCAL = &FilterPattern{Plans: yyDollar[3].str}
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL = &FilterPattern{FullyQualifiedTableNames: yyDollar[3].str}
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL = &FilterPattern{QueryRegex: yyDollar[3].str}
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL = &FilterPattern{QueryTemplate: yyDollar[3].str}
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL = &FilterPattern{RequestIpRegex: yyDollar[3].str}
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL = &FilterPattern{UserRegex: yyDollar[3].str}
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL = &FilterPattern{LeadingCommentRegex: yyDollar[3].str}
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL = &FilterPattern{TrailingCommentRegex: yyDollar[3].str}
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL = &FilterPattern{BindVarConds: yyDollar[3].str}
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1261
		{
			if yyDollar[3].str == "plans" {
				yyVAL.filterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.filterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.filterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.filterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.filterPatternUnion().RequestIpRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.filterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.filterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.filterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.filterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = "plans"
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = "query_regex"
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.str = "query_template"
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.str = "request_ip_regex"
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.str = "user_regex"
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.str = "bind_var_conds"
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *FilterAction
//line sql.y:1332
		{
			yyLOCAL = &FilterAction{}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1342
		{
			if yyDollar[3].str == "action" {
				yyVAL.filterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.filterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1353
		{
			yyVAL.str = "action"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.str = "action_args"
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1364
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1370
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1377
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1382
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1387
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1396
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1400
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1416
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1431
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1436
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1442
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1462
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1468
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1484
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1491
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1498
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1503
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1508
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1513
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1520
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1527
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1538
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1549
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1555
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1559
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1563
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1591
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1595
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1601
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1605
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1611
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1615
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1621
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1625
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1631
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1641
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1646
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1655
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1678
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1687
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = ""
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1709
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1713
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1719
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1725
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1730
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1735
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1740
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1745
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1750
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1759
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1768
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1773
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1779
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1785
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1789
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1795
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1799
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1803
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1809
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1813
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1818
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1822
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1827
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1833
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1839
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1844
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1849
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1855
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1863
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1870
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1874
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1878
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1882
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1886
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1896
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1903
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1907
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1962
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1979
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = Armscii8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = ASCIIStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = Big5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = UBinaryStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = Cp1250Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = Cp1251Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = Cp1256Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = Cp1257Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = Cp850Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = Cp852Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = Cp866Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = Cp932Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = Dec8Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = EucjpmsStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = EuckrStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = Gb18030Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = Gb2312Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = GbkStr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = Geostd8Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = GreekStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = HebrewStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = Hp8Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = Keybcs2Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = Koi8rStr
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = Koi8uStr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = Latin1Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = Latin2Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = Latin5Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = Latin7Str
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = MacceStr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = MacromanStr
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = SjisStr
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = Swe7Str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = Tis620Str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = Ucs2Str
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = UjisStr
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = Utf16Str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = Utf16leStr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = Utf32Str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = Utf8Str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = Utf8mb4Str
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = Utf8Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2159
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2163
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2167
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2173
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2177
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2181
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2187
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2191
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2198
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2202
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2206
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2210
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2459
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2464
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2468
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2498
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2510
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2593
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2602
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2608
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2618
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2622
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2627
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2631
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2635
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2639
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2643
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2647
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2663
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2667
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2671
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2675
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2679
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = yyDollar[2].str
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = "key"
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = yyDollar[1].str
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2746
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2756
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2760
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2766
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2770
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2776
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2780
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2786
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2792
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2796
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2800
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2804
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2808
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2817
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2823
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2829
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2835
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2839
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2843
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2848
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2852
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2858
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2864
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2870
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2874
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2878
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2882
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2886
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2905
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2918
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2927
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2933
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2947
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2961
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2965
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2969
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2993
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2997
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3025
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3029
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3033
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3037
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3041
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3045
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3049
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3053
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3057
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3061
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3065
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3069
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3073
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3077
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3086
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3141
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3159
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3163
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3172
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3176
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3180
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3184
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3188
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3194
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3208
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3212
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3216
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3220
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3224
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3228
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3232
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3236
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3240
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3244
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3249
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3254
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3258
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3262
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3266
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3270
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3274
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3278
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3282
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3286
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3290
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3294
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3298
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3302
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3306
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3310
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3314
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3318
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3322
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3326
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3330
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3336
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3346
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3350
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3354
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3358
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3362
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3366
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3370
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3374
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3378
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3382
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3521
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3594
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3668
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3680
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3862
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3871
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3879
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3888
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3895
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3907
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3916
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3931
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3945
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3949
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3955
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3961
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3967
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3977
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3981
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3987
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3993
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3999
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4005
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4029
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4035
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4041
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4045
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4049
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4055
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4059
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4064
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4068
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4073
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4077
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4083
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4087
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4091
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4095
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4099
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4103
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4107
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4111
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4115
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4119
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4123
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4127
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4131
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4135
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4139
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4143
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4147
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4151
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4155
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4159
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4163
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4167
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4186
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4190
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4201
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4205
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4210
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4215
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4220
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4225
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4230
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4236
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4242
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4247
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4253
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4259
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4269
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4274
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4278
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4283
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4288
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4293
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4298
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4304
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4310
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4317
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4324
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4331
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4339
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4343
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4349
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4355
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4361
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4367
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4373
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4379
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4391
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4413
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4417
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4436
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4440
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4450
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4456
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4468
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4478
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4526
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4554
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4566
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4606
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4610
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4618
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4622
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4626
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4630
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4642
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4650
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4654
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4658
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4662
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4666
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4670
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4674
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4678
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4682
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4686
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4690
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4694
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4698
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4702
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4706
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4713
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4717
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4721
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4725
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4729
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4733
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4737
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4741
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4745
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4751
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = "extended "
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4789
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4799
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4803
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4813
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4819
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4843
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4851
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4877
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4881
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4890
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4896
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4906
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4910
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4914
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4921
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4927
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4931
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4936
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4941
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4947
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4953
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4958
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4962
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4966
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4970
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4974
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4978
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4982
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4987
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4991
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4995
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4999
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = yyDollar[1].str
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = yyDollar[1].str
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5019
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5023
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5027
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5031
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = ""
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5050
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5054
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5060
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5066
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5070
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5076
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5082
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5092
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5098
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5102
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5106
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5110
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5116
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5122
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5126
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5132
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5136
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5140
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5144
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5148
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5152
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5168
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5172
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5221
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5225
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5234
		{
			yyVAL.str = ""
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5243
		{
			setAllowComments(yylex, true)
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5253
		{
			yyVAL.strs = nil
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5263
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = SQLCacheStr
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5293
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5303
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5307
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5317
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5326
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5332
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5336
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5345
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5350
		{
			yyVAL.strs = nil
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5358
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5366
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = SQLCacheStr
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = DistinctStr
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = DistinctStr
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5388
		{
			yyVAL.str = StraightJoinHint
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5396
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5402
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5406
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5412
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5416
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5420
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5424
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5429
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5437
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5449
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5459
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5465
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5469
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5479
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5483
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5487
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5491
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5497
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5501
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5507
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5511
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5520
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5529
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5535
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5539
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5545
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5549
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5555
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5559
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5573
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5577
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5590
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5594
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5598
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5602
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5610
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5614
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5622
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5625
		{
			yyVAL.empty = struct{}{}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5627
		{
			yyVAL.empty = struct{}{}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5630
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5638
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5651
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5655
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5659
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5665
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5671
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5675
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5679
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5683
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5689
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5693
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5703
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5707
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5717
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5723
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5732
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5738
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5742
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5748
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5752
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5756
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5760
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5765
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5769
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5773
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5777
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5888
		{
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5891
		{
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6067
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6071
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6077
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6087
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6091
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6095
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6101
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6105
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6112
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6116
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6120
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6124
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6128
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6134
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6138
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6142
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6146
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6150
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6169
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6175
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6179
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6188
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6193
		{
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6196
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6202
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6208
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6212
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6224
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6230
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6234
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6240
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6244
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6250
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6254
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6266
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6272
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6276
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6282
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6288
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6292
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6298
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6302
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6308
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6312
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6319
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6323
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6327
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6331
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6337
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6341
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6345
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6349
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6353
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6357
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6361
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6367
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6371
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6375
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6382
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6388
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6762
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6766
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6770
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6849
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6853
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6874
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6878
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6882
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6886
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6933
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6954
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6960
		{
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6962
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6966
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6970
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6974
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6978
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6982
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6986
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6990
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6994
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6998
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7002
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7008
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7012
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7016
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7020
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7024
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7028
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7032
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7036
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7040
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7058
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7062
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7085
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7089
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7095
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7099
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7103
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7107
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7111
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7117
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7121
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7135
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7153
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7157
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7161
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7195
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7199
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7213
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7222
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7227
		{
			yyVAL.str = string("")
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7231
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7237
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7241
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7247
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7262
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7266
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7270
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7274
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7280
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7284
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7290
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7313
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7322
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7328
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7334
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7338
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7347
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7356
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7362
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7368
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7372
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7378
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7383
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7387
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7391
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7400
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7406
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7410
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7414
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7423
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7427
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7431
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7435
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7445
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7449
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7453
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7457
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7463
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7467
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7471
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7475
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7480
		{
			yyVAL.str = ""
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7484
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7488
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7492
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7497
		{
			yyVAL.str = ""
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7501
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7507
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7516
		{
			yyVAL.str = ""
		}
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7520
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7525
		{
			yyVAL.str = "cascaded"
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7542
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7546
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7552
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7556
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7560
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7564
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7568
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7572
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7582
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7588
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7594
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7600
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7609
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = ""
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7628
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7632
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7638
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7642
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7646
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7651
		{
			yyVAL.str = ""
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7655
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7659
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = ""
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7668
		{
			yyVAL.str = " header"
		}
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7673
		{
			yyVAL.str = ""
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7677
		{
			yyVAL.str = " manifest on"
		}
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7681
		{
			yyVAL.str = " manifest off"
		}
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7686
		{
			yyVAL.str = ""
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7690
		{
			yyVAL.str = " overwrite on"
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7694
		{
			yyVAL.str = " overwrite off"
		}
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7700
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = ""
		}
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7709
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7719
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7725
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7734
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7748
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7754
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7758
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7762
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = ""
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7771
		{
			yyVAL.str = " optionally"
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7784
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7788
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7792
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7796
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7800
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7806
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7810
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7814
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7818
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7827
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7833
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7837
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7843
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7847
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7853
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7857
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7862
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7872
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7876
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7882
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7889
		{
			yyVAL.str = "charset"
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7899
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7903
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7907
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7916
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7918
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7926
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7928
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7931
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7936
		{
			yyVAL.empty = struct{}{}
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7938
		{
			yyVAL.empty = struct{}{}
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7940
		{
			yyVAL.empty = struct{}{}
		}
	case 1558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7944
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7953
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7960
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7964
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7970
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7974
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7981
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7987
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7991
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7997
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8001
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8008
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8604
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8613
		{
			decNesting(yylex)
		}
	case 2144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8618
		{
			skipToEnd(yylex)
		}
	case 2145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8623
		{
			skipToEnd(yylex)
		}
	case 2146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8627
		{
			skipToEnd(yylex)
		}
	case 2147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8631
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
