/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const FILTERS = 57629
const WITHPATTERN = 57630
const PRIORITY = 57631
const PLANS = 57632
const TABLE_NAME = 57633
const QUERY_REGEX = 57634
const QUERY_TEMPLATE = 57635
const REQUEST_IP_REGEX = 57636
const USER_REGEX = 57637
const LEADING_COMMENT_REGEX = 57638
const TRAILING_COMMENT_REGEX = 57639
const BIND_VAR_CONDS = 57640
const ACTION_ARGS = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const EXPIRE = 57650
const RATIO = 57651
const PAUSE = 57652
const RESUME = 57653
const SCHEMA_MIGRATION = 57654
const VITESS_THROTTLER = 57655
const DML_JOB = 57656
const DETAILS = 57657
const TIME_PERIOD = 57658
const BEGIN = 57659
const START = 57660
const TRANSACTION = 57661
const COMMIT = 57662
const ROLLBACK = 57663
const SAVEPOINT = 57664
const RELEASE = 57665
const WORK = 57666
const CONSISTENT = 57667
const SNAPSHOT = 57668
const BIT = 57669
const TINYINT = 57670
const SMALLINT = 57671
const MEDIUMINT = 57672
const INT = 57673
const INTEGER = 57674
const BIGINT = 57675
const INTNUM = 57676
const REAL = 57677
const DOUBLE = 57678
const FLOAT_TYPE = 57679
const FLOAT4_TYPE = 57680
const FLOAT8_TYPE = 57681
const DECIMAL_TYPE = 57682
const NUMERIC = 57683
const TIME = 57684
const TIMESTAMP = 57685
const DATETIME = 57686
const YEAR = 57687
const CHAR = 57688
const VARCHAR = 57689
const BOOL = 57690
const CHARACTER = 57691
const VARBINARY = 57692
const NCHAR = 57693
const TEXT = 57694
const TINYTEXT = 57695
const MEDIUMTEXT = 57696
const LONGTEXT = 57697
const BLOB = 57698
const TINYBLOB = 57699
const MEDIUMBLOB = 57700
const LONGBLOB = 57701
const JSON = 57702
const JSON_SCHEMA_VALID = 57703
const JSON_SCHEMA_VALIDATION_REPORT = 57704
const ENUM = 57705
const GEOMETRY = 57706
const POINT = 57707
const LINESTRING = 57708
const POLYGON = 57709
const GEOMCOLLECTION = 57710
const GEOMETRYCOLLECTION = 57711
const MULTIPOINT = 57712
const MULTILINESTRING = 57713
const MULTIPOLYGON = 57714
const ASCII = 57715
const UNICODE = 57716
const NULLX = 57717
const AUTO_INCREMENT = 57718
const APPROXNUM = 57719
const SIGNED = 57720
const UNSIGNED = 57721
const ZEROFILL = 57722
const CODE = 57723
const COLLATION = 57724
const COLUMNS = 57725
const DATABASES = 57726
const ENGINES = 57727
const EVENT = 57728
const EXTENDED = 57729
const FIELDS = 57730
const FULL = 57731
const FUNCTION = 57732
const GTID_EXECUTED = 57733
const KEYSPACES = 57734
const OPEN = 57735
const PLUGINS = 57736
const PRIVILEGES = 57737
const PROCESSLIST = 57738
const SCHEMAS = 57739
const TABLES = 57740
const TRIGGERS = 57741
const USER = 57742
const VGTID_EXECUTED = 57743
const VITESS_KEYSPACES = 57744
const VITESS_METADATA = 57745
const VITESS_MIGRATIONS = 57746
const VITESS_REPLICATION_STATUS = 57747
const VITESS_SHARDS = 57748
const VITESS_TABLETS = 57749
const VITESS_TARGET = 57750
const VSCHEMA = 57751
const VITESS_THROTTLED_APPS = 57752
const WORKLOAD = 57753
const LASTSEENGTID = 57754
const FAILPOINTS = 57755
const TABLETS_PLANS = 57756
const DML_JOBS = 57757
const NAMES = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const FAST = 57770
const QUICK = 57771
const CHANGED = 57772
const MEDIUM = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_DATE = 57776
const NOW = 57777
const CURRENT_TIME = 57778
const LOCALTIME = 57779
const LOCALTIMESTAMP = 57780
const CURRENT_USER = 57781
const UTC_DATE = 57782
const UTC_TIME = 57783
const UTC_TIMESTAMP = 57784
const DAY = 57785
const DAY_HOUR = 57786
const DAY_MICROSECOND = 57787
const DAY_MINUTE = 57788
const DAY_SECOND = 57789
const HOUR = 57790
const HOUR_MICROSECOND = 57791
const HOUR_MINUTE = 57792
const HOUR_SECOND = 57793
const MICROSECOND = 57794
const MINUTE = 57795
const MINUTE_MICROSECOND = 57796
const MINUTE_SECOND = 57797
const MONTH = 57798
const QUARTER = 57799
const SECOND = 57800
const SECOND_MICROSECOND = 57801
const YEAR_MONTH = 57802
const WEEK = 57803
const REPLACE = 57804
const CONVERT = 57805
const CAST = 57806
const SUBSTR = 57807
const SUBSTRING = 57808
const SEPARATOR = 57809
const TIMESTAMPADD = 57810
const TIMESTAMPDIFF = 57811
const WEIGHT_STRING = 57812
const LTRIM = 57813
const RTRIM = 57814
const TRIM = 57815
const JSON_ARRAY = 57816
const JSON_OBJECT = 57817
const JSON_QUOTE = 57818
const JSON_DEPTH = 57819
const JSON_TYPE = 57820
const JSON_LENGTH = 57821
const JSON_VALID = 57822
const JSON_ARRAY_APPEND = 57823
const JSON_ARRAY_INSERT = 57824
const JSON_INSERT = 57825
const JSON_MERGE = 57826
const JSON_MERGE_PATCH = 57827
const JSON_MERGE_PRESERVE = 57828
const JSON_REMOVE = 57829
const JSON_REPLACE = 57830
const JSON_SET = 57831
const JSON_UNQUOTE = 57832
const COUNT = 57833
const AVG = 57834
const MAX = 57835
const MIN = 57836
const SUM = 57837
const GROUP_CONCAT = 57838
const BIT_AND = 57839
const BIT_OR = 57840
const BIT_XOR = 57841
const STD = 57842
const STDDEV = 57843
const STDDEV_POP = 57844
const STDDEV_SAMP = 57845
const VAR_POP = 57846
const VAR_SAMP = 57847
const VARIANCE = 57848
const REGEXP_INSTR = 57849
const REGEXP_LIKE = 57850
const REGEXP_REPLACE = 57851
const REGEXP_SUBSTR = 57852
const ExtractValue = 57853
const UpdateXML = 57854
const GET_LOCK = 57855
const RELEASE_LOCK = 57856
const RELEASE_ALL_LOCKS = 57857
const IS_FREE_LOCK = 57858
const IS_USED_LOCK = 57859
const LOCATE = 57860
const POSITION = 57861
const MATCH = 57862
const AGAINST = 57863
const BOOLEAN = 57864
const LANGUAGE = 57865
const WITH = 57866
const QUERY = 57867
const EXPANSION = 57868
const WITHOUT = 57869
const VALIDATION = 57870
const UNUSED = 57871
const ARRAY = 57872
const BYTE = 57873
const CUME_DIST = 57874
const DESCRIPTION = 57875
const DENSE_RANK = 57876
const EMPTY = 57877
const EXCEPT = 57878
const FIRST_VALUE = 57879
const GROUPING = 57880
const GROUPS = 57881
const JSON_TABLE = 57882
const LAG = 57883
const LAST_VALUE = 57884
const LATERAL = 57885
const LEAD = 57886
const NTH_VALUE = 57887
const NTILE = 57888
const OF = 57889
const OVER = 57890
const PERCENT_RANK = 57891
const RANK = 57892
const RECURSIVE = 57893
const ROW_NUMBER = 57894
const SYSTEM = 57895
const WINDOW = 57896
const ACTIVE = 57897
const ADMIN = 57898
const AUTOEXTEND_SIZE = 57899
const BUCKETS = 57900
const CLONE = 57901
const COLUMN_FORMAT = 57902
const COMPONENT = 57903
const DEFINITION = 57904
const ENFORCED = 57905
const ENGINE_ATTRIBUTE = 57906
const EXCLUDE = 57907
const FOLLOWING = 57908
const GET_MASTER_PUBLIC_KEY = 57909
const HISTOGRAM = 57910
const HISTORY = 57911
const INACTIVE = 57912
const INVISIBLE = 57913
const LOCKED = 57914
const MASTER_COMPRESSION_ALGORITHMS = 57915
const MASTER_PUBLIC_KEY_PATH = 57916
const MASTER_TLS_CIPHERSUITES = 57917
const MASTER_ZSTD_COMPRESSION_LEVEL = 57918
const NESTED = 57919
const NETWORK_NAMESPACE = 57920
const NOWAIT = 57921
const NULLS = 57922
const OJ = 57923
const OLD = 57924
const OPTIONAL = 57925
const ORDINALITY = 57926
const ORGANIZATION = 57927
const OTHERS = 57928
const PARTIAL = 57929
const PATH = 57930
const PERSIST = 57931
const PERSIST_ONLY = 57932
const PRECEDING = 57933
const PRIVILEGE_CHECKS_USER = 57934
const PROCESS = 57935
const RANDOM = 57936
const REFERENCE = 57937
const REQUIRE_ROW_FORMAT = 57938
const RESOURCE = 57939
const RESPECT = 57940
const RESTART = 57941
const RETAIN = 57942
const REUSE = 57943
const ROLE = 57944
const SECONDARY = 57945
const SECONDARY_ENGINE = 57946
const SECONDARY_ENGINE_ATTRIBUTE = 57947
const SECONDARY_LOAD = 57948
const SECONDARY_UNLOAD = 57949
const SIMPLE = 57950
const SKIP = 57951
const SRID = 57952
const THREAD_PRIORITY = 57953
const TIES = 57954
const UNBOUNDED = 57955
const VCPU = 57956
const VISIBLE = 57957
const RETURNING = 57958
const FORMAT_BYTES = 57959
const FORMAT_PICO_TIME = 57960
const PS_CURRENT_THREAD_ID = 57961
const PS_THREAD_ID = 57962
const GTID_SUBSET = 57963
const GTID_SUBTRACT = 57964
const WAIT_FOR_EXECUTED_GTID_SET = 57965
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57966
const FORMAT = 57967
const TREE = 57968
const VITESS = 57969
const TRADITIONAL = 57970
const VTEXPLAIN = 57971
const VEXPLAIN = 57972
const PLAN = 57973
const LOCAL = 57974
const LOW_PRIORITY = 57975
const KILL = 57976
const USERS = 57977
const NO_WRITE_TO_BINLOG = 57978
const LOGS = 57979
const ERROR = 57980
const GENERAL = 57981
const HOSTS = 57982
const OPTIMIZER_COSTS = 57983
const USER_RESOURCES = 57984
const SLOW = 57985
const CHANNEL = 57986
const RELAY = 57987
const EXPORT = 57988
const CURRENT = 57989
const ROW = 57990
const ROWS = 57991
const AVG_ROW_LENGTH = 57992
const CONNECTION = 57993
const CHECKSUM = 57994
const DELAY_KEY_WRITE = 57995
const ENCRYPTION = 57996
const ENGINE = 57997
const INSERT_METHOD = 57998
const MAX_ROWS = 57999
const MIN_ROWS = 58000
const PACK_KEYS = 58001
const PASSWORD = 58002
const FIXED = 58003
const DYNAMIC = 58004
const COMPRESSED = 58005
const REDUNDANT = 58006
const COMPACT = 58007
const ROW_FORMAT = 58008
const STATS_AUTO_RECALC = 58009
const STATS_PERSISTENT = 58010
const STATS_SAMPLE_PAGES = 58011
const STORAGE = 58012
const MEMORY = 58013
const DISK = 58014
const PARTITIONS = 58015
const LINEAR = 58016
const RANGE = 58017
const LIST = 58018
const SUBPARTITION = 58019
const SUBPARTITIONS = 58020
const HASH = 58021

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"FILTERS",
	"WITHPATTERN",
	"PRIORITY",
	"PLANS",
	"TABLE_NAME",
	"QUERY_REGEX",
	"QUERY_TEMPLATE",
	"REQUEST_IP_REGEX",
	"USER_REGEX",
	"LEADING_COMMENT_REGEX",
	"TRAILING_COMMENT_REGEX",
	"BIND_VAR_CONDS",
	"ACTION_ARGS",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 56,
	14, 56,
	-2, 45,
	-1, 57,
	1, 200,
	697, 200,
	-2, 208,
	-1, 58,
	135, 208,
	176, 208,
	366, 208,
	-2, 562,
	-1, 68,
	36, 861,
	240, 861,
	251, 861,
	286, 875,
	287, 875,
	-2, 863,
	-1, 73,
	242, 899,
	-2, 897,
	-1, 132,
	239, 1562,
	-2, 174,
	-1, 134,
	1, 201,
	697, 201,
	-2, 208,
	-1, 145,
	136, 448,
	245, 448,
	-2, 551,
	-1, 164,
	135, 208,
	176, 208,
	366, 208,
	-2, 571,
	-1, 867,
	87, 1579,
	-2, 1424,
	-1, 868,
	87, 1580,
	221, 1584,
	-2, 1425,
	-1, 869,
	221, 1583,
	-2, 47,
	-1, 948,
	60, 975,
	-2, 990,
	-1, 1038,
	250, 48,
	255, 48,
	-2, 459,
	-1, 1126,
	1, 619,
	697, 619,
	-2, 208,
	-1, 1443,
	221, 1584,
	-2, 1425,
	-1, 1591,
	60, 976,
	-2, 995,
	-1, 1592,
	60, 977,
	-2, 996,
	-1, 1643,
	135, 208,
	176, 208,
	366, 208,
	-2, 498,
	-1, 1728,
	136, 448,
	245, 448,
	-2, 551,
	-1, 1737,
	250, 49,
	255, 49,
	-2, 460,
	-1, 2128,
	221, 1588,
	-2, 1582,
	-1, 2129,
	221, 1584,
	-2, 1580,
	-1, 2228,
	135, 208,
	176, 208,
	366, 208,
	-2, 499,
	-1, 2235,
	26, 229,
	-2, 231,
	-1, 2648,
	78, 103,
	88, 103,
	-2, 1054,
	-1, 2719,
	672, 770,
	-2, 744,
	-1, 2898,
	50, 1530,
	-2, 1524,
	-1, 3593,
	672, 770,
	-2, 758,
	-1, 3687,
	90, 702,
	95, 702,
	105, 702,
	178, 702,
	179, 702,
	180, 702,
	181, 702,
	182, 702,
	183, 702,
	184, 702,
	185, 702,
	186, 702,
	187, 702,
	188, 702,
	189, 702,
	190, 702,
	191, 702,
	192, 702,
	193, 702,
	194, 702,
	195, 702,
	196, 702,
	197, 702,
	198, 702,
	199, 702,
	200, 702,
	201, 702,
	202, 702,
	203, 702,
	204, 702,
	205, 702,
	206, 702,
	207, 702,
	208, 702,
	209, 702,
	210, 702,
	211, 702,
	212, 702,
	213, 702,
	214, 702,
	215, 702,
	216, 702,
	217, 702,
	218, 702,
	219, 702,
	-2, 1947,
}

const yyPrivate = 57344

const yyLast = 49659

var yyAct = [...]int{
	1599, 3762, 868, 3333, 3773, 3573, 3331, 3729, 2225, 3730,
	871, 3664, 741, 3148, 3291, 3685, 1646, 2176, 3301, 3627,
	3064, 3653, 2950, 2157, 2957, 3557, 3505, 3010, 1941, 3001,
	964, 5, 3555, 3015, 3012, 3011, 3009, 3014, 3013, 2911,
	3292, 838, 878, 2548, 3280, 837, 2914, 3361, 47, 2582,
	3332, 942, 2857, 2965, 1201, 3545, 870, 3030, 3045, 2159,
	3044, 2305, 723, 206, 833, 2915, 206, 2621, 3029, 2912,
	3366, 1569, 700, 3187, 1995, 2792, 1606, 706, 751, 3032,
	831, 3181, 2909, 2199, 2180, 832, 2196, 3207, 206, 2899,
	2608, 2119, 3173, 2682, 1704, 3070, 719, 2262, 2284, 2293,
	2776, 1144, 1070, 206, 721, 2267, 2716, 2683, 997, 2684,
	2213, 173, 2336, 2633, 2201, 965, 48, 2200, 1593, 2614,
	2089, 2600, 2584, 1949, 2090, 944, 46, 1991, 2116, 2314,
	706, 206, 2010, 706, 1173, 2292, 2124, 946, 2357, 949,
	2762, 1735, 159, 1203, 2188, 2675, 2269, 1028, 2650, 1615,
	1753, 1635, 2203, 715, 1573, 733, 106, 1455, 967, 1382,
	2014, 1875, 1367, 110, 1968, 1880, 1005, 1742, 1036, 1001,
	1836, 1039, 1009, 111, 1006, 1046, 1033, 1871, 2258, 1034,
	1035, 1634, 728, 1620, 982, 2181, 984, 2125, 1439, 1415,
	955, 952, 2086, 1191, 91, 1940, 1199, 1889, 2259, 1697,
	1727, 142, 105, 177, 113, 137, 135, 136, 143, 953,
	951, 1120, 977, 727, 90, 1459, 2023, 3583, 2709, 112,
	950, 104, 3763, 2307, 2308, 2309, 3612, 3281, 2998, 2307,
	3020, 2739, 2738, 2351, 710, 2707, 3234, 3273, 1383, 641,
	101, 101, 720, 3017, 689, 101, 3713, 2784, 1819, 2785,
	972, 976, 3613, 1463, 648, 3608, 99, 3607, 1956, 144,
	1971, 138, 958, 3020, 1072, 1383, 695, 1955, 1954, 1953,
	1952, 1951, 101, 990, 835, 836, 1075, 1089, 1090, 1091,
	1924, 1094, 1095, 1096, 1097, 1026, 3018, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 998, 991, 945, 2, 992, 959,
	943, 125, 3024, 1921, 711, 1049, 3336, 689, 3336, 3018,
	645, 713, 1050, 2610, 1025, 714, 2154, 2155, 2580, 3708,
	2436, 887, 888, 889, 1076, 1079, 1080, 1378, 138, 2895,
	1024, 1023, 1022, 3733, 1083, 3024, 1017, 1394, 2729, 2340,
	1400, 1012, 3783, 200, 887, 888, 889, 117, 118, 119,
	3608, 122, 2861, 1092, 132, 3728, 3717, 202, 3752, 966,
	635, 3153, 3152, 1600, 1394, 2953, 3715, 139, 2732, 161,
	3665, 3695, 3558, 994, 708, 709, 2549, 990, 835, 836,
	182, 3716, 1961, 2339, 938, 939, 940, 941, 3095, 3693,
	948, 3714, 2338, 3335, 3495, 3335, 3494, 138, 3699, 3700,
	1074, 2285, 3286, 2288, 1073, 3287, 2967, 2968, 92, 3743,
	2954, 172, 3511, 3694, 92, 3021, 3711, 160, 979, 980,
	1369, 689, 3588, 2287, 3314, 3302, 2445, 1004, 3654, 3661,
	2333, 3510, 2624, 3313, 2956, 2000, 179, 3690, 3115, 180,
	689, 92, 1716, 2581, 94, 3671, 92, 1636, 3021, 1637,
	2752, 2753, 2951, 1021, 2946, 1132, 1133, 2625, 148, 149,
	171, 170, 199, 1389, 2783, 690, 1381, 2442, 3671, 2967,
	2968, 2278, 1180, 2219, 1182, 1397, 2952, 1398, 1399, 2947,
	2948, 2768, 2184, 1881, 2220, 2221, 101, 1135, 1933, 1934,
	1389, 2443, 101, 2659, 2272, 3379, 2658, 2761, 1163, 2660,
	936, 1151, 1168, 1169, 935, 2710, 1152, 3574, 983, 2958,
	1195, 1019, 1179, 1181, 1150, 2966, 1149, 3103, 2671, 101,
	1151, 2238, 2237, 1368, 101, 1152, 1016, 2969, 2156, 1018,
	689, 3734, 1164, 1125, 3066, 3184, 1157, 3101, 690, 1119,
	1379, 2617, 2618, 2434, 689, 2826, 1932, 1632, 1879, 701,
	644, 703, 3735, 1936, 1923, 3071, 689, 707, 1577, 2763,
	2989, 165, 146, 168, 153, 145, 2354, 166, 167, 634,
	1578, 1881, 2184, 2717, 201, 183, 131, 3293, 2966, 3533,
	2315, 3534, 2748, 3059, 189, 154, 2437, 2438, 2440, 2439,
	2969, 3060, 2411, 2358, 2412, 3765, 2413, 1093, 1837, 157,
	155, 150, 151, 152, 156, 993, 987, 985, 2383, 1184,
	2382, 147, 1193, 2386, 2387, 2363, 1172, 2384, 2385, 2425,
	158, 2771, 1809, 2388, 1170, 1127, 206, 3275, 1021, 206,
	1013, 1416, 206, 206, 1171, 3274, 1177, 1015, 1014, 2414,
	1178, 3294, 2271, 1194, 1165, 1099, 3067, 1098, 1158, 2362,
	1183, 3068, 690, 3092, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1425, 1424, 1426, 1427, 1020, 1810, 2286, 1811, 2360,
	2364, 690, 1166, 1167, 3479, 642, 2318, 3340, 706, 3709,
	706, 706, 1059, 1176, 3271, 1057, 1019, 2197, 1029, 1021,
	1118, 2361, 1030, 3639, 1030, 2182, 2183, 1068, 1067, 1066,
	706, 206, 1065, 1390, 1064, 1388, 1385, 1386, 1387, 1393,
	1395, 1392, 2969, 1391, 1063, 1062, 1061, 1056, 200, 993,
	987, 985, 2742, 1384, 2860, 1581, 2955, 1720, 174, 1443,
	1390, 2827, 1388, 1385, 1386, 1387, 1393, 1395, 1392, 1069,
	1391, 1430, 139, 1147, 1430, 1153, 1154, 1155, 1156, 1002,
	1384, 3741, 2443, 2775, 1042, 182, 1002, 3784, 1002, 1078,
	1000, 690, 1041, 2772, 1872, 1041, 3582, 2708, 1122, 1077,
	1027, 1741, 1196, 1197, 1198, 690, 1161, 2585, 2587, 1010,
	1124, 978, 1123, 2344, 2343, 2182, 2183, 690, 1868, 1370,
	2992, 1441, 1633, 1086, 1048, 1185, 1186, 1188, 2664, 3270,
	2747, 643, 1714, 1713, 1712, 2727, 1869, 3570, 884, 884,
	1710, 179, 640, 884, 180, 169, 2750, 639, 2711, 1360,
	633, 986, 3221, 2335, 1433, 1434, 1435, 1436, 2788, 2337,
	1060, 2457, 2760, 1058, 1447, 2759, 2615, 199, 1431, 1432,
	1020, 3203, 2655, 3777, 2620, 2557, 2003, 1624, 1532, 3022,
	3023, 1137, 3185, 2673, 2226, 3667, 1430, 1427, 3698, 2945,
	961, 2812, 3026, 134, 1885, 1422, 1423, 1425, 1424, 1426,
	1427, 1443, 3232, 3233, 1361, 1362, 162, 1121, 3667, 163,
	1740, 1437, 3022, 3023, 1821, 1820, 1822, 1823, 1824, 3666,
	2024, 1192, 3651, 3599, 2731, 3026, 3596, 1047, 3312, 1174,
	3499, 1020, 3697, 1071, 2025, 1882, 1883, 1886, 1884, 175,
	2959, 95, 3666, 1048, 2963, 3298, 187, 2778, 2778, 1567,
	3297, 2962, 2777, 2777, 1174, 3266, 3256, 2015, 206, 3334,
	1890, 3334, 706, 706, 2275, 986, 1146, 3197, 2730, 2746,
	100, 1601, 1603, 2698, 2444, 2586, 100, 206, 2359, 1945,
	183, 1377, 1885, 1865, 1638, 2964, 1461, 195, 1462, 189,
	2960, 1708, 2793, 1582, 1400, 2961, 1148, 706, 3744, 3137,
	206, 1399, 1134, 100, 2276, 1451, 1841, 1131, 100, 1584,
	1160, 2274, 706, 1588, 2015, 3375, 2474, 1585, 946, 206,
	3239, 1162, 3238, 1882, 1883, 1886, 1884, 1048, 1465, 1187,
	1568, 1857, 176, 181, 178, 184, 185, 186, 188, 190,
	191, 192, 193, 1842, 2322, 2277, 1047, 2334, 194, 196,
	197, 198, 1041, 1044, 1045, 2273, 1002, 1398, 1399, 706,
	1038, 1042, 3093, 2022, 2399, 2395, 2397, 2398, 2396, 2402,
	2403, 1750, 1443, 2400, 2401, 1749, 1175, 2795, 706, 706,
	1085, 706, 1586, 706, 706, 110, 706, 706, 706, 706,
	706, 706, 1587, 3775, 1568, 111, 3776, 1126, 3774, 1443,
	1850, 1175, 1443, 706, 1443, 206, 1739, 1891, 1574, 1145,
	2332, 2330, 1561, 1538, 1539, 1540, 1541, 1542, 2370, 2366,
	2368, 2369, 2367, 2373, 2374, 206, 113, 2371, 2372, 1397,
	1047, 1398, 1399, 174, 1747, 1051, 1041, 3785, 706, 1059,
	1053, 206, 1057, 3736, 1054, 1052, 3222, 2327, 1717, 1718,
	1719, 1963, 1965, 1966, 1838, 2327, 1839, 957, 706, 1840,
	206, 1782, 3629, 2121, 1785, 1733, 1787, 2805, 2804, 2803,
	1829, 3779, 2797, 1602, 2801, 1964, 2796, 3487, 2794, 129,
	3563, 206, 1804, 2799, 1605, 943, 2331, 945, 206, 1571,
	1827, 1048, 2798, 3486, 2329, 1726, 126, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 706, 3630, 1745, 1786,
	2800, 2802, 1629, 1630, 3477, 1794, 1795, 2449, 2450, 2451,
	1583, 1800, 1801, 1816, 3786, 3564, 3308, 1755, 3309, 1756,
	3325, 1758, 1760, 1744, 1828, 1764, 1766, 1768, 1770, 1772,
	1743, 1743, 3324, 1709, 1420, 1421, 1422, 1423, 1425, 1424,
	1426, 1427, 1723, 1724, 1826, 3246, 1600, 127, 1736, 1860,
	1722, 1858, 1859, 2020, 1863, 1864, 695, 3245, 1861, 1862,
	3235, 1845, 2021, 1843, 1844, 2999, 1848, 1849, 1632, 1894,
	1846, 1847, 2985, 1400, 2680, 2679, 1898, 1815, 1900, 1901,
	1902, 1903, 1790, 2121, 1047, 1907, 1084, 2118, 2678, 2281,
	1081, 1877, 1830, 1814, 1892, 1893, 2120, 1919, 1920, 1813,
	1922, 887, 888, 889, 175, 1812, 1802, 3063, 1897, 1048,
	882, 187, 1796, 1793, 1792, 1904, 1905, 1906, 1852, 128,
	1851, 1791, 1873, 1855, 1856, 1762, 1142, 1853, 1854, 1141,
	1364, 1048, 1973, 3229, 695, 1715, 2662, 695, 1143, 1400,
	138, 1130, 1024, 1023, 1022, 1400, 1974, 1428, 1429, 1972,
	1609, 1416, 195, 3046, 3047, 3048, 3049, 3050, 3051, 3052,
	3053, 3054, 2303, 2302, 3110, 1117, 1400, 1896, 2301, 2300,
	1400, 3737, 706, 706, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1425, 1424, 1426, 1427, 706, 2299, 2298, 1918, 3706,
	1917, 3652, 2501, 109, 206, 3595, 1610, 176, 181, 178,
	184, 185, 186, 188, 190, 191, 192, 193, 1397, 3591,
	1398, 1399, 1047, 194, 196, 197, 198, 2814, 1041, 1044,
	1045, 3590, 1002, 3748, 1600, 2511, 1038, 1042, 3567, 47,
	1600, 107, 47, 3566, 1047, 1396, 1600, 1600, 109, 1051,
	1041, 3565, 108, 706, 1053, 2606, 3764, 1037, 1054, 1052,
	3746, 1600, 1600, 1443, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1402, 3502, 1969, 706, 3498, 3761, 3584, 107, 1055,
	1443, 2018, 3724, 1600, 1397, 2019, 1398, 1399, 3519, 108,
	1397, 1400, 1398, 1399, 1998, 1998, 1396, 1600, 3518, 116,
	2606, 3660, 2471, 3501, 1400, 706, 706, 1600, 1996, 1996,
	115, 1397, 114, 1398, 1399, 1397, 1567, 1398, 1399, 2082,
	1967, 109, 2606, 3637, 3468, 1441, 2462, 1999, 1418, 1419,
	1420, 1421, 1422, 1423, 1425, 1424, 1426, 1427, 1416, 1977,
	116, 1412, 2016, 1413, 1600, 2606, 3633, 2114, 3620, 1600,
	3467, 115, 3482, 114, 3470, 2129, 3464, 1414, 1428, 1429,
	1411, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1424,
	1426, 1427, 2143, 1400, 3463, 2470, 1929, 1930, 3284, 3581,
	1600, 3296, 3579, 3300, 2076, 91, 1416, 1970, 91, 1601,
	2150, 3374, 1946, 3372, 2087, 3498, 3497, 1568, 206, 3490,
	1600, 2606, 3478, 2718, 706, 3321, 3310, 2126, 2513, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1425, 1424, 1426, 1427,
	1566, 1600, 1975, 2173, 3296, 3295, 1397, 206, 1398, 1399,
	706, 1565, 1564, 3243, 2117, 3228, 2168, 3077, 2169, 1397,
	206, 1398, 1399, 3075, 706, 1400, 3072, 2129, 206, 2002,
	206, 3069, 206, 206, 3056, 1400, 2991, 3677, 1600, 2694,
	2009, 2011, 2151, 2988, 1400, 3284, 1600, 706, 2087, 2606,
	3282, 2327, 1600, 3201, 1600, 2235, 1976, 2987, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 2131, 2132, 1400, 2766, 2207, 2128, 2522, 1600, 2126,
	2978, 2977, 2234, 110, 2026, 2027, 2028, 2029, 1397, 2689,
	1398, 1399, 1400, 111, 2127, 2975, 2976, 3196, 2040, 1400,
	2973, 2974, 2973, 2972, 110, 1400, 706, 2282, 2676, 3675,
	1600, 101, 2172, 1563, 111, 1400, 2630, 1600, 1396, 3673,
	1600, 2130, 2349, 1400, 2133, 2134, 2348, 1400, 3542, 1600,
	2745, 2744, 2443, 2740, 3704, 706, 2179, 2078, 2509, 1703,
	2721, 706, 2244, 2245, 2246, 2247, 2239, 2163, 2240, 2241,
	2242, 2243, 2162, 2230, 2211, 2229, 1925, 3540, 1600, 958,
	1397, 1887, 1398, 1399, 2250, 2251, 2252, 2253, 2128, 2161,
	1397, 2149, 1398, 1399, 2714, 2715, 3537, 1600, 2171, 1397,
	1825, 1398, 1399, 3523, 1600, 3701, 2194, 1817, 706, 3172,
	1600, 2940, 2316, 706, 2264, 2174, 1807, 706, 706, 3165,
	1600, 2443, 2270, 2697, 2696, 2192, 2651, 3514, 1397, 3198,
	1398, 1399, 1600, 2629, 991, 2217, 2216, 992, 2215, 2606,
	2605, 2233, 2651, 2602, 2232, 2231, 1803, 1397, 1799, 1398,
	1399, 2467, 1600, 115, 1397, 206, 1398, 1399, 109, 1798,
	1397, 2313, 1398, 1399, 206, 2001, 1600, 3625, 1797, 2280,
	1397, 1611, 1398, 1399, 1190, 1400, 1703, 1702, 1397, 2064,
	1398, 1399, 1397, 1189, 1398, 1399, 2910, 2265, 2630, 2652,
	206, 206, 2328, 2261, 206, 3598, 206, 3196, 2279, 2654,
	2290, 2321, 206, 2291, 2324, 2652, 2325, 2606, 2297, 2254,
	2256, 2257, 206, 2630, 2341, 2443, 2467, 1644, 1643, 206,
	1049, 3002, 1396, 3157, 2975, 2320, 2265, 1050, 2319, 2323,
	2883, 2218, 2467, 1400, 2522, 2622, 2342, 1743, 2345, 1416,
	2498, 2787, 2346, 2347, 1400, 2497, 2327, 2310, 2622, 206,
	2327, 2187, 1604, 2356, 2152, 2001, 1947, 1931, 706, 3162,
	1600, 1867, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425,
	1424, 1426, 1427, 1416, 1631, 2456, 2352, 2056, 2045, 2046,
	2047, 2048, 2058, 2049, 2050, 2051, 2063, 2059, 2052, 2053,
	2060, 2061, 2062, 2054, 2055, 2057, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1425, 1424, 1426, 1427, 2630, 1032, 1031,
	1397, 3641, 1398, 1399, 2427, 2428, 2686, 3160, 1600, 2430,
	3196, 1400, 129, 2460, 1443, 3507, 2129, 2465, 2431, 1600,
	2468, 1607, 2469, 3465, 1969, 3386, 1400, 2476, 3265, 3262,
	3255, 2478, 2479, 2480, 3241, 3120, 3119, 1705, 2263, 1400,
	3061, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 3043, 1400, 3004, 2423, 3000, 2743, 2417, 1397, 2722,
	1398, 1399, 2260, 2189, 2190, 2255, 2249, 2248, 2461, 1397,
	1834, 1398, 1399, 1832, 1738, 1734, 2459, 2502, 2503, 2504,
	2505, 2506, 1707, 2508, 1400, 1699, 130, 2510, 1125, 2454,
	101, 2515, 2516, 3065, 2517, 3125, 1600, 2520, 3508, 2521,
	2464, 3208, 3209, 2524, 2433, 2481, 2685, 2528, 1400, 2278,
	2463, 2533, 2534, 2535, 2536, 2166, 3758, 2441, 3756, 3731,
	1927, 1400, 2496, 3606, 2547, 1400, 2550, 2551, 3528, 3211,
	2996, 3251, 1400, 2995, 2553, 2555, 3108, 1600, 1970, 2994,
	1400, 2558, 2559, 2560, 2561, 2562, 1397, 2452, 1398, 1399,
	1613, 1400, 2569, 2570, 2686, 2571, 2910, 2128, 2574, 2576,
	2173, 1397, 2578, 1398, 1399, 206, 2701, 2418, 2577, 1600,
	1400, 3602, 2590, 206, 1397, 2127, 1398, 1399, 3252, 3253,
	3254, 1400, 1928, 706, 2473, 1774, 2932, 1397, 1400, 1398,
	1399, 2933, 2575, 1600, 706, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1425, 1424, 1426, 1427, 3739, 2930, 1400, 2554,
	1600, 3214, 2931, 3213, 1400, 2929, 1612, 1998, 206, 1397,
	3509, 1398, 1399, 206, 2537, 1600, 2453, 2928, 2455, 3247,
	2589, 1996, 1775, 1776, 1777, 2626, 3578, 2178, 2934, 2507,
	2639, 2640, 1608, 1397, 1400, 1398, 1399, 2170, 3202, 2591,
	2888, 2887, 47, 3562, 2529, 1600, 1397, 3365, 1398, 1399,
	1397, 2644, 1398, 1399, 2646, 3216, 2592, 1397, 2594, 1398,
	1399, 1400, 3367, 3474, 2607, 1397, 1400, 1398, 1399, 3189,
	3248, 3249, 3250, 3356, 1400, 3355, 1397, 3188, 1398, 1399,
	2897, 706, 962, 3267, 2900, 2902, 1866, 3192, 3167, 2645,
	963, 2603, 934, 2903, 206, 1397, 1778, 1398, 1399, 716,
	206, 1400, 2971, 2616, 2669, 1574, 1397, 2579, 1398, 1399,
	1400, 2690, 1088, 1397, 706, 1398, 1399, 1400, 3163, 1087,
	3086, 706, 1400, 3354, 2685, 2672, 2674, 2781, 2599, 2713,
	706, 2604, 1568, 1397, 2649, 1398, 1399, 2619, 1400, 1397,
	2665, 1398, 1399, 1363, 107, 3135, 1443, 1779, 1780, 1781,
	3131, 109, 2728, 1400, 2737, 108, 139, 1400, 3117, 3194,
	109, 2653, 2024, 206, 206, 206, 206, 206, 2270, 1397,
	2656, 1398, 1399, 107, 2688, 2663, 2025, 3682, 1400, 2691,
	2692, 3771, 1400, 2421, 108, 3116, 2189, 2190, 1400, 2289,
	3580, 3503, 2970, 1400, 3113, 2677, 1397, 2643, 1398, 1399,
	2410, 1397, 2681, 1398, 1399, 2175, 2573, 2666, 2735, 1397,
	2409, 1398, 1399, 116, 968, 2687, 2408, 974, 974, 1400,
	206, 206, 2572, 2407, 115, 2886, 114, 2695, 1400, 2699,
	2702, 2703, 2704, 2885, 1400, 109, 1397, 2568, 1398, 1399,
	1400, 2567, 970, 971, 2406, 1397, 206, 1398, 1399, 2734,
	2405, 1400, 1397, 1726, 1398, 1399, 2404, 1397, 2394, 1398,
	1399, 2393, 2566, 2392, 2723, 2724, 2565, 706, 2391, 2390,
	2389, 2733, 2564, 1397, 2381, 1398, 1399, 2563, 2380, 2379,
	2378, 2377, 2816, 2817, 2818, 2819, 2820, 2376, 1397, 2375,
	1398, 1399, 1397, 3174, 1398, 1399, 2447, 116, 114, 3550,
	3549, 2825, 3531, 2552, 3373, 3371, 1400, 3370, 115, 115,
	114, 3363, 2546, 1397, 706, 1398, 1399, 1397, 2545, 1398,
	1399, 2764, 3362, 1397, 2544, 1398, 1399, 2765, 1397, 3263,
	1398, 1399, 3193, 3191, 2767, 2543, 3005, 2311, 2808, 2806,
	1721, 2773, 969, 2769, 116, 3182, 2622, 3344, 2821, 2602,
	2770, 3759, 706, 2789, 1397, 115, 1398, 1399, 3760, 3759,
	706, 2779, 2790, 1397, 2780, 1398, 1399, 2828, 2499, 1397,
	1400, 1398, 1399, 2164, 1625, 1397, 1617, 1398, 1399, 129,
	3760, 1400, 120, 121, 3568, 3227, 1397, 960, 1398, 1399,
	2542, 706, 2807, 1944, 3, 2862, 10, 2838, 1400, 2840,
	2809, 1942, 103, 1, 9, 206, 2864, 1943, 2741, 706,
	8, 2353, 2867, 1833, 2355, 2851, 2852, 2853, 2854, 2283,
	1139, 1878, 1366, 706, 1365, 3231, 3692, 1443, 2919, 1400,
	706, 706, 1443, 206, 206, 206, 206, 206, 2117, 2830,
	2117, 1397, 662, 1398, 1399, 206, 2937, 2836, 2207, 2153,
	1572, 206, 2907, 206, 2541, 3732, 206, 206, 206, 2846,
	2847, 2848, 2849, 2850, 3688, 2540, 3689, 2916, 2890, 2922,
	1598, 1594, 2939, 949, 1818, 2867, 2207, 2207, 2207, 2207,
	2207, 2863, 2539, 2865, 1808, 1595, 2891, 3303, 2088, 2913,
	3504, 3008, 2317, 2866, 2913, 3261, 2207, 2268, 1040, 2207,
	164, 2791, 2227, 2228, 206, 1397, 2878, 1398, 1399, 3656,
	1700, 1701, 1597, 2538, 1596, 124, 1397, 706, 1398, 1399,
	1443, 2889, 2892, 995, 123, 706, 1043, 1159, 2312, 3285,
	206, 2904, 2905, 1397, 2941, 1398, 1399, 2942, 2670, 2882,
	3028, 2236, 1650, 1648, 951, 1649, 2924, 2925, 2923, 2927,
	206, 2926, 1647, 1652, 950, 2935, 1651, 3094, 2500, 3136,
	110, 2879, 2880, 2881, 1397, 2943, 1398, 1399, 1935, 702,
	111, 2642, 1400, 696, 203, 206, 2949, 1639, 206, 2921,
	1618, 3149, 3007, 1082, 652, 2979, 2350, 3088, 2983, 2984,
	658, 1448, 2982, 2981, 2980, 1400, 2990, 1926, 2884, 1877,
	2657, 1400, 989, 981, 2165, 2593, 988, 3105, 3106, 3107,
	3036, 3109, 3111, 1400, 3475, 3035, 2918, 3186, 1400, 2896,
	2898, 2270, 2609, 3006, 2901, 3118, 2894, 3027, 1400, 3561,
	3122, 3123, 3124, 3126, 3127, 3128, 3129, 3364, 3638, 3130,
	3042, 3132, 3133, 3134, 3055, 1400, 3138, 3139, 3140, 3141,
	3142, 3143, 3144, 3145, 3146, 3147, 2532, 2667, 706, 1614,
	3073, 3074, 3156, 3076, 3154, 3078, 3079, 3158, 3082, 3159,
	3161, 2472, 3164, 3166, 3081, 3168, 3169, 3170, 3171, 2531,
	2013, 3084, 3085, 3177, 3089, 2530, 1438, 206, 3096, 3097,
	2204, 3098, 3339, 3090, 3100, 3099, 3102, 2527, 3104, 1962,
	1400, 3151, 2526, 725, 724, 1400, 722, 1397, 3155, 1398,
	1399, 2595, 2525, 2623, 1403, 872, 1400, 2583, 3199, 3200,
	1626, 2634, 3204, 2632, 2631, 2419, 2212, 1400, 3210, 2523,
	1397, 3206, 1398, 1399, 3684, 2206, 1397, 1400, 1398, 1399,
	2202, 1400, 2601, 206, 823, 822, 734, 726, 1397, 718,
	1398, 1399, 821, 1397, 820, 1398, 1399, 3180, 3224, 3034,
	3668, 2749, 3062, 1397, 2751, 1398, 1399, 2668, 3058, 1380,
	1590, 712, 206, 3175, 3176, 3178, 1011, 3091, 3586, 2446,
	1397, 3114, 1398, 1399, 2519, 3183, 2207, 1589, 3190, 2518,
	3205, 2043, 2044, 3593, 3195, 206, 3016, 206, 206, 206,
	2514, 3279, 2997, 2719, 2304, 76, 51, 706, 706, 3219,
	3220, 2512, 3556, 3215, 3212, 3626, 819, 1401, 816, 3341,
	3342, 2477, 3268, 3269, 3218, 2466, 3217, 3343, 2858, 2859,
	3283, 3609, 3225, 3226, 3036, 1397, 3610, 1398, 1399, 3035,
	1397, 815, 1398, 1399, 3611, 2071, 1456, 1376, 3289, 3290,
	1373, 1397, 3707, 1398, 1399, 1937, 102, 3242, 38, 3244,
	37, 36, 1397, 35, 1398, 1399, 3236, 3237, 706, 706,
	706, 706, 1397, 34, 1398, 1399, 1397, 28, 1398, 1399,
	2635, 2638, 2639, 2640, 2636, 27, 2637, 2641, 26, 25,
	3208, 3209, 3311, 24, 21, 3315, 2635, 2638, 2639, 2640,
	2636, 20, 2637, 2641, 31, 23, 22, 19, 18, 3019,
	3727, 3770, 133, 60, 1598, 1594, 57, 55, 141, 140,
	58, 3272, 3326, 54, 1128, 3276, 3277, 3278, 52, 1595,
	45, 44, 43, 42, 3299, 33, 32, 3330, 17, 16,
	15, 14, 13, 12, 11, 3320, 7, 6, 41, 3338,
	40, 30, 39, 29, 1591, 1592, 1597, 3345, 1596, 4,
	2706, 2306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 3316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1443,
	0, 3359, 0, 3328, 706, 0, 706, 0, 0, 0,
	0, 0, 0, 3337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2916, 0, 0, 0, 2916, 0, 47, 0, 0, 3382,
	0, 0, 0, 0, 0, 0, 3368, 3384, 0, 1998,
	3369, 2913, 3360, 0, 3378, 0, 3376, 0, 706, 1616,
	0, 0, 883, 1996, 0, 93, 0, 0, 0, 0,
	3489, 206, 0, 3476, 706, 3389, 3390, 0, 0, 3496,
	3392, 3388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 0, 0, 1706, 0,
	0, 0, 0, 3480, 0, 0, 3469, 0, 3512, 3513,
	0, 3515, 0, 3516, 3517, 3473, 0, 0, 3520, 3521,
	3522, 3472, 3524, 3527, 3471, 3526, 3492, 0, 3488, 0,
	0, 0, 3493, 0, 0, 0, 0, 0, 3536, 3538,
	3539, 3541, 3543, 3544, 3546, 3500, 706, 3506, 0, 0,
	706, 706, 0, 0, 947, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3483, 3484, 3485, 1998,
	0, 0, 3525, 0, 0, 947, 0, 0, 0, 706,
	0, 3530, 3576, 1996, 3532, 0, 0, 0, 3535, 0,
	0, 0, 0, 1008, 3572, 0, 0, 0, 3554, 3553,
	0, 3529, 0, 3551, 3552, 3571, 0, 0, 0, 0,
	0, 2916, 0, 0, 0, 0, 3569, 0, 0, 0,
	0, 0, 0, 0, 0, 3560, 0, 0, 0, 0,
	0, 3575, 0, 0, 0, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3577, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3585, 0, 0, 0, 3600, 3605, 0, 0, 0,
	0, 0, 3597, 0, 0, 3592, 0, 0, 0, 3594,
	0, 0, 0, 3589, 0, 0, 3621, 0, 0, 47,
	0, 0, 3622, 3623, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1443, 0, 706, 3634, 0, 3615, 0, 0, 3616,
	0, 0, 0, 0, 0, 0, 0, 3624, 0, 0,
	0, 0, 0, 0, 0, 3604, 0, 0, 0, 0,
	0, 706, 706, 3614, 3662, 3663, 3636, 0, 3631, 3640,
	0, 0, 0, 3642, 0, 0, 0, 0, 3672, 3674,
	3676, 3645, 3669, 706, 3670, 3655, 47, 3650, 3647, 3646,
	3644, 3649, 3648, 2913, 0, 0, 0, 206, 706, 0,
	0, 0, 0, 0, 3705, 0, 0, 0, 0, 0,
	0, 3680, 0, 3506, 3657, 0, 0, 0, 3683, 0,
	0, 3691, 3702, 3696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3669, 3712, 3670, 0,
	0, 3710, 0, 0, 706, 3723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 3721, 0, 3726, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 3738, 0, 0, 3745,
	3747, 3749, 3740, 0, 0, 706, 0, 706, 0, 3742,
	0, 0, 0, 0, 0, 3753, 3750, 0, 3757, 3755,
	3751, 0, 0, 0, 0, 2004, 2005, 0, 0, 0,
	2007, 3769, 974, 974, 2012, 3669, 3766, 3670, 2017, 0,
	3772, 0, 0, 0, 0, 3778, 3780, 0, 3781, 3782,
	1998, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 0, 0, 0, 1996, 2065, 2066, 2067, 2068, 2069,
	2070, 2072, 3526, 2077, 3788, 2079, 2080, 2081, 0, 2083,
	2084, 2085, 3754, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 1998, 2115, 0, 2122,
	2123, 974, 0, 974, 974, 974, 974, 974, 3789, 3790,
	1996, 0, 0, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 0, 2144, 2145, 2146, 2147, 2148, 0, 3787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2185, 2186, 1451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	1200, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2266,
	0, 0, 0, 0, 0, 0, 0, 0, 947, 1440,
	1445, 1446, 0, 1449, 0, 1450, 1452, 1453, 1454, 0,
	1457, 1458, 1460, 1460, 0, 1460, 1464, 1464, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 0, 0, 0, 0, 1531, 0, 1533,
	1534, 1535, 1536, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 1464, 1464, 1464, 1464, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	0, 0, 0, 0, 0, 3410, 3412, 3411, 3429, 3430,
	3431, 3432, 3433, 3434, 3435, 773, 0, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 0, 0, 0, 0, 947, 0, 0, 0,
	947, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 49, 50, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 53, 83, 84, 0,
	81, 85, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 867, 2475, 0, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 2482, 2483, 2484, 2485,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3424, 3425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 59,
	62, 61, 64, 0, 80, 0, 0, 89, 67, 86,
	0, 0, 0, 0, 0, 0, 839, 1616, 752, 843,
	754, 840, 841, 65, 750, 753, 842, 0, 0, 0,
	0, 0, 68, 97, 96, 0, 0, 78, 79, 63,
	0, 0, 0, 0, 0, 87, 88, 0, 0, 0,
	0, 0, 771, 772, 3409, 3413, 3414, 3415, 3426, 3427,
	3428, 3436, 3438, 804, 3437, 3439, 3440, 3441, 3444, 3445,
	3446, 3447, 3442, 3443, 3448, 3393, 3397, 3394, 3395, 3396,
	3408, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406,
	3407, 3449, 3450, 3451, 3452, 3453, 3454, 3419, 3423, 3422,
	3420, 3421, 3417, 3418, 0, 0, 0, 70, 71, 0,
	72, 73, 74, 75, 0, 0, 844, 0, 845, 0,
	0, 849, 0, 0, 0, 851, 850, 0, 852, 818,
	817, 0, 0, 846, 847, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 93, 0, 0, 93,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2786, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	2810, 2811, 0, 0, 2813, 0, 0, 2815, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 2822, 2823, 2824,
	3725, 0, 0, 0, 0, 0, 0, 0, 0, 2829,
	1667, 0, 2831, 2832, 2833, 0, 0, 0, 2834, 2835,
	0, 0, 2091, 2837, 0, 0, 2839, 0, 0, 2841,
	2842, 2843, 2844, 0, 0, 686, 0, 2845, 2091, 2091,
	2091, 2091, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 974, 0, 0, 0,
	189, 0, 0, 2868, 2869, 2870, 2871, 2872, 2873, 0,
	0, 0, 2874, 2875, 0, 2876, 0, 2877, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 66, 0, 0, 664, 0, 0,
	0, 0, 2205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 2938, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 1008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 677, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 1359, 705, 705, 174, 0, 0, 0, 0, 0,
	3003, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 0, 651, 0, 653,
	667, 0, 692, 0, 691, 657, 0, 655, 659, 668,
	660, 0, 654, 0, 665, 0, 0, 656, 669, 670,
	676, 680, 681, 683, 678, 675, 684, 649, 650, 682,
	672, 0, 663, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3112, 0, 0, 0, 0, 0,
	0, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 3121, 1690,
	1691, 1693, 1694, 1692, 1695, 1696, 1669, 1670, 1671, 1672,
	1653, 1654, 1682, 0, 1656, 0, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 0, 0, 1666, 1673, 1674,
	1675, 1676, 0, 1677, 1678, 1679, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 175, 0, 0, 0, 0,
	0, 0, 187, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 2448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 705, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	937, 0, 0, 2458, 0, 0, 0, 0, 176, 181,
	178, 184, 185, 186, 188, 190, 191, 192, 193, 705,
	0, 0, 0, 0, 194, 196, 197, 198, 0, 0,
	3264, 0, 0, 0, 705, 0, 0, 694, 0, 0,
	0, 0, 0, 1003, 0, 1698, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 1667,
	687, 0, 0, 3288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 705, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1442, 1748, 0, 0, 1751, 1752,
	705, 705, 0, 705, 0, 705, 705, 0, 705, 705,
	705, 705, 705, 705, 0, 0, 0, 0, 0, 0,
	0, 1442, 1783, 1784, 1442, 705, 1442, 0, 1789, 2556,
	0, 0, 0, 0, 0, 0, 0, 0, 3317, 0,
	3318, 0, 0, 3319, 0, 0, 3322, 3323, 0, 0,
	0, 0, 0, 0, 0, 3327, 0, 0, 0, 0,
	705, 2588, 0, 0, 0, 3329, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 1870, 947, 0,
	705, 0, 0, 0, 0, 0, 0, 3346, 0, 0,
	3347, 0, 3348, 3349, 0, 3350, 0, 3351, 0, 2627,
	2628, 0, 3352, 1655, 0, 0, 0, 200, 2205, 0,
	0, 947, 2647, 0, 0, 0, 0, 0, 2712, 0,
	0, 0, 0, 0, 0, 0, 0, 3377, 705, 0,
	0, 139, 0, 161, 0, 0, 0, 0, 3385, 200,
	0, 3387, 0, 0, 182, 0, 0, 0, 704, 0,
	1725, 0, 0, 3391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 161, 0, 0, 0, 0,
	0, 3466, 0, 0, 0, 172, 182, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 999, 0, 180, 1007, 0, 0, 172, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 1730, 171, 170, 199, 0, 0, 0,
	0, 2726, 179, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 1730, 171, 170, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1681, 1684, 1685, 1686, 1687, 1688, 1689, 0, 1690, 1691,
	1693, 1694, 1692, 1695, 1696, 1669, 1670, 1671, 1672, 1653,
	1654, 1682, 3559, 1656, 0, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 705, 705, 1666, 1673, 1674, 1675,
	1676, 0, 1677, 1678, 1679, 1680, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 165, 1731, 168, 0, 1728,
	0, 166, 167, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 1731, 168,
	0, 1728, 0, 166, 167, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 705, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 0, 705, 0, 0, 0,
	0, 0, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3603, 0, 0, 0, 1129, 0,
	0, 1136, 2855, 0, 1138, 1140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1683, 0, 3617, 0, 0,
	3618, 0, 3619, 0, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 174, 0, 705, 0, 2917, 0,
	93, 0, 0, 2205, 2205, 2205, 2205, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 2205, 0, 0, 2205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 705,
	0, 3703, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3718, 0, 3719, 0, 3720, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3033, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 163, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 2294, 2295, 2296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 175, 0, 163, 3767, 705, 3768, 0,
	187, 0, 0, 705, 1746, 0, 0, 1746, 0, 1746,
	0, 0, 0, 0, 0, 2326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 705, 0, 0, 0, 705,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 1202,
	0, 1202, 1202, 0, 0, 0, 176, 181, 178, 184,
	185, 186, 188, 190, 191, 192, 193, 0, 0, 0,
	0, 1371, 194, 196, 197, 198, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 176, 181,
	178, 184, 185, 186, 188, 190, 191, 192, 193, 0,
	0, 1645, 0, 825, 194, 196, 197, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 638, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 975, 975, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 1442, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3353, 0, 3357, 3358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2917, 0, 93, 0, 2917, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 1754,
	1754, 0, 1754, 0, 1754, 1754, 0, 1763, 1754, 1754,
	1754, 1754, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2661, 0, 0, 3481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 1202, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 1746, 1746, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2917, 0, 0, 0, 0, 0, 1442, 2736,
	0, 0, 0, 0, 0, 0, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2191, 1202, 1202, 0, 0, 0, 0, 0,
	2195, 0, 2198, 0, 0, 1950, 1938, 638, 0, 0,
	638, 0, 0, 638, 638, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3635, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 1992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 705, 0, 0, 0, 0, 2041, 2042, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 1442,
	0, 0, 705, 705, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 2167, 2365, 0, 0, 705,
	0, 0, 1442, 0, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2177, 2415, 2416, 0, 0, 2420, 0, 0, 0,
	0, 0, 1444, 0, 2424, 1622, 0, 0, 1202, 0,
	0, 0, 0, 0, 2426, 0, 0, 0, 0, 0,
	0, 2429, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 2121,
	3087, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 2432, 1997, 0, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 1007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	638, 0, 1007, 0, 0, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 0, 0, 999,
	0, 0, 0, 1444, 1992, 0, 0, 0, 1992, 1992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 0, 0, 1444, 0, 1444, 638, 0, 0, 0,
	0, 0, 0, 3230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 705,
	705, 1876, 0, 1997, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 1908, 1909,
	638, 638, 638, 638, 638, 638, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2435,
	705, 705, 705, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2648, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 705, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2754, 2755, 2756, 2757, 2758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 1950, 2774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2596, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 1444, 2611, 0, 0, 2782, 0,
	0, 0, 0, 0, 0, 0, 975, 975, 0, 0,
	0, 1444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 705, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 1876, 975, 975, 975,
	975, 975, 2693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 885,
	0, 0, 0, 873, 886, 887, 888, 889, 874, 0,
	0, 875, 876, 0, 877, 2177, 0, 0, 0, 1805,
	0, 0, 2720, 0, 0, 0, 0, 0, 882, 890,
	891, 2725, 0, 0, 975, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 1876, 638,
	0, 638, 0, 638, 2214, 3037, 3038, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1442, 0, 705, 2993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1992, 0,
	0, 3039, 3031, 705, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3057, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 1992, 0, 3080, 0, 0,
	3083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2856, 0, 0, 705, 0, 0, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 3040, 3041,
	0, 0, 0, 0, 0, 0, 638, 0, 0, 705,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 705, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2893, 638, 638, 0, 0, 638, 0, 2422, 0, 0,
	0, 0, 0, 638, 1202, 0, 0, 0, 0, 3179,
	0, 2920, 1754, 638, 0, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 843, 0, 840, 841, 0, 0, 0, 842, 101,
	638, 0, 885, 0, 0, 0, 873, 886, 887, 888,
	889, 874, 0, 0, 875, 876, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 882, 890, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3240, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 2177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3257, 0, 3258,
	3259, 3260, 0, 0, 0, 1444, 0, 1876, 3037, 3038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3040, 3041, 0, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2177, 2177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 2705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3304,
	3305, 3306, 3307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 638, 638, 638, 638, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3381, 0, 3383, 0, 0,
	0, 975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 0, 0, 1202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3547, 0, 0,
	0, 3547, 3547, 0, 0, 0, 0, 0, 1444, 0,
	0, 0, 0, 1444, 638, 638, 638, 638, 638, 0,
	0, 0, 0, 0, 0, 0, 2936, 0, 0, 0,
	2177, 0, 1805, 0, 638, 0, 0, 638, 2944, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1444, 0, 0, 0, 0, 0, 0, 0, 2177,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2177, 0, 0, 0, 0, 638, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3678, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 638, 3628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2177, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3150, 0, 3686, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 638, 638,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1444, 0, 0, 0, 398, 0, 0, 0,
	1336, 1321, 519, 0, 1264, 1339, 1233, 1252, 1349, 1255,
	1258, 1300, 1212, 1278, 417, 1249, 1205, 1237, 1207, 1244,
	1208, 1235, 1266, 275, 1232, 1323, 1282, 1338, 368, 272,
	1214, 1238, 431, 1254, 213, 1302, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	1345, 372, 1288, 0, 498, 402, 0, 0, 1805, 1268,
	1327, 1276, 1314, 1263, 1301, 1222, 1287, 1340, 1250, 1297,
	1341, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 3658, 695, 0, 0, 0, 0, 3659, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	1246, 1294, 1335, 1247, 1296, 270, 325, 277, 269, 524,
	1346, 1326, 1211, 1275, 1334, 0, 0, 236, 1337, 1270,
	0, 1299, 0, 1352, 1206, 1290, 0, 1209, 1213, 1348,
	1330, 1241, 280, 0, 0, 0, 0, 0, 0, 0,
	1267, 1277, 1311, 1315, 1261, 0, 0, 0, 0, 0,
	0, 0, 1239, 0, 1286, 0, 0, 0, 1218, 1210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 0, 1221, 0, 1240,
	1312, 0, 1204, 302, 1215, 403, 262, 1358, 0, 455,
	1319, 1329, 1262, 567, 1333, 1260, 1259, 1306, 1219, 1325,
	1253, 367, 1217, 334, 208, 232, 0, 1251, 413, 463,
	475, 1324, 1236, 1245, 260, 1243, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 1285, 1304, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 1216, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 1231, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 1320, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	1309, 1351, 426, 474, 247, 546, 497, 1354, 1355, 1356,
	1357, 1226, 1230, 1224, 1291, 1225, 1280, 1281, 1227, 1342,
	1343, 1344, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 1313, 1220, 0, 1228, 1229, 1322, 1331, 1332, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 1284,
	207, 228, 370, 1347, 456, 293, 596, 557, 551, 214,
	230, 1223, 267, 1234, 1242, 0, 1248, 1256, 1257, 1269,
	1271, 1272, 1273, 1274, 1292, 1293, 1295, 1303, 1305, 1308,
	1310, 1317, 1328, 1350, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 1283, 1353, 555, 1289, 383, 286, 309, 324,
	1298, 556, 503, 234, 468, 295, 258, 1316, 1318, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 1279, 1307, 378, 520, 521, 320, 398,
	0, 0, 0, 1336, 1321, 519, 0, 1264, 1339, 1233,
	1252, 1349, 1255, 1258, 1300, 1212, 1278, 417, 1249, 1205,
	1237, 1207, 1244, 1208, 1235, 1266, 275, 1232, 1323, 1282,
	1338, 368, 272, 1214, 1238, 431, 1254, 213, 1302, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 1345, 372, 1288, 0, 498, 402, 0,
	0, 0, 1268, 1327, 1276, 1314, 1263, 1301, 1222, 1287,
	1340, 1250, 1297, 1341, 327, 255, 329, 212, 414, 499,
	291, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 1246, 1294, 1335, 1247, 1296, 270, 325,
	277, 269, 524, 1346, 1326, 1211, 1275, 1334, 0, 0,
	236, 1337, 1270, 0, 1299, 0, 1352, 1206, 1290, 0,
	1209, 1213, 1348, 1330, 1241, 280, 0, 0, 0, 0,
	0, 0, 0, 1267, 1277, 1311, 1315, 1261, 0, 0,
	0, 0, 0, 2945, 0, 1239, 0, 1286, 0, 0,
	0, 1218, 1210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1265, 0, 0, 0, 0,
	1221, 0, 1240, 1312, 0, 1204, 302, 1215, 403, 262,
	1358, 0, 455, 1319, 1329, 1262, 567, 1333, 1260, 1259,
	1306, 1219, 1325, 1253, 367, 1217, 334, 208, 232, 0,
	1251, 413, 463, 475, 1324, 1236, 1245, 260, 1243, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 1285,
	1304, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 1216, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 1231, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 1320,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 1309, 1351, 426, 474, 247, 546, 497,
	1354, 1355, 1356, 1357, 1226, 1230, 1224, 1291, 1225, 1280,
	1281, 1227, 1342, 1343, 1344, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 1313, 1220, 0, 1228, 1229, 1322,
	1331, 1332, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 1284, 207, 228, 370, 1347, 456, 293, 596,
	557, 551, 214, 230, 1223, 267, 1234, 1242, 0, 1248,
	1256, 1257, 1269, 1271, 1272, 1273, 1274, 1292, 1293, 1295,
	1303, 1305, 1308, 1310, 1317, 1328, 1350, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 1283, 1353, 555, 1289, 383,
	286, 309, 324, 1298, 556, 503, 234, 468, 295, 258,
	1316, 1318, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 1279, 1307, 378, 520,
	521, 320, 398, 0, 0, 0, 1336, 1321, 519, 0,
	1264, 1339, 1233, 1252, 1349, 1255, 1258, 1300, 1212, 1278,
	417, 1249, 1205, 1237, 1207, 1244, 1208, 1235, 1266, 275,
	1232, 1323, 1282, 1338, 368, 272, 1214, 1238, 431, 1254,
	213, 1302, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 1345, 372, 1288, 0,
	498, 402, 0, 0, 0, 1268, 1327, 1276, 1314, 1263,
	1301, 1222, 1287, 1340, 1250, 1297, 1341, 327, 255, 329,
	212, 414, 499, 291, 0, 0, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 252, 0, 0, 0, 353, 362, 361, 342,
	343, 345, 347, 352, 359, 365, 1246, 1294, 1335, 1247,
	1296, 270, 325, 277, 269, 524, 1346, 1326, 1211, 1275,
	1334, 0, 0, 236, 1337, 1270, 0, 1299, 0, 1352,
	1206, 1290, 0, 1209, 1213, 1348, 1330, 1241, 280, 0,
	0, 0, 0, 0, 0, 0, 1267, 1277, 1311, 1315,
	1261, 0, 0, 0, 0, 0, 2906, 0, 1239, 0,
	1286, 0, 0, 0, 1218, 1210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1265, 0,
	0, 0, 0, 1221, 0, 1240, 1312, 0, 1204, 302,
	1215, 403, 262, 1358, 0, 455, 1319, 1329, 1262, 567,
	1333, 1260, 1259, 1306, 1219, 1325, 1253, 367, 1217, 334,
	208, 232, 0, 1251, 413, 463, 475, 1324, 1236, 1245,
	260, 1243, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 1285, 1304, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 533, 534, 261,
	598, 235, 561, 227, 1216, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 357, 358, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 1231,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 1320, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 1309, 1351, 426, 474,
	247, 546, 497, 1354, 1355, 1356, 1357, 1226, 1230, 1224,
	1291, 1225, 1280, 1281, 1227, 1342, 1343, 1344, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 1313, 1220, 0,
	1228, 1229, 1322, 1331, 1332, 632, 386, 487, 543, 339,
	351, 354, 344, 363, 0, 364, 340, 341, 346, 348,
	349, 350, 355, 356, 360, 366, 256, 218, 392, 400,
	522, 316, 223, 224, 225, 515, 516, 517, 518, 558,
	559, 563, 464, 465, 466, 467, 297, 552, 313, 470,
	469, 335, 336, 381, 452, 1284, 207, 228, 370, 1347,
	456, 293, 596, 557, 551, 214, 230, 1223, 267, 1234,
	1242, 0, 1248, 1256, 1257, 1269, 1271, 1272, 1273, 1274,
	1292, 1293, 1295, 1303, 1305, 1308, 1310, 1317, 1328, 1350,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 305, 306, 447, 448, 318, 319, 593, 594,
	304, 540, 571, 538, 592, 565, 441, 380, 1283, 1353,
	555, 1289, 383, 286, 309, 324, 1298, 556, 503, 234,
	468, 295, 258, 1316, 1318, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 1279,
	1307, 378, 520, 521, 320, 398, 0, 0, 0, 1336,
	1321, 519, 0, 1264, 1339, 1233, 1252, 1349, 1255, 1258,
	1300, 1212, 1278, 417, 1249, 1205, 1237, 1207, 1244, 1208,
	1235, 1266, 275, 1232, 1323, 1282, 1338, 368, 272, 1214,
	1238, 431, 1254, 213, 1302, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 1345,
	372, 1288, 0, 498, 402, 0, 0, 0, 1268, 1327,
	1276, 1314, 1263, 1301, 1222, 1287, 1340, 1250, 1297, 1341,
	327, 255, 329, 212, 414, 499, 291, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 252, 0, 0, 0, 353,
	362, 361, 342, 343, 345, 347, 352, 359, 365, 1246,
	1294, 1335, 1247, 1296, 270, 325, 277, 269, 524, 1346,
	1326, 1211, 1275, 1334, 0, 0, 236, 1337, 1270, 0,
	1299, 0, 1352, 1206, 1290, 0, 1209, 1213, 1348, 1330,
	1241, 280, 0, 0, 0, 0, 0, 0, 0, 1267,
	1277, 1311, 1315, 1261, 0, 0, 0, 0, 0, 2193,
	0, 1239, 0, 1286, 0, 0, 0, 1218, 1210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1265, 0, 0, 0, 0, 1221, 0, 1240, 1312,
	0, 1204, 302, 1215, 403, 262, 1358, 0, 455, 1319,
	1329, 1262, 567, 1333, 1260, 1259, 1306, 1219, 1325, 1253,
	367, 1217, 334, 208, 232, 0, 1251, 413, 463, 475,
	1324, 1236, 1245, 260, 1243, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 1285, 1304, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	533, 534, 261, 598, 235, 561, 227, 1216, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 357,
	358, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 1231, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 1320, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 1309,
	1351, 426, 474, 247, 546, 497, 1354, 1355, 1356, 1357,
	1226, 1230, 1224, 1291, 1225, 1280, 1281, 1227, 1342, 1343,
	1344, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	1313, 1220, 0, 1228, 1229, 1322, 1331, 1332, 632, 386,
	487, 543, 339, 351, 354, 344, 363, 0, 364, 340,
	341, 346, 348, 349, 350, 355, 356, 360, 366, 256,
	218, 392, 400, 522, 316, 223, 224, 225, 515, 516,
	517, 518, 558, 559, 563, 464, 465, 466, 467, 297,
	552, 313, 470, 469, 335, 336, 381, 452, 1284, 207,
	228, 370, 1347, 456, 293, 596, 557, 551, 214, 230,
	1223, 267, 1234, 1242, 0, 1248, 1256, 1257, 1269, 1271,
	1272, 1273, 1274, 1292, 1293, 1295, 1303, 1305, 1308, 1310,
	1317, 1328, 1350, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 410, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 305, 306, 447, 448, 318,
	319, 593, 594, 304, 540, 571, 538, 592, 565, 441,
	380, 1283, 1353, 555, 1289, 383, 286, 309, 324, 1298,
	556, 503, 234, 468, 295, 258, 1316, 1318, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 1279, 1307, 378, 520, 521, 320, 398, 0,
	0, 0, 1336, 1321, 519, 0, 1264, 1339, 1233, 1252,
	1349, 1255, 1258, 1300, 1212, 1278, 417, 1249, 1205, 1237,
	1207, 1244, 1208, 1235, 1266, 275, 1232, 1323, 1282, 1338,
	368, 272, 1214, 1238, 431, 1254, 213, 1302, 488, 259,
	379, 376, 527, 287, 278, 274, 257, 321, 387, 429,
	509, 423, 1345, 372, 1288, 0, 498, 402, 0, 0,
	0, 1268, 1327, 1276, 1314, 1263, 1301, 1222, 1287, 1340,
	1250, 1297, 1341, 327, 255, 329, 212, 414, 499, 291,
	0, 101, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 252, 0,
	0, 0, 353, 362, 361, 342, 343, 345, 347, 352,
	359, 365, 1246, 1294, 1335, 1247, 1296, 270, 325, 277,
	269, 524, 1346, 1326, 1211, 1275, 1334, 0, 0, 236,
	1337, 1270, 0, 1299, 0, 1352, 1206, 1290, 0, 1209,
	1213, 1348, 1330, 1241, 280, 0, 0, 0, 0, 0,
	0, 0, 1267, 1277, 1311, 1315, 1261, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 1286, 0, 0, 0,
	1218, 1210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 0, 1221,
	0, 1240, 1312, 0, 1204, 302, 1215, 403, 262, 1358,
	0, 455, 1319, 1329, 1262, 567, 1333, 1260, 1259, 1306,
	1219, 1325, 1253, 367, 1217, 334, 208, 232, 0, 1251,
	413, 463, 475, 1324, 1236, 1245, 260, 1243, 473, 427,
	544, 240, 289, 460, 433, 471, 443, 292, 1285, 1304,
	472, 374, 529, 453, 541, 568, 569, 268, 407, 553,
	513, 562, 595, 233, 265, 421, 506, 547, 495, 399,
	525, 526, 333, 494, 300, 211, 371, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 574, 231, 481, 373, 249, 238, 531, 550, 294,
	458, 437, 438, 576, 590, 577, 579, 580, 220, 508,
	539, 246, 485, 0, 0, 597, 254, 505, 222, 536,
	504, 395, 330, 331, 221, 0, 459, 273, 298, 0,
	0, 263, 416, 533, 534, 261, 598, 235, 561, 227,
	1216, 560, 409, 528, 537, 396, 385, 226, 535, 394,
	384, 338, 357, 358, 285, 311, 450, 377, 451, 310,
	312, 405, 404, 406, 215, 548, 0, 216, 0, 500,
	549, 599, 241, 242, 244, 1231, 284, 288, 296, 299,
	307, 308, 317, 369, 420, 449, 445, 454, 1320, 523,
	542, 554, 566, 572, 573, 575, 581, 582, 583, 585,
	591, 589, 586, 587, 588, 584, 578, 408, 315, 496,
	337, 375, 1309, 1351, 426, 474, 247, 546, 497, 1354,
	1355, 1356, 1357, 1226, 1230, 1224, 1291, 1225, 1280, 1281,
	1227, 1342, 1343, 1344, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 1313, 1220, 0, 1228, 1229, 1322, 1331,
	1332, 632, 386, 487, 543, 339, 351, 354, 344, 363,
	0, 364, 340, 341, 346, 348, 349, 350, 355, 356,
	360, 366, 256, 218, 392, 400, 522, 316, 223, 224,
	225, 515, 516, 517, 518, 558, 559, 563, 464, 465,
	466, 467, 297, 552, 313, 470, 469, 335, 336, 381,
	452, 1284, 207, 228, 370, 1347, 456, 293, 596, 557,
	551, 214, 230, 1223, 267, 1234, 1242, 0, 1248, 1256,
	1257, 1269, 1271, 1272, 1273, 1274, 1292, 1293, 1295, 1303,
	1305, 1308, 1310, 1317, 1328, 1350, 209, 210, 217, 229,
	239, 243, 250, 266, 281, 283, 290, 303, 314, 322,
	323, 326, 332, 382, 388, 389, 390, 391, 410, 411,
	412, 415, 418, 419, 422, 424, 425, 428, 432, 436,
	439, 440, 442, 444, 446, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 507, 530, 532, 545, 564, 570, 482, 305, 306,
	447, 448, 318, 319, 593, 594, 304, 540, 571, 538,
	592, 565, 441, 380, 1283, 1353, 555, 1289, 383, 286,
	309, 324, 1298, 556, 503, 234, 468, 295, 258, 1316,
	1318, 219, 253, 237, 264, 279, 282, 328, 393, 401,
	430, 435, 301, 276, 251, 461, 248, 486, 510, 511,
	512, 514, 397, 271, 434, 1279, 1307, 378, 520, 521,
	320, 398, 0, 0, 0, 1336, 1321, 519, 0, 1264,
	1339, 1233, 1252, 1349, 1255, 1258, 1300, 1212, 1278, 417,
	1249, 1205, 1237, 1207, 1244, 1208, 1235, 1266, 275, 1232,
	1323, 1282, 1338, 368, 272, 1214, 1238, 431, 1254, 213,
	1302, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 1345, 372, 1288, 0, 498,
	402, 0, 0, 0, 1268, 1327, 1276, 1314, 1263, 1301,
	1222, 1287, 1340, 1250, 1297, 1341, 327, 255, 329, 212,
	414, 499, 291, 0, 0, 0, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 252, 0, 0, 0, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 1246, 1294, 1335, 1247, 1296,
	270, 325, 277, 269, 524, 1346, 1326, 1211, 1275, 1334,
	0, 0, 236, 1337, 1270, 0, 1299, 0, 1352, 1206,
	1290, 0, 1209, 1213, 1348, 1330, 1241, 280, 0, 0,
	0, 0, 0, 0, 0, 1267, 1277, 1311, 1315, 1261,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 1286,
	0, 0, 0, 1218, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1265, 0, 0,
	0, 0, 1221, 0, 1240, 1312, 0, 1204, 302, 1215,
	403, 262, 1358, 0, 455, 1319, 1329, 1262, 567, 1333,
	1260, 1259, 1306, 1219, 1325, 1253, 367, 1217, 334, 208,
	232, 0, 1251, 413, 463, 475, 1324, 1236, 1245, 260,
	1243, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 1285, 1304, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 1216, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 1231, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 1320, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 1309, 1351, 426, 474, 247,
	546, 497, 1354, 1355, 1356, 1357, 1226, 1230, 1224, 1291,
	1225, 1280, 1281, 1227, 1342, 1343, 1344, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 1313, 1220, 0, 1228,
	1229, 1322, 1331, 1332, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 1284, 207, 228, 370, 1347, 456,
	293, 596, 557, 551, 214, 230, 1223, 267, 1234, 1242,
	0, 1248, 1256, 1257, 1269, 1271, 1272, 1273, 1274, 1292,
	1293, 1295, 1303, 1305, 1308, 1310, 1317, 1328, 1350, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 1283, 1353, 555,
	1289, 383, 286, 309, 324, 1298, 556, 503, 234, 468,
	295, 258, 1316, 1318, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 1279, 1307,
	378, 520, 521, 320, 398, 0, 0, 0, 1336, 1321,
	519, 0, 1264, 1339, 1233, 1252, 1349, 1255, 1258, 1300,
	1212, 1278, 417, 1249, 1205, 1237, 1207, 1244, 1208, 1235,
	1266, 275, 1232, 1323, 1282, 1338, 368, 272, 1214, 1238,
	431, 1254, 213, 1302, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 1345, 372,
	1288, 0, 498, 402, 0, 0, 0, 1268, 1327, 1276,
	1314, 1263, 1301, 1222, 1287, 1340, 1250, 1297, 1341, 327,
	255, 329, 212, 414, 499, 291, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 1246, 1294,
	1335, 1247, 1296, 270, 325, 277, 269, 524, 1346, 1326,
	1211, 1275, 1334, 0, 0, 236, 1337, 1270, 0, 1299,
	0, 1352, 1206, 1290, 0, 1209, 1213, 1348, 1330, 1241,
	280, 0, 0, 0, 0, 0, 0, 0, 1267, 1277,
	1311, 1315, 1261, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 1286, 0, 0, 0, 1218, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 0, 0, 1221, 0, 1240, 1312, 0,
	1204, 302, 1215, 403, 262, 1358, 0, 455, 1319, 1329,
	1262, 567, 1333, 1260, 1259, 1306, 1219, 1325, 1253, 367,
	1217, 334, 208, 232, 0, 1251, 413, 463, 475, 1324,
	1236, 1245, 260, 1243, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 1285, 1304, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 1216, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 1231, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 1320, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 1309, 1351,
	426, 474, 247, 546, 497, 1354, 1355, 1356, 1357, 1226,
	1230, 1224, 1291, 1225, 1280, 1281, 1227, 1342, 1343, 1344,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 1313,
	1220, 0, 1228, 1229, 1322, 1331, 1332, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 1284, 207, 228,
	370, 1347, 456, 293, 596, 557, 551, 214, 230, 1223,
	267, 1234, 1242, 0, 1248, 1256, 1257, 1269, 1271, 1272,
	1273, 1274, 1292, 1293, 1295, 1303, 1305, 1308, 1310, 1317,
	1328, 1350, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 304, 540, 571, 538, 592, 565, 441, 380,
	1283, 1353, 555, 1289, 383, 286, 309, 324, 1298, 556,
	503, 234, 468, 295, 258, 1316, 1318, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 1279, 1307, 378, 520, 521, 320, 398, 0, 0,
	0, 1336, 1321, 519, 0, 1264, 1339, 1233, 1252, 1349,
	1255, 1258, 1300, 1212, 1278, 417, 1249, 1205, 1237, 1207,
	1244, 1208, 1235, 1266, 275, 1232, 1323, 1282, 1338, 368,
	272, 1214, 1238, 431, 1254, 213, 1302, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 1345, 372, 1288, 0, 498, 402, 0, 0, 0,
	1268, 1327, 1276, 1314, 1263, 1301, 1222, 1287, 1340, 1250,
	1297, 1341, 327, 255, 329, 212, 414, 499, 291, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 252, 0, 0,
	0, 353, 362, 361, 342, 343, 345, 347, 352, 359,
	365, 1246, 1294, 1335, 1247, 1296, 270, 325, 277, 269,
	524, 1346, 1326, 1211, 1275, 1334, 0, 0, 236, 1337,
	1270, 0, 1299, 0, 1352, 1206, 1290, 0, 1209, 1213,
	1348, 1330, 1241, 280, 0, 0, 0, 0, 0, 0,
	0, 1267, 1277, 1311, 1315, 1261, 0, 0, 0, 0,
	0, 0, 0, 1239, 0, 1286, 0, 0, 0, 1218,
	1210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1265, 0, 0, 0, 0, 1221, 0,
	1240, 1312, 0, 1204, 302, 1215, 403, 262, 1358, 0,
	455, 1319, 1329, 1262, 567, 1333, 1260, 1259, 1306, 1219,
	1325, 1253, 367, 1217, 334, 208, 232, 0, 1251, 413,
	463, 475, 1324, 1236, 1245, 260, 1243, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 1285, 1304, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 533, 534, 261, 598, 235, 561, 227, 1216,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 357, 358, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 1231, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 1320, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 1309, 1351, 426, 474, 247, 546, 497, 1354, 1355,
	1356, 1357, 1226, 1230, 1224, 1291, 1225, 1280, 1281, 1227,
	1342, 1343, 1344, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 1313, 1220, 0, 1228, 1229, 1322, 1331, 1332,
	632, 386, 487, 543, 339, 351, 354, 344, 363, 0,
	364, 340, 341, 346, 348, 349, 350, 355, 356, 360,
	366, 256, 218, 392, 400, 522, 316, 223, 224, 225,
	515, 516, 517, 518, 558, 559, 563, 464, 465, 466,
	467, 297, 552, 313, 470, 469, 335, 336, 381, 452,
	1284, 207, 228, 370, 1347, 456, 293, 596, 557, 551,
	214, 230, 1223, 267, 1234, 1242, 0, 1248, 1256, 1257,
	1269, 1271, 1272, 1273, 1274, 1292, 1293, 1295, 1303, 1305,
	1308, 1310, 1317, 1328, 1350, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 305, 306, 447,
	448, 318, 319, 593, 594, 304, 540, 571, 538, 592,
	565, 441, 380, 1283, 1353, 555, 1289, 383, 286, 309,
	324, 1298, 556, 503, 234, 468, 295, 258, 1316, 1318,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 1279, 1307, 378, 520, 521, 320,
	398, 0, 0, 0, 0, 0, 519, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 735, 0, 0, 0, 275, 740, 0,
	0, 0, 368, 272, 0, 0, 431, 0, 213, 0,
	488, 259, 379, 376, 527, 287, 278, 274, 257, 321,
	387, 429, 509, 423, 747, 372, 0, 0, 498, 402,
	0, 0, 0, 0, 0, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 255, 329, 212, 414,
	499, 291, 0, 101, 0, 0, 885, 869, 835, 836,
	873, 886, 887, 888, 889, 874, 0, 245, 875, 876,
	252, 877, 0, 834, 775, 777, 776, 794, 795, 796,
	797, 798, 799, 800, 773, 882, 890, 891, 0, 270,
	325, 277, 269, 524, 0, 0, 2073, 2074, 2075, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 717,
	732, 0, 746, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 730, 0, 0, 0, 0, 829, 0,
	731, 0, 0, 739, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 403,
	262, 0, 0, 455, 828, 0, 0, 567, 0, 0,
	826, 0, 0, 0, 0, 367, 0, 334, 208, 232,
	0, 0, 413, 463, 475, 0, 0, 0, 879, 0,
	473, 427, 544, 240, 289, 460, 433, 471, 443, 292,
	0, 0, 472, 374, 529, 453, 541, 568, 569, 268,
	407, 553, 513, 562, 595, 233, 265, 421, 506, 547,
	495, 399, 525, 526, 333, 494, 300, 211, 371, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 574, 231, 481, 373, 249, 238, 531,
	550, 294, 458, 437, 438, 576, 590, 577, 579, 580,
	220, 508, 539, 246, 485, 0, 0, 597, 254, 505,
	222, 536, 504, 395, 330, 331, 221, 0, 459, 273,
	298, 0, 0, 263, 416, 880, 881, 261, 598, 781,
	561, 227, 0, 560, 409, 528, 537, 396, 385, 226,
	535, 394, 384, 338, 789, 790, 285, 311, 450, 377,
	451, 310, 312, 405, 404, 406, 215, 548, 0, 216,
	0, 500, 549, 599, 241, 242, 244, 0, 284, 288,
	296, 299, 307, 308, 317, 369, 420, 449, 445, 454,
	0, 523, 542, 554, 566, 572, 573, 575, 581, 582,
	583, 585, 591, 589, 586, 587, 588, 584, 578, 408,
	315, 496, 337, 375, 0, 0, 426, 474, 247, 546,
	497, 0, 0, 0, 0, 839, 827, 752, 843, 754,
	840, 841, 749, 750, 753, 842, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 830, 738, 737, 0, 745,
	0, 771, 772, 774, 778, 779, 780, 791, 792, 793,
	801, 803, 804, 802, 805, 806, 807, 810, 811, 812,
	813, 808, 809, 814, 755, 759, 756, 757, 758, 770,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	853, 854, 855, 856, 857, 858, 784, 788, 787, 785,
	786, 782, 783, 736, 207, 228, 370, 0, 456, 293,
	596, 557, 551, 214, 230, 844, 267, 845, 0, 0,
	849, 0, 0, 0, 851, 850, 0, 852, 818, 817,
	0, 0, 846, 847, 0, 848, 0, 0, 209, 210,
	217, 229, 239, 243, 250, 266, 281, 283, 290, 303,
	314, 322, 323, 326, 332, 382, 388, 389, 390, 391,
	410, 411, 412, 415, 418, 419, 422, 424, 425, 428,
	432, 436, 439, 440, 442, 444, 446, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 507, 530, 532, 545, 564, 570, 482,
	859, 860, 861, 862, 863, 864, 865, 866, 304, 540,
	571, 538, 592, 565, 441, 380, 0, 0, 555, 0,
	383, 286, 309, 324, 0, 556, 503, 234, 468, 295,
	258, 884, 0, 219, 253, 237, 264, 279, 282, 328,
	393, 401, 430, 435, 301, 276, 251, 461, 248, 486,
	510, 511, 512, 514, 397, 271, 434, 398, 0, 378,
	520, 521, 320, 519, 0, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	735, 0, 0, 0, 275, 740, 0, 0, 0, 368,
	272, 0, 0, 431, 0, 213, 0, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 747, 372, 0, 0, 498, 402, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 0, 0,
	2222, 0, 327, 255, 329, 212, 414, 499, 291, 0,
	101, 0, 0, 885, 869, 835, 836, 873, 886, 887,
	888, 889, 874, 0, 245, 875, 876, 252, 877, 0,
	834, 775, 777, 776, 794, 795, 796, 797, 798, 799,
	800, 773, 882, 890, 891, 2223, 270, 325, 277, 269,
	524, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 717, 732, 0, 746,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	730, 0, 0, 0, 0, 829, 0, 731, 0, 0,
	739, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 403, 262, 0, 0,
	455, 828, 0, 0, 567, 0, 0, 826, 0, 0,
	0, 0, 367, 0, 334, 208, 232, 0, 0, 413,
	463, 475, 0, 0, 0, 879, 0, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 0, 0, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 880, 881, 261, 598, 781, 561, 227, 0,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 789, 790, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 0, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 0, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 0, 0, 426, 474, 247, 546, 497, 0, 0,
	0, 0, 839, 827, 752, 843, 754, 840, 841, 749,
	750, 753, 842, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 830, 738, 737, 0, 745, 0, 771, 772,
	774, 778, 779, 780, 791, 792, 793, 801, 803, 804,
	802, 805, 806, 807, 810, 811, 812, 813, 808, 809,
	814, 755, 759, 756, 757, 758, 770, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 853, 854, 855,
	856, 857, 858, 784, 788, 787, 785, 786, 782, 783,
	736, 207, 228, 370, 0, 456, 293, 596, 557, 551,
	214, 230, 844, 267, 845, 0, 0, 849, 0, 0,
	0, 851, 850, 0, 852, 818, 817, 0, 0, 846,
	847, 0, 848, 0, 0, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 859, 860, 861,
	862, 863, 864, 865, 866, 304, 540, 571, 538, 592,
	565, 441, 380, 0, 0, 555, 0, 383, 286, 309,
	324, 0, 556, 503, 234, 468, 295, 258, 884, 0,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 0, 398, 378, 520, 521, 320,
	92, 519, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 735, 0,
	0, 0, 275, 740, 0, 0, 0, 368, 272, 0,
	0, 431, 0, 213, 0, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 747,
	372, 0, 0, 498, 402, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 255, 329, 212, 414, 499, 291, 0, 101, 0,
	0, 885, 869, 835, 836, 873, 886, 887, 888, 889,
	874, 0, 245, 875, 876, 252, 877, 0, 834, 775,
	777, 776, 794, 795, 796, 797, 798, 799, 800, 773,
	882, 890, 891, 0, 270, 325, 277, 269, 524, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 717, 732, 0, 746, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 730, 0,
	0, 0, 0, 829, 0, 731, 0, 0, 739, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 403, 262, 0, 0, 455, 828,
	0, 0, 567, 0, 0, 826, 0, 0, 0, 0,
	367, 0, 334, 208, 232, 0, 0, 413, 463, 475,
	0, 0, 0, 879, 0, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 0, 0, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	880, 881, 261, 598, 781, 561, 227, 0, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 789,
	790, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 0, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 0, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 0,
	0, 426, 474, 247, 546, 497, 0, 0, 0, 0,
	839, 827, 752, 843, 754, 840, 841, 749, 750, 753,
	842, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	830, 738, 737, 0, 745, 0, 771, 772, 774, 778,
	779, 780, 791, 792, 793, 801, 803, 804, 802, 805,
	806, 807, 810, 811, 812, 813, 808, 809, 814, 755,
	759, 756, 757, 758, 770, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 853, 854, 855, 856, 857,
	858, 784, 788, 787, 785, 786, 782, 783, 736, 207,
	228, 370, 100, 456, 293, 596, 557, 551, 214, 230,
	844, 267, 845, 0, 0, 849, 0, 0, 0, 851,
	850, 0, 852, 818, 817, 0, 0, 846, 847, 0,
	848, 0, 0, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 410, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 859, 860, 861, 862, 863,
	864, 865, 866, 304, 540, 571, 538, 592, 565, 441,
	380, 0, 0, 555, 0, 383, 286, 309, 324, 0,
	556, 503, 234, 468, 295, 258, 884, 0, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 398, 0, 378, 520, 521, 320, 519, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 735, 0, 0, 0, 275,
	740, 0, 0, 0, 368, 272, 0, 0, 431, 0,
	213, 0, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 747, 372, 0, 0,
	498, 402, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 255, 329,
	212, 414, 499, 291, 0, 101, 0, 0, 885, 869,
	835, 836, 873, 886, 887, 888, 889, 874, 0, 245,
	875, 876, 252, 877, 0, 834, 775, 777, 776, 794,
	795, 796, 797, 798, 799, 800, 773, 882, 890, 891,
	0, 270, 325, 277, 269, 524, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 717, 732, 0, 746, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 730, 0, 0, 0, 0,
	829, 0, 731, 0, 0, 739, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 403, 262, 0, 0, 455, 828, 0, 0, 567,
	0, 0, 826, 0, 0, 0, 0, 367, 0, 334,
	208, 232, 0, 0, 413, 463, 475, 0, 0, 0,
	879, 0, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 3643, 0, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 880, 881, 261,
	598, 781, 561, 227, 0, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 789, 790, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 0,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 0, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 0, 0, 426, 474,
	247, 546, 497, 0, 0, 0, 0, 839, 827, 752,
	843, 754, 840, 841, 749, 750, 753, 842, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 830, 738, 737,
	0, 745, 0, 771, 772, 774, 778, 779, 780, 791,
	792, 793, 801, 803, 804, 802, 805, 806, 807, 810,
	811, 812, 813, 808, 809, 814, 755, 759, 756, 757,
	758, 770, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 853, 854, 855, 856, 857, 858, 784, 788,
	787, 785, 786, 782, 783, 736, 207, 228, 370, 0,
	456, 293, 596, 557, 551, 214, 230, 844, 267, 845,
	0, 0, 849, 0, 0, 0, 851, 850, 0, 852,
	818, 817, 0, 0, 846, 847, 0, 848, 0, 0,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 859, 860, 861, 862, 863, 864, 865, 866,
	304, 540, 571, 538, 592, 565, 441, 380, 0, 0,
	555, 0, 383, 286, 309, 324, 0, 556, 503, 234,
	468, 295, 258, 884, 0, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 398,
	0, 378, 520, 521, 320, 519, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 735, 0, 0, 0, 275, 740, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 747, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 101, 0, 1600, 885, 869, 835, 836, 873,
	886, 887, 888, 889, 874, 0, 245, 875, 876, 252,
	877, 0, 834, 775, 777, 776, 794, 795, 796, 797,
	798, 799, 800, 773, 882, 890, 891, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 717, 732,
	0, 746, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 730, 0, 0, 0, 0, 829, 0, 731,
	0, 0, 739, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 828, 0, 0, 567, 0, 0, 826,
	0, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 879, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 880, 881, 261, 598, 781, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 789, 790, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 839, 827, 752, 843, 754, 840,
	841, 749, 750, 753, 842, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 830, 738, 737, 0, 745, 0,
	771, 772, 774, 778, 779, 780, 791, 792, 793, 801,
	803, 804, 802, 805, 806, 807, 810, 811, 812, 813,
	808, 809, 814, 755, 759, 756, 757, 758, 770, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 853,
	854, 855, 856, 857, 858, 784, 788, 787, 785, 786,
	782, 783, 736, 207, 228, 370, 0, 456, 293, 596,
	557, 551, 214, 230, 844, 267, 845, 0, 0, 849,
	0, 0, 0, 851, 850, 0, 852, 818, 817, 0,
	0, 846, 847, 0, 848, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 859,
	860, 861, 862, 863, 864, 865, 866, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	884, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 398, 0, 378, 520,
	521, 320, 519, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 735,
	0, 0, 0, 275, 740, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	747, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 101,
	0, 0, 885, 869, 835, 836, 873, 886, 887, 888,
	889, 874, 0, 245, 875, 876, 252, 877, 0, 834,
	775, 777, 776, 794, 795, 796, 797, 798, 799, 800,
	773, 882, 890, 891, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 717, 732, 0, 746, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 730,
	973, 0, 0, 0, 829, 0, 731, 0, 0, 739,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	828, 0, 0, 567, 0, 0, 826, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 879, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 880, 881, 261, 598, 781, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	789, 790, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 839, 827, 752, 843, 754, 840, 841, 749, 750,
	753, 842, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 830, 738, 737, 0, 745, 0, 771, 772, 774,
	778, 779, 780, 791, 792, 793, 801, 803, 804, 802,
	805, 806, 807, 810, 811, 812, 813, 808, 809, 814,
	755, 759, 756, 757, 758, 770, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 853, 854, 855, 856,
	857, 858, 784, 788, 787, 785, 786, 782, 783, 736,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 844, 267, 845, 0, 0, 849, 0, 0, 0,
	851, 850, 0, 852, 818, 817, 0, 0, 846, 847,
	0, 848, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 859, 860, 861, 862,
	863, 864, 865, 866, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 884, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 398, 0, 378, 520, 521, 320, 519,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 735, 0, 0, 0,
	275, 740, 0, 0, 0, 368, 272, 0, 0, 431,
	0, 213, 0, 488, 259, 379, 376, 527, 287, 278,
	274, 257, 321, 387, 429, 509, 423, 747, 372, 0,
	0, 498, 402, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 255,
	329, 212, 414, 499, 291, 0, 101, 0, 0, 885,
	869, 835, 836, 873, 886, 887, 888, 889, 874, 0,
	245, 875, 876, 252, 877, 0, 834, 775, 777, 776,
	794, 795, 796, 797, 798, 799, 800, 773, 882, 890,
	891, 0, 270, 325, 277, 269, 524, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 717, 732, 0, 746, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 730, 0, 0, 0,
	0, 829, 0, 731, 0, 0, 739, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 403, 262, 0, 0, 455, 828, 0, 0,
	567, 0, 0, 826, 0, 0, 0, 0, 367, 0,
	334, 208, 232, 0, 0, 413, 463, 475, 0, 0,
	0, 879, 0, 473, 427, 544, 240, 289, 460, 433,
	471, 443, 292, 0, 0, 472, 374, 529, 453, 541,
	568, 569, 268, 407, 553, 513, 562, 595, 233, 265,
	421, 506, 547, 495, 399, 525, 526, 333, 494, 300,
	211, 371, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 574, 231, 481, 373,
	249, 238, 531, 550, 294, 458, 437, 438, 576, 590,
	577, 579, 580, 220, 508, 539, 246, 485, 0, 0,
	597, 254, 505, 222, 536, 504, 395, 330, 331, 221,
	0, 459, 273, 298, 0, 0, 263, 416, 880, 881,
	261, 598, 781, 561, 227, 0, 560, 409, 528, 537,
	396, 385, 226, 535, 394, 384, 338, 789, 790, 285,
	311, 450, 377, 451, 310, 312, 405, 404, 406, 215,
	548, 0, 216, 0, 500, 549, 599, 241, 242, 244,
	0, 284, 288, 296, 299, 307, 308, 317, 369, 420,
	449, 445, 454, 0, 523, 542, 554, 566, 572, 573,
	575, 581, 582, 583, 585, 591, 589, 586, 587, 588,
	584, 578, 408, 315, 496, 337, 375, 0, 0, 426,
	474, 247, 546, 497, 0, 0, 0, 0, 839, 827,
	752, 843, 754, 840, 841, 749, 750, 753, 842, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 830, 738,
	737, 0, 745, 0, 771, 772, 774, 778, 779, 780,
	791, 792, 793, 801, 803, 804, 802, 805, 806, 807,
	810, 811, 812, 813, 808, 809, 814, 755, 759, 756,
	757, 758, 770, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 853, 854, 855, 856, 857, 858, 784,
	788, 787, 785, 786, 782, 783, 736, 207, 228, 370,
	0, 456, 293, 596, 557, 551, 214, 230, 844, 267,
	845, 0, 0, 849, 0, 0, 0, 851, 850, 0,
	852, 818, 817, 0, 0, 846, 847, 0, 848, 0,
	0, 209, 210, 217, 229, 239, 243, 250, 266, 281,
	283, 290, 303, 314, 322, 323, 326, 332, 382, 388,
	389, 390, 391, 410, 411, 412, 415, 418, 419, 422,
	424, 425, 428, 432, 436, 439, 440, 442, 444, 446,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 507, 530, 532, 545,
	564, 570, 482, 859, 860, 861, 862, 863, 864, 865,
	866, 304, 540, 571, 538, 592, 565, 441, 380, 0,
	0, 555, 0, 383, 286, 309, 324, 0, 556, 503,
	234, 468, 295, 258, 884, 0, 219, 253, 237, 264,
	279, 282, 328, 393, 401, 430, 435, 301, 276, 251,
	461, 248, 486, 510, 511, 512, 514, 397, 271, 434,
	398, 0, 378, 520, 521, 320, 519, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 735, 0, 0, 0, 275, 740, 0,
	0, 0, 368, 272, 0, 0, 431, 0, 213, 0,
	488, 259, 379, 376, 527, 287, 278, 274, 257, 321,
	387, 429, 509, 423, 747, 372, 0, 0, 498, 402,
	0, 0, 0, 0, 0, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 255, 329, 212, 414,
	499, 291, 0, 101, 0, 0, 885, 869, 835, 836,
	873, 886, 887, 888, 889, 874, 0, 245, 875, 876,
	252, 877, 0, 834, 775, 777, 776, 794, 795, 796,
	797, 798, 799, 800, 773, 882, 890, 891, 0, 270,
	325, 277, 269, 524, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 746, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 730, 0, 0, 0, 0, 829, 0,
	731, 0, 0, 739, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 403,
	262, 0, 0, 455, 828, 0, 0, 567, 0, 0,
	826, 0, 0, 0, 0, 367, 0, 334, 208, 232,
	0, 0, 413, 463, 475, 0, 0, 0, 879, 0,
	473, 427, 544, 240, 289, 460, 433, 471, 443, 292,
	0, 0, 472, 374, 529, 453, 541, 568, 569, 268,
	407, 553, 513, 562, 595, 233, 265, 421, 506, 547,
	495, 399, 525, 526, 333, 494, 300, 211, 371, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 574, 231, 481, 373, 249, 238, 531,
	550, 294, 458, 437, 438, 576, 590, 577, 579, 580,
	220, 508, 539, 246, 485, 0, 0, 597, 254, 505,
	222, 536, 504, 395, 330, 331, 221, 0, 459, 273,
	298, 0, 0, 263, 416, 880, 881, 261, 598, 781,
	561, 227, 0, 560, 409, 528, 537, 396, 385, 226,
	535, 394, 384, 338, 789, 790, 285, 311, 450, 377,
	451, 310, 312, 405, 404, 406, 215, 548, 0, 216,
	0, 500, 549, 599, 241, 242, 244, 0, 284, 288,
	296, 299, 307, 308, 317, 369, 420, 449, 445, 454,
	0, 523, 542, 554, 566, 572, 573, 575, 581, 582,
	583, 585, 591, 589, 586, 587, 588, 584, 578, 408,
	315, 496, 337, 375, 0, 0, 426, 474, 247, 546,
	497, 0, 0, 0, 0, 839, 827, 752, 843, 754,
	840, 841, 749, 750, 753, 842, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 830, 738, 737, 0, 745,
	0, 771, 772, 774, 778, 779, 780, 791, 792, 793,
	801, 803, 804, 802, 805, 806, 807, 810, 811, 812,
	813, 808, 809, 814, 755, 759, 756, 757, 758, 770,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	853, 854, 855, 856, 857, 858, 784, 788, 787, 785,
	786, 782, 783, 736, 207, 228, 370, 0, 456, 293,
	596, 557, 551, 214, 230, 844, 267, 845, 0, 0,
	849, 0, 0, 0, 851, 850, 0, 852, 818, 817,
	0, 0, 846, 847, 0, 848, 0, 0, 209, 210,
	217, 229, 239, 243, 250, 266, 281, 283, 290, 303,
	314, 322, 323, 326, 332, 382, 388, 389, 390, 391,
	410, 411, 412, 415, 418, 419, 422, 424, 425, 428,
	432, 436, 439, 440, 442, 444, 446, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 507, 530, 532, 545, 564, 570, 482,
	859, 860, 861, 862, 863, 864, 865, 866, 304, 540,
	571, 538, 592, 565, 441, 380, 0, 0, 555, 0,
	383, 286, 309, 324, 0, 556, 503, 234, 468, 295,
	258, 884, 0, 219, 253, 237, 264, 279, 282, 328,
	393, 401, 430, 435, 301, 276, 251, 461, 248, 486,
	510, 511, 512, 514, 397, 271, 434, 398, 0, 378,
	520, 521, 320, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 368,
	272, 0, 0, 431, 0, 213, 0, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 0, 372, 0, 0, 498, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 255, 329, 212, 414, 499, 291, 0,
	0, 0, 0, 0, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 252, 0, 0,
	0, 353, 362, 361, 342, 343, 345, 347, 352, 359,
	365, 0, 0, 0, 0, 0, 270, 325, 277, 269,
	524, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1425, 1424, 1426, 1427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 403, 262, 0, 0,
	455, 0, 0, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 334, 208, 232, 0, 0, 413,
	463, 475, 0, 0, 0, 260, 0, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 0, 0, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 533, 534, 261, 598, 235, 561, 227, 0,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 357, 358, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 0, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 0, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 0, 0, 426, 474, 247, 546, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 386, 487, 543, 339, 351, 354, 344, 363, 0,
	364, 340, 341, 346, 348, 349, 350, 355, 356, 360,
	366, 256, 218, 392, 400, 522, 316, 223, 224, 225,
	515, 516, 517, 518, 558, 559, 563, 464, 465, 466,
	467, 297, 552, 313, 470, 469, 335, 336, 381, 452,
	0, 207, 228, 370, 0, 456, 293, 596, 557, 551,
	214, 230, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 305, 306, 447,
	448, 318, 319, 593, 594, 304, 540, 571, 538, 592,
	565, 441, 380, 0, 0, 555, 0, 383, 286, 309,
	324, 0, 556, 503, 234, 468, 295, 258, 0, 0,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 398, 0, 378, 520, 521, 320,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 368, 272, 0, 0,
	431, 0, 213, 0, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 0, 372,
	0, 0, 498, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	255, 329, 212, 414, 499, 291, 0, 0, 0, 0,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 0, 0,
	0, 0, 0, 270, 325, 277, 269, 524, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 1048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 403, 262, 0, 0, 455, 0, 0,
	1047, 567, 0, 0, 0, 0, 0, 1044, 1045, 367,
	1002, 334, 208, 232, 1038, 1042, 413, 463, 475, 0,
	0, 0, 260, 0, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 0, 0, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 0, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 0, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 0, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 0, 0,
	426, 474, 247, 546, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 0, 207, 228,
	370, 0, 456, 293, 596, 557, 551, 214, 230, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 304, 540, 571, 538, 592, 565, 441, 380,
	0, 0, 555, 0, 383, 286, 309, 324, 0, 556,
	503, 234, 468, 295, 258, 0, 0, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 398, 0, 378, 520, 521, 320, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 368, 272, 0, 0, 431, 0, 213,
	0, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 0, 372, 0, 0, 498,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 255, 329, 212,
	414, 499, 291, 0, 0, 0, 0, 1563, 869, 0,
	0, 1560, 0, 0, 0, 0, 1558, 0, 245, 1559,
	1557, 252, 1562, 0, 834, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 0, 0, 0, 0, 0,
	270, 325, 277, 269, 524, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	403, 262, 0, 0, 455, 0, 0, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 334, 208,
	232, 0, 0, 413, 463, 475, 0, 0, 0, 260,
	0, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 0, 0, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 0, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 0, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 0, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 0, 0, 426, 474, 247,
	546, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 0, 207, 228, 370, 0, 456,
	293, 596, 557, 551, 214, 230, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 0, 0, 555,
	0, 383, 286, 309, 324, 0, 556, 503, 234, 468,
	295, 258, 0, 0, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 0, 398,
	378, 520, 521, 320, 92, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 0, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 101, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 0, 0, 0, 0, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 0, 0, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 260, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 0, 207, 228, 370, 100, 456, 293, 596,
	557, 551, 214, 230, 0, 267, 0, 0, 0, 0,
	0, 0, 2209, 0, 0, 2208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	0, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 1619, 0, 378, 520,
	521, 320, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 1621, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	0, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 1623, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	0, 0, 0, 0, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 1397, 0, 1398, 1399, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	0, 0, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 260, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 0,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 0, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 0, 398, 378, 520, 521, 320, 92,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 368, 272, 0, 0,
	431, 0, 213, 0, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 0, 372,
	0, 0, 498, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	255, 329, 212, 414, 499, 291, 0, 101, 0, 1600,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 0, 0,
	0, 0, 0, 270, 325, 277, 269, 524, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 403, 262, 0, 0, 455, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 334, 208, 232, 0, 0, 413, 463, 475, 0,
	0, 0, 260, 0, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 0, 0, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 0, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 0, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 0, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 0, 0,
	426, 474, 247, 546, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 0, 207, 228,
	370, 100, 456, 293, 596, 557, 551, 214, 230, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 304, 540, 571, 538, 592, 565, 441, 380,
	0, 0, 555, 0, 383, 286, 309, 324, 0, 556,
	503, 234, 468, 295, 258, 0, 0, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 398, 0, 378, 520, 521, 320, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 368, 272, 0, 0, 431, 0, 213,
	0, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 0, 372, 0, 0, 498,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 255, 329, 212,
	414, 499, 291, 0, 101, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 252, 0, 0, 0, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 0, 0, 0, 0, 0,
	270, 325, 277, 269, 524, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	403, 262, 0, 0, 455, 0, 0, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 334, 208,
	232, 0, 0, 413, 463, 475, 0, 0, 0, 260,
	0, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 0, 0, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 0, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 0, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 0, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 0, 0, 426, 474, 247,
	546, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 0, 207, 228, 370, 0, 456,
	293, 596, 557, 551, 214, 230, 0, 267, 0, 0,
	0, 0, 0, 0, 2209, 0, 0, 2208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 0, 0, 555,
	0, 383, 286, 309, 324, 0, 556, 503, 234, 468,
	295, 258, 0, 0, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 398, 0,
	378, 520, 521, 320, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	2160, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	368, 272, 0, 0, 431, 0, 213, 0, 488, 259,
	379, 376, 527, 287, 278, 274, 257, 321, 387, 429,
	509, 423, 0, 372, 0, 0, 498, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 255, 329, 212, 414, 499, 291,
	0, 0, 0, 0, 1806, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 252, 0,
	0, 0, 353, 362, 361, 342, 343, 345, 347, 352,
	359, 365, 0, 0, 0, 0, 0, 270, 325, 277,
	269, 524, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 403, 262, 0,
	0, 455, 0, 0, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 334, 208, 232, 0, 0,
	413, 463, 475, 0, 0, 0, 260, 0, 473, 427,
	544, 240, 289, 460, 433, 471, 443, 292, 0, 2158,
	472, 374, 529, 453, 541, 568, 569, 268, 407, 553,
	513, 562, 595, 233, 265, 421, 506, 547, 495, 399,
	525, 526, 333, 494, 300, 211, 371, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 574, 231, 481, 373, 249, 238, 531, 550, 294,
	458, 437, 438, 576, 590, 577, 579, 580, 220, 508,
	539, 246, 485, 0, 0, 597, 254, 505, 222, 536,
	504, 395, 330, 331, 221, 0, 459, 273, 298, 0,
	0, 263, 416, 533, 534, 261, 598, 235, 561, 227,
	0, 560, 409, 528, 537, 396, 385, 226, 535, 394,
	384, 338, 357, 358, 285, 311, 450, 377, 451, 310,
	312, 405, 404, 406, 215, 548, 0, 216, 0, 500,
	549, 599, 241, 242, 244, 0, 284, 288, 296, 299,
	307, 308, 317, 369, 420, 449, 445, 454, 0, 523,
	542, 554, 566, 572, 573, 575, 581, 582, 583, 585,
	591, 589, 586, 587, 588, 584, 578, 408, 315, 496,
	337, 375, 0, 0, 426, 474, 247, 546, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 386, 487, 543, 339, 351, 354, 344, 363,
	0, 364, 340, 341, 346, 348, 349, 350, 355, 356,
	360, 366, 256, 218, 392, 400, 522, 316, 223, 224,
	225, 515, 516, 517, 518, 558, 559, 563, 464, 465,
	466, 467, 297, 552, 313, 470, 469, 335, 336, 381,
	452, 0, 207, 228, 370, 0, 456, 293, 596, 557,
	551, 214, 230, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 210, 217, 229,
	239, 243, 250, 266, 281, 283, 290, 303, 314, 322,
	323, 326, 332, 382, 388, 389, 390, 391, 410, 411,
	412, 415, 418, 419, 422, 424, 425, 428, 432, 436,
	439, 440, 442, 444, 446, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 507, 530, 532, 545, 564, 570, 482, 305, 306,
	447, 448, 318, 319, 593, 594, 304, 540, 571, 538,
	592, 565, 441, 380, 0, 0, 555, 0, 383, 286,
	309, 324, 0, 556, 503, 234, 468, 295, 258, 0,
	0, 219, 253, 237, 264, 279, 282, 328, 393, 401,
	430, 435, 301, 276, 251, 461, 248, 486, 510, 511,
	512, 514, 397, 271, 434, 398, 0, 378, 520, 521,
	320, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 368, 272, 0,
	0, 431, 0, 213, 0, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 0,
	372, 0, 0, 498, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 255, 329, 212, 414, 499, 291, 0, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 252, 0, 0, 0, 353,
	362, 361, 342, 343, 345, 347, 352, 359, 365, 0,
	0, 0, 0, 0, 270, 325, 277, 269, 524, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 403, 262, 0, 0, 455, 0,
	0, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	367, 1002, 334, 208, 232, 1000, 0, 413, 463, 475,
	0, 0, 0, 260, 0, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 0, 0, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	533, 534, 261, 598, 235, 561, 227, 0, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 357,
	358, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 0, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 0, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 0,
	0, 426, 474, 247, 546, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 386,
	487, 543, 339, 351, 354, 344, 363, 0, 364, 340,
	341, 346, 348, 349, 350, 355, 356, 360, 366, 256,
	218, 392, 400, 522, 316, 223, 224, 225, 515, 516,
	517, 518, 558, 559, 563, 464, 465, 466, 467, 297,
	552, 313, 470, 469, 335, 336, 381, 452, 0, 207,
	228, 370, 0, 456, 293, 596, 557, 551, 214, 230,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 410, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 305, 306, 447, 448, 318,
	319, 593, 594, 304, 540, 571, 538, 592, 565, 441,
	380, 0, 0, 555, 0, 383, 286, 309, 324, 0,
	556, 503, 234, 468, 295, 258, 0, 0, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 398, 0, 378, 520, 521, 320, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 2160, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 368, 272, 0, 0, 431, 0,
	213, 0, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 0, 372, 0, 0,
	498, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 255, 329,
	212, 414, 499, 291, 0, 0, 0, 0, 1806, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 252, 0, 0, 0, 353, 362, 361, 342,
	343, 345, 347, 352, 359, 365, 0, 0, 0, 0,
	0, 270, 325, 277, 269, 524, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 403, 262, 0, 0, 455, 0, 0, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 334,
	208, 232, 0, 0, 413, 463, 475, 0, 0, 0,
	260, 0, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 0, 0, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 533, 534, 261,
	598, 235, 561, 227, 0, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 357, 358, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 0,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 0, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 0, 0, 426, 474,
	247, 546, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 386, 487, 543, 339,
	351, 354, 344, 363, 0, 364, 340, 341, 346, 348,
	349, 350, 355, 356, 360, 366, 256, 218, 392, 400,
	522, 316, 223, 224, 225, 515, 516, 517, 518, 558,
	559, 563, 464, 465, 466, 467, 297, 552, 313, 470,
	469, 335, 336, 381, 452, 0, 207, 228, 370, 0,
	456, 293, 596, 557, 551, 214, 230, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 305, 306, 447, 448, 318, 319, 593, 594,
	304, 540, 571, 538, 592, 565, 441, 380, 0, 0,
	555, 0, 383, 286, 309, 324, 0, 556, 503, 234,
	468, 295, 258, 0, 0, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 398,
	0, 378, 520, 521, 320, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 0, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 0, 0, 1600, 0, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 0, 0, 0, 0, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 0, 0, 0, 567, 0, 0, 0,
	3548, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 260, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 0, 207, 228, 370, 0, 456, 293, 596,
	557, 551, 214, 230, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	0, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 398, 0, 378, 520,
	521, 320, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	0, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 1993, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	0, 0, 0, 0, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	0, 0, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 260, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 0,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 0, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 398, 0, 378, 520, 521, 320, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 368, 272, 0, 0, 431,
	0, 213, 0, 488, 259, 379, 376, 527, 287, 278,
	274, 257, 321, 387, 429, 509, 423, 0, 372, 0,
	0, 498, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 255,
	329, 212, 414, 499, 291, 0, 0, 0, 0, 2612,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 252, 0, 0, 0, 353, 362, 361,
	342, 343, 345, 347, 352, 359, 365, 0, 0, 0,
	0, 0, 270, 325, 277, 269, 524, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 403, 262, 0, 0, 455, 0, 0, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	334, 208, 232, 0, 0, 413, 463, 475, 0, 0,
	0, 260, 0, 473, 427, 544, 240, 289, 460, 433,
	471, 443, 292, 0, 0, 472, 374, 529, 453, 541,
	568, 569, 268, 407, 553, 513, 562, 595, 233, 265,
	421, 506, 547, 495, 399, 525, 526, 333, 494, 300,
	211, 371, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 574, 231, 481, 373,
	249, 238, 531, 550, 294, 458, 437, 438, 576, 590,
	577, 579, 580, 220, 508, 539, 246, 485, 0, 0,
	597, 254, 505, 222, 536, 504, 395, 330, 331, 221,
	0, 459, 273, 298, 0, 0, 263, 416, 533, 534,
	261, 598, 235, 561, 227, 0, 560, 409, 528, 537,
	396, 385, 226, 535, 394, 384, 338, 357, 358, 285,
	311, 450, 377, 451, 310, 312, 405, 404, 406, 215,
	548, 0, 216, 0, 500, 549, 599, 241, 242, 244,
	0, 284, 288, 296, 299, 307, 308, 317, 369, 420,
	449, 445, 454, 0, 523, 542, 554, 566, 572, 573,
	575, 581, 582, 583, 585, 591, 589, 586, 587, 588,
	584, 578, 408, 315, 496, 337, 375, 0, 0, 426,
	474, 247, 546, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 386, 487, 543,
	339, 351, 354, 344, 363, 0, 364, 340, 341, 346,
	348, 349, 350, 355, 356, 360, 366, 256, 218, 392,
	400, 522, 316, 223, 224, 225, 515, 516, 517, 518,
	558, 559, 563, 464, 465, 466, 467, 297, 552, 313,
	470, 469, 335, 336, 381, 452, 0, 207, 228, 370,
	0, 456, 293, 596, 557, 551, 214, 230, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 210, 217, 229, 239, 243, 250, 266, 281,
	283, 290, 303, 314, 322, 323, 326, 332, 382, 388,
	389, 390, 391, 410, 411, 412, 415, 418, 419, 422,
	424, 425, 428, 432, 436, 439, 440, 442, 444, 446,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 507, 530, 532, 545,
	564, 570, 482, 305, 306, 447, 448, 318, 319, 593,
	594, 304, 540, 571, 538, 592, 565, 441, 380, 0,
	0, 555, 0, 383, 286, 309, 324, 0, 556, 503,
	234, 468, 295, 258, 0, 0, 219, 253, 237, 264,
	279, 282, 328, 393, 401, 430, 435, 301, 276, 251,
	461, 248, 486, 510, 511, 512, 514, 397, 271, 434,
	398, 0, 378, 520, 521, 320, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 368, 272, 0, 0, 431, 0, 213, 0,
	488, 259, 379, 376, 527, 287, 278, 274, 257, 321,
	387, 429, 509, 423, 0, 372, 0, 0, 498, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 255, 329, 212, 414,
	499, 291, 0, 0, 0, 0, 0, 695, 0, 0,
	0, 0, 2597, 0, 0, 0, 0, 245, 0, 0,
	252, 2598, 0, 0, 353, 362, 361, 342, 343, 345,
	347, 352, 359, 365, 0, 0, 0, 0, 0, 270,
	325, 277, 269, 524, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 403,
	262, 0, 0, 455, 0, 0, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 334, 208, 232,
	0, 0, 413, 463, 475, 0, 0, 0, 260, 0,
	473, 427, 544, 240, 289, 460, 433, 471, 443, 292,
	0, 0, 472, 374, 529, 453, 541, 568, 569, 268,
	407, 553, 513, 562, 595, 233, 265, 421, 506, 547,
	495, 399, 525, 526, 333, 494, 300, 211, 371, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 574, 231, 481, 373, 249, 238, 531,
	550, 294, 458, 437, 438, 576, 590, 577, 579, 580,
	220, 508, 539, 246, 485, 0, 0, 597, 254, 505,
	222, 536, 504, 395, 330, 331, 221, 0, 459, 273,
	298, 0, 0, 263, 416, 533, 534, 261, 598, 235,
	561, 227, 0, 560, 409, 528, 537, 396, 385, 226,
	535, 394, 384, 338, 357, 358, 285, 311, 450, 377,
	451, 310, 312, 405, 404, 406, 215, 548, 0, 216,
	0, 500, 549, 599, 241, 242, 244, 0, 284, 288,
	296, 299, 307, 308, 317, 369, 420, 449, 445, 454,
	0, 523, 542, 554, 566, 572, 573, 575, 581, 582,
	583, 585, 591, 589, 586, 587, 588, 584, 578, 408,
	315, 496, 337, 375, 0, 0, 426, 474, 247, 546,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 386, 487, 543, 339, 351, 354,
	344, 363, 0, 364, 340, 341, 346, 348, 349, 350,
	355, 356, 360, 366, 256, 218, 392, 400, 522, 316,
	223, 224, 225, 515, 516, 517, 518, 558, 559, 563,
	464, 465, 466, 467, 297, 552, 313, 470, 469, 335,
	336, 381, 452, 0, 207, 228, 370, 0, 456, 293,
	596, 557, 551, 214, 230, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 210,
	217, 229, 239, 243, 250, 266, 281, 283, 290, 303,
	314, 322, 323, 326, 332, 382, 388, 389, 390, 391,
	410, 411, 412, 415, 418, 419, 422, 424, 425, 428,
	432, 436, 439, 440, 442, 444, 446, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 507, 530, 532, 545, 564, 570, 482,
	305, 306, 447, 448, 318, 319, 593, 594, 304, 540,
	571, 538, 592, 565, 441, 380, 0, 0, 555, 0,
	383, 286, 309, 324, 0, 556, 503, 234, 468, 295,
	258, 0, 0, 219, 253, 237, 264, 279, 282, 328,
	393, 401, 430, 435, 301, 276, 251, 461, 248, 486,
	510, 511, 512, 514, 397, 271, 434, 398, 0, 378,
	520, 521, 320, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 1642, 0, 0, 0, 368,
	272, 0, 0, 431, 0, 213, 0, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 0, 372, 0, 0, 498, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 255, 329, 212, 414, 499, 291, 0,
	0, 0, 0, 1641, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 252, 0, 0,
	0, 353, 362, 361, 342, 343, 345, 347, 352, 359,
	365, 0, 0, 0, 0, 0, 270, 325, 277, 269,
	524, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 403, 262, 0, 0,
	455, 0, 0, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 334, 208, 232, 0, 0, 413,
	463, 475, 0, 0, 0, 260, 0, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 0, 0, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 533, 534, 261, 598, 235, 561, 227, 0,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 357, 358, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 0, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 0, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 0, 0, 426, 474, 247, 546, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 386, 487, 543, 339, 351, 354, 344, 363, 0,
	364, 340, 341, 346, 348, 349, 350, 355, 356, 360,
	366, 256, 218, 392, 400, 522, 316, 223, 224, 225,
	515, 516, 517, 518, 558, 559, 563, 464, 465, 466,
	467, 297, 552, 313, 470, 469, 335, 336, 381, 452,
	0, 207, 228, 370, 0, 456, 293, 596, 557, 551,
	214, 230, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 305, 306, 447,
	448, 318, 319, 593, 594, 304, 540, 571, 538, 592,
	565, 441, 380, 0, 0, 555, 0, 383, 286, 309,
	324, 0, 556, 503, 234, 468, 295, 258, 0, 0,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 398, 0, 378, 520, 521, 320,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 368, 272, 0, 0,
	431, 0, 213, 0, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 0, 372,
	0, 0, 498, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	255, 329, 212, 414, 499, 291, 0, 0, 0, 0,
	0, 697, 698, 699, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 0, 0,
	0, 0, 0, 270, 325, 277, 269, 524, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 403, 262, 0, 0, 455, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 334, 208, 232, 0, 0, 413, 463, 475, 0,
	0, 0, 260, 0, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 0, 0, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 0, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 0, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 0, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 0, 0,
	426, 474, 247, 546, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 0, 207, 228,
	370, 0, 456, 293, 596, 557, 551, 214, 230, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 304, 540, 571, 538, 592, 565, 441, 380,
	0, 0, 555, 0, 383, 286, 309, 324, 0, 556,
	503, 234, 468, 295, 258, 0, 0, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 398, 0, 378, 520, 521, 320, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 368, 272, 0, 0, 431, 0, 213,
	0, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 0, 372, 0, 0, 498,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 255, 329, 212,
	414, 499, 291, 0, 0, 0, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 252, 0, 0, 0, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 0, 0, 0, 0, 0,
	270, 325, 277, 269, 524, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	403, 262, 0, 0, 455, 0, 0, 0, 567, 0,
	0, 0, 3679, 0, 0, 0, 367, 0, 334, 208,
	232, 0, 0, 413, 463, 475, 0, 0, 0, 260,
	0, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 0, 0, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 0, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 0, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 0, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 0, 0, 426, 474, 247,
	546, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 0, 207, 228, 370, 0, 456,
	293, 596, 557, 551, 214, 230, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 0, 0, 555,
	0, 383, 286, 309, 324, 0, 556, 503, 234, 468,
	295, 258, 0, 0, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 398, 0,
	378, 520, 521, 320, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	368, 272, 0, 0, 431, 0, 213, 0, 488, 259,
	379, 376, 527, 287, 278, 274, 257, 321, 387, 429,
	509, 423, 0, 372, 0, 0, 498, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 255, 329, 212, 414, 499, 291,
	0, 0, 0, 0, 1806, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 252, 0,
	0, 0, 353, 362, 361, 342, 343, 345, 347, 352,
	359, 365, 0, 0, 0, 0, 0, 270, 325, 277,
	269, 524, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 403, 262, 0,
	0, 455, 0, 0, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 334, 208, 232, 0, 0,
	413, 463, 475, 0, 0, 0, 260, 0, 473, 427,
	544, 240, 289, 460, 433, 471, 443, 292, 0, 0,
	472, 374, 529, 453, 541, 568, 569, 268, 407, 553,
	513, 562, 595, 233, 265, 421, 506, 547, 495, 399,
	525, 526, 333, 494, 300, 211, 371, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 574, 231, 481, 373, 249, 238, 531, 550, 294,
	458, 437, 438, 576, 590, 577, 579, 580, 220, 508,
	539, 246, 485, 0, 0, 597, 254, 505, 222, 536,
	504, 395, 330, 331, 221, 0, 459, 273, 298, 0,
	0, 263, 416, 533, 534, 261, 598, 235, 561, 227,
	0, 560, 409, 528, 537, 396, 385, 226, 535, 394,
	384, 338, 357, 358, 285, 311, 450, 377, 451, 310,
	312, 405, 404, 406, 215, 548, 0, 216, 0, 500,
	549, 599, 241, 242, 244, 0, 284, 288, 296, 299,
	307, 308, 317, 369, 420, 449, 445, 454, 0, 523,
	542, 554, 566, 572, 573, 575, 581, 582, 583, 585,
	591, 589, 586, 587, 588, 584, 578, 408, 315, 496,
	337, 375, 0, 0, 426, 474, 247, 546, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 386, 487, 543, 339, 351, 354, 344, 363,
	0, 364, 340, 341, 346, 348, 349, 350, 355, 356,
	360, 366, 256, 218, 392, 400, 522, 316, 223, 224,
	225, 515, 516, 517, 518, 558, 559, 563, 464, 465,
	466, 467, 297, 552, 313, 470, 469, 335, 336, 381,
	452, 0, 207, 228, 370, 0, 456, 293, 596, 557,
	551, 214, 230, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 210, 217, 229,
	239, 243, 250, 266, 281, 283, 290, 303, 314, 322,
	323, 326, 332, 382, 388, 389, 390, 391, 410, 411,
	412, 415, 418, 419, 422, 424, 425, 428, 432, 436,
	439, 440, 442, 444, 446, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 507, 530, 532, 545, 564, 570, 482, 305, 306,
	447, 448, 318, 319, 593, 594, 304, 540, 571, 538,
	592, 565, 441, 380, 0, 0, 555, 0, 383, 286,
	309, 324, 0, 556, 503, 234, 468, 295, 258, 0,
	0, 219, 253, 237, 264, 279, 282, 328, 393, 401,
	430, 435, 301, 276, 251, 461, 248, 486, 510, 511,
	512, 514, 397, 271, 434, 398, 0, 378, 520, 521,
	320, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 368, 272, 0,
	0, 431, 0, 213, 0, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 0,
	372, 0, 0, 498, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 255, 329, 212, 414, 499, 291, 0, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 252, 0, 0, 0, 353,
	362, 361, 342, 343, 345, 347, 352, 359, 365, 0,
	0, 0, 0, 0, 270, 325, 277, 269, 524, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 403, 262, 0, 0, 455, 0,
	0, 0, 567, 0, 0, 0, 3548, 0, 0, 0,
	367, 0, 334, 208, 232, 0, 0, 413, 463, 475,
	0, 0, 0, 260, 0, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 0, 0, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	533, 534, 261, 598, 235, 561, 227, 0, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 357,
	358, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 0, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 0, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 0,
	0, 426, 474, 247, 546, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 386,
	487, 543, 339, 351, 354, 344, 363, 0, 364, 340,
	341, 346, 348, 349, 350, 355, 356, 360, 366, 256,
	218, 392, 400, 522, 316, 223, 224, 225, 515, 516,
	517, 518, 558, 559, 563, 464, 465, 466, 467, 297,
	552, 313, 470, 469, 335, 336, 381, 452, 0, 207,
	228, 370, 0, 456, 293, 596, 557, 551, 214, 230,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 410, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 305, 306, 447, 448, 318,
	319, 593, 594, 304, 540, 571, 538, 592, 565, 441,
	380, 0, 0, 555, 0, 383, 286, 309, 324, 0,
	556, 503, 234, 468, 295, 258, 0, 0, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 398, 0, 378, 520, 521, 320, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 368, 272, 0, 0, 431, 0,
	213, 0, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 0, 372, 0, 0,
	498, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 255, 329,
	212, 414, 499, 291, 0, 101, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 252, 0, 0, 0, 353, 362, 361, 342,
	343, 345, 347, 352, 359, 365, 0, 0, 0, 0,
	0, 270, 325, 277, 269, 524, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 403, 262, 0, 0, 455, 0, 0, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 334,
	208, 232, 0, 0, 413, 463, 475, 0, 0, 0,
	260, 0, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 0, 0, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 533, 534, 261,
	598, 235, 561, 227, 0, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 357, 358, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 0,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 0, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 0, 0, 426, 474,
	247, 546, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 386, 487, 543, 339,
	351, 354, 344, 363, 0, 364, 340, 341, 346, 348,
	349, 350, 355, 356, 360, 366, 256, 218, 392, 400,
	522, 316, 223, 224, 225, 515, 516, 517, 518, 558,
	559, 563, 464, 465, 466, 467, 297, 552, 313, 470,
	469, 335, 336, 381, 452, 0, 207, 228, 370, 0,
	456, 293, 596, 557, 551, 214, 230, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 305, 306, 447, 448, 318, 319, 593, 594,
	304, 540, 571, 538, 592, 565, 441, 380, 0, 0,
	555, 0, 383, 286, 309, 324, 0, 556, 503, 234,
	468, 295, 258, 0, 0, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 398,
	0, 378, 520, 521, 320, 519, 0, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 0, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 0, 0, 0, 0, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 0, 0, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 260, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 0, 207, 228, 370, 0, 456, 293, 596,
	557, 551, 214, 230, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	0, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 398, 0, 378, 520,
	521, 320, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	0, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 1623, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	0, 0, 0, 0, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	0, 0, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 260, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 0,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 0, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 398, 0, 378, 520, 521, 320, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 368, 272, 0, 0, 431,
	0, 213, 0, 488, 259, 379, 376, 527, 287, 278,
	274, 257, 321, 387, 429, 509, 423, 0, 372, 0,
	0, 498, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 255,
	329, 212, 414, 499, 291, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 252, 0, 0, 0, 353, 362, 361,
	342, 343, 345, 347, 352, 359, 365, 0, 0, 0,
	0, 0, 270, 325, 277, 269, 524, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 403, 262, 0, 0, 455, 0, 0, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	334, 208, 232, 0, 0, 413, 463, 475, 0, 0,
	0, 260, 0, 473, 427, 544, 240, 289, 460, 433,
	471, 443, 292, 0, 0, 472, 374, 529, 453, 541,
	568, 569, 268, 407, 553, 513, 562, 595, 233, 265,
	421, 506, 547, 495, 399, 525, 526, 333, 494, 300,
	211, 371, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 574, 231, 481, 373,
	249, 238, 531, 550, 294, 458, 437, 438, 576, 590,
	577, 579, 580, 220, 508, 539, 246, 485, 0, 0,
	597, 254, 505, 222, 536, 504, 395, 330, 331, 221,
	0, 459, 273, 298, 0, 0, 263, 416, 533, 534,
	261, 598, 235, 561, 227, 0, 560, 409, 528, 537,
	396, 385, 226, 535, 394, 384, 338, 357, 358, 285,
	311, 450, 377, 451, 310, 312, 405, 404, 406, 215,
	548, 0, 216, 0, 500, 549, 599, 241, 242, 244,
	0, 284, 288, 296, 299, 307, 308, 317, 369, 420,
	449, 445, 454, 0, 523, 542, 554, 566, 572, 573,
	575, 581, 582, 583, 585, 591, 589, 586, 587, 588,
	584, 578, 408, 315, 496, 337, 375, 0, 0, 426,
	474, 247, 546, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 386, 487, 543,
	339, 351, 354, 344, 363, 0, 364, 340, 341, 346,
	348, 349, 350, 355, 356, 360, 366, 256, 218, 392,
	400, 522, 316, 223, 224, 225, 515, 516, 517, 518,
	558, 559, 563, 464, 465, 466, 467, 297, 552, 313,
	470, 469, 335, 336, 381, 452, 0, 207, 228, 370,
	1948, 456, 293, 596, 557, 551, 214, 230, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 210, 217, 229, 239, 243, 250, 266, 281,
	283, 290, 303, 314, 322, 323, 326, 332, 382, 388,
	389, 390, 391, 410, 411, 412, 415, 418, 419, 422,
	424, 425, 428, 432, 436, 439, 440, 442, 444, 446,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 507, 530, 532, 545,
	564, 570, 482, 305, 306, 447, 448, 318, 319, 593,
	594, 304, 540, 571, 538, 592, 565, 441, 380, 0,
	0, 555, 0, 383, 286, 309, 324, 0, 556, 503,
	234, 468, 295, 258, 0, 0, 219, 253, 237, 264,
	279, 282, 328, 393, 401, 430, 435, 301, 276, 251,
	461, 248, 486, 510, 511, 512, 514, 397, 271, 434,
	398, 0, 378, 520, 521, 320, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 368, 272, 0, 0, 431, 0, 213, 0,
	488, 259, 379, 376, 527, 287, 278, 274, 257, 321,
	387, 429, 509, 423, 0, 372, 0, 0, 498, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 255, 329, 212, 414,
	499, 291, 0, 0, 0, 0, 1939, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	252, 0, 0, 0, 353, 362, 361, 342, 343, 345,
	347, 352, 359, 365, 0, 0, 0, 0, 0, 270,
	325, 277, 269, 524, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 403,
	262, 0, 0, 455, 0, 0, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 334, 208, 232,
	0, 0, 413, 463, 475, 0, 0, 0, 260, 0,
	473, 427, 544, 240, 289, 460, 433, 471, 443, 292,
	0, 0, 472, 374, 529, 453, 541, 568, 569, 268,
	407, 553, 513, 562, 595, 233, 265, 421, 506, 547,
	495, 399, 525, 526, 333, 494, 300, 211, 371, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 574, 231, 481, 373, 249, 238, 531,
	550, 294, 458, 437, 438, 576, 590, 577, 579, 580,
	220, 508, 539, 246, 485, 0, 0, 597, 254, 505,
	222, 536, 504, 395, 330, 331, 221, 0, 459, 273,
	298, 0, 0, 263, 416, 533, 534, 261, 598, 235,
	561, 227, 0, 560, 409, 528, 537, 396, 385, 226,
	535, 394, 384, 338, 357, 358, 285, 311, 450, 377,
	451, 310, 312, 405, 404, 406, 215, 548, 0, 216,
	0, 500, 549, 599, 241, 242, 244, 0, 284, 288,
	296, 299, 307, 308, 317, 369, 420, 449, 445, 454,
	0, 523, 542, 554, 566, 572, 573, 575, 581, 582,
	583, 585, 591, 589, 586, 587, 588, 584, 578, 408,
	315, 496, 337, 375, 0, 0, 426, 474, 247, 546,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 386, 487, 543, 339, 351, 354,
	344, 363, 0, 364, 340, 341, 346, 348, 349, 350,
	355, 356, 360, 366, 256, 218, 392, 400, 522, 316,
	223, 224, 225, 515, 516, 517, 518, 558, 559, 563,
	464, 465, 466, 467, 297, 552, 313, 470, 469, 335,
	336, 381, 452, 0, 207, 228, 370, 0, 456, 293,
	596, 557, 551, 214, 230, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 210,
	217, 229, 239, 243, 250, 266, 281, 283, 290, 303,
	314, 322, 323, 326, 332, 382, 388, 389, 390, 391,
	410, 411, 412, 415, 418, 419, 422, 424, 425, 428,
	432, 436, 439, 440, 442, 444, 446, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 507, 530, 532, 545, 564, 570, 482,
	305, 306, 447, 448, 318, 319, 593, 594, 304, 540,
	571, 538, 592, 565, 441, 380, 0, 0, 555, 0,
	383, 286, 309, 324, 0, 556, 503, 234, 468, 295,
	258, 0, 0, 219, 253, 237, 264, 279, 282, 328,
	393, 401, 430, 435, 301, 276, 251, 461, 248, 486,
	510, 511, 512, 514, 397, 271, 434, 398, 0, 378,
	520, 521, 320, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 1773, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 368,
	272, 0, 0, 431, 0, 213, 0, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 0, 372, 0, 0, 498, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 255, 329, 212, 414, 499, 291, 0,
	0, 0, 0, 0, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 252, 0, 0,
	0, 353, 362, 361, 342, 343, 345, 347, 352, 359,
	365, 0, 0, 0, 0, 0, 270, 325, 277, 269,
	524, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 403, 262, 0, 0,
	455, 0, 0, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 334, 208, 232, 0, 0, 413,
	463, 475, 0, 0, 0, 260, 0, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 0, 0, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 533, 534, 261, 598, 235, 561, 227, 0,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 357, 358, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 0, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 0, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 0, 0, 426, 474, 247, 546, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 386, 487, 543, 339, 351, 354, 344, 363, 0,
	364, 340, 341, 346, 348, 349, 350, 355, 356, 360,
	366, 256, 218, 392, 400, 522, 316, 223, 224, 225,
	515, 516, 517, 518, 558, 559, 563, 464, 465, 466,
	467, 297, 552, 313, 470, 469, 335, 336, 381, 452,
	0, 207, 228, 370, 0, 456, 293, 596, 557, 551,
	214, 230, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 305, 306, 447,
	448, 318, 319, 593, 594, 304, 540, 571, 538, 592,
	565, 441, 380, 0, 0, 555, 0, 383, 286, 309,
	324, 0, 556, 503, 234, 468, 295, 258, 0, 0,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 398, 0, 378, 520, 521, 320,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 1771, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 368, 272, 0, 0,
	431, 0, 213, 0, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 0, 372,
	0, 0, 498, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	255, 329, 212, 414, 499, 291, 0, 0, 0, 0,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 0, 0,
	0, 0, 0, 270, 325, 277, 269, 524, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 403, 262, 0, 0, 455, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 334, 208, 232, 0, 0, 413, 463, 475, 0,
	0, 0, 260, 0, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 0, 0, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 0, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 0, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 0, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 0, 0,
	426, 474, 247, 546, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 0, 207, 228,
	370, 0, 456, 293, 596, 557, 551, 214, 230, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 304, 540, 571, 538, 592, 565, 441, 380,
	0, 0, 555, 0, 383, 286, 309, 324, 0, 556,
	503, 234, 468, 295, 258, 0, 0, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 398, 0, 378, 520, 521, 320, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 1769, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 368, 272, 0, 0, 431, 0, 213,
	0, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 0, 372, 0, 0, 498,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 255, 329, 212,
	414, 499, 291, 0, 0, 0, 0, 0, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 252, 0, 0, 0, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 0, 0, 0, 0, 0,
	270, 325, 277, 269, 524, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	403, 262, 0, 0, 455, 0, 0, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 334, 208,
	232, 0, 0, 413, 463, 475, 0, 0, 0, 260,
	0, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 0, 0, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 0, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 0, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 0, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 0, 0, 426, 474, 247,
	546, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 0, 207, 228, 370, 0, 456,
	293, 596, 557, 551, 214, 230, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 0, 0, 555,
	0, 383, 286, 309, 324, 0, 556, 503, 234, 468,
	295, 258, 0, 0, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 398, 0,
	378, 520, 521, 320, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 1767, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	368, 272, 0, 0, 431, 0, 213, 0, 488, 259,
	379, 376, 527, 287, 278, 274, 257, 321, 387, 429,
	509, 423, 0, 372, 0, 0, 498, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 255, 329, 212, 414, 499, 291,
	0, 0, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 252, 0,
	0, 0, 353, 362, 361, 342, 343, 345, 347, 352,
	359, 365, 0, 0, 0, 0, 0, 270, 325, 277,
	269, 524, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 403, 262, 0,
	0, 455, 0, 0, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 334, 208, 232, 0, 0,
	413, 463, 475, 0, 0, 0, 260, 0, 473, 427,
	544, 240, 289, 460, 433, 471, 443, 292, 0, 0,
	472, 374, 529, 453, 541, 568, 569, 268, 407, 553,
	513, 562, 595, 233, 265, 421, 506, 547, 495, 399,
	525, 526, 333, 494, 300, 211, 371, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 574, 231, 481, 373, 249, 238, 531, 550, 294,
	458, 437, 438, 576, 590, 577, 579, 580, 220, 508,
	539, 246, 485, 0, 0, 597, 254, 505, 222, 536,
	504, 395, 330, 331, 221, 0, 459, 273, 298, 0,
	0, 263, 416, 533, 534, 261, 598, 235, 561, 227,
	0, 560, 409, 528, 537, 396, 385, 226, 535, 394,
	384, 338, 357, 358, 285, 311, 450, 377, 451, 310,
	312, 405, 404, 406, 215, 548, 0, 216, 0, 500,
	549, 599, 241, 242, 244, 0, 284, 288, 296, 299,
	307, 308, 317, 369, 420, 449, 445, 454, 0, 523,
	542, 554, 566, 572, 573, 575, 581, 582, 583, 585,
	591, 589, 586, 587, 588, 584, 578, 408, 315, 496,
	337, 375, 0, 0, 426, 474, 247, 546, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 386, 487, 543, 339, 351, 354, 344, 363,
	0, 364, 340, 341, 346, 348, 349, 350, 355, 356,
	360, 366, 256, 218, 392, 400, 522, 316, 223, 224,
	225, 515, 516, 517, 518, 558, 559, 563, 464, 465,
	466, 467, 297, 552, 313, 470, 469, 335, 336, 381,
	452, 0, 207, 228, 370, 0, 456, 293, 596, 557,
	551, 214, 230, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 210, 217, 229,
	239, 243, 250, 266, 281, 283, 290, 303, 314, 322,
	323, 326, 332, 382, 388, 389, 390, 391, 410, 411,
	412, 415, 418, 419, 422, 424, 425, 428, 432, 436,
	439, 440, 442, 444, 446, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 507, 530, 532, 545, 564, 570, 482, 305, 306,
	447, 448, 318, 319, 593, 594, 304, 540, 571, 538,
	592, 565, 441, 380, 0, 0, 555, 0, 383, 286,
	309, 324, 0, 556, 503, 234, 468, 295, 258, 0,
	0, 219, 253, 237, 264, 279, 282, 328, 393, 401,
	430, 435, 301, 276, 251, 461, 248, 486, 510, 511,
	512, 514, 397, 271, 434, 398, 0, 378, 520, 521,
	320, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 1765, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 368, 272, 0,
	0, 431, 0, 213, 0, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 0,
	372, 0, 0, 498, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 255, 329, 212, 414, 499, 291, 0, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 252, 0, 0, 0, 353,
	362, 361, 342, 343, 345, 347, 352, 359, 365, 0,
	0, 0, 0, 0, 270, 325, 277, 269, 524, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 403, 262, 0, 0, 455, 0,
	0, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 334, 208, 232, 0, 0, 413, 463, 475,
	0, 0, 0, 260, 0, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 0, 0, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	533, 534, 261, 598, 235, 561, 227, 0, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 357,
	358, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 0, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 0, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 0,
	0, 426, 474, 247, 546, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 386,
	487, 543, 339, 351, 354, 344, 363, 0, 364, 340,
	341, 346, 348, 349, 350, 355, 356, 360, 366, 256,
	218, 392, 400, 522, 316, 223, 224, 225, 515, 516,
	517, 518, 558, 559, 563, 464, 465, 466, 467, 297,
	552, 313, 470, 469, 335, 336, 381, 452, 0, 207,
	228, 370, 0, 456, 293, 596, 557, 551, 214, 230,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 410, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 305, 306, 447, 448, 318,
	319, 593, 594, 304, 540, 571, 538, 592, 565, 441,
	380, 0, 0, 555, 0, 383, 286, 309, 324, 0,
	556, 503, 234, 468, 295, 258, 0, 0, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 398, 0, 378, 520, 521, 320, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 1761, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 368, 272, 0, 0, 431, 0,
	213, 0, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 0, 372, 0, 0,
	498, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 255, 329,
	212, 414, 499, 291, 0, 0, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 252, 0, 0, 0, 353, 362, 361, 342,
	343, 345, 347, 352, 359, 365, 0, 0, 0, 0,
	0, 270, 325, 277, 269, 524, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 403, 262, 0, 0, 455, 0, 0, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 334,
	208, 232, 0, 0, 413, 463, 475, 0, 0, 0,
	260, 0, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 0, 0, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 533, 534, 261,
	598, 235, 561, 227, 0, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 357, 358, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 0,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 0, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 0, 0, 426, 474,
	247, 546, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 386, 487, 543, 339,
	351, 354, 344, 363, 0, 364, 340, 341, 346, 348,
	349, 350, 355, 356, 360, 366, 256, 218, 392, 400,
	522, 316, 223, 224, 225, 515, 516, 517, 518, 558,
	559, 563, 464, 465, 466, 467, 297, 552, 313, 470,
	469, 335, 336, 381, 452, 0, 207, 228, 370, 0,
	456, 293, 596, 557, 551, 214, 230, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 305, 306, 447, 448, 318, 319, 593, 594,
	304, 540, 571, 538, 592, 565, 441, 380, 0, 0,
	555, 0, 383, 286, 309, 324, 0, 556, 503, 234,
	468, 295, 258, 0, 0, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 398,
	0, 378, 520, 521, 320, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 1759,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 0, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 0, 0, 0, 0, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 0, 0, 0, 0, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 0, 0, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 260, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 0, 207, 228, 370, 0, 456, 293, 596,
	557, 551, 214, 230, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	0, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 398, 0, 378, 520,
	521, 320, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 1757, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	0, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 0, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	0, 0, 0, 0, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	0, 0, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 260, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 0,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 0, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 398, 0, 378, 520, 521, 320, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 368, 272, 0, 0, 431,
	0, 213, 0, 488, 259, 379, 376, 527, 287, 278,
	274, 257, 321, 387, 429, 509, 423, 0, 372, 0,
	0, 498, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 255,
	329, 212, 414, 499, 291, 0, 1732, 0, 0, 0,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 252, 0, 0, 0, 353, 362, 361,
	342, 343, 345, 347, 352, 359, 365, 0, 0, 0,
	0, 0, 270, 325, 277, 269, 524, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 403, 262, 0, 0, 455, 0, 0, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	334, 208, 232, 0, 0, 413, 463, 475, 0, 0,
	0, 260, 0, 473, 427, 544, 240, 289, 460, 433,
	471, 443, 292, 0, 0, 472, 374, 529, 453, 541,
	568, 569, 268, 407, 553, 513, 562, 595, 233, 265,
	421, 506, 547, 495, 399, 525, 526, 333, 494, 300,
	211, 371, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 574, 231, 481, 373,
	249, 238, 531, 550, 294, 458, 437, 438, 576, 590,
	577, 579, 580, 220, 508, 539, 246, 485, 0, 0,
	597, 254, 505, 222, 536, 504, 395, 330, 331, 221,
	0, 459, 273, 298, 0, 0, 263, 416, 533, 534,
	261, 598, 235, 561, 227, 0, 560, 409, 528, 537,
	396, 385, 226, 535, 394, 384, 338, 357, 358, 285,
	311, 450, 377, 451, 310, 312, 405, 404, 406, 215,
	548, 0, 216, 0, 500, 549, 599, 241, 242, 244,
	0, 284, 288, 296, 299, 307, 308, 317, 369, 420,
	449, 445, 454, 0, 523, 542, 554, 566, 572, 573,
	575, 581, 582, 583, 585, 591, 589, 586, 587, 588,
	584, 578, 408, 315, 496, 337, 375, 0, 0, 426,
	474, 247, 546, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 386, 487, 543,
	339, 351, 354, 344, 363, 0, 364, 340, 341, 346,
	348, 349, 350, 355, 356, 360, 366, 256, 218, 392,
	400, 522, 316, 223, 224, 225, 515, 516, 517, 518,
	558, 559, 563, 464, 465, 466, 467, 297, 552, 313,
	470, 469, 335, 336, 381, 452, 0, 207, 228, 370,
	0, 456, 293, 596, 557, 551, 214, 230, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 210, 217, 229, 239, 243, 250, 266, 281,
	283, 290, 303, 314, 322, 323, 326, 332, 382, 388,
	389, 390, 391, 410, 411, 412, 415, 418, 419, 422,
	424, 425, 428, 432, 436, 439, 440, 442, 444, 446,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 489,
	490, 491, 492, 493, 501, 502, 507, 530, 532, 545,
	564, 570, 482, 305, 306, 447, 448, 318, 319, 593,
	594, 304, 540, 571, 538, 592, 565, 441, 380, 0,
	0, 555, 0, 383, 286, 309, 324, 0, 556, 503,
	234, 468, 295, 258, 0, 0, 219, 253, 237, 264,
	279, 282, 328, 393, 401, 430, 435, 301, 276, 251,
	461, 248, 486, 510, 511, 512, 514, 397, 271, 434,
	398, 0, 378, 520, 521, 320, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 1627, 275, 0, 0,
	0, 0, 368, 272, 0, 0, 431, 0, 213, 0,
	488, 259, 379, 376, 527, 287, 278, 274, 257, 321,
	387, 429, 509, 423, 0, 372, 0, 0, 498, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 255, 329, 212, 414,
	499, 291, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	252, 0, 0, 0, 353, 362, 361, 342, 343, 345,
	347, 352, 359, 365, 0, 0, 0, 0, 0, 270,
	325, 277, 269, 524, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 403,
	262, 0, 0, 455, 0, 0, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 334, 208, 232,
	0, 0, 413, 463, 475, 0, 0, 0, 260, 0,
	473, 427, 544, 240, 289, 460, 433, 471, 443, 292,
	0, 0, 472, 374, 529, 453, 541, 568, 569, 268,
	407, 553, 513, 562, 595, 233, 265, 421, 506, 547,
	495, 399, 525, 526, 333, 494, 300, 211, 371, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 574, 231, 481, 373, 249, 238, 531,
	550, 294, 458, 437, 438, 576, 590, 577, 579, 580,
	220, 508, 539, 246, 485, 0, 0, 597, 254, 505,
	222, 536, 504, 395, 330, 331, 221, 0, 459, 273,
	298, 0, 0, 263, 416, 533, 534, 261, 598, 235,
	561, 227, 0, 560, 409, 528, 537, 396, 385, 226,
	535, 394, 384, 338, 357, 358, 285, 311, 450, 377,
	451, 310, 312, 405, 404, 406, 215, 548, 0, 216,
	0, 500, 549, 599, 241, 242, 244, 0, 284, 288,
	296, 299, 307, 308, 317, 369, 420, 449, 445, 454,
	0, 523, 542, 554, 566, 572, 573, 575, 581, 582,
	583, 585, 591, 589, 586, 587, 588, 584, 578, 408,
	315, 496, 337, 375, 0, 0, 426, 474, 247, 546,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 386, 487, 543, 339, 351, 354,
	344, 363, 0, 364, 340, 341, 346, 348, 349, 350,
	355, 356, 360, 366, 256, 218, 392, 400, 522, 316,
	223, 224, 225, 515, 516, 517, 518, 558, 559, 563,
	464, 465, 466, 467, 297, 552, 313, 470, 469, 335,
	336, 381, 452, 0, 207, 228, 370, 0, 456, 293,
	596, 557, 551, 214, 230, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 210,
	217, 229, 239, 243, 250, 266, 281, 283, 290, 303,
	314, 322, 323, 326, 332, 382, 388, 389, 390, 391,
	410, 411, 412, 415, 418, 419, 422, 424, 425, 428,
	432, 436, 439, 440, 442, 444, 446, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 489, 490, 491, 492,
	493, 501, 502, 507, 530, 532, 545, 564, 570, 482,
	305, 306, 447, 448, 318, 319, 593, 594, 304, 540,
	571, 538, 592, 565, 441, 380, 0, 0, 555, 0,
	383, 286, 309, 324, 0, 556, 503, 234, 468, 295,
	258, 0, 0, 219, 253, 237, 264, 279, 282, 328,
	393, 401, 430, 435, 301, 276, 251, 461, 248, 486,
	510, 511, 512, 514, 397, 271, 434, 398, 0, 378,
	520, 521, 320, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 368,
	272, 0, 0, 431, 0, 213, 0, 488, 259, 379,
	376, 527, 287, 278, 274, 257, 321, 387, 429, 509,
	423, 0, 372, 0, 0, 498, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 255, 329, 212, 414, 499, 291, 0,
	101, 0, 0, 0, 869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 252, 0, 0,
	0, 353, 362, 361, 342, 343, 345, 347, 352, 359,
	365, 0, 0, 0, 0, 0, 270, 325, 277, 269,
	524, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 403, 262, 0, 0,
	455, 0, 0, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 334, 208, 232, 0, 0, 413,
	463, 475, 0, 0, 0, 260, 0, 473, 427, 544,
	240, 289, 460, 433, 471, 443, 292, 0, 0, 472,
	374, 529, 453, 541, 568, 569, 268, 407, 553, 513,
	562, 595, 233, 265, 421, 506, 547, 495, 399, 525,
	526, 333, 494, 300, 211, 371, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	574, 231, 481, 373, 249, 238, 531, 550, 294, 458,
	437, 438, 576, 590, 577, 579, 580, 220, 508, 539,
	246, 485, 0, 0, 597, 254, 505, 222, 536, 504,
	395, 330, 331, 221, 0, 459, 273, 298, 0, 0,
	263, 416, 533, 534, 261, 598, 235, 561, 227, 0,
	560, 409, 528, 537, 396, 385, 226, 535, 394, 384,
	338, 357, 358, 285, 311, 450, 377, 451, 310, 312,
	405, 404, 406, 215, 548, 0, 216, 0, 500, 549,
	599, 241, 242, 244, 0, 284, 288, 296, 299, 307,
	308, 317, 369, 420, 449, 445, 454, 0, 523, 542,
	554, 566, 572, 573, 575, 581, 582, 583, 585, 591,
	589, 586, 587, 588, 584, 578, 408, 315, 496, 337,
	375, 0, 0, 426, 474, 247, 546, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 386, 487, 543, 339, 351, 354, 344, 363, 0,
	364, 340, 341, 346, 348, 349, 350, 355, 356, 360,
	366, 256, 218, 392, 400, 522, 316, 223, 224, 225,
	515, 516, 517, 518, 558, 559, 563, 464, 465, 466,
	467, 297, 552, 313, 470, 469, 335, 336, 381, 452,
	0, 207, 228, 370, 0, 456, 293, 596, 557, 551,
	214, 230, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 210, 217, 229, 239,
	243, 250, 266, 281, 283, 290, 303, 314, 322, 323,
	326, 332, 382, 388, 389, 390, 391, 410, 411, 412,
	415, 418, 419, 422, 424, 425, 428, 432, 436, 439,
	440, 442, 444, 446, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 489, 490, 491, 492, 493, 501, 502,
	507, 530, 532, 545, 564, 570, 482, 305, 306, 447,
	448, 318, 319, 593, 594, 304, 540, 571, 538, 592,
	565, 441, 380, 0, 0, 555, 0, 383, 286, 309,
	324, 0, 556, 503, 234, 468, 295, 258, 0, 0,
	219, 253, 237, 264, 279, 282, 328, 393, 401, 430,
	435, 301, 276, 251, 461, 248, 486, 510, 511, 512,
	514, 397, 271, 434, 398, 0, 378, 520, 521, 320,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 368, 272, 0, 0,
	431, 0, 213, 0, 488, 259, 379, 376, 527, 287,
	278, 274, 257, 321, 387, 429, 509, 423, 0, 372,
	0, 0, 498, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	255, 329, 212, 414, 499, 291, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 252, 0, 0, 0, 353, 362,
	361, 342, 343, 345, 347, 352, 359, 365, 0, 0,
	0, 0, 0, 270, 325, 277, 269, 524, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1375,
	0, 302, 0, 403, 262, 0, 0, 455, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 334, 208, 232, 0, 0, 413, 463, 475, 0,
	0, 0, 260, 0, 473, 427, 544, 240, 289, 460,
	433, 471, 443, 292, 0, 0, 472, 374, 529, 453,
	541, 568, 569, 268, 407, 553, 513, 562, 595, 233,
	265, 421, 506, 547, 495, 399, 525, 526, 333, 494,
	300, 211, 371, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 574, 231, 481,
	373, 249, 238, 531, 550, 294, 458, 437, 438, 576,
	590, 577, 579, 580, 220, 508, 539, 246, 485, 0,
	0, 597, 254, 505, 222, 536, 504, 395, 330, 331,
	221, 0, 459, 273, 298, 0, 0, 263, 416, 533,
	534, 261, 598, 235, 561, 227, 0, 560, 409, 528,
	537, 396, 385, 226, 535, 394, 384, 338, 357, 358,
	285, 311, 450, 377, 451, 310, 312, 405, 404, 406,
	215, 548, 0, 216, 0, 500, 549, 599, 241, 242,
	244, 0, 284, 288, 296, 299, 307, 308, 317, 369,
	420, 449, 445, 454, 0, 523, 542, 554, 566, 572,
	573, 575, 581, 582, 583, 585, 591, 589, 586, 587,
	588, 584, 578, 408, 315, 496, 337, 375, 0, 0,
	426, 474, 247, 546, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 386, 487,
	543, 339, 351, 354, 344, 363, 0, 364, 340, 341,
	346, 348, 349, 350, 355, 356, 360, 366, 256, 218,
	392, 400, 522, 316, 223, 224, 225, 515, 516, 517,
	518, 558, 559, 563, 464, 465, 466, 467, 297, 552,
	313, 470, 469, 335, 336, 381, 452, 0, 207, 228,
	370, 0, 456, 293, 596, 557, 551, 214, 230, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 210, 217, 229, 239, 243, 250, 266,
	281, 283, 290, 303, 314, 322, 323, 326, 332, 382,
	388, 389, 390, 391, 410, 411, 412, 415, 418, 419,
	422, 424, 425, 428, 432, 436, 439, 440, 442, 444,
	446, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	489, 490, 491, 492, 493, 501, 502, 507, 530, 532,
	545, 564, 570, 482, 305, 306, 447, 448, 318, 319,
	593, 594, 1374, 540, 571, 538, 592, 565, 441, 380,
	0, 0, 555, 0, 383, 286, 309, 324, 0, 556,
	503, 234, 468, 295, 258, 0, 0, 219, 253, 237,
	264, 279, 282, 328, 393, 401, 430, 435, 301, 276,
	251, 461, 248, 486, 510, 511, 512, 514, 397, 271,
	434, 398, 0, 378, 520, 521, 320, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 368, 272, 0, 0, 431, 0, 213,
	0, 488, 259, 379, 376, 527, 287, 278, 274, 257,
	321, 387, 429, 509, 423, 0, 372, 0, 0, 498,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 255, 329, 212,
	414, 499, 291, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 252, 0, 0, 0, 353, 362, 361, 342, 343,
	345, 347, 352, 359, 365, 0, 0, 0, 0, 0,
	270, 325, 277, 269, 524, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	403, 262, 0, 0, 455, 0, 0, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 334, 208,
	232, 0, 0, 413, 463, 475, 0, 0, 0, 260,
	0, 473, 427, 544, 240, 289, 460, 433, 471, 443,
	292, 0, 0, 472, 374, 529, 453, 541, 568, 569,
	268, 407, 553, 513, 562, 595, 233, 265, 421, 506,
	547, 495, 399, 525, 526, 333, 494, 300, 211, 371,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 574, 231, 481, 373, 249, 238,
	531, 550, 294, 458, 437, 438, 576, 590, 577, 579,
	580, 220, 508, 539, 246, 485, 0, 0, 597, 254,
	505, 222, 536, 504, 395, 330, 331, 221, 0, 459,
	273, 298, 0, 0, 263, 416, 533, 534, 261, 598,
	235, 561, 227, 0, 560, 409, 528, 537, 396, 385,
	226, 535, 394, 384, 338, 357, 358, 285, 311, 450,
	377, 451, 310, 312, 405, 404, 406, 215, 548, 0,
	216, 0, 500, 549, 599, 241, 242, 244, 0, 284,
	288, 296, 299, 307, 308, 317, 369, 420, 449, 445,
	454, 0, 523, 542, 554, 566, 572, 573, 575, 581,
	582, 583, 585, 591, 589, 586, 587, 588, 584, 578,
	408, 315, 496, 337, 375, 0, 0, 426, 474, 247,
	546, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 386, 487, 543, 339, 351,
	354, 344, 363, 0, 364, 340, 341, 346, 348, 349,
	350, 355, 356, 360, 366, 256, 218, 392, 400, 522,
	316, 223, 224, 225, 515, 516, 517, 518, 558, 559,
	563, 464, 465, 466, 467, 297, 552, 313, 470, 469,
	335, 336, 381, 452, 0, 207, 228, 370, 0, 456,
	293, 596, 557, 551, 214, 230, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 209,
	210, 217, 229, 239, 243, 250, 266, 281, 283, 290,
	303, 314, 322, 323, 326, 332, 382, 388, 389, 390,
	391, 410, 411, 412, 415, 418, 419, 422, 424, 425,
	428, 432, 436, 439, 440, 442, 444, 446, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 489, 490, 491,
	492, 493, 501, 502, 507, 530, 532, 545, 564, 570,
	482, 305, 306, 447, 448, 318, 319, 593, 594, 304,
	540, 571, 538, 592, 565, 441, 380, 0, 0, 555,
	0, 383, 286, 309, 324, 0, 556, 503, 234, 468,
	295, 258, 0, 0, 219, 253, 237, 264, 279, 282,
	328, 393, 401, 430, 435, 301, 276, 251, 461, 248,
	486, 510, 511, 512, 514, 397, 271, 434, 398, 0,
	378, 520, 521, 320, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	368, 272, 0, 0, 431, 0, 213, 0, 488, 259,
	379, 376, 527, 287, 278, 274, 257, 321, 387, 429,
	509, 423, 0, 372, 0, 0, 498, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 255, 329, 212, 414, 499, 291,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 252, 0,
	0, 0, 353, 362, 361, 342, 343, 345, 347, 352,
	359, 365, 0, 0, 0, 0, 0, 270, 325, 277,
	269, 524, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 403, 262, 0,
	0, 455, 0, 636, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 334, 208, 232, 0, 0,
	413, 463, 475, 0, 0, 0, 260, 0, 473, 427,
	544, 240, 289, 460, 433, 471, 443, 292, 0, 0,
	472, 374, 529, 453, 541, 568, 569, 268, 407, 553,
	513, 562, 595, 233, 265, 421, 506, 547, 495, 399,
	525, 526, 333, 494, 300, 211, 371, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 574, 231, 481, 373, 249, 238, 531, 550, 294,
	458, 437, 438, 576, 590, 577, 579, 580, 220, 508,
	539, 246, 485, 0, 0, 597, 254, 505, 222, 536,
	504, 395, 330, 331, 221, 0, 459, 273, 298, 0,
	0, 263, 416, 533, 534, 261, 598, 235, 561, 227,
	0, 560, 409, 528, 537, 396, 385, 226, 535, 394,
	384, 338, 357, 358, 285, 311, 450, 377, 451, 310,
	312, 405, 404, 406, 215, 548, 0, 216, 0, 500,
	549, 599, 241, 242, 244, 0, 284, 288, 296, 299,
	307, 308, 317, 369, 420, 449, 445, 454, 0, 523,
	542, 554, 566, 572, 573, 575, 581, 582, 583, 585,
	591, 589, 586, 587, 588, 584, 578, 408, 315, 496,
	337, 375, 0, 0, 426, 474, 247, 546, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 386, 487, 543, 339, 351, 354, 344, 363,
	0, 364, 340, 341, 346, 348, 349, 350, 355, 356,
	360, 366, 256, 218, 392, 400, 522, 316, 223, 224,
	225, 515, 516, 517, 518, 558, 559, 563, 464, 465,
	466, 467, 297, 552, 313, 470, 469, 335, 336, 381,
	452, 0, 207, 228, 370, 0, 456, 293, 596, 557,
	551, 214, 230, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 210, 217, 229,
	239, 243, 250, 266, 281, 283, 290, 303, 314, 322,
	323, 326, 332, 382, 388, 389, 390, 391, 410, 411,
	412, 415, 418, 419, 422, 424, 425, 428, 432, 436,
	439, 440, 442, 444, 446, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 489, 490, 491, 492, 493, 501,
	502, 507, 530, 532, 545, 564, 570, 482, 305, 306,
	447, 448, 318, 319, 593, 594, 304, 540, 571, 538,
	592, 565, 441, 380, 0, 0, 555, 0, 383, 286,
	309, 324, 0, 556, 503, 234, 468, 295, 258, 0,
	0, 219, 253, 237, 264, 279, 282, 328, 393, 401,
	430, 435, 301, 276, 251, 461, 248, 486, 510, 511,
	512, 514, 397, 271, 434, 398, 0, 378, 520, 521,
	320, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 368, 272, 0,
	0, 431, 0, 213, 0, 488, 259, 379, 376, 527,
	287, 278, 274, 257, 321, 387, 429, 509, 423, 0,
	372, 0, 0, 498, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 255, 329, 212, 414, 499, 291, 0, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 252, 0, 0, 0, 353,
	362, 361, 342, 343, 345, 347, 352, 359, 365, 0,
	0, 0, 0, 0, 270, 325, 277, 269, 524, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 403, 262, 0, 0, 455, 0,
	0, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 334, 208, 232, 0, 0, 413, 463, 475,
	0, 0, 0, 260, 0, 473, 427, 544, 240, 289,
	460, 433, 471, 443, 292, 0, 0, 472, 374, 529,
	453, 541, 568, 569, 268, 407, 553, 513, 562, 595,
	233, 265, 421, 506, 547, 495, 399, 525, 526, 333,
	494, 300, 211, 371, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 574, 231,
	481, 373, 249, 238, 531, 550, 294, 458, 437, 438,
	576, 590, 577, 579, 580, 220, 508, 539, 246, 485,
	0, 0, 597, 254, 505, 222, 536, 504, 395, 330,
	331, 221, 0, 459, 273, 298, 0, 0, 263, 416,
	533, 534, 261, 598, 235, 561, 227, 0, 560, 409,
	528, 537, 396, 385, 226, 535, 394, 384, 338, 357,
	358, 285, 311, 450, 377, 451, 310, 312, 405, 404,
	406, 215, 548, 0, 216, 0, 500, 549, 599, 241,
	242, 244, 0, 284, 288, 296, 299, 307, 308, 317,
	369, 420, 449, 445, 454, 0, 523, 542, 554, 566,
	572, 573, 575, 581, 582, 583, 585, 591, 589, 586,
	587, 588, 584, 578, 408, 315, 496, 337, 375, 0,
	0, 426, 474, 247, 546, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 386,
	487, 543, 339, 351, 354, 344, 363, 0, 364, 340,
	341, 346, 348, 349, 350, 355, 356, 360, 366, 256,
	218, 392, 400, 522, 316, 223, 224, 225, 515, 516,
	517, 518, 558, 559, 563, 464, 465, 466, 467, 297,
	552, 313, 470, 469, 335, 336, 381, 452, 0, 207,
	228, 370, 0, 456, 293, 596, 557, 551, 214, 230,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 210, 217, 229, 239, 243, 250,
	266, 281, 283, 290, 303, 314, 322, 323, 326, 332,
	382, 388, 389, 390, 391, 3687, 411, 412, 415, 418,
	419, 422, 424, 425, 428, 432, 436, 439, 440, 442,
	444, 446, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 489, 490, 491, 492, 493, 501, 502, 507, 530,
	532, 545, 564, 570, 482, 305, 306, 447, 448, 318,
	319, 593, 594, 304, 540, 571, 538, 592, 565, 441,
	380, 0, 0, 555, 0, 383, 286, 309, 324, 0,
	556, 503, 234, 468, 295, 258, 0, 0, 219, 253,
	237, 264, 279, 282, 328, 393, 401, 430, 435, 301,
	276, 251, 461, 248, 486, 510, 511, 512, 514, 397,
	271, 434, 398, 0, 378, 520, 521, 320, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 368, 272, 0, 0, 431, 0,
	213, 0, 488, 259, 379, 376, 527, 287, 278, 274,
	257, 321, 387, 429, 509, 423, 0, 372, 0, 0,
	498, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 255, 329,
	212, 414, 499, 291, 0, 0, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 252, 0, 0, 0, 353, 362, 361, 342,
	343, 345, 347, 352, 359, 365, 0, 0, 0, 0,
	0, 270, 325, 277, 269, 524, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 403, 262, 0, 0, 455, 0, 0, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 334,
	208, 232, 0, 0, 413, 463, 475, 0, 0, 0,
	260, 0, 473, 427, 544, 240, 289, 460, 433, 471,
	443, 292, 0, 0, 472, 374, 529, 453, 541, 568,
	569, 268, 407, 553, 513, 562, 595, 233, 265, 421,
	506, 547, 495, 399, 525, 526, 333, 494, 300, 211,
	371, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 574, 231, 481, 373, 249,
	238, 531, 550, 294, 458, 437, 438, 576, 590, 577,
	579, 580, 220, 508, 539, 246, 485, 0, 0, 597,
	254, 505, 222, 536, 504, 395, 330, 331, 221, 0,
	459, 273, 298, 0, 0, 263, 416, 533, 534, 261,
	598, 235, 561, 227, 0, 560, 409, 528, 537, 396,
	385, 226, 535, 394, 384, 338, 357, 358, 285, 311,
	450, 377, 451, 310, 312, 405, 404, 406, 215, 548,
	0, 216, 0, 500, 549, 599, 241, 242, 244, 0,
	284, 288, 296, 299, 307, 308, 317, 369, 420, 449,
	445, 454, 0, 523, 542, 554, 566, 572, 573, 575,
	581, 582, 583, 585, 591, 589, 586, 587, 588, 584,
	578, 408, 315, 496, 337, 375, 0, 0, 426, 474,
	247, 546, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 386, 487, 543, 339,
	351, 354, 344, 363, 0, 364, 340, 341, 346, 348,
	349, 350, 355, 356, 360, 366, 256, 218, 392, 400,
	522, 316, 223, 224, 225, 515, 516, 517, 518, 558,
	559, 563, 464, 465, 466, 467, 297, 552, 313, 470,
	469, 335, 336, 381, 452, 0, 207, 228, 370, 0,
	456, 293, 596, 557, 551, 214, 230, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 210, 217, 229, 239, 243, 250, 266, 281, 283,
	290, 303, 314, 322, 323, 326, 332, 382, 388, 389,
	390, 391, 410, 411, 412, 415, 418, 419, 422, 424,
	425, 428, 432, 436, 439, 440, 442, 444, 446, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 489, 490,
	491, 492, 493, 501, 502, 507, 530, 532, 545, 564,
	570, 482, 305, 306, 447, 448, 318, 319, 593, 594,
	304, 540, 571, 538, 592, 565, 441, 380, 0, 0,
	555, 0, 383, 286, 309, 324, 0, 556, 503, 234,
	468, 295, 258, 0, 0, 219, 253, 237, 264, 279,
	282, 328, 393, 401, 430, 435, 301, 276, 251, 461,
	248, 486, 510, 511, 512, 514, 397, 271, 434, 398,
	0, 378, 520, 521, 320, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 368, 272, 0, 0, 431, 0, 213, 0, 488,
	259, 379, 376, 527, 287, 278, 274, 257, 321, 387,
	429, 509, 423, 0, 372, 0, 0, 498, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 255, 329, 212, 414, 499,
	291, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 252,
	0, 0, 0, 353, 362, 361, 342, 343, 345, 347,
	352, 359, 365, 0, 0, 0, 0, 0, 270, 325,
	277, 269, 524, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 403, 262,
	0, 0, 455, 0, 0, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 334, 208, 232, 0,
	0, 413, 463, 475, 0, 0, 0, 260, 0, 473,
	427, 544, 240, 289, 460, 433, 471, 443, 292, 0,
	0, 472, 374, 529, 453, 541, 568, 569, 268, 407,
	553, 513, 562, 595, 233, 265, 421, 506, 547, 495,
	399, 525, 526, 333, 494, 300, 211, 371, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 574, 231, 481, 373, 249, 238, 531, 550,
	294, 458, 437, 438, 576, 590, 577, 579, 580, 220,
	508, 539, 246, 485, 0, 0, 597, 254, 505, 222,
	536, 504, 395, 330, 331, 221, 0, 459, 273, 298,
	0, 0, 263, 416, 533, 534, 261, 598, 235, 561,
	227, 0, 560, 409, 528, 537, 396, 385, 226, 535,
	394, 384, 338, 357, 358, 285, 311, 450, 377, 451,
	310, 312, 405, 404, 406, 215, 548, 0, 216, 0,
	500, 549, 599, 241, 242, 244, 0, 284, 288, 296,
	299, 307, 308, 317, 369, 420, 449, 445, 454, 0,
	523, 542, 554, 566, 572, 573, 575, 581, 582, 583,
	585, 591, 589, 586, 587, 588, 584, 578, 408, 315,
	496, 337, 375, 0, 0, 426, 474, 247, 546, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 386, 487, 543, 339, 351, 354, 344,
	363, 0, 364, 340, 341, 346, 348, 349, 350, 355,
	356, 360, 366, 256, 218, 392, 400, 522, 316, 223,
	224, 225, 515, 516, 517, 518, 558, 559, 563, 464,
	465, 466, 467, 297, 552, 313, 470, 469, 335, 336,
	381, 452, 0, 207, 228, 370, 0, 456, 293, 596,
	557, 551, 214, 230, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 210, 217,
	229, 239, 243, 250, 266, 281, 283, 290, 303, 314,
	322, 323, 326, 332, 382, 388, 389, 390, 391, 410,
	411, 412, 415, 418, 419, 422, 424, 425, 428, 432,
	436, 439, 440, 442, 444, 446, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 489, 490, 491, 492, 493,
	501, 502, 507, 530, 532, 545, 564, 570, 482, 305,
	306, 447, 448, 318, 319, 593, 594, 304, 540, 571,
	538, 592, 565, 441, 380, 0, 0, 555, 0, 383,
	286, 309, 324, 0, 556, 503, 234, 468, 295, 258,
	0, 0, 219, 253, 237, 264, 279, 282, 328, 393,
	401, 430, 435, 301, 276, 251, 461, 248, 486, 510,
	511, 512, 514, 397, 271, 434, 398, 0, 378, 520,
	521, 320, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 368, 272,
	0, 0, 431, 0, 213, 0, 488, 259, 379, 376,
	527, 287, 278, 274, 257, 321, 387, 429, 509, 423,
	0, 372, 0, 0, 498, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 255, 329, 212, 414, 499, 291, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 252, 0, 0, 0,
	353, 362, 361, 342, 343, 345, 347, 352, 359, 365,
	0, 0, 0, 0, 0, 270, 325, 277, 269, 524,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 403, 262, 0, 0, 455,
	0, 0, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 334, 208, 232, 0, 0, 413, 463,
	475, 0, 0, 0, 260, 0, 473, 427, 544, 240,
	289, 460, 433, 471, 443, 292, 0, 0, 472, 374,
	529, 453, 541, 568, 569, 268, 407, 553, 513, 562,
	595, 233, 265, 421, 506, 547, 495, 399, 525, 526,
	333, 494, 300, 211, 371, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 574,
	231, 481, 373, 249, 238, 531, 550, 294, 458, 437,
	438, 576, 590, 577, 579, 580, 220, 508, 539, 246,
	485, 0, 0, 597, 254, 505, 222, 536, 504, 395,
	330, 331, 221, 0, 459, 273, 298, 0, 0, 263,
	416, 533, 534, 261, 598, 235, 561, 227, 0, 560,
	409, 528, 537, 396, 385, 226, 535, 394, 384, 338,
	357, 358, 285, 311, 450, 377, 451, 310, 312, 405,
	404, 406, 215, 548, 0, 216, 0, 500, 549, 599,
	241, 242, 244, 0, 284, 288, 296, 299, 307, 308,
	317, 369, 420, 449, 445, 454, 0, 523, 542, 554,
	566, 572, 573, 575, 581, 582, 583, 585, 591, 589,
	586, 587, 588, 584, 578, 408, 315, 496, 337, 375,
	0, 0, 426, 474, 247, 546, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	386, 487, 543, 339, 351, 354, 344, 363, 0, 364,
	340, 341, 346, 348, 349, 350, 355, 356, 360, 366,
	256, 218, 392, 400, 522, 316, 223, 224, 225, 515,
	516, 517, 518, 558, 559, 563, 464, 465, 466, 467,
	297, 552, 313, 470, 469, 335, 336, 381, 452, 0,
	207, 228, 370, 0, 456, 293, 596, 557, 551, 214,
	230, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 210, 217, 229, 239, 243,
	250, 266, 281, 283, 290, 303, 314, 322, 323, 326,
	332, 382, 388, 389, 390, 391, 410, 411, 412, 415,
	418, 419, 422, 424, 425, 428, 432, 436, 439, 440,
	442, 444, 446, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 489, 490, 491, 492, 493, 501, 502, 507,
	530, 532, 545, 564, 570, 482, 305, 306, 447, 448,
	318, 319, 593, 594, 304, 540, 571, 538, 592, 565,
	441, 380, 0, 0, 555, 0, 383, 286, 309, 324,
	0, 556, 503, 234, 468, 295, 258, 0, 0, 219,
	253, 237, 264, 279, 282, 328, 393, 401, 430, 435,
	301, 276, 251, 461, 248, 486, 510, 511, 512, 514,
	397, 271, 434, 0, 0, 378, 520, 521, 320,
}

var yyPact = [...]int{
	-1000, -1000, 4243, -1000, -476, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2321, 2405, -1000, -1000,
	-1000, -1000, 2569, -1000, 1150, 1989, 283, 2324, 345, 281,
	48962, 591, 276, 46214, 588, 583, 143, -92, 4658, 31100,
	-1000, 223, -1000, 220, 47588, 228, -1000, -1000, -1000, -1000,
	-328, 19419, 2247, 99, 95, 48962, -1000, -1000, -1000, -1000,
	2536, 1993, -1000, 415, -1000, -1000, -1000, -1000, -1000, -1000,
	45527, -1000, 1037, -1000, -1000, 2330, 2350, 2574, 708, 2239,
	-1000, 2477, 1993, -1000, 19419, 2522, 2418, 18732, 18732, 548,
	-1000, -1000, 182, -1000, -1000, -1000, 2570, 26291, 48962, -1000,
	33848, 545, 400, -1000, 2324, -1000, -1000, -1000, 109, -1000,
	427, 1901, -1000, 1900, -1000, 1162, 1184, 452, 568, 565,
	451, 450, 449, 439, 437, 434, 433, 432, 479, -1000,
	762, 762, -131, -135, 4611, 529, 526, 526, 1034, 561,
	2283, 2276, -1000, -1000, 762, 762, 762, 431, 762, 762,
	762, 762, 374, 372, 762, 762, 762, 762, 762, 762,
	762, 762, 762, 762, 762, 762, 762, 762, 762, 762,
	762, 1264, 461, 2324, 350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 48962, 1240, 225, 48962, -1000, 640, 48962,
	48962, -1000, 1223, 1220, -1000, -1000, 1237, -1000, 930, -1000,
	-1000, 930, 111, 930, 930, 930, 930, 260, 750, 93,
	-1000, 256, 396, 226, 340, 894, 243, -1000, -1000, 332,
	894, 919, 894, 1773, 1764, -1000, 742, 336, 238, -1000,
	930, 930, 930, -1000, -1000, 12524, 175, 12524, 12524, -1000,
	2310, -1000, -1000, -1000, -1000, -1000, 1228, -1000, -1000, -1000,
	-1000, -8, 557, -1000, -1000, -1000, -1000, 47588, 44840, 313,
	-1000, -1000, 61, -1000, -1000, 1630, 970, 19419, 1293, -1000,
	1378, 690, -1000, -1000, -1000, -1000, -1000, 625, -1000, 20106,
	20106, 20106, 20106, -1000, -1000, 1624, 44153, 1624, 1624, 20106,
	1624, -1000, 20106, 1624, 1624, 1624, 19419, 1624, 1624, 1624,
	1624, -1000, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	-1000, -1000, -1000, -1000, 1624, 637, 1624, 1624, 1624, 1624,
	1624, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1624,
	1624, 1624, 1624, 1624, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22167, 1522,
	1521, 1510, -1000, 16671, 1624, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 48962, -1000, 1624, 251, 47588,
	47588, 463, 2477, 1993, -1000, 2536, 2489, 415, 3090, 1471,
	1398, 1338, 1993, 1844, 48962, -1000, 1924, -1000, -1000, -1000,
	-1000, 2170, 1296, 1761, -1000, -1000, -1000, -1000, 2118, 19419,
	-1000, -1000, 2561, -1000, 23542, 636, 2559, 43466, -1000, 548,
	548, 1866, 466, 21, -1000, -1000, -1000, -1000, 813, 30413,
	-1000, -1000, -1000, -1000, -1000, 1809, 48962, -1000, -1000, 5296,
	1155, -1000, 1988, -1000, 2646, 1768, -1000, 1940, 19419, 1985,
	828, 1996, 581, 1155, 574, 573, 572, -1000, -27, -1000,
	-1000, -1000, -1000, -1000, -1000, 762, 762, 762, -1000, 467,
	2520, 345, 5501, -1000, -1000, -1000, 42779, 1978, 1155, -1000,
	1977, -1000, 949, 645, 667, 667, 1155, -1000, -1000, 48275,
	1155, 918, 914, 1155, 1155, 47588, 47588, -1000, 42092, -1000,
	41405, 40718, 1219, 47588, 40031, 39344, 38657, 37970, 37283, -1000,
	2143, -1000, 2264, -1000, -1000, -1000, 48275, 1155, 1155, 48275,
	47588, 48275, 48962, 1155, -1000, -1000, 419, -1000, -1000, 1215,
	1208, 1207, 762, 762, 1206, 1758, 1749, 1738, 762, 762,
	1200, 1736, 32474, 1706, 376, 1199, 1193, 1187, 1171, 1697,
	216, 1690, 1138, 1118, 1186, 47588, 1976, 1973, 48962, -1000,
	318, 909, 933, 990, 921, 812, 2324, 2241, 1853, 556,
	-1000, 577, 1155, 530, 530, 47588, -1000, 14603, -1000, 470,
	-1000, -1000, -1000, -1000, -1000, 1671, 19419, -1000, 925, 894,
	894, -1000, -1000, -1000, -1000, -1000, -1000, 930, 48962, 925,
	-1000, -1000, -1000, 894, 930, 48962, 930, 930, 930, 930,
	894, 894, 894, 930, 48962, 48962, 48962, 48962, 48962, 48962,
	48962, 48962, 48962, 12524, 742, 930, 930, -341, 930, 232,
	-374, -1000, 1666, -1000, -1000, 2095, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12524,
	12524, -1000, -1000, -1000, -1000, -1000, 1849, -1000, 214, 59,
	224, -1000, 36596, 442, 808, -1000, 442, -1000, -1000, -1000,
	1848, 35909, -1000, -383, -384, -385, -386, -1000, -1000, -1000,
	-1000, -387, -396, -1000, -1000, -1000, 19419, 19419, 19419, 19419,
	-172, -1000, 1012, 20106, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 154, 1177, 20106, 20106, 20106, 20106, 20106, 20106, 20106,
	20106, 20106, 20106, 20106, 20106, 20106, 20106, 20106, -1000, -1000,
	28352, 7218, 7218, 690, 690, 690, 690, -1000, -93, 1847,
	48275, -1000, -1000, -1000, 635, 19419, 19419, 690, -1000, 1155,
	16671, 20793, 18732, 18732, 19419, 790, 970, 48275, 19419, -1000,
	1338, -1000, -1000, -1000, 1147, -1000, 875, 2337, 2337, 2337,
	2337, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419,
	19419, 2337, 47588, 47588, 1497, 19419, 19419, 19419, 19419, 19419,
	19419, 15296, 19419, 19419, 20106, 19419, 19419, 19419, 1338, 19419,
	19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419,
	19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419, 19419,
	19419, 19419, 19419, 19419, 19419, 19419, 1338, 19419, 1181, 19419,
	19419, 18732, 13910, 18732, 18732, 18732, 18732, 18732, -1000, -1000,
	-1000, -1000, -1000, 19419, 19419, 19419, 19419, 19419, 19419, 19419,
	19419, 1338, 19419, 19419, 19419, 19419, 19419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1512, 1435, 1388,
	19419, -1000, 1846, -1000, -112, 25604, 19419, 1662, 1657, 2558,
	2027, 47588, -1000, -1000, -1000, 2477, -1000, 2477, 1512, 2177,
	18732, -1000, -1000, 2646, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1353, -1000, 48962, 1844, 2379, 47588, 2164, 1646,
	405, -1000, 19419, 19419, 1843, -1000, 2025, 48962, -1000, -172,
	-1000, 35222, -1000, -1000, 11831, 48962, 422, 48962, -1000, 24917,
	34535, 296, -1000, 21, 1823, -1000, 46, 55, 15983, 688,
	-1000, -1000, -1000, 4611, 21480, 1593, 688, 136, -1000, -1000,
	-1000, 1940, -1000, 1940, 1940, 1940, 1940, 405, 405, 405,
	405, -1000, -1000, -1000, -1000, -1000, 1970, 1969, -1000, 1940,
	1940, 1940, 1940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1968, 1968, 1968, 1965, 1965, 1941, 1941, 518, -1000, 19419,
	-1000, -1000, 403, 33848, 2358, 1183, 1920, 127, 2362, 318,
	545, 2021, 1155, 1155, 1155, 545, -1000, 1286, 1268, 1262,
	-1000, -468, 1839, -1000, -1000, 2517, -1000, -1000, 786, 995,
	992, 870, 47588, 290, 411, -1000, 509, -1000, 33848, 1155,
	887, 667, 1155, -1000, 1155, -1000, -1000, -1000, -1000, -1000,
	1155, -1000, -1000, 1838, -1000, 1842, 1047, 964, 1039, 963,
	1838, -1000, -1000, -101, 1838, -1000, 1838, -1000, 1838, -1000,
	1838, -1000, 1838, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 800, 259, -239, 47588, 290, 552, -1000, 551,
	28352, -1000, -1000, -1000, 28352, 28352, -1000, -1000, -1000, -1000,
	1636, 1632, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -454, 48962, 271, 127, -1000, 311, 807, 398, 420,
	386, 48962, 780, 2465, 2463, 2457, 2456, 2455, 2454, 2450,
	300, 2446, 2445, 2444, 2439, 2437, 2434, 726, 2432, 2426,
	2420, 2399, 2392, 2386, 2376, 309, 366, 48962, 48962, 530,
	2080, 48962, 2356, 48962, -1000, -1000, -1000, -1000, 558, 48962,
	-1000, 344, -1000, -1000, -1000, -1000, -1000, -1000, 970, 48962,
	-1000, -1000, 930, 930, -1000, -1000, 48962, 930, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 930, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48962, -1000, -1000, -1000,
	-1000, -8, 210, -1000, -1000, 47588, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -47, -1000, 88, 39, 413,
	-1000, -1000, -1000, -1000, -1000, 2473, -1000, 970, 896, 839,
	-1000, 1624, -1000, -1000, 1078, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 154, 20106, 20106, 20106, 1813, 578, 1201, 2022,
	1344, 1058, 1058, 707, 707, 694, 694, 694, 694, 694,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1623, -1000,
	1624, 48275, 1757, 13910, 1480, 2012, 1338, 2937, -1000, 1743,
	-1000, 1743, 1467, 847, -1000, 19419, 1338, 2933, -1000, -1000,
	1338, 1338, 1338, 19419, -1000, -1000, 19419, 19419, 19419, 19419,
	1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920,
	19419, 1837, 1832, 2553, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1356, 1920, 1920, 1920, 1920,
	1920, 19419, 1723, -1000, -1000, -1000, 1337, 2923, 1426, 2912,
	1920, 1920, -1000, 1920, 2901, 2896, 1338, 1630, 1338, 1826,
	-1000, 2841, 1920, 2824, 2814, 2809, 2156, 2797, 2791, 2768,
	1920, 1920, 1920, 2126, 2625, 2594, 2577, 2566, 2502, 2447,
	2436, 2430, 2424, 1920, -179, 1920, 1338, -1000, -1000, -1000,
	-1000, -1000, 2415, 2111, 1338, 1824, 1624, 634, -1000, -1000,
	1743, 1338, 1338, 1743, 1743, 2389, 2384, 2378, 2374, 2353,
	2349, 1920, 1920, -1000, 1920, 2334, 2318, 2094, 2070, 1338,
	-1000, 1388, 48962, -1000, -321, -1000, 14, 712, 1624, -1000,
	32474, 1338, -1000, -1000, 7007, -1000, 1051, -1000, -1000, -1000,
	29726, 1808, 2646, -1000, -1000, 1624, 1731, -1000, -1000, 405,
	130, 29039, 669, 669, 161, 970, 970, 19419, -1000, -1000,
	-1000, -1000, -1000, -1000, 633, 2530, 409, 1624, -1000, 1780,
	3029, -1000, -1000, -1000, 2371, 22855, -1000, -1000, 1624, 1624,
	48962, 1807, 1791, -1000, 631, -1000, 1167, 1823, 21, 65,
	-1000, -1000, -1000, -1000, 970, -1000, 1236, 429, 720, -1000,
	516, -1000, -1000, -1000, -1000, 2263, 131, -1000, -1000, -1000,
	315, 405, -1000, -1000, -1000, -1000, -1000, -1000, 1618, 1618,
	-1000, -1000, -1000, -1000, -1000, 1182, -1000, -1000, -1000, -1000,
	1169, -1000, -1000, 1168, -1000, -1000, 2313, 2062, 403, -1000,
	-1000, 762, 1599, -1000, -1000, 2271, 762, 762, 47588, -1000,
	-1000, 1550, 2358, 1715, 802, -1000, -1000, -1000, -1000, -1000,
	311, 48962, 2079, -1000, 2021, 2021, 2021, 48962, -1000, -1000,
	-1000, -1000, -1000, -1000, -455, 81, 428, -1000, -1000, -1000,
	5469, 47588, 1686, -1000, 282, -1000, 1494, -1000, 47588, -1000,
	1651, 1962, 1155, 1155, -1000, -1000, -1000, 47588, 1624, -1000,
	-1000, -1000, -1000, 576, 2320, 316, -1000, -1000, -202, -1000,
	-1000, 290, 282, 48275, 1155, 688, -1000, -1000, -1000, -1000,
	-1000, -457, 1644, 459, 1959, 1642, 798, 569, 293, 370,
	48962, 48962, 48962, 48962, 48962, 615, -1000, -1000, 84, -1000,
	-1000, -1000, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000,
	244, -1000, -1000, -1000, -1000, -1000, 244, -1000, 1584, -1000,
	-1000, -1000, -1000, 244, -1000, -1000, -1000, 68, -1000, -1000,
	-1000, -1000, 244, -1000, -1000, -1000, -1000, -1000, -1000, 244,
	-1000, -1000, -1000, -1000, 347, 531, -1000, 48962, 48962, 675,
	-1000, -1000, -1000, -1000, -1000, -1000, 894, -1000, -1000, 894,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2293, 48962, 36, -416, -1000, -412, 19419, -1000,
	-1000, -1000, -1000, 1779, 575, 1201, 20106, 20106, 20106, -1000,
	-1000, -1000, 795, 795, 28352, -1000, 19419, 18732, -1000, -1000,
	19419, 19419, 721, -1000, 19419, 1259, -1000, 19419, -1000, -1000,
	-1000, 1388, 1920, 1920, 1920, 1920, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1814, 19419, 19419, 19419,
	1338, 378, -1000, -1000, -1000, -1000, -1000, 2552, -1000, 19419,
	-1000, 28352, 19419, 19419, 19419, -1000, -1000, -1000, 19419, 19419,
	-1000, -1000, 19419, 19419, -1000, 19419, 19419, 19419, -1000, 19419,
	19419, 19419, 19419, -1000, -1000, -1000, -1000, 19419, 19419, 19419,
	19419, 19419, 19419, 19419, 19419, 19419, 19419, -1000, -1000, 33848,
	119, -179, 1181, 119, 1181, -1000, 18732, 13217, -1000, -1000,
	-1000, -1000, -1000, 19419, 19419, 19419, 19419, 19419, 19419, -1000,
	-1000, -1000, 19419, 19419, -1000, 19419, -1000, 19419, -1000, -1000,
	-1000, -1000, -1000, 712, -1000, 667, 667, 667, 47588, -1000,
	-1000, -1000, -1000, 1822, -1000, 2410, -1000, 2183, 2182, 2534,
	2530, -1000, 24917, 2646, -1000, -1000, 47588, -303, -1000, 2233,
	2236, 669, 669, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11138, 2477, 19419, 2069, 48275, 153, -1000, 24230, 47588, 48275,
	24917, 24917, 24917, 24917, 24917, -1000, 2150, 2138, -1000, 2130,
	2109, 2161, 48962, -1000, 1512, 1628, -1000, 19419, 26978, 1713,
	24917, -1000, -1000, 24917, 48962, 10445, -1000, -1000, 26, 47,
	-1000, -1000, -1000, -1000, 4611, -1000, -1000, 343, 2366, 2260,
	-1000, -1000, -1000, -1000, -1000, 1614, -1000, 1612, 1816, 1607,
	1592, 259, -1000, 1914, 2290, 762, 762, -1000, 1166, -1000,
	1155, 1567, 1553, -1000, -1000, -1000, 265, 127, 1546, 559,
	-1000, 48962, 2052, 2046, 2043, -1000, -466, 1159, 1958, 1819,
	19419, 1956, 2516, 1799, 47588, -1000, -1000, 48275, -1000, 185,
	-1000, 403, 47588, -1000, -1000, -1000, 411, 48962, -1000, 8022,
	-1000, -1000, -1000, 282, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1954, 1036, -1000, 127, 1544, 48962, 303, -1000,
	1943, 1205, -1000, -1000, 2005, -1000, -1000, -1000, -1000, 263,
	380, 1541, 239, 1536, 239, 239, 1533, 239, 1527, 239,
	239, -1000, 48962, 674, 2062, 48962, -1000, -1000, -1000, 930,
	930, -1000, -1000, 2286, -1000, 1155, 1920, 20106, 20106, -1000,
	690, 501, -149, 1940, 1940, -1000, 1940, 1941, -1000, 1940,
	198, 1940, 178, 1940, -1000, -1000, 1338, 1338, 1388, -1000,
	2038, 1331, -1000, 970, 19419, 2306, -1000, -1000, -1000, -1000,
	-1000, -36, 2297, 2270, 1920, -1000, 1939, 1938, 19419, 1920,
	1338, 1997, 1920, 1920, 1920, 1920, -1000, 970, 1388, 2262,
	1388, 1920, 1920, 2257, 346, 1920, 1589, 1589, 1589, 1589,
	1589, 1388, 1388, 1388, 1388, 47588, -1000, -179, -1000, -1000,
	-225, -226, -1000, 1338, -179, 1815, 1338, -1000, 1909, 1851,
	2230, 1711, 1920, 2200, 1920, 1920, 1920, 1701, -1000, 2470,
	2470, 2470, 1563, 1051, 48962, -1000, -1000, -1000, -1000, 2530,
	2528, 1805, -1000, -1000, 130, 493, -1000, 2221, 2236, -1000,
	2513, 2237, 2512, -1000, -1000, -1000, -1000, -1000, 970, -1000,
	2328, 1789, -1000, 796, 1721, -1000, -1000, 18045, 1565, 2180,
	630, 1563, 1912, 3029, 2014, 2042, 3013, -1000, -1000, -1000,
	-1000, 2136, -1000, 2134, -1000, -1000, 1924, -1000, 2167, 422,
	24917, 1899, 1899, -1000, 611, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1007, 7649, 2572, -1000, 1525, -1000, 1233, 204,
	1154, -1000, -1000, 762, 762, -1000, 865, 863, -1000, 48962,
	1937, -1000, 405, 1523, 405, 1151, -1000, -1000, 1139, -1000,
	-1000, -1000, -1000, 2187, 2089, -1000, -1000, -1000, -1000, 1933,
	785, -1000, 48962, -1000, 48962, 48962, 48962, 1932, 2509, -1000,
	19419, 1931, 784, 2194, 47588, 47588, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 762, -435,
	362, 354, 762, 762, 762, -467, -1000, -1000, 1561, 1557,
	-1000, -129, -1000, 19419, -1000, -1000, -1000, 1195, 1195, 1522,
	1521, 1510, -1000, 335, 1516, 779, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 774, -1000, 1924, -1000, -1000,
	-1000, 1474, -1000, -1000, -106, 47588, 47588, 47588, 47588, -1000,
	-1000, 1110, -1000, -1000, -1000, 1496, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	690, 1338, 369, -108, 1338, -1000, -1000, 405, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19419, -1000,
	19419, -1000, 970, 19419, 2477, 1495, 19419, 19419, -1000, 1126,
	1114, 1920, -1000, -1000, -1000, 19419, -1000, -1000, -1000, -1000,
	-1000, 19419, -1000, -1000, -1000, 19419, 284, 795, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1338, 412,
	-1000, -1000, -1000, -1000, 2532, -1000, 1338, 19419, -1000, -1000,
	19419, -1000, 19419, 19419, -1000, 19419, -1000, 19419, -1000, -1000,
	-1000, -1000, 19419, 1624, 2256, 1624, 1624, 26978, -1000, -1000,
	2528, 2504, 2491, 2193, 2209, 2209, 2221, -1000, 2487, 2485,
	-1000, 1483, 2484, 1481, 858, -1000, 48275, 19419, 153, -1000,
	447, 47588, 153, 47588, -1000, 2490, -1000, -1000, 19419, 1928,
	-1000, 19419, -1000, -1000, -1000, -1000, 7218, 2530, 1899, -1000,
	-1000, 701, -1000, 19419, -1000, -1000, -1000, 4037, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1464, 1446, -1000, -1000,
	1926, 19419, -1000, -1000, -1000, 1441, 1415, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1036, 1444, 1924, -1000, -1000,
	-1000, -1000, 411, -462, 2174, 47588, 1098, -1000, 1493, 1799,
	406, 153, 1442, 762, 762, 762, 1077, 1061, 32474, 1491,
	-1000, 47588, 465, -1000, 411, -1000, -139, -141, 1920, -1000,
	-1000, 1487, 759, -1000, -1000, -1000, 1036, 1393, 1362, 2365,
	-1000, -1000, 13217, -1000, -1000, 1918, 2010, -1000, -1000, -1000,
	-1000, -1000, 2147, -99, -121, -1000, -1000, 1920, 1920, 1719,
	1338, -1000, 1920, 1920, 1389, 1379, -1000, 1920, 1388, 1695,
	-1000, 284, 1338, 2041, -1000, -1000, 7218, -1000, -1000, 2490,
	2482, 119, -1000, -1000, 289, 119, 970, 1688, 1920, 1669,
	1640, 1920, 1920, 27665, -1000, 2480, 2479, 33161, 33161, 712,
	2504, -189, 19419, 19419, 2188, 1083, -1000, -1000, -1000, -1000,
	1341, 1333, -1000, 1328, -1000, 2571, -1000, 970, -1000, 153,
	-1000, 596, 1721, -1000, 2477, 970, 47588, 970, 117, 2490,
	-1000, 1920, -1000, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, -1000, -1000, 47588, 2137, -1000, -1000, 1473,
	-1000, 2364, 1470, 80, -1000, 1368, 1799, -1000, -1000, 158,
	-1000, 19419, -1000, 32474, 1321, 1309, -1000, -1000, -1000, -1000,
	-467, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 335, 1295,
	755, -1000, -1000, 415, 1787, -1000, 752, 47588, 48962, -1000,
	2098, -1000, -1000, -1000, 19419, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19419, -1000, 1338, 2036, -1000, -295, -1000,
	-440, 19419, -179, -1000, -1000, -179, -1000, 19419, -1000, -1000,
	19419, -1000, 19419, -1000, -1000, 1440, -1000, -1000, -1000, -1000,
	-1000, 1440, 1440, -1000, -189, -1000, 1759, -1000, 47588, 970,
	1630, -1000, 1065, -1000, -1000, -1000, -1000, -1000, 48275, 1721,
	47588, -1000, 1437, 1338, 1624, 2477, -1000, 1414, -1000, 430,
	415, -1000, 1904, 1819, -1000, -1000, -1000, 17358, -1000, -1000,
	-1000, -1000, -1000, 218, 751, -1000, 1291, -103, 13217, 9752,
	1392, -1000, -102, 1920, 1388, -1000, -400, -1000, -1000, -1000,
	-1000, 235, -1000, -1000, 1630, -1000, -1000, 1631, 1621, 1549,
	31787, -1000, -1000, -1000, -1000, -189, -1000, -1000, 2351, -1000,
	-1000, 1609, -1000, -1000, 26978, 46901, -1000, -90, 280, 1698,
	-103, 19419, 1647, 1338, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1289, -1000, -1000, 40, -1000, -1000, -1000, -1000, -1000,
	2005, -116, -1000, -1000, -1000, 258, -419, -207, -217, -1000,
	-1000, 20106, -1000, 19419, -1000, 19419, -1000, 19419, -1000, -1000,
	-1000, 47588, 1624, -1000, 1374, -1000, 4777, -240, 2032, -1000,
	-63, -1000, -1000, -1000, 1004, 1271, -1000, -1000, -1000, -1000,
	-1000, 335, -1000, 2107, 47588, -1000, -1000, 511, -1000, -1000,
	-106, -124, 836, -1000, -1000, -1000, -1000, -1000, 1352, 1325,
	1920, -1000, 47588, -1000, 46901, -233, 688, 7218, -1000, 2031,
	2029, 2545, -1000, -1000, -1000, -1000, -1000, -1000, 1367, -473,
	1347, 314, -1000, -1000, 258, -1000, 19419, -1000, 19419, -1000,
	1338, -1000, -1000, 2354, 117, -1000, 2567, -1000, 2537, 820,
	820, -1000, -1000, 1055, -473, -1000, -1000, 1920, 1920, -1000,
	-253, -1000, -1000, -1000, -1000, -1000, 515, 1085, -1000, -1000,
	-1000, -1000, -1000, 7218, -1000, -1000, -1000, 286, 286, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3161, 3160, 29, 1, 38, 37, 3159, 45, 126,
	214, 28, 256, 116, 3153, 195, 3152, 3151, 3150, 3148,
	3147, 3146, 2607, 2601, 2593, 3144, 3143, 3142, 3141, 3140,
	3139, 3138, 3136, 3135, 3133, 3132, 3131, 3130, 3128, 191,
	190, 209, 3124, 3123, 3120, 142, 200, 107, 109, 208,
	3119, 3118, 93, 3117, 3116, 3113, 207, 206, 205, 873,
	3112, 203, 129, 61, 3111, 3110, 3109, 3108, 3107, 3106,
	3105, 3104, 3101, 3094, 3093, 3089, 3088, 3085, 3077, 3073,
	3063, 3061, 3060, 3058, 307, 3056, 3055, 21, 3052, 100,
	3050, 3047, 3045, 3044, 3041, 11, 3036, 3031, 13, 43,
	3029, 3028, 52, 3027, 3020, 3019, 3018, 3016, 19, 3015,
	25, 3012, 32, 3006, 3005, 147, 3004, 3003, 3002, 44,
	3001, 2996, 2993, 2992, 2991, 2987, 2981, 159, 2979, 2978,
	2977, 216, 219, 2976, 2971, 187, 136, 132, 2970, 2969,
	118, 211, 2968, 138, 2967, 2964, 2962, 170, 2961, 2299,
	2960, 2959, 79, 85, 2958, 242, 2954, 2952, 12, 104,
	80, 10, 56, 74, 2949, 2947, 78, 96, 2946, 128,
	2945, 2944, 121, 83, 2942, 117, 114, 2940, 2935, 15,
	5, 2934, 50, 6, 3, 87, 2931, 2928, 123, 2926,
	2925, 2924, 113, 2923, 2921, 5184, 2920, 110, 152, 122,
	92, 2917, 49, 67, 2915, 2914, 2913, 2911, 2906, 62,
	2904, 2903, 2899, 164, 71, 192, 2892, 46, 41, 65,
	155, 2890, 64, 106, 213, 188, 2886, 2880, 160, 157,
	2871, 2862, 81, 47, 51, 2859, 125, 149, 144, 30,
	115, 156, 2857, 2838, 70, 90, 2837, 2829, 2826, 2824,
	189, 2822, 2820, 89, 2819, 73, 2817, 202, 2816, 17,
	76, 2814, 55, 182, 2806, 91, 2805, 2804, 86, 150,
	82, 39, 2803, 181, 186, 151, 185, 2802, 2800, 69,
	2798, 2797, 2791, 212, 323, 2790, 2786, 101, 193, 177,
	172, 112, 2785, 351, 2784, 2783, 143, 2, 5443, 2781,
	54, 183, 2780, 2777, 6183, 161, 59, 23, 2774, 134,
	2773, 2771, 2769, 2768, 234, 196, 127, 184, 75, 2759,
	2758, 2757, 16, 2756, 2753, 2752, 2745, 2743, 2742, 94,
	36, 35, 34, 253, 84, 8, 119, 198, 178, 97,
	2741, 2738, 2729, 145, 108, 2728, 180, 179, 176, 175,
	2727, 197, 167, 141, 2726, 102, 33, 2724, 2723, 2715,
	2709, 111, 2703, 2702, 2700, 2698, 174, 166, 146, 99,
	2697, 105, 135, 171, 169, 68, 2695, 57, 2692, 2691,
	27, 201, 26, 2690, 18, 124, 120, 2688, 4314, 199,
	2687, 20, 346, 168, 2684, 2674, 4, 7, 9, 2666,
	2664, 2655, 2650, 154, 2649, 2642, 2626, 2625, 24, 53,
	22, 42, 140, 95, 2624, 2622, 162, 165, 2621, 2620,
	2619, 2614, 2613, 60, 2611, 14, 2608, 98, 58, 40,
	2603, 2602, 3272, 0, 148, 2594, 215,
}

//line sql.y:8753
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) alterWescaleFilterUnion() *AlterWescaleFilter {
	v, _ := st.union.(*AlterWescaleFilter)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createWescaleFilterUnion() *CreateWescaleFilter {
	v, _ := st.union.(*CreateWescaleFilter)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) dropWescaleFilterUnion() *DropWescaleFilter {
	v, _ := st.union.(*DropWescaleFilter)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) showWescaleFilterUnion() *ShowWescaleFilter {
	v, _ := st.union.(*ShowWescaleFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) wescaleFilterActionUnion() *WescaleFilterAction {
	v, _ := st.union.(*WescaleFilterAction)
	return v
}

func (st *yySymType) wescaleFilterPatternUnion() *WescaleFilterPattern {
	v, _ := st.union.(*WescaleFilterPattern)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 430, 431, 431, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 265, 388, 389, 389,
	263, 263, 33, 79, 39, 39, 38, 38, 41, 41,
	40, 8, 8, 8, 9, 9, 9, 9, 9, 9,
	9, 9, 10, 10, 10, 10, 10, 11, 11, 11,
	11, 13, 13, 13, 13, 13, 20, 21, 12, 12,
	22, 22, 113, 113, 23, 24, 24, 24, 24, 434,
	434, 190, 190, 188, 188, 189, 189, 268, 268, 25,
	272, 272, 274, 274, 274, 274, 264, 264, 264, 26,
	26, 273, 273, 275, 275, 275, 278, 278, 278, 278,
	317, 317, 317, 34, 35, 422, 422, 424, 424, 426,
	426, 36, 37, 37, 420, 420, 421, 421, 427, 427,
	427, 427, 423, 423, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 425, 425, 429, 429, 27, 27, 27,
	27, 27, 27, 27, 133, 133, 391, 391, 390, 384,
	384, 383, 383, 382, 387, 387, 386, 386, 385, 43,
	44, 53, 53, 53, 53, 54, 55, 392, 392, 357,
	60, 60, 59, 59, 59, 59, 59, 59, 61, 61,
	57, 57, 56, 56, 58, 58, 359, 359, 345, 345,
	358, 358, 358, 358, 358, 358, 358, 344, 344, 144,
	144, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 407, 407,
	407, 406, 406, 243, 243, 243, 243, 243, 243, 243,
	243, 154, 154, 166, 166, 166, 166, 166, 152, 152,
	153, 151, 151, 151, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 165, 165, 161, 161, 161, 162, 162,
	162, 163, 163, 408, 408, 408, 408, 322, 322, 322,
	322, 325, 325, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 326,
	326, 326, 326, 326, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	328, 328, 328, 328, 328, 328, 328, 328, 343, 343,
	329, 329, 337, 337, 338, 338, 339, 339, 339, 340,
	340, 340, 341, 341, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 336, 336, 335, 335, 335, 346, 371,
	371, 370, 370, 368, 368, 368, 368, 368, 368, 368,
	368, 355, 355, 365, 365, 365, 365, 365, 354, 354,
	350, 350, 350, 351, 351, 352, 352, 349, 349, 353,
	353, 367, 367, 366, 366, 347, 347, 348, 348, 373,
	409, 409, 409, 409, 409, 410, 410, 374, 399, 401,
	401, 401, 400, 400, 397, 398, 396, 396, 396, 396,
	396, 89, 89, 89, 291, 291, 292, 292, 363, 363,
	362, 362, 362, 364, 364, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 286, 286, 286, 395,
	395, 395, 395, 395, 395, 394, 394, 394, 360, 360,
	360, 393, 393, 62, 62, 223, 223, 412, 412, 413,
	413, 413, 50, 50, 50, 50, 50, 50, 49, 49,
	49, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 51, 51, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 115, 115, 116,
	116, 116, 116, 118, 118, 118, 376, 376, 63, 63,
	3, 3, 178, 180, 181, 181, 179, 179, 179, 179,
	179, 179, 65, 65, 64, 64, 183, 182, 184, 184,
	184, 1, 1, 2, 2, 4, 4, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 342,
	342, 342, 375, 375, 377, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 121, 120, 120, 119, 122,
	122, 122, 122, 122, 122, 122, 122, 379, 379, 379,
	66, 66, 380, 330, 331, 332, 5, 6, 356, 378,
	129, 129, 29, 42, 42, 30, 30, 30, 30, 31,
	31, 67, 68, 419, 419, 72, 72, 72, 73, 73,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 285, 285, 294, 294, 284, 284, 309, 309, 309,
	287, 287, 287, 288, 288, 405, 405, 405, 281, 281,
	70, 70, 70, 310, 310, 310, 310, 74, 74, 414,
	414, 415, 415, 416, 416, 416, 75, 76, 76, 312,
	312, 313, 313, 77, 78, 90, 90, 90, 90, 90,
	90, 90, 91, 91, 91, 91, 114, 114, 114, 15,
	15, 15, 15, 86, 86, 86, 14, 14, 17, 71,
	71, 80, 402, 402, 403, 404, 404, 404, 404, 81,
	83, 83, 32, 32, 32, 32, 32, 32, 139, 139,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 134, 134, 134, 128, 128, 435, 84,
	85, 85, 132, 132, 132, 125, 125, 125, 131, 131,
	131, 16, 16, 18, 267, 267, 19, 19, 136, 136,
	138, 138, 138, 138, 138, 140, 140, 140, 140, 140,
	140, 140, 135, 135, 137, 137, 137, 137, 302, 302,
	302, 301, 301, 172, 172, 174, 173, 173, 175, 175,
	176, 176, 176, 176, 221, 221, 198, 198, 260, 260,
	261, 261, 259, 259, 266, 266, 262, 262, 262, 262,
	269, 269, 177, 177, 177, 177, 185, 185, 186, 186,
	187, 187, 311, 311, 307, 307, 307, 306, 306, 191,
	191, 191, 193, 192, 192, 192, 192, 194, 194, 196,
	196, 195, 195, 197, 202, 202, 201, 201, 199, 199,
	199, 199, 200, 200, 200, 200, 203, 203, 149, 149,
	149, 149, 149, 149, 149, 164, 164, 164, 164, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	250, 250, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	158, 226, 226, 225, 225, 92, 92, 92, 93, 93,
	94, 94, 94, 94, 94, 95, 95, 95, 95, 95,
	150, 150, 97, 97, 96, 96, 216, 216, 299, 299,
	98, 99, 99, 102, 102, 101, 100, 100, 106, 106,
	103, 103, 105, 105, 104, 107, 107, 108, 109, 109,
	282, 282, 204, 204, 212, 212, 212, 212, 205, 205,
	205, 205, 205, 205, 205, 213, 213, 213, 220, 214,
	214, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 169,
	169, 169, 169, 231, 231, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	157, 157, 170, 170, 170, 170, 171, 171, 171, 171,
	171, 171, 171, 319, 319, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 436, 436, 333, 333,
	333, 333, 211, 211, 211, 211, 211, 130, 130, 130,
	130, 130, 316, 316, 316, 320, 320, 320, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 321, 321, 229, 229, 126, 126, 227,
	227, 228, 230, 230, 222, 222, 222, 222, 224, 224,
	207, 207, 207, 232, 232, 233, 233, 110, 111, 111,
	112, 112, 234, 234, 236, 235, 235, 237, 238, 238,
	238, 239, 239, 240, 240, 240, 52, 52, 52, 52,
	52, 47, 47, 47, 47, 48, 48, 48, 48, 141,
	141, 141, 141, 143, 143, 142, 142, 87, 87, 88,
	88, 88, 418, 418, 418, 417, 417, 417, 417, 417,
	417, 147, 147, 148, 148, 148, 145, 145, 146, 146,
	257, 257, 241, 241, 241, 248, 248, 248, 244, 244,
	246, 246, 246, 247, 247, 247, 245, 254, 254, 256,
	256, 255, 255, 251, 251, 252, 252, 253, 253, 253,
	249, 249, 206, 206, 206, 206, 206, 258, 258, 258,
	258, 270, 270, 217, 217, 219, 219, 218, 218, 168,
	271, 271, 279, 276, 276, 277, 277, 303, 303, 303,
	280, 280, 293, 293, 289, 289, 290, 290, 283, 283,
	295, 295, 295, 82, 215, 215, 372, 372, 369, 298,
	298, 300, 300, 304, 304, 308, 308, 305, 305, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	432, 433, 314, 315, 315, 315,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
	1, 1, 2, 3, 2, 3, 0, 1, 3, 1,
	4, 3, 3, 4, 3, 2, 3, 4, 3, 4,
	2, 7, 1, 3, 3, 3, 3, 1, 2, 1,
	1, 3, 2, 3, 3, 2, 5, 7, 10, 9,
	7, 8, 1, 1, 10, 11, 9, 8, 8, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	1, 3, 3, 3, 3, 3, 1, 1, 2, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 14, 6, 0, 3, 0, 4, 0,
	4, 3, 3, 2, 3, 5, 3, 5, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 2, 2, 2,
	3, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 7, 7, 5, 5, 7, 8,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 4, 1, 3, 2, 3, 3, 2, 2,
	3, 2, 2, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
	2, 3, 3, 3, 3, 5, 2, 3, 3, 3,
	2, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -430, -84, -435, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -67, -68,
	-72, -73, -69, -70, -74, -75, -76, -77, -78, -14,
	-17, -71, -32, -33, -79, -80, -81, -82, -83, -16,
	-18, -19, -34, -35, -36, -37, -9, -8, -13, 10,
	11, -113, -38, 33, -43, -53, 225, -54, -44, 226,
	-55, 228, 227, 266, 229, 250, 651, 235, 259, 75,
	334, 335, 337, 338, 339, 340, -114, 647, 264, 265,
	231, 37, 46, 34, 35, 38, 236, 272, 273, 234,
	-10, -39, 9, -432, 12, 479, 261, 260, 29, -12,
	541, 87, -85, -431, 697, -257, -241, 23, 34, 30,
	-240, -236, -132, -241, 21, 19, 8, -84, -84, -84,
	13, 14, -84, -357, -359, -12, 26, 87, 159, 9,
	87, 303, -84, -60, -59, -57, -56, -58, -61, 32,
	-50, -51, -381, -49, -46, 230, 227, 276, 123, 124,
	266, 267, 268, 229, 250, 265, 269, 264, 285, -45,
	82, 34, 541, 544, -364, 226, 232, 233, 228, 480,
	126, 125, 76, -361, 393, 574, 667, -61, 669, 101,
	104, 668, 45, 240, 670, 671, 672, 581, 673, 249,
	674, 675, 676, 677, 683, 622, 684, 685, 686, 127,
	8, 303, -84, -308, -304, 91, -297, 538, 252, 572,
	573, 301, 82, 42, 547, 390, 393, 574, 509, 667,
	334, 350, 344, 514, 515, 516, 373, 365, 539, 575,
	548, 318, 253, 289, 661, 363, 135, 669, 322, 576,
	267, 398, 399, 577, 400, 101, 337, 442, 682, 321,
	578, 680, 104, 668, 342, 80, 508, 52, 664, 45,
	262, 361, 234, 357, 670, 290, 579, 550, 283, 126,
	123, 689, 37, 353, 51, 31, 679, 125, 50, 671,
	150, 580, 672, 581, 402, 380, 655, 49, 403, 268,
	582, 85, 273, 543, 325, 663, 404, 528, 354, 405,
	300, 678, 231, 583, 642, 634, 635, 406, 407, 656,
	385, 381, 386, 530, 584, 434, 513, 408, 638, 639,
	696, 53, 585, 586, 657, 124, 587, 79, 673, 81,
	348, 349, 588, 298, 251, 533, 534, 436, 377, 491,
	498, 499, 111, 112, 494, 113, 500, 114, 501, 502,
	503, 492, 115, 108, 493, 504, 505, 378, 379, 116,
	506, 110, 109, 495, 497, 117, 507, 249, 36, 409,
	540, 302, 59, 320, 277, 437, 47, 383, 693, 46,
	649, 535, 589, 654, 376, 372, 488, 54, 590, 591,
	592, 593, 510, 674, 375, 347, 371, 688, 4, 295,
	511, 675, 63, 233, 388, 387, 389, 284, 433, 368,
	594, 595, 596, 256, 83, 597, 358, 22, 598, 599,
	410, 291, 600, 57, 601, 602, 440, 265, 603, 55,
	676, 40, 604, 270, 690, 677, 605, 327, 328, 606,
	607, 648, 608, 272, 609, 412, 610, 636, 637, 411,
	382, 384, 536, 279, 413, 237, 542, 611, 326, 352,
	269, 681, 612, 257, 524, 525, 526, 527, 662, 532,
	531, 271, 276, 264, 441, 258, 613, 614, 615, 616,
	617, 319, 633, 618, 619, 338, 683, 489, 44, 620,
	621, 622, 623, 624, 299, 294, 435, 444, 62, 84,
	395, 625, 626, 660, 346, 343, 292, 627, 335, 56,
	684, 685, 686, 286, 687, 517, 518, 519, 520, 10,
	694, 695, 512, 415, 127, 296, 297, 48, 369, 278,
	628, 323, 629, 359, 360, 374, 345, 370, 645, 336,
	643, 280, 416, 490, 266, 630, 443, 293, 391, 396,
	324, 546, 529, 285, 417, 652, 659, 545, 521, 522,
	367, 364, 287, 523, 631, 647, 418, 241, 281, 282,
	632, 644, 419, 420, 317, 421, 329, 331, 432, 332,
	333, 422, 423, 424, 431, 425, 428, 429, 430, 427,
	330, 426, 646, 640, 641, 288, 544, 341, 362, 397,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 316, 487, 239, 303, -84, 239, -195, -304, 239,
	239, 96, 542, 668, 652, 412, 303, 304, -276, 429,
	430, 399, -294, 401, 414, 409, 419, 407, -285, 410,
	412, 279, -405, 434, 239, 416, 225, 402, 411, 420,
	421, 329, 432, 331, 317, 427, 422, 330, 426, 288,
	423, 424, 431, 425, 428, -388, 177, 672, 687, 135,
	366, 406, 404, 435, 649, 91, -310, 91, 92, 93,
	-297, 336, -312, 341, -298, -388, -297, 339, -84, -84,
	-314, -314, -134, 649, 653, -214, -149, 143, -164, -167,
	-155, -159, -208, -209, -210, -211, -165, -224, -263, 166,
	167, 174, 144, -220, -168, 27, 537, 481, 480, 177,
	32, -158, 220, 69, 70, 483, 146, 58, 12, 456,
	457, -166, 451, 458, 453, 508, 510, 511, 512, 509,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	513, 485, 486, 118, 487, 108, 110, 109, 488, 489,
	490, 363, 535, 536, 530, 533, 534, 532, 531, 378,
	379, 491, 492, 493, 111, 112, 113, 114, 115, 116,
	117, 494, 497, 495, 496, 498, 499, 500, 505, 506,
	501, 502, 503, 504, 507, -94, -106, 563, 562, -107,
	-156, -157, -170, -171, -298, -304, 244, 450, 238, 172,
	479, -160, -153, -222, 107, 92, 93, -8, -218, 449,
	454, 455, 459, 452, 549, 551, 566, 567, 569, 554,
	559, 558, 561, 524, 525, 526, 527, 528, 529, 634,
	635, 636, 637, 638, 639, 640, 641, -388, -297, 91,
	-162, -161, -204, 94, 99, 102, 103, 105, -411, 262,
	359, 360, 119, -432, 665, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 415, 415, -195, -84, -84,
	-84, -84, -234, -132, -236, -10, -8, -432, -84, -8,
	-9, -13, -39, -41, 568, -40, -304, 100, -241, -257,
	13, 162, 43, 51, -239, -240, -12, -8, -149, 20,
	24, 25, -137, 168, -149, -304, -137, -283, 243, -84,
	-84, -272, -317, 336, -274, 435, 649, 434, -264, -277,
	91, -263, -276, 433, -12, -358, 159, -344, -348, -298,
	254, -374, 250, -195, -84, -367, -366, -298, -432, -290,
	244, -133, -293, 240, 248, 247, 136, -392, 139, 296,
	450, 238, -56, -57, -58, -276, 176, 671, -115, 271,
	275, 88, 88, -348, -347, -346, -393, 275, 254, -373,
	-365, 246, 255, -354, 247, 248, -349, 240, 137, -393,
	-349, 245, 255, 250, 254, 275, 275, 127, 275, 127,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 270,
	-355, 151, -355, 545, 545, -361, -393, 250, 240, -393,
	-393, 246, -295, -349, 242, 26, 242, 36, 36, -355,
	-355, -355, -276, 176, -355, -355, -355, -355, 283, 283,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, 91, 239, -392,
	-141, 426, 317, 331, 329, 82, -59, 285, -42, -195,
	91, -293, 240, 241, -392, 272, -195, 221, -195, -419,
	-195, 96, 96, 91, -287, 159, 16, -287, -284, 415,
	413, 400, 405, -287, -287, -287, -287, 286, 398, -350,
	240, 36, 251, 415, 286, 398, 286, 287, 286, 287,
	408, 418, 286, -309, 15, 162, 450, 403, 407, 279,
	239, 280, 241, 417, 287, -309, -309, 90, -309, 90,
	90, -288, 159, 286, 415, 282, -287, -287, -287, -315,
	-432, -300, -298, -296, 230, 24, 142, 26, 28, 145,
	177, 130, 20, 146, 38, 232, 366, 250, 176, 246,
	480, 225, 73, 549, 451, 453, 449, 456, 482, 483,
	450, 401, 32, 14, 551, 29, 260, 25, 39, 170,
	227, 149, 552, 263, 27, 261, 118, 121, 554, 23,
	76, 255, 15, 248, 41, 17, 555, 556, 18, 244,
	243, 162, 240, 71, 12, 220, 30, 158, 67, 557,
	137, 558, 559, 560, 561, 131, 69, 159, 21, 691,
	454, 455, 34, 650, 537, 274, 172, 74, 60, 653,
	143, 452, 562, 563, 119, 564, 122, 77, 658, 139,
	19, 72, 43, 565, 275, 566, 245, 692, 567, 438,
	568, 160, 228, 479, 70, 161, 665, 569, 666, 238,
	414, 9, 484, 33, 259, 247, 129, 68, 570, 239,
	148, 485, 486, 242, 132, 120, 8, 136, 35, 13,
	75, 78, 457, 458, 459, 58, 128, 541, 147, 16,
	571, 439, 141, 651, 445, 446, 447, 448, 235, -388,
	654, -315, -315, 33, 92, -414, -415, -416, 541, 438,
	242, -298, -195, -90, 642, 229, -91, 648, 24, 237,
	-139, 415, -127, 177, 672, 655, 656, 657, 654, 412,
	652, 662, 660, 658, 286, 659, 88, 139, 141, 142,
	4, -149, 158, -205, 151, 152, 153, 154, 155, 156,
	157, 162, 143, 145, 159, -250, 140, 163, 164, 165,
	166, 167, 168, 169, 171, 170, 172, 173, 160, 161,
	176, 223, 224, -159, -159, -159, -159, -220, -226, -225,
	-432, -222, -388, -297, -304, -432, -432, -159, -282, -432,
	-432, -155, -432, -432, -432, -229, -149, -432, -432, -436,
	-432, -436, -436, -333, -432, -333, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, 221, -432, -432, -432, -432, -432, -333, -333,
	-333, -333, -333, -432, -432, -432, -432, -432, -432, -432,
	-432, -432, -432, -432, -432, -432, -432, 103, 99, 102,
	94, -224, 105, 90, 90, 90, 90, -8, -9, -214,
	-432, -314, -402, -403, -198, -195, -432, 317, 329, -298,
	-298, 272, -239, -12, -8, -234, -240, -236, -8, -125,
	-138, 64, 65, -140, 25, 39, 68, 66, 24, -433,
	89, -433, -257, -433, 88, -41, -260, 87, 62, 44,
	90, 90, 88, 22, -235, -237, -149, 15, -302, 4,
	-301, 26, -298, 90, 221, 15, -196, 30, -195, -283,
	-283, 88, 91, 336, -273, -275, 436, 438, 151, -303,
	-298, 90, 32, 89, 88, -195, -322, -325, -327, -326,
	-328, -323, -324, 363, 364, 177, 367, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 380, 33, 262, 359,
	360, 361, 362, 381, 382, 383, 384, 386, 387, 388,
	389, 344, 365, 539, 345, 346, 347, 348, 349, 350,
	352, 353, 356, 354, 355, 357, 358, -389, -388, 87,
	64, 65, 89, 88, -329, 87, -149, 87, 143, -141,
	239, -388, 240, 240, 240, -84, 479, -355, -355, -355,
	270, 20, -49, -46, -381, 19, -45, -46, 230, 123,
	124, 227, 87, -344, 87, -353, -389, -388, 87, 137,
	245, 136, -352, -349, -352, -353, -388, -222, -388, 137,
	137, -388, -388, -269, -298, -269, -269, 24, -269, 24,
	-269, 24, 96, -298, -269, 24, -269, 24, -269, 24,
	-269, 24, -269, 24, 32, 79, 80, 81, 32, 83,
	84, 85, -222, -388, -388, -222, -344, -222, -195, -388,
	-276, 96, 96, 96, -355, -355, 96, 90, 90, 90,
	-355, -355, 96, 90, -306, -304, 90, 90, -394, 256,
	300, 302, 96, 96, 96, 96, 32, 90, -395, 32,
	679, 678, 680, 681, 682, 90, 96, 32, 96, 32,
	96, -298, 87, -422, 87, -195, -147, 290, 225, 227,
	230, 77, 90, 320, 321, 318, 327, 328, 323, 324,
	90, 320, 318, 327, 328, 323, 324, 90, 320, 321,
	318, 327, 328, 323, 324, 151, 45, 88, 242, 239,
	-388, -289, 244, -289, -298, -305, -304, -296, -418, 88,
	-417, 23, 445, 446, 448, 404, 447, 90, -149, -351,
	15, 162, -309, -309, -287, -195, -351, -309, -287, -195,
	-287, -287, -287, -287, -309, -309, -309, -287, -304, -304,
	-195, -195, -195, -195, -195, -195, -195, -315, -288, -287,
	-287, 654, -287, 332, 654, 90, -281, 15, 77, -315,
	-315, 88, 342, 439, 440, -313, 339, -86, -298, 90,
	-15, -11, -23, -22, -24, 151, -15, 88, 541, -188,
	-195, 654, 654, 654, 654, 654, 654, -149, -149, -149,
	-149, 564, -212, 119, 143, 120, 121, -167, -213, -218,
	-220, 106, 162, 145, 159, -250, -155, -159, -155, -155,
	-155, -155, -155, -155, -155, -155, -155, -155, -155, -155,
	-155, -316, -298, 90, 177, -163, -162, 105, -411, -163,
	538, 88, -225, 221, -149, -149, -388, -149, -298, -135,
	-137, -135, -149, -227, -228, 147, -222, -149, -433, -433,
	96, 105, 168, -131, 25, 39, -131, -131, -131, -131,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-131, -298, -298, -124, -123, 461, 462, 463, 464, 466,
	467, 468, 471, 472, 476, 477, 460, 478, 465, 470,
	473, 474, 475, 469, 362, -149, -149, -149, -149, -149,
	-149, -92, -149, 130, 131, 132, -214, -149, -155, -149,
	-149, -149, -433, -149, -149, -149, -215, -214, -387, -386,
	-385, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -149, -149, -149, -433, -149, -169, -153, 96, -265,
	105, 92, -149, -149, -136, -135, -300, -305, -296, -297,
	-135, -136, -136, -135, -135, -149, -149, -149, -149, -149,
	-149, -149, -149, -433, -149, -149, -149, -149, -149, -257,
	-433, -214, 88, -404, 438, 439, 650, -307, 275, -306,
	26, -215, 90, 90, 15, -267, 78, -298, -239, -239,
	60, -135, -140, -433, -40, 26, -259, -298, 63, 90,
	-334, -276, 390, 391, 177, -149, -149, 88, -238, 28,
	29, -195, -301, 168, -305, -195, -268, 275, -195, -173,
	-175, -176, -177, -198, -221, -432, -178, -8, 560, 557,
	15, -188, -189, -197, -304, -274, -317, -273, 88, 437,
	439, 440, 77, 122, -149, -335, 176, -363, -362, -361,
	-344, -346, -347, -348, 89, -335, -340, 396, 395, -329,
	-329, -329, -329, -329, -334, -334, -334, -334, 87, 87,
	-329, -329, -329, -329, -337, 87, -337, -337, -338, -337,
	87, -338, -339, 87, -339, -374, -149, -371, -370, -368,
	-369, 249, 101, 632, 588, 541, 581, 622, 78, -366,
	-238, 96, -433, -420, -427, 284, 550, 306, 286, 27,
	-147, -290, -372, -369, -388, -388, -388, -290, 91, 90,
	91, 90, 91, 90, -116, -63, -1, 691, 692, 693,
	88, 20, -345, -344, -62, 300, -377, -378, 275, -373,
	-367, -353, 137, -352, -353, -353, -388, 88, 30, 127,
	127, 127, 127, 541, 227, 33, -291, 580, 143, 632,
	588, -344, -62, 242, 242, -316, -316, -316, 90, 90,
	-286, 687, -188, -424, 305, -421, -427, -143, 292, 151,
	281, 281, 239, 239, 294, -195, 319, 322, 320, 321,
	318, 327, 328, 323, 324, 24, 24, 24, 24, 24,
	24, 24, 320, 318, 327, 328, 323, 324, 333, 24,
	24, 24, 24, 24, 24, 319, 322, 320, 321, 318,
	327, 328, 323, 324, 24, 24, 24, 24, 24, 24,
	24, 293, 295, 297, 283, -195, -195, -289, 77, -190,
	-195, 27, -304, -417, -195, 285, -195, -287, -287, -195,
	-287, -287, -195, -416, 343, -298, 377, 643, 644, 646,
	645, -127, 438, 88, 541, 23, -128, 23, -432, 119,
	120, 121, -213, -155, -159, -155, 142, 263, -432, -222,
	-433, -300, 26, 88, 78, -433, 88, 88, -433, -433,
	88, 15, -230, -228, 149, -149, -433, 88, -433, -433,
	-433, -214, -149, -149, -149, -149, -433, -433, -433, -433,
	-433, -433, -433, -433, -433, -433, -214, 88, 88, 15,
	-320, 26, -433, -433, -433, -433, -433, -229, -433, 15,
	-433, 78, 88, 162, 88, -433, -433, -433, 88, 88,
	-433, -433, 88, 88, -433, 88, 88, 88, -433, 88,
	88, 88, 88, -433, -433, -433, -433, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -433, -99, 565,
	-433, -433, 88, -433, 88, -433, -432, 221, -433, -433,
	-433, -433, -433, 88, 88, 88, 88, 88, 88, -433,
	-433, -433, 88, 88, -433, 88, -433, 88, -433, -403,
	649, 439, -202, -201, -199, 75, 243, 76, -432, -306,
	-433, -163, -265, -266, -265, -207, -298, 96, 105, -241,
	-172, -174, 15, -140, -220, 89, 88, -334, -245, -251,
	-284, -298, 90, 177, -336, 177, -336, 390, 391, -237,
	221, -203, 16, -206, 33, 58, -11, -432, -432, 33,
	88, -191, -193, -192, -194, 67, 71, 73, 68, 69,
	70, 74, -311, 26, -8, -173, -8, -432, -195, -188,
	-434, 15, 78, -434, 88, 221, -275, -278, 441, 438,
	444, -388, 90, -115, 88, -361, -348, -242, -144, 41,
	-341, 397, -334, 548, -334, -343, 90, -343, 96, 96,
	96, 89, -52, -47, -48, 34, 82, -368, -355, 90,
	40, -355, -355, -298, 89, -238, 89, 88, 151, -143,
	-195, 77, -372, -372, -372, -304, -2, 690, 696, 137,
	87, 400, 19, -259, 88, 89, -223, 301, 89, -117,
	-298, 89, 87, -353, -353, -298, -432, 239, 32, 32,
	632, 588, 580, -62, -223, -222, -388, -335, 689, 688,
	89, -426, 273, 87, 89, 88, 151, 241, 299, -148,
	456, -145, 90, 91, -195, -195, -195, -195, -195, 230,
	227, 423, -412, 325, -412, -412, 90, -412, 423, -412,
	-412, 284, 242, -188, -195, 88, -89, 258, 253, -309,
	-309, 34, -195, 438, 663, 661, -149, 142, 263, -167,
	-159, -155, -318, 177, 363, 262, 361, 357, 377, 368,
	395, 359, 396, 354, 353, 352, -318, -316, -214, -137,
	-149, -149, 150, -149, 148, -149, -433, -433, -433, -433,
	-433, -234, -149, -149, -149, -433, 177, 363, 15, -149,
	-316, -149, -149, -149, -149, -149, -385, -149, -214, -149,
	-214, -149, -149, -149, -149, -149, -386, -386, -386, -386,
	-386, -214, -214, -214, -214, -432, -298, -102, -101, -100,
	615, 243, -99, -169, -102, -169, -136, -300, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -199, -349,
	-349, -349, -269, 88, -280, 23, 15, 58, 58, -172,
	-203, -173, -140, -298, -248, 642, -254, 47, -252, -253,
	48, -249, 49, 57, -336, -336, 168, -239, -149, -270,
	77, -271, -279, -222, -217, -219, -218, -432, -258, -433,
	-298, -269, -271, -175, -176, -176, -175, -176, 67, 67,
	67, 72, 67, 72, 67, -192, -304, -433, -149, -307,
	78, -173, -173, -197, -304, 168, 438, 442, 443, -361,
	-410, 119, 143, 32, 77, 393, 101, -408, 176, 577,
	627, 632, 588, 581, 622, -409, 245, 136, 137, 257,
	26, 42, 89, 88, 89, 88, 89, 89, 88, -292,
	-291, -48, -47, -355, -355, 96, -388, 90, 90, 305,
	-427, 90, 241, -195, 77, 77, 77, -118, 694, 96,
	87, -3, 82, -149, 87, 20, -344, -222, -379, -330,
	-380, -331, -332, -5, -6, -356, -121, 58, 101, -66,
	45, 240, 674, 675, 127, -432, 687, -371, -259, -375,
	-377, -195, -152, -432, -151, -153, -160, 166, 167, 262,
	359, 360, -223, 87, -423, -428, 307, 308, 309, 310,
	311, 312, 313, 314, 315, -427, 90, -195, -142, 290,
	298, 87, -146, 92, -391, 78, 281, 393, 281, 90,
	-413, 326, 90, -413, -413, 90, -413, 90, -413, -413,
	-195, -89, -52, -195, -287, -287, 34, -388, -433, -167,
	-159, -130, 162, 541, -321, 547, -329, -329, -329, -339,
	-329, 349, -329, 349, -329, -433, -433, -433, 88, -433,
	23, -433, -149, 88, -126, 484, 88, 88, -433, 87,
	87, -149, -433, -433, -433, 88, -433, -433, -433, -433,
	-433, 88, -433, -433, -433, 88, -319, 633, -433, -433,
	-433, -433, -433, -433, -433, -433, -433, -433, -98, -299,
	-298, -99, 597, 597, -433, -99, -231, 88, -433, -433,
	88, -433, 88, 88, -433, 88, -433, 88, -433, -433,
	-433, -433, 88, -200, 23, -200, -200, -433, -265, -195,
	-203, -232, 17, -245, 52, 369, -256, -255, 56, 48,
	-253, 20, 50, 20, 31, -270, 88, 151, 88, -433,
	-433, 88, 58, 221, -433, -203, -186, -185, 77, 78,
	-187, 77, -185, 67, 67, -260, 88, -268, -173, -203,
	-203, 221, 119, -432, -154, -166, -152, 13, 90, 90,
	-388, -407, 678, 679, 32, 96, -355, -355, 137, 137,
	-195, 87, -334, 90, -334, 96, 96, 32, 83, 84,
	85, 32, 79, 80, 81, 87, 151, -195, -195, -195,
	-195, -376, 87, 20, -149, 87, 151, 89, -259, -259,
	277, 162, -355, 672, 283, 283, -355, -355, -355, -120,
	-119, 694, 89, -433, 88, -342, 541, 544, -149, -161,
	-161, -425, -429, 252, 316, 89, 88, 151, 151, -260,
	89, -384, 541, -390, -298, -298, -298, -298, 96, 98,
	90, -433, 539, 74, 542, -433, -334, -149, -149, -149,
	-239, 90, -149, -149, 96, 96, -433, -149, -214, -149,
	-433, -183, -182, -184, 655, 119, 32, -318, -433, -216,
	275, -105, -104, -103, 15, -433, -149, -149, -149, -149,
	-149, -149, -149, -432, 67, 19, 17, -432, -432, -307,
	-232, -233, 18, 20, -246, 54, -244, 53, -244, -255,
	20, 20, 90, 20, 90, 137, -279, -149, -219, 58,
	-11, -298, -217, -298, -234, -149, 87, -149, -163, -203,
	-203, -149, -209, 508, 510, 511, 512, 509, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 513, 487,
	108, 110, 109, 488, 489, 490, 363, 535, 536, 530,
	533, 534, 532, 531, 378, 379, 491, 492, 493, 111,
	112, 113, 114, 115, 116, 117, 494, 497, 495, 498,
	499, 500, 505, 506, 501, 502, 503, 504, 507, 524,
	525, 526, 527, 528, 529, 634, 635, 636, 637, 638,
	639, 640, 641, 90, 90, 87, -149, 89, 89, -423,
	90, -260, -375, -63, 89, -261, -259, 96, 89, 278,
	-218, -432, 90, -355, -355, -355, 96, 96, -306, -433,
	88, -298, -409, -377, 545, 545, -433, 89, 88, 151,
	-428, 90, 90, 26, -383, -382, -300, 87, 78, 63,
	540, 543, -433, -433, 88, -433, -433, -433, 89, 89,
	-433, -433, -433, 88, -433, -182, -184, -433, 77, -163,
	-234, 20, -102, 300, 302, -102, -433, 88, -433, -433,
	88, -433, 88, -433, -433, -262, -433, -298, 245, 20,
	20, -262, -262, -202, -233, -112, -111, -110, 571, -149,
	-214, -247, 55, 77, 122, 90, 90, 90, 13, -217,
	221, -239, -259, -180, 400, -234, -433, -259, 89, 89,
	26, 89, 696, 137, 89, -218, -129, -432, 274, -306,
	90, 90, -119, -122, -429, 90, 151, -11, 88, 151,
	-259, -195, 63, -149, -214, -433, 77, 552, 655, -97,
	-96, -93, 666, 692, -214, -99, -99, -149, -149, -149,
	88, -433, -433, -433, -112, 88, -109, -108, -298, 77,
	122, -271, -298, 89, -433, -432, -239, 89, -243, 273,
	-11, 87, -3, 274, -330, -380, -331, -332, -5, -6,
	-356, 151, 90, -87, 541, -382, -360, -300, 90, 96,
	89, 541, -433, -433, -95, 145, 664, 630, -150, -161,
	-158, 220, -433, 88, -433, 88, -433, 88, -298, 245,
	-110, 88, 26, -307, -181, -179, -298, 594, -400, -399,
	537, -410, -406, 119, 143, 101, -408, 632, 588, 128,
	129, 87, -87, -149, 87, -433, 90, -88, 289, 649,
	-391, 542, -95, 665, 608, 583, 608, 583, -149, -149,
	-149, -108, -432, -433, 88, 23, -322, -65, 605, -397,
	-398, 77, -401, 406, 604, 625, 119, 90, -425, 89,
	-259, 250, -384, 543, 142, -433, 88, -433, 88, -433,
	-98, -179, 601, -335, -163, -398, 77, -397, 77, 14,
	13, 89, -4, 695, 89, 291, -95, -149, -149, -433,
	-64, 27, -180, -396, 258, 253, 256, 33, -396, 96,
	-4, -433, -433, 605, 252, 32, 119, -163, -183, -182,
	-182,
}

var yyDef = [...]int{
	968, -2, -2, 970, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 77, 79, 80, 968,
	968, 968, 0, 968, 0, 0, 968, -2, -2, 968,
	1585, 0, 968, 0, 0, 0, 0, 0, -2, 881,
	887, 0, 896, -2, 0, 0, 968, 968, 2172, 2172,
	963, 0, 0, 0, 0, 0, 968, 968, 968, 968,
	1442, 57, 968, 0, 92, 93, 916, 917, 918, 72,
	0, 2170, 969, 1, 3, 78, 82, 0, 0, 0,
	65, 1451, 0, 85, 0, 0, 972, 0, 0, 1568,
	968, 968, 0, 167, 168, 169, 0, 0, 0, 968,
	0, 1566, -2, 173, -2, 202, 203, 204, 0, 209,
	677, 565, 617, 563, 602, -2, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	441, 441, 0, 0, -2, 551, 551, 551, 1570, 0,
	0, 0, 599, 503, 441, 441, 441, 0, 441, 441,
	441, 441, 0, 0, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 0, 1469, 208, 1586, 1583, 1584, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 0, 0, 1562, 0, 790, 1071, 0,
	0, 795, 0, 0, 798, 799, 0, 143, 870, 801,
	802, 870, 0, 870, 870, 870, 870, 0, 0, 0,
	812, 0, 0, 0, 0, 867, 0, 828, 829, 0,
	867, 867, 867, 0, 0, 840, 873, 0, 0, 846,
	870, 870, 870, 850, 851, 2173, 0, 2173, 2173, 1553,
	0, 864, 862, 876, 877, 47, 880, 883, 884, 885,
	886, 889, 0, 900, 903, 1579, 1580, 0, 905, 912,
	929, 930, 0, 964, 965, 52, 1219, 0, 1093, 1098,
	1109, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 0,
	0, 0, 0, 1137, 1138, 0, 0, 0, 0, 0,
	1200, 1146, 0, 0, 0, 0, 1415, 0, 0, 1376,
	1376, 1234, 1376, 1378, 1378, 1793, 1929, 1937, 2059, 1755,
	1760, 1761, 1762, 2052, 2053, 2054, 2055, 2095, 2096, 2100,
	1853, 0, 0, 0, 2169, 1890, 1898, 1899, 1923, 2024,
	2080, 1772, 1918, 1989, 1850, 1872, 1873, 2006, 2007, 1894,
	1895, 1876, 1888, 1891, 1879, 1880, 1882, 1884, 1889, 1896,
	1902, 1881, 1901, 1900, 0, 1877, 1878, 1883, 1893, 1897,
	1885, 1886, 1887, 1892, 1903, 0, 0, 0, 0, 0,
	1315, 1316, 1317, 1318, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 1428, 1429, 50, 51, 1218, 1549, 1378,
	1378, 1378, 1378, 1378, 1160, 1161, 1162, 1163, 1164, 1188,
	1189, 1195, 1196, 2001, 2002, 2003, 2004, 1834, 2089, 1842,
	1843, 1984, 1985, 1855, 1856, 2130, 2131, -2, -2, -2,
	274, 275, 276, 277, 278, 279, 280, 281, 0, 1797,
	2070, 2071, 270, 0, 0, 338, 339, 335, 336, 337,
	1202, 1203, 291, 292, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 302, 303, 304, 305, 306, 307, 308,
	309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 2172, 0, 939, 0, 0, 0,
	0, 0, 1451, 0, 1443, 1442, 70, 0, -2, 0,
	0, 0, 0, 54, 0, 59, 1028, 971, 84, 83,
	1500, 0, 0, 0, 66, 1452, 74, 76, 1453, 0,
	973, 974, 0, 1004, 1008, 0, 0, 0, 1569, 1568,
	1568, 109, 0, 0, 110, 130, 131, 132, 0, 0,
	116, 117, 1555, 1556, 170, 0, 0, 220, 221, 0,
	48, 468, 0, 216, 990, 0, 461, 400, 0, 0,
	0, 1469, 0, 0, 0, 0, 0, 968, 0, 1563,
	197, 198, 205, 206, 207, 441, 441, 441, 614, 0,
	0, 208, 208, 572, 573, 574, 0, 0, -2, 466,
	0, 552, 0, 0, 455, 455, 459, 457, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 0, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 442, 0, 612, 613, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 1572, 0, 589, 590, 0,
	0, 0, 441, 441, 0, 0, 0, 0, 441, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 196,
	1491, 0, 0, 0, 0, 0, -2, 0, 782, 0,
	141, 0, 0, 1564, 1564, 0, 789, 0, 791, 1482,
	793, 796, 797, 142, 800, 0, 0, 803, 0, 867,
	867, 865, 866, 805, 806, 807, 808, 870, 0, 0,
	450, 451, 452, 867, 870, 0, 870, 870, 870, 870,
	867, 867, 867, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2173, 873, 870, 870, 0, 870, 836,
	0, 841, 0, 842, 843, 844, 847, 848, 849, 852,
	2174, 2175, 1581, 1582, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 2173,
	2173, 856, 860, 1554, 882, 888, 890, 891, 0, 0,
	901, 904, 923, 56, 1841, 911, 56, 913, 914, 915,
	942, 943, 948, 0, 0, 0, 0, 954, 955, 956,
	957, 0, 0, 960, 961, 962, 0, 0, 0, 0,
	0, 1091, 0, 0, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 1111,
	0, 0, 0, 1133, 1134, 1135, 1136, 1139, 0, 1151,
	0, 1153, 1424, -2, 0, 0, 0, 1144, 1145, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 1232,
	0, 1233, 1235, 1236, 0, 1237, 978, 978, 978, 978,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 988, 988, 0, 0, 263, 264,
	265, 266, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 340, 288, 289, 290, 1218, 0, 0,
	0, 53, 931, 932, 0, 1054, 1574, 0, 0, 0,
	984, 0, 64, 73, 75, 1451, 68, 1451, 0, 0,
	0, -2, -2, 991, 997, 998, 999, 1000, 1001, 61,
	2171, 62, 0, 81, 0, 55, 0, 0, 0, 0,
	414, 1503, 0, 0, 1444, 1445, 1448, 0, 1005, 1935,
	1009, 0, 1011, 1012, 0, 0, 107, 0, 1070, 0,
	0, 0, 118, 0, 120, 121, 0, 0, 0, 425,
	1557, 1558, 1559, -2, 448, 0, 425, 409, 348, 349,
	350, 400, 352, 400, 400, 400, 400, 414, 414, 414,
	414, 383, 384, 385, 386, 387, 0, 0, 369, 400,
	400, 400, 400, 390, 391, 392, 393, 394, 395, 396,
	397, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	402, 402, 402, 402, 402, 406, 406, 0, 49, 0,
	995, 996, 429, 0, 1448, 0, 0, 0, 0, 1491,
	1566, 1576, 0, 0, 0, 1566, 175, 0, 0, 0,
	615, 688, 566, 603, 616, 0, 569, 570, -2, 0,
	0, 551, 0, 553, 0, 449, 0, -2, 0, 459,
	0, 455, 459, 456, 459, 447, 460, 593, 594, 595,
	0, 597, 598, 718, 1040, 0, 0, 0, 0, 0,
	724, 725, 726, 0, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 0, 0, 0, 553, 0, 600, 0,
	0, 505, 506, 507, 0, 0, 510, 511, 512, 513,
	0, 0, 516, 517, 518, 1057, 1058, 519, 520, 545,
	546, 547, 521, 522, 523, 524, 525, 526, 527, 539,
	540, 541, 542, 543, 544, 528, 529, 530, 531, 532,
	533, 536, 0, 137, 0, 190, 1473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1564,
	0, 0, 0, 0, 987, 1072, 1587, 1588, 792, 0,
	1483, 0, 1486, 1487, 1488, 1489, 1490, 871, 872, 0,
	453, 454, 870, 870, 809, 857, 0, 870, 813, 858,
	814, 816, 815, 817, 830, 831, 870, 820, 868, 869,
	821, 822, 823, 824, 825, 826, 827, 853, 832, 833,
	834, 839, 835, 837, 838, 874, 0, 878, 879, 854,
	855, 0, 0, 894, 895, 0, 902, 926, 924, 925,
	927, 919, 920, 921, 922, 0, 928, 0, 0, 945,
	103, 950, 951, 952, 953, 966, 959, 1220, 1088, 1089,
	1090, 0, 1092, 1095, 0, 1204, 1206, 1097, 1099, 1215,
	1216, 1217, 0, 0, 0, 0, 0, 1103, 1107, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1129, 1392, 1393, 1394, 1148, 341, 342, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 1219, 1150, 0,
	1002, 0, 0, 1422, 1419, 0, 0, 0, 1377, 1379,
	0, 0, 0, 0, 979, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1395, 0, 0, 0, 0,
	0, 1415, 0, 1155, 1156, 1157, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 1575, 0, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1319, 1320, 1321,
	1322, 46, 0, 0, 0, 989, 1426, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 934, 935, 937, 0, 1074, 0, 1055,
	0, 0, 940, 941, 0, 983, 0, 986, 67, 69,
	0, 1013, 992, 63, 58, 0, 0, 1032, 1501, 414,
	1523, 0, 423, 423, 420, 1454, 1455, 0, 1447, 1449,
	1450, 86, 1010, 1006, 0, 1086, 0, 0, 1069, 0,
	1016, 1018, 1019, 1020, 1052, 0, 1023, 1024, 0, 0,
	0, 0, 0, 105, 1071, 111, 0, 119, 0, 0,
	124, 125, 112, 113, 114, 115, 0, 677, -2, 500,
	222, 224, 225, 226, 217, -2, 412, 410, 411, 351,
	414, 414, 377, 378, 379, 380, 381, 382, 0, 0,
	370, 371, 372, 373, 362, 0, 363, 364, 365, 404,
	0, 366, 367, 0, 368, 467, 0, 1456, 430, 431,
	433, 441, 0, 436, 437, 0, 441, 441, 0, 462,
	463, 0, 1448, 0, 0, 148, 149, 150, 151, 1567,
	1473, 0, 0, 1577, 1576, 1576, 1576, 0, 210, 211,
	212, 213, 214, 215, 713, 0, 0, 689, 711, 712,
	208, 0, 0, 218, 555, 554, 0, 745, 0, 465,
	0, 0, 459, 459, 444, 445, 596, 0, 0, 720,
	721, 722, 723, 0, 0, 0, 582, 494, 0, 583,
	584, 553, 555, 0, 0, 425, 508, 509, 514, 515,
	534, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 630, 631, 634,
	636, 637, 638, 557, 644, 633, 635, 639, 640, 641,
	557, 645, 646, 648, 649, 650, 557, 656, 0, 647,
	651, 652, 653, 557, 657, 660, 661, 662, 665, 667,
	668, 669, 557, 675, 664, 666, 670, 671, 672, 557,
	676, 1470, 1471, 1472, 0, 0, 783, 0, 0, 491,
	101, 1565, 788, 1484, 794, 1485, 867, 819, 859, 867,
	811, 818, 845, 892, 893, 898, 906, 907, 908, 909,
	910, 949, 0, 0, 0, 0, 958, 0, 0, 1096,
	1205, 1207, 1100, 0, 1104, 1108, 0, 0, 0, 1154,
	1152, 1426, 0, 0, 0, 1201, 0, 0, 1223, 1224,
	0, 0, 0, 1420, 0, 0, 1230, 0, 1380, 1381,
	1238, 0, 0, 0, 0, 0, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1442, 0, 0, 0,
	0, 0, 1259, 1260, 1261, 1262, 1263, 0, 1265, 0,
	1266, 0, 0, 0, 0, 1273, 1274, 1276, 0, 0,
	1279, 1280, 0, 0, 1281, 0, 0, 0, 1285, 0,
	0, 0, 0, 1294, 1295, 1296, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1308, 1309, 0,
	1183, 0, 0, 1183, 0, 1221, 988, 0, 1382, 1383,
	1384, 1385, 1386, 0, 0, 0, 0, 0, 0, 1342,
	1343, 1345, 0, 0, 1348, 0, 1350, 0, 1548, 933,
	936, 938, 1026, 1075, 1076, 0, 0, 0, 0, 1056,
	1573, 981, 982, 985, 1034, 0, 1430, 0, 0, 1013,
	1086, 1014, 0, 993, 60, 1029, 0, 1505, 1504, 1517,
	1530, 423, 423, 417, 418, 424, 419, 421, 422, 1446,
	0, 1451, 0, 1541, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 0, 1062, 0,
	0, 0, 0, 1053, 1024, 0, 1025, 0, -2, 0,
	0, 99, 100, 0, 0, 0, 122, 123, 0, 0,
	129, 426, 427, 199, 208, 502, 223, 475, 0, 0,
	347, 413, 374, 375, 376, 0, 398, 0, 0, 0,
	0, 496, 171, 1460, 1459, 441, 441, 432, 0, 435,
	0, 0, 0, 1578, 401, 464, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 195, 683, 0, 0, 690,
	0, 0, 0, 564, 0, 575, 576, 0, 717, -2,
	779, 429, 0, 443, 446, 1041, 0, 0, 577, 0,
	580, 581, 495, 555, 586, 587, 601, 588, 537, 538,
	535, 134, 0, 0, 136, 0, 0, 0, 0, 1492,
	1493, 1498, 1496, 1497, 176, 622, 624, 623, 627, 0,
	0, 0, 559, 0, 559, 559, 0, 559, 0, 559,
	559, 620, 0, 491, 1456, 0, 787, 492, 493, 870,
	870, 944, 104, 0, 947, 0, 0, 0, 0, 1101,
	1105, 1387, 1413, 400, 400, 1400, 400, 406, 1403, 400,
	1405, 400, 1408, 400, 1411, 1412, 0, 0, 0, 1003,
	0, 0, 1229, 1423, 0, 0, 1239, 1240, 1241, 1242,
	1243, 1417, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 0, 0,
	0, 0, 0, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 1182, 0, 1184, 1185,
	0, 0, 1311, 0, 0, 1323, 0, 1427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 1082,
	1082, 1082, 0, 0, 0, 1560, 1561, 1431, 1432, 1086,
	1433, 1015, 994, 1033, 1523, 0, 1516, 0, -2, 1525,
	0, 0, 0, 1531, 415, 416, 1007, 87, 1087, 90,
	0, 1541, 1550, 0, 1532, 1543, 1545, 0, 0, 0,
	1537, 0, 1086, 1017, 1048, 1050, 0, 1045, 1060, 1061,
	1063, 0, 1065, 0, 1067, 1068, 1028, 1022, 0, 107,
	0, 1086, 1086, 106, 0, 1073, 126, 127, 128, 501,
	227, 232, 0, 0, 0, 237, 0, 239, 0, 0,
	0, 244, 245, 441, 441, 476, 0, 344, 346, 0,
	0, 230, 414, 0, 414, 0, 405, 407, 0, 477,
	497, 1457, 1458, 0, 0, 434, 438, 439, 440, 0,
	0, 144, 0, 191, 0, 0, 0, 686, 0, 714,
	0, 0, 0, 0, 0, 0, 219, 556, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 0, 441, 0,
	0, 0, 441, 441, 441, 0, 771, 428, 0, 0,
	742, 739, 578, 0, 268, 269, 271, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 146, 1028, 1474, 1475,
	1476, 0, 1495, 1499, 179, 0, 0, 0, 0, 632,
	642, 0, 558, 643, 654, 658, 655, 663, 673, 674,
	784, 785, 786, 102, 804, 810, 946, 967, 1094, 1102,
	1106, 0, 0, 0, 0, 1414, 1398, 414, 1401, 1402,
	1404, 1406, 1407, 1409, 1410, 1142, 1143, 1147, 0, 1226,
	0, 1228, 1421, 0, 1451, 0, 0, 0, 1257, 0,
	0, 0, 1268, 1267, 1269, 0, 1271, 1272, 1277, 1278,
	1282, 0, 1284, 1286, 1287, 0, 0, 0, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 0, 1176,
	1179, 1310, 1186, 1187, 1192, 1313, 0, 0, 1222, 1325,
	0, 1330, 0, 0, 1336, 0, 1340, 0, 1346, 1347,
	1349, 1351, 0, 0, 0, 0, 0, 1054, 1035, 71,
	1433, 1435, 0, 1510, 1508, 1508, 1518, 1519, 0, 0,
	1526, 0, 0, 0, 0, 91, 0, 0, 0, 1546,
	0, 0, 0, 0, 108, 1442, 1042, 1049, 0, 0,
	1043, 0, 1044, 1064, 1066, 1021, 0, 1086, 1086, 97,
	98, 0, 233, 0, 235, 261, 262, 0, 238, 240,
	241, 242, 248, 249, 250, 243, 0, 0, 343, 345,
	0, 0, 388, 399, 389, 0, 0, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 0, 0, 1028, 192, 193,
	194, 678, 0, 688, 0, 1030, 0, 681, 0, 567,
	0, 0, 0, 441, 441, 441, 0, 0, 0, 0,
	756, 0, 0, 719, 0, 727, 0, 0, 0, 272,
	273, 0, 0, 165, 166, 138, 0, 0, 0, 0,
	1494, 621, 0, 177, 178, 0, 0, 626, 560, 561,
	659, 1140, 0, 0, 0, 1141, 1399, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 1264, 0, 0, 0,
	1290, 0, 0, 0, 708, 709, 0, 1354, 1181, 1442,
	0, 1183, 1193, 1194, 0, 1183, 1324, 0, 0, 0,
	0, 0, 0, 0, 1083, 0, 0, 0, 0, 1074,
	1435, 1440, 0, 0, 1513, 0, 1506, 1509, 1507, 1520,
	0, 0, 1527, 0, 1529, 0, 1551, 1552, 1544, 0,
	1536, 1539, 1535, 1538, 1451, 1046, 0, 1051, 0, 1442,
	96, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 247, 0, 0, 403, 408, 0,
	145, 0, 0, 0, 679, 0, 1031, 691, 682, 0,
	769, 0, 773, 0, 0, 0, 776, 777, 778, 755,
	0, 759, 469, 743, 740, 741, 579, 140, 0, 0,
	0, 152, 147, 0, 180, 181, 0, 0, 0, 1388,
	0, 1391, 1225, 1227, 0, 1254, 1255, 1256, 1396, 1397,
	1270, 1283, 1288, 0, 1291, 0, 0, 1292, 0, 710,
	1172, 0, 0, 1190, 1191, 0, 1326, 0, 1331, 1332,
	0, 1337, 0, 1341, 1352, 0, 1079, 1036, 1037, 1084,
	1085, 0, 0, 1027, 1440, 89, 1441, 1438, 0, 1436,
	1434, 1502, 0, 1511, 1512, 1521, 1522, 1528, 0, 1534,
	0, 94, 0, 0, 0, 1451, 234, 0, 253, 0,
	0, 687, 0, 690, 680, 767, 768, 0, 780, 772,
	774, 775, 757, -2, 0, 163, 0, 1477, 0, 0,
	0, 628, 1389, 0, 0, 1293, 0, 706, 707, 1180,
	1173, 0, 1158, 1159, 1177, 1312, 1314, 0, 0, 0,
	0, 1078, 1080, 1081, 88, 0, 1437, 1198, 0, 1514,
	1515, 1542, 1540, 1047, 1054, 0, 95, 482, 475, 0,
	1477, 0, 0, 0, 760, 761, 762, 763, 764, 765,
	766, 0, 153, 618, 1479, 182, 183, 548, 549, 550,
	176, 0, 1231, 1289, 1174, 0, 0, 0, 0, 1170,
	1171, 0, 1327, 0, 1333, 0, 1338, 0, 1038, 1039,
	1439, 0, 0, 692, 0, 694, 0, -2, 470, 483,
	0, 228, 254, 255, 0, 0, 258, 259, 260, 251,
	252, 0, 172, 0, 0, 781, 164, 0, 1480, 1481,
	179, 0, 0, 1165, 1166, 1167, 1168, 1169, 0, 0,
	0, 1199, 1178, 693, 0, 0, 425, 0, 703, 471,
	472, 0, 478, 479, 480, 481, 256, 257, 0, 715,
	0, 0, 625, 1390, 0, 1328, 0, 1334, 0, 1339,
	0, 695, 696, 704, 0, 473, 0, 474, 0, 0,
	0, 133, 684, 0, 715, 1478, 1175, 0, 0, 1197,
	0, 705, 701, 484, 486, 487, 0, 0, 485, 716,
	685, 1329, 1335, 0, 488, 489, 490, 697, 698, 699,
	700,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 697,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:669
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:718
		{
			setParseTree(yylex, nil)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:724
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:735
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:745
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:749
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:761
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:767
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:771
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:780
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:786
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:790
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:796
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:892
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:911
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:921
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:925
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:936
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:942
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:963
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:967
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:997
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1001
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1021
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1035
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1039
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1045
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1055
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1068
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1080
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1090
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1108
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1112
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1116
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1122
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1126
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1132
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1142
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1146
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1150
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = RepeatableReadStr
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = ReadCommittedStr
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.str = SerializableStr
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1174
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1178
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1182
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1188
		{
			yyLOCAL = &CreateWescaleFilter{Name: yyDollar[5].createWescaleFilterUnion().Name, Description: yyDollar[5].createWescaleFilterUnion().Description, Priority: yyDollar[5].createWescaleFilterUnion().Priority, Status: yyDollar[5].createWescaleFilterUnion().Status, IfNotExists: yyDollar[3].booleanUnion(), Pattern: yyDollar[9].wescaleFilterPatternUnion(), Action: yyDollar[13].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1194
		{
			yyLOCAL = &AlterWescaleFilter{OriginName: yyDollar[3].str, NewName: yyDollar[4].alterWescaleFilterUnion().NewName, Description: yyDollar[4].alterWescaleFilterUnion().Description, Priority: yyDollar[4].alterWescaleFilterUnion().Priority, SetPriority: yyDollar[4].alterWescaleFilterUnion().SetPriority, Status: yyDollar[4].alterWescaleFilterUnion().Status, Pattern: yyDollar[5].wescaleFilterPatternUnion(), Action: yyDollar[6].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1200
		{
			yyLOCAL = &AlterWescaleFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1204
		{
			yyLOCAL = yyDollar[2].alterWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1210
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIPRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1214
		{
			yyLOCAL = yyDollar[3].wescaleFilterPatternUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1220
		{
			yyLOCAL = &WescaleFilterAction{Action: "-1", ActionArgs: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1224
		{
			yyLOCAL = yyDollar[3].wescaleFilterActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1230
		{
			yyLOCAL = &DropWescaleFilter{Name: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1236
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1240
		{
			yyLOCAL = &ShowWescaleFilter{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1246
		{
			yyLOCAL = &CreateWescaleFilter{Name: "-1", Description: "-1", Priority: "-1", Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1262
		{
			if yyDollar[3].str == "name" {
				yyVAL.createWescaleFilterUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createWescaleFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1280
		{
			yyLOCAL = &AlterWescaleFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.NewName = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
				yyLOCAL.SetPriority = true
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1297
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleFilterUnion().NewName = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.alterWescaleFilterUnion().Priority = yyDollar[5].str
				yyVAL.alterWescaleFilterUnion().SetPriority = true
			}
			if yyDollar[3].str == "status" {
				yyVAL.alterWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = "name"
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.str = "description"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.str = "priority"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.str = "status"
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1336
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIPRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
			if yyDollar[1].str == "plans" {
				yyLOCAL.Plans = yyDollar[3].str
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL.FullyQualifiedTableNames = yyDollar[3].str
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL.QueryRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL.QueryTemplate = yyDollar[3].str
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL.RequestIPRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL.UserRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL.LeadingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL.TrailingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL.BindVarConds = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1367
		{
			if yyDollar[3].str == "plans" {
				yyVAL.wescaleFilterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.wescaleFilterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.wescaleFilterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.wescaleFilterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.wescaleFilterPatternUnion().RequestIPRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.wescaleFilterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.wescaleFilterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.str = "plans"
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = "query_regex"
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.str = "query_template"
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.str = "request_ip_regex"
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = "user_regex"
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = "bind_var_conds"
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1438
		{
			yyLOCAL = &WescaleFilterAction{Action: "-1", ActionArgs: "-1"}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1448
		{
			if yyDollar[3].str == "action" {
				yyVAL.wescaleFilterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.wescaleFilterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = "action"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = "action_args"
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1470
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1476
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1483
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1488
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1493
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1502
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1506
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1513
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1522
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1537
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1542
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1548
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1568
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1574
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1590
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1597
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1604
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1609
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1614
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1619
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1626
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1633
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1644
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1655
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1661
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1665
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1669
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1677
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1691
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1707
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1717
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1721
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1727
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1731
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1737
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1747
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1752
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1784
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1793
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1815
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1819
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1825
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1831
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1836
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1841
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1846
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1851
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1856
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1865
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1874
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1879
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1885
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1891
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1895
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1901
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1905
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1909
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1915
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1919
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1924
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1928
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1933
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1939
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1945
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1950
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1955
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1961
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1976
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1980
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1984
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1988
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1992
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2002
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2009
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2013
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2019
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2023
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2027
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2031
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2035
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2039
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2043
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2047
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2052
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2056
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2060
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2064
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2068
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2072
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2077
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2081
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2085
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = Armscii8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = ASCIIStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = Big5Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = UBinaryStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = Cp1250Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = Cp1251Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = Cp1256Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = Cp1257Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = Cp850Str
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = Cp852Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = Cp866Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = Cp932Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = Dec8Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = EucjpmsStr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = EuckrStr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = Gb18030Str
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = Gb2312Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = GbkStr
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = Geostd8Str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = GreekStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = HebrewStr
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = Hp8Str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = Keybcs2Str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = Koi8rStr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = Koi8uStr
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.str = Latin1Str
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = Latin2Str
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = Latin5Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = Latin7Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = MacceStr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = MacromanStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = SjisStr
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = Swe7Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = Tis620Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = Ucs2Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = UjisStr
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = Utf16Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = Utf16leStr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = Utf32Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = Utf8Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = Utf8mb4Str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = Utf8Str
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2265
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2269
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2273
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2279
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2283
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2287
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2293
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2297
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2304
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2308
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2312
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2316
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2565
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2570
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2594
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2620
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2625
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2629
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2699
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2708
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2714
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2724
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2728
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2733
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2737
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2741
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2745
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2749
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2753
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2769
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2773
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2777
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2781
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2785
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = ""
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = yyDollar[2].str
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2823
		{
			yyVAL.str = "key"
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2852
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2862
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2866
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2872
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2876
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2882
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2886
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2892
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2898
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2902
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2906
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2910
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2914
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2923
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2929
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2935
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2941
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2945
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2949
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2954
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2958
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2964
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2970
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2976
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2980
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2984
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2988
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2992
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3015
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3024
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3033
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3039
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3053
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3063
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3067
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3071
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3075
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3079
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3083
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3087
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3091
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3095
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3099
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3103
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3107
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3111
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3115
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3119
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3123
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3127
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3131
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3151
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3196
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3219
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3247
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3252
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3265
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3269
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3278
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3282
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3286
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3294
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3300
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3314
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3318
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3322
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3326
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3330
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3334
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3338
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3342
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3346
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3350
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3355
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3360
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3364
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3368
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3372
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3376
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3380
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3384
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3388
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3392
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3396
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3400
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3404
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3408
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3412
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3416
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3420
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3424
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3428
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3432
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3436
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3442
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3452
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3456
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3460
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3464
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3468
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3472
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3476
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3480
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3484
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3488
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3521
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3648
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3668
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3682
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3968
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3977
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3985
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3994
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4001
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4013
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4022
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4037
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4051
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4055
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4061
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4067
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4073
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4083
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4087
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4093
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4099
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4105
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4111
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4125
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4135
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4141
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4147
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4151
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4155
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4161
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4165
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4170
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4174
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4179
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4183
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4189
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4193
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4197
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4201
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4205
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4209
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4213
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4217
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4221
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4225
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4229
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4233
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4237
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4241
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4245
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4249
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4253
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4257
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4261
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4265
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4269
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4273
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4292
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4302
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4307
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4311
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4316
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4321
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4326
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4331
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4336
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4342
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4348
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4353
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4359
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4365
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4375
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4380
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4384
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4389
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4394
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4399
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4404
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4410
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4416
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4423
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4430
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4437
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4455
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4461
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4467
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4473
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4479
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4485
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4497
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4519
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4523
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4552
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4568
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4574
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4584
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4592
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4612
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4616
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4632
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4636
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4644
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4648
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4652
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4656
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4660
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4664
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4668
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4672
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4676
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4680
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4684
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4688
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4692
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4696
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4700
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4704
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4708
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4712
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4716
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4720
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4724
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4736
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4740
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4744
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4748
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4752
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4756
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4768
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4772
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4780
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4788
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4792
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4796
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4800
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4804
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4808
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4819
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4823
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4831
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4835
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4839
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4843
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4847
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4851
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4857
		{
			yyVAL.str = ""
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = "extended "
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4867
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4871
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4905
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4909
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4919
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4925
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.empty = struct{}{}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.empty = struct{}{}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4949
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4953
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4957
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4983
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4987
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4996
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5002
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5012
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5016
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5020
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5027
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5033
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5037
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5042
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5047
		{
			yyVAL.empty = struct{}{}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.empty = struct{}{}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5053
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5059
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5064
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5068
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5072
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5076
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5080
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5084
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5088
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5093
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5097
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5101
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5105
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.str = yyDollar[1].str
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.str = yyDollar[1].str
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5125
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5129
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5133
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5137
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5156
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5160
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5166
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5172
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5176
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5182
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5188
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5192
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5198
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5204
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5208
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5212
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5216
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5222
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5228
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5232
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5238
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5242
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5246
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5250
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5254
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5258
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5264
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5331
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5349
		{
			setAllowComments(yylex, true)
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5353
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5359
		{
			yyVAL.strs = nil
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5363
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5373
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5377
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = ""
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = SQLCacheStr
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5403
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5409
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5413
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5423
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5432
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5438
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5442
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5456
		{
			yyVAL.strs = nil
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5464
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5472
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = SQLCacheStr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = DistinctStr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = DistinctStr
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = StraightJoinHint
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5508
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5518
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5522
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5526
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5530
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5535
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5539
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5543
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5555
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5559
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5565
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5571
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5575
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5585
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5589
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5593
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5597
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5603
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5607
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5613
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5617
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5626
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5635
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5641
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5645
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5651
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5655
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5661
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5665
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5669
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5673
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5679
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5696
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5700
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5704
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5708
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5714
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5716
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5720
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5726
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5728
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5731
		{
			yyVAL.empty = struct{}{}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.empty = struct{}{}
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5736
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5740
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5744
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5757
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5761
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5765
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5771
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5777
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5781
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5785
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5789
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5795
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5799
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5809
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5823
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5829
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5838
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5844
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5848
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5854
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5858
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5862
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5866
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5871
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5875
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5879
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5883
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6173
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6177
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6183
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6193
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6197
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6201
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6207
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6211
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6218
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6222
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6226
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6230
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6234
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6240
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6244
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6248
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6252
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6256
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6275
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6281
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6285
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6294
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6299
		{
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6308
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6314
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6318
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6330
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6336
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6340
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6346
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6350
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6356
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6360
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6372
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6378
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6382
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6388
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6394
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6404
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6408
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6414
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6418
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6425
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6429
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6433
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6437
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6443
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6447
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6451
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6455
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6459
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6463
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6467
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6473
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6477
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6481
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6488
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6494
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6498
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6906
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6910
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6938
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6942
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6946
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6950
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6975
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6999
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7017
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7021
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7031
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7035
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7060
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7066
		{
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7068
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7072
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7076
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7080
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7084
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7088
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7092
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7096
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7100
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7104
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7108
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7114
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7118
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7122
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7126
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7130
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7134
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7138
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7142
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7146
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7168
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7179
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7183
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7187
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7191
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7195
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7201
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7205
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7209
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7213
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7217
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7223
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7251
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7259
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7263
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7267
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7273
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7277
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7281
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7285
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7289
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7293
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7297
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7301
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7305
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7309
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7333
		{
			yyVAL.str = string("")
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7337
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7343
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7347
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7353
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7362
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7368
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7372
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7376
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7380
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7386
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7390
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7396
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7405
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7409
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7419
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7428
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7434
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7440
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7444
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7453
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7462
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7468
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7474
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7478
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7484
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7489
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7493
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7497
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7506
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7512
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7516
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7520
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7529
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7533
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7537
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7541
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7551
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7555
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7559
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7563
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7569
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7573
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7577
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7581
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = ""
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7590
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			yyVAL.str = ""
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7607
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7617
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = ""
		}
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7626
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = "cascaded"
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7648
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7652
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7658
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7662
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7666
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7670
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7674
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7678
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7688
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7694
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7700
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7706
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7719
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = ""
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7728
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7734
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7738
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7744
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7748
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7752
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = ""
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7765
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7770
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7774
		{
			yyVAL.str = " header"
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7779
		{
			yyVAL.str = ""
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7783
		{
			yyVAL.str = " manifest on"
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7787
		{
			yyVAL.str = " manifest off"
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7792
		{
			yyVAL.str = ""
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7796
		{
			yyVAL.str = " overwrite on"
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7800
		{
			yyVAL.str = " overwrite off"
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7806
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7811
		{
			yyVAL.str = ""
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7815
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7821
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7825
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7831
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7835
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7840
		{
			yyVAL.str = ""
		}
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7844
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7850
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7854
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7860
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7864
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7868
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7873
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7877
		{
			yyVAL.str = " optionally"
		}
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7890
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7894
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7898
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7902
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7906
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7912
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7916
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7920
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7924
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7933
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7939
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7943
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7949
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7953
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7959
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7963
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7968
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7978
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7982
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7988
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7995
		{
			yyVAL.str = "charset"
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8005
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8009
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8013
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8034
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8042
		{
			yyVAL.empty = struct{}{}
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8044
		{
			yyVAL.empty = struct{}{}
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8046
		{
			yyVAL.empty = struct{}{}
		}
	case 1573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8050
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8059
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8066
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8070
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8076
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8080
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8087
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8093
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8097
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8103
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8107
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8114
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8723
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8732
		{
			decNesting(yylex)
		}
	case 2172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8737
		{
			skipToEnd(yylex)
		}
	case 2173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8742
		{
			skipToEnd(yylex)
		}
	case 2174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8746
		{
			skipToEnd(yylex)
		}
	case 2175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8750
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
