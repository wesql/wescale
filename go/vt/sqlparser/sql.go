/*
Copyright ApeCloud, Inc.
Licensed under the Apache v2(found in the LICENSE file in the root directory).
*/

// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const FILTERS = 57629
const WITHPATTERN = 57630
const PRIORITY = 57631
const PLANS = 57632
const TABLE_NAME = 57633
const QUERY_REGEX = 57634
const QUERY_TEMPLATE = 57635
const REQUEST_IP_REGEX = 57636
const USER_REGEX = 57637
const LEADING_COMMENT_REGEX = 57638
const TRAILING_COMMENT_REGEX = 57639
const BIND_VAR_CONDS = 57640
const ACTION_ARGS = 57641
const CDC = 57642
const CDCS = 57643
const WASM_BINARY_NAME = 57644
const ENV = 57645
const VITESS_MIGRATION = 57646
const CANCEL = 57647
const RETRY = 57648
const LAUNCH = 57649
const COMPLETE = 57650
const CLEANUP = 57651
const THROTTLE = 57652
const UNTHROTTLE = 57653
const EXPIRE = 57654
const RATIO = 57655
const PAUSE = 57656
const RESUME = 57657
const SCHEMA_MIGRATION = 57658
const VITESS_THROTTLER = 57659
const DML_JOB = 57660
const DETAILS = 57661
const TIME_PERIOD = 57662
const BEGIN = 57663
const START = 57664
const TRANSACTION = 57665
const COMMIT = 57666
const ROLLBACK = 57667
const SAVEPOINT = 57668
const RELEASE = 57669
const WORK = 57670
const CONSISTENT = 57671
const SNAPSHOT = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const REAL = 57681
const DOUBLE = 57682
const FLOAT_TYPE = 57683
const FLOAT4_TYPE = 57684
const FLOAT8_TYPE = 57685
const DECIMAL_TYPE = 57686
const NUMERIC = 57687
const TIME = 57688
const TIMESTAMP = 57689
const DATETIME = 57690
const YEAR = 57691
const CHAR = 57692
const VARCHAR = 57693
const BOOL = 57694
const CHARACTER = 57695
const VARBINARY = 57696
const NCHAR = 57697
const TEXT = 57698
const TINYTEXT = 57699
const MEDIUMTEXT = 57700
const LONGTEXT = 57701
const BLOB = 57702
const TINYBLOB = 57703
const MEDIUMBLOB = 57704
const LONGBLOB = 57705
const JSON = 57706
const JSON_SCHEMA_VALID = 57707
const JSON_SCHEMA_VALIDATION_REPORT = 57708
const ENUM = 57709
const GEOMETRY = 57710
const POINT = 57711
const LINESTRING = 57712
const POLYGON = 57713
const GEOMCOLLECTION = 57714
const GEOMETRYCOLLECTION = 57715
const MULTIPOINT = 57716
const MULTILINESTRING = 57717
const MULTIPOLYGON = 57718
const ASCII = 57719
const UNICODE = 57720
const NULLX = 57721
const AUTO_INCREMENT = 57722
const APPROXNUM = 57723
const SIGNED = 57724
const UNSIGNED = 57725
const ZEROFILL = 57726
const CODE = 57727
const COLLATION = 57728
const COLUMNS = 57729
const DATABASES = 57730
const ENGINES = 57731
const EVENT = 57732
const EXTENDED = 57733
const FIELDS = 57734
const FULL = 57735
const FUNCTION = 57736
const GTID_EXECUTED = 57737
const KEYSPACES = 57738
const OPEN = 57739
const PLUGINS = 57740
const PRIVILEGES = 57741
const PROCESSLIST = 57742
const SCHEMAS = 57743
const TABLES = 57744
const TRIGGERS = 57745
const USER = 57746
const VGTID_EXECUTED = 57747
const VITESS_KEYSPACES = 57748
const VITESS_METADATA = 57749
const VITESS_MIGRATIONS = 57750
const VITESS_REPLICATION_STATUS = 57751
const VITESS_SHARDS = 57752
const VITESS_TABLETS = 57753
const VITESS_TARGET = 57754
const VSCHEMA = 57755
const VITESS_THROTTLED_APPS = 57756
const WORKLOAD = 57757
const LASTSEENGTID = 57758
const FAILPOINTS = 57759
const TABLETS_PLANS = 57760
const DML_JOBS = 57761
const NAMES = 57762
const GLOBAL = 57763
const SESSION = 57764
const ISOLATION = 57765
const LEVEL = 57766
const READ = 57767
const WRITE = 57768
const ONLY = 57769
const REPEATABLE = 57770
const COMMITTED = 57771
const UNCOMMITTED = 57772
const SERIALIZABLE = 57773
const FAST = 57774
const QUICK = 57775
const CHANGED = 57776
const MEDIUM = 57777
const CURRENT_TIMESTAMP = 57778
const DATABASE = 57779
const CURRENT_DATE = 57780
const NOW = 57781
const CURRENT_TIME = 57782
const LOCALTIME = 57783
const LOCALTIMESTAMP = 57784
const CURRENT_USER = 57785
const UTC_DATE = 57786
const UTC_TIME = 57787
const UTC_TIMESTAMP = 57788
const DAY = 57789
const DAY_HOUR = 57790
const DAY_MICROSECOND = 57791
const DAY_MINUTE = 57792
const DAY_SECOND = 57793
const HOUR = 57794
const HOUR_MICROSECOND = 57795
const HOUR_MINUTE = 57796
const HOUR_SECOND = 57797
const MICROSECOND = 57798
const MINUTE = 57799
const MINUTE_MICROSECOND = 57800
const MINUTE_SECOND = 57801
const MONTH = 57802
const QUARTER = 57803
const SECOND = 57804
const SECOND_MICROSECOND = 57805
const YEAR_MONTH = 57806
const WEEK = 57807
const REPLACE = 57808
const CONVERT = 57809
const CAST = 57810
const SUBSTR = 57811
const SUBSTRING = 57812
const SEPARATOR = 57813
const TIMESTAMPADD = 57814
const TIMESTAMPDIFF = 57815
const WEIGHT_STRING = 57816
const LTRIM = 57817
const RTRIM = 57818
const TRIM = 57819
const JSON_ARRAY = 57820
const JSON_OBJECT = 57821
const JSON_QUOTE = 57822
const JSON_DEPTH = 57823
const JSON_TYPE = 57824
const JSON_LENGTH = 57825
const JSON_VALID = 57826
const JSON_ARRAY_APPEND = 57827
const JSON_ARRAY_INSERT = 57828
const JSON_INSERT = 57829
const JSON_MERGE = 57830
const JSON_MERGE_PATCH = 57831
const JSON_MERGE_PRESERVE = 57832
const JSON_REMOVE = 57833
const JSON_REPLACE = 57834
const JSON_SET = 57835
const JSON_UNQUOTE = 57836
const COUNT = 57837
const AVG = 57838
const MAX = 57839
const MIN = 57840
const SUM = 57841
const GROUP_CONCAT = 57842
const BIT_AND = 57843
const BIT_OR = 57844
const BIT_XOR = 57845
const STD = 57846
const STDDEV = 57847
const STDDEV_POP = 57848
const STDDEV_SAMP = 57849
const VAR_POP = 57850
const VAR_SAMP = 57851
const VARIANCE = 57852
const REGEXP_INSTR = 57853
const REGEXP_LIKE = 57854
const REGEXP_REPLACE = 57855
const REGEXP_SUBSTR = 57856
const ExtractValue = 57857
const UpdateXML = 57858
const GET_LOCK = 57859
const RELEASE_LOCK = 57860
const RELEASE_ALL_LOCKS = 57861
const IS_FREE_LOCK = 57862
const IS_USED_LOCK = 57863
const LOCATE = 57864
const POSITION = 57865
const MATCH = 57866
const AGAINST = 57867
const BOOLEAN = 57868
const LANGUAGE = 57869
const WITH = 57870
const QUERY = 57871
const EXPANSION = 57872
const WITHOUT = 57873
const VALIDATION = 57874
const UNUSED = 57875
const ARRAY = 57876
const BYTE = 57877
const CUME_DIST = 57878
const DESCRIPTION = 57879
const DENSE_RANK = 57880
const EMPTY = 57881
const EXCEPT = 57882
const FIRST_VALUE = 57883
const GROUPING = 57884
const GROUPS = 57885
const JSON_TABLE = 57886
const LAG = 57887
const LAST_VALUE = 57888
const LATERAL = 57889
const LEAD = 57890
const NTH_VALUE = 57891
const NTILE = 57892
const OF = 57893
const OVER = 57894
const PERCENT_RANK = 57895
const RANK = 57896
const RECURSIVE = 57897
const ROW_NUMBER = 57898
const SYSTEM = 57899
const WINDOW = 57900
const ACTIVE = 57901
const ADMIN = 57902
const AUTOEXTEND_SIZE = 57903
const BUCKETS = 57904
const CLONE = 57905
const COLUMN_FORMAT = 57906
const COMPONENT = 57907
const DEFINITION = 57908
const ENFORCED = 57909
const ENGINE_ATTRIBUTE = 57910
const EXCLUDE = 57911
const FOLLOWING = 57912
const GET_MASTER_PUBLIC_KEY = 57913
const HISTOGRAM = 57914
const HISTORY = 57915
const INACTIVE = 57916
const INVISIBLE = 57917
const LOCKED = 57918
const MASTER_COMPRESSION_ALGORITHMS = 57919
const MASTER_PUBLIC_KEY_PATH = 57920
const MASTER_TLS_CIPHERSUITES = 57921
const MASTER_ZSTD_COMPRESSION_LEVEL = 57922
const NESTED = 57923
const NETWORK_NAMESPACE = 57924
const NOWAIT = 57925
const NULLS = 57926
const OJ = 57927
const OLD = 57928
const OPTIONAL = 57929
const ORDINALITY = 57930
const ORGANIZATION = 57931
const OTHERS = 57932
const PARTIAL = 57933
const PATH = 57934
const PERSIST = 57935
const PERSIST_ONLY = 57936
const PRECEDING = 57937
const PRIVILEGE_CHECKS_USER = 57938
const PROCESS = 57939
const RANDOM = 57940
const REFERENCE = 57941
const REQUIRE_ROW_FORMAT = 57942
const RESOURCE = 57943
const RESPECT = 57944
const RESTART = 57945
const RETAIN = 57946
const REUSE = 57947
const ROLE = 57948
const SECONDARY = 57949
const SECONDARY_ENGINE = 57950
const SECONDARY_ENGINE_ATTRIBUTE = 57951
const SECONDARY_LOAD = 57952
const SECONDARY_UNLOAD = 57953
const SIMPLE = 57954
const SKIP = 57955
const SRID = 57956
const THREAD_PRIORITY = 57957
const TIES = 57958
const UNBOUNDED = 57959
const VCPU = 57960
const VISIBLE = 57961
const RETURNING = 57962
const FORMAT_BYTES = 57963
const FORMAT_PICO_TIME = 57964
const PS_CURRENT_THREAD_ID = 57965
const PS_THREAD_ID = 57966
const GTID_SUBSET = 57967
const GTID_SUBTRACT = 57968
const WAIT_FOR_EXECUTED_GTID_SET = 57969
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57970
const FORMAT = 57971
const TREE = 57972
const VITESS = 57973
const TRADITIONAL = 57974
const VTEXPLAIN = 57975
const VEXPLAIN = 57976
const PLAN = 57977
const LOCAL = 57978
const LOW_PRIORITY = 57979
const KILL = 57980
const USERS = 57981
const NO_WRITE_TO_BINLOG = 57982
const LOGS = 57983
const ERROR = 57984
const GENERAL = 57985
const HOSTS = 57986
const OPTIMIZER_COSTS = 57987
const USER_RESOURCES = 57988
const SLOW = 57989
const CHANNEL = 57990
const RELAY = 57991
const EXPORT = 57992
const CURRENT = 57993
const ROW = 57994
const ROWS = 57995
const AVG_ROW_LENGTH = 57996
const CONNECTION = 57997
const CHECKSUM = 57998
const DELAY_KEY_WRITE = 57999
const ENCRYPTION = 58000
const ENGINE = 58001
const INSERT_METHOD = 58002
const MAX_ROWS = 58003
const MIN_ROWS = 58004
const PACK_KEYS = 58005
const PASSWORD = 58006
const FIXED = 58007
const DYNAMIC = 58008
const COMPRESSED = 58009
const REDUNDANT = 58010
const COMPACT = 58011
const ROW_FORMAT = 58012
const STATS_AUTO_RECALC = 58013
const STATS_PERSISTENT = 58014
const STATS_SAMPLE_PAGES = 58015
const STORAGE = 58016
const MEMORY = 58017
const DISK = 58018
const PARTITIONS = 58019
const LINEAR = 58020
const RANGE = 58021
const LIST = 58022
const SUBPARTITION = 58023
const SUBPARTITIONS = 58024
const HASH = 58025

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"FILTERS",
	"WITHPATTERN",
	"PRIORITY",
	"PLANS",
	"TABLE_NAME",
	"QUERY_REGEX",
	"QUERY_TEMPLATE",
	"REQUEST_IP_REGEX",
	"USER_REGEX",
	"LEADING_COMMENT_REGEX",
	"TRAILING_COMMENT_REGEX",
	"BIND_VAR_CONDS",
	"ACTION_ARGS",
	"CDC",
	"CDCS",
	"WASM_BINARY_NAME",
	"ENV",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 60,
	14, 60,
	-2, 49,
	-1, 61,
	1, 229,
	701, 229,
	-2, 237,
	-1, 62,
	135, 237,
	176, 237,
	370, 237,
	-2, 591,
	-1, 72,
	36, 890,
	240, 890,
	251, 890,
	286, 904,
	287, 904,
	404, 892,
	409, 892,
	417, 892,
	419, 892,
	-2, 997,
	-1, 77,
	242, 928,
	-2, 926,
	-1, 135,
	239, 1591,
	-2, 203,
	-1, 137,
	1, 230,
	701, 230,
	-2, 237,
	-1, 148,
	136, 477,
	245, 477,
	-2, 580,
	-1, 167,
	135, 237,
	176, 237,
	370, 237,
	-2, 600,
	-1, 869,
	87, 1608,
	-2, 1453,
	-1, 870,
	87, 1609,
	221, 1613,
	-2, 1454,
	-1, 871,
	221, 1612,
	-2, 51,
	-1, 950,
	60, 1004,
	-2, 1019,
	-1, 1040,
	250, 52,
	255, 52,
	-2, 488,
	-1, 1129,
	1, 648,
	701, 648,
	-2, 237,
	-1, 1452,
	221, 1613,
	-2, 1454,
	-1, 1600,
	60, 1005,
	-2, 1024,
	-1, 1601,
	60, 1006,
	-2, 1025,
	-1, 1652,
	135, 237,
	176, 237,
	370, 237,
	-2, 527,
	-1, 1738,
	136, 477,
	245, 477,
	-2, 580,
	-1, 1748,
	250, 53,
	255, 53,
	-2, 1608,
	-1, 2144,
	221, 1617,
	-2, 1611,
	-1, 2145,
	221, 1613,
	-2, 1609,
	-1, 2244,
	135, 237,
	176, 237,
	370, 237,
	-2, 528,
	-1, 2251,
	26, 258,
	-2, 260,
	-1, 2659,
	78, 107,
	88, 107,
	-2, 1083,
	-1, 2731,
	676, 799,
	-2, 773,
	-1, 2913,
	50, 1559,
	-2, 1553,
	-1, 3639,
	676, 799,
	-2, 787,
	-1, 3741,
	90, 731,
	95, 731,
	105, 731,
	178, 731,
	179, 731,
	180, 731,
	181, 731,
	182, 731,
	183, 731,
	184, 731,
	185, 731,
	186, 731,
	187, 731,
	188, 731,
	189, 731,
	190, 731,
	191, 731,
	192, 731,
	193, 731,
	194, 731,
	195, 731,
	196, 731,
	197, 731,
	198, 731,
	199, 731,
	200, 731,
	201, 731,
	202, 731,
	203, 731,
	204, 731,
	205, 731,
	206, 731,
	207, 731,
	208, 731,
	209, 731,
	210, 731,
	211, 731,
	212, 731,
	213, 731,
	214, 731,
	215, 731,
	216, 731,
	217, 731,
	218, 731,
	219, 731,
	-2, 1976,
}

const yyPrivate = 57344

const yyLast = 48863

var yyAct = [...]int{
	870, 3367, 880, 3616, 3368, 3816, 3366, 872, 873, 3827,
	3166, 743, 2011, 3784, 3718, 2192, 3336, 3785, 3677, 1655,
	3082, 2241, 3707, 2965, 3739, 2972, 3600, 3548, 2173, 3539,
	1957, 3020, 2926, 5, 3598, 3029, 3322, 3306, 3034, 3031,
	3030, 3028, 3033, 3032, 1210, 722, 2175, 839, 3538, 3274,
	51, 2929, 2559, 3396, 3588, 2593, 3063, 2317, 3049, 3048,
	3007, 2872, 2927, 2980, 944, 208, 1578, 3401, 208, 2930,
	725, 1615, 2807, 966, 702, 3199, 833, 753, 3051, 708,
	3205, 2215, 2924, 2757, 3225, 2914, 2212, 834, 2619, 2278,
	208, 2632, 840, 2135, 3191, 835, 1713, 1161, 3088, 2693,
	2305, 2791, 2728, 2196, 2283, 208, 723, 2754, 2694, 721,
	2695, 1212, 2644, 2348, 2229, 2217, 52, 1602, 2625, 1048,
	2595, 176, 2216, 967, 2304, 946, 999, 2611, 2140, 2105,
	50, 2026, 708, 208, 2132, 708, 2106, 1763, 1190, 2326,
	162, 1965, 1745, 948, 2368, 951, 2204, 2686, 1035, 2007,
	2285, 1644, 717, 1030, 2661, 1624, 735, 2777, 2219, 1582,
	1464, 2030, 1984, 1391, 969, 1887, 1376, 110, 1892, 1883,
	1753, 1041, 1008, 1003, 1007, 114, 1716, 115, 2274, 1846,
	1036, 1037, 2197, 1038, 1643, 730, 1629, 2275, 984, 986,
	957, 109, 1448, 2141, 1424, 1956, 2102, 954, 1913, 180,
	95, 1208, 2039, 1200, 140, 138, 139, 1706, 1737, 145,
	146, 1123, 979, 955, 953, 116, 712, 94, 729, 117,
	1468, 3629, 2721, 108, 3817, 2319, 2320, 2321, 952, 3307,
	3017, 3662, 3039, 2319, 103, 2719, 3039, 2751, 2750, 2363,
	3299, 3768, 2799, 2800, 1472, 3036, 1829, 105, 3371, 691,
	644, 3658, 3371, 974, 978, 651, 1972, 3663, 889, 890,
	891, 141, 697, 3252, 105, 2, 1971, 105, 3657, 1052,
	697, 147, 1970, 1969, 105, 1968, 1967, 960, 1940, 1937,
	1000, 715, 648, 1987, 2621, 716, 2170, 2171, 3037, 1077,
	1028, 1085, 3037, 129, 3763, 1387, 2591, 2910, 3788, 2876,
	713, 2352, 961, 2447, 3837, 1609, 691, 3719, 1019, 994,
	945, 1409, 993, 947, 3043, 889, 890, 891, 3043, 121,
	122, 123, 1014, 126, 1027, 3772, 135, 3783, 3807, 204,
	2741, 3171, 638, 1051, 3170, 3370, 1392, 141, 649, 3370,
	2744, 3770, 1026, 1025, 1024, 2351, 710, 711, 688, 3601,
	3771, 968, 1078, 1081, 1082, 2560, 940, 941, 942, 943,
	2350, 1977, 950, 1094, 1072, 996, 3769, 992, 837, 838,
	3113, 3658, 3534, 3533, 96, 992, 837, 838, 3312, 1076,
	96, 3313, 3725, 98, 1075, 3798, 96, 3554, 3766, 96,
	981, 982, 3349, 3337, 1378, 2456, 650, 3708, 2635, 1006,
	96, 53, 54, 98, 3715, 141, 2707, 2365, 2345, 3553,
	667, 691, 2016, 3744, 691, 3348, 3133, 1726, 2592, 691,
	102, 2294, 1392, 2636, 57, 87, 88, 3040, 85, 89,
	1645, 3040, 1646, 1608, 3634, 3414, 2961, 86, 2235, 3725,
	2767, 2768, 2962, 2963, 2288, 1403, 1406, 2783, 1407, 1408,
	664, 2670, 105, 2798, 2669, 2453, 2200, 2671, 105, 681,
	2454, 2236, 2237, 2776, 105, 1180, 73, 105, 1949, 1950,
	938, 1204, 937, 3617, 1168, 1168, 2722, 2682, 105, 1169,
	1169, 2254, 2253, 691, 692, 1185, 1186, 1167, 3202, 1166,
	691, 3749, 676, 2628, 2629, 2841, 3789, 1377, 2172, 1181,
	3121, 3119, 2445, 1948, 673, 679, 675, 1174, 1388, 3747,
	691, 705, 1952, 1122, 3084, 709, 1641, 3790, 3753, 3754,
	1939, 703, 647, 1128, 3089, 2200, 2982, 2983, 2755, 1074,
	2394, 1403, 2393, 3748, 2778, 2397, 2398, 2729, 2327, 2395,
	2396, 692, 1091, 1092, 1093, 2399, 1096, 1097, 1098, 1099,
	2759, 1095, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 2448,
	2449, 2451, 2450, 3065, 654, 1398, 656, 669, 1390, 694,
	2763, 693, 660, 2369, 658, 662, 670, 663, 1819, 657,
	3819, 668, 2287, 1893, 659, 671, 672, 678, 682, 683,
	685, 680, 677, 686, 652, 653, 684, 674, 1203, 666,
	695, 1187, 1847, 3540, 1193, 1182, 60, 63, 66, 65,
	68, 1188, 84, 1175, 985, 93, 71, 90, 1893, 3576,
	3085, 3577, 1820, 1586, 1821, 2981, 2786, 1202, 208, 1189,
	208, 69, 2374, 208, 208, 1587, 692, 2984, 2436, 692,
	72, 101, 100, 1130, 692, 82, 83, 67, 3764, 1183,
	1184, 1398, 3008, 91, 92, 3301, 3300, 1149, 1150, 3066,
	2425, 3518, 3297, 2198, 2199, 2875, 3275, 3541, 3077, 1023,
	1121, 1147, 1148, 1101, 1100, 2842, 3078, 3086, 708, 2373,
	708, 708, 2422, 1891, 2423, 2371, 2424, 2375, 2330, 3375,
	645, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331,
	708, 208, 1061, 995, 989, 987, 1031, 2213, 692, 1059,
	1032, 995, 989, 987, 1032, 692, 1070, 1069, 1068, 74,
	75, 2372, 76, 77, 78, 79, 1067, 1066, 1065, 1452,
	203, 1064, 2198, 2199, 1120, 692, 1063, 1058, 3279, 3070,
	1590, 2724, 1164, 1730, 1170, 1171, 1172, 1173, 1119, 1071,
	2984, 2454, 1125, 1439, 142, 1642, 164, 1004, 1004, 3796,
	1178, 1002, 3276, 1044, 1127, 3831, 1126, 185, 3838, 1004,
	1205, 1206, 1207, 2790, 3628, 2720, 1439, 3296, 1080, 1029,
	1460, 1043, 980, 2723, 1043, 1867, 3721, 1884, 1079, 1717,
	2787, 2349, 2356, 1752, 2355, 2758, 1860, 2761, 175, 3203,
	2765, 1194, 1195, 1197, 163, 1399, 1878, 1397, 1394, 1395,
	1396, 1402, 1404, 1401, 696, 1400, 646, 2760, 3064, 886,
	3720, 2684, 1379, 182, 1450, 1393, 183, 1369, 1442, 1443,
	1444, 1445, 1088, 2596, 2598, 3011, 886, 689, 1456, 886,
	2803, 2739, 2762, 3721, 99, 1739, 1740, 174, 173, 202,
	1062, 1724, 690, 3067, 3068, 3041, 3042, 1060, 1723, 3041,
	3042, 1124, 1722, 2468, 99, 3369, 1881, 1087, 3045, 3369,
	1050, 1452, 3045, 1720, 3347, 643, 3613, 3720, 2291, 1852,
	2743, 1370, 1371, 642, 1446, 1022, 1831, 1830, 1832, 1833,
	1834, 1399, 637, 1397, 1394, 1395, 1396, 1402, 1404, 1401,
	104, 1400, 1751, 3250, 3251, 2775, 104, 2455, 2774, 3010,
	2347, 1393, 104, 1386, 3239, 104, 2793, 3221, 2292, 988,
	1157, 2792, 1159, 1576, 2742, 2290, 104, 988, 208, 3009,
	1165, 2666, 708, 708, 3155, 1440, 1441, 1138, 2793, 2631,
	2568, 2019, 1023, 2792, 1136, 1137, 1633, 208, 168, 1741,
	171, 1135, 1738, 137, 169, 170, 3277, 3278, 1541, 2293,
	1156, 1158, 186, 1470, 1177, 1471, 1141, 708, 1897, 2289,
	208, 192, 3752, 1049, 1851, 1179, 1139, 2626, 1050, 2242,
	1439, 1436, 708, 1593, 1152, 3829, 2960, 1597, 3830, 208,
	3828, 1474, 948, 1191, 1018, 963, 1163, 1020, 1151, 2040,
	1021, 2597, 1594, 1897, 1201, 1191, 1577, 1134, 1591, 1894,
	1895, 1898, 1896, 2041, 2300, 3760, 3751, 1870, 3706, 1868,
	1869, 1133, 1873, 1874, 1914, 3689, 1871, 1872, 1862, 708,
	1861, 708, 81, 1865, 1866, 3649, 70, 1863, 1864, 708,
	3643, 3640, 1452, 3625, 1894, 1895, 1898, 1896, 708, 708,
	3545, 708, 3544, 708, 708, 1073, 708, 708, 708, 708,
	708, 708, 1595, 3506, 1596, 114, 3319, 115, 1196, 1452,
	1577, 3292, 1452, 708, 1452, 208, 1547, 1548, 1549, 1550,
	1551, 1049, 3282, 1086, 3215, 3074, 1583, 1083, 1154, 1570,
	133, 2370, 1155, 1409, 1961, 208, 1023, 1875, 1015, 1647,
	2827, 2031, 1160, 2485, 2346, 1017, 1016, 130, 708, 117,
	2031, 1855, 208, 1853, 1854, 3799, 1858, 1859, 1408, 177,
	1856, 1857, 1848, 3410, 1849, 1407, 1408, 1850, 1409, 3257,
	708, 3256, 208, 2334, 1611, 1153, 1760, 1757, 1759, 1162,
	1192, 1814, 2038, 1580, 208, 208, 208, 208, 208, 208,
	208, 708, 1192, 945, 1021, 1743, 1754, 1754, 1022, 1129,
	1614, 1012, 947, 1750, 1792, 1736, 208, 1795, 131, 1797,
	1592, 1915, 2339, 208, 2344, 1011, 1409, 2342, 1061, 1718,
	1059, 1756, 208, 208, 1638, 1639, 1765, 2482, 1766, 3839,
	1768, 1770, 3791, 3240, 1774, 1776, 1778, 1780, 1782, 1796,
	1431, 1432, 1434, 1433, 1435, 1436, 172, 3833, 1755, 959,
	3526, 2343, 3803, 1609, 3679, 1719, 2410, 2406, 2408, 2409,
	2407, 2413, 2414, 1425, 2137, 2411, 2412, 3525, 1406, 2080,
	1407, 1408, 1733, 1734, 1732, 1839, 1409, 2829, 1746, 3606,
	132, 2339, 3516, 1889, 1050, 3110, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1434, 1433, 1435, 1436, 3081, 2512, 3680,
	2481, 1800, 1918, 1406, 3360, 1407, 1408, 165, 1373, 1922,
	166, 1924, 1925, 1926, 1927, 1725, 3840, 3343, 1931, 3344,
	2341, 1409, 1935, 1936, 3607, 1938, 1429, 1430, 1431, 1432,
	1434, 1433, 1435, 1436, 1409, 1916, 1917, 3359, 1885, 1838,
	178, 2460, 2461, 2462, 1050, 2808, 1989, 190, 3264, 1921,
	1409, 1406, 1022, 1407, 1408, 3263, 1928, 1929, 1930, 141,
	1990, 1437, 1438, 1988, 1026, 1025, 1024, 2072, 2061, 2062,
	2063, 2064, 2074, 2065, 2066, 2067, 2079, 2075, 2068, 2069,
	2076, 2077, 2078, 2070, 2071, 2073, 3253, 1049, 198, 3018,
	3000, 1609, 1910, 1043, 1046, 1047, 2691, 1004, 2036, 708,
	708, 1040, 1044, 2690, 2689, 1920, 1609, 2037, 2297, 1409,
	1840, 1406, 708, 1407, 1408, 1824, 1610, 1612, 3801, 1609,
	1823, 208, 1727, 1728, 1729, 1822, 1609, 1934, 1837, 1812,
	2810, 1806, 1803, 179, 184, 181, 187, 188, 189, 191,
	193, 194, 195, 196, 1802, 1409, 1801, 1049, 1772, 197,
	199, 200, 201, 1043, 1046, 1047, 1406, 1004, 1407, 1408,
	51, 1040, 1044, 51, 3128, 889, 890, 891, 1050, 1406,
	708, 1407, 1408, 2014, 2014, 1979, 1981, 1982, 2012, 2012,
	1452, 1826, 1039, 1146, 2015, 1406, 1050, 1407, 1408, 1804,
	1805, 708, 1836, 3731, 1609, 1810, 1811, 1452, 1992, 1980,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1411, 1409, 708, 708, 2820, 2819, 2818, 1145, 697, 2812,
	1609, 2816, 3795, 2811, 1641, 2809, 2301, 1576, 2299, 1622,
	2814, 1902, 1409, 1985, 1406, 1825, 1407, 1408, 1901, 2813,
	3247, 697, 1983, 2381, 2377, 2379, 2380, 2378, 2384, 2385,
	1993, 1900, 2382, 2383, 2673, 697, 1899, 2815, 2817, 2315,
	2314, 1049, 2145, 2313, 2312, 1450, 1053, 1043, 1880, 2094,
	1406, 1055, 1407, 1408, 1879, 1056, 1054, 1409, 1844, 1049,
	2311, 2310, 2032, 1843, 1053, 1043, 2617, 3818, 2092, 1055,
	1945, 1946, 1618, 1056, 1054, 1621, 1057, 1986, 2103, 1425,
	95, 1962, 1421, 95, 1422, 208, 2142, 3792, 3779, 1609,
	1577, 708, 3761, 3755, 1405, 1609, 3729, 1609, 1423, 1437,
	1438, 1420, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434,
	1433, 1435, 1436, 2522, 208, 3705, 1991, 708, 1619, 111,
	2617, 3714, 3630, 1405, 1609, 2133, 1406, 208, 1407, 1408,
	112, 708, 3703, 3691, 2145, 208, 3646, 208, 3111, 208,
	208, 3557, 2018, 3642, 3690, 718, 2167, 1406, 3645, 1407,
	1408, 3562, 2103, 2144, 708, 2025, 2027, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1434, 1433, 1435, 1436, 2184, 3637,
	2185, 3636, 2147, 2148, 2617, 3687, 1409, 2251, 2142, 2042,
	2043, 2044, 2045, 2137, 1409, 1609, 2223, 2134, 2617, 3683,
	3670, 1609, 1406, 2056, 1407, 1408, 2136, 3623, 2473, 3610,
	114, 1425, 115, 2802, 3642, 3641, 3561, 2143, 2205, 2206,
	884, 3609, 1409, 708, 3310, 3627, 3214, 3608, 3543, 3542,
	2188, 114, 3537, 115, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1434, 1433, 1435, 1436, 120, 2146, 3529, 1609, 2149,
	2150, 3521, 111, 708, 3509, 2144, 119, 3499, 118, 113,
	708, 708, 3498, 112, 708, 3409, 708, 2255, 3407, 2256,
	2257, 2258, 2259, 3356, 970, 2617, 3517, 976, 976, 2165,
	2260, 2261, 2262, 2263, 2245, 2266, 2267, 2268, 2269, 960,
	2246, 2227, 2177, 1427, 1428, 1429, 1430, 1431, 1432, 1434,
	1433, 1435, 1436, 2187, 3345, 2280, 708, 3793, 3503, 2210,
	3333, 708, 2249, 2328, 2190, 708, 708, 1575, 1609, 3505,
	3504, 1406, 2286, 1407, 1408, 1574, 1609, 2208, 1573, 1406,
	120, 1407, 1408, 994, 3318, 3317, 993, 2233, 3261, 2232,
	2231, 119, 3246, 118, 2248, 2247, 3310, 1609, 2617, 3308,
	3281, 3280, 113, 208, 2339, 1609, 3502, 1406, 1409, 1407,
	1408, 3095, 208, 1409, 3219, 1609, 2533, 1609, 1405, 3093,
	2296, 1052, 3090, 3087, 3073, 3072, 2662, 3003, 3002, 2325,
	2993, 2992, 1754, 2990, 2991, 2988, 2989, 3335, 208, 208,
	2281, 2781, 2277, 2700, 208, 2295, 208, 2270, 2272, 2273,
	2988, 2987, 208, 2333, 2641, 1609, 2336, 2303, 2337, 2302,
	2687, 1609, 2309, 2034, 2454, 2752, 2730, 2035, 1712, 2733,
	2705, 1409, 2726, 2727, 208, 1409, 2617, 2616, 2331, 1409,
	2281, 208, 2353, 2335, 2332, 1051, 2478, 1609, 113, 2663,
	2017, 1609, 3727, 1609, 1425, 2662, 2354, 3585, 1609, 2665,
	1572, 2098, 1409, 208, 2361, 2360, 2195, 1425, 1409, 2467,
	2357, 2179, 708, 2178, 2358, 2359, 2524, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1434, 1433, 1435, 1436, 1941, 2130,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1433, 1435,
	1436, 1911, 2613, 1406, 2364, 1407, 1408, 1609, 1406, 1835,
	1407, 1408, 119, 1827, 2159, 3583, 1609, 113, 2663, 3580,
	1609, 3216, 1817, 3566, 1609, 1409, 1813, 1809, 2454, 1409,
	2250, 1610, 2166, 1808, 2438, 2439, 1807, 1409, 1452, 2441,
	2145, 1712, 1711, 1409, 1653, 1652, 3190, 1609, 2442, 1620,
	1199, 1198, 3183, 1609, 2955, 2464, 1409, 2466, 2633, 2633,
	2640, 1409, 1425, 3675, 2454, 2189, 1406, 2925, 1407, 1408,
	1406, 2428, 1407, 1408, 1406, 2478, 1407, 1408, 3214, 2434,
	2340, 1405, 3648, 2617, 2472, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1434, 1433, 1435, 1436, 2641, 1406, 1409, 1407,
	1408, 1985, 1409, 1406, 3265, 1407, 1408, 3175, 2990, 3180,
	1609, 1409, 2898, 3178, 1609, 2641, 1409, 2465, 2234, 2478,
	1409, 3143, 1609, 2533, 1409, 2509, 2492, 3126, 1609, 1409,
	2641, 3214, 2508, 2470, 2444, 2520, 1409, 2339, 2339, 2322,
	2588, 1609, 2203, 2507, 1409, 2586, 1609, 2452, 1409, 1613,
	2168, 2144, 2017, 1409, 1963, 3266, 3267, 3268, 1947, 1877,
	1406, 1640, 1407, 1408, 1406, 1986, 1407, 1408, 1409, 2298,
	1034, 2463, 1406, 1033, 1407, 1408, 1409, 105, 1406, 3758,
	1407, 1408, 2565, 1609, 3693, 2475, 2548, 1609, 3550, 208,
	1616, 1406, 133, 1407, 1408, 2474, 1406, 208, 1407, 1408,
	2540, 1609, 3507, 2014, 3234, 2143, 3500, 708, 2012, 1609,
	3421, 2484, 3083, 2602, 3621, 3320, 3291, 3288, 708, 3021,
	3259, 3513, 3138, 3137, 1788, 1714, 1409, 2697, 2279, 3293,
	3079, 3551, 3185, 1406, 3071, 1407, 1408, 1406, 2692, 1407,
	1408, 3023, 208, 2600, 3019, 3004, 1406, 208, 1407, 1408,
	2753, 1406, 3181, 1407, 1408, 1406, 2734, 1407, 1408, 1406,
	3153, 1407, 1408, 2637, 1406, 2710, 1407, 1408, 2518, 2367,
	105, 1406, 2276, 1407, 1408, 1789, 1790, 1791, 2271, 1406,
	51, 1407, 1408, 1406, 2265, 1407, 1408, 1409, 1406, 2655,
	1407, 1408, 2657, 1409, 2603, 2264, 2605, 1842, 1749, 1409,
	1744, 1708, 134, 1406, 2696, 1407, 1408, 1409, 1128, 2294,
	3149, 1406, 2182, 1407, 1408, 708, 203, 3813, 3269, 2618,
	3226, 3227, 1943, 2656, 208, 3811, 2614, 3786, 3656, 3571,
	208, 3229, 3015, 3014, 3013, 2925, 2713, 2429, 2627, 3232,
	142, 2947, 3231, 2944, 708, 2945, 2948, 1583, 2590, 2943,
	2946, 708, 2697, 185, 3652, 708, 708, 3552, 1617, 2725,
	708, 1406, 2194, 1407, 1408, 3270, 3271, 3272, 2615, 2186,
	3220, 3135, 1577, 2903, 2902, 2610, 1452, 3134, 3605, 2630,
	2683, 2685, 1409, 3131, 1944, 1410, 2676, 3400, 2660, 1409,
	3402, 2584, 208, 208, 208, 208, 208, 3210, 2949, 2749,
	2650, 2651, 3207, 2664, 2912, 2286, 2667, 2915, 2917, 182,
	3206, 1784, 183, 964, 1465, 2677, 2918, 2674, 3391, 1876,
	3390, 965, 1406, 2680, 1407, 1408, 936, 2040, 1406, 2986,
	1407, 1408, 2701, 2688, 1406, 202, 1407, 1408, 1372, 1409,
	1090, 2041, 1406, 1089, 1407, 1408, 111, 3104, 2696, 208,
	208, 2714, 2715, 2716, 2796, 2698, 2740, 112, 1785, 1786,
	1787, 142, 3212, 113, 3825, 2706, 2583, 2711, 3389, 2708,
	1409, 2747, 2471, 2579, 2432, 208, 2476, 2746, 111, 2479,
	3736, 2480, 3626, 1736, 3546, 113, 2487, 2205, 2206, 112,
	2489, 2490, 2491, 2985, 2654, 2191, 708, 2735, 2736, 120,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	119, 2421, 118, 2745, 972, 973, 2420, 1406, 2419, 1407,
	1408, 113, 2901, 2578, 1406, 2418, 1407, 1408, 2417, 2416,
	2900, 3192, 1409, 2415, 2405, 2806, 2513, 2514, 2515, 2516,
	2517, 2404, 2519, 708, 2403, 2402, 2521, 2401, 186, 2400,
	2526, 2527, 2458, 2528, 2577, 2392, 2531, 192, 2532, 2391,
	2390, 2389, 2535, 2388, 2823, 2387, 2539, 2821, 2386, 2779,
	2544, 2545, 2546, 2547, 1406, 2780, 1407, 1408, 118, 3593,
	3592, 708, 2782, 2558, 1409, 2561, 2562, 3574, 3408, 708,
	2788, 2784, 2836, 2564, 2566, 2805, 2794, 2804, 2785, 2795,
	2569, 2570, 2571, 2572, 2573, 1406, 3406, 1407, 1408, 1607,
	1603, 2580, 2581, 3405, 2582, 120, 2576, 2585, 2587, 2189,
	708, 2589, 3398, 2853, 1604, 2855, 119, 119, 118, 3289,
	2824, 2601, 3211, 2882, 208, 2877, 3209, 1625, 708, 3024,
	2323, 2866, 2867, 2868, 2869, 2822, 2879, 1731, 971, 1709,
	1710, 1606, 708, 1605, 3397, 1409, 1452, 3200, 2633, 708,
	708, 1452, 208, 208, 208, 208, 208, 1406, 2575, 1407,
	1408, 2133, 2699, 2133, 208, 1409, 1715, 2702, 2703, 3379,
	208, 2223, 208, 1409, 120, 208, 208, 208, 3815, 3814,
	2851, 3814, 2845, 2937, 3815, 119, 2882, 2613, 1409, 2861,
	2862, 2863, 2864, 2865, 1409, 177, 951, 2843, 2954, 2223,
	2223, 2223, 2223, 2223, 2510, 2906, 2881, 2180, 2878, 1406,
	2880, 1407, 1408, 2905, 1634, 1409, 2922, 1626, 3611, 2223,
	124, 125, 2223, 3245, 208, 2893, 2894, 2895, 2896, 2574,
	962, 133, 1960, 1409, 3, 10, 107, 708, 1, 2931,
	1452, 2928, 2907, 3062, 3273, 708, 2928, 2897, 2904, 2563,
	208, 2919, 2920, 2956, 3069, 1958, 2957, 2557, 9, 1959,
	3047, 3321, 8, 2366, 2756, 953, 2709, 3006, 2939, 2940,
	1409, 2942, 2556, 208, 2938, 2950, 1409, 2941, 2555, 952,
	1406, 1143, 1407, 1408, 1890, 1375, 1374, 2936, 1889, 114,
	2958, 115, 3249, 1409, 3746, 665, 2169, 1581, 208, 2554,
	1406, 208, 1407, 1408, 3787, 3742, 1409, 2964, 1406, 3743,
	1407, 1408, 1409, 1828, 2997, 2996, 2995, 2553, 1818, 1912,
	3338, 2104, 1409, 1406, 3547, 1407, 1408, 3005, 3055, 1406,
	3027, 1407, 1408, 2329, 3287, 3026, 2284, 1042, 167, 3054,
	2243, 2244, 3710, 128, 2286, 1409, 997, 127, 3046, 1045,
	1406, 1176, 1407, 1408, 2552, 2324, 3311, 2681, 3061, 2252,
	2551, 1409, 1659, 3025, 1657, 1658, 1656, 1661, 1406, 1660,
	1407, 1408, 3112, 2511, 3154, 1951, 178, 2550, 704, 1409,
	2653, 708, 698, 190, 205, 1648, 1627, 3167, 3091, 3092,
	2549, 3094, 1084, 3096, 3097, 655, 2543, 2994, 2362, 3100,
	3099, 661, 3102, 3103, 1457, 1406, 2542, 1407, 1408, 1942,
	208, 1406, 3117, 1407, 1408, 3114, 3115, 2899, 3116, 2668,
	3108, 3118, 3107, 3120, 198, 3122, 991, 983, 1406, 2541,
	1407, 1408, 2181, 2604, 990, 3169, 2831, 2832, 2833, 2834,
	2835, 1406, 3173, 1407, 1408, 2538, 1409, 1406, 3514, 1407,
	1408, 2933, 3204, 1409, 2911, 2840, 2913, 1406, 2620, 1407,
	1408, 2916, 2909, 2537, 3604, 3399, 208, 3688, 2678, 179,
	184, 181, 187, 188, 189, 191, 193, 194, 195, 196,
	1406, 1623, 1407, 1408, 3174, 197, 199, 200, 201, 1409,
	2483, 2029, 1447, 1409, 2220, 208, 1406, 3374, 1407, 1408,
	3193, 3194, 3196, 1978, 727, 726, 3198, 724, 3201, 3208,
	2606, 2634, 1412, 2223, 1406, 874, 1407, 1408, 2594, 3213,
	1635, 2645, 208, 2643, 208, 208, 208, 2642, 2430, 2228,
	2536, 3228, 3224, 3233, 708, 708, 3230, 2534, 3738, 3223,
	2222, 2218, 2612, 825, 824, 1607, 1603, 3236, 736, 3294,
	3295, 3235, 728, 720, 823, 3055, 3243, 3244, 3237, 3238,
	1604, 1973, 1974, 1975, 1976, 822, 3054, 3242, 3053, 3722,
	2764, 2998, 2999, 2530, 3080, 3315, 3316, 2529, 2766, 2679,
	3076, 1406, 2934, 1407, 1408, 1600, 1601, 1606, 1406, 1605,
	1407, 1408, 1389, 1599, 708, 708, 708, 708, 714, 1013,
	2952, 3260, 3109, 3262, 3632, 2457, 3132, 1598, 2059, 2060,
	2020, 2021, 3639, 1409, 3035, 2023, 3305, 976, 976, 2028,
	3016, 2731, 2316, 2033, 1406, 80, 1407, 1408, 1406, 55,
	1407, 1408, 3599, 3676, 821, 818, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 3376, 3377, 3378, 2873,
	2081, 2082, 2083, 2084, 2085, 2086, 2088, 3334, 2093, 2874,
	2095, 2096, 2097, 3659, 2099, 2100, 2101, 3332, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 3660, 2131, 817, 2138, 2139, 976, 2525, 976, 976,
	976, 976, 976, 3661, 2087, 1385, 208, 1382, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 3355, 2160, 2161, 2162,
	2163, 2164, 3762, 1953, 106, 1452, 3363, 38, 37, 3351,
	708, 36, 708, 35, 3394, 34, 28, 1409, 3372, 27,
	26, 25, 24, 21, 20, 3106, 31, 2014, 1406, 23,
	1407, 1408, 2012, 22, 19, 976, 18, 3423, 3038, 3415,
	3782, 3824, 136, 64, 61, 3123, 3124, 3125, 59, 3127,
	3129, 1409, 144, 143, 62, 58, 51, 2201, 2202, 1131,
	56, 3403, 3417, 3136, 3395, 1409, 49, 3411, 3140, 3141,
	3142, 3144, 3145, 3146, 3147, 3404, 3413, 3148, 3419, 3150,
	3151, 3152, 708, 2240, 3156, 3157, 3158, 3159, 3160, 3161,
	3162, 3163, 3164, 3165, 48, 208, 47, 3515, 708, 2931,
	2928, 2523, 3172, 2931, 46, 3176, 3427, 3177, 3179, 45,
	3182, 3184, 44, 3186, 3187, 3188, 3189, 3424, 3425, 43,
	42, 3195, 33, 32, 17, 16, 15, 14, 708, 13,
	2968, 12, 3508, 3254, 3255, 2488, 11, 3512, 3511, 7,
	6, 3527, 41, 40, 2282, 3510, 30, 39, 29, 2477,
	4, 2718, 1406, 2318, 1407, 1408, 3217, 3218, 3568, 3532,
	3222, 3569, 3531, 0, 2014, 3536, 0, 0, 0, 2012,
	0, 0, 3549, 0, 3572, 2969, 0, 0, 0, 708,
	3519, 0, 0, 708, 708, 0, 1406, 0, 1407, 1408,
	0, 0, 3298, 0, 0, 0, 3302, 3303, 3304, 2971,
	1406, 0, 1407, 1408, 2646, 2649, 2650, 2651, 2647, 0,
	2648, 2652, 708, 0, 3226, 3227, 0, 2966, 2646, 2649,
	2650, 2651, 2647, 0, 2648, 2652, 0, 3615, 3575, 3573,
	0, 0, 3578, 0, 2982, 2983, 0, 3594, 3595, 3597,
	3596, 2967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3603, 3612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 3309, 0, 2973, 0, 0, 0, 0, 3618,
	0, 0, 0, 3614, 0, 0, 0, 0, 0, 0,
	0, 708, 142, 0, 0, 0, 0, 2931, 0, 0,
	0, 0, 0, 0, 0, 185, 3620, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3346, 0, 0, 3350, 0, 0, 0,
	0, 708, 208, 2981, 0, 3622, 3624, 0, 2675, 0,
	0, 0, 0, 0, 0, 2984, 3650, 3638, 0, 3635,
	0, 182, 0, 3361, 183, 0, 0, 3647, 0, 0,
	3644, 0, 0, 0, 0, 0, 0, 0, 3365, 0,
	0, 0, 0, 0, 51, 0, 0, 202, 0, 0,
	3373, 0, 708, 0, 0, 0, 0, 0, 3380, 0,
	0, 3631, 1452, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3665, 0,
	0, 3666, 3674, 3654, 885, 0, 0, 97, 0, 0,
	0, 3664, 0, 0, 3681, 0, 0, 0, 0, 708,
	708, 0, 0, 0, 0, 0, 0, 3692, 0, 0,
	0, 3694, 0, 0, 3522, 3523, 3524, 0, 0, 0,
	3723, 708, 3704, 3724, 51, 3697, 3709, 2486, 3702, 3699,
	3698, 3696, 3701, 3700, 0, 208, 708, 0, 2493, 2494,
	2495, 2496, 3686, 3549, 3711, 0, 0, 0, 0, 0,
	0, 0, 3734, 0, 0, 2970, 0, 2928, 0, 0,
	186, 0, 3745, 3737, 3750, 3756, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 3723, 0,
	949, 3724, 97, 1465, 3767, 3765, 708, 0, 0, 3528,
	0, 0, 0, 0, 0, 0, 0, 0, 3535, 0,
	0, 949, 0, 0, 3776, 0, 0, 0, 0, 708,
	3781, 0, 0, 0, 0, 0, 0, 0, 0, 1010,
	0, 1460, 0, 0, 3794, 0, 0, 0, 708, 0,
	708, 0, 3797, 0, 0, 2014, 3555, 3556, 3805, 3558,
	2012, 3559, 3560, 0, 0, 3809, 3563, 3564, 3565, 3812,
	3567, 3570, 3810, 3808, 3806, 0, 0, 0, 3723, 0,
	0, 3724, 0, 3826, 3820, 0, 3579, 3581, 3582, 3584,
	3586, 3587, 3589, 0, 3834, 3832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 3843, 3844, 2012, 0, 3569, 3842, 1625,
	3841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3619, 0, 105, 0, 0, 887, 0, 177, 0, 875,
	888, 889, 890, 891, 876, 0, 0, 877, 878, 0,
	879, 0, 0, 0, 0, 0, 0, 0, 0, 2974,
	0, 0, 0, 2978, 884, 892, 893, 0, 0, 0,
	2977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2979, 0, 0, 0, 0, 2975,
	0, 3056, 3057, 1584, 2976, 0, 0, 0, 0, 0,
	0, 0, 0, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 0, 0, 0, 0, 0,
	0, 0, 3655, 0, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3671, 0, 0, 0, 0, 0, 3672, 3673,
	827, 0, 0, 939, 0, 0, 0, 3058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	3684, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3716, 3717, 0,
	0, 0, 0, 0, 0, 206, 198, 0, 641, 0,
	0, 3726, 3728, 3730, 0, 2801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 976, 0, 0, 2825, 2826, 3759,
	0, 2828, 0, 0, 2830, 958, 0, 0, 3059, 3060,
	0, 179, 184, 181, 187, 188, 189, 191, 193, 194,
	195, 196, 977, 977, 2837, 2838, 2839, 197, 199, 200,
	201, 0, 0, 641, 0, 0, 2844, 0, 0, 2846,
	2847, 2848, 3778, 0, 0, 2849, 2850, 0, 0, 2107,
	2852, 0, 0, 2854, 0, 0, 2856, 2857, 2858, 2859,
	0, 0, 0, 0, 2860, 2107, 2107, 2107, 2107, 2107,
	0, 0, 0, 0, 0, 0, 0, 3800, 3802, 3804,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	2883, 2884, 2885, 2886, 2887, 2888, 0, 0, 0, 2889,
	2890, 0, 2891, 0, 2892, 0, 0, 0, 0, 3823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3835, 3836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 0, 1209, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 3022, 0,
	0, 0, 949, 1449, 1454, 1455, 0, 1458, 0, 1459,
	1461, 1462, 1463, 0, 1466, 1467, 1469, 1469, 0, 1469,
	1473, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 0, 0, 0,
	0, 1540, 0, 1542, 1543, 1544, 1545, 1546, 0, 0,
	0, 0, 0, 0, 0, 3130, 1473, 1473, 1473, 1473,
	1473, 0, 0, 0, 0, 0, 0, 0, 0, 3139,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 887, 1664, 2137, 0, 0, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	0, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	949, 1132, 0, 1140, 949, 0, 1142, 1144, 0, 949,
	1677, 0, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3290, 0, 0, 641, 0,
	641, 869, 0, 641, 641, 0, 1690, 1693, 1694, 1695,
	1696, 1697, 1698, 0, 1699, 1700, 1702, 1703, 1701, 1704,
	1705, 1678, 1679, 1680, 1681, 1662, 1663, 1691, 3314, 1665,
	0, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	0, 0, 1675, 1682, 1683, 1684, 1685, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 687, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 0, 3352, 0, 3353, 0, 0, 3354, 0, 0,
	3357, 3358, 0, 0, 0, 0, 0, 0, 0, 3362,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 3364,
	0, 0, 0, 707, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3381, 0, 0, 3382, 0, 3383, 3384, 0, 3385,
	0, 3386, 0, 0, 0, 0, 3387, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3412, 0, 142, 0, 164, 0, 0, 0, 0,
	0, 1692, 3420, 0, 0, 3422, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3501, 0, 175, 0, 0,
	0, 1453, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 1676, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 0, 0, 1739, 1740, 174, 173, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 1209, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 1798, 641,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 1741, 171,
	0, 1738, 0, 169, 170, 1845, 0, 0, 1664, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 1453, 1001, 0, 0, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 0, 0, 0, 0, 0, 1453,
	0, 0, 1453, 0, 1453, 641, 0, 0, 0, 1919,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 641, 641, 641, 641, 641,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3653, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 1933, 0, 0, 3667, 0, 177, 3668,
	0, 3669, 0, 0, 0, 0, 0, 0, 0, 1690,
	1693, 1694, 1695, 1696, 1697, 1698, 0, 1699, 1700, 1702,
	1703, 1701, 1704, 1705, 1678, 1679, 1680, 1681, 1662, 1663,
	1691, 0, 1665, 0, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 2221, 0, 1675, 1682, 1683, 1684, 1685,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 3757,
	0, 0, 0, 0, 0, 0, 0, 1010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	1368, 707, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3773, 0, 3774, 165, 3775, 0, 166,
	0, 707, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	1451, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3821, 0, 3822,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 977, 977, 0, 0, 0, 1453, 0, 0,
	0, 0, 179, 184, 181, 187, 188, 189, 191, 193,
	194, 195, 196, 0, 0, 0, 0, 0, 197, 199,
	200, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2207, 977, 1888, 977, 977, 977, 977, 977, 2211, 0,
	2214, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2459, 707, 707, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 1211, 1211, 0, 958, 0, 0, 0, 707, 0,
	0, 2469, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 1380, 0, 707, 1888, 641, 0, 641, 0, 641,
	2230, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 1451, 1758, 0, 0, 1761, 1762, 707,
	707, 0, 707, 0, 707, 707, 0, 707, 707, 707,
	707, 707, 707, 0, 0, 0, 0, 0, 0, 0,
	1451, 1793, 1794, 1451, 707, 1451, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2567, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 0, 0, 707,
	0, 0, 0, 0, 0, 2376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 2599,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2426, 2427, 0, 0, 0, 949, 2431, 0, 0,
	0, 0, 707, 0, 0, 2435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2638, 2639, 0,
	0, 0, 0, 0, 0, 0, 2221, 2437, 0, 949,
	2658, 0, 0, 0, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 2443, 0, 0, 0,
	0, 0, 0, 1588, 1589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 641,
	0, 0, 0, 0, 641, 0, 2433, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 641, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 2738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 164, 0, 0,
	1001, 0, 1747, 0, 0, 0, 0, 0, 185, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	1764, 0, 1764, 0, 1764, 1764, 0, 1773, 1764, 1764,
	1764, 1764, 1764, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 1001, 163, 0, 0, 0, 0,
	707, 707, 0, 0, 0, 0, 0, 0, 1453, 0,
	1888, 0, 0, 707, 182, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 0, 0, 0, 151, 152, 174, 173,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 707, 0, 0, 0, 0, 0, 1451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 707, 0, 0, 0, 0, 0,
	2659, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	149, 171, 156, 148, 0, 169, 170, 0, 0, 0,
	0, 0, 0, 186, 0, 2870, 0, 0, 0, 641,
	0, 0, 192, 157, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 160, 158, 153,
	154, 155, 159, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 2712, 2221, 0,
	0, 0, 641, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 2932, 0, 97, 0, 0, 2221, 2221, 2221, 2221,
	2221, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 2221,
	0, 0, 707, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2769, 2770, 2771, 2772, 2773,
	1211, 1211, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 1954, 641, 0, 0, 0, 0, 0,
	2717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3044, 0, 0, 0,
	0, 0, 1966, 2789, 0, 0, 3052, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 1453, 0, 0, 0,
	0, 2008, 0, 0, 2306, 2307, 2308, 0, 2797, 0,
	0, 0, 641, 641, 641, 641, 641, 0, 0, 0,
	0, 0, 2024, 0, 707, 0, 0, 0, 0, 0,
	0, 707, 707, 0, 0, 707, 0, 707, 0, 0,
	0, 0, 2338, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 2057, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	641, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 707, 0, 0, 0, 707, 707, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 165, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 1631, 0, 0, 1211, 0, 0, 0, 0,
	2221, 0, 0, 0, 0, 0, 0, 0, 977, 0,
	0, 0, 0, 3241, 0, 1001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 179, 184, 181, 187, 188, 189,
	191, 193, 194, 195, 196, 0, 0, 0, 0, 0,
	197, 199, 200, 201, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3012, 0, 0,
	0, 0, 0, 0, 1009, 0, 1453, 0, 0, 0,
	0, 1453, 641, 641, 641, 641, 641, 0, 0, 0,
	0, 0, 0, 3050, 2951, 0, 0, 0, 0, 1451,
	1815, 707, 641, 0, 1001, 641, 2959, 1888, 0, 0,
	0, 1009, 1747, 0, 0, 1747, 3075, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3098, 0, 0, 3101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 1001, 0, 0,
	0, 0, 2008, 0, 0, 0, 2008, 2008, 0, 0,
	1453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 641, 0, 0, 0, 0, 3388, 0, 3392, 3393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3197, 0, 0, 0, 0, 0, 0,
	0, 2932, 0, 97, 0, 2932, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3258, 0,
	641, 0, 3520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3283, 0, 3284, 3285, 3286,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 707, 707, 0, 0,
	0, 707, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1451, 2748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 641, 641, 641, 0, 0, 2932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 0, 0, 0, 0, 0, 2607, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 2622,
	0, 0, 0, 3633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 1453, 2704, 0, 0, 0,
	0, 0, 3685, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 2193, 0, 0, 0, 0,
	0, 0, 2732, 0, 0, 0, 1747, 1747, 0, 707,
	0, 2737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 1451, 0, 0,
	707, 707, 1451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	887, 0, 0, 0, 0, 888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3777, 0, 3001, 0, 0, 0, 0, 3445, 3447,
	3446, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 1451, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	0, 0, 3105, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2871, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 1211, 0, 0, 0, 0, 0, 0,
	2935, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3451, 0, 0,
	0, 0, 1453, 0, 0, 3248, 0, 0, 0, 0,
	0, 0, 3459, 3460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 0, 2193, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 841, 0, 754, 845, 756, 842, 843,
	0, 752, 755, 844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 707, 707, 707, 773,
	774, 3444, 3448, 3449, 3450, 3461, 3462, 3463, 3471, 3473,
	806, 3472, 3474, 3475, 3476, 3479, 3480, 3481, 3482, 3477,
	3478, 3483, 3428, 3432, 3429, 3430, 3431, 3443, 3433, 3434,
	3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3484, 3485,
	3486, 3487, 3488, 3489, 3454, 3458, 3457, 3455, 3456, 3452,
	3453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3168, 846, 0, 847, 0, 0, 851, 0,
	0, 0, 853, 852, 0, 854, 820, 819, 0, 0,
	848, 849, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 707, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3490, 3491,
	3492, 3493, 3494, 3495, 3496, 3497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2193, 2193, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	105, 0, 0, 887, 0, 0, 0, 875, 888, 889,
	890, 891, 876, 0, 0, 877, 878, 0, 879, 0,
	0, 0, 0, 0, 0, 3339, 3340, 3341, 3342, 0,
	0, 0, 884, 892, 893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 707, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3056,
	3057, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3416, 707, 3418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1451, 0, 707, 3059, 3060, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3590, 0, 707, 0, 3590, 3590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2193, 0, 0, 841, 0, 0, 845,
	0, 842, 843, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 707, 2193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 3168,
	0, 3740, 1345, 1330, 521, 0, 1273, 1348, 1242, 1261,
	1358, 1264, 1267, 1309, 1221, 1287, 419, 1258, 1214, 1246,
	1216, 1253, 1217, 1244, 1275, 277, 1241, 1332, 1291, 1347,
	370, 274, 1223, 1247, 433, 1263, 215, 1311, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 1354, 374, 1297, 0, 500, 404, 0, 0,
	0, 1277, 1336, 1285, 1323, 1272, 1310, 1231, 1296, 1349,
	1259, 1306, 1350, 329, 257, 331, 214, 416, 501, 293,
	0, 0, 0, 0, 3712, 697, 0, 0, 0, 0,
	3713, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 355, 364, 363, 344, 345, 347, 349, 354,
	361, 367, 1255, 1303, 1344, 1256, 1305, 272, 327, 279,
	271, 526, 1355, 1335, 1220, 1284, 1343, 0, 0, 238,
	1346, 1279, 0, 1308, 0, 1361, 1215, 1299, 0, 1218,
	1222, 1357, 1339, 1250, 282, 0, 0, 0, 0, 0,
	0, 0, 1276, 1286, 1320, 1324, 1270, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 1295, 0, 0, 0,
	1227, 1219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 1230,
	0, 1249, 1321, 0, 1213, 304, 1224, 405, 264, 1367,
	0, 457, 1328, 1338, 1271, 569, 1342, 1269, 1268, 1315,
	1228, 1334, 1262, 369, 1226, 336, 210, 234, 0, 1260,
	415, 465, 477, 1333, 1245, 1254, 262, 1252, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 1294, 1313,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 535, 536, 263,
	600, 237, 563, 229, 1225, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 359, 360, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 1240,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 1329, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 1318, 1360, 428, 476,
	249, 548, 499, 1363, 1364, 1365, 1366, 1235, 1239, 1233,
	1300, 1234, 1289, 1290, 1236, 1351, 1352, 1353, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 1322, 1229, 0,
	1237, 1238, 1331, 1340, 1341, 634, 388, 489, 545, 341,
	353, 356, 346, 365, 0, 366, 342, 343, 348, 350,
	351, 352, 357, 358, 362, 368, 258, 220, 394, 402,
	524, 318, 225, 226, 227, 517, 518, 519, 520, 560,
	561, 565, 466, 467, 468, 469, 299, 554, 315, 472,
	471, 337, 338, 383, 454, 1293, 209, 230, 372, 1356,
	458, 295, 598, 559, 553, 216, 232, 1232, 269, 1243,
	1251, 0, 1257, 1265, 1266, 1278, 1280, 1281, 1282, 1283,
	1301, 1302, 1304, 1312, 1314, 1317, 1319, 1326, 1337, 1359,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 307, 308, 449, 450, 320, 321, 595, 596,
	306, 542, 573, 540, 594, 567, 443, 382, 1292, 1362,
	557, 1298, 385, 288, 311, 326, 1307, 558, 505, 236,
	470, 297, 260, 1325, 1327, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 1288,
	1316, 380, 522, 523, 322, 400, 0, 0, 0, 1345,
	1330, 521, 0, 1273, 1348, 1242, 1261, 1358, 1264, 1267,
	1309, 1221, 1287, 419, 1258, 1214, 1246, 1216, 1253, 1217,
	1244, 1275, 277, 1241, 1332, 1291, 1347, 370, 274, 1223,
	1247, 433, 1263, 215, 1311, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 1354,
	374, 1297, 0, 500, 404, 0, 0, 0, 1277, 1336,
	1285, 1323, 1272, 1310, 1231, 1296, 1349, 1259, 1306, 1350,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 254, 0, 0, 0, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 1255,
	1303, 1344, 1256, 1305, 272, 327, 279, 271, 526, 1355,
	1335, 1220, 1284, 1343, 0, 0, 238, 1346, 1279, 0,
	1308, 0, 1361, 1215, 1299, 0, 1218, 1222, 1357, 1339,
	1250, 282, 0, 0, 0, 0, 0, 0, 0, 1276,
	1286, 1320, 1324, 1270, 0, 0, 0, 0, 0, 2960,
	0, 1248, 0, 1295, 0, 0, 0, 1227, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 1230, 0, 1249, 1321,
	0, 1213, 304, 1224, 405, 264, 1367, 0, 457, 1328,
	1338, 1271, 569, 1342, 1269, 1268, 1315, 1228, 1334, 1262,
	369, 1226, 336, 210, 234, 0, 1260, 415, 465, 477,
	1333, 1245, 1254, 262, 1252, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 1294, 1313, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 1225, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 1240, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 1329,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 1318, 1360, 428, 476, 249, 548, 499,
	1363, 1364, 1365, 1366, 1235, 1239, 1233, 1300, 1234, 1289,
	1290, 1236, 1351, 1352, 1353, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 1322, 1229, 0, 1237, 1238, 1331,
	1340, 1341, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 1293, 209, 230, 372, 1356, 458, 295, 598,
	559, 553, 216, 232, 1232, 269, 1243, 1251, 0, 1257,
	1265, 1266, 1278, 1280, 1281, 1282, 1283, 1301, 1302, 1304,
	1312, 1314, 1317, 1319, 1326, 1337, 1359, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 1292, 1362, 557, 1298, 385,
	288, 311, 326, 1307, 558, 505, 236, 470, 297, 260,
	1325, 1327, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 1288, 1316, 380, 522,
	523, 322, 400, 0, 0, 0, 1345, 1330, 521, 0,
	1273, 1348, 1242, 1261, 1358, 1264, 1267, 1309, 1221, 1287,
	419, 1258, 1214, 1246, 1216, 1253, 1217, 1244, 1275, 277,
	1241, 1332, 1291, 1347, 370, 274, 1223, 1247, 433, 1263,
	215, 1311, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 1354, 374, 1297, 0,
	500, 404, 0, 0, 0, 1277, 1336, 1285, 1323, 1272,
	1310, 1231, 1296, 1349, 1259, 1306, 1350, 329, 257, 331,
	214, 416, 501, 293, 0, 0, 0, 0, 0, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 355, 364, 363, 344,
	345, 347, 349, 354, 361, 367, 1255, 1303, 1344, 1256,
	1305, 272, 327, 279, 271, 526, 1355, 1335, 1220, 1284,
	1343, 0, 0, 238, 1346, 1279, 0, 1308, 0, 1361,
	1215, 1299, 0, 1218, 1222, 1357, 1339, 1250, 282, 0,
	0, 0, 0, 0, 0, 0, 1276, 1286, 1320, 1324,
	1270, 0, 0, 0, 0, 0, 2921, 0, 1248, 0,
	1295, 0, 0, 0, 1227, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 1230, 0, 1249, 1321, 0, 1213, 304,
	1224, 405, 264, 1367, 0, 457, 1328, 1338, 1271, 569,
	1342, 1269, 1268, 1315, 1228, 1334, 1262, 369, 1226, 336,
	210, 234, 0, 1260, 415, 465, 477, 1333, 1245, 1254,
	262, 1252, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 1294, 1313, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 535, 536, 263, 600, 237, 563, 229, 1225, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	359, 360, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 1240, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 1329, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	1318, 1360, 428, 476, 249, 548, 499, 1363, 1364, 1365,
	1366, 1235, 1239, 1233, 1300, 1234, 1289, 1290, 1236, 1351,
	1352, 1353, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 1322, 1229, 0, 1237, 1238, 1331, 1340, 1341, 634,
	388, 489, 545, 341, 353, 356, 346, 365, 0, 366,
	342, 343, 348, 350, 351, 352, 357, 358, 362, 368,
	258, 220, 394, 402, 524, 318, 225, 226, 227, 517,
	518, 519, 520, 560, 561, 565, 466, 467, 468, 469,
	299, 554, 315, 472, 471, 337, 338, 383, 454, 1293,
	209, 230, 372, 1356, 458, 295, 598, 559, 553, 216,
	232, 1232, 269, 1243, 1251, 0, 1257, 1265, 1266, 1278,
	1280, 1281, 1282, 1283, 1301, 1302, 1304, 1312, 1314, 1317,
	1319, 1326, 1337, 1359, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 307, 308, 449, 450,
	320, 321, 595, 596, 306, 542, 573, 540, 594, 567,
	443, 382, 1292, 1362, 557, 1298, 385, 288, 311, 326,
	1307, 558, 505, 236, 470, 297, 260, 1325, 1327, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 1288, 1316, 380, 522, 523, 322, 400,
	0, 0, 0, 1345, 1330, 521, 0, 1273, 1348, 1242,
	1261, 1358, 1264, 1267, 1309, 1221, 1287, 419, 1258, 1214,
	1246, 1216, 1253, 1217, 1244, 1275, 277, 1241, 1332, 1291,
	1347, 370, 274, 1223, 1247, 433, 1263, 215, 1311, 490,
	261, 381, 378, 529, 289, 280, 276, 259, 323, 389,
	431, 511, 425, 1354, 374, 1297, 0, 500, 404, 0,
	0, 0, 1277, 1336, 1285, 1323, 1272, 1310, 1231, 1296,
	1349, 1259, 1306, 1350, 329, 257, 331, 214, 416, 501,
	293, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 254,
	0, 0, 0, 355, 364, 363, 344, 345, 347, 349,
	354, 361, 367, 1255, 1303, 1344, 1256, 1305, 272, 327,
	279, 271, 526, 1355, 1335, 1220, 1284, 1343, 0, 0,
	238, 1346, 1279, 0, 1308, 0, 1361, 1215, 1299, 0,
	1218, 1222, 1357, 1339, 1250, 282, 0, 0, 0, 0,
	0, 0, 0, 1276, 1286, 1320, 1324, 1270, 0, 0,
	0, 0, 0, 2209, 0, 1248, 0, 1295, 0, 0,
	0, 1227, 1219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	1230, 0, 1249, 1321, 0, 1213, 304, 1224, 405, 264,
	1367, 0, 457, 1328, 1338, 1271, 569, 1342, 1269, 1268,
	1315, 1228, 1334, 1262, 369, 1226, 336, 210, 234, 0,
	1260, 415, 465, 477, 1333, 1245, 1254, 262, 1252, 475,
	429, 546, 242, 291, 462, 435, 473, 445, 294, 1294,
	1313, 474, 376, 531, 455, 543, 570, 571, 270, 409,
	555, 515, 564, 597, 235, 267, 423, 508, 549, 497,
	401, 527, 528, 335, 496, 302, 213, 373, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 0, 635, 636, 576, 233, 483, 375,
	251, 240, 533, 552, 296, 460, 439, 440, 578, 592,
	579, 581, 582, 222, 510, 541, 248, 487, 0, 0,
	599, 256, 507, 224, 538, 506, 397, 332, 333, 223,
	0, 461, 275, 300, 0, 0, 265, 418, 535, 536,
	263, 600, 237, 563, 229, 1225, 562, 411, 530, 539,
	398, 387, 228, 537, 396, 386, 340, 359, 360, 287,
	313, 452, 379, 453, 312, 314, 407, 406, 408, 217,
	550, 0, 218, 0, 502, 551, 601, 243, 244, 246,
	1240, 286, 290, 298, 301, 309, 310, 319, 371, 422,
	451, 447, 456, 1329, 525, 544, 556, 568, 574, 575,
	577, 583, 584, 585, 587, 593, 591, 588, 589, 590,
	586, 580, 410, 317, 498, 339, 377, 1318, 1360, 428,
	476, 249, 548, 499, 1363, 1364, 1365, 1366, 1235, 1239,
	1233, 1300, 1234, 1289, 1290, 1236, 1351, 1352, 1353, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 1322, 1229,
	0, 1237, 1238, 1331, 1340, 1341, 634, 388, 489, 545,
	341, 353, 356, 346, 365, 0, 366, 342, 343, 348,
	350, 351, 352, 357, 358, 362, 368, 258, 220, 394,
	402, 524, 318, 225, 226, 227, 517, 518, 519, 520,
	560, 561, 565, 466, 467, 468, 469, 299, 554, 315,
	472, 471, 337, 338, 383, 454, 1293, 209, 230, 372,
	1356, 458, 295, 598, 559, 553, 216, 232, 1232, 269,
	1243, 1251, 0, 1257, 1265, 1266, 1278, 1280, 1281, 1282,
	1283, 1301, 1302, 1304, 1312, 1314, 1317, 1319, 1326, 1337,
	1359, 211, 212, 219, 231, 241, 245, 252, 268, 283,
	285, 292, 305, 316, 324, 325, 328, 334, 384, 390,
	391, 392, 393, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 441, 442, 444, 446, 448,
	459, 464, 478, 479, 480, 481, 482, 485, 486, 491,
	492, 493, 494, 495, 503, 504, 509, 532, 534, 547,
	566, 572, 484, 307, 308, 449, 450, 320, 321, 595,
	596, 306, 542, 573, 540, 594, 567, 443, 382, 1292,
	1362, 557, 1298, 385, 288, 311, 326, 1307, 558, 505,
	236, 470, 297, 260, 1325, 1327, 221, 255, 239, 266,
	281, 284, 330, 395, 403, 432, 437, 303, 278, 253,
	463, 250, 488, 512, 513, 514, 516, 399, 273, 436,
	1288, 1316, 380, 522, 523, 322, 400, 0, 0, 0,
	1345, 1330, 521, 0, 1273, 1348, 1242, 1261, 1358, 1264,
	1267, 1309, 1221, 1287, 419, 1258, 1214, 1246, 1216, 1253,
	1217, 1244, 1275, 277, 1241, 1332, 1291, 1347, 370, 274,
	1223, 1247, 433, 1263, 215, 1311, 490, 261, 381, 378,
	529, 289, 280, 276, 259, 323, 389, 431, 511, 425,
	1354, 374, 1297, 0, 500, 404, 0, 0, 0, 1277,
	1336, 1285, 1323, 1272, 1310, 1231, 1296, 1349, 1259, 1306,
	1350, 329, 257, 331, 214, 416, 501, 293, 0, 105,
	0, 0, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	355, 364, 363, 344, 345, 347, 349, 354, 361, 367,
	1255, 1303, 1344, 1256, 1305, 272, 327, 279, 271, 526,
	1355, 1335, 1220, 1284, 1343, 0, 0, 238, 1346, 1279,
	0, 1308, 0, 1361, 1215, 1299, 0, 1218, 1222, 1357,
	1339, 1250, 282, 0, 0, 0, 0, 0, 0, 0,
	1276, 1286, 1320, 1324, 1270, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 1295, 0, 0, 0, 1227, 1219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 1230, 0, 1249,
	1321, 0, 1213, 304, 1224, 405, 264, 1367, 0, 457,
	1328, 1338, 1271, 569, 1342, 1269, 1268, 1315, 1228, 1334,
	1262, 369, 1226, 336, 210, 234, 0, 1260, 415, 465,
	477, 1333, 1245, 1254, 262, 1252, 475, 429, 546, 242,
	291, 462, 435, 473, 445, 294, 1294, 1313, 474, 376,
	531, 455, 543, 570, 571, 270, 409, 555, 515, 564,
	597, 235, 267, 423, 508, 549, 497, 401, 527, 528,
	335, 496, 302, 213, 373, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	0, 635, 636, 576, 233, 483, 375, 251, 240, 533,
	552, 296, 460, 439, 440, 578, 592, 579, 581, 582,
	222, 510, 541, 248, 487, 0, 0, 599, 256, 507,
	224, 538, 506, 397, 332, 333, 223, 0, 461, 275,
	300, 0, 0, 265, 418, 535, 536, 263, 600, 237,
	563, 229, 1225, 562, 411, 530, 539, 398, 387, 228,
	537, 396, 386, 340, 359, 360, 287, 313, 452, 379,
	453, 312, 314, 407, 406, 408, 217, 550, 0, 218,
	0, 502, 551, 601, 243, 244, 246, 1240, 286, 290,
	298, 301, 309, 310, 319, 371, 422, 451, 447, 456,
	1329, 525, 544, 556, 568, 574, 575, 577, 583, 584,
	585, 587, 593, 591, 588, 589, 590, 586, 580, 410,
	317, 498, 339, 377, 1318, 1360, 428, 476, 249, 548,
	499, 1363, 1364, 1365, 1366, 1235, 1239, 1233, 1300, 1234,
	1289, 1290, 1236, 1351, 1352, 1353, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 1322, 1229, 0, 1237, 1238,
	1331, 1340, 1341, 634, 388, 489, 545, 341, 353, 356,
	346, 365, 0, 366, 342, 343, 348, 350, 351, 352,
	357, 358, 362, 368, 258, 220, 394, 402, 524, 318,
	225, 226, 227, 517, 518, 519, 520, 560, 561, 565,
	466, 467, 468, 469, 299, 554, 315, 472, 471, 337,
	338, 383, 454, 1293, 209, 230, 372, 1356, 458, 295,
	598, 559, 553, 216, 232, 1232, 269, 1243, 1251, 0,
	1257, 1265, 1266, 1278, 1280, 1281, 1282, 1283, 1301, 1302,
	1304, 1312, 1314, 1317, 1319, 1326, 1337, 1359, 211, 212,
	219, 231, 241, 245, 252, 268, 283, 285, 292, 305,
	316, 324, 325, 328, 334, 384, 390, 391, 392, 393,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 441, 442, 444, 446, 448, 459, 464, 478,
	479, 480, 481, 482, 485, 486, 491, 492, 493, 494,
	495, 503, 504, 509, 532, 534, 547, 566, 572, 484,
	307, 308, 449, 450, 320, 321, 595, 596, 306, 542,
	573, 540, 594, 567, 443, 382, 1292, 1362, 557, 1298,
	385, 288, 311, 326, 1307, 558, 505, 236, 470, 297,
	260, 1325, 1327, 221, 255, 239, 266, 281, 284, 330,
	395, 403, 432, 437, 303, 278, 253, 463, 250, 488,
	512, 513, 514, 516, 399, 273, 436, 1288, 1316, 380,
	522, 523, 322, 400, 0, 0, 0, 1345, 1330, 521,
	0, 1273, 1348, 1242, 1261, 1358, 1264, 1267, 1309, 1221,
	1287, 419, 1258, 1214, 1246, 1216, 1253, 1217, 1244, 1275,
	277, 1241, 1332, 1291, 1347, 370, 274, 1223, 1247, 433,
	1263, 215, 1311, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 1354, 374, 1297,
	0, 500, 404, 0, 0, 0, 1277, 1336, 1285, 1323,
	1272, 1310, 1231, 1296, 1349, 1259, 1306, 1350, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 1255, 1303, 1344,
	1256, 1305, 272, 327, 279, 271, 526, 1355, 1335, 1220,
	1284, 1343, 0, 0, 238, 1346, 1279, 0, 1308, 0,
	1361, 1215, 1299, 0, 1218, 1222, 1357, 1339, 1250, 282,
	0, 0, 0, 0, 0, 0, 0, 1276, 1286, 1320,
	1324, 1270, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 1295, 0, 0, 0, 1227, 1219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 1230, 0, 1249, 1321, 0, 1213,
	304, 1224, 405, 264, 1367, 0, 457, 1328, 1338, 1271,
	569, 1342, 1269, 1268, 1315, 1228, 1334, 1262, 369, 1226,
	336, 210, 234, 0, 1260, 415, 465, 477, 1333, 1245,
	1254, 262, 1252, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 1294, 1313, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 1225,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 1240, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 1329, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 1318, 1360, 428, 476, 249, 548, 499, 1363, 1364,
	1365, 1366, 1235, 1239, 1233, 1300, 1234, 1289, 1290, 1236,
	1351, 1352, 1353, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 1322, 1229, 0, 1237, 1238, 1331, 1340, 1341,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	1293, 209, 230, 372, 1356, 458, 295, 598, 559, 553,
	216, 232, 1232, 269, 1243, 1251, 0, 1257, 1265, 1266,
	1278, 1280, 1281, 1282, 1283, 1301, 1302, 1304, 1312, 1314,
	1317, 1319, 1326, 1337, 1359, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 1292, 1362, 557, 1298, 385, 288, 311,
	326, 1307, 558, 505, 236, 470, 297, 260, 1325, 1327,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 1288, 1316, 380, 522, 523, 322,
	400, 0, 0, 0, 1345, 1330, 521, 0, 1273, 1348,
	1242, 1261, 1358, 1264, 1267, 1309, 1221, 1287, 419, 1258,
	1214, 1246, 1216, 1253, 1217, 1244, 1275, 277, 1241, 1332,
	1291, 1347, 370, 274, 1223, 1247, 433, 1263, 215, 1311,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 1354, 374, 1297, 0, 500, 404,
	0, 0, 0, 1277, 1336, 1285, 1323, 1272, 1310, 1231,
	1296, 1349, 1259, 1306, 1350, 329, 257, 331, 214, 416,
	501, 293, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 355, 364, 363, 344, 345, 347,
	349, 354, 361, 367, 1255, 1303, 1344, 1256, 1305, 272,
	327, 279, 271, 526, 1355, 1335, 1220, 1284, 1343, 0,
	0, 238, 1346, 1279, 0, 1308, 0, 1361, 1215, 1299,
	0, 1218, 1222, 1357, 1339, 1250, 282, 0, 0, 0,
	0, 0, 0, 0, 1276, 1286, 1320, 1324, 1270, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 1295, 0,
	0, 0, 1227, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 1230, 0, 1249, 1321, 0, 1213, 304, 1224, 405,
	264, 1367, 0, 457, 1328, 1338, 1271, 569, 1342, 1269,
	1268, 1315, 1228, 1334, 1262, 369, 1226, 336, 210, 234,
	0, 1260, 415, 465, 477, 1333, 1245, 1254, 262, 1252,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	1294, 1313, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 535,
	536, 263, 600, 237, 563, 229, 1225, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 359, 360,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 1240, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 1329, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 1318, 1360,
	428, 476, 249, 548, 499, 1363, 1364, 1365, 1366, 1235,
	1239, 1233, 1300, 1234, 1289, 1290, 1236, 1351, 1352, 1353,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 1322,
	1229, 0, 1237, 1238, 1331, 1340, 1341, 634, 388, 489,
	545, 341, 353, 356, 346, 365, 0, 366, 342, 343,
	348, 350, 351, 352, 357, 358, 362, 368, 258, 220,
	394, 402, 524, 318, 225, 226, 227, 517, 518, 519,
	520, 560, 561, 565, 466, 467, 468, 469, 299, 554,
	315, 472, 471, 337, 338, 383, 454, 1293, 209, 230,
	372, 1356, 458, 295, 598, 559, 553, 216, 232, 1232,
	269, 1243, 1251, 0, 1257, 1265, 1266, 1278, 1280, 1281,
	1282, 1283, 1301, 1302, 1304, 1312, 1314, 1317, 1319, 1326,
	1337, 1359, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 307, 308, 449, 450, 320, 321,
	595, 596, 306, 542, 573, 540, 594, 567, 443, 382,
	1292, 1362, 557, 1298, 385, 288, 311, 326, 1307, 558,
	505, 236, 470, 297, 260, 1325, 1327, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 1288, 1316, 380, 522, 523, 322, 400, 0, 0,
	0, 1345, 1330, 521, 0, 1273, 1348, 1242, 1261, 1358,
	1264, 1267, 1309, 1221, 1287, 419, 1258, 1214, 1246, 1216,
	1253, 1217, 1244, 1275, 277, 1241, 1332, 1291, 1347, 370,
	274, 1223, 1247, 433, 1263, 215, 1311, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 1354, 374, 1297, 0, 500, 404, 0, 0, 0,
	1277, 1336, 1285, 1323, 1272, 1310, 1231, 1296, 1349, 1259,
	1306, 1350, 329, 257, 331, 214, 416, 501, 293, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 254, 0, 0,
	0, 355, 364, 363, 344, 345, 347, 349, 354, 361,
	367, 1255, 1303, 1344, 1256, 1305, 272, 327, 279, 271,
	526, 1355, 1335, 1220, 1284, 1343, 0, 0, 238, 1346,
	1279, 0, 1308, 0, 1361, 1215, 1299, 0, 1218, 1222,
	1357, 1339, 1250, 282, 0, 0, 0, 0, 0, 0,
	0, 1276, 1286, 1320, 1324, 1270, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 1295, 0, 0, 0, 1227,
	1219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 1230, 0,
	1249, 1321, 0, 1213, 304, 1224, 405, 264, 1367, 0,
	457, 1328, 1338, 1271, 569, 1342, 1269, 1268, 1315, 1228,
	1334, 1262, 369, 1226, 336, 210, 234, 0, 1260, 415,
	465, 477, 1333, 1245, 1254, 262, 1252, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 1294, 1313, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 535, 536, 263, 600,
	237, 563, 229, 1225, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 359, 360, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 1240, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 1329, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 1318, 1360, 428, 476, 249,
	548, 499, 1363, 1364, 1365, 1366, 1235, 1239, 1233, 1300,
	1234, 1289, 1290, 1236, 1351, 1352, 1353, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 1322, 1229, 0, 1237,
	1238, 1331, 1340, 1341, 634, 388, 489, 545, 341, 353,
	356, 346, 365, 0, 366, 342, 343, 348, 350, 351,
	352, 357, 358, 362, 368, 258, 220, 394, 402, 524,
	318, 225, 226, 227, 517, 518, 519, 520, 560, 561,
	565, 466, 467, 468, 469, 299, 554, 315, 472, 471,
	337, 338, 383, 454, 1293, 209, 230, 372, 1356, 458,
	295, 598, 559, 553, 216, 232, 1232, 269, 1243, 1251,
	0, 1257, 1265, 1266, 1278, 1280, 1281, 1282, 1283, 1301,
	1302, 1304, 1312, 1314, 1317, 1319, 1326, 1337, 1359, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 307, 308, 449, 450, 320, 321, 595, 596, 306,
	542, 573, 540, 594, 567, 443, 382, 1292, 1362, 557,
	1298, 385, 288, 311, 326, 1307, 558, 505, 236, 470,
	297, 260, 1325, 1327, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 1288, 1316,
	380, 522, 523, 322, 400, 0, 0, 0, 0, 0,
	521, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 737, 0, 0,
	0, 277, 742, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 749, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 105, 0, 0,
	887, 871, 837, 838, 875, 888, 889, 890, 891, 876,
	0, 247, 877, 878, 254, 879, 0, 836, 777, 779,
	778, 796, 797, 798, 799, 800, 801, 802, 775, 884,
	892, 893, 0, 272, 327, 279, 271, 526, 0, 0,
	2089, 2090, 2091, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 719, 734, 0, 748, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 732, 0, 0,
	0, 0, 831, 0, 733, 0, 0, 741, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 830, 0,
	0, 569, 0, 0, 828, 0, 0, 0, 0, 369,
	0, 336, 210, 234, 0, 0, 415, 465, 477, 0,
	0, 0, 881, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 882, 883, 263, 600, 783, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 791, 792, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 841, 829, 754, 845, 756, 842, 843,
	751, 752, 755, 844, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 832, 740, 739, 0, 747, 0, 773,
	774, 776, 780, 781, 782, 793, 794, 795, 803, 805,
	806, 804, 807, 808, 809, 812, 813, 814, 815, 810,
	811, 816, 757, 761, 758, 759, 760, 772, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 855, 856,
	857, 858, 859, 860, 786, 790, 789, 787, 788, 784,
	785, 738, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 846, 269, 847, 0, 0, 851, 0,
	0, 0, 853, 852, 0, 854, 820, 819, 0, 0,
	848, 849, 0, 850, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 861, 862,
	863, 864, 865, 866, 867, 868, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 886,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 737, 0,
	0, 0, 277, 742, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 749,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	745, 746, 0, 0, 0, 0, 0, 0, 2238, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 105, 0,
	0, 887, 871, 837, 838, 875, 888, 889, 890, 891,
	876, 0, 247, 877, 878, 254, 879, 0, 836, 777,
	779, 778, 796, 797, 798, 799, 800, 801, 802, 775,
	884, 892, 893, 2239, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 719, 734, 0, 748, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 732, 0,
	0, 0, 0, 831, 0, 733, 0, 0, 741, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 830,
	0, 0, 569, 0, 0, 828, 0, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 881, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 882, 883, 263, 600, 783, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 791, 792, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 841, 829, 754, 845, 756, 842,
	843, 751, 752, 755, 844, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 832, 740, 739, 0, 747, 0,
	773, 774, 776, 780, 781, 782, 793, 794, 795, 803,
	805, 806, 804, 807, 808, 809, 812, 813, 814, 815,
	810, 811, 816, 757, 761, 758, 759, 760, 772, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 855,
	856, 857, 858, 859, 860, 786, 790, 789, 787, 788,
	784, 785, 738, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 846, 269, 847, 0, 0, 851,
	0, 0, 0, 853, 852, 0, 854, 820, 819, 0,
	0, 848, 849, 0, 850, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 861,
	862, 863, 864, 865, 866, 867, 868, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	886, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 0, 400, 380, 522,
	523, 322, 96, 521, 0, 750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	737, 0, 0, 0, 277, 742, 0, 0, 0, 370,
	274, 0, 0, 433, 0, 215, 0, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 749, 374, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 257, 331, 214, 416, 501, 293, 0,
	105, 0, 0, 887, 871, 837, 838, 875, 888, 889,
	890, 891, 876, 0, 247, 877, 878, 254, 879, 0,
	836, 777, 779, 778, 796, 797, 798, 799, 800, 801,
	802, 775, 884, 892, 893, 0, 272, 327, 279, 271,
	526, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 719, 734, 0, 748,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	732, 0, 0, 0, 0, 831, 0, 733, 0, 0,
	741, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 405, 264, 0, 0,
	457, 830, 0, 0, 569, 0, 0, 828, 0, 0,
	0, 0, 369, 0, 336, 210, 234, 0, 0, 415,
	465, 477, 0, 0, 0, 881, 0, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 0, 0, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 882, 883, 263, 600,
	783, 563, 229, 0, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 791, 792, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 0, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 0, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 0, 0, 428, 476, 249,
	548, 499, 0, 0, 0, 0, 841, 829, 754, 845,
	756, 842, 843, 751, 752, 755, 844, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 832, 740, 739, 0,
	747, 0, 773, 774, 776, 780, 781, 782, 793, 794,
	795, 803, 805, 806, 804, 807, 808, 809, 812, 813,
	814, 815, 810, 811, 816, 757, 761, 758, 759, 760,
	772, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 855, 856, 857, 858, 859, 860, 786, 790, 789,
	787, 788, 784, 785, 738, 209, 230, 372, 104, 458,
	295, 598, 559, 553, 216, 232, 846, 269, 847, 0,
	0, 851, 0, 0, 0, 853, 852, 0, 854, 820,
	819, 0, 0, 848, 849, 0, 850, 0, 0, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 861, 862, 863, 864, 865, 866, 867, 868, 306,
	542, 573, 540, 594, 567, 443, 382, 0, 0, 557,
	0, 385, 288, 311, 326, 0, 558, 505, 236, 470,
	297, 260, 886, 0, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 400, 0,
	380, 522, 523, 322, 521, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 737, 0, 0, 0, 277, 742, 0, 0, 0,
	370, 274, 0, 0, 433, 0, 215, 0, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 749, 374, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 257, 331, 214, 416, 501, 293,
	0, 105, 0, 0, 887, 871, 837, 838, 875, 888,
	889, 890, 891, 876, 0, 247, 877, 878, 254, 879,
	0, 836, 777, 779, 778, 796, 797, 798, 799, 800,
	801, 802, 775, 884, 892, 893, 0, 272, 327, 279,
	271, 526, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 719, 734, 0,
	748, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 732, 0, 0, 0, 0, 831, 0, 733, 0,
	0, 741, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 405, 264, 0,
	0, 457, 830, 0, 0, 569, 0, 0, 828, 0,
	0, 0, 0, 369, 0, 336, 210, 234, 0, 0,
	415, 465, 477, 0, 0, 0, 881, 0, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 3695, 0,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 882, 883, 263,
	600, 783, 563, 229, 0, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 791, 792, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 0,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 0, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 0, 0, 428, 476,
	249, 548, 499, 0, 0, 0, 0, 841, 829, 754,
	845, 756, 842, 843, 751, 752, 755, 844, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 832, 740, 739,
	0, 747, 0, 773, 774, 776, 780, 781, 782, 793,
	794, 795, 803, 805, 806, 804, 807, 808, 809, 812,
	813, 814, 815, 810, 811, 816, 757, 761, 758, 759,
	760, 772, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 855, 856, 857, 858, 859, 860, 786, 790,
	789, 787, 788, 784, 785, 738, 209, 230, 372, 0,
	458, 295, 598, 559, 553, 216, 232, 846, 269, 847,
	0, 0, 851, 0, 0, 0, 853, 852, 0, 854,
	820, 819, 0, 0, 848, 849, 0, 850, 0, 0,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 861, 862, 863, 864, 865, 866, 867, 868,
	306, 542, 573, 540, 594, 567, 443, 382, 0, 0,
	557, 0, 385, 288, 311, 326, 0, 558, 505, 236,
	470, 297, 260, 886, 0, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 400,
	0, 380, 522, 523, 322, 521, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 737, 0, 0, 0, 277, 742, 0, 0,
	0, 370, 274, 0, 0, 433, 0, 215, 0, 490,
	261, 381, 378, 529, 289, 280, 276, 259, 323, 389,
	431, 511, 425, 749, 374, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 257, 331, 214, 416, 501,
	293, 0, 105, 0, 1609, 887, 871, 837, 838, 875,
	888, 889, 890, 891, 876, 0, 247, 877, 878, 254,
	879, 0, 836, 777, 779, 778, 796, 797, 798, 799,
	800, 801, 802, 775, 884, 892, 893, 0, 272, 327,
	279, 271, 526, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 719, 734,
	0, 748, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 732, 0, 0, 0, 0, 831, 0, 733,
	0, 0, 741, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 405, 264,
	0, 0, 457, 830, 0, 0, 569, 0, 0, 828,
	0, 0, 0, 0, 369, 0, 336, 210, 234, 0,
	0, 415, 465, 477, 0, 0, 0, 881, 0, 475,
	429, 546, 242, 291, 462, 435, 473, 445, 294, 0,
	0, 474, 376, 531, 455, 543, 570, 571, 270, 409,
	555, 515, 564, 597, 235, 267, 423, 508, 549, 497,
	401, 527, 528, 335, 496, 302, 213, 373, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 0, 635, 636, 576, 233, 483, 375,
	251, 240, 533, 552, 296, 460, 439, 440, 578, 592,
	579, 581, 582, 222, 510, 541, 248, 487, 0, 0,
	599, 256, 507, 224, 538, 506, 397, 332, 333, 223,
	0, 461, 275, 300, 0, 0, 265, 418, 882, 883,
	263, 600, 783, 563, 229, 0, 562, 411, 530, 539,
	398, 387, 228, 537, 396, 386, 340, 791, 792, 287,
	313, 452, 379, 453, 312, 314, 407, 406, 408, 217,
	550, 0, 218, 0, 502, 551, 601, 243, 244, 246,
	0, 286, 290, 298, 301, 309, 310, 319, 371, 422,
	451, 447, 456, 0, 525, 544, 556, 568, 574, 575,
	577, 583, 584, 585, 587, 593, 591, 588, 589, 590,
	586, 580, 410, 317, 498, 339, 377, 0, 0, 428,
	476, 249, 548, 499, 0, 0, 0, 0, 841, 829,
	754, 845, 756, 842, 843, 751, 752, 755, 844, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 832, 740,
	739, 0, 747, 0, 773, 774, 776, 780, 781, 782,
	793, 794, 795, 803, 805, 806, 804, 807, 808, 809,
	812, 813, 814, 815, 810, 811, 816, 757, 761, 758,
	759, 760, 772, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 855, 856, 857, 858, 859, 860, 786,
	790, 789, 787, 788, 784, 785, 738, 209, 230, 372,
	0, 458, 295, 598, 559, 553, 216, 232, 846, 269,
	847, 0, 0, 851, 0, 0, 0, 853, 852, 0,
	854, 820, 819, 0, 0, 848, 849, 0, 850, 0,
	0, 211, 212, 219, 231, 241, 245, 252, 268, 283,
	285, 292, 305, 316, 324, 325, 328, 334, 384, 390,
	391, 392, 393, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 441, 442, 444, 446, 448,
	459, 464, 478, 479, 480, 481, 482, 485, 486, 491,
	492, 493, 494, 495, 503, 504, 509, 532, 534, 547,
	566, 572, 484, 861, 862, 863, 864, 865, 866, 867,
	868, 306, 542, 573, 540, 594, 567, 443, 382, 0,
	0, 557, 0, 385, 288, 311, 326, 0, 558, 505,
	236, 470, 297, 260, 886, 0, 221, 255, 239, 266,
	281, 284, 330, 395, 403, 432, 437, 303, 278, 253,
	463, 250, 488, 512, 513, 514, 516, 399, 273, 436,
	400, 0, 380, 522, 523, 322, 521, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 737, 0, 0, 0, 277, 742, 0,
	0, 0, 370, 274, 0, 0, 433, 0, 215, 0,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 749, 374, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 257, 331, 214, 416,
	501, 293, 0, 105, 0, 0, 887, 871, 837, 838,
	875, 888, 889, 890, 891, 876, 0, 247, 877, 878,
	254, 879, 0, 836, 777, 779, 778, 796, 797, 798,
	799, 800, 801, 802, 775, 884, 892, 893, 0, 272,
	327, 279, 271, 526, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 719,
	734, 0, 748, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 732, 975, 0, 0, 0, 831, 0,
	733, 0, 0, 741, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 405,
	264, 0, 0, 457, 830, 0, 0, 569, 0, 0,
	828, 0, 0, 0, 0, 369, 0, 336, 210, 234,
	0, 0, 415, 465, 477, 0, 0, 0, 881, 0,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	0, 0, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 882,
	883, 263, 600, 783, 563, 229, 0, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 791, 792,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 0, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 0, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 0, 0,
	428, 476, 249, 548, 499, 0, 0, 0, 0, 841,
	829, 754, 845, 756, 842, 843, 751, 752, 755, 844,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 832,
	740, 739, 0, 747, 0, 773, 774, 776, 780, 781,
	782, 793, 794, 795, 803, 805, 806, 804, 807, 808,
	809, 812, 813, 814, 815, 810, 811, 816, 757, 761,
	758, 759, 760, 772, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 855, 856, 857, 858, 859, 860,
	786, 790, 789, 787, 788, 784, 785, 738, 209, 230,
	372, 0, 458, 295, 598, 559, 553, 216, 232, 846,
	269, 847, 0, 0, 851, 0, 0, 0, 853, 852,
	0, 854, 820, 819, 0, 0, 848, 849, 0, 850,
	0, 0, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 861, 862, 863, 864, 865, 866,
	867, 868, 306, 542, 573, 540, 594, 567, 443, 382,
	0, 0, 557, 0, 385, 288, 311, 326, 0, 558,
	505, 236, 470, 297, 260, 886, 0, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 400, 0, 380, 522, 523, 322, 521, 0, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 737, 0, 0, 0, 277, 742,
	0, 0, 0, 370, 274, 0, 0, 433, 0, 215,
	0, 490, 261, 381, 378, 529, 289, 280, 276, 259,
	323, 389, 431, 511, 425, 749, 374, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 745, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 257, 331, 214,
	416, 501, 293, 0, 105, 0, 0, 887, 871, 837,
	838, 875, 888, 889, 890, 891, 876, 0, 247, 877,
	878, 254, 879, 0, 836, 777, 779, 778, 796, 797,
	798, 799, 800, 801, 802, 775, 884, 892, 893, 0,
	272, 327, 279, 271, 526, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	719, 734, 0, 748, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 732, 0, 0, 0, 0, 831,
	0, 733, 0, 0, 741, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	405, 264, 0, 0, 457, 830, 0, 0, 569, 0,
	0, 828, 0, 0, 0, 0, 369, 0, 336, 210,
	234, 0, 0, 415, 465, 477, 0, 0, 0, 881,
	0, 475, 429, 546, 242, 291, 462, 435, 473, 445,
	294, 0, 0, 474, 376, 531, 455, 543, 570, 571,
	270, 409, 555, 515, 564, 597, 235, 267, 423, 508,
	549, 497, 401, 527, 528, 335, 496, 302, 213, 373,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 0, 635, 636, 576, 233,
	483, 375, 251, 240, 533, 552, 296, 460, 439, 440,
	578, 592, 579, 581, 582, 222, 510, 541, 248, 487,
	0, 0, 599, 256, 507, 224, 538, 506, 397, 332,
	333, 223, 0, 461, 275, 300, 0, 0, 265, 418,
	882, 883, 263, 600, 783, 563, 229, 0, 562, 411,
	530, 539, 398, 387, 228, 537, 396, 386, 340, 791,
	792, 287, 313, 452, 379, 453, 312, 314, 407, 406,
	408, 217, 550, 0, 218, 0, 502, 551, 601, 243,
	244, 246, 0, 286, 290, 298, 301, 309, 310, 319,
	371, 422, 451, 447, 456, 0, 525, 544, 556, 568,
	574, 575, 577, 583, 584, 585, 587, 593, 591, 588,
	589, 590, 586, 580, 410, 317, 498, 339, 377, 0,
	0, 428, 476, 249, 548, 499, 0, 0, 0, 0,
	841, 829, 754, 845, 756, 842, 843, 751, 752, 755,
	844, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	832, 740, 739, 0, 747, 0, 773, 774, 776, 780,
	781, 782, 793, 794, 795, 803, 805, 806, 804, 807,
	808, 809, 812, 813, 814, 815, 810, 811, 816, 757,
	761, 758, 759, 760, 772, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 855, 856, 857, 858, 859,
	860, 786, 790, 789, 787, 788, 784, 785, 738, 209,
	230, 372, 0, 458, 295, 598, 559, 553, 216, 232,
	846, 269, 847, 0, 0, 851, 0, 0, 0, 853,
	852, 0, 854, 820, 819, 0, 0, 848, 849, 0,
	850, 0, 0, 211, 212, 219, 231, 241, 245, 252,
	268, 283, 285, 292, 305, 316, 324, 325, 328, 334,
	384, 390, 391, 392, 393, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 441, 442, 444,
	446, 448, 459, 464, 478, 479, 480, 481, 482, 485,
	486, 491, 492, 493, 494, 495, 503, 504, 509, 532,
	534, 547, 566, 572, 484, 861, 862, 863, 864, 865,
	866, 867, 868, 306, 542, 573, 540, 594, 567, 443,
	382, 0, 0, 557, 0, 385, 288, 311, 326, 0,
	558, 505, 236, 470, 297, 260, 886, 0, 221, 255,
	239, 266, 281, 284, 330, 395, 403, 432, 437, 303,
	278, 253, 463, 250, 488, 512, 513, 514, 516, 399,
	273, 436, 400, 0, 380, 522, 523, 322, 521, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 737, 0, 0, 0, 277,
	742, 0, 0, 0, 370, 274, 0, 0, 433, 0,
	215, 0, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 749, 374, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 257, 331,
	214, 416, 501, 293, 0, 105, 0, 0, 887, 871,
	837, 838, 875, 888, 889, 890, 891, 876, 0, 247,
	877, 878, 254, 879, 0, 836, 777, 779, 778, 796,
	797, 798, 799, 800, 801, 802, 775, 884, 892, 893,
	0, 272, 327, 279, 271, 526, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 748, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 732, 0, 0, 0, 0,
	831, 0, 733, 0, 0, 741, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 405, 264, 0, 0, 457, 830, 0, 0, 569,
	0, 0, 828, 0, 0, 0, 0, 369, 0, 336,
	210, 234, 0, 0, 415, 465, 477, 0, 0, 0,
	881, 0, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 0, 0, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 882, 883, 263, 600, 783, 563, 229, 0, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	791, 792, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 0, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 0, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	0, 0, 428, 476, 249, 548, 499, 0, 0, 0,
	0, 841, 829, 754, 845, 756, 842, 843, 751, 752,
	755, 844, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 832, 740, 739, 0, 747, 0, 773, 774, 776,
	780, 781, 782, 793, 794, 795, 803, 805, 806, 804,
	807, 808, 809, 812, 813, 814, 815, 810, 811, 816,
	757, 761, 758, 759, 760, 772, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 855, 856, 857, 858,
	859, 860, 786, 790, 789, 787, 788, 784, 785, 738,
	209, 230, 372, 0, 458, 295, 598, 559, 553, 216,
	232, 846, 269, 847, 0, 0, 851, 0, 0, 0,
	853, 852, 0, 854, 820, 819, 0, 0, 848, 849,
	0, 850, 0, 0, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 861, 862, 863, 864,
	865, 866, 867, 868, 306, 542, 573, 540, 594, 567,
	443, 382, 0, 0, 557, 0, 385, 288, 311, 326,
	0, 558, 505, 236, 470, 297, 260, 886, 0, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 400, 0, 380, 522, 523, 322, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 370, 274, 0, 0, 433,
	0, 215, 0, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 0, 374, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 0, 0, 0,
	0, 0, 272, 327, 279, 271, 526, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 1425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434,
	1433, 1435, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 405, 264, 0, 0, 457, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	336, 210, 234, 0, 0, 415, 465, 477, 0, 0,
	0, 262, 0, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 0, 0, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 0,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 0, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 0, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 0, 0, 428, 476, 249, 548, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	0, 209, 230, 372, 0, 458, 295, 598, 559, 553,
	216, 232, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 0, 0, 557, 0, 385, 288, 311,
	326, 0, 558, 505, 236, 470, 297, 260, 0, 0,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 400, 0, 380, 522, 523, 322,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 0, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 0, 0, 0,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 355, 364,
	363, 344, 345, 347, 349, 354, 361, 367, 0, 0,
	0, 0, 0, 272, 327, 279, 271, 526, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 1050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 0, 0,
	1049, 569, 0, 0, 0, 0, 0, 1046, 1047, 369,
	1004, 336, 210, 234, 1040, 1044, 415, 465, 477, 0,
	0, 0, 262, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 535, 536, 263, 600, 237, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 359, 360, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 388, 489, 545, 341, 353, 356, 346, 365,
	0, 366, 342, 343, 348, 350, 351, 352, 357, 358,
	362, 368, 258, 220, 394, 402, 524, 318, 225, 226,
	227, 517, 518, 519, 520, 560, 561, 565, 466, 467,
	468, 469, 299, 554, 315, 472, 471, 337, 338, 383,
	454, 0, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 307, 308,
	449, 450, 320, 321, 595, 596, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 0,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 0,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	0, 1572, 871, 0, 0, 1569, 0, 0, 0, 0,
	1567, 0, 247, 1568, 1566, 254, 1571, 0, 836, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 0,
	0, 0, 0, 0, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 262, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 0, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	0, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 0, 400, 380, 522,
	523, 322, 96, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 370,
	274, 0, 0, 433, 0, 215, 0, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 0, 374, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 257, 331, 214, 416, 501, 293, 0,
	105, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 254, 0, 0,
	0, 355, 364, 363, 344, 345, 347, 349, 354, 361,
	367, 0, 0, 0, 0, 0, 272, 327, 279, 271,
	526, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 405, 264, 0, 0,
	457, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 336, 210, 234, 0, 0, 415,
	465, 477, 0, 0, 0, 262, 0, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 0, 0, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 535, 536, 263, 600,
	237, 563, 229, 0, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 359, 360, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 0, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 0, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 0, 0, 428, 476, 249,
	548, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 388, 489, 545, 341, 353,
	356, 346, 365, 0, 366, 342, 343, 348, 350, 351,
	352, 357, 358, 362, 368, 258, 220, 394, 402, 524,
	318, 225, 226, 227, 517, 518, 519, 520, 560, 561,
	565, 466, 467, 468, 469, 299, 554, 315, 472, 471,
	337, 338, 383, 454, 0, 209, 230, 372, 104, 458,
	295, 598, 559, 553, 216, 232, 0, 269, 0, 0,
	0, 0, 0, 0, 2225, 0, 0, 2224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 307, 308, 449, 450, 320, 321, 595, 596, 306,
	542, 573, 540, 594, 567, 443, 382, 0, 0, 557,
	0, 385, 288, 311, 326, 0, 558, 505, 236, 470,
	297, 260, 0, 0, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 1628, 0,
	380, 522, 523, 322, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	1630, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	370, 274, 0, 0, 433, 0, 215, 0, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 0, 374, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 257, 331, 214, 416, 501, 293,
	0, 0, 0, 0, 1632, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 355, 364, 363, 344, 345, 347, 349, 354,
	361, 367, 0, 0, 0, 0, 0, 272, 327, 279,
	271, 526, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 1406, 0, 1407, 1408, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 405, 264, 0,
	0, 457, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 336, 210, 234, 0, 0,
	415, 465, 477, 0, 0, 0, 262, 0, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 0, 0,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 535, 536, 263,
	600, 237, 563, 229, 0, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 359, 360, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 0,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 0, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 0, 0, 428, 476,
	249, 548, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 388, 489, 545, 341,
	353, 356, 346, 365, 0, 366, 342, 343, 348, 350,
	351, 352, 357, 358, 362, 368, 258, 220, 394, 402,
	524, 318, 225, 226, 227, 517, 518, 519, 520, 560,
	561, 565, 466, 467, 468, 469, 299, 554, 315, 472,
	471, 337, 338, 383, 454, 0, 209, 230, 372, 0,
	458, 295, 598, 559, 553, 216, 232, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 307, 308, 449, 450, 320, 321, 595, 596,
	306, 542, 573, 540, 594, 567, 443, 382, 0, 0,
	557, 0, 385, 288, 311, 326, 0, 558, 505, 236,
	470, 297, 260, 0, 0, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 0,
	400, 380, 522, 523, 322, 96, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 370, 274, 0, 0, 433, 0, 215, 0,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 0, 374, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 257, 331, 214, 416,
	501, 293, 0, 105, 0, 1609, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 355, 364, 363, 344, 345, 347,
	349, 354, 361, 367, 0, 0, 0, 0, 0, 272,
	327, 279, 271, 526, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 405,
	264, 0, 0, 457, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 336, 210, 234,
	0, 0, 415, 465, 477, 0, 0, 0, 262, 0,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	0, 0, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 535,
	536, 263, 600, 237, 563, 229, 0, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 359, 360,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 0, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 0, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 0, 0,
	428, 476, 249, 548, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 388, 489,
	545, 341, 353, 356, 346, 365, 0, 366, 342, 343,
	348, 350, 351, 352, 357, 358, 362, 368, 258, 220,
	394, 402, 524, 318, 225, 226, 227, 517, 518, 519,
	520, 560, 561, 565, 466, 467, 468, 469, 299, 554,
	315, 472, 471, 337, 338, 383, 454, 0, 209, 230,
	372, 104, 458, 295, 598, 559, 553, 216, 232, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 307, 308, 449, 450, 320, 321,
	595, 596, 306, 542, 573, 540, 594, 567, 443, 382,
	0, 0, 557, 0, 385, 288, 311, 326, 0, 558,
	505, 236, 470, 297, 260, 0, 0, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 400, 0, 380, 522, 523, 322, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 370, 274, 0, 0, 433, 0, 215,
	0, 490, 261, 381, 378, 529, 289, 280, 276, 259,
	323, 389, 431, 511, 425, 0, 374, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 257, 331, 214,
	416, 501, 293, 0, 105, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 254, 0, 0, 0, 355, 364, 363, 344, 345,
	347, 349, 354, 361, 367, 0, 0, 0, 0, 0,
	272, 327, 279, 271, 526, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	405, 264, 0, 0, 457, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 336, 210,
	234, 0, 0, 415, 465, 477, 0, 0, 0, 262,
	0, 475, 429, 546, 242, 291, 462, 435, 473, 445,
	294, 0, 0, 474, 376, 531, 455, 543, 570, 571,
	270, 409, 555, 515, 564, 597, 235, 267, 423, 508,
	549, 497, 401, 527, 528, 335, 496, 302, 213, 373,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 0, 635, 636, 576, 233,
	483, 375, 251, 240, 533, 552, 296, 460, 439, 440,
	578, 592, 579, 581, 582, 222, 510, 541, 248, 487,
	0, 0, 599, 256, 507, 224, 538, 506, 397, 332,
	333, 223, 0, 461, 275, 300, 0, 0, 265, 418,
	535, 536, 263, 600, 237, 563, 229, 0, 562, 411,
	530, 539, 398, 387, 228, 537, 396, 386, 340, 359,
	360, 287, 313, 452, 379, 453, 312, 314, 407, 406,
	408, 217, 550, 0, 218, 0, 502, 551, 601, 243,
	244, 246, 0, 286, 290, 298, 301, 309, 310, 319,
	371, 422, 451, 447, 456, 0, 525, 544, 556, 568,
	574, 575, 577, 583, 584, 585, 587, 593, 591, 588,
	589, 590, 586, 580, 410, 317, 498, 339, 377, 0,
	0, 428, 476, 249, 548, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 388,
	489, 545, 341, 353, 356, 346, 365, 0, 366, 342,
	343, 348, 350, 351, 352, 357, 358, 362, 368, 258,
	220, 394, 402, 524, 318, 225, 226, 227, 517, 518,
	519, 520, 560, 561, 565, 466, 467, 468, 469, 299,
	554, 315, 472, 471, 337, 338, 383, 454, 0, 209,
	230, 372, 0, 458, 295, 598, 559, 553, 216, 232,
	0, 269, 0, 0, 0, 0, 0, 0, 2225, 0,
	0, 2224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 212, 219, 231, 241, 245, 252,
	268, 283, 285, 292, 305, 316, 324, 325, 328, 334,
	384, 390, 391, 392, 393, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 441, 442, 444,
	446, 448, 459, 464, 478, 479, 480, 481, 482, 485,
	486, 491, 492, 493, 494, 495, 503, 504, 509, 532,
	534, 547, 566, 572, 484, 307, 308, 449, 450, 320,
	321, 595, 596, 306, 542, 573, 540, 594, 567, 443,
	382, 0, 0, 557, 0, 385, 288, 311, 326, 0,
	558, 505, 236, 470, 297, 260, 0, 0, 221, 255,
	239, 266, 281, 284, 330, 395, 403, 432, 437, 303,
	278, 253, 463, 250, 488, 512, 513, 514, 516, 399,
	273, 436, 400, 0, 380, 522, 523, 322, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 2176, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 370, 274, 0, 0, 433, 0,
	215, 0, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 0, 374, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 257, 331,
	214, 416, 501, 293, 0, 0, 0, 0, 1816, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 355, 364, 363, 344,
	345, 347, 349, 354, 361, 367, 0, 0, 0, 0,
	0, 272, 327, 279, 271, 526, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 405, 264, 0, 0, 457, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 336,
	210, 234, 0, 0, 415, 465, 477, 0, 0, 0,
	262, 0, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 0, 2174, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 535, 536, 263, 600, 237, 563, 229, 0, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	359, 360, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 0, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 0, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	0, 0, 428, 476, 249, 548, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	388, 489, 545, 341, 353, 356, 346, 365, 0, 366,
	342, 343, 348, 350, 351, 352, 357, 358, 362, 368,
	258, 220, 394, 402, 524, 318, 225, 226, 227, 517,
	518, 519, 520, 560, 561, 565, 466, 467, 468, 469,
	299, 554, 315, 472, 471, 337, 338, 383, 454, 0,
	209, 230, 372, 0, 458, 295, 598, 559, 553, 216,
	232, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 307, 308, 449, 450,
	320, 321, 595, 596, 306, 542, 573, 540, 594, 567,
	443, 382, 0, 0, 557, 0, 385, 288, 311, 326,
	0, 558, 505, 236, 470, 297, 260, 0, 0, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 400, 0, 380, 522, 523, 322, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 370, 274, 0, 0, 433,
	0, 215, 0, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 0, 374, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 0, 0, 0,
	0, 0, 272, 327, 279, 271, 526, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 405, 264, 0, 0, 457, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 369, 1004,
	336, 210, 234, 1002, 0, 415, 465, 477, 0, 0,
	0, 262, 0, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 0, 0, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 0,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 0, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 0, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 0, 0, 428, 476, 249, 548, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	0, 209, 230, 372, 0, 458, 295, 598, 559, 553,
	216, 232, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 0, 0, 557, 0, 385, 288, 311,
	326, 0, 558, 505, 236, 470, 297, 260, 0, 0,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 400, 0, 380, 522, 523, 322,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 2176, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 0, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 0, 0, 0,
	1816, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 355, 364,
	363, 344, 345, 347, 349, 354, 361, 367, 0, 0,
	0, 0, 0, 272, 327, 279, 271, 526, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 336, 210, 234, 0, 0, 415, 465, 477, 0,
	0, 0, 262, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 535, 536, 263, 600, 237, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 359, 360, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 388, 489, 545, 341, 353, 356, 346, 365,
	0, 366, 342, 343, 348, 350, 351, 352, 357, 358,
	362, 368, 258, 220, 394, 402, 524, 318, 225, 226,
	227, 517, 518, 519, 520, 560, 561, 565, 466, 467,
	468, 469, 299, 554, 315, 472, 471, 337, 338, 383,
	454, 0, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 307, 308,
	449, 450, 320, 321, 595, 596, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 0,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 0,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	1609, 0, 697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 254, 0, 0, 0, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 0,
	0, 0, 0, 0, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 0,
	0, 0, 569, 0, 0, 0, 3591, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 262, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 0, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	0, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 400, 0, 380, 522,
	523, 322, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 370, 274,
	0, 0, 433, 0, 215, 0, 490, 261, 381, 378,
	529, 289, 280, 276, 259, 323, 389, 431, 511, 425,
	0, 374, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 257, 331, 214, 416, 501, 293, 0, 0,
	0, 0, 2009, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	355, 364, 363, 344, 345, 347, 349, 354, 361, 367,
	0, 0, 0, 0, 0, 272, 327, 279, 271, 526,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 405, 264, 0, 0, 457,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 336, 210, 234, 0, 0, 415, 465,
	477, 0, 0, 0, 262, 0, 475, 429, 546, 242,
	291, 462, 435, 473, 445, 294, 0, 0, 474, 376,
	531, 455, 543, 570, 571, 270, 409, 555, 515, 564,
	597, 235, 267, 423, 508, 549, 497, 401, 527, 528,
	335, 496, 302, 213, 373, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	0, 635, 636, 576, 233, 483, 375, 251, 240, 533,
	552, 296, 460, 439, 440, 578, 592, 579, 581, 582,
	222, 510, 541, 248, 487, 0, 0, 599, 256, 507,
	224, 538, 506, 397, 332, 333, 223, 0, 461, 275,
	300, 0, 0, 265, 418, 535, 536, 263, 600, 237,
	563, 229, 0, 562, 411, 530, 539, 398, 387, 228,
	537, 396, 386, 340, 359, 360, 287, 313, 452, 379,
	453, 312, 314, 407, 406, 408, 217, 550, 0, 218,
	0, 502, 551, 601, 243, 244, 246, 0, 286, 290,
	298, 301, 309, 310, 319, 371, 422, 451, 447, 456,
	0, 525, 544, 556, 568, 574, 575, 577, 583, 584,
	585, 587, 593, 591, 588, 589, 590, 586, 580, 410,
	317, 498, 339, 377, 0, 0, 428, 476, 249, 548,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 388, 489, 545, 341, 353, 356,
	346, 365, 0, 366, 342, 343, 348, 350, 351, 352,
	357, 358, 362, 368, 258, 220, 394, 402, 524, 318,
	225, 226, 227, 517, 518, 519, 520, 560, 561, 565,
	466, 467, 468, 469, 299, 554, 315, 472, 471, 337,
	338, 383, 454, 0, 209, 230, 372, 0, 458, 295,
	598, 559, 553, 216, 232, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 212,
	219, 231, 241, 245, 252, 268, 283, 285, 292, 305,
	316, 324, 325, 328, 334, 384, 390, 391, 392, 393,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 441, 442, 444, 446, 448, 459, 464, 478,
	479, 480, 481, 482, 485, 486, 491, 492, 493, 494,
	495, 503, 504, 509, 532, 534, 547, 566, 572, 484,
	307, 308, 449, 450, 320, 321, 595, 596, 306, 542,
	573, 540, 594, 567, 443, 382, 0, 0, 557, 0,
	385, 288, 311, 326, 0, 558, 505, 236, 470, 297,
	260, 0, 0, 221, 255, 239, 266, 281, 284, 330,
	395, 403, 432, 437, 303, 278, 253, 463, 250, 488,
	512, 513, 514, 516, 399, 273, 436, 400, 0, 380,
	522, 523, 322, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 370,
	274, 0, 0, 433, 0, 215, 0, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 0, 374, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 257, 331, 214, 416, 501, 293, 0,
	0, 0, 0, 2623, 697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 254, 0, 0,
	0, 355, 364, 363, 344, 345, 347, 349, 354, 361,
	367, 0, 0, 0, 0, 0, 272, 327, 279, 271,
	526, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 405, 264, 0, 0,
	457, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 336, 210, 234, 0, 0, 415,
	465, 477, 0, 0, 0, 262, 0, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 0, 0, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 535, 536, 263, 600,
	237, 563, 229, 0, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 359, 360, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 0, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 0, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 0, 0, 428, 476, 249,
	548, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 388, 489, 545, 341, 353,
	356, 346, 365, 0, 366, 342, 343, 348, 350, 351,
	352, 357, 358, 362, 368, 258, 220, 394, 402, 524,
	318, 225, 226, 227, 517, 518, 519, 520, 560, 561,
	565, 466, 467, 468, 469, 299, 554, 315, 472, 471,
	337, 338, 383, 454, 0, 209, 230, 372, 0, 458,
	295, 598, 559, 553, 216, 232, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 307, 308, 449, 450, 320, 321, 595, 596, 306,
	542, 573, 540, 594, 567, 443, 382, 0, 0, 557,
	0, 385, 288, 311, 326, 0, 558, 505, 236, 470,
	297, 260, 0, 0, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 400, 0,
	380, 522, 523, 322, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	370, 274, 0, 0, 433, 0, 215, 0, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 0, 374, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 257, 331, 214, 416, 501, 293,
	0, 0, 0, 0, 0, 697, 0, 0, 0, 0,
	2608, 0, 0, 0, 0, 247, 0, 0, 254, 2609,
	0, 0, 355, 364, 363, 344, 345, 347, 349, 354,
	361, 367, 0, 0, 0, 0, 0, 272, 327, 279,
	271, 526, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 405, 264, 0,
	0, 457, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 336, 210, 234, 0, 0,
	415, 465, 477, 0, 0, 0, 262, 0, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 0, 0,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 535, 536, 263,
	600, 237, 563, 229, 0, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 359, 360, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 0,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 0, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 0, 0, 428, 476,
	249, 548, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 388, 489, 545, 341,
	353, 356, 346, 365, 0, 366, 342, 343, 348, 350,
	351, 352, 357, 358, 362, 368, 258, 220, 394, 402,
	524, 318, 225, 226, 227, 517, 518, 519, 520, 560,
	561, 565, 466, 467, 468, 469, 299, 554, 315, 472,
	471, 337, 338, 383, 454, 0, 209, 230, 372, 0,
	458, 295, 598, 559, 553, 216, 232, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 307, 308, 449, 450, 320, 321, 595, 596,
	306, 542, 573, 540, 594, 567, 443, 382, 0, 0,
	557, 0, 385, 288, 311, 326, 0, 558, 505, 236,
	470, 297, 260, 0, 0, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 400,
	0, 380, 522, 523, 322, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 1651, 0, 0,
	0, 370, 274, 0, 0, 433, 0, 215, 0, 490,
	261, 381, 378, 529, 289, 280, 276, 259, 323, 389,
	431, 511, 425, 0, 374, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 257, 331, 214, 416, 501,
	293, 0, 0, 0, 0, 1650, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 254,
	0, 0, 0, 355, 364, 363, 344, 345, 347, 349,
	354, 361, 367, 0, 0, 0, 0, 0, 272, 327,
	279, 271, 526, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 405, 264,
	0, 0, 457, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 336, 210, 234, 0,
	0, 415, 465, 477, 0, 0, 0, 262, 0, 475,
	429, 546, 242, 291, 462, 435, 473, 445, 294, 0,
	0, 474, 376, 531, 455, 543, 570, 571, 270, 409,
	555, 515, 564, 597, 235, 267, 423, 508, 549, 497,
	401, 527, 528, 335, 496, 302, 213, 373, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 0, 635, 636, 576, 233, 483, 375,
	251, 240, 533, 552, 296, 460, 439, 440, 578, 592,
	579, 581, 582, 222, 510, 541, 248, 487, 0, 0,
	599, 256, 507, 224, 538, 506, 397, 332, 333, 223,
	0, 461, 275, 300, 0, 0, 265, 418, 535, 536,
	263, 600, 237, 563, 229, 0, 562, 411, 530, 539,
	398, 387, 228, 537, 396, 386, 340, 359, 360, 287,
	313, 452, 379, 453, 312, 314, 407, 406, 408, 217,
	550, 0, 218, 0, 502, 551, 601, 243, 244, 246,
	0, 286, 290, 298, 301, 309, 310, 319, 371, 422,
	451, 447, 456, 0, 525, 544, 556, 568, 574, 575,
	577, 583, 584, 585, 587, 593, 591, 588, 589, 590,
	586, 580, 410, 317, 498, 339, 377, 0, 0, 428,
	476, 249, 548, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 388, 489, 545,
	341, 353, 356, 346, 365, 0, 366, 342, 343, 348,
	350, 351, 352, 357, 358, 362, 368, 258, 220, 394,
	402, 524, 318, 225, 226, 227, 517, 518, 519, 520,
	560, 561, 565, 466, 467, 468, 469, 299, 554, 315,
	472, 471, 337, 338, 383, 454, 0, 209, 230, 372,
	0, 458, 295, 598, 559, 553, 216, 232, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 212, 219, 231, 241, 245, 252, 268, 283,
	285, 292, 305, 316, 324, 325, 328, 334, 384, 390,
	391, 392, 393, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 441, 442, 444, 446, 448,
	459, 464, 478, 479, 480, 481, 482, 485, 486, 491,
	492, 493, 494, 495, 503, 504, 509, 532, 534, 547,
	566, 572, 484, 307, 308, 449, 450, 320, 321, 595,
	596, 306, 542, 573, 540, 594, 567, 443, 382, 0,
	0, 557, 0, 385, 288, 311, 326, 0, 558, 505,
	236, 470, 297, 260, 0, 0, 221, 255, 239, 266,
	281, 284, 330, 395, 403, 432, 437, 303, 278, 253,
	463, 250, 488, 512, 513, 514, 516, 399, 273, 436,
	400, 0, 380, 522, 523, 322, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 370, 274, 0, 0, 433, 0, 215, 0,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 0, 374, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 257, 331, 214, 416,
	501, 293, 0, 0, 0, 0, 0, 699, 700, 701,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 355, 364, 363, 344, 345, 347,
	349, 354, 361, 367, 0, 0, 0, 0, 0, 272,
	327, 279, 271, 526, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 405,
	264, 0, 0, 457, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 336, 210, 234,
	0, 0, 415, 465, 477, 0, 0, 0, 262, 0,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	0, 0, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 535,
	536, 263, 600, 237, 563, 229, 0, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 359, 360,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 0, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 0, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 0, 0,
	428, 476, 249, 548, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 388, 489,
	545, 341, 353, 356, 346, 365, 0, 366, 342, 343,
	348, 350, 351, 352, 357, 358, 362, 368, 258, 220,
	394, 402, 524, 318, 225, 226, 227, 517, 518, 519,
	520, 560, 561, 565, 466, 467, 468, 469, 299, 554,
	315, 472, 471, 337, 338, 383, 454, 0, 209, 230,
	372, 0, 458, 295, 598, 559, 553, 216, 232, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 307, 308, 449, 450, 320, 321,
	595, 596, 306, 542, 573, 540, 594, 567, 443, 382,
	0, 0, 557, 0, 385, 288, 311, 326, 0, 558,
	505, 236, 470, 297, 260, 0, 0, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 400, 0, 380, 522, 523, 322, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 370, 274, 0, 0, 433, 0, 215,
	0, 490, 261, 381, 378, 529, 289, 280, 276, 259,
	323, 389, 431, 511, 425, 0, 374, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 257, 331, 214,
	416, 501, 293, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 254, 0, 0, 0, 355, 364, 363, 344, 345,
	347, 349, 354, 361, 367, 0, 0, 0, 0, 0,
	272, 327, 279, 271, 526, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	405, 264, 0, 0, 457, 0, 0, 0, 569, 0,
	0, 0, 3733, 0, 0, 0, 369, 0, 336, 210,
	234, 0, 0, 415, 465, 477, 0, 0, 0, 262,
	0, 475, 429, 546, 242, 291, 462, 435, 473, 445,
	294, 0, 0, 474, 376, 531, 455, 543, 570, 571,
	270, 409, 555, 515, 564, 597, 235, 267, 423, 508,
	549, 497, 401, 527, 528, 335, 496, 302, 213, 373,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 0, 635, 636, 576, 233,
	483, 375, 251, 240, 533, 552, 296, 460, 439, 440,
	578, 592, 579, 581, 582, 222, 510, 541, 248, 487,
	0, 0, 599, 256, 507, 224, 538, 506, 397, 332,
	333, 223, 0, 461, 275, 300, 0, 0, 265, 418,
	535, 536, 263, 600, 237, 563, 229, 0, 562, 411,
	530, 539, 398, 387, 228, 537, 396, 386, 340, 359,
	360, 287, 313, 452, 379, 453, 312, 314, 407, 406,
	408, 217, 550, 0, 218, 0, 502, 551, 601, 243,
	244, 246, 0, 286, 290, 298, 301, 309, 310, 319,
	371, 422, 451, 447, 456, 0, 525, 544, 556, 568,
	574, 575, 577, 583, 584, 585, 587, 593, 591, 588,
	589, 590, 586, 580, 410, 317, 498, 339, 377, 0,
	0, 428, 476, 249, 548, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 388,
	489, 545, 341, 353, 356, 346, 365, 0, 366, 342,
	343, 348, 350, 351, 352, 357, 358, 362, 368, 258,
	220, 394, 402, 524, 318, 225, 226, 227, 517, 518,
	519, 520, 560, 561, 565, 466, 467, 468, 469, 299,
	554, 315, 472, 471, 337, 338, 383, 454, 0, 209,
	230, 372, 0, 458, 295, 598, 559, 553, 216, 232,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 212, 219, 231, 241, 245, 252,
	268, 283, 285, 292, 305, 316, 324, 325, 328, 334,
	384, 390, 391, 392, 393, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 441, 442, 444,
	446, 448, 459, 464, 478, 479, 480, 481, 482, 485,
	486, 491, 492, 493, 494, 495, 503, 504, 509, 532,
	534, 547, 566, 572, 484, 307, 308, 449, 450, 320,
	321, 595, 596, 306, 542, 573, 540, 594, 567, 443,
	382, 0, 0, 557, 0, 385, 288, 311, 326, 0,
	558, 505, 236, 470, 297, 260, 0, 0, 221, 255,
	239, 266, 281, 284, 330, 395, 403, 432, 437, 303,
	278, 253, 463, 250, 488, 512, 513, 514, 516, 399,
	273, 436, 400, 0, 380, 522, 523, 322, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 370, 274, 0, 0, 433, 0,
	215, 0, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 0, 374, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 257, 331,
	214, 416, 501, 293, 0, 0, 0, 0, 1816, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 355, 364, 363, 344,
	345, 347, 349, 354, 361, 367, 0, 0, 0, 0,
	0, 272, 327, 279, 271, 526, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 405, 264, 0, 0, 457, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 336,
	210, 234, 0, 0, 415, 465, 477, 0, 0, 0,
	262, 0, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 0, 0, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 535, 536, 263, 600, 237, 563, 229, 0, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	359, 360, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 0, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 0, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	0, 0, 428, 476, 249, 548, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	388, 489, 545, 341, 353, 356, 346, 365, 0, 366,
	342, 343, 348, 350, 351, 352, 357, 358, 362, 368,
	258, 220, 394, 402, 524, 318, 225, 226, 227, 517,
	518, 519, 520, 560, 561, 565, 466, 467, 468, 469,
	299, 554, 315, 472, 471, 337, 338, 383, 454, 0,
	209, 230, 372, 0, 458, 295, 598, 559, 553, 216,
	232, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 307, 308, 449, 450,
	320, 321, 595, 596, 306, 542, 573, 540, 594, 567,
	443, 382, 0, 0, 557, 0, 385, 288, 311, 326,
	0, 558, 505, 236, 470, 297, 260, 0, 0, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 400, 0, 380, 522, 523, 322, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 370, 274, 0, 0, 433,
	0, 215, 0, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 0, 374, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 0, 0, 0,
	0, 0, 272, 327, 279, 271, 526, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 405, 264, 0, 0, 457, 0, 0, 0,
	569, 0, 0, 0, 3591, 0, 0, 0, 369, 0,
	336, 210, 234, 0, 0, 415, 465, 477, 0, 0,
	0, 262, 0, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 0, 0, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 0,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 0, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 0, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 0, 0, 428, 476, 249, 548, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	0, 209, 230, 372, 0, 458, 295, 598, 559, 553,
	216, 232, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 0, 0, 557, 0, 385, 288, 311,
	326, 0, 558, 505, 236, 470, 297, 260, 0, 0,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 400, 0, 380, 522, 523, 322,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 0, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 105, 0, 0,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 355, 364,
	363, 344, 345, 347, 349, 354, 361, 367, 0, 0,
	0, 0, 0, 272, 327, 279, 271, 526, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 336, 210, 234, 0, 0, 415, 465, 477, 0,
	0, 0, 262, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 535, 536, 263, 600, 237, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 359, 360, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 388, 489, 545, 341, 353, 356, 346, 365,
	0, 366, 342, 343, 348, 350, 351, 352, 357, 358,
	362, 368, 258, 220, 394, 402, 524, 318, 225, 226,
	227, 517, 518, 519, 520, 560, 561, 565, 466, 467,
	468, 469, 299, 554, 315, 472, 471, 337, 338, 383,
	454, 0, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 307, 308,
	449, 450, 320, 321, 595, 596, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 0,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 0, 0, 0, 2226, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 0,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 254, 0, 0, 0, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 0,
	0, 0, 0, 0, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 262, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 0, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	0, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 400, 0, 380, 522,
	523, 322, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 370, 274,
	0, 0, 433, 0, 215, 0, 490, 261, 381, 378,
	529, 289, 280, 276, 259, 323, 389, 431, 511, 425,
	0, 374, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 257, 331, 214, 416, 501, 293, 0, 0,
	0, 0, 1632, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	355, 364, 363, 344, 345, 347, 349, 354, 361, 367,
	0, 0, 0, 0, 0, 272, 327, 279, 271, 526,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 405, 264, 0, 0, 457,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 336, 210, 234, 0, 0, 415, 465,
	477, 0, 0, 0, 262, 0, 475, 429, 546, 242,
	291, 462, 435, 473, 445, 294, 0, 0, 474, 376,
	531, 455, 543, 570, 571, 270, 409, 555, 515, 564,
	597, 235, 267, 423, 508, 549, 497, 401, 527, 528,
	335, 496, 302, 213, 373, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	0, 635, 636, 576, 233, 483, 375, 251, 240, 533,
	552, 296, 460, 439, 440, 578, 592, 579, 581, 582,
	222, 510, 541, 248, 487, 0, 0, 599, 256, 507,
	224, 538, 506, 397, 332, 333, 223, 0, 461, 275,
	300, 0, 0, 265, 418, 535, 536, 263, 600, 237,
	563, 229, 0, 562, 411, 530, 539, 398, 387, 228,
	537, 396, 386, 340, 359, 360, 287, 313, 452, 379,
	453, 312, 314, 407, 406, 408, 217, 550, 0, 218,
	0, 502, 551, 601, 243, 244, 246, 0, 286, 290,
	298, 301, 309, 310, 319, 371, 422, 451, 447, 456,
	0, 525, 544, 556, 568, 574, 575, 577, 583, 584,
	585, 587, 593, 591, 588, 589, 590, 586, 580, 410,
	317, 498, 339, 377, 0, 0, 428, 476, 249, 548,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 388, 489, 545, 341, 353, 356,
	346, 365, 0, 366, 342, 343, 348, 350, 351, 352,
	357, 358, 362, 368, 258, 220, 394, 402, 524, 318,
	225, 226, 227, 517, 518, 519, 520, 560, 561, 565,
	466, 467, 468, 469, 299, 554, 315, 472, 471, 337,
	338, 383, 454, 0, 209, 230, 372, 0, 458, 295,
	598, 559, 553, 216, 232, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 212,
	219, 231, 241, 245, 252, 268, 283, 285, 292, 305,
	316, 324, 325, 328, 334, 384, 390, 391, 392, 393,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 441, 442, 444, 446, 448, 459, 464, 478,
	479, 480, 481, 482, 485, 486, 491, 492, 493, 494,
	495, 503, 504, 509, 532, 534, 547, 566, 572, 484,
	307, 308, 449, 450, 320, 321, 595, 596, 306, 542,
	573, 540, 594, 567, 443, 382, 0, 0, 557, 0,
	385, 288, 311, 326, 0, 558, 505, 236, 470, 297,
	260, 0, 0, 221, 255, 239, 266, 281, 284, 330,
	395, 403, 432, 437, 303, 278, 253, 463, 250, 488,
	512, 513, 514, 516, 399, 273, 436, 400, 0, 380,
	522, 523, 322, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 370,
	274, 0, 0, 433, 0, 215, 0, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 0, 374, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 257, 331, 214, 416, 501, 293, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 254, 0, 0,
	0, 355, 364, 363, 344, 345, 347, 349, 354, 361,
	367, 0, 0, 0, 0, 0, 272, 327, 279, 271,
	526, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 405, 264, 0, 0,
	457, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 336, 210, 234, 0, 0, 415,
	465, 477, 0, 0, 0, 262, 0, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 0, 0, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 535, 536, 263, 600,
	237, 563, 229, 0, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 359, 360, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 0, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 0, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 0, 0, 428, 476, 249,
	548, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 388, 489, 545, 341, 353,
	356, 346, 365, 0, 366, 342, 343, 348, 350, 351,
	352, 357, 358, 362, 368, 258, 220, 394, 402, 524,
	318, 225, 226, 227, 517, 518, 519, 520, 560, 561,
	565, 466, 467, 468, 469, 299, 554, 315, 472, 471,
	337, 338, 383, 454, 0, 209, 230, 372, 1964, 458,
	295, 598, 559, 553, 216, 232, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 307, 308, 449, 450, 320, 321, 595, 596, 306,
	542, 573, 540, 594, 567, 443, 382, 0, 0, 557,
	0, 385, 288, 311, 326, 0, 558, 505, 236, 470,
	297, 260, 0, 0, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 400, 0,
	380, 522, 523, 322, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	370, 274, 0, 0, 433, 0, 215, 0, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 0, 374, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 257, 331, 214, 416, 501, 293,
	0, 0, 0, 0, 1955, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 355, 364, 363, 344, 345, 347, 349, 354,
	361, 367, 0, 0, 0, 0, 0, 272, 327, 279,
	271, 526, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 405, 264, 0,
	0, 457, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 336, 210, 234, 0, 0,
	415, 465, 477, 0, 0, 0, 262, 0, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 0, 0,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 535, 536, 263,
	600, 237, 563, 229, 0, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 359, 360, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 0,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 0, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 0, 0, 428, 476,
	249, 548, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 388, 489, 545, 341,
	353, 356, 346, 365, 0, 366, 342, 343, 348, 350,
	351, 352, 357, 358, 362, 368, 258, 220, 394, 402,
	524, 318, 225, 226, 227, 517, 518, 519, 520, 560,
	561, 565, 466, 467, 468, 469, 299, 554, 315, 472,
	471, 337, 338, 383, 454, 0, 209, 230, 372, 0,
	458, 295, 598, 559, 553, 216, 232, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 307, 308, 449, 450, 320, 321, 595, 596,
	306, 542, 573, 540, 594, 567, 443, 382, 0, 0,
	557, 0, 385, 288, 311, 326, 0, 558, 505, 236,
	470, 297, 260, 0, 0, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 400,
	0, 380, 522, 523, 322, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 1783,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 370, 274, 0, 0, 433, 0, 215, 0, 490,
	261, 381, 378, 529, 289, 280, 276, 259, 323, 389,
	431, 511, 425, 0, 374, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 257, 331, 214, 416, 501,
	293, 0, 0, 0, 0, 0, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 254,
	0, 0, 0, 355, 364, 363, 344, 345, 347, 349,
	354, 361, 367, 0, 0, 0, 0, 0, 272, 327,
	279, 271, 526, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 405, 264,
	0, 0, 457, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 336, 210, 234, 0,
	0, 415, 465, 477, 0, 0, 0, 262, 0, 475,
	429, 546, 242, 291, 462, 435, 473, 445, 294, 0,
	0, 474, 376, 531, 455, 543, 570, 571, 270, 409,
	555, 515, 564, 597, 235, 267, 423, 508, 549, 497,
	401, 527, 528, 335, 496, 302, 213, 373, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 0, 635, 636, 576, 233, 483, 375,
	251, 240, 533, 552, 296, 460, 439, 440, 578, 592,
	579, 581, 582, 222, 510, 541, 248, 487, 0, 0,
	599, 256, 507, 224, 538, 506, 397, 332, 333, 223,
	0, 461, 275, 300, 0, 0, 265, 418, 535, 536,
	263, 600, 237, 563, 229, 0, 562, 411, 530, 539,
	398, 387, 228, 537, 396, 386, 340, 359, 360, 287,
	313, 452, 379, 453, 312, 314, 407, 406, 408, 217,
	550, 0, 218, 0, 502, 551, 601, 243, 244, 246,
	0, 286, 290, 298, 301, 309, 310, 319, 371, 422,
	451, 447, 456, 0, 525, 544, 556, 568, 574, 575,
	577, 583, 584, 585, 587, 593, 591, 588, 589, 590,
	586, 580, 410, 317, 498, 339, 377, 0, 0, 428,
	476, 249, 548, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 388, 489, 545,
	341, 353, 356, 346, 365, 0, 366, 342, 343, 348,
	350, 351, 352, 357, 358, 362, 368, 258, 220, 394,
	402, 524, 318, 225, 226, 227, 517, 518, 519, 520,
	560, 561, 565, 466, 467, 468, 469, 299, 554, 315,
	472, 471, 337, 338, 383, 454, 0, 209, 230, 372,
	0, 458, 295, 598, 559, 553, 216, 232, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 212, 219, 231, 241, 245, 252, 268, 283,
	285, 292, 305, 316, 324, 325, 328, 334, 384, 390,
	391, 392, 393, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 441, 442, 444, 446, 448,
	459, 464, 478, 479, 480, 481, 482, 485, 486, 491,
	492, 493, 494, 495, 503, 504, 509, 532, 534, 547,
	566, 572, 484, 307, 308, 449, 450, 320, 321, 595,
	596, 306, 542, 573, 540, 594, 567, 443, 382, 0,
	0, 557, 0, 385, 288, 311, 326, 0, 558, 505,
	236, 470, 297, 260, 0, 0, 221, 255, 239, 266,
	281, 284, 330, 395, 403, 432, 437, 303, 278, 253,
	463, 250, 488, 512, 513, 514, 516, 399, 273, 436,
	400, 0, 380, 522, 523, 322, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	1781, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 370, 274, 0, 0, 433, 0, 215, 0,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 0, 374, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 257, 331, 214, 416,
	501, 293, 0, 0, 0, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 355, 364, 363, 344, 345, 347,
	349, 354, 361, 367, 0, 0, 0, 0, 0, 272,
	327, 279, 271, 526, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 405,
	264, 0, 0, 457, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 336, 210, 234,
	0, 0, 415, 465, 477, 0, 0, 0, 262, 0,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	0, 0, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 535,
	536, 263, 600, 237, 563, 229, 0, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 359, 360,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 0, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 0, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 0, 0,
	428, 476, 249, 548, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 388, 489,
	545, 341, 353, 356, 346, 365, 0, 366, 342, 343,
	348, 350, 351, 352, 357, 358, 362, 368, 258, 220,
	394, 402, 524, 318, 225, 226, 227, 517, 518, 519,
	520, 560, 561, 565, 466, 467, 468, 469, 299, 554,
	315, 472, 471, 337, 338, 383, 454, 0, 209, 230,
	372, 0, 458, 295, 598, 559, 553, 216, 232, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 307, 308, 449, 450, 320, 321,
	595, 596, 306, 542, 573, 540, 594, 567, 443, 382,
	0, 0, 557, 0, 385, 288, 311, 326, 0, 558,
	505, 236, 470, 297, 260, 0, 0, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 400, 0, 380, 522, 523, 322, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 1779, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 370, 274, 0, 0, 433, 0, 215,
	0, 490, 261, 381, 378, 529, 289, 280, 276, 259,
	323, 389, 431, 511, 425, 0, 374, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 257, 331, 214,
	416, 501, 293, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 254, 0, 0, 0, 355, 364, 363, 344, 345,
	347, 349, 354, 361, 367, 0, 0, 0, 0, 0,
	272, 327, 279, 271, 526, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	405, 264, 0, 0, 457, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 336, 210,
	234, 0, 0, 415, 465, 477, 0, 0, 0, 262,
	0, 475, 429, 546, 242, 291, 462, 435, 473, 445,
	294, 0, 0, 474, 376, 531, 455, 543, 570, 571,
	270, 409, 555, 515, 564, 597, 235, 267, 423, 508,
	549, 497, 401, 527, 528, 335, 496, 302, 213, 373,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 0, 635, 636, 576, 233,
	483, 375, 251, 240, 533, 552, 296, 460, 439, 440,
	578, 592, 579, 581, 582, 222, 510, 541, 248, 487,
	0, 0, 599, 256, 507, 224, 538, 506, 397, 332,
	333, 223, 0, 461, 275, 300, 0, 0, 265, 418,
	535, 536, 263, 600, 237, 563, 229, 0, 562, 411,
	530, 539, 398, 387, 228, 537, 396, 386, 340, 359,
	360, 287, 313, 452, 379, 453, 312, 314, 407, 406,
	408, 217, 550, 0, 218, 0, 502, 551, 601, 243,
	244, 246, 0, 286, 290, 298, 301, 309, 310, 319,
	371, 422, 451, 447, 456, 0, 525, 544, 556, 568,
	574, 575, 577, 583, 584, 585, 587, 593, 591, 588,
	589, 590, 586, 580, 410, 317, 498, 339, 377, 0,
	0, 428, 476, 249, 548, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 388,
	489, 545, 341, 353, 356, 346, 365, 0, 366, 342,
	343, 348, 350, 351, 352, 357, 358, 362, 368, 258,
	220, 394, 402, 524, 318, 225, 226, 227, 517, 518,
	519, 520, 560, 561, 565, 466, 467, 468, 469, 299,
	554, 315, 472, 471, 337, 338, 383, 454, 0, 209,
	230, 372, 0, 458, 295, 598, 559, 553, 216, 232,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 212, 219, 231, 241, 245, 252,
	268, 283, 285, 292, 305, 316, 324, 325, 328, 334,
	384, 390, 391, 392, 393, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 441, 442, 444,
	446, 448, 459, 464, 478, 479, 480, 481, 482, 485,
	486, 491, 492, 493, 494, 495, 503, 504, 509, 532,
	534, 547, 566, 572, 484, 307, 308, 449, 450, 320,
	321, 595, 596, 306, 542, 573, 540, 594, 567, 443,
	382, 0, 0, 557, 0, 385, 288, 311, 326, 0,
	558, 505, 236, 470, 297, 260, 0, 0, 221, 255,
	239, 266, 281, 284, 330, 395, 403, 432, 437, 303,
	278, 253, 463, 250, 488, 512, 513, 514, 516, 399,
	273, 436, 400, 0, 380, 522, 523, 322, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 1777, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 370, 274, 0, 0, 433, 0,
	215, 0, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 0, 374, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 257, 331,
	214, 416, 501, 293, 0, 0, 0, 0, 0, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 355, 364, 363, 344,
	345, 347, 349, 354, 361, 367, 0, 0, 0, 0,
	0, 272, 327, 279, 271, 526, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 405, 264, 0, 0, 457, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 336,
	210, 234, 0, 0, 415, 465, 477, 0, 0, 0,
	262, 0, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 0, 0, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 535, 536, 263, 600, 237, 563, 229, 0, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	359, 360, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 0, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 0, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	0, 0, 428, 476, 249, 548, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	388, 489, 545, 341, 353, 356, 346, 365, 0, 366,
	342, 343, 348, 350, 351, 352, 357, 358, 362, 368,
	258, 220, 394, 402, 524, 318, 225, 226, 227, 517,
	518, 519, 520, 560, 561, 565, 466, 467, 468, 469,
	299, 554, 315, 472, 471, 337, 338, 383, 454, 0,
	209, 230, 372, 0, 458, 295, 598, 559, 553, 216,
	232, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 307, 308, 449, 450,
	320, 321, 595, 596, 306, 542, 573, 540, 594, 567,
	443, 382, 0, 0, 557, 0, 385, 288, 311, 326,
	0, 558, 505, 236, 470, 297, 260, 0, 0, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 400, 0, 380, 522, 523, 322, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 1775, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 370, 274, 0, 0, 433,
	0, 215, 0, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 0, 374, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 0, 0, 0,
	0, 0, 272, 327, 279, 271, 526, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 405, 264, 0, 0, 457, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	336, 210, 234, 0, 0, 415, 465, 477, 0, 0,
	0, 262, 0, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 0, 0, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 0,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 0, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 0, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 0, 0, 428, 476, 249, 548, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	0, 209, 230, 372, 0, 458, 295, 598, 559, 553,
	216, 232, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 0, 0, 557, 0, 385, 288, 311,
	326, 0, 558, 505, 236, 470, 297, 260, 0, 0,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 400, 0, 380, 522, 523, 322,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 1771, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 0, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 0, 0, 0,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 355, 364,
	363, 344, 345, 347, 349, 354, 361, 367, 0, 0,
	0, 0, 0, 272, 327, 279, 271, 526, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 336, 210, 234, 0, 0, 415, 465, 477, 0,
	0, 0, 262, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 535, 536, 263, 600, 237, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 359, 360, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 388, 489, 545, 341, 353, 356, 346, 365,
	0, 366, 342, 343, 348, 350, 351, 352, 357, 358,
	362, 368, 258, 220, 394, 402, 524, 318, 225, 226,
	227, 517, 518, 519, 520, 560, 561, 565, 466, 467,
	468, 469, 299, 554, 315, 472, 471, 337, 338, 383,
	454, 0, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 307, 308,
	449, 450, 320, 321, 595, 596, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 0,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 1769, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 0,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	0, 0, 697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 254, 0, 0, 0, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 0,
	0, 0, 0, 0, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 262, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 0, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	0, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 400, 0, 380, 522,
	523, 322, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 1767, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 370, 274,
	0, 0, 433, 0, 215, 0, 490, 261, 381, 378,
	529, 289, 280, 276, 259, 323, 389, 431, 511, 425,
	0, 374, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 257, 331, 214, 416, 501, 293, 0, 0,
	0, 0, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	355, 364, 363, 344, 345, 347, 349, 354, 361, 367,
	0, 0, 0, 0, 0, 272, 327, 279, 271, 526,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 405, 264, 0, 0, 457,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 336, 210, 234, 0, 0, 415, 465,
	477, 0, 0, 0, 262, 0, 475, 429, 546, 242,
	291, 462, 435, 473, 445, 294, 0, 0, 474, 376,
	531, 455, 543, 570, 571, 270, 409, 555, 515, 564,
	597, 235, 267, 423, 508, 549, 497, 401, 527, 528,
	335, 496, 302, 213, 373, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	0, 635, 636, 576, 233, 483, 375, 251, 240, 533,
	552, 296, 460, 439, 440, 578, 592, 579, 581, 582,
	222, 510, 541, 248, 487, 0, 0, 599, 256, 507,
	224, 538, 506, 397, 332, 333, 223, 0, 461, 275,
	300, 0, 0, 265, 418, 535, 536, 263, 600, 237,
	563, 229, 0, 562, 411, 530, 539, 398, 387, 228,
	537, 396, 386, 340, 359, 360, 287, 313, 452, 379,
	453, 312, 314, 407, 406, 408, 217, 550, 0, 218,
	0, 502, 551, 601, 243, 244, 246, 0, 286, 290,
	298, 301, 309, 310, 319, 371, 422, 451, 447, 456,
	0, 525, 544, 556, 568, 574, 575, 577, 583, 584,
	585, 587, 593, 591, 588, 589, 590, 586, 580, 410,
	317, 498, 339, 377, 0, 0, 428, 476, 249, 548,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 388, 489, 545, 341, 353, 356,
	346, 365, 0, 366, 342, 343, 348, 350, 351, 352,
	357, 358, 362, 368, 258, 220, 394, 402, 524, 318,
	225, 226, 227, 517, 518, 519, 520, 560, 561, 565,
	466, 467, 468, 469, 299, 554, 315, 472, 471, 337,
	338, 383, 454, 0, 209, 230, 372, 0, 458, 295,
	598, 559, 553, 216, 232, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 212,
	219, 231, 241, 245, 252, 268, 283, 285, 292, 305,
	316, 324, 325, 328, 334, 384, 390, 391, 392, 393,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 441, 442, 444, 446, 448, 459, 464, 478,
	479, 480, 481, 482, 485, 486, 491, 492, 493, 494,
	495, 503, 504, 509, 532, 534, 547, 566, 572, 484,
	307, 308, 449, 450, 320, 321, 595, 596, 306, 542,
	573, 540, 594, 567, 443, 382, 0, 0, 557, 0,
	385, 288, 311, 326, 0, 558, 505, 236, 470, 297,
	260, 0, 0, 221, 255, 239, 266, 281, 284, 330,
	395, 403, 432, 437, 303, 278, 253, 463, 250, 488,
	512, 513, 514, 516, 399, 273, 436, 400, 0, 380,
	522, 523, 322, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 370,
	274, 0, 0, 433, 0, 215, 0, 490, 261, 381,
	378, 529, 289, 280, 276, 259, 323, 389, 431, 511,
	425, 0, 374, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 257, 331, 214, 416, 501, 293, 0,
	1742, 0, 0, 0, 697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 254, 0, 0,
	0, 355, 364, 363, 344, 345, 347, 349, 354, 361,
	367, 0, 0, 0, 0, 0, 272, 327, 279, 271,
	526, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 405, 264, 0, 0,
	457, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 336, 210, 234, 0, 0, 415,
	465, 477, 0, 0, 0, 262, 0, 475, 429, 546,
	242, 291, 462, 435, 473, 445, 294, 0, 0, 474,
	376, 531, 455, 543, 570, 571, 270, 409, 555, 515,
	564, 597, 235, 267, 423, 508, 549, 497, 401, 527,
	528, 335, 496, 302, 213, 373, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 635, 636, 576, 233, 483, 375, 251, 240,
	533, 552, 296, 460, 439, 440, 578, 592, 579, 581,
	582, 222, 510, 541, 248, 487, 0, 0, 599, 256,
	507, 224, 538, 506, 397, 332, 333, 223, 0, 461,
	275, 300, 0, 0, 265, 418, 535, 536, 263, 600,
	237, 563, 229, 0, 562, 411, 530, 539, 398, 387,
	228, 537, 396, 386, 340, 359, 360, 287, 313, 452,
	379, 453, 312, 314, 407, 406, 408, 217, 550, 0,
	218, 0, 502, 551, 601, 243, 244, 246, 0, 286,
	290, 298, 301, 309, 310, 319, 371, 422, 451, 447,
	456, 0, 525, 544, 556, 568, 574, 575, 577, 583,
	584, 585, 587, 593, 591, 588, 589, 590, 586, 580,
	410, 317, 498, 339, 377, 0, 0, 428, 476, 249,
	548, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 388, 489, 545, 341, 353,
	356, 346, 365, 0, 366, 342, 343, 348, 350, 351,
	352, 357, 358, 362, 368, 258, 220, 394, 402, 524,
	318, 225, 226, 227, 517, 518, 519, 520, 560, 561,
	565, 466, 467, 468, 469, 299, 554, 315, 472, 471,
	337, 338, 383, 454, 0, 209, 230, 372, 0, 458,
	295, 598, 559, 553, 216, 232, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	212, 219, 231, 241, 245, 252, 268, 283, 285, 292,
	305, 316, 324, 325, 328, 334, 384, 390, 391, 392,
	393, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 441, 442, 444, 446, 448, 459, 464,
	478, 479, 480, 481, 482, 485, 486, 491, 492, 493,
	494, 495, 503, 504, 509, 532, 534, 547, 566, 572,
	484, 307, 308, 449, 450, 320, 321, 595, 596, 306,
	542, 573, 540, 594, 567, 443, 382, 0, 0, 557,
	0, 385, 288, 311, 326, 0, 558, 505, 236, 470,
	297, 260, 0, 0, 221, 255, 239, 266, 281, 284,
	330, 395, 403, 432, 437, 303, 278, 253, 463, 250,
	488, 512, 513, 514, 516, 399, 273, 436, 400, 0,
	380, 522, 523, 322, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 1636, 277, 0, 0, 0, 0,
	370, 274, 0, 0, 433, 0, 215, 0, 490, 261,
	381, 378, 529, 289, 280, 276, 259, 323, 389, 431,
	511, 425, 0, 374, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 257, 331, 214, 416, 501, 293,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 355, 364, 363, 344, 345, 347, 349, 354,
	361, 367, 0, 0, 0, 0, 0, 272, 327, 279,
	271, 526, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 405, 264, 0,
	0, 457, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 336, 210, 234, 0, 0,
	415, 465, 477, 0, 0, 0, 262, 0, 475, 429,
	546, 242, 291, 462, 435, 473, 445, 294, 0, 0,
	474, 376, 531, 455, 543, 570, 571, 270, 409, 555,
	515, 564, 597, 235, 267, 423, 508, 549, 497, 401,
	527, 528, 335, 496, 302, 213, 373, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 0, 0, 635, 636, 576, 233, 483, 375, 251,
	240, 533, 552, 296, 460, 439, 440, 578, 592, 579,
	581, 582, 222, 510, 541, 248, 487, 0, 0, 599,
	256, 507, 224, 538, 506, 397, 332, 333, 223, 0,
	461, 275, 300, 0, 0, 265, 418, 535, 536, 263,
	600, 237, 563, 229, 0, 562, 411, 530, 539, 398,
	387, 228, 537, 396, 386, 340, 359, 360, 287, 313,
	452, 379, 453, 312, 314, 407, 406, 408, 217, 550,
	0, 218, 0, 502, 551, 601, 243, 244, 246, 0,
	286, 290, 298, 301, 309, 310, 319, 371, 422, 451,
	447, 456, 0, 525, 544, 556, 568, 574, 575, 577,
	583, 584, 585, 587, 593, 591, 588, 589, 590, 586,
	580, 410, 317, 498, 339, 377, 0, 0, 428, 476,
	249, 548, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 388, 489, 545, 341,
	353, 356, 346, 365, 0, 366, 342, 343, 348, 350,
	351, 352, 357, 358, 362, 368, 258, 220, 394, 402,
	524, 318, 225, 226, 227, 517, 518, 519, 520, 560,
	561, 565, 466, 467, 468, 469, 299, 554, 315, 472,
	471, 337, 338, 383, 454, 0, 209, 230, 372, 0,
	458, 295, 598, 559, 553, 216, 232, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 212, 219, 231, 241, 245, 252, 268, 283, 285,
	292, 305, 316, 324, 325, 328, 334, 384, 390, 391,
	392, 393, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 441, 442, 444, 446, 448, 459,
	464, 478, 479, 480, 481, 482, 485, 486, 491, 492,
	493, 494, 495, 503, 504, 509, 532, 534, 547, 566,
	572, 484, 307, 308, 449, 450, 320, 321, 595, 596,
	306, 542, 573, 540, 594, 567, 443, 382, 0, 0,
	557, 0, 385, 288, 311, 326, 0, 558, 505, 236,
	470, 297, 260, 0, 0, 221, 255, 239, 266, 281,
	284, 330, 395, 403, 432, 437, 303, 278, 253, 463,
	250, 488, 512, 513, 514, 516, 399, 273, 436, 400,
	0, 380, 522, 523, 322, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 370, 274, 0, 0, 433, 0, 215, 0, 490,
	261, 381, 378, 529, 289, 280, 276, 259, 323, 389,
	431, 511, 425, 0, 374, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 257, 331, 214, 416, 501,
	293, 0, 105, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 254,
	0, 0, 0, 355, 364, 363, 344, 345, 347, 349,
	354, 361, 367, 0, 0, 0, 0, 0, 272, 327,
	279, 271, 526, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 405, 264,
	0, 0, 457, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 336, 210, 234, 0,
	0, 415, 465, 477, 0, 0, 0, 262, 0, 475,
	429, 546, 242, 291, 462, 435, 473, 445, 294, 0,
	0, 474, 376, 531, 455, 543, 570, 571, 270, 409,
	555, 515, 564, 597, 235, 267, 423, 508, 549, 497,
	401, 527, 528, 335, 496, 302, 213, 373, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 0, 0, 635, 636, 576, 233, 483, 375,
	251, 240, 533, 552, 296, 460, 439, 440, 578, 592,
	579, 581, 582, 222, 510, 541, 248, 487, 0, 0,
	599, 256, 507, 224, 538, 506, 397, 332, 333, 223,
	0, 461, 275, 300, 0, 0, 265, 418, 535, 536,
	263, 600, 237, 563, 229, 0, 562, 411, 530, 539,
	398, 387, 228, 537, 396, 386, 340, 359, 360, 287,
	313, 452, 379, 453, 312, 314, 407, 406, 408, 217,
	550, 0, 218, 0, 502, 551, 601, 243, 244, 246,
	0, 286, 290, 298, 301, 309, 310, 319, 371, 422,
	451, 447, 456, 0, 525, 544, 556, 568, 574, 575,
	577, 583, 584, 585, 587, 593, 591, 588, 589, 590,
	586, 580, 410, 317, 498, 339, 377, 0, 0, 428,
	476, 249, 548, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 388, 489, 545,
	341, 353, 356, 346, 365, 0, 366, 342, 343, 348,
	350, 351, 352, 357, 358, 362, 368, 258, 220, 394,
	402, 524, 318, 225, 226, 227, 517, 518, 519, 520,
	560, 561, 565, 466, 467, 468, 469, 299, 554, 315,
	472, 471, 337, 338, 383, 454, 0, 209, 230, 372,
	0, 458, 295, 598, 559, 553, 216, 232, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 212, 219, 231, 241, 245, 252, 268, 283,
	285, 292, 305, 316, 324, 325, 328, 334, 384, 390,
	391, 392, 393, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 441, 442, 444, 446, 448,
	459, 464, 478, 479, 480, 481, 482, 485, 486, 491,
	492, 493, 494, 495, 503, 504, 509, 532, 534, 547,
	566, 572, 484, 307, 308, 449, 450, 320, 321, 595,
	596, 306, 542, 573, 540, 594, 567, 443, 382, 0,
	0, 557, 0, 385, 288, 311, 326, 0, 558, 505,
	236, 470, 297, 260, 0, 0, 221, 255, 239, 266,
	281, 284, 330, 395, 403, 432, 437, 303, 278, 253,
	463, 250, 488, 512, 513, 514, 516, 399, 273, 436,
	400, 0, 380, 522, 523, 322, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 370, 274, 0, 0, 433, 0, 215, 0,
	490, 261, 381, 378, 529, 289, 280, 276, 259, 323,
	389, 431, 511, 425, 0, 374, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 257, 331, 214, 416,
	501, 293, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 355, 364, 363, 344, 345, 347,
	349, 354, 361, 367, 0, 0, 0, 0, 0, 272,
	327, 279, 271, 526, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 304, 0, 405,
	264, 0, 0, 457, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 336, 210, 234,
	0, 0, 415, 465, 477, 0, 0, 0, 262, 0,
	475, 429, 546, 242, 291, 462, 435, 473, 445, 294,
	0, 0, 474, 376, 531, 455, 543, 570, 571, 270,
	409, 555, 515, 564, 597, 235, 267, 423, 508, 549,
	497, 401, 527, 528, 335, 496, 302, 213, 373, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 0, 0, 635, 636, 576, 233, 483,
	375, 251, 240, 533, 552, 296, 460, 439, 440, 578,
	592, 579, 581, 582, 222, 510, 541, 248, 487, 0,
	0, 599, 256, 507, 224, 538, 506, 397, 332, 333,
	223, 0, 461, 275, 300, 0, 0, 265, 418, 535,
	536, 263, 600, 237, 563, 229, 0, 562, 411, 530,
	539, 398, 387, 228, 537, 396, 386, 340, 359, 360,
	287, 313, 452, 379, 453, 312, 314, 407, 406, 408,
	217, 550, 0, 218, 0, 502, 551, 601, 243, 244,
	246, 0, 286, 290, 298, 301, 309, 310, 319, 371,
	422, 451, 447, 456, 0, 525, 544, 556, 568, 574,
	575, 577, 583, 584, 585, 587, 593, 591, 588, 589,
	590, 586, 580, 410, 317, 498, 339, 377, 0, 0,
	428, 476, 249, 548, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 388, 489,
	545, 341, 353, 356, 346, 365, 0, 366, 342, 343,
	348, 350, 351, 352, 357, 358, 362, 368, 258, 220,
	394, 402, 524, 318, 225, 226, 227, 517, 518, 519,
	520, 560, 561, 565, 466, 467, 468, 469, 299, 554,
	315, 472, 471, 337, 338, 383, 454, 0, 209, 230,
	372, 0, 458, 295, 598, 559, 553, 216, 232, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 212, 219, 231, 241, 245, 252, 268,
	283, 285, 292, 305, 316, 324, 325, 328, 334, 384,
	390, 391, 392, 393, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 441, 442, 444, 446,
	448, 459, 464, 478, 479, 480, 481, 482, 485, 486,
	491, 492, 493, 494, 495, 503, 504, 509, 532, 534,
	547, 566, 572, 484, 307, 308, 449, 450, 320, 321,
	595, 596, 1383, 542, 573, 540, 594, 567, 443, 382,
	0, 0, 557, 0, 385, 288, 311, 326, 0, 558,
	505, 236, 470, 297, 260, 0, 0, 221, 255, 239,
	266, 281, 284, 330, 395, 403, 432, 437, 303, 278,
	253, 463, 250, 488, 512, 513, 514, 516, 399, 273,
	436, 400, 0, 380, 522, 523, 322, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 370, 274, 0, 0, 433, 0, 215,
	0, 490, 261, 381, 378, 529, 289, 280, 276, 259,
	323, 389, 431, 511, 425, 0, 374, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 257, 331, 214,
	416, 501, 293, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 254, 0, 0, 0, 355, 364, 363, 344, 345,
	347, 349, 354, 361, 367, 0, 0, 0, 0, 0,
	272, 327, 279, 271, 526, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	405, 264, 0, 0, 457, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 336, 210,
	234, 0, 0, 415, 465, 477, 0, 0, 0, 262,
	0, 475, 429, 546, 242, 291, 462, 435, 473, 445,
	294, 0, 0, 474, 376, 531, 455, 543, 570, 571,
	270, 409, 555, 515, 564, 597, 235, 267, 423, 508,
	549, 497, 401, 527, 528, 335, 496, 302, 213, 373,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 0, 635, 636, 576, 233,
	483, 375, 251, 240, 533, 552, 296, 460, 439, 440,
	578, 592, 579, 581, 582, 222, 510, 541, 248, 487,
	0, 0, 599, 256, 507, 224, 538, 506, 397, 332,
	333, 223, 0, 461, 275, 300, 0, 0, 265, 418,
	535, 536, 263, 600, 237, 563, 229, 0, 562, 411,
	530, 539, 398, 387, 228, 537, 396, 386, 340, 359,
	360, 287, 313, 452, 379, 453, 312, 314, 407, 406,
	408, 217, 550, 0, 218, 0, 502, 551, 601, 243,
	244, 246, 0, 286, 290, 298, 301, 309, 310, 319,
	371, 422, 451, 447, 456, 0, 525, 544, 556, 568,
	574, 575, 577, 583, 584, 585, 587, 593, 591, 588,
	589, 590, 586, 580, 410, 317, 498, 339, 377, 0,
	0, 428, 476, 249, 548, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 388,
	489, 545, 341, 353, 356, 346, 365, 0, 366, 342,
	343, 348, 350, 351, 352, 357, 358, 362, 368, 258,
	220, 394, 402, 524, 318, 225, 226, 227, 517, 518,
	519, 520, 560, 561, 565, 466, 467, 468, 469, 299,
	554, 315, 472, 471, 337, 338, 383, 454, 0, 209,
	230, 372, 0, 458, 295, 598, 559, 553, 216, 232,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 0, 211, 212, 219, 231, 241, 245, 252,
	268, 283, 285, 292, 305, 316, 324, 325, 328, 334,
	384, 390, 391, 392, 393, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 441, 442, 444,
	446, 448, 459, 464, 478, 479, 480, 481, 482, 485,
	486, 491, 492, 493, 494, 495, 503, 504, 509, 532,
	534, 547, 566, 572, 484, 307, 308, 449, 450, 320,
	321, 595, 596, 306, 542, 573, 540, 594, 567, 443,
	382, 0, 0, 557, 0, 385, 288, 311, 326, 0,
	558, 505, 236, 470, 297, 260, 0, 0, 221, 255,
	239, 266, 281, 284, 330, 395, 403, 432, 437, 303,
	278, 253, 463, 250, 488, 512, 513, 514, 516, 399,
	273, 436, 400, 0, 380, 522, 523, 322, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 370, 274, 0, 0, 433, 0,
	215, 0, 490, 261, 381, 378, 529, 289, 280, 276,
	259, 323, 389, 431, 511, 425, 0, 374, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 257, 331,
	214, 416, 501, 293, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 355, 364, 363, 344,
	345, 347, 349, 354, 361, 367, 0, 0, 0, 0,
	0, 272, 327, 279, 271, 526, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 405, 264, 0, 0, 457, 0, 639, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 336,
	210, 234, 0, 0, 415, 465, 477, 0, 0, 0,
	262, 0, 475, 429, 546, 242, 291, 462, 435, 473,
	445, 294, 0, 0, 474, 376, 531, 455, 543, 570,
	571, 270, 409, 555, 515, 564, 597, 235, 267, 423,
	508, 549, 497, 401, 527, 528, 335, 496, 302, 213,
	373, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 0, 0, 635, 636, 576,
	233, 483, 375, 251, 240, 533, 552, 296, 460, 439,
	440, 578, 592, 579, 581, 582, 222, 510, 541, 248,
	487, 0, 0, 599, 256, 507, 224, 538, 506, 397,
	332, 333, 223, 0, 461, 275, 300, 0, 0, 265,
	418, 535, 536, 263, 600, 237, 563, 229, 0, 562,
	411, 530, 539, 398, 387, 228, 537, 396, 386, 340,
	359, 360, 287, 313, 452, 379, 453, 312, 314, 407,
	406, 408, 217, 550, 0, 218, 0, 502, 551, 601,
	243, 244, 246, 0, 286, 290, 298, 301, 309, 310,
	319, 371, 422, 451, 447, 456, 0, 525, 544, 556,
	568, 574, 575, 577, 583, 584, 585, 587, 593, 591,
	588, 589, 590, 586, 580, 410, 317, 498, 339, 377,
	0, 0, 428, 476, 249, 548, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	388, 489, 545, 341, 353, 356, 346, 365, 0, 366,
	342, 343, 348, 350, 351, 352, 357, 358, 362, 368,
	258, 220, 394, 402, 524, 318, 225, 226, 227, 517,
	518, 519, 520, 560, 561, 565, 466, 467, 468, 469,
	299, 554, 315, 472, 471, 337, 338, 383, 454, 0,
	209, 230, 372, 0, 458, 295, 598, 559, 553, 216,
	232, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 212, 219, 231, 241, 245,
	252, 268, 283, 285, 292, 305, 316, 324, 325, 328,
	334, 384, 390, 391, 392, 393, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 441, 442,
	444, 446, 448, 459, 464, 478, 479, 480, 481, 482,
	485, 486, 491, 492, 493, 494, 495, 503, 504, 509,
	532, 534, 547, 566, 572, 484, 307, 308, 449, 450,
	320, 321, 595, 596, 306, 542, 573, 540, 594, 567,
	443, 382, 0, 0, 557, 0, 385, 288, 311, 326,
	0, 558, 505, 236, 470, 297, 260, 0, 0, 221,
	255, 239, 266, 281, 284, 330, 395, 403, 432, 437,
	303, 278, 253, 463, 250, 488, 512, 513, 514, 516,
	399, 273, 436, 400, 0, 380, 522, 523, 322, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 370, 274, 0, 0, 433,
	0, 215, 0, 490, 261, 381, 378, 529, 289, 280,
	276, 259, 323, 389, 431, 511, 425, 0, 374, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 257,
	331, 214, 416, 501, 293, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 254, 0, 0, 0, 355, 364, 363,
	344, 345, 347, 349, 354, 361, 367, 0, 0, 0,
	0, 0, 272, 327, 279, 271, 526, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 405, 264, 0, 0, 457, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	336, 210, 234, 0, 0, 415, 465, 477, 0, 0,
	0, 262, 0, 475, 429, 546, 242, 291, 462, 435,
	473, 445, 294, 0, 0, 474, 376, 531, 455, 543,
	570, 571, 270, 409, 555, 515, 564, 597, 235, 267,
	423, 508, 549, 497, 401, 527, 528, 335, 496, 302,
	213, 373, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 0, 0, 635, 636,
	576, 233, 483, 375, 251, 240, 533, 552, 296, 460,
	439, 440, 578, 592, 579, 581, 582, 222, 510, 541,
	248, 487, 0, 0, 599, 256, 507, 224, 538, 506,
	397, 332, 333, 223, 0, 461, 275, 300, 0, 0,
	265, 418, 535, 536, 263, 600, 237, 563, 229, 0,
	562, 411, 530, 539, 398, 387, 228, 537, 396, 386,
	340, 359, 360, 287, 313, 452, 379, 453, 312, 314,
	407, 406, 408, 217, 550, 0, 218, 0, 502, 551,
	601, 243, 244, 246, 0, 286, 290, 298, 301, 309,
	310, 319, 371, 422, 451, 447, 456, 0, 525, 544,
	556, 568, 574, 575, 577, 583, 584, 585, 587, 593,
	591, 588, 589, 590, 586, 580, 410, 317, 498, 339,
	377, 0, 0, 428, 476, 249, 548, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 388, 489, 545, 341, 353, 356, 346, 365, 0,
	366, 342, 343, 348, 350, 351, 352, 357, 358, 362,
	368, 258, 220, 394, 402, 524, 318, 225, 226, 227,
	517, 518, 519, 520, 560, 561, 565, 466, 467, 468,
	469, 299, 554, 315, 472, 471, 337, 338, 383, 454,
	0, 209, 230, 372, 0, 458, 295, 598, 559, 553,
	216, 232, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 212, 219, 231, 241,
	245, 252, 268, 283, 285, 292, 305, 316, 324, 325,
	328, 334, 384, 390, 391, 392, 393, 3741, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 441,
	442, 444, 446, 448, 459, 464, 478, 479, 480, 481,
	482, 485, 486, 491, 492, 493, 494, 495, 503, 504,
	509, 532, 534, 547, 566, 572, 484, 307, 308, 449,
	450, 320, 321, 595, 596, 306, 542, 573, 540, 594,
	567, 443, 382, 0, 0, 557, 0, 385, 288, 311,
	326, 0, 558, 505, 236, 470, 297, 260, 0, 0,
	221, 255, 239, 266, 281, 284, 330, 395, 403, 432,
	437, 303, 278, 253, 463, 250, 488, 512, 513, 514,
	516, 399, 273, 436, 400, 0, 380, 522, 523, 322,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 370, 274, 0, 0,
	433, 0, 215, 0, 490, 261, 381, 378, 529, 289,
	280, 276, 259, 323, 389, 431, 511, 425, 0, 374,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	257, 331, 214, 416, 501, 293, 0, 0, 0, 0,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 355, 364,
	363, 344, 345, 347, 349, 354, 361, 367, 0, 0,
	0, 0, 0, 272, 327, 279, 271, 526, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 405, 264, 0, 0, 457, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 336, 210, 234, 0, 0, 415, 465, 477, 0,
	0, 0, 262, 0, 475, 429, 546, 242, 291, 462,
	435, 473, 445, 294, 0, 0, 474, 376, 531, 455,
	543, 570, 571, 270, 409, 555, 515, 564, 597, 235,
	267, 423, 508, 549, 497, 401, 527, 528, 335, 496,
	302, 213, 373, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 0, 0, 635,
	636, 576, 233, 483, 375, 251, 240, 533, 552, 296,
	460, 439, 440, 578, 592, 579, 581, 582, 222, 510,
	541, 248, 487, 0, 0, 599, 256, 507, 224, 538,
	506, 397, 332, 333, 223, 0, 461, 275, 300, 0,
	0, 265, 418, 535, 536, 263, 600, 237, 563, 229,
	0, 562, 411, 530, 539, 398, 387, 228, 537, 396,
	386, 340, 359, 360, 287, 313, 452, 379, 453, 312,
	314, 407, 406, 408, 217, 550, 0, 218, 0, 502,
	551, 601, 243, 244, 246, 0, 286, 290, 298, 301,
	309, 310, 319, 371, 422, 451, 447, 456, 0, 525,
	544, 556, 568, 574, 575, 577, 583, 584, 585, 587,
	593, 591, 588, 589, 590, 586, 580, 410, 317, 498,
	339, 377, 0, 0, 428, 476, 249, 548, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 388, 489, 545, 341, 353, 356, 346, 365,
	0, 366, 342, 343, 348, 350, 351, 352, 357, 358,
	362, 368, 258, 220, 394, 402, 524, 318, 225, 226,
	227, 517, 518, 519, 520, 560, 561, 565, 466, 467,
	468, 469, 299, 554, 315, 472, 471, 337, 338, 383,
	454, 0, 209, 230, 372, 0, 458, 295, 598, 559,
	553, 216, 232, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 212, 219, 231,
	241, 245, 252, 268, 283, 285, 292, 305, 316, 324,
	325, 328, 334, 384, 390, 391, 392, 393, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	441, 442, 444, 446, 448, 459, 464, 478, 479, 480,
	481, 482, 485, 486, 491, 492, 493, 494, 495, 503,
	504, 509, 532, 534, 547, 566, 572, 484, 307, 308,
	449, 450, 320, 321, 595, 596, 306, 542, 573, 540,
	594, 567, 443, 382, 0, 0, 557, 0, 385, 288,
	311, 326, 0, 558, 505, 236, 470, 297, 260, 0,
	0, 221, 255, 239, 266, 281, 284, 330, 395, 403,
	432, 437, 303, 278, 253, 463, 250, 488, 512, 513,
	514, 516, 399, 273, 436, 400, 0, 380, 522, 523,
	322, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 370, 274, 0,
	0, 433, 0, 215, 0, 490, 261, 381, 378, 529,
	289, 280, 276, 259, 323, 389, 431, 511, 425, 0,
	374, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 257, 331, 214, 416, 501, 293, 0, 0, 0,
	0, 0, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 254, 0, 0, 0, 355,
	364, 363, 344, 345, 347, 349, 354, 361, 367, 0,
	0, 0, 0, 0, 272, 327, 279, 271, 526, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 405, 264, 0, 0, 457, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 336, 210, 234, 0, 0, 415, 465, 477,
	0, 0, 0, 262, 0, 475, 429, 546, 242, 291,
	462, 435, 473, 445, 294, 0, 0, 474, 376, 531,
	455, 543, 570, 571, 270, 409, 555, 515, 564, 597,
	235, 267, 423, 508, 549, 497, 401, 527, 528, 335,
	496, 302, 213, 373, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 0, 0,
	635, 636, 576, 233, 483, 375, 251, 240, 533, 552,
	296, 460, 439, 440, 578, 592, 579, 581, 582, 222,
	510, 541, 248, 487, 0, 0, 599, 256, 507, 224,
	538, 506, 397, 332, 333, 223, 0, 461, 275, 300,
	0, 0, 265, 418, 535, 536, 263, 600, 237, 563,
	229, 0, 562, 411, 530, 539, 398, 387, 228, 537,
	396, 386, 340, 359, 360, 287, 313, 452, 379, 453,
	312, 314, 407, 406, 408, 217, 550, 0, 218, 0,
	502, 551, 601, 243, 244, 246, 0, 286, 290, 298,
	301, 309, 310, 319, 371, 422, 451, 447, 456, 0,
	525, 544, 556, 568, 574, 575, 577, 583, 584, 585,
	587, 593, 591, 588, 589, 590, 586, 580, 410, 317,
	498, 339, 377, 0, 0, 428, 476, 249, 548, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 388, 489, 545, 341, 353, 356, 346,
	365, 0, 366, 342, 343, 348, 350, 351, 352, 357,
	358, 362, 368, 258, 220, 394, 402, 524, 318, 225,
	226, 227, 517, 518, 519, 520, 560, 561, 565, 466,
	467, 468, 469, 299, 554, 315, 472, 471, 337, 338,
	383, 454, 0, 209, 230, 372, 0, 458, 295, 598,
	559, 553, 216, 232, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 212, 219,
	231, 241, 245, 252, 268, 283, 285, 292, 305, 316,
	324, 325, 328, 334, 384, 390, 391, 392, 393, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 441, 442, 444, 446, 448, 459, 464, 478, 479,
	480, 481, 482, 485, 486, 491, 492, 493, 494, 495,
	503, 504, 509, 532, 534, 547, 566, 572, 484, 307,
	308, 449, 450, 320, 321, 595, 596, 306, 542, 573,
	540, 594, 567, 443, 382, 0, 0, 557, 0, 385,
	288, 311, 326, 0, 558, 505, 236, 470, 297, 260,
	0, 0, 221, 255, 239, 266, 281, 284, 330, 395,
	403, 432, 437, 303, 278, 253, 463, 250, 488, 512,
	513, 514, 516, 399, 273, 436, 400, 0, 380, 522,
	523, 322, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 370, 274,
	0, 0, 433, 0, 215, 0, 490, 261, 381, 378,
	529, 289, 280, 276, 259, 323, 389, 431, 511, 425,
	0, 374, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 257, 331, 214, 416, 501, 293, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	355, 364, 363, 344, 345, 347, 349, 354, 361, 367,
	0, 0, 0, 0, 0, 272, 327, 279, 271, 526,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 405, 264, 0, 0, 457,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 336, 210, 234, 0, 0, 415, 465,
	477, 0, 0, 0, 262, 0, 475, 429, 546, 242,
	291, 462, 435, 473, 445, 294, 0, 0, 474, 376,
	531, 455, 543, 570, 571, 270, 409, 555, 515, 564,
	597, 235, 267, 423, 508, 549, 497, 401, 527, 528,
	335, 496, 302, 213, 373, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 0,
	0, 635, 636, 576, 233, 483, 375, 251, 240, 533,
	552, 296, 460, 439, 440, 578, 592, 579, 581, 582,
	222, 510, 541, 248, 487, 0, 0, 599, 256, 507,
	224, 538, 506, 397, 332, 333, 223, 0, 461, 275,
	300, 0, 0, 265, 418, 535, 536, 263, 600, 237,
	563, 229, 0, 562, 411, 530, 539, 398, 387, 228,
	537, 396, 386, 340, 359, 360, 287, 313, 452, 379,
	453, 312, 314, 407, 406, 408, 217, 550, 0, 218,
	0, 502, 551, 601, 243, 244, 246, 0, 286, 290,
	298, 301, 309, 310, 319, 371, 422, 451, 447, 456,
	0, 525, 544, 556, 568, 574, 575, 577, 583, 584,
	585, 587, 593, 591, 588, 589, 590, 586, 580, 410,
	317, 498, 339, 377, 0, 0, 428, 476, 249, 548,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 388, 489, 545, 341, 353, 356,
	346, 365, 0, 366, 342, 343, 348, 350, 351, 352,
	357, 358, 362, 368, 258, 220, 394, 402, 524, 318,
	225, 226, 227, 517, 518, 519, 520, 560, 561, 565,
	466, 467, 468, 469, 299, 554, 315, 472, 471, 337,
	338, 383, 454, 0, 209, 230, 372, 0, 458, 295,
	598, 559, 553, 216, 232, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 212,
	219, 231, 241, 245, 252, 268, 283, 285, 292, 305,
	316, 324, 325, 328, 334, 384, 390, 391, 392, 393,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 441, 442, 444, 446, 448, 459, 464, 478,
	479, 480, 481, 482, 485, 486, 491, 492, 493, 494,
	495, 503, 504, 509, 532, 534, 547, 566, 572, 484,
	307, 308, 449, 450, 320, 321, 595, 596, 306, 542,
	573, 540, 594, 567, 443, 382, 0, 0, 557, 0,
	385, 288, 311, 326, 0, 558, 505, 236, 470, 297,
	260, 0, 0, 221, 255, 239, 266, 281, 284, 330,
	395, 403, 432, 437, 303, 278, 253, 463, 250, 488,
	512, 513, 514, 516, 399, 273, 436, 0, 0, 380,
	522, 523, 322,
}

var yyPact = [...]int{
	-1000, -1000, 391, -1000, -478, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2435, 2471, -1000, -1000, -1000, -1000, 2697, -1000, 1091, 2195,
	-1000, 2409, 5953, -1000, 48162, 663, -1000, 45398, 654, 646,
	154, -134, 171, 30196, -1000, 181, -1000, 166, 46780, 172,
	-1000, -1000, -1000, -1000, -372, 18447, 2361, 53, 51, 48162,
	-1000, -1000, -1000, -1000, 2656, 2163, -1000, 380, -1000, -1000,
	-1000, -1000, -1000, -1000, 44707, -1000, 1119, -1000, -1000, 2413,
	2403, 2707, 843, 2350, -1000, 2537, 2163, -1000, 18447, 2608,
	2470, 17756, 17756, 549, -1000, -1000, 284, -1000, -1000, -1000,
	2712, 25359, 48162, -1000, 32960, 868, -1000, 2409, -1000, -1000,
	-1000, 114, -1000, 445, 2065, -1000, 2062, -1000, 1177, 1301,
	472, 592, 585, 471, 466, 463, 462, 461, 453, 452,
	451, 489, -1000, 914, 914, -165, -170, 2288, 548, 545,
	545, 851, 600, 2387, 2384, -1000, -1000, 914, 914, 914,
	375, 914, 914, 914, 914, 401, 400, 914, 914, 914,
	914, 914, 914, 914, 914, 914, 914, 914, 914, 914,
	914, 914, 914, 914, 441, 2409, 368, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48162, 714, 48162,
	-1000, 755, 48162, 48162, -1000, 1401, 1357, -1000, -1000, 364,
	691, 990, -1000, -1000, 990, 70, 990, 990, 990, 990,
	221, 734, 46, -1000, 213, 373, 199, 353, 1000, -1000,
	-1000, 327, 1000, 988, 1000, 1941, 1940, -1000, 855, 351,
	189, -1000, 990, 990, 990, -1000, -1000, 11512, 179, 11512,
	11512, -1000, 2385, -1000, -1000, -1000, -1000, -1000, 1186, -1000,
	-1000, -1000, -1000, -48, 590, -1000, -1000, -1000, -1000, 46780,
	44016, 271, -1000, -1000, 159, -1000, -1000, 1770, 1316, 18447,
	1332, -1000, 1439, 814, -1000, -1000, -1000, -1000, -1000, 722,
	-1000, 19138, 19138, 19138, 19138, -1000, -1000, 2070, 43325, 2070,
	2070, 19138, 2070, -1000, 19138, 2070, 2070, 2070, 18447, 2070,
	2070, 2070, 2070, -1000, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, -1000, -1000, -1000, -1000, 2070, 747, 2070, 2070,
	2070, 2070, 2070, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2070, 2070, 2070, 2070, 2070, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21211, 1728, 1725, 1717, -1000, 15683, 2070, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48162, -1000, 2070,
	312, 46780, 46780, 478, 2537, 2163, -1000, 2656, 2587, 380,
	3011, 1812, 1719, 1307, 2163, 2041, 48162, -1000, 2083, -1000,
	-1000, -1000, -1000, 2276, 1528, 1939, -1000, -1000, -1000, -1000,
	1487, 18447, -1000, -1000, 2692, -1000, 22594, 735, 2689, 42634,
	-1000, 549, 549, 2053, 425, -10, -1000, -1000, -1000, -1000,
	958, 29505, -1000, -1000, -1000, -1000, -1000, 1936, 48162, -1000,
	-1000, 4891, 1407, -1000, 2194, -1000, 2565, 1933, -1000, 2118,
	18447, 555, 555, 2206, 644, 1407, 632, 628, 621, -1000,
	-66, -1000, -1000, -1000, -1000, -1000, -1000, 914, 914, 914,
	-1000, 483, 2607, 5953, 4831, -1000, -1000, -1000, 41943, 2193,
	46780, -1000, 2191, -1000, 1036, 667, 743, 743, 46780, -1000,
	-1000, 47471, 1407, 1011, 1009, 1407, 1407, 46780, 46780, -1000,
	41252, -1000, 40561, 39870, 1322, 46780, 39179, 38488, 37797, 37106,
	36415, -1000, 2359, -1000, 2172, -1000, -1000, -1000, 47471, 1407,
	1407, 47471, 46780, 47471, 48162, 1407, -1000, -1000, 355, -1000,
	-1000, 1320, 1318, 1306, 914, 914, 1305, 1926, 1923, 1917,
	914, 914, 1303, 1916, 31578, 1912, 332, 1299, 1294, 1289,
	1419, 1903, 214, 1899, 1366, 1213, 1284, 46780, 2190, 1472,
	1467, 48162, -1000, 322, 907, 799, 716, 705, 956, 2409,
	2354, 2051, 574, 1463, 1457, 637, 1407, 553, 553, 46780,
	-1000, 13603, -1000, 605, -1000, -1000, -1000, 1445, -1000, 1440,
	-1000, 1427, 1420, 48162, 48162, 48162, 48162, 48162, 48162, 48162,
	11512, -1000, 1891, 18447, -1000, 1019, 1000, 1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 990, 48162, 1019, -1000, -1000, -1000,
	1000, 990, 48162, 990, 990, 990, 990, 1000, 1000, 1000,
	990, 48162, 48162, 855, 990, 990, -379, 990, 184, -380,
	-1000, 1878, -1000, -1000, 2287, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11512, 11512,
	-1000, -1000, -1000, -1000, -1000, 2050, -1000, 157, 25, 169,
	-1000, 35724, 371, 953, -1000, 371, -1000, -1000, -1000, 2046,
	35033, -1000, -382, -383, -385, -386, -1000, -1000, -1000, -1000,
	-392, -402, -1000, -1000, -1000, 18447, 18447, 18447, 18447, -207,
	-1000, 1326, 19138, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	177, 1171, 19138, 19138, 19138, 19138, 19138, 19138, 19138, 19138,
	19138, 19138, 19138, 19138, 19138, 19138, 19138, -1000, -1000, 27432,
	7250, 7250, 814, 814, 814, 814, -1000, -130, 2044, 47471,
	-1000, -1000, -1000, 730, 18447, 18447, 814, -1000, 1407, 15683,
	19829, 17756, 17756, 18447, 973, 1316, 47471, 18447, -1000, 1307,
	-1000, -1000, -1000, 1272, -1000, 984, 2382, 2382, 2382, 2382,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	2382, 46780, 46780, 873, 18447, 18447, 18447, 18447, 18447, 18447,
	14300, 18447, 18447, 19138, 18447, 18447, 18447, 1307, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 1307, 18447, 1591, 18447, 18447,
	17756, 12906, 17756, 17756, 17756, 17756, 17756, -1000, -1000, -1000,
	-1000, -1000, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	1307, 18447, 18447, 18447, 18447, 18447, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1727, 1596, 1506, 18447,
	-1000, 2042, -1000, -156, 24668, 18447, 1863, 1861, 2682, 2214,
	46780, -1000, -1000, -1000, 2537, -1000, 2537, 1727, 2289, 17756,
	-1000, -1000, 2565, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1898, -1000, 48162, 2041, 2449, 46780, 2279, 1856, 348,
	-1000, 18447, 18447, 2034, -1000, 1680, 48162, -1000, -207, -1000,
	34342, -1000, -1000, 10815, 48162, 442, 48162, -1000, 23977, 33651,
	276, -1000, -10, 2010, -1000, -3, 18, 14991, 813, -1000,
	-1000, -1000, 2288, 20520, 1921, 813, 82, -1000, -1000, -1000,
	2118, -1000, 2118, 2118, 2118, 2118, 348, 348, 348, 348,
	-1000, -1000, -1000, -1000, -1000, 2188, 2177, -1000, 2118, 2118,
	2118, 2118, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2171,
	2171, 2171, 2165, 2165, 2121, 2121, 529, -1000, 18447, -1000,
	-1000, 343, 32960, 2439, 1282, 1287, 1417, 881, 1415, 322,
	555, 2211, 1407, 1407, 1407, 555, -1000, 1470, 1453, 1449,
	-1000, -470, 2031, -1000, -1000, 2600, -1000, -1000, 1117, 1063,
	1061, 1319, 46780, 238, 423, -1000, 518, -1000, -1000, 32960,
	46780, 1006, 743, 46780, -1000, 46780, -1000, -1000, -1000, -1000,
	1407, -1000, -1000, 2029, -1000, 2030, 1163, 1060, 1094, 1057,
	2029, -1000, -1000, -137, 2029, -1000, 2029, -1000, 2029, -1000,
	2029, -1000, 2029, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 887, 217, -291, 46780, 238, 562, -1000, 560,
	27432, -1000, -1000, -1000, 27432, 27432, -1000, -1000, -1000, -1000,
	1855, 1854, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -452, 48162, -138, 2162, -1000, 291, 950, 414, 450,
	403, 48162, 1201, 2524, 2521, 2519, 2517, 2516, 2515, 2511,
	208, 2505, 2503, 2501, 2500, 2497, 2490, 904, 2489, 2485,
	2484, 2481, 2474, 2472, 2467, 399, 387, 48162, 48162, -1000,
	-1000, 553, 2240, 48162, 2427, 48162, -1000, -1000, -1000, -1000,
	570, 48162, -1000, 363, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1316, 48162, -1000, -1000, 990, 990, -1000, -1000,
	48162, 990, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	990, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 48162, -1000, -1000, -1000, -1000, -48, 155, -1000,
	-1000, 46780, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -78, -1000, 245, 13, 372, -1000, -1000, -1000, -1000,
	-1000, 2509, -1000, 1316, 994, 986, -1000, 2070, -1000, -1000,
	1192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 177, 19138,
	19138, 19138, 1807, 610, 1902, 1494, 1619, 1130, 1130, 1042,
	1042, 818, 818, 818, 818, 818, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1850, -1000, 2070, 47471, 1842, 12906,
	1672, 2087, 1307, 3271, -1000, 1838, -1000, 1838, 1182, 964,
	-1000, 18447, 1307, 3257, -1000, -1000, 1307, 1307, 1307, 18447,
	-1000, -1000, 18447, 18447, 18447, 18447, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 18447, 2024, 2017, 2679,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1242, 1287, 1287, 1287, 1287, 1287, 18447, 2100, -1000,
	-1000, -1000, 1535, 3223, 1794, 3099, 1287, 1287, -1000, 1287,
	2979, 2975, 1307, 1770, 1307, 2015, -1000, 2939, 1287, 2932,
	2865, 2847, 2092, 2831, 2808, 2798, 1287, 1287, 1287, 2078,
	2792, 2779, 2762, 2756, 2719, 2701, 2680, 2674, 2659, 1287,
	-214, 1287, 1307, -1000, -1000, -1000, -1000, -1000, 2651, 2074,
	1307, 2011, 2070, 729, -1000, -1000, 1838, 1307, 1307, 1838,
	1838, 2631, 2560, 2508, 2446, 2415, 2365, 1287, 1287, -1000,
	1287, 2358, 2283, 2037, 2032, 1307, -1000, 1506, 48162, -1000,
	-357, -1000, -25, 768, 2070, -1000, 31578, 1307, -1000, -1000,
	4414, -1000, 1142, -1000, -1000, -1000, 28814, 1967, 2565, -1000,
	-1000, 2070, 1828, -1000, -1000, 348, 71, 28123, 810, 810,
	99, 1316, 1316, 18447, -1000, -1000, -1000, -1000, -1000, -1000,
	728, 2622, 365, 2070, -1000, 2007, 3361, -1000, -1000, -1000,
	2448, 21903, -1000, -1000, 2070, 2070, 48162, 1920, 1851, -1000,
	720, -1000, 1413, 2010, -10, 9, -1000, -1000, -1000, -1000,
	1316, -1000, 1444, 449, 3470, -1000, 517, -1000, -1000, -1000,
	-1000, 2362, 76, -1000, -1000, -1000, 279, 348, -1000, -1000,
	-1000, -1000, -1000, -1000, 1810, 1810, -1000, -1000, -1000, -1000,
	-1000, 1278, -1000, -1000, -1000, -1000, 1277, -1000, -1000, 1270,
	-1000, -1000, 2129, 2250, 343, -1000, -1000, 914, 1793, -1000,
	-1000, 2372, 914, 914, 46780, -1000, -1000, 1821, 2439, -139,
	2422, 2158, 291, 48162, 2239, -1000, 2211, 2211, 2211, 48162,
	-1000, -1000, -1000, -1000, -1000, -1000, -459, 85, 389, -1000,
	-1000, -1000, 732, 46780, 1824, -1000, 236, -1000, 1817, -1000,
	46780, -1000, 1820, 2149, 46780, 46780, -1000, -1000, -1000, 46780,
	2070, -1000, -1000, -1000, -1000, 612, 2404, 298, -1000, -1000,
	-244, -1000, -1000, 238, 236, 47471, 1407, 813, -1000, -1000,
	-1000, -1000, -1000, -455, 1816, 2143, 223, 521, 611, 281,
	350, 48162, 48162, 48162, 48162, 48162, 688, -1000, -1000, 36,
	-1000, -1000, -1000, -1000, 205, -1000, -1000, -1000, -1000, -1000,
	-1000, 205, -1000, -1000, -1000, -1000, -1000, 205, -1000, 1791,
	-1000, -1000, -1000, -1000, 205, -1000, -1000, -1000, 20, -1000,
	-1000, -1000, -1000, 205, -1000, -1000, -1000, -1000, -1000, -1000,
	205, -1000, -1000, -1000, -1000, 352, 558, -1000, 48162, 48162,
	695, -1000, -1000, -1000, -1000, -1000, -1000, 1000, -1000, -1000,
	1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2400, 48162, 11, -425, -1000, -422, 18447,
	-1000, -1000, -1000, -1000, 1561, 587, 1902, 19138, 19138, 19138,
	-1000, -1000, -1000, 1138, 1138, 27432, -1000, 18447, 17756, -1000,
	-1000, 18447, 18447, 960, -1000, 18447, 1099, -1000, 18447, -1000,
	-1000, -1000, 1506, 1287, 1287, 1287, 1287, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1973, 18447, 18447,
	18447, 1307, 318, -1000, -1000, -1000, -1000, -1000, 2672, -1000,
	18447, -1000, 27432, 18447, 18447, 18447, -1000, -1000, -1000, 18447,
	18447, -1000, -1000, 18447, 18447, -1000, 18447, 18447, 18447, -1000,
	18447, 18447, 18447, 18447, -1000, -1000, -1000, -1000, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, -1000, -1000,
	32960, 56, -214, 1591, 56, 1591, -1000, 17756, 12209, -1000,
	-1000, -1000, -1000, -1000, 18447, 18447, 18447, 18447, 18447, 18447,
	-1000, -1000, -1000, 18447, 18447, -1000, 18447, -1000, 18447, -1000,
	-1000, -1000, -1000, -1000, 768, -1000, 743, 743, 743, 46780,
	-1000, -1000, -1000, -1000, 2004, -1000, 2487, -1000, 2296, 2295,
	2662, 2622, -1000, 23977, 2565, -1000, -1000, 46780, -349, -1000,
	2337, 2339, 810, 810, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10118, 2537, 18447, 2238, 47471, 180, -1000, 23286, 46780,
	47471, 23977, 23977, 23977, 23977, 23977, -1000, 2262, 2256, -1000,
	2258, 2254, 2311, 48162, -1000, 1727, 1806, -1000, 18447, 26050,
	1956, 23977, -1000, -1000, 23977, 48162, 9421, -1000, -1000, -6,
	-4, -1000, -1000, -1000, -1000, 2288, -1000, -1000, 3308, 2447,
	2367, -1000, -1000, -1000, -1000, -1000, 1802, -1000, 1787, 2000,
	1785, 1782, 217, -1000, 2125, 2394, 914, 914, -1000, 1264,
	-1000, 1407, 1778, 1777, -1000, -1000, -1000, 2138, -1000, 223,
	633, 604, -1000, 48162, 2237, 2236, 2235, -1000, -468, 1263,
	2137, 2117, 18447, 2134, 2599, 1975, 46780, -1000, -1000, 47471,
	-1000, 187, -1000, 343, 46780, -1000, -1000, -1000, 423, 48162,
	-1000, 3775, -1000, -1000, -1000, 236, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 544, 476, 2127, 1776, 944, -1000, -1000,
	-1000, -1000, 48162, 388, -1000, 2123, 1175, -1000, -1000, 2114,
	-1000, -1000, -1000, -1000, 233, 406, 1773, 194, 1772, 194,
	194, 1769, 194, 1761, 194, 194, -1000, 48162, 673, 2250,
	48162, -1000, -1000, -1000, 990, 990, -1000, -1000, 2393, -1000,
	1407, 1287, 19138, 19138, -1000, 814, 1093, -181, 2118, 2118,
	-1000, 2118, 2121, -1000, 2118, 148, 2118, 147, 2118, -1000,
	-1000, 1307, 1307, 1506, -1000, 2019, 1411, -1000, 1316, 18447,
	2275, -1000, -1000, -1000, -1000, -1000, -72, 2269, 2263, 1287,
	-1000, 2116, 2115, 18447, 1287, 1307, 2013, 1287, 1287, 1287,
	1287, -1000, 1316, 1506, 2202, 1506, 1287, 1287, 2152, 307,
	1287, 1768, 1768, 1768, 1768, 1768, 1506, 1506, 1506, 1506,
	46780, -1000, -214, -1000, -1000, -267, -270, -1000, 1307, -214,
	1999, 1307, -1000, 2005, 2001, 2144, 1944, 1287, 2124, 1287,
	1287, 1287, 1938, -1000, 2488, 2488, 2488, 1756, 1142, 48162,
	-1000, -1000, -1000, -1000, 2622, 2620, 1988, -1000, -1000, 71,
	436, -1000, 2334, 2339, -1000, 2596, 2327, 2592, -1000, -1000,
	-1000, -1000, -1000, 1316, -1000, 2411, 1970, -1000, 943, 1913,
	-1000, -1000, 17065, 1766, 2292, 706, 1756, 2023, 3361, 2223,
	2234, 3347, -1000, -1000, -1000, -1000, 2255, -1000, 2252, -1000,
	-1000, 2083, -1000, 2096, 442, 23977, 2022, 2022, -1000, 703,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1084, 7923, 2700,
	-1000, 1742, -1000, 1430, 231, 1260, -1000, -1000, 914, 914,
	-1000, 1004, 1002, -1000, 48162, 2113, -1000, 348, 1738, 348,
	1229, -1000, -1000, 1222, -1000, -1000, -1000, -1000, 2052, 2266,
	-1000, -1000, -1000, -1000, 647, 475, 1752, 941, -1000, -1000,
	-1000, 48162, -1000, 48162, 48162, 48162, 2110, 2589, -1000, 18447,
	2109, 930, 2120, 46780, 46780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 510, 914, -436, 383,
	382, 914, 914, 914, -469, -1000, -1000, 1750, 1748, -1000,
	-167, -1000, 18447, -1000, -1000, -1000, 1339, 1339, 1728, 1725,
	1717, -1000, 1736, 925, -1000, -1000, -1000, -1000, -1000, -1000,
	2108, 394, -1000, 521, 1710, 2083, -1000, -1000, -1000, 1788,
	-1000, -1000, -152, 46780, 46780, 46780, 46780, -1000, -1000, 1191,
	-1000, -1000, -1000, 1704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 814, 1307,
	341, -154, 1307, -1000, -1000, 348, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18447, -1000, 18447, -1000,
	1316, 18447, 2537, 1673, 18447, 18447, -1000, 1211, 1178, 1287,
	-1000, -1000, -1000, 18447, -1000, -1000, -1000, -1000, -1000, 18447,
	-1000, -1000, -1000, 18447, 216, 1138, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1307, 424, -1000, -1000,
	-1000, -1000, 2644, -1000, 1307, 18447, -1000, -1000, 18447, -1000,
	18447, 18447, -1000, 18447, -1000, 18447, -1000, -1000, -1000, -1000,
	18447, 2070, 2381, 2070, 2070, 26050, -1000, -1000, 2620, 2616,
	2582, 2313, 2317, 2317, 2334, -1000, 2573, 2566, -1000, 1668,
	2548, 1665, 996, -1000, 47471, 18447, 180, -1000, 377, 46780,
	180, 46780, -1000, 2588, -1000, -1000, 18447, 2103, -1000, 18447,
	-1000, -1000, -1000, -1000, 7250, 2622, 2022, -1000, -1000, 828,
	-1000, 18447, -1000, -1000, -1000, 7270, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1662, 1657, -1000, -1000, 2099, 18447,
	-1000, -1000, -1000, 1757, 1709, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1721, 922, -1000, -1000, -1000, -1000, 2095,
	-1000, 633, 1654, 2083, -1000, -1000, -1000, -1000, 423, -462,
	2112, 46780, 1156, -1000, 1677, 1975, 393, 180, 1651, 914,
	914, 914, 1141, 1124, 31578, 1649, -1000, 46780, 503, -1000,
	423, -1000, -176, -177, 1287, -1000, -1000, -1000, 544, 1632,
	361, 1630, 911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 909, -1000, 2438, -1000, -1000, 12209, -1000, -1000,
	2081, 2133, -1000, -1000, -1000, -1000, -1000, 2274, -135, -160,
	-1000, -1000, 1287, 1287, 1553, 1307, -1000, 1287, 1287, 1617,
	1562, -1000, 1287, 1506, 1915, -1000, 216, 1307, 2232, -1000,
	-1000, 7250, -1000, -1000, 2588, 2547, 56, -1000, -1000, 329,
	56, 1316, 1911, 1287, 1907, 1849, 1287, 1287, 26741, -1000,
	2540, 2539, 32269, 32269, 768, 2616, -226, 18447, 18447, 2303,
	1172, -1000, -1000, -1000, -1000, 1627, 1621, -1000, 1609, -1000,
	2695, -1000, 1316, -1000, 180, -1000, 665, 1913, -1000, 2537,
	1316, 46780, 1316, 69, 2588, -1000, 1287, -1000, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070,
	2070, 2070, 2070, 2070, 2070, 2070, 2070, 2070, -1000, -1000,
	46780, 2105, -1000, -1000, -1000, 647, 1607, 361, 902, -1000,
	2436, 1626, 84, -1000, 1533, 1975, -1000, -1000, 160, -1000,
	18447, -1000, 31578, 1581, 1579, -1000, -1000, -1000, -1000, -469,
	-1000, -1000, -1000, -1000, -1000, -1000, 900, -1000, 1616, 899,
	-1000, -1000, -1000, 394, 1558, 1546, 380, 1974, -1000, 894,
	46780, 48162, -1000, 2271, -1000, -1000, -1000, 18447, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18447, -1000, 1307, 2231,
	-1000, -288, -1000, -439, 18447, -214, -1000, -1000, -214, -1000,
	18447, -1000, -1000, 18447, -1000, 18447, -1000, -1000, 1602, -1000,
	-1000, -1000, -1000, -1000, 1602, 1602, -1000, -226, -1000, 1955,
	-1000, 46780, 1316, 1770, -1000, 1147, -1000, -1000, -1000, -1000,
	-1000, 47471, 1913, 46780, -1000, 1600, 1307, 2070, 2537, -1000,
	1586, -1000, 884, -1000, 1555, 1543, 380, -1000, 2077, 2117,
	-1000, -1000, -1000, 16374, -1000, -1000, -1000, -1000, -1000, 191,
	1542, -1000, 361, 1525, 877, -1000, -1000, -148, 12209, 8724,
	1532, -1000, -141, 1287, 1506, -1000, -408, -1000, -1000, -1000,
	-1000, 162, -1000, -1000, 1770, -1000, -1000, 1844, 1508, 1375,
	30887, -1000, -1000, -1000, -1000, -226, -1000, -1000, 2434, -1000,
	-1000, 1628, -1000, -1000, 26050, 46089, -1000, -128, 390, 1503,
	-1000, -1000, -148, 18447, 2072, 1307, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 874, -1000, 1502, -1000, 5, -1000,
	-1000, -1000, -1000, -1000, 2114, -158, -1000, -1000, -1000, 219,
	-428, -246, -262, -1000, -1000, 19138, -1000, 18447, -1000, 18447,
	-1000, 18447, -1000, -1000, -1000, 46780, 2070, -1000, 1500, -1000,
	4328, -282, 2230, -1000, -112, -1000, -1000, -1000, 1083, 1497,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1708, 46780, -1000,
	1412, -1000, 519, -1000, -1000, -152, -162, 983, -1000, -1000,
	-1000, -1000, -1000, 1300, 1134, 1287, -1000, 46780, -1000, 46089,
	-277, 813, 7250, -1000, 2228, 2220, 2655, -1000, -1000, -1000,
	-1000, -1000, -1000, -475, 1478, -1000, 299, -1000, -1000, 219,
	-1000, 18447, -1000, 18447, -1000, 1307, -1000, -1000, 2417, 69,
	-1000, 2661, -1000, 2657, 742, 742, -1000, 1121, -475, -1000,
	-1000, 1287, 1287, -1000, -305, -1000, -1000, -1000, -1000, -1000,
	526, 1167, -1000, -1000, -1000, -1000, -1000, 7250, -1000, -1000,
	-1000, 220, 220, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3363, 3361, 31, 5, 43, 42, 3360, 47, 130,
	217, 30, 234, 116, 3358, 195, 3357, 3356, 3353, 3352,
	3350, 3349, 2749, 2745, 2722, 3346, 3341, 3339, 3337, 3336,
	3335, 3334, 3333, 3332, 3330, 3329, 3322, 3319, 3314, 3306,
	3304, 3276, 3270, 197, 190, 213, 3269, 3265, 3264, 140,
	208, 108, 110, 210, 3263, 3262, 99, 3258, 3254, 3253,
	206, 205, 204, 963, 3252, 199, 139, 57, 3251, 3250,
	3248, 3246, 3244, 3243, 3239, 3236, 3234, 3233, 3232, 3231,
	3230, 3229, 3226, 3225, 3223, 3221, 3218, 3217, 265, 3214,
	3213, 22, 3212, 101, 3197, 3195, 3194, 3193, 3183, 14,
	3181, 3153, 10, 52, 3149, 3139, 61, 3138, 3137, 3136,
	3125, 3124, 18, 3123, 26, 3122, 34, 3119, 3115, 153,
	3112, 3111, 3110, 37, 3106, 3104, 3102, 3099, 3098, 3097,
	3096, 163, 3095, 3094, 3092, 202, 215, 3089, 3088, 193,
	128, 131, 3083, 3082, 117, 211, 3070, 144, 3069, 3068,
	3064, 179, 3060, 1645, 3059, 3058, 78, 87, 3057, 45,
	3055, 3044, 11, 106, 76, 8, 7, 12, 3043, 3042,
	77, 109, 3038, 134, 3034, 3033, 127, 81, 3032, 122,
	115, 3031, 3030, 24, 3, 3028, 1, 6, 4, 84,
	3022, 3021, 141, 3019, 3018, 3017, 112, 3013, 3011, 3943,
	3010, 114, 158, 120, 94, 3008, 55, 91, 3005, 3002,
	3001, 3000, 2997, 70, 2995, 2994, 2993, 162, 66, 196,
	2987, 51, 92, 69, 156, 2984, 95, 102, 218, 192,
	2982, 2981, 161, 160, 2980, 2974, 75, 53, 64, 2971,
	125, 155, 146, 73, 123, 167, 2958, 2957, 67, 88,
	2955, 2954, 2952, 2951, 194, 2948, 2946, 85, 2944, 80,
	2942, 191, 2941, 15, 71, 2938, 54, 185, 2924, 93,
	2923, 2922, 86, 137, 82, 32, 2917, 184, 189, 151,
	182, 2916, 2909, 62, 2907, 2899, 2894, 212, 284, 2891,
	2888, 97, 203, 169, 176, 113, 2887, 322, 2885, 2882,
	111, 0, 4951, 2877, 44, 186, 2876, 2875, 4030, 165,
	46, 28, 2874, 138, 2872, 2870, 2868, 2865, 216, 201,
	149, 188, 72, 2864, 2863, 2862, 19, 2859, 2857, 2856,
	2855, 2854, 2852, 96, 41, 40, 39, 244, 103, 21,
	118, 187, 178, 89, 2849, 2847, 2846, 147, 126, 2845,
	181, 180, 148, 119, 2841, 198, 170, 142, 2839, 364,
	38, 2837, 2836, 2833, 2832, 121, 2831, 2830, 2828, 2827,
	172, 174, 150, 100, 2826, 104, 124, 171, 173, 59,
	2824, 58, 2823, 2820, 35, 209, 27, 2814, 16, 136,
	129, 2811, 4671, 207, 2810, 20, 308, 183, 2808, 2803,
	9, 13, 17, 2799, 2795, 2794, 2787, 159, 2786, 2785,
	2784, 2782, 25, 63, 23, 2, 157, 98, 2776, 2775,
	166, 168, 2774, 2771, 2757, 2756, 2754, 2753, 2751, 107,
	48, 2744, 60, 83, 36, 29, 2734, 2733, 49, 56,
	2728, 2726, 3634, 433, 154, 2724, 220,
}

//line sql.y:8947
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) alterWescaleCDCUnion() *AlterWescaleCDC {
	v, _ := st.union.(*AlterWescaleCDC)
	return v
}

func (st *yySymType) alterWescaleFilterUnion() *AlterWescaleFilter {
	v, _ := st.union.(*AlterWescaleFilter)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createWescaleCDCUnion() *CreateWescaleCDC {
	v, _ := st.union.(*CreateWescaleCDC)
	return v
}

func (st *yySymType) createWescaleFilterUnion() *CreateWescaleFilter {
	v, _ := st.union.(*CreateWescaleFilter)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) dropWescaleCDCUnion() *DropWescaleCDC {
	v, _ := st.union.(*DropWescaleCDC)
	return v
}

func (st *yySymType) dropWescaleFilterUnion() *DropWescaleFilter {
	v, _ := st.union.(*DropWescaleFilter)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) showWescaleCDCUnion() *ShowWescaleCDC {
	v, _ := st.union.(*ShowWescaleCDC)
	return v
}

func (st *yySymType) showWescaleFilterUnion() *ShowWescaleFilter {
	v, _ := st.union.(*ShowWescaleFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) wescaleFilterActionUnion() *WescaleFilterAction {
	v, _ := st.union.(*WescaleFilterAction)
	return v
}

func (st *yySymType) wescaleFilterPatternUnion() *WescaleFilterPattern {
	v, _ := st.union.(*WescaleFilterPattern)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 440, 441, 441, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	269, 392, 393, 393, 267, 267, 33, 83, 43, 43,
	42, 42, 45, 45, 44, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 117, 117, 23, 24,
	24, 24, 24, 444, 444, 194, 194, 192, 192, 193,
	193, 272, 272, 25, 276, 276, 278, 278, 278, 278,
	268, 268, 268, 26, 26, 277, 277, 279, 279, 279,
	282, 282, 282, 282, 321, 321, 321, 41, 41, 41,
	40, 38, 39, 436, 436, 437, 437, 438, 438, 438,
	438, 439, 439, 439, 439, 439, 34, 35, 36, 37,
	37, 37, 427, 427, 425, 425, 429, 429, 431, 431,
	424, 424, 426, 426, 432, 432, 432, 433, 433, 433,
	433, 428, 428, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 430, 430, 435, 435, 27, 27, 27, 27,
	27, 27, 27, 137, 137, 395, 395, 394, 388, 388,
	387, 387, 386, 391, 391, 390, 390, 389, 47, 48,
	57, 57, 57, 57, 58, 59, 396, 396, 361, 64,
	64, 63, 63, 63, 63, 63, 63, 65, 65, 61,
	61, 60, 60, 62, 62, 363, 363, 349, 349, 362,
	362, 362, 362, 362, 362, 362, 348, 348, 148, 148,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 411, 411, 411,
	410, 410, 247, 247, 247, 247, 247, 247, 247, 247,
	158, 158, 170, 170, 170, 170, 170, 156, 156, 157,
	155, 155, 155, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 169, 169, 165, 165, 165, 166, 166, 166,
	167, 167, 412, 412, 412, 412, 326, 326, 326, 326,
	329, 329, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 328, 328, 328, 328, 328, 328, 328, 330, 330,
	330, 330, 330, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 332,
	332, 332, 332, 332, 332, 332, 332, 347, 347, 333,
	333, 341, 341, 342, 342, 343, 343, 343, 344, 344,
	344, 345, 345, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 340, 340, 339, 339, 339, 350, 375, 375,
	374, 374, 372, 372, 372, 372, 372, 372, 372, 372,
	359, 359, 369, 369, 369, 369, 369, 358, 358, 354,
	354, 354, 355, 355, 356, 356, 353, 353, 357, 357,
	371, 371, 370, 370, 351, 351, 352, 352, 377, 413,
	413, 413, 413, 413, 414, 414, 378, 403, 405, 405,
	405, 404, 404, 401, 402, 400, 400, 400, 400, 400,
	93, 93, 93, 295, 295, 296, 296, 367, 367, 366,
	366, 366, 368, 368, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 290, 290, 290, 399, 399,
	399, 399, 399, 399, 398, 398, 398, 364, 364, 364,
	397, 397, 66, 66, 227, 227, 416, 416, 417, 417,
	417, 54, 54, 54, 54, 54, 54, 53, 53, 53,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 55, 55, 50, 50, 50, 50, 50, 50, 50,
	50, 50, 50, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 119, 119, 120, 120,
	120, 120, 122, 122, 122, 380, 380, 67, 67, 3,
	3, 182, 184, 185, 185, 183, 183, 183, 183, 183,
	183, 69, 69, 68, 68, 187, 186, 188, 188, 188,
	1, 1, 2, 2, 4, 4, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 346, 346,
	346, 379, 379, 381, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 125, 124, 124, 123, 126, 126,
	126, 126, 126, 126, 126, 126, 383, 383, 383, 70,
	70, 384, 334, 335, 336, 5, 6, 360, 382, 133,
	133, 29, 46, 46, 30, 30, 30, 30, 31, 31,
	71, 72, 423, 423, 76, 76, 76, 77, 77, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	289, 289, 298, 298, 288, 288, 313, 313, 313, 291,
	291, 291, 292, 292, 409, 409, 409, 285, 285, 74,
	74, 74, 314, 314, 314, 314, 78, 78, 418, 418,
	419, 419, 420, 420, 420, 79, 80, 80, 316, 316,
	317, 317, 81, 82, 94, 94, 94, 94, 94, 94,
	94, 95, 95, 95, 95, 118, 118, 118, 15, 15,
	15, 15, 90, 90, 90, 14, 14, 17, 75, 75,
	84, 406, 406, 407, 408, 408, 408, 408, 85, 87,
	87, 32, 32, 32, 32, 32, 32, 143, 143, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 138, 138, 138, 132, 132, 445, 88, 89,
	89, 136, 136, 136, 129, 129, 129, 135, 135, 135,
	16, 16, 18, 271, 271, 19, 19, 140, 140, 142,
	142, 142, 142, 142, 144, 144, 144, 144, 144, 144,
	144, 139, 139, 141, 141, 141, 141, 306, 306, 306,
	305, 305, 176, 176, 178, 177, 177, 179, 179, 180,
	180, 180, 180, 225, 225, 202, 202, 264, 264, 265,
	265, 263, 263, 270, 270, 266, 266, 266, 266, 273,
	273, 181, 181, 181, 181, 189, 189, 190, 190, 191,
	191, 315, 315, 311, 311, 311, 310, 310, 195, 195,
	195, 197, 196, 196, 196, 196, 198, 198, 200, 200,
	199, 199, 201, 206, 206, 205, 205, 203, 203, 203,
	203, 204, 204, 204, 204, 207, 207, 153, 153, 153,
	153, 153, 153, 153, 168, 168, 168, 168, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 254,
	254, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 162,
	230, 230, 229, 229, 96, 96, 96, 97, 97, 98,
	98, 98, 98, 98, 99, 99, 99, 99, 99, 154,
	154, 101, 101, 100, 100, 220, 220, 303, 303, 102,
	103, 103, 106, 106, 105, 104, 104, 110, 110, 107,
	107, 109, 109, 108, 111, 111, 112, 113, 113, 286,
	286, 208, 208, 216, 216, 216, 216, 209, 209, 209,
	209, 209, 209, 209, 217, 217, 217, 224, 218, 218,
	214, 214, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 173, 173,
	173, 173, 235, 235, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 161,
	161, 174, 174, 174, 174, 175, 175, 175, 175, 175,
	175, 175, 323, 323, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 446, 446, 337, 337, 337,
	337, 215, 215, 215, 215, 215, 134, 134, 134, 134,
	134, 320, 320, 320, 324, 324, 324, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 325, 325, 233, 233, 130, 130, 231, 231,
	232, 234, 234, 226, 226, 226, 226, 228, 228, 211,
	211, 211, 236, 236, 237, 237, 114, 115, 115, 116,
	116, 238, 238, 240, 239, 239, 241, 242, 242, 242,
	243, 243, 244, 244, 244, 56, 56, 56, 56, 56,
	51, 51, 51, 51, 52, 52, 52, 52, 145, 145,
	145, 145, 147, 147, 146, 146, 91, 91, 92, 92,
	92, 422, 422, 422, 421, 421, 421, 421, 421, 421,
	151, 151, 152, 152, 152, 149, 149, 150, 150, 261,
	261, 245, 245, 245, 252, 252, 252, 248, 248, 250,
	250, 250, 251, 251, 251, 249, 258, 258, 260, 260,
	259, 259, 255, 255, 256, 256, 257, 257, 257, 253,
	253, 210, 210, 210, 210, 210, 262, 262, 262, 262,
	274, 274, 221, 221, 223, 223, 222, 222, 172, 275,
	275, 283, 280, 280, 281, 281, 307, 307, 307, 284,
	284, 297, 297, 293, 293, 294, 294, 287, 287, 299,
	299, 299, 86, 219, 219, 376, 376, 373, 302, 302,
	304, 304, 308, 308, 312, 312, 309, 309, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 442, 443, 318, 319, 319, 319,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 4, 4, 3,
	4, 9, 8, 3, 5, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 11, 7, 4, 4,
	4, 3, 0, 3, 0, 3, 0, 4, 0, 4,
	3, 5, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 2, 2, 2, 3,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 2, 0, 2,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 8, 5,
	5, 4, 4, 4, 6, 5, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 7, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 7, 8, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 4, 1, 3, 2, 3, 3, 2, 2, 3,
	2, 2, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 4, 3, 4, 4, 4, 2,
	3, 3, 3, 3, 5, 2, 3, 3, 3, 2,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 2, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 4, 4, 4, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 1, 6, 3, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 8, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 6,
	5, 9, 6, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 1, 2, 2, 1, 1, 1, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -440, -88, -445, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -71, -72,
	-76, -77, -73, -74, -78, -79, -80, -81, -82, -14,
	-17, -75, -32, -33, -83, -84, -85, -86, -87, -16,
	-18, -19, -34, -35, -36, -37, -38, -39, -40, -41,
	-9, -8, -13, 10, 11, -117, -42, 33, -47, -57,
	225, -58, -48, 226, -59, 228, 227, 266, 229, 250,
	655, 235, 259, 75, 338, 339, 341, 342, 343, 344,
	-118, 651, 264, 265, 231, 37, 46, 34, 35, 38,
	236, 272, 273, 234, -10, -43, 9, -442, 12, 483,
	261, 260, 29, -12, 545, 87, -89, -441, 701, -261,
	-245, 23, 34, 30, -244, -240, -136, -245, 21, 19,
	8, -88, -88, -88, 13, 14, -88, -361, -363, -12,
	26, 87, 159, 9, 87, -88, -64, -63, -61, -60,
	-62, -65, 32, -54, -55, -385, -53, -50, 230, 227,
	276, 123, 124, 266, 267, 268, 229, 250, 265, 269,
	264, 285, -49, 82, 34, 545, 548, -368, 226, 232,
	233, 228, 484, 126, 125, 76, -365, 397, 578, 671,
	-65, 673, 101, 104, 672, 45, 240, 674, 675, 676,
	585, 677, 249, 678, 679, 680, 681, 687, 626, 688,
	689, 690, 127, 8, -88, -312, -308, 91, -301, 542,
	252, 576, 577, 301, 82, 42, 551, 394, 397, 578,
	513, 671, 338, 354, 348, 518, 519, 520, 377, 369,
	543, 579, 552, 322, 253, 289, 665, 367, 135, 673,
	326, 580, 267, 402, 403, 581, 404, 101, 341, 446,
	686, 325, 582, 684, 104, 672, 346, 80, 512, 52,
	668, 45, 262, 365, 234, 361, 674, 290, 583, 554,
	283, 126, 123, 693, 37, 357, 51, 31, 683, 125,
	50, 675, 150, 584, 676, 585, 406, 384, 659, 49,
	407, 268, 586, 85, 273, 547, 329, 667, 408, 532,
	358, 409, 300, 682, 231, 587, 646, 638, 639, 410,
	411, 660, 389, 385, 390, 534, 588, 438, 517, 412,
	642, 643, 700, 53, 589, 590, 661, 124, 591, 79,
	677, 81, 352, 353, 592, 298, 251, 537, 538, 440,
	381, 495, 502, 503, 111, 112, 498, 113, 504, 114,
	505, 506, 507, 496, 115, 108, 497, 508, 509, 382,
	383, 116, 510, 110, 109, 499, 501, 117, 511, 249,
	36, 413, 544, 302, 59, 324, 277, 441, 47, 387,
	697, 46, 653, 539, 593, 658, 380, 376, 492, 54,
	594, 595, 596, 597, 514, 678, 379, 351, 375, 692,
	4, 295, 515, 679, 63, 233, 392, 391, 393, 284,
	437, 372, 598, 599, 600, 256, 83, 601, 362, 22,
	602, 603, 414, 291, 604, 57, 605, 606, 444, 265,
	607, 55, 680, 40, 608, 270, 694, 681, 609, 331,
	332, 610, 611, 652, 612, 272, 613, 416, 614, 640,
	641, 415, 386, 388, 540, 279, 417, 237, 546, 615,
	330, 356, 269, 685, 616, 257, 528, 529, 530, 531,
	666, 536, 535, 271, 276, 264, 445, 258, 617, 618,
	619, 620, 621, 323, 637, 622, 623, 342, 687, 493,
	44, 624, 625, 626, 627, 628, 299, 294, 439, 448,
	62, 84, 399, 629, 630, 664, 350, 347, 292, 631,
	339, 56, 688, 689, 690, 286, 691, 521, 522, 523,
	524, 10, 698, 699, 516, 419, 127, 296, 297, 48,
	373, 278, 632, 327, 633, 363, 364, 378, 349, 374,
	649, 340, 647, 280, 420, 494, 266, 634, 447, 293,
	395, 400, 328, 550, 533, 285, 421, 656, 663, 549,
	525, 526, 371, 368, 287, 527, 635, 651, 422, 241,
	281, 282, 636, 648, 423, 424, 321, 425, 333, 335,
	436, 336, 337, 426, 427, 428, 435, 429, 432, 433,
	434, 431, 334, 430, 650, 644, 645, 288, 548, 345,
	366, 401, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 316, 491, 319, 320, 239, -88, 239,
	-199, -308, 239, 239, 96, 546, 672, 656, 416, -88,
	225, -280, 433, 434, 403, -298, 405, 418, 413, 423,
	411, -289, 414, 416, 279, -409, 438, 239, 420, 406,
	415, 424, 425, 333, 436, 335, 321, 431, 426, 334,
	430, 288, 427, 428, 435, 429, 432, -392, 177, 676,
	691, 135, 370, 410, 408, 439, 653, 91, -314, 91,
	92, 93, -301, 340, -316, 345, -302, -392, -301, 343,
	-88, -88, -318, -318, -138, 653, 657, -218, -153, 143,
	-168, -171, -159, -163, -212, -213, -214, -215, -169, -228,
	-267, 166, 167, 174, 144, -224, -172, 27, 541, 485,
	484, 177, 32, -162, 220, 69, 70, 487, 146, 58,
	12, 460, 461, -170, 455, 462, 457, 512, 514, 515,
	516, 513, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 517, 489, 490, 118, 491, 108, 110, 109,
	492, 493, 494, 367, 539, 540, 534, 537, 538, 536,
	535, 382, 383, 495, 496, 497, 111, 112, 113, 114,
	115, 116, 117, 498, 501, 499, 500, 502, 503, 504,
	509, 510, 505, 506, 507, 508, 511, -98, -110, 567,
	566, -111, -160, -161, -174, -175, -302, -308, 244, 454,
	238, 172, 483, -164, -157, -226, 107, 92, 93, -8,
	-222, 453, 458, 459, 463, 456, 553, 555, 570, 571,
	573, 558, 563, 562, 565, 528, 529, 530, 531, 532,
	533, 638, 639, 640, 641, 642, 643, 644, 645, -392,
	-301, 91, -166, -165, -208, 94, 99, 102, 103, 105,
	-415, 262, 363, 364, 119, -442, 669, 90, 95, 96,
	97, 98, 120, 121, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 45, 419, 419, -199,
	-88, -88, -88, -88, -238, -136, -240, -10, -8, -442,
	-88, -8, -9, -13, -43, -45, 572, -44, -308, 100,
	-245, -261, 13, 162, 43, 51, -243, -244, -12, -8,
	-153, 20, 24, 25, -141, 168, -153, -308, -141, -287,
	243, -88, -88, -276, -321, 340, -278, 439, 653, 438,
	-268, -281, 91, -267, -280, 437, -12, -362, 159, -348,
	-352, -302, 254, -378, 250, -199, -88, -371, -370, -302,
	-442, 317, 303, -137, -297, 240, 248, 247, 136, -396,
	139, 296, 454, 238, -60, -61, -62, -280, 176, 675,
	-119, 271, 275, 88, 88, -352, -351, -350, -397, 275,
	254, -377, -369, 246, 255, -358, 247, 248, -353, 240,
	137, -397, -353, 245, 255, 250, 254, 275, 275, 127,
	275, 127, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 270, -359, 151, -359, 549, 549, -365, -397, 250,
	240, -397, -397, 246, -299, -353, 242, 26, 242, 36,
	36, -359, -359, -359, -280, 176, -359, -359, -359, -359,
	283, 283, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, 317,
	303, 239, -396, -145, 430, 321, 335, 333, 82, -63,
	285, -46, -199, 317, 303, -297, 240, 241, -396, 272,
	-199, 221, -199, -423, -199, 96, 96, 317, 318, 303,
	304, 317, 303, 454, 407, 411, 279, 239, 280, 241,
	421, -291, 159, 16, -291, -288, 419, 417, 404, 409,
	-291, -291, -291, -291, 286, 402, -354, 240, 36, 251,
	419, 286, 402, 286, 287, 286, 287, 412, 422, 286,
	-313, 15, 162, 287, -313, -313, 90, -313, 90, 90,
	-292, 159, 286, 419, 282, -291, -291, -291, -319, -442,
	-304, -302, -300, 230, 24, 142, 26, 28, 145, 177,
	130, 20, 146, 38, 232, 370, 250, 176, 246, 484,
	225, 73, 553, 455, 457, 453, 460, 486, 487, 454,
	405, 32, 14, 555, 29, 260, 25, 39, 170, 227,
	149, 556, 263, 27, 261, 118, 121, 558, 23, 76,
	255, 15, 248, 41, 17, 559, 560, 18, 244, 243,
	162, 240, 71, 12, 220, 30, 158, 67, 561, 137,
	562, 563, 564, 565, 131, 69, 159, 21, 695, 458,
	459, 34, 654, 541, 274, 172, 74, 60, 657, 143,
	456, 566, 567, 119, 568, 122, 77, 662, 139, 19,
	72, 43, 569, 275, 570, 245, 696, 571, 442, 572,
	160, 228, 483, 70, 161, 669, 573, 670, 238, 418,
	9, 488, 33, 259, 247, 129, 68, 574, 239, 148,
	489, 490, 242, 132, 120, 8, 136, 35, 13, 75,
	78, 461, 462, 463, 58, 128, 545, 147, 16, 575,
	443, 141, 655, 449, 450, 451, 452, 235, -392, 658,
	-319, -319, 33, 92, -418, -419, -420, 545, 442, 242,
	-302, -199, -94, 646, 229, -95, 652, 24, 237, -143,
	419, -131, 177, 676, 659, 660, 661, 658, 416, 656,
	666, 664, 662, 286, 663, 88, 139, 141, 142, 4,
	-153, 158, -209, 151, 152, 153, 154, 155, 156, 157,
	162, 143, 145, 159, -254, 140, 163, 164, 165, 166,
	167, 168, 169, 171, 170, 172, 173, 160, 161, 176,
	223, 224, -163, -163, -163, -163, -224, -230, -229, -442,
	-226, -392, -301, -308, -442, -442, -163, -286, -442, -442,
	-159, -442, -442, -442, -233, -153, -442, -442, -446, -442,
	-446, -446, -337, -442, -337, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, 221, -442, -442, -442, -442, -442, -337, -337, -337,
	-337, -337, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, 103, 99, 102, 94,
	-228, 105, 90, 90, 90, 90, -8, -9, -218, -442,
	-318, -406, -407, -202, -199, -442, 321, 333, -302, -302,
	272, -243, -12, -8, -238, -244, -240, -8, -129, -142,
	64, 65, -144, 25, 39, 68, 66, 24, -443, 89,
	-443, -261, -443, 88, -45, -264, 87, 62, 44, 90,
	90, 88, 22, -239, -241, -153, 15, -306, 4, -305,
	26, -302, 90, 221, 15, -200, 30, -199, -287, -287,
	88, 91, 340, -277, -279, 440, 442, 151, -307, -302,
	90, 32, 89, 88, -199, -326, -329, -331, -330, -332,
	-327, -328, 367, 368, 177, 371, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 384, 33, 262, 363, 364,
	365, 366, 385, 386, 387, 388, 390, 391, 392, 393,
	348, 369, 543, 349, 350, 351, 352, 353, 354, 356,
	357, 360, 358, 359, 361, 362, -393, -392, 87, 64,
	65, 89, 88, -333, 87, -153, -294, 244, -294, -145,
	239, -392, 240, 240, 240, -88, 483, -359, -359, -359,
	270, 20, -53, -50, -385, 19, -49, -50, 230, 123,
	124, 227, 87, -348, 87, -357, -393, -302, -392, 87,
	137, 245, 136, -356, -353, -356, -357, -226, -392, 137,
	137, -392, -392, -273, -302, -273, -273, 24, -273, 24,
	-273, 24, 96, -302, -273, 24, -273, 24, -273, 24,
	-273, 24, -273, 24, 32, 79, 80, 81, 32, 83,
	84, 85, -226, -392, -392, -226, -348, -226, -199, -392,
	-280, 96, 96, 96, -359, -359, 96, 90, 90, 90,
	-359, -359, 96, 90, -310, -308, 90, 90, -398, 256,
	300, 302, 96, 96, 96, 96, 32, 90, -399, 32,
	683, 682, 684, 685, 686, 90, 96, 32, 96, 32,
	96, -302, 87, 91, 91, -199, -151, 290, 225, 227,
	230, 77, 90, 324, 325, 322, 331, 332, 327, 328,
	90, 324, 322, 331, 332, 327, 328, 90, 324, 325,
	322, 331, 332, 327, 328, 151, 45, 88, 242, 91,
	91, 239, -392, -293, 244, -293, -302, -309, -308, -300,
	-422, 88, -421, 23, 449, 450, 452, 408, 451, 91,
	91, 91, 91, -199, -199, -199, -199, -199, -199, -199,
	-319, 90, -153, -355, 15, 162, -313, -313, -291, -199,
	-355, -313, -291, -199, -291, -291, -291, -291, -313, -313,
	-313, -291, -308, -308, -292, -291, -291, 658, -291, 336,
	658, 90, -285, 15, 77, -319, -319, 88, 346, 443,
	444, -317, 343, -90, -302, 90, -15, -11, -23, -22,
	-24, 151, -15, 88, 545, -192, -199, 658, 658, 658,
	658, 658, 658, -153, -153, -153, -153, 568, -216, 119,
	143, 120, 121, -171, -217, -222, -224, 106, 162, 145,
	159, -254, -159, -163, -159, -159, -159, -159, -159, -159,
	-159, -159, -159, -159, -159, -159, -159, -320, -302, 90,
	177, -167, -166, 105, -415, -167, 542, 88, -229, 221,
	-153, -153, -392, -153, -302, -139, -141, -139, -153, -231,
	-232, 147, -226, -153, -443, -443, 96, 105, 168, -135,
	25, 39, -135, -135, -135, -135, -153, -153, -153, -153,
	-153, -153, -153, -153, -153, -153, -135, -302, -302, -128,
	-127, 465, 466, 467, 468, 470, 471, 472, 475, 476,
	480, 481, 464, 482, 469, 474, 477, 478, 479, 473,
	366, -153, -153, -153, -153, -153, -153, -96, -153, 130,
	131, 132, -218, -153, -159, -153, -153, -153, -443, -153,
	-153, -153, -219, -218, -391, -390, -389, -153, -153, -153,
	-153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
	-153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
	-443, -153, -173, -157, 96, -269, 105, 92, -153, -153,
	-140, -139, -304, -309, -300, -301, -139, -140, -140, -139,
	-139, -153, -153, -153, -153, -153, -153, -153, -153, -443,
	-153, -153, -153, -153, -153, -261, -443, -218, 88, -408,
	442, 443, 654, -311, 275, -310, 26, -219, 90, 90,
	15, -271, 78, -302, -243, -243, 60, -139, -144, -443,
	-44, 26, -263, -302, 63, 90, -338, -280, 394, 395,
	177, -153, -153, 88, -242, 28, 29, -199, -305, 168,
	-309, -199, -272, 275, -199, -177, -179, -180, -181, -202,
	-225, -442, -182, -8, 564, 561, 15, -192, -193, -201,
	-308, -278, -321, -277, 88, 441, 443, 444, 77, 122,
	-153, -339, 176, -367, -366, -365, -348, -350, -351, -352,
	89, -339, -344, 400, 399, -333, -333, -333, -333, -333,
	-338, -338, -338, -338, 87, 87, -333, -333, -333, -333,
	-341, 87, -341, -341, -342, -341, 87, -342, -343, 87,
	-343, -378, -153, -375, -374, -372, -373, 249, 101, 636,
	592, 545, 585, 626, 78, -370, -242, 96, -443, 91,
	143, 91, -151, -294, -376, -373, -392, -392, -392, -294,
	91, 90, 91, 90, 91, 90, -120, -67, -1, 695,
	696, 697, 88, 20, -349, -348, -66, 300, -381, -382,
	275, -377, -371, -357, 137, -356, -357, -357, -392, 88,
	30, 127, 127, 127, 127, 545, 227, 33, -295, 584,
	143, 636, 592, -348, -66, 242, 242, -320, -320, -320,
	90, 90, -290, 691, -192, 545, -427, 87, -147, 292,
	151, 281, 281, 239, 239, 294, -199, 323, 326, 324,
	325, 322, 331, 332, 327, 328, 24, 24, 24, 24,
	24, 24, 24, 324, 322, 331, 332, 327, 328, 337,
	24, 24, 24, 24, 24, 24, 323, 326, 324, 325,
	322, 331, 332, 327, 328, 24, 24, 24, 24, 24,
	24, 24, 293, 295, 297, 283, -199, -199, -293, 77,
	-194, -199, 27, -308, -421, -199, 285, -199, -291, -291,
	-199, -291, -291, -199, -420, 347, -302, 381, 647, 648,
	650, 649, -131, 442, 88, 545, 23, -132, 23, -442,
	119, 120, 121, -217, -159, -163, -159, 142, 263, -442,
	-226, -443, -304, 26, 88, 78, -443, 88, 88, -443,
	-443, 88, 15, -234, -232, 149, -153, -443, 88, -443,
	-443, -443, -218, -153, -153, -153, -153, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -218, 88, 88,
	15, -324, 26, -443, -443, -443, -443, -443, -233, -443,
	15, -443, 78, 88, 162, 88, -443, -443, -443, 88,
	88, -443, -443, 88, 88, -443, 88, 88, 88, -443,
	88, 88, 88, 88, -443, -443, -443, -443, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, -443, -103,
	569, -443, -443, 88, -443, 88, -443, -442, 221, -443,
	-443, -443, -443, -443, 88, 88, 88, 88, 88, 88,
	-443, -443, -443, 88, 88, -443, 88, -443, 88, -443,
	-407, 653, 443, -206, -205, -203, 75, 243, 76, -442,
	-310, -443, -167, -269, -270, -269, -211, -302, 96, 105,
	-245, -176, -178, 15, -144, -224, 89, 88, -338, -249,
	-255, -288, -302, 90, 177, -340, 177, -340, 394, 395,
	-241, 221, -207, 16, -210, 33, 58, -11, -442, -442,
	33, 88, -195, -197, -196, -198, 67, 71, 73, 68,
	69, 70, 74, -315, 26, -8, -177, -8, -442, -199,
	-192, -444, 15, 78, -444, 88, 221, -279, -282, 445,
	442, 448, -392, 90, -119, 88, -365, -352, -246, -148,
	41, -345, 401, -338, 552, -338, -347, 90, -347, 96,
	96, 96, 89, -56, -51, -52, 34, 82, -372, -359,
	90, 40, -359, -359, -302, 89, -242, 545, 27, -425,
	87, -147, -199, 77, -376, -376, -376, -308, -2, 694,
	700, 137, 87, 404, 19, -263, 88, 89, -227, 301,
	89, -121, -302, 89, 87, -357, -357, -302, -442, 239,
	32, 32, 636, 592, 584, -66, -227, -226, -392, -339,
	693, 692, 89, 87, -429, 305, -426, -433, 284, 29,
	306, 286, 241, 299, -152, 460, -149, 90, 91, -199,
	-199, -199, -199, -199, 230, 227, 427, -416, 329, -416,
	-416, 90, -416, 427, -416, -416, 284, 242, -192, -199,
	88, -93, 258, 253, -313, -313, 34, -199, 442, 667,
	665, -153, 142, 263, -171, -163, -159, -322, 177, 367,
	262, 365, 361, 381, 372, 399, 363, 400, 358, 357,
	356, -322, -320, -218, -141, -153, -153, 150, -153, 148,
	-153, -443, -443, -443, -443, -443, -238, -153, -153, -153,
	-443, 177, 367, 15, -153, -320, -153, -153, -153, -153,
	-153, -389, -153, -218, -153, -218, -153, -153, -153, -153,
	-153, -390, -390, -390, -390, -390, -218, -218, -218, -218,
	-442, -302, -106, -105, -104, 619, 243, -103, -173, -106,
	-173, -140, -304, -153, -153, -153, -153, -153, -153, -153,
	-153, -153, -153, -203, -353, -353, -353, -273, 88, -284,
	23, 15, 58, 58, -176, -207, -177, -144, -302, -252,
	646, -258, 47, -256, -257, 48, -253, 49, 57, -340,
	-340, 168, -243, -153, -274, 77, -275, -283, -226, -221,
	-223, -222, -442, -262, -443, -302, -273, -275, -179, -180,
	-180, -179, -180, 67, 67, 67, 72, 67, 72, 67,
	-196, -308, -443, -153, -311, 78, -177, -177, -201, -308,
	168, 442, 446, 447, -365, -414, 119, 143, 32, 77,
	397, 101, -412, 176, 581, 631, 636, 592, 585, 626,
	-413, 245, 136, 137, 257, 26, 42, 89, 88, 89,
	88, 89, 89, 88, -296, -295, -52, -51, -359, -359,
	96, -392, 90, 90, 87, -429, -424, -432, 29, 306,
	286, 241, -199, 77, 77, 77, -122, 698, 96, 87,
	-3, 82, -153, 87, 20, -348, -226, -383, -334, -384,
	-335, -336, -5, -6, -360, -125, 58, 101, -70, 45,
	240, 678, 679, 127, -442, 691, -375, -263, -379, -381,
	-199, -156, -442, -155, -157, -164, 166, 167, 262, 363,
	364, -227, -437, -439, 284, 29, 125, 319, 320, -431,
	273, 87, 89, 88, 151, -199, -146, 290, 298, 87,
	-150, 92, -395, 78, 281, 397, 281, 90, -417, 330,
	90, -417, -417, 90, -417, 90, -417, -417, -199, -93,
	-56, -199, -291, -291, 34, -392, -443, -171, -163, -134,
	162, 545, -325, 551, -333, -333, -333, -343, -333, 353,
	-333, 353, -333, -443, -443, -443, 88, -443, 23, -443,
	-153, 88, -130, 488, 88, 88, -443, 87, 87, -153,
	-443, -443, -443, 88, -443, -443, -443, -443, -443, 88,
	-443, -443, -443, 88, -323, 637, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -102, -303, -302, -103,
	601, 601, -443, -103, -235, 88, -443, -443, 88, -443,
	88, 88, -443, 88, -443, 88, -443, -443, -443, -443,
	88, -204, 23, -204, -204, -443, -269, -199, -207, -236,
	17, -249, 52, 373, -260, -259, 56, 48, -257, 20,
	50, 20, 31, -274, 88, 151, 88, -443, -443, 88,
	58, 221, -443, -207, -190, -189, 77, 78, -191, 77,
	-189, 67, 67, -264, 88, -272, -177, -207, -207, 221,
	119, -442, -158, -170, -156, 13, 90, 90, -392, -411,
	682, 683, 32, 96, -359, -359, 137, 137, -199, 87,
	-338, 90, -338, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -436, -438, 29, 125, 319, 320, 273,
	89, 88, 151, -199, -199, -199, -199, -380, 87, 20,
	-153, 87, 151, 89, -263, -263, 277, 162, -359, 676,
	283, 283, -359, -359, -359, -124, -123, 698, 89, -443,
	88, -346, 545, 548, -153, -165, -165, 89, 88, 151,
	87, -428, -434, 307, 308, 309, 310, 311, 312, 313,
	314, 315, -433, 90, -264, 89, -388, 545, -394, -302,
	-302, -302, -302, 96, 98, 90, -443, 543, 74, 546,
	-443, -338, -153, -153, -153, -243, 90, -153, -153, 96,
	96, -443, -153, -218, -153, -443, -187, -186, -188, 659,
	119, 32, -322, -443, -220, 275, -109, -108, -107, 15,
	-443, -153, -153, -153, -153, -153, -153, -153, -442, 67,
	19, 17, -442, -442, -311, -236, -237, 18, 20, -250,
	54, -248, 53, -248, -259, 20, 20, 90, 20, 90,
	137, -283, -153, -223, 58, -11, -302, -221, -302, -238,
	-153, 87, -153, -167, -207, -207, -153, -213, 512, 514,
	515, 516, 513, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 517, 491, 108, 110, 109, 492, 493,
	494, 367, 539, 540, 534, 537, 538, 536, 535, 382,
	383, 495, 496, 497, 111, 112, 113, 114, 115, 116,
	117, 498, 501, 499, 502, 503, 504, 509, 510, 505,
	506, 507, 508, 511, 528, 529, 530, 531, 532, 533,
	638, 639, 640, 641, 642, 643, 644, 645, 90, 90,
	87, -153, 89, 89, 89, 88, 151, 87, -432, 90,
	-264, -379, -67, 89, -265, -263, 96, 89, 278, -222,
	-442, 90, -359, -359, -359, 96, 96, -310, -443, 88,
	-302, -413, -381, 549, 549, -443, -439, 90, -430, -435,
	252, 316, 89, 88, 151, 151, 26, -387, -386, -304,
	87, 78, 63, 544, 547, -443, -443, 88, -443, -443,
	-443, 89, 89, -443, -443, -443, 88, -443, -186, -188,
	-443, 77, -167, -238, 20, -106, 300, 302, -106, -443,
	88, -443, -443, 88, -443, 88, -443, -443, -266, -443,
	-302, 245, 20, 20, -266, -266, -206, -237, -116, -115,
	-114, 575, -153, -218, -251, 55, 77, 122, 90, 90,
	90, 13, -221, 221, -243, -263, -184, 404, -238, -443,
	-263, 89, -438, 90, -430, 151, 26, 89, 700, 137,
	89, -222, -133, -442, 274, -310, 90, 90, -123, -126,
	151, 89, 88, 151, -434, 90, 90, -11, 88, 151,
	-263, -199, 63, -153, -218, -443, 77, 556, 659, -101,
	-100, -97, 670, 696, -218, -103, -103, -153, -153, -153,
	88, -443, -443, -443, -116, 88, -113, -112, -302, 77,
	122, -275, -302, 89, -443, -442, -243, 89, -247, 151,
	89, 90, -11, 87, -3, 274, -334, -384, -335, -336,
	-5, -6, -360, 90, -435, 90, 151, -91, 545, -386,
	-364, -304, 90, 96, 89, 545, -443, -443, -99, 145,
	668, 634, -154, -165, -162, 220, -443, 88, -443, 88,
	-443, 88, -302, 245, -114, 88, 26, -311, -185, -183,
	-302, 598, -404, -403, 541, -414, -410, 119, 143, 101,
	-412, 636, 592, 128, 129, 90, -91, -153, 87, -443,
	151, 90, -92, 289, 653, -395, 546, -99, 669, 612,
	587, 612, 587, -153, -153, -153, -112, -442, -443, 88,
	23, -326, -69, 609, -401, -402, 77, -405, 410, 608,
	629, 119, 90, 89, -263, 90, 250, -388, 547, 142,
	-443, 88, -443, 88, -443, -102, -183, 605, -339, -167,
	-402, 77, -401, 77, 14, 13, -4, 699, 89, 291,
	-99, -153, -153, -443, -68, 27, -184, -400, 258, 253,
	256, 33, -400, 96, -4, -443, -443, 609, 252, 32,
	119, -167, -187, -186, -186,
}

var yyDef = [...]int{
	997, -2, -2, 999, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
	81, 83, 84, 997, 997, 997, 0, 997, 0, 0,
	997, -2, -2, 997, 1614, 0, 997, 0, 0, 0,
	0, 0, -2, 910, 916, 0, 925, -2, 0, 0,
	997, 997, 2203, 2203, 992, 0, 0, 0, 0, 0,
	997, 997, 997, 997, 1471, 61, 997, 0, 96, 97,
	945, 946, 947, 76, 0, 2201, 998, 1, 3, 82,
	86, 0, 0, 0, 69, 1480, 0, 89, 0, 0,
	1001, 0, 0, 1597, 997, 997, 0, 196, 197, 198,
	0, 0, 0, 997, 0, -2, 202, -2, 231, 232,
	233, 0, 238, 706, 594, 646, 592, 631, -2, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 470, 470, 0, 0, -2, 580, 580,
	580, 1599, 0, 0, 0, 628, 532, 470, 470, 470,
	0, 470, 470, 470, 470, 0, 0, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 1498, 237, 1615, 1612, 1613, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 0, 1591, 0,
	819, 1100, 0, 0, 824, 0, 0, 827, 828, 0,
	0, 899, 830, 831, 899, 0, 899, 899, 899, 899,
	0, 0, 0, 841, 0, 0, 0, 0, 896, 857,
	858, 0, 896, 896, 896, 0, 0, 869, 902, 0,
	0, 875, 899, 899, 899, 879, 880, 2204, 0, 2204,
	2204, 1582, 0, 893, 891, 905, 906, 51, 909, 912,
	913, 914, 915, 918, 0, 929, 932, 1608, 1609, 0,
	934, 941, 958, 959, 0, 993, 994, 56, 1248, 0,
	1122, 1127, 1138, 1153, 1154, 1155, 1156, 1157, 1159, 1160,
	1161, 0, 0, 0, 0, 1166, 1167, 0, 0, 0,
	0, 0, 1229, 1175, 0, 0, 0, 0, 1444, 0,
	0, 1405, 1405, 1263, 1405, 1407, 1407, 1822, 1958, 1966,
	2088, 1784, 1789, 1790, 1791, 2081, 2082, 2083, 2084, 2124,
	2125, 2129, 1882, 0, 0, 0, 2198, 1919, 1927, 1928,
	1952, 2053, 2109, 1801, 1947, 2018, 1879, 1901, 1902, 2035,
	2036, 1923, 1924, 1905, 1917, 1920, 1908, 1909, 1911, 1913,
	1918, 1925, 1931, 1910, 1930, 1929, 0, 1906, 1907, 1912,
	1922, 1926, 1914, 1915, 1916, 1921, 1932, 0, 0, 0,
	0, 0, 1344, 1345, 1346, 1347, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 1457, 1458, 54, 55, 1247,
	1578, 1407, 1407, 1407, 1407, 1407, 1189, 1190, 1191, 1192,
	1193, 1217, 1218, 1224, 1225, 2030, 2031, 2032, 2033, 1863,
	2118, 1871, 1872, 2013, 2014, 1884, 1885, 2159, 2160, -2,
	-2, -2, 303, 304, 305, 306, 307, 308, 309, 310,
	0, 1826, 2099, 2100, 299, 0, 0, 367, 368, 364,
	365, 366, 1231, 1232, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 2203, 0, 968, 0,
	0, 0, 0, 0, 1480, 0, 1472, 1471, 74, 0,
	-2, 0, 0, 0, 0, 58, 0, 63, 1057, 1000,
	88, 87, 1529, 0, 0, 0, 70, 1481, 78, 80,
	1482, 0, 1002, 1003, 0, 1033, 1037, 0, 0, 0,
	1598, 1597, 1597, 113, 0, 0, 114, 134, 135, 136,
	0, 0, 120, 121, 1584, 1585, 199, 0, 0, 249,
	250, 0, 52, 497, 0, 245, 1019, 0, 490, 429,
	0, 1595, 1595, 1498, 0, 0, 0, 0, 0, 997,
	0, 1592, 226, 227, 234, 235, 236, 470, 470, 470,
	643, 0, 0, 237, 237, 601, 602, 603, 0, 0,
	-2, 495, 0, 581, 0, 0, 484, 484, 488, 486,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 471, 0, 641, 642, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 1600, 1601, 0, 618,
	619, 0, 0, 0, 470, 470, 0, 0, 0, 0,
	470, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 1520, 0, 0, 0, 0, 0, -2,
	0, 811, 0, 0, 0, 0, 0, 1593, 1593, 0,
	818, 0, 820, 1511, 822, 825, 826, 0, 139, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 829, 0, 0, 832, 0, 896, 896, 894, 895,
	834, 835, 836, 837, 899, 0, 0, 479, 480, 481,
	896, 899, 0, 899, 899, 899, 899, 896, 896, 896,
	899, 0, 0, 902, 899, 899, 0, 899, 865, 0,
	870, 0, 871, 872, 873, 876, 877, 878, 881, 2205,
	2206, 1610, 1611, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 2204, 2204,
	885, 889, 1583, 911, 917, 919, 920, 0, 0, 930,
	933, 952, 60, 1870, 940, 60, 942, 943, 944, 971,
	972, 977, 0, 0, 0, 0, 983, 984, 985, 986,
	0, 0, 989, 990, 991, 0, 0, 0, 0, 0,
	1120, 0, 0, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1139, 1140, 0,
	0, 0, 1162, 1163, 1164, 1165, 1168, 0, 1180, 0,
	1182, 1453, -2, 0, 0, 0, 1173, 1174, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 1261, 0,
	1262, 1264, 1265, 0, 1266, 1007, 1007, 1007, 1007, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 1017, 1017, 0, 0, 292, 293, 294,
	295, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	315, 316, 369, 317, 318, 319, 1247, 0, 0, 0,
	57, 960, 961, 0, 1083, 1603, 0, 0, 0, 1013,
	0, 68, 77, 79, 1480, 72, 1480, 0, 0, 0,
	-2, -2, 1020, 1026, 1027, 1028, 1029, 1030, 65, 2202,
	66, 0, 85, 0, 59, 0, 0, 0, 0, 443,
	1532, 0, 0, 1473, 1474, 1477, 0, 1034, 1964, 1038,
	0, 1040, 1041, 0, 0, 111, 0, 1099, 0, 0,
	0, 122, 0, 124, 125, 0, 0, 0, 454, 1586,
	1587, 1588, -2, 477, 0, 454, 438, 377, 378, 379,
	429, 381, 429, 429, 429, 429, 443, 443, 443, 443,
	412, 413, 414, 415, 416, 0, 0, 398, 429, 429,
	429, 429, 419, 420, 421, 422, 423, 424, 425, 426,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 431,
	431, 431, 431, 431, 435, 435, 0, 53, 0, 1024,
	1025, 458, 0, 1477, 0, 0, 0, 0, 0, 1520,
	1595, 1605, 0, 0, 0, 1595, 204, 0, 0, 0,
	644, 717, 595, 632, 645, 0, 598, 599, -2, 0,
	0, 580, 0, 582, 0, 478, 0, 489, -2, 0,
	488, 0, 484, 488, 485, 488, 476, 622, 623, 624,
	0, 626, 627, 747, 1069, 0, 0, 0, 0, 0,
	753, 754, 755, 0, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 633, 634, 635, 636, 637, 638,
	639, 640, 0, 0, 0, 0, 582, 0, 629, 0,
	0, 534, 535, 536, 0, 0, 539, 540, 541, 542,
	0, 0, 545, 546, 547, 1086, 1087, 548, 549, 574,
	575, 576, 550, 551, 552, 553, 554, 555, 556, 568,
	569, 570, 571, 572, 573, 557, 558, 559, 560, 561,
	562, 565, 0, 0, 162, 219, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	158, 1593, 0, 0, 0, 0, 1016, 1101, 1616, 1617,
	821, 0, 1512, 0, 1515, 1516, 1517, 1518, 1519, 137,
	159, 138, 160, 850, 851, 852, 853, 854, 855, 856,
	882, 900, 901, 0, 482, 483, 899, 899, 838, 886,
	0, 899, 842, 887, 843, 845, 844, 846, 859, 860,
	899, 849, 897, 898, 861, 862, 863, 868, 864, 866,
	867, 903, 0, 907, 908, 883, 884, 0, 0, 923,
	924, 0, 931, 955, 953, 954, 956, 948, 949, 950,
	951, 0, 957, 0, 0, 974, 107, 979, 980, 981,
	982, 995, 988, 1249, 1117, 1118, 1119, 0, 1121, 1124,
	0, 1233, 1235, 1126, 1128, 1244, 1245, 1246, 0, 0,
	0, 0, 0, 1132, 1136, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1158, 1421, 1422,
	1423, 1177, 370, 371, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 1248, 1179, 0, 1031, 0, 0, 1451,
	1448, 0, 0, 0, 1406, 1408, 0, 0, 0, 0,
	1008, 1009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1424, 0, 0, 0, 0, 0, 1444, 0, 1184,
	1185, 1186, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 1604, 0, 214, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 1349, 1350, 1351, 50, 0, 0,
	0, 1018, 1455, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 963,
	964, 966, 0, 1103, 0, 1084, 0, 0, 969, 970,
	0, 1012, 0, 1015, 71, 73, 0, 1042, 1021, 67,
	62, 0, 0, 1061, 1530, 443, 1552, 0, 452, 452,
	449, 1483, 1484, 0, 1476, 1478, 1479, 90, 1039, 1035,
	0, 1115, 0, 0, 1098, 0, 1045, 1047, 1048, 1049,
	1081, 0, 1052, 1053, 0, 0, 0, 0, 0, 109,
	1100, 115, 0, 123, 0, 0, 128, 129, 116, 117,
	118, 119, 0, 706, -2, 529, 251, 253, 254, 255,
	246, -2, 441, 439, 440, 380, 443, 443, 406, 407,
	408, 409, 410, 411, 0, 0, 399, 400, 401, 402,
	391, 0, 392, 393, 394, 433, 0, 395, 396, 0,
	397, 496, 0, 1485, 459, 460, 462, 470, 0, 465,
	466, 0, 470, 470, 0, 491, 492, 0, 1477, 0,
	0, 164, 1502, 0, 0, 1606, 1605, 1605, 1605, 0,
	239, 240, 241, 242, 243, 244, 742, 0, 0, 718,
	740, 741, 237, 0, 0, 247, 584, 583, 0, 774,
	0, 494, 0, 0, 488, 488, 473, 474, 625, 0,
	0, 749, 750, 751, 752, 0, 0, 0, 611, 523,
	0, 612, 613, 582, 584, 0, 0, 454, 537, 538,
	543, 544, 563, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 659, 660,
	663, 665, 666, 667, 586, 673, 662, 664, 668, 669,
	670, 586, 674, 675, 677, 678, 679, 586, 685, 0,
	676, 680, 681, 682, 586, 686, 689, 690, 691, 694,
	696, 697, 698, 586, 704, 693, 695, 699, 700, 701,
	586, 705, 1499, 1500, 1501, 0, 0, 812, 0, 0,
	520, 105, 1594, 817, 1513, 823, 1514, 896, 848, 888,
	896, 840, 847, 874, 921, 922, 927, 935, 936, 937,
	938, 939, 978, 0, 0, 0, 0, 987, 0, 0,
	1125, 1234, 1236, 1129, 0, 1133, 1137, 0, 0, 0,
	1183, 1181, 1455, 0, 0, 0, 1230, 0, 0, 1252,
	1253, 0, 0, 0, 1449, 0, 0, 1259, 0, 1409,
	1410, 1267, 0, 0, 0, 0, 0, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1471, 0, 0,
	0, 0, 0, 1288, 1289, 1290, 1291, 1292, 0, 1294,
	0, 1295, 0, 0, 0, 0, 1302, 1303, 1305, 0,
	0, 1308, 1309, 0, 0, 1310, 0, 0, 0, 1314,
	0, 0, 0, 0, 1323, 1324, 1325, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 1338,
	0, 1212, 0, 0, 1212, 0, 1250, 1017, 0, 1411,
	1412, 1413, 1414, 1415, 0, 0, 0, 0, 0, 0,
	1371, 1372, 1374, 0, 0, 1377, 0, 1379, 0, 1577,
	962, 965, 967, 1055, 1104, 1105, 0, 0, 0, 0,
	1085, 1602, 1010, 1011, 1014, 1063, 0, 1459, 0, 0,
	1042, 1115, 1043, 0, 1022, 64, 1058, 0, 1534, 1533,
	1546, 1559, 452, 452, 446, 447, 453, 448, 450, 451,
	1475, 0, 1480, 0, 1570, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 1091,
	0, 0, 0, 0, 1082, 1053, 0, 1054, 0, -2,
	0, 0, 103, 104, 0, 0, 0, 126, 127, 0,
	0, 133, 455, 456, 228, 237, 531, 252, 504, 0,
	0, 376, 442, 403, 404, 405, 0, 427, 0, 0,
	0, 0, 525, 200, 1489, 1488, 470, 470, 461, 0,
	464, 0, 0, 0, 1607, 430, 493, 0, 1596, 166,
	0, 0, 218, 0, 0, 0, 0, 224, 712, 0,
	0, 719, 0, 0, 0, 593, 0, 604, 605, 0,
	746, -2, 808, 458, 0, 472, 475, 1070, 0, 0,
	606, 0, 609, 610, 524, 584, 615, 616, 630, 617,
	566, 567, 564, 0, 168, 0, 0, 0, 177, 178,
	179, 180, 0, 0, 1521, 1522, 1527, 1525, 1526, 205,
	651, 653, 652, 656, 0, 0, 0, 588, 0, 588,
	588, 0, 588, 0, 588, 588, 649, 0, 520, 1485,
	0, 816, 521, 522, 899, 899, 973, 108, 0, 976,
	0, 0, 0, 0, 1130, 1134, 1416, 1442, 429, 429,
	1429, 429, 435, 1432, 429, 1434, 429, 1437, 429, 1440,
	1441, 0, 0, 0, 1032, 0, 0, 1258, 1452, 0,
	0, 1268, 1269, 1270, 1271, 1272, 1446, 0, 0, 0,
	1287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 217, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 1211, 0, 1213, 1214, 0, 0, 1340, 0, 0,
	1352, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 1111, 1111, 1111, 0, 0, 0,
	1589, 1590, 1460, 1461, 1115, 1462, 1044, 1023, 1062, 1552,
	0, 1545, 0, -2, 1554, 0, 0, 0, 1560, 444,
	445, 1036, 91, 1116, 94, 0, 1570, 1579, 0, 1561,
	1572, 1574, 0, 0, 0, 1566, 0, 1115, 1046, 1077,
	1079, 0, 1074, 1089, 1090, 1092, 0, 1094, 0, 1096,
	1097, 1057, 1051, 0, 111, 0, 1115, 1115, 110, 0,
	1102, 130, 131, 132, 530, 256, 261, 0, 0, 0,
	266, 0, 268, 0, 0, 0, 273, 274, 470, 470,
	505, 0, 373, 375, 0, 0, 259, 443, 0, 443,
	0, 434, 436, 0, 506, 526, 1486, 1487, 0, 0,
	463, 467, 468, 469, 0, 0, 0, 0, 174, 175,
	176, 0, 220, 0, 0, 0, 715, 0, 743, 0,
	0, 0, 0, 0, 0, 248, 585, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 0, 470, 0, 0,
	0, 470, 470, 470, 0, 800, 457, 0, 0, 771,
	768, 607, 0, 297, 298, 300, 0, 0, 0, 0,
	0, 614, 0, 0, 151, 152, 153, 154, 155, 157,
	0, 0, 163, 0, 0, 1057, 1503, 1504, 1505, 0,
	1524, 1528, 208, 0, 0, 0, 0, 661, 671, 0,
	587, 672, 683, 687, 684, 692, 702, 703, 813, 814,
	815, 106, 833, 839, 975, 996, 1123, 1131, 1135, 0,
	0, 0, 0, 1443, 1427, 443, 1430, 1431, 1433, 1435,
	1436, 1438, 1439, 1171, 1172, 1176, 0, 1255, 0, 1257,
	1450, 0, 1480, 0, 0, 0, 1286, 0, 0, 0,
	1297, 1296, 1298, 0, 1300, 1301, 1306, 1307, 1311, 0,
	1313, 1315, 1316, 0, 0, 0, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 0, 1205, 1208, 1339,
	1215, 1216, 1221, 1342, 0, 0, 1251, 1354, 0, 1359,
	0, 0, 1365, 0, 1369, 0, 1375, 1376, 1378, 1380,
	0, 0, 0, 0, 0, 1083, 1064, 75, 1462, 1464,
	0, 1539, 1537, 1537, 1547, 1548, 0, 0, 1555, 0,
	0, 0, 0, 95, 0, 0, 0, 1575, 0, 0,
	0, 0, 112, 1471, 1071, 1078, 0, 0, 1072, 0,
	1073, 1093, 1095, 1050, 0, 1115, 1115, 101, 102, 0,
	262, 0, 264, 290, 291, 0, 267, 269, 270, 271,
	277, 278, 279, 272, 0, 0, 372, 374, 0, 0,
	417, 428, 418, 0, 0, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 0, 0, 147, 148, 149, 150, 0,
	165, 0, 0, 1057, 221, 222, 223, 707, 0, 717,
	0, 1059, 0, 710, 0, 596, 0, 0, 0, 470,
	470, 470, 0, 0, 0, 0, 785, 0, 0, 748,
	0, 756, 0, 0, 0, 301, 302, 142, 0, 0,
	0, 0, 0, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 172, 0, 1523, 650, 0, 206, 207,
	0, 0, 655, 589, 590, 688, 1169, 0, 0, 0,
	1170, 1428, 0, 0, 0, 0, 1447, 0, 0, 0,
	0, 1293, 0, 0, 0, 1319, 0, 0, 0, 737,
	738, 0, 1383, 1210, 1471, 0, 1212, 1222, 1223, 0,
	1212, 1353, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 1103, 1464, 1469, 0, 0, 1542,
	0, 1535, 1538, 1536, 1549, 0, 0, 1556, 0, 1558,
	0, 1580, 1581, 1573, 0, 1565, 1568, 1564, 1567, 1480,
	1075, 0, 1080, 0, 1471, 100, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 276,
	0, 0, 432, 437, 141, 0, 0, 0, 0, 170,
	0, 0, 0, 708, 0, 1060, 720, 711, 0, 798,
	0, 802, 0, 0, 0, 805, 806, 807, 784, 0,
	788, 498, 772, 769, 770, 608, 0, 145, 0, 0,
	194, 195, 167, 0, 0, 0, 0, 209, 210, 0,
	0, 0, 1417, 0, 1420, 1254, 1256, 0, 1283, 1284,
	1285, 1425, 1426, 1299, 1312, 1317, 0, 1320, 0, 0,
	1321, 0, 739, 1201, 0, 0, 1219, 1220, 0, 1355,
	0, 1360, 1361, 0, 1366, 0, 1370, 1381, 0, 1108,
	1065, 1066, 1113, 1114, 0, 0, 1056, 1469, 93, 1470,
	1467, 0, 1465, 1463, 1531, 0, 1540, 1541, 1550, 1551,
	1557, 0, 1563, 0, 98, 0, 0, 0, 1480, 263,
	0, 282, 0, 143, 0, 0, 0, 716, 0, 719,
	709, 796, 797, 0, 809, 801, 803, 804, 786, -2,
	0, 169, 0, 0, 0, 181, 173, 1506, 0, 0,
	0, 657, 1418, 0, 0, 1322, 0, 735, 736, 1209,
	1202, 0, 1187, 1188, 1206, 1341, 1343, 0, 0, 0,
	0, 1107, 1109, 1110, 92, 0, 1466, 1227, 0, 1543,
	1544, 1571, 1569, 1076, 1083, 0, 99, 511, 504, 0,
	156, 171, 1506, 0, 0, 0, 789, 790, 791, 792,
	793, 794, 795, 146, 0, 192, 0, 647, 1508, 211,
	212, 577, 578, 579, 205, 0, 1260, 1318, 1203, 0,
	0, 0, 0, 1199, 1200, 0, 1356, 0, 1362, 0,
	1367, 0, 1067, 1068, 1468, 0, 0, 721, 0, 723,
	0, -2, 499, 512, 0, 257, 283, 284, 0, 0,
	287, 288, 289, 280, 281, 144, 201, 0, 0, 810,
	0, 182, 0, 1509, 1510, 208, 0, 0, 1194, 1195,
	1196, 1197, 1198, 0, 0, 0, 1228, 1207, 722, 0,
	0, 454, 0, 732, 500, 501, 0, 507, 508, 509,
	510, 285, 286, 744, 0, 193, 0, 654, 1419, 0,
	1357, 0, 1363, 0, 1368, 0, 724, 725, 733, 0,
	502, 0, 503, 0, 0, 0, 713, 0, 744, 1507,
	1204, 0, 0, 1226, 0, 734, 730, 513, 515, 516,
	0, 0, 514, 745, 714, 1358, 1364, 0, 517, 518,
	519, 726, 727, 728, 729,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 701,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:687
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:692
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:740
		{
			setParseTree(yylex, nil)
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:746
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:757
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:767
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:771
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:777
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:789
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:793
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:802
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:812
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:818
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:918
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:924
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:928
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:933
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:937
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:943
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:947
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:952
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:958
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:964
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:985
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:989
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1019
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1023
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1029
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1035
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1039
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1043
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1047
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1057
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1067
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1077
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1090
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1096
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1102
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1106
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1112
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1116
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1120
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1124
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1130
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1134
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1138
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1144
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1154
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1164
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1168
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1172
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.str = RepeatableReadStr
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.str = ReadCommittedStr
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.str = SerializableStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1196
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1200
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1204
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1211
		{
			yyLOCAL = &ShowWescaleCDC{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1215
		{
			yyLOCAL = &ShowWescaleCDC{Name: yyDollar[4].str, ShowCreate: true}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1219
		{
			yyLOCAL = &ShowWescaleCDC{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1225
		{
			yyLOCAL = &DropWescaleCDC{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1231
		{
			yyLOCAL = &CreateWescaleCDC{IfNotExists: yyDollar[4].booleanUnion(), Name: yyDollar[5].str, Description: yyDollar[8].createWescaleCDCUnion().Description, Enable: yyDollar[8].createWescaleCDCUnion().Enable, WasmBinaryName: yyDollar[8].createWescaleCDCUnion().WasmBinaryName, Env: yyDollar[8].createWescaleCDCUnion().Env}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1237
		{
			yyLOCAL = &AlterWescaleCDC{OriginName: yyDollar[4].str, Name: yyDollar[7].alterWescaleCDCUnion().Name, Description: yyDollar[7].alterWescaleCDCUnion().Description, Enable: yyDollar[7].alterWescaleCDCUnion().Enable, WasmBinaryName: yyDollar[7].alterWescaleCDCUnion().WasmBinaryName, Env: yyDollar[7].alterWescaleCDCUnion().Env}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleCDC
//line sql.y:1243
		{
			yyLOCAL = &CreateWescaleCDC{Name: "-75516781", Description: "-75516781", Enable: "-75516781", WasmBinaryName: "-75516781", Env: "-75516781"}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "enable" {
				yyLOCAL.Enable = yyDollar[3].str
			}
			if yyDollar[1].str == "wasm_binary_name" {
				yyLOCAL.WasmBinaryName = yyDollar[3].str
			}
			if yyDollar[1].str == "env" {
				yyLOCAL.Env = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1259
		{
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleCDCUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "enable" {
				yyVAL.createWescaleCDCUnion().Enable = yyDollar[5].str
			}
			if yyDollar[3].str == "wasm_binary_name" {
				yyVAL.createWescaleCDCUnion().WasmBinaryName = yyDollar[5].str
			}
			if yyDollar[3].str == "env" {
				yyVAL.createWescaleCDCUnion().Env = yyDollar[5].str
			}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleCDC
//line sql.y:1277
		{
			yyLOCAL = &AlterWescaleCDC{Name: "-75516781", Description: "-75516781", Enable: "-75516781", WasmBinaryName: "-75516781", Env: "-75516781"}
			if yyDollar[1].str == "name" {
				yyLOCAL.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "enable" {
				yyLOCAL.Enable = yyDollar[3].str
			}
			if yyDollar[1].str == "wasm_binary_name" {
				yyLOCAL.WasmBinaryName = yyDollar[3].str
			}
			if yyDollar[1].str == "env" {
				yyLOCAL.Env = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1296
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleCDCUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleCDCUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "enable" {
				yyVAL.alterWescaleCDCUnion().Enable = yyDollar[5].str
			}
			if yyDollar[3].str == "wasm_binary_name" {
				yyVAL.alterWescaleCDCUnion().WasmBinaryName = yyDollar[5].str
			}
			if yyDollar[3].str == "env" {
				yyVAL.alterWescaleCDCUnion().Env = yyDollar[5].str
			}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = "description"
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = "enable"
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = "wasm_binary_name"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = "env"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.str = "name"
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1338
		{
			yyVAL.str = "description"
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1342
		{
			yyVAL.str = "enable"
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.str = "wasm_binary_name"
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = "env"
		}
	case 156:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1358
		{
			yyLOCAL = &CreateWescaleFilter{Name: yyDollar[5].str, Description: yyDollar[6].createWescaleFilterUnion().Description, Priority: yyDollar[6].createWescaleFilterUnion().Priority, Status: yyDollar[6].createWescaleFilterUnion().Status, IfNotExists: yyDollar[4].booleanUnion(), Pattern: yyDollar[7].wescaleFilterPatternUnion(), Action: yyDollar[10].wescaleFilterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1364
		{
			yyLOCAL = &AlterWescaleFilter{OriginName: yyDollar[4].str, AlterInfo: &CreateWescaleFilter{Name: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Name, Description: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Description, Status: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Status, Priority: yyDollar[5].alterWescaleFilterUnion().AlterInfo.Priority, Pattern: yyDollar[6].wescaleFilterPatternUnion(), Action: yyDollar[7].wescaleFilterActionUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1370
		{
			yyLOCAL = &DropWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1376
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1380
		{
			yyLOCAL = &ShowWescaleFilter{Name: yyDollar[4].str, ShowCreate: true}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1384
		{
			yyLOCAL = &ShowWescaleFilter{ShowAll: true}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1392
		{
			yyLOCAL = &AlterWescaleFilter{AlterInfo: &CreateWescaleFilter{Name: "-75516781", Description: "-75516781", Priority: "-75516781", Status: "-75516781"}}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1396
		{
			yyLOCAL = yyDollar[2].alterWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1402
		{
			yyLOCAL = &CreateWescaleFilter{Description: "-75516781", Priority: "-75516781", Status: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1406
		{
			yyLOCAL = yyDollar[2].createWescaleFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1412
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-75516781", FullyQualifiedTableNames: "-75516781", QueryRegex: "-75516781", QueryTemplate: "-75516781", RequestIPRegex: "-75516781", UserRegex: "-75516781", LeadingCommentRegex: "-75516781", TrailingCommentRegex: "-75516781", BindVarConds: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1416
		{
			yyLOCAL = yyDollar[3].wescaleFilterPatternUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1422
		{
			yyLOCAL = &WescaleFilterAction{Action: "-75516781", ActionArgs: "-75516781"}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1426
		{
			yyLOCAL = yyDollar[3].wescaleFilterActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateWescaleFilter
//line sql.y:1434
		{
			yyLOCAL = &CreateWescaleFilter{Description: "-75516781", Priority: "-75516781", Status: "-75516781"}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1447
		{
			if yyDollar[3].str == "description" {
				yyVAL.createWescaleFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createWescaleFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createWescaleFilterUnion().Status = yyDollar[5].str
			}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterWescaleFilter
//line sql.y:1462
		{
			yyLOCAL = &AlterWescaleFilter{AlterInfo: &CreateWescaleFilter{Name: "-75516781", Description: "-75516781", Priority: "-75516781", Status: "-75516781"}}
			if yyDollar[1].str == "name" {
				yyLOCAL.AlterInfo.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.AlterInfo.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.AlterInfo.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.AlterInfo.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.alterWescaleFilterUnion().AlterInfo.Status = yyDollar[5].str
			}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = "description"
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = "priority"
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = "status"
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = "name"
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = "description"
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = "priority"
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = "status"
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterPattern
//line sql.y:1528
		{
			yyLOCAL = &WescaleFilterPattern{Plans: "-75516781", FullyQualifiedTableNames: "-75516781", QueryRegex: "-75516781", QueryTemplate: "-75516781", RequestIPRegex: "-75516781", UserRegex: "-75516781", LeadingCommentRegex: "-75516781", TrailingCommentRegex: "-75516781", BindVarConds: "-75516781"}
			if yyDollar[1].str == "plans" {
				yyLOCAL.Plans = yyDollar[3].str
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL.FullyQualifiedTableNames = yyDollar[3].str
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL.QueryRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL.QueryTemplate = yyDollar[3].str
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL.RequestIPRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL.UserRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL.LeadingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL.TrailingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL.BindVarConds = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1559
		{
			if yyDollar[3].str == "plans" {
				yyVAL.wescaleFilterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.wescaleFilterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.wescaleFilterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.wescaleFilterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.wescaleFilterPatternUnion().RequestIPRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.wescaleFilterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.wescaleFilterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.wescaleFilterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = "plans"
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = "query_regex"
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = "query_template"
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = "request_ip_regex"
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = "user_regex"
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = "bind_var_conds"
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WescaleFilterAction
//line sql.y:1630
		{
			yyLOCAL = &WescaleFilterAction{Action: "-75516781", ActionArgs: "-75516781"}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1640
		{
			if yyDollar[3].str == "action" {
				yyVAL.wescaleFilterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.wescaleFilterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = "action"
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = "action_args"
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1662
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1668
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1675
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1680
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1685
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1694
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1698
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1714
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1729
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1734
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1740
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1751
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1760
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1766
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1782
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1789
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1796
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1801
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1806
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1811
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1818
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1825
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1836
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1847
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1853
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1857
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1861
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1883
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1889
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1893
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1899
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1909
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1913
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1919
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1923
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1929
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1939
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1944
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1953
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1976
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1985
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = ""
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = ""
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2007
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2011
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2017
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2023
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2028
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2033
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2038
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2043
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2048
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2057
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2066
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2071
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2077
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2083
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2087
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2093
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2097
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:2101
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:2107
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:2111
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2116
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2120
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2125
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2131
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2137
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2142
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2147
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2153
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2168
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2172
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2176
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2180
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2184
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2194
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2201
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2205
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2211
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2219
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2223
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2227
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2231
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2235
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2239
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2244
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2248
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2252
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2256
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2260
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2264
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2269
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2273
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2277
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = Armscii8Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.str = ASCIIStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = Big5Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = UBinaryStr
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = Cp1250Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = Cp1251Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = Cp1256Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = Cp1257Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = Cp850Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = Cp852Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = Cp866Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = Cp932Str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = Dec8Str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = EucjpmsStr
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = EuckrStr
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = Gb18030Str
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = Gb2312Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = GbkStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = Geostd8Str
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = GreekStr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = HebrewStr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = Hp8Str
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = Keybcs2Str
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = Koi8rStr
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = Koi8uStr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = Latin1Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.str = Latin2Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.str = Latin5Str
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = Latin7Str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = MacceStr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = MacromanStr
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = SjisStr
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = Swe7Str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = Tis620Str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = Ucs2Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = UjisStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = Utf16Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = Utf16leStr
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = Utf32Str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = Utf8Str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = Utf8mb4Str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = Utf8Str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2457
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2461
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2465
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2471
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2475
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2489
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2496
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2500
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2504
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2508
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2757
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2766
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2812
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2826
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2847
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2868
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2872
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2891
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2900
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2906
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2916
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2920
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2925
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2929
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2933
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2937
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2941
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2945
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2961
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2965
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2969
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2973
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2977
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = yyDollar[2].str
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = "key"
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = yyDollar[1].str
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:3044
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:3054
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:3058
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3064
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3068
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3074
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:3078
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:3084
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3090
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3094
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3098
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3102
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3106
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:3115
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:3121
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3127
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3133
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3137
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3141
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3146
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3150
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3156
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3162
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3168
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3172
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3176
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3180
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3184
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3203
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3212
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3216
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3225
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3231
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3235
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3239
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3245
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3255
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3259
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3263
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3267
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3271
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3275
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3279
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3283
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3287
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3291
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3295
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3311
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3315
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3319
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3323
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.str = ""
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3439
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3457
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3461
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3470
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3474
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3478
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3482
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3486
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3492
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3506
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3510
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3514
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3518
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3522
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3526
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3530
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3534
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3538
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3542
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3547
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3552
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3556
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3560
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3564
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3568
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3572
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3576
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3580
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3584
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3588
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3592
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3596
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3600
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3604
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3608
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3612
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3616
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3620
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3624
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3628
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3634
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3638
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3644
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3648
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3652
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3656
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3660
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3664
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3668
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3672
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3676
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3680
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3723
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4160
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4169
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4177
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4186
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:4193
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4205
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4214
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4229
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4243
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4247
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4253
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4259
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4265
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4275
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4279
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4285
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4291
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4297
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4303
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4309
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4313
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4317
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4321
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4327
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4333
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4339
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4343
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4347
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4353
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4357
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4362
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4366
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4371
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4375
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4381
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4385
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4389
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4393
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4397
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4401
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4405
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4409
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4413
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4417
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4421
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4425
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4429
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4433
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4437
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4441
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4445
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4449
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4453
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4457
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4461
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4465
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4484
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4494
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4499
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4503
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4508
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4513
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4518
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4523
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4528
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4534
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4540
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4545
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4551
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4557
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4567
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4572
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4576
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4581
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4586
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4591
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4596
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4602
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4608
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4615
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4622
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4629
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4637
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4641
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4647
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4653
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4659
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4665
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4671
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4677
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4689
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = ""
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4705
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4711
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4715
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 814:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4721
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4725
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4734
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4738
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4744
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4748
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4754
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4766
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4770
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4780
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4790
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4794
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4804
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4808
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4816
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4820
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4844
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4848
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4852
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4856
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4860
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4864
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4868
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4872
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4876
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4884
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4904
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4908
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4912
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4916
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4920
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4924
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4928
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4932
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4940
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4944
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4948
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4952
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4956
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4960
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4964
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4968
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4972
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4984
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4988
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4992
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4996
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5011
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5015
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5019
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5023
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5027
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5031
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5035
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5039
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5043
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5049
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.str = "extended "
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5059
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5083
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5087
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5097
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5101
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:5111
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5117
		{
			yyVAL.empty = struct{}{}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5121
		{
			yyVAL.empty = struct{}{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5141
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5145
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5149
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5156
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5168
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5175
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5179
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5188
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:5194
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5204
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5208
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:5212
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5219
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5225
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5229
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5234
		{
			yyVAL.empty = struct{}{}
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.empty = struct{}{}
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5239
		{
			yyVAL.empty = struct{}{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5245
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5251
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5256
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5260
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5264
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5268
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5272
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5276
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5280
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5285
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5289
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5293
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5297
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = yyDollar[1].str
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5317
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5321
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5325
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5329
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5334
		{
			yyVAL.str = ""
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5348
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5352
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5358
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5364
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5368
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5374
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5380
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5390
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5396
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5400
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5404
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5408
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5414
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5420
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5424
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5430
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5434
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5438
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5442
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5446
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5450
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5456
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5541
		{
			setAllowComments(yylex, true)
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5551
		{
			yyVAL.strs = nil
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5555
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5561
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5565
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5569
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = ""
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = SQLCacheStr
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5587
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5591
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5601
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5605
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5615
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5624
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5630
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5634
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5643
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5648
		{
			yyVAL.strs = nil
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5660
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5664
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = SQLCacheStr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = DistinctStr
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = DistinctStr
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = StraightJoinHint
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5700
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5704
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5710
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5714
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5718
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5722
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5727
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5731
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5735
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5747
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5751
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5757
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5763
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5767
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5777
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5781
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5785
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5789
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5795
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5799
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5805
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5809
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5818
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5827
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5833
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5837
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5843
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5847
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5853
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5857
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5861
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5865
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5871
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5888
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5892
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5896
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5900
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5906
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5908
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5912
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5918
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5920
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5923
		{
			yyVAL.empty = struct{}{}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.empty = struct{}{}
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5928
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5932
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5936
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5949
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5953
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5957
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5963
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5969
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5973
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5977
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5981
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5987
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5991
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6021
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6030
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:6036
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6040
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6046
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6050
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6054
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:6058
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6063
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6067
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6071
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:6075
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6365
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6369
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6375
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6379
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6385
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6389
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6393
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6399
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6403
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6410
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6414
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6418
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6422
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6426
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6432
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6436
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6440
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6444
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6448
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6467
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6473
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6477
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6486
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6491
		{
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6500
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6506
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6510
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6522
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6528
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6532
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6538
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6542
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6548
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6552
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6564
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6570
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6574
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6580
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6586
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6590
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6606
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6610
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6617
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6621
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6625
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6629
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6635
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6639
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6643
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6647
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6651
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6655
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6659
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6665
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6669
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6673
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6680
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6686
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6690
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6908
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6912
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6916
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6956
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6960
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6964
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6968
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6984
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7004
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7008
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7016
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7020
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7024
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7028
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7032
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7036
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7040
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7044
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7048
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7052
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7056
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7060
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7064
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7068
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7072
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7076
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7080
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7084
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7088
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7098
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7102
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7106
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7110
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7120
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7126
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7130
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7134
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7138
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7142
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7151
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7159
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7163
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7167
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7172
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7176
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7180
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7184
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7191
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7195
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7201
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7205
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7209
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7213
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7219
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7223
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7227
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7231
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7235
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7243
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7252
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7258
		{
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7260
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7264
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7268
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7272
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7276
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7280
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7284
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7288
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7292
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7296
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7300
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7306
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7310
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7314
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7318
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7322
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7326
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7330
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7334
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7338
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7356
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7360
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7371
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7375
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7379
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7383
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7387
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7393
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7397
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7401
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7405
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7409
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7415
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7469
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7473
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7477
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7481
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7485
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7489
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7501
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7525
		{
			yyVAL.str = string("")
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7535
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7539
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7545
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7554
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7560
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7564
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7568
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7572
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7578
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7582
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7588
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7597
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7601
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7611
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7620
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7626
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7632
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7636
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7645
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7654
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7660
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7666
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7670
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7676
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7681
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7685
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7689
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7698
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7704
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7708
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7712
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7721
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7725
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7729
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7733
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7743
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7747
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7751
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7755
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7761
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7765
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7769
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7773
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7778
		{
			yyVAL.str = ""
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7795
		{
			yyVAL.str = ""
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7805
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7809
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7814
		{
			yyVAL.str = ""
		}
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7818
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = "cascaded"
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7827
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7831
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7840
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7844
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7850
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7854
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7858
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7862
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7866
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7870
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7880
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7886
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7892
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7898
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7907
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7911
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7916
		{
			yyVAL.str = ""
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7920
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7926
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7930
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7936
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7940
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7944
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7949
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7953
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7957
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7962
		{
			yyVAL.str = ""
		}
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7966
		{
			yyVAL.str = " header"
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7971
		{
			yyVAL.str = ""
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7975
		{
			yyVAL.str = " manifest on"
		}
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7979
		{
			yyVAL.str = " manifest off"
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7984
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7988
		{
			yyVAL.str = " overwrite on"
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7992
		{
			yyVAL.str = " overwrite off"
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7998
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8003
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8007
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8013
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8017
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8023
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8027
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8032
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8036
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8042
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8046
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8052
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8056
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8060
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8065
		{
			yyVAL.str = ""
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8069
		{
			yyVAL.str = " optionally"
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8082
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8086
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8090
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8094
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8098
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8104
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8108
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8112
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8116
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8125
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8131
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8135
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8141
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8145
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8151
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8155
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8160
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8170
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8174
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8180
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8187
		{
			yyVAL.str = "charset"
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8197
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8201
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8205
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8221
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8224
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8234
		{
			yyVAL.empty = struct{}{}
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8236
		{
			yyVAL.empty = struct{}{}
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8238
		{
			yyVAL.empty = struct{}{}
		}
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8242
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8251
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8258
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8262
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8268
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8272
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8279
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8285
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8289
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8295
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8299
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8306
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8917
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8926
		{
			decNesting(yylex)
		}
	case 2203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8931
		{
			skipToEnd(yylex)
		}
	case 2204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8936
		{
			skipToEnd(yylex)
		}
	case 2205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8940
		{
			skipToEnd(yylex)
		}
	case 2206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8944
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
