// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:23
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:23

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const RELOAD = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const FILTER = 57628
const WITHPATTERN = 57629
const PRIORITY = 57630
const PLANS = 57631
const TABLE_NAME = 57632
const QUERY_REGEX = 57633
const QUERY_TEMPLATE = 57634
const REQUEST_IP_REGEX = 57635
const USER_REGEX = 57636
const LEADING_COMMENT_REGEX = 57637
const TRAILING_COMMENT_REGEX = 57638
const BIND_VAR_CONDS = 57639
const ACTION_ARGS = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const EXPIRE = 57649
const RATIO = 57650
const PAUSE = 57651
const RESUME = 57652
const SCHEMA_MIGRATION = 57653
const VITESS_THROTTLER = 57654
const DML_JOB = 57655
const DETAILS = 57656
const TIME_PERIOD = 57657
const BEGIN = 57658
const START = 57659
const TRANSACTION = 57660
const COMMIT = 57661
const ROLLBACK = 57662
const SAVEPOINT = 57663
const RELEASE = 57664
const WORK = 57665
const CONSISTENT = 57666
const SNAPSHOT = 57667
const BIT = 57668
const TINYINT = 57669
const SMALLINT = 57670
const MEDIUMINT = 57671
const INT = 57672
const INTEGER = 57673
const BIGINT = 57674
const INTNUM = 57675
const REAL = 57676
const DOUBLE = 57677
const FLOAT_TYPE = 57678
const FLOAT4_TYPE = 57679
const FLOAT8_TYPE = 57680
const DECIMAL_TYPE = 57681
const NUMERIC = 57682
const TIME = 57683
const TIMESTAMP = 57684
const DATETIME = 57685
const YEAR = 57686
const CHAR = 57687
const VARCHAR = 57688
const BOOL = 57689
const CHARACTER = 57690
const VARBINARY = 57691
const NCHAR = 57692
const TEXT = 57693
const TINYTEXT = 57694
const MEDIUMTEXT = 57695
const LONGTEXT = 57696
const BLOB = 57697
const TINYBLOB = 57698
const MEDIUMBLOB = 57699
const LONGBLOB = 57700
const JSON = 57701
const JSON_SCHEMA_VALID = 57702
const JSON_SCHEMA_VALIDATION_REPORT = 57703
const ENUM = 57704
const GEOMETRY = 57705
const POINT = 57706
const LINESTRING = 57707
const POLYGON = 57708
const GEOMCOLLECTION = 57709
const GEOMETRYCOLLECTION = 57710
const MULTIPOINT = 57711
const MULTILINESTRING = 57712
const MULTIPOLYGON = 57713
const ASCII = 57714
const UNICODE = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const CODE = 57722
const COLLATION = 57723
const COLUMNS = 57724
const DATABASES = 57725
const ENGINES = 57726
const EVENT = 57727
const EXTENDED = 57728
const FIELDS = 57729
const FULL = 57730
const FUNCTION = 57731
const GTID_EXECUTED = 57732
const KEYSPACES = 57733
const OPEN = 57734
const PLUGINS = 57735
const PRIVILEGES = 57736
const PROCESSLIST = 57737
const SCHEMAS = 57738
const TABLES = 57739
const TRIGGERS = 57740
const USER = 57741
const VGTID_EXECUTED = 57742
const VITESS_KEYSPACES = 57743
const VITESS_METADATA = 57744
const VITESS_MIGRATIONS = 57745
const VITESS_REPLICATION_STATUS = 57746
const VITESS_SHARDS = 57747
const VITESS_TABLETS = 57748
const VITESS_TARGET = 57749
const VSCHEMA = 57750
const VITESS_THROTTLED_APPS = 57751
const WORKLOAD = 57752
const LASTSEENGTID = 57753
const FAILPOINTS = 57754
const TABLETS_PLANS = 57755
const DML_JOBS = 57756
const NAMES = 57757
const GLOBAL = 57758
const SESSION = 57759
const ISOLATION = 57760
const LEVEL = 57761
const READ = 57762
const WRITE = 57763
const ONLY = 57764
const REPEATABLE = 57765
const COMMITTED = 57766
const UNCOMMITTED = 57767
const SERIALIZABLE = 57768
const FAST = 57769
const QUICK = 57770
const CHANGED = 57771
const MEDIUM = 57772
const CURRENT_TIMESTAMP = 57773
const DATABASE = 57774
const CURRENT_DATE = 57775
const NOW = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const CURRENT_USER = 57780
const UTC_DATE = 57781
const UTC_TIME = 57782
const UTC_TIMESTAMP = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const REPLACE = 57803
const CONVERT = 57804
const CAST = 57805
const SUBSTR = 57806
const SUBSTRING = 57807
const SEPARATOR = 57808
const TIMESTAMPADD = 57809
const TIMESTAMPDIFF = 57810
const WEIGHT_STRING = 57811
const LTRIM = 57812
const RTRIM = 57813
const TRIM = 57814
const JSON_ARRAY = 57815
const JSON_OBJECT = 57816
const JSON_QUOTE = 57817
const JSON_DEPTH = 57818
const JSON_TYPE = 57819
const JSON_LENGTH = 57820
const JSON_VALID = 57821
const JSON_ARRAY_APPEND = 57822
const JSON_ARRAY_INSERT = 57823
const JSON_INSERT = 57824
const JSON_MERGE = 57825
const JSON_MERGE_PATCH = 57826
const JSON_MERGE_PRESERVE = 57827
const JSON_REMOVE = 57828
const JSON_REPLACE = 57829
const JSON_SET = 57830
const JSON_UNQUOTE = 57831
const COUNT = 57832
const AVG = 57833
const MAX = 57834
const MIN = 57835
const SUM = 57836
const GROUP_CONCAT = 57837
const BIT_AND = 57838
const BIT_OR = 57839
const BIT_XOR = 57840
const STD = 57841
const STDDEV = 57842
const STDDEV_POP = 57843
const STDDEV_SAMP = 57844
const VAR_POP = 57845
const VAR_SAMP = 57846
const VARIANCE = 57847
const REGEXP_INSTR = 57848
const REGEXP_LIKE = 57849
const REGEXP_REPLACE = 57850
const REGEXP_SUBSTR = 57851
const ExtractValue = 57852
const UpdateXML = 57853
const GET_LOCK = 57854
const RELEASE_LOCK = 57855
const RELEASE_ALL_LOCKS = 57856
const IS_FREE_LOCK = 57857
const IS_USED_LOCK = 57858
const LOCATE = 57859
const POSITION = 57860
const MATCH = 57861
const AGAINST = 57862
const BOOLEAN = 57863
const LANGUAGE = 57864
const WITH = 57865
const QUERY = 57866
const EXPANSION = 57867
const WITHOUT = 57868
const VALIDATION = 57869
const UNUSED = 57870
const ARRAY = 57871
const BYTE = 57872
const CUME_DIST = 57873
const DESCRIPTION = 57874
const DENSE_RANK = 57875
const EMPTY = 57876
const EXCEPT = 57877
const FIRST_VALUE = 57878
const GROUPING = 57879
const GROUPS = 57880
const JSON_TABLE = 57881
const LAG = 57882
const LAST_VALUE = 57883
const LATERAL = 57884
const LEAD = 57885
const NTH_VALUE = 57886
const NTILE = 57887
const OF = 57888
const OVER = 57889
const PERCENT_RANK = 57890
const RANK = 57891
const RECURSIVE = 57892
const ROW_NUMBER = 57893
const SYSTEM = 57894
const WINDOW = 57895
const ACTIVE = 57896
const ADMIN = 57897
const AUTOEXTEND_SIZE = 57898
const BUCKETS = 57899
const CLONE = 57900
const COLUMN_FORMAT = 57901
const COMPONENT = 57902
const DEFINITION = 57903
const ENFORCED = 57904
const ENGINE_ATTRIBUTE = 57905
const EXCLUDE = 57906
const FOLLOWING = 57907
const GET_MASTER_PUBLIC_KEY = 57908
const HISTOGRAM = 57909
const HISTORY = 57910
const INACTIVE = 57911
const INVISIBLE = 57912
const LOCKED = 57913
const MASTER_COMPRESSION_ALGORITHMS = 57914
const MASTER_PUBLIC_KEY_PATH = 57915
const MASTER_TLS_CIPHERSUITES = 57916
const MASTER_ZSTD_COMPRESSION_LEVEL = 57917
const NESTED = 57918
const NETWORK_NAMESPACE = 57919
const NOWAIT = 57920
const NULLS = 57921
const OJ = 57922
const OLD = 57923
const OPTIONAL = 57924
const ORDINALITY = 57925
const ORGANIZATION = 57926
const OTHERS = 57927
const PARTIAL = 57928
const PATH = 57929
const PERSIST = 57930
const PERSIST_ONLY = 57931
const PRECEDING = 57932
const PRIVILEGE_CHECKS_USER = 57933
const PROCESS = 57934
const RANDOM = 57935
const REFERENCE = 57936
const REQUIRE_ROW_FORMAT = 57937
const RESOURCE = 57938
const RESPECT = 57939
const RESTART = 57940
const RETAIN = 57941
const REUSE = 57942
const ROLE = 57943
const SECONDARY = 57944
const SECONDARY_ENGINE = 57945
const SECONDARY_ENGINE_ATTRIBUTE = 57946
const SECONDARY_LOAD = 57947
const SECONDARY_UNLOAD = 57948
const SIMPLE = 57949
const SKIP = 57950
const SRID = 57951
const THREAD_PRIORITY = 57952
const TIES = 57953
const UNBOUNDED = 57954
const VCPU = 57955
const VISIBLE = 57956
const RETURNING = 57957
const FORMAT_BYTES = 57958
const FORMAT_PICO_TIME = 57959
const PS_CURRENT_THREAD_ID = 57960
const PS_THREAD_ID = 57961
const GTID_SUBSET = 57962
const GTID_SUBTRACT = 57963
const WAIT_FOR_EXECUTED_GTID_SET = 57964
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57965
const FORMAT = 57966
const TREE = 57967
const VITESS = 57968
const TRADITIONAL = 57969
const VTEXPLAIN = 57970
const VEXPLAIN = 57971
const PLAN = 57972
const LOCAL = 57973
const LOW_PRIORITY = 57974
const KILL = 57975
const USERS = 57976
const NO_WRITE_TO_BINLOG = 57977
const LOGS = 57978
const ERROR = 57979
const GENERAL = 57980
const HOSTS = 57981
const OPTIMIZER_COSTS = 57982
const USER_RESOURCES = 57983
const SLOW = 57984
const CHANNEL = 57985
const RELAY = 57986
const EXPORT = 57987
const CURRENT = 57988
const ROW = 57989
const ROWS = 57990
const AVG_ROW_LENGTH = 57991
const CONNECTION = 57992
const CHECKSUM = 57993
const DELAY_KEY_WRITE = 57994
const ENCRYPTION = 57995
const ENGINE = 57996
const INSERT_METHOD = 57997
const MAX_ROWS = 57998
const MIN_ROWS = 57999
const PACK_KEYS = 58000
const PASSWORD = 58001
const FIXED = 58002
const DYNAMIC = 58003
const COMPRESSED = 58004
const REDUNDANT = 58005
const COMPACT = 58006
const ROW_FORMAT = 58007
const STATS_AUTO_RECALC = 58008
const STATS_PERSISTENT = 58009
const STATS_SAMPLE_PAGES = 58010
const STORAGE = 58011
const MEMORY = 58012
const DISK = 58013
const PARTITIONS = 58014
const LINEAR = 58015
const RANGE = 58016
const LIST = 58017
const SUBPARTITION = 58018
const SUBPARTITIONS = 58019
const HASH = 58020

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"RELOAD",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"FILTER",
	"WITHPATTERN",
	"PRIORITY",
	"PLANS",
	"TABLE_NAME",
	"QUERY_REGEX",
	"QUERY_TEMPLATE",
	"REQUEST_IP_REGEX",
	"USER_REGEX",
	"LEADING_COMMENT_REGEX",
	"TRAILING_COMMENT_REGEX",
	"BIND_VAR_CONDS",
	"ACTION_ARGS",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"PAUSE",
	"RESUME",
	"SCHEMA_MIGRATION",
	"VITESS_THROTTLER",
	"DML_JOB",
	"DETAILS",
	"TIME_PERIOD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"WORKLOAD",
	"LASTSEENGTID",
	"FAILPOINTS",
	"TABLETS_PLANS",
	"DML_JOBS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"FAST",
	"QUICK",
	"CHANGED",
	"MEDIUM",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"KILL",
	"USERS",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 54,
	14, 54,
	-2, 43,
	-1, 55,
	1, 195,
	696, 195,
	-2, 203,
	-1, 56,
	135, 203,
	176, 203,
	365, 203,
	-2, 557,
	-1, 66,
	36, 856,
	240, 856,
	251, 856,
	286, 870,
	287, 870,
	-2, 858,
	-1, 71,
	242, 894,
	-2, 892,
	-1, 130,
	239, 1557,
	-2, 169,
	-1, 132,
	1, 196,
	696, 196,
	-2, 203,
	-1, 143,
	136, 443,
	245, 443,
	-2, 546,
	-1, 162,
	135, 203,
	176, 203,
	365, 203,
	-2, 566,
	-1, 848,
	87, 1574,
	-2, 1419,
	-1, 849,
	87, 1575,
	221, 1579,
	-2, 1420,
	-1, 850,
	221, 1578,
	-2, 45,
	-1, 929,
	60, 970,
	-2, 985,
	-1, 1019,
	250, 46,
	255, 46,
	-2, 454,
	-1, 1107,
	1, 614,
	696, 614,
	-2, 203,
	-1, 1422,
	221, 1579,
	-2, 1420,
	-1, 1570,
	60, 971,
	-2, 990,
	-1, 1571,
	60, 972,
	-2, 991,
	-1, 1622,
	135, 203,
	176, 203,
	365, 203,
	-2, 493,
	-1, 1707,
	136, 443,
	245, 443,
	-2, 546,
	-1, 1716,
	250, 47,
	255, 47,
	-2, 455,
	-1, 2107,
	221, 1583,
	-2, 1577,
	-1, 2108,
	221, 1579,
	-2, 1575,
	-1, 2207,
	135, 203,
	176, 203,
	365, 203,
	-2, 494,
	-1, 2214,
	26, 224,
	-2, 226,
	-1, 2627,
	78, 101,
	88, 101,
	-2, 1049,
	-1, 2698,
	671, 765,
	-2, 739,
	-1, 2877,
	50, 1525,
	-2, 1519,
	-1, 3572,
	671, 765,
	-2, 753,
	-1, 3666,
	90, 697,
	95, 697,
	105, 697,
	178, 697,
	179, 697,
	180, 697,
	181, 697,
	182, 697,
	183, 697,
	184, 697,
	185, 697,
	186, 697,
	187, 697,
	188, 697,
	189, 697,
	190, 697,
	191, 697,
	192, 697,
	193, 697,
	194, 697,
	195, 697,
	196, 697,
	197, 697,
	198, 697,
	199, 697,
	200, 697,
	201, 697,
	202, 697,
	203, 697,
	204, 697,
	205, 697,
	206, 697,
	207, 697,
	208, 697,
	209, 697,
	210, 697,
	211, 697,
	212, 697,
	213, 697,
	214, 697,
	215, 697,
	216, 697,
	217, 697,
	218, 697,
	219, 697,
	-2, 1942,
}

const yyPrivate = 57344

const yyLast = 49815

var yyAct = [...]int{
	1578, 3741, 849, 3312, 3752, 3552, 3310, 3708, 2204, 3709,
	722, 3643, 852, 3127, 3270, 3664, 1625, 3280, 3606, 2155,
	3043, 3632, 2929, 2136, 2936, 3536, 3484, 2989, 1920, 2980,
	945, 5, 3534, 2994, 2991, 2990, 2988, 2993, 2992, 2890,
	3271, 2138, 859, 2527, 3259, 818, 2893, 3340, 45, 2561,
	3311, 923, 2836, 2944, 1180, 3524, 851, 3009, 2284, 1585,
	3023, 204, 3024, 3008, 204, 2894, 704, 3166, 2891, 2600,
	681, 1548, 814, 2771, 1974, 687, 3345, 3160, 732, 3011,
	812, 2178, 3186, 819, 2159, 813, 204, 2175, 2888, 2878,
	2587, 2098, 3152, 700, 1683, 3049, 2661, 2241, 2263, 2272,
	2755, 204, 1051, 702, 1123, 2246, 2695, 2662, 978, 2663,
	2192, 171, 2315, 2612, 2180, 946, 46, 2179, 1572, 2579,
	2068, 2593, 2563, 1928, 2069, 925, 44, 1970, 687, 204,
	2095, 687, 1989, 2293, 157, 927, 2103, 930, 1714, 2741,
	2336, 2167, 2248, 1182, 1152, 2271, 2654, 1009, 1732, 2629,
	1614, 696, 1434, 1594, 2182, 1552, 948, 104, 1014, 1361,
	1993, 108, 1854, 714, 1947, 1859, 1346, 986, 982, 1017,
	1815, 109, 1721, 1850, 1020, 1027, 2238, 990, 2237, 1015,
	987, 1016, 1613, 709, 1599, 963, 2160, 965, 1418, 1394,
	936, 2104, 2065, 1170, 933, 1919, 1178, 89, 1868, 175,
	1676, 1706, 140, 111, 103, 135, 133, 134, 932, 141,
	1101, 958, 88, 934, 110, 708, 2002, 1438, 931, 3562,
	2688, 102, 3742, 3260, 2977, 97, 3591, 691, 2286, 2287,
	2288, 2286, 2718, 2717, 2330, 2686, 1798, 3252, 624, 3692,
	2763, 3213, 701, 868, 869, 870, 99, 2764, 953, 957,
	1362, 99, 3592, 629, 99, 136, 1442, 3587, 142, 676,
	1935, 939, 1053, 1934, 1933, 670, 2999, 1932, 1931, 2,
	2999, 1930, 3586, 1950, 1056, 1070, 1071, 1072, 123, 1075,
	1076, 1077, 1078, 2996, 979, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 926, 924, 972, 692, 1007, 973, 3315, 940,
	1903, 1900, 99, 3315, 1030, 2133, 2134, 115, 116, 117,
	1031, 120, 2997, 1006, 130, 694, 2997, 200, 628, 695,
	618, 3687, 136, 1057, 1060, 1061, 947, 198, 1005, 1004,
	1003, 2415, 1064, 2559, 689, 690, 2874, 2589, 3003, 2708,
	975, 3712, 3003, 998, 919, 920, 921, 922, 1362, 1373,
	929, 137, 1073, 159, 868, 869, 870, 3650, 993, 3696,
	1579, 971, 816, 817, 180, 3587, 2840, 3694, 1379, 2319,
	3762, 3707, 3731, 2317, 3132, 3131, 1357, 2711, 960, 961,
	3674, 3537, 2528, 1940, 3695, 3314, 3074, 985, 3474, 670,
	3314, 136, 3693, 3473, 3265, 170, 1055, 3266, 3672, 1054,
	3722, 158, 2257, 3644, 90, 670, 3490, 3678, 3679, 971,
	816, 817, 2264, 2318, 2267, 2946, 2947, 2932, 3690, 3293,
	177, 90, 3673, 178, 92, 2251, 1348, 3281, 3567, 3633,
	3640, 2163, 2312, 2266, 3489, 1979, 3669, 2424, 1695, 3292,
	3094, 2560, 146, 147, 169, 168, 197, 2731, 2732, 2925,
	1106, 3000, 90, 670, 1615, 3000, 1616, 1373, 1860, 2926,
	2927, 2638, 2933, 997, 2637, 1395, 999, 2639, 2199, 2200,
	2198, 1912, 1913, 2762, 1368, 2421, 2603, 1360, 3650, 2747,
	2740, 1142, 99, 917, 90, 671, 2935, 3071, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1404, 1403, 1405, 1406, 99,
	1174, 2604, 2422, 1376, 2930, 1377, 1378, 1147, 1148, 916,
	1130, 2689, 3553, 1143, 1136, 1131, 3045, 2135, 2650, 2217,
	2216, 2946, 2947, 1159, 2945, 1161, 3082, 2805, 2931, 1347,
	99, 3163, 1002, 3358, 1112, 1113, 2948, 2596, 2597, 3713,
	670, 670, 2413, 3080, 1100, 163, 144, 166, 151, 143,
	1911, 164, 165, 684, 1915, 688, 1902, 682, 627, 181,
	3714, 2937, 99, 1158, 1160, 1002, 1115, 994, 187, 152,
	3050, 1611, 2742, 2250, 996, 995, 2968, 2333, 199, 1556,
	670, 1074, 1368, 155, 153, 148, 149, 150, 154, 1358,
	1000, 1557, 3272, 129, 2696, 145, 1130, 2416, 2417, 2419,
	2418, 1131, 2294, 2727, 156, 964, 1002, 1099, 2342, 1129,
	204, 1128, 204, 2337, 1788, 204, 204, 3744, 3038, 671,
	1163, 1836, 2163, 1000, 1144, 1137, 3039, 3046, 1149, 1816,
	2945, 2362, 1173, 2361, 2404, 671, 2365, 2366, 1150, 1172,
	2363, 2364, 2948, 2161, 2162, 1151, 2367, 2378, 2374, 2376,
	2377, 2375, 2381, 2382, 2750, 3273, 2379, 2380, 1789, 687,
	1790, 687, 687, 2343, 1108, 2349, 2345, 2347, 2348, 2346,
	2352, 2353, 3254, 625, 2350, 2351, 3512, 2265, 3513, 3253,
	3688, 687, 204, 671, 1103, 2390, 1156, 2391, 3458, 2392,
	1157, 2393, 1080, 1145, 1146, 2297, 1105, 2341, 1104, 1079,
	1162, 198, 974, 968, 966, 1010, 3047, 2339, 3319, 1011,
	1422, 172, 2806, 1040, 1369, 1038, 1367, 1364, 1365, 1366,
	1372, 1374, 1371, 2176, 1370, 137, 3250, 1126, 1011, 1132,
	1133, 1134, 1135, 1155, 1363, 1049, 1048, 2839, 180, 2340,
	1047, 1046, 1045, 1001, 1044, 1043, 1042, 1037, 1699, 3618,
	974, 968, 966, 1409, 2721, 1560, 1175, 1176, 1177, 1050,
	2948, 2422, 2754, 3763, 983, 3720, 3646, 3561, 2687, 1023,
	671, 671, 983, 1409, 1720, 983, 1001, 2934, 1860, 981,
	1420, 2643, 1022, 1851, 991, 1829, 1164, 1165, 1167, 959,
	1008, 2564, 2566, 1102, 177, 2751, 2323, 178, 167, 626,
	3645, 2652, 2322, 1847, 1412, 1413, 1414, 1415, 1349, 2316,
	671, 1339, 2729, 865, 1426, 1612, 1140, 1001, 865, 2971,
	197, 865, 1369, 2690, 1367, 1364, 1365, 1366, 1372, 1374,
	1371, 1067, 1370, 1029, 2161, 2162, 2726, 3756, 1864, 1059,
	2767, 3249, 1363, 1858, 1693, 1022, 1692, 3164, 1839, 1058,
	1837, 1838, 1422, 1842, 1843, 1340, 1341, 1840, 1841, 160,
	2436, 1041, 161, 1039, 2254, 3072, 3677, 1691, 1066, 2706,
	1416, 1800, 1799, 1801, 1802, 1803, 3211, 3212, 1848, 1861,
	1862, 1865, 1863, 1719, 3001, 3002, 1689, 3646, 3001, 3002,
	93, 623, 173, 622, 2710, 617, 2314, 3005, 3549, 185,
	1546, 3005, 2739, 3291, 2255, 2738, 1410, 1411, 3200, 204,
	3676, 2253, 3182, 687, 687, 2634, 132, 2594, 967, 2599,
	3313, 3645, 1580, 1582, 1820, 3313, 2757, 2757, 204, 2536,
	1982, 2756, 2756, 181, 1603, 98, 1028, 2205, 2709, 1440,
	193, 1441, 187, 1511, 1561, 2256, 1117, 1409, 687, 1406,
	2924, 204, 98, 942, 2423, 2252, 1430, 1171, 3630, 2565,
	1563, 2938, 1114, 687, 1567, 2942, 967, 3578, 1564, 927,
	204, 1127, 2941, 3575, 1153, 1153, 3478, 1111, 1029, 1029,
	1869, 1547, 1444, 98, 1821, 174, 179, 176, 182, 183,
	184, 186, 188, 189, 190, 191, 3116, 1052, 1125, 1356,
	3277, 192, 194, 195, 196, 3276, 2943, 3245, 3235, 3176,
	687, 2939, 1831, 2725, 1830, 98, 2940, 1834, 1835, 2677,
	1139, 1832, 1833, 1422, 2338, 1924, 1844, 1617, 2791, 687,
	687, 1141, 687, 1565, 687, 687, 108, 687, 687, 687,
	687, 687, 687, 1566, 1994, 1547, 109, 1377, 1378, 1166,
	1422, 1687, 2003, 1422, 687, 1422, 204, 3754, 2311, 1379,
	3755, 1553, 3753, 3723, 1378, 1540, 2004, 1517, 1518, 1519,
	1520, 1521, 1817, 1994, 1818, 2453, 204, 1819, 111, 3354,
	3218, 1028, 1028, 3217, 1065, 172, 1032, 1022, 1062, 687,
	2313, 1034, 204, 1726, 2309, 1035, 1033, 1952, 2301, 1696,
	1697, 1698, 1401, 1402, 1404, 1403, 1405, 1406, 687, 1729,
	204, 1953, 1407, 1408, 1951, 1783, 1712, 1379, 1107, 1040,
	1761, 1154, 1154, 1764, 1728, 1766, 1581, 1870, 1718, 2306,
	204, 924, 1379, 1550, 2772, 1038, 926, 204, 1705, 1584,
	1562, 1124, 3715, 3727, 1579, 1379, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 687, 1724, 127, 1864, 2306,
	1765, 1379, 1608, 1609, 3608, 3201, 1773, 1774, 2310, 2168,
	2169, 2100, 1779, 1780, 124, 938, 1734, 3287, 1735, 3288,
	1737, 1739, 3758, 3042, 1743, 1745, 1747, 1749, 1751, 1723,
	3466, 1722, 1722, 1688, 1376, 2001, 1377, 1378, 2308, 1861,
	1862, 1865, 1863, 1029, 1702, 1703, 3465, 3456, 3542, 3609,
	1715, 1824, 1701, 1822, 1823, 3764, 1827, 1828, 1343, 2774,
	1825, 1826, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032,
	3033, 1873, 868, 869, 870, 125, 3304, 1808, 1877, 3303,
	1879, 1880, 1881, 1882, 1769, 3725, 1579, 1886, 1942, 1944,
	1945, 1856, 1376, 3543, 1377, 1378, 3225, 3224, 1694, 1898,
	1899, 2793, 1901, 1871, 1872, 3214, 173, 1376, 2978, 1377,
	1378, 1379, 1943, 185, 2964, 1806, 1029, 1876, 1852, 1795,
	1376, 2659, 1377, 1378, 1883, 1884, 1885, 1029, 1399, 1400,
	1401, 1402, 1404, 1403, 1405, 1406, 1376, 136, 1377, 1378,
	1379, 1807, 3765, 1005, 1004, 1003, 1028, 126, 2784, 2783,
	2782, 1032, 1022, 2776, 193, 2780, 1034, 2775, 2658, 2773,
	1035, 1033, 2657, 2260, 2778, 1379, 1809, 1875, 2428, 2429,
	2430, 687, 687, 2777, 1793, 1792, 2488, 1791, 1579, 1805,
	1379, 1036, 1781, 1794, 687, 1999, 1379, 1897, 1775, 1896,
	1772, 2779, 2781, 204, 2000, 3656, 1579, 1379, 1771, 174,
	179, 176, 182, 183, 184, 186, 188, 189, 190, 191,
	1770, 1741, 1122, 1121, 2443, 192, 194, 195, 196, 1028,
	3208, 676, 2641, 676, 2442, 1022, 1025, 1026, 45, 983,
	1028, 45, 676, 1019, 1023, 1611, 1022, 1025, 1026, 1098,
	983, 3716, 687, 3685, 1019, 1023, 1376, 1588, 1377, 1378,
	1579, 1579, 1422, 1379, 1018, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1381, 687, 3654, 1579, 3175, 2282, 2281, 1422,
	1997, 1579, 2100, 3631, 1998, 1376, 2097, 1377, 1378, 114,
	1379, 3652, 1579, 1977, 1977, 2099, 2280, 2279, 2278, 2277,
	113, 2450, 112, 1589, 687, 687, 3574, 1975, 1975, 863,
	1376, 107, 1377, 1378, 1948, 1546, 1946, 3570, 2061, 2490,
	1379, 2585, 3743, 3477, 3740, 1376, 1978, 1377, 1378, 1375,
	1579, 1376, 1420, 1377, 1378, 1379, 1395, 1956, 3569, 1391,
	3546, 1392, 1376, 3545, 1377, 1378, 2093, 3521, 1579, 1995,
	3703, 1579, 1375, 1579, 2108, 1393, 1407, 1408, 1390, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1404, 1403, 1405, 1406,
	1579, 2122, 1379, 3544, 2449, 1908, 1909, 2585, 3639, 2585,
	3616, 2585, 3612, 2055, 1395, 3481, 2766, 89, 1580, 2129,
	89, 1925, 1379, 2066, 1949, 3480, 1547, 204, 1376, 3461,
	1377, 1378, 3449, 687, 3519, 1579, 2105, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1404, 1403, 1405, 1406, 3443, 3516,
	1579, 1954, 2152, 3599, 1579, 1376, 204, 1377, 1378, 687,
	105, 105, 3442, 2096, 3353, 2147, 3351, 2148, 107, 204,
	3300, 106, 106, 687, 3263, 3560, 2108, 204, 1981, 204,
	3289, 204, 204, 3275, 3558, 1376, 3493, 1377, 1378, 3477,
	3476, 2130, 1545, 1988, 1990, 1379, 687, 2066, 1544, 1543,
	1376, 676, 1377, 1378, 2214, 1955, 3195, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	2110, 2111, 1379, 3222, 2186, 2107, 1579, 1579, 2105, 3469,
	1579, 3563, 108, 2005, 2006, 2007, 2008, 1376, 114, 1377,
	1378, 3207, 109, 1379, 2106, 670, 3056, 2019, 3054, 113,
	3051, 112, 3048, 108, 3035, 687, 2261, 1376, 2970, 1377,
	1378, 2151, 2967, 109, 1397, 1398, 1399, 1400, 1401, 1402,
	1404, 1403, 1405, 1406, 2109, 2966, 1379, 2112, 2113, 3502,
	1579, 2585, 3457, 3498, 687, 2745, 2057, 667, 3275, 3274,
	687, 2223, 2224, 2225, 2226, 2218, 2668, 2219, 2220, 2221,
	2222, 2655, 2209, 2190, 2208, 1542, 3151, 1579, 3497, 939,
	3263, 1579, 3447, 2229, 2230, 2231, 2232, 2107, 2140, 1579,
	2585, 3261, 2128, 2306, 1579, 99, 2328, 3144, 1579, 107,
	1376, 2150, 1377, 1378, 2327, 647, 2173, 687, 2158, 1379,
	2142, 2295, 687, 2243, 2153, 2141, 687, 687, 1379, 645,
	1904, 2249, 2212, 3180, 1579, 2171, 1866, 1376, 3089, 1377,
	1378, 3718, 2501, 1579, 972, 2196, 2195, 973, 2194, 1379,
	2480, 2957, 2956, 2211, 1804, 2210, 1796, 1395, 1376, 1786,
	1377, 1378, 2954, 2955, 204, 2952, 2953, 1592, 1579, 642,
	2292, 2952, 2951, 204, 1782, 2259, 2609, 1579, 660, 2492,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1403, 1405,
	1406, 1376, 1778, 1377, 1378, 2244, 2233, 2235, 2236, 204,
	204, 1777, 2240, 204, 1579, 204, 655, 2300, 1776, 2269,
	2303, 204, 2304, 2258, 2724, 2723, 3446, 2270, 652, 658,
	654, 204, 2276, 2320, 2422, 2719, 1682, 2700, 204, 1590,
	1030, 2693, 2694, 1591, 2244, 2299, 1031, 2676, 2675, 3279,
	2298, 2585, 2584, 2302, 2446, 1579, 1722, 2324, 1395, 2321,
	2435, 2325, 2326, 1379, 1376, 671, 1377, 1378, 204, 1980,
	1579, 113, 2335, 1376, 1169, 1377, 1378, 687, 1682, 1681,
	2697, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1403,
	1405, 1406, 2630, 1168, 1376, 2331, 1377, 1378, 632, 2673,
	634, 648, 2213, 673, 2919, 672, 638, 1375, 636, 640,
	649, 641, 1379, 635, 2422, 646, 1623, 1622, 637, 650,
	651, 657, 661, 662, 664, 659, 656, 665, 630, 631,
	663, 653, 2601, 644, 674, 3177, 2406, 2407, 2581, 3604,
	1375, 2409, 2439, 1422, 2608, 2108, 2444, 3141, 1579, 2447,
	2410, 2448, 2630, 107, 3577, 2631, 2455, 2601, 1379, 2585,
	2457, 2458, 2459, 2609, 2307, 2633, 3136, 2954, 2862, 2197,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2441, 1379, 2396, 2402, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1404, 1403, 1405, 1406, 1948, 3146, 2440, 1376, 2609,
	1377, 1378, 2446, 2889, 2609, 2501, 2481, 2482, 2483, 2484,
	2485, 2446, 2487, 2438, 3175, 2631, 2489, 2433, 2477, 2476,
	2494, 2495, 2306, 2496, 1379, 2422, 2499, 3226, 2500, 3175,
	1379, 2306, 2503, 2289, 2460, 1379, 2507, 2412, 2166, 1583,
	2512, 2513, 2514, 2515, 2131, 1980, 2420, 1376, 1926, 1377,
	1378, 2475, 1910, 2526, 1379, 2529, 2530, 1846, 1610, 1013,
	1012, 3683, 127, 2532, 2534, 3139, 1579, 3680, 3620, 1379,
	2537, 2538, 2539, 2540, 2541, 1949, 2431, 3486, 3227, 3228,
	3229, 2548, 2549, 1586, 2550, 3444, 2107, 2553, 2555, 2152,
	1379, 2557, 1757, 1376, 204, 1377, 1378, 3365, 3244, 1379,
	3241, 2569, 204, 1395, 3234, 2106, 3220, 2981, 3104, 1579,
	3099, 3098, 687, 2452, 3087, 1579, 1376, 1379, 1377, 1378,
	3557, 1684, 2242, 687, 3040, 3022, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1404, 1403, 1405, 1406, 1379, 2556, 1579,
	99, 2568, 2983, 1758, 1759, 1760, 1977, 204, 675, 2979,
	2722, 1379, 204, 2554, 1579, 2432, 2701, 2434, 2239, 1376,
	1975, 1377, 1378, 2486, 2605, 1376, 2234, 1377, 1378, 2228,
	1376, 668, 1377, 1378, 2533, 1579, 2227, 1813, 2570, 1811,
	1717, 45, 3044, 2516, 1579, 1713, 669, 1686, 1678, 1376,
	2623, 1377, 1378, 2625, 128, 2571, 1379, 2573, 2665, 1106,
	3487, 2508, 1579, 2586, 1376, 2257, 1377, 1378, 1379, 2664,
	2145, 3187, 3188, 3737, 1379, 1906, 3735, 3710, 3585, 3507,
	687, 3190, 3453, 2975, 3193, 1376, 2624, 1377, 1378, 2974,
	2582, 1379, 2973, 204, 1376, 3142, 1377, 1378, 2889, 204,
	2680, 2397, 3581, 3192, 2595, 2911, 1553, 2558, 3230, 2908,
	2912, 2907, 1376, 687, 1377, 1378, 1379, 2665, 2909, 697,
	687, 3488, 2157, 2910, 2651, 2653, 2149, 1587, 2578, 687,
	2692, 1547, 1376, 2628, 1377, 1378, 3181, 1907, 2583, 2644,
	2598, 3246, 1379, 2867, 2866, 1422, 1376, 3541, 1377, 1378,
	1753, 3344, 3114, 2716, 1379, 3231, 3232, 3233, 3110, 1379,
	3346, 2632, 204, 204, 204, 204, 204, 2249, 2635, 3168,
	3171, 1379, 2876, 2667, 2642, 3096, 1845, 3167, 2670, 2671,
	1379, 2913, 943, 2618, 2619, 1379, 915, 2950, 2645, 1379,
	944, 1376, 2648, 1377, 1378, 2656, 2669, 1754, 1755, 1756,
	3095, 1069, 1068, 1376, 2003, 1377, 1378, 2879, 2881, 1376,
	2666, 1377, 1378, 105, 105, 2714, 2882, 1379, 2004, 204,
	204, 107, 3065, 2674, 106, 106, 1376, 2660, 1377, 1378,
	2678, 2664, 949, 2760, 1342, 955, 955, 1379, 3092, 2681,
	2682, 2683, 2707, 2552, 1705, 204, 1379, 137, 2713, 3173,
	1379, 1376, 107, 1377, 1378, 2551, 3750, 3335, 2400, 3334,
	2702, 2703, 2168, 2169, 2547, 114, 687, 2389, 2268, 2546,
	3661, 3559, 1379, 2545, 2712, 3482, 113, 1376, 112, 1377,
	1378, 2795, 2796, 2797, 2798, 2799, 2949, 107, 2622, 1376,
	2388, 1377, 1378, 2154, 1376, 2865, 1377, 1378, 951, 952,
	2804, 2544, 2387, 2864, 3153, 1379, 1376, 3333, 1377, 1378,
	2386, 2385, 2384, 687, 2383, 1376, 2373, 1377, 1378, 2743,
	1376, 2543, 1377, 1378, 1376, 2744, 1377, 1378, 1379, 2372,
	2542, 2371, 2746, 2370, 2531, 2369, 2785, 2787, 1577, 1573,
	2752, 2748, 2368, 2360, 2359, 2358, 2357, 2800, 2749, 2768,
	2356, 687, 1376, 1574, 1377, 1378, 2525, 2355, 2354, 687,
	2769, 2614, 2617, 2618, 2619, 2615, 2426, 2616, 2620, 1379,
	2758, 112, 1376, 2759, 1377, 1378, 3529, 3528, 1679, 1680,
	1576, 1376, 1575, 1377, 1378, 1376, 3510, 1377, 1378, 2524,
	687, 2786, 3352, 3350, 2841, 3349, 2817, 3342, 2819, 2788,
	3242, 3172, 1379, 3170, 204, 2843, 2984, 1376, 687, 1377,
	1378, 2846, 2523, 2290, 2830, 2831, 2832, 2833, 3161, 1700,
	950, 113, 687, 3341, 2601, 3323, 1422, 2898, 1379, 687,
	687, 1422, 204, 204, 204, 204, 204, 2096, 2809, 2096,
	1376, 2581, 1377, 1378, 204, 2916, 2815, 2186, 3739, 3738,
	204, 2886, 204, 2522, 2807, 204, 204, 204, 2825, 2826,
	2827, 2828, 2829, 1376, 2478, 1377, 1378, 1379, 2901, 2869,
	114, 2918, 930, 2143, 2846, 2186, 2186, 2186, 2186, 2186,
	114, 113, 2842, 2870, 2844, 1604, 2521, 3739, 1596, 118,
	119, 113, 2845, 112, 3738, 2186, 2892, 3547, 2186, 3206,
	2770, 2892, 941, 204, 1376, 2857, 1377, 1378, 2895, 127,
	1923, 1921, 2520, 10, 9, 3, 687, 1922, 2868, 1422,
	8, 2871, 101, 1, 687, 2720, 2332, 1812, 2334, 204,
	2262, 2920, 2883, 2884, 2921, 1119, 2861, 1376, 1857, 1377,
	1378, 3007, 1345, 932, 1344, 2903, 2904, 2902, 2906, 204,
	2905, 2519, 3210, 931, 2914, 3671, 643, 2132, 1551, 108,
	2858, 2859, 2860, 1376, 2922, 1377, 1378, 3711, 3667, 109,
	3668, 1379, 1797, 1787, 204, 2928, 2900, 204, 3282, 2067,
	3483, 2987, 2296, 3240, 2247, 1021, 3067, 2962, 2963, 2986,
	162, 2961, 2960, 2959, 2206, 2969, 2207, 3635, 1856, 122,
	976, 121, 1376, 1024, 1377, 1378, 3084, 3085, 3086, 3015,
	3088, 3090, 1379, 1138, 3014, 2291, 3264, 1379, 2649, 2215,
	2249, 1629, 2985, 1627, 3097, 2043, 3006, 1379, 1628, 3101,
	3102, 3103, 3105, 3106, 3107, 3108, 1626, 1631, 3109, 3021,
	3111, 3112, 3113, 3034, 1630, 3117, 3118, 3119, 3120, 3121,
	3122, 3123, 3124, 3125, 3126, 2518, 3073, 687, 2479, 3052,
	3053, 3115, 3055, 3133, 3057, 3058, 3137, 1379, 3138, 3140,
	3061, 3143, 3145, 3060, 3147, 3148, 3149, 3150, 1914, 1379,
	3068, 683, 3156, 3063, 3064, 2621, 204, 3075, 3076, 677,
	3077, 3069, 201, 3079, 3078, 3081, 2517, 3083, 1618, 1379,
	3130, 2511, 1597, 3128, 1379, 1063, 1376, 3134, 1377, 1378,
	633, 2510, 2958, 2329, 639, 1427, 1379, 3178, 3179, 1905,
	2863, 3183, 2636, 2035, 2024, 2025, 2026, 2027, 2037, 2028,
	2029, 2030, 2042, 2038, 2031, 2032, 2039, 2040, 2041, 2033,
	2034, 2036, 204, 1379, 970, 962, 2144, 1376, 2572, 1377,
	1378, 2509, 1376, 969, 1377, 1378, 3454, 2897, 3159, 3165,
	1379, 2875, 1376, 2506, 1377, 1378, 2877, 2588, 1379, 2880,
	2873, 204, 3154, 3155, 3157, 1379, 3540, 3343, 3617, 2646,
	1379, 1593, 3135, 2505, 3162, 2186, 2451, 3169, 2504, 1992,
	1417, 3184, 1379, 2183, 204, 3194, 204, 204, 204, 3174,
	2502, 3318, 1376, 1941, 1377, 1378, 687, 687, 3191, 706,
	3198, 3199, 705, 703, 1376, 2574, 1377, 1378, 1380, 2602,
	1382, 3197, 853, 3247, 3248, 2562, 3196, 2498, 1605, 3262,
	2613, 3204, 3205, 3015, 1376, 2611, 1377, 1378, 3014, 1376,
	2610, 1377, 1378, 2398, 2497, 2191, 3189, 1435, 3185, 3268,
	3269, 1376, 2493, 1377, 1378, 3663, 3221, 2185, 3223, 2491,
	1577, 1573, 2181, 2580, 2456, 3215, 3216, 687, 687, 687,
	687, 804, 803, 715, 707, 1574, 2445, 699, 1376, 802,
	1377, 1378, 2614, 2617, 2618, 2619, 2615, 801, 2616, 2620,
	3203, 3290, 3187, 3188, 3294, 1376, 3013, 1377, 1378, 3647,
	1570, 1571, 1576, 1376, 1575, 1377, 1378, 2728, 3041, 2730,
	1376, 2647, 1377, 1378, 3037, 1376, 3278, 1377, 1378, 1359,
	3251, 3305, 1569, 693, 3255, 3256, 3257, 1376, 992, 1377,
	1378, 3070, 3565, 2425, 3093, 1568, 3309, 2022, 2023, 3572,
	2995, 3258, 2976, 2698, 3299, 2283, 74, 49, 3317, 3535,
	3605, 800, 797, 3320, 3321, 3322, 3324, 2837, 2838, 3588,
	3589, 796, 3590, 2050, 1355, 1352, 3686, 1916, 100, 38,
	37, 36, 35, 34, 28, 27, 26, 25, 24, 204,
	21, 3295, 20, 31, 23, 22, 19, 18, 2998, 3706,
	3749, 131, 58, 55, 53, 139, 138, 56, 1422, 52,
	3338, 1109, 3307, 687, 50, 687, 43, 42, 33, 32,
	3316, 17, 16, 15, 14, 13, 12, 11, 7, 6,
	41, 40, 30, 39, 29, 4, 2685, 2285, 3359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 0, 3361, 0,
	0, 0, 0, 3348, 0, 0, 3363, 3339, 1977, 0,
	0, 3347, 0, 3357, 3355, 0, 0, 687, 2892, 0,
	1595, 0, 1975, 0, 0, 0, 0, 0, 0, 3468,
	204, 2895, 0, 687, 3455, 2895, 3368, 3369, 3475, 0,
	3367, 0, 864, 3371, 0, 91, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 3448, 3450, 3491, 3492, 3467,
	3494, 3452, 3495, 3496, 0, 3451, 0, 3499, 3500, 3501,
	0, 3503, 3506, 0, 3505, 3471, 0, 0, 0, 0,
	0, 3472, 0, 0, 0, 0, 0, 3515, 3517, 3518,
	3520, 3522, 3523, 3525, 3459, 687, 3485, 0, 3479, 687,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3462, 3463, 3464, 1977, 0,
	0, 3504, 928, 0, 91, 0, 0, 0, 687, 0,
	3509, 3555, 1975, 3511, 0, 0, 0, 3514, 0, 0,
	0, 0, 0, 928, 0, 3551, 0, 3533, 3532, 0,
	3508, 0, 3530, 3531, 3550, 0, 0, 0, 0, 0,
	0, 989, 0, 0, 0, 3548, 0, 0, 0, 0,
	0, 0, 0, 0, 3539, 0, 0, 0, 0, 0,
	3554, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2895, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3556, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3568, 3584, 3579, 0, 0, 0,
	0, 3576, 0, 0, 3571, 0, 0, 0, 3573, 0,
	0, 0, 0, 0, 0, 3600, 0, 0, 45, 0,
	0, 3601, 3602, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 3564, 0, 0, 0, 0, 0, 0, 0,
	1422, 0, 687, 3613, 0, 3594, 0, 0, 3595, 0,
	0, 0, 0, 0, 0, 0, 3603, 0, 0, 0,
	0, 0, 0, 0, 3583, 0, 0, 0, 0, 0,
	687, 687, 3593, 3641, 3642, 3615, 0, 3610, 3619, 0,
	0, 0, 3621, 0, 0, 0, 0, 3651, 3653, 3655,
	3624, 3649, 687, 3648, 3634, 45, 3629, 3626, 3625, 3623,
	3628, 3627, 0, 0, 0, 0, 204, 687, 0, 0,
	2892, 0, 0, 3684, 0, 0, 0, 0, 0, 0,
	3659, 0, 3485, 3636, 0, 0, 0, 3662, 0, 0,
	3670, 3681, 3675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3649, 3691, 3648, 0, 0,
	3689, 0, 0, 687, 3702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 1937, 1938, 1939, 3700,
	0, 0, 3705, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 3717, 0, 0, 3724, 3726,
	3728, 0, 0, 3719, 687, 0, 687, 3721, 0, 0,
	0, 0, 0, 0, 3732, 3729, 0, 3736, 3734, 3730,
	0, 0, 0, 0, 1983, 1984, 0, 0, 0, 1986,
	3748, 955, 955, 1991, 3649, 3745, 3648, 1996, 0, 3751,
	0, 0, 0, 0, 3757, 3759, 0, 3760, 3761, 1977,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	0, 0, 0, 1975, 2044, 2045, 2046, 2047, 2048, 2049,
	2051, 3505, 2056, 3767, 2058, 2059, 2060, 0, 2062, 2063,
	2064, 3733, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 1977, 2094, 0, 2101, 2102,
	955, 0, 955, 955, 955, 955, 955, 3768, 3769, 1975,
	0, 0, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	0, 2123, 2124, 2125, 2126, 2127, 0, 3766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2164, 2165, 1430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 1179, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 928,
	1419, 1424, 1425, 0, 1428, 0, 1429, 1431, 1432, 1433,
	0, 1436, 1437, 1439, 1439, 0, 1439, 1443, 1443, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 0, 0, 0, 0, 1510, 0,
	1512, 1513, 1514, 1515, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 1443, 1443, 1443, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 0, 0, 0, 0, 3389, 3391, 3390, 3408, 3409,
	3410, 3411, 3412, 3413, 3414, 754, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1555, 0, 0, 0, 0, 0, 928, 0, 0,
	198, 928, 0, 0, 0, 0, 928, 0, 0, 0,
	0, 2691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 2454, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 2461, 2462, 2463, 2464, 0,
	848, 0, 0, 0, 0, 1708, 1709, 169, 168, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 3395,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3403, 3404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 1710,
	166, 0, 1707, 0, 164, 165, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 1179, 686, 0, 0, 686,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 1595, 733, 824, 735,
	821, 822, 0, 731, 734, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 753, 3388, 3392, 3393, 3394, 3405, 3406, 3407,
	3415, 3417, 785, 3416, 3418, 3419, 3420, 3423, 3424, 3425,
	3426, 3421, 3422, 3427, 3372, 3376, 3373, 3374, 3375, 3387,
	3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386,
	3428, 3429, 3430, 3431, 3432, 3433, 3398, 3402, 3401, 3399,
	3400, 3396, 3397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 826, 0, 0,
	830, 0, 0, 0, 832, 831, 0, 833, 799, 798,
	0, 0, 827, 828, 172, 829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 91, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 90, 47, 48,
	92, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 51, 81, 82, 0, 79, 83, 0, 0, 0,
	685, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2765, 0, 0,
	0, 0, 160, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 955, 0, 0, 2789,
	2790, 0, 0, 2792, 0, 99, 2794, 0, 0, 0,
	0, 0, 0, 980, 0, 173, 988, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 2801, 2802, 2803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2808, 0,
	0, 2810, 2811, 2812, 0, 0, 0, 2813, 2814, 0,
	0, 2070, 2816, 0, 0, 2818, 0, 0, 2820, 2821,
	2822, 2823, 0, 193, 0, 0, 2824, 2070, 2070, 2070,
	2070, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 2847, 2848, 2849, 2850, 2851, 2852, 0, 0,
	0, 2853, 2854, 0, 2855, 0, 2856, 0, 174, 179,
	176, 182, 183, 184, 186, 188, 189, 190, 191, 0,
	0, 0, 0, 0, 192, 194, 195, 196, 0, 0,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 57, 60, 59, 62, 0, 78,
	0, 2887, 87, 65, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 198, 0, 2917, 66, 95, 94,
	0, 0, 76, 77, 61, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 989, 0, 0, 0, 198,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 686, 1338, 686,
	686, 0, 0, 137, 0, 159, 0, 0, 0, 2982,
	989, 0, 0, 0, 0, 0, 180, 0, 0, 686,
	0, 68, 69, 0, 70, 71, 72, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 170, 1421, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1709, 169, 168, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	1421, 0, 0, 0, 0, 0, 0, 163, 1710, 166,
	0, 1707, 0, 164, 165, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 98, 1554,
	0, 0, 0, 2427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 3243,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 1690, 1181, 1181, 172, 0,
	0, 0, 3267, 0, 75, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 686, 0,
	1716, 0, 0, 0, 0, 0, 984, 0, 1725, 0,
	0, 1421, 1727, 172, 0, 1730, 1731, 686, 686, 0,
	686, 0, 686, 686, 0, 686, 686, 686, 686, 686,
	686, 0, 0, 0, 0, 0, 0, 0, 1421, 1762,
	1763, 1421, 686, 1421, 0, 1768, 0, 0, 2535, 0,
	0, 0, 0, 0, 0, 0, 0, 3296, 0, 3297,
	0, 0, 3298, 0, 0, 3301, 3302, 0, 0, 0,
	0, 0, 0, 0, 3306, 0, 0, 686, 0, 0,
	2567, 0, 0, 0, 3308, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 686, 928, 0, 0,
	167, 0, 0, 0, 0, 0, 3325, 0, 0, 3326,
	0, 3327, 3328, 0, 3329, 0, 3330, 0, 2606, 2607,
	0, 3331, 0, 0, 0, 0, 0, 2184, 0, 0,
	928, 2626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 3356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3364, 0, 173,
	3366, 160, 0, 0, 161, 0, 185, 0, 0, 0,
	0, 0, 3370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3445, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1558, 1559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	2705, 0, 174, 179, 176, 182, 183, 184, 186, 188,
	189, 190, 191, 1601, 0, 0, 0, 0, 192, 194,
	195, 196, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 179, 176,
	182, 183, 184, 186, 188, 189, 190, 191, 0, 0,
	0, 0, 0, 192, 194, 195, 196, 0, 0, 0,
	0, 3538, 0, 0, 0, 0, 0, 0, 0, 686,
	686, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 1733, 0, 1733, 0, 1733,
	1733, 0, 1742, 1733, 1733, 1733, 1733, 1733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1421, 0, 0, 0, 1810, 0, 0, 0, 0, 1985,
	0, 686, 0, 0, 0, 0, 0, 1421, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 686, 0, 0, 0, 0, 0, 0,
	0, 3704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 3582, 0, 0, 0, 0, 0, 0,
	1181, 2834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3596, 0, 0, 3597,
	0, 3598, 686, 0, 0, 0, 0, 1110, 0, 1116,
	0, 0, 1118, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 2896, 0, 91,
	0, 0, 2184, 2184, 2184, 2184, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 1351,
	0, 0, 2184, 0, 0, 2184, 0, 0, 0, 0,
	0, 686, 0, 0, 686, 0, 0, 0, 0, 0,
	3682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3697, 0, 3698, 0, 3699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3004, 0, 0, 0, 0, 1181, 1181, 0, 0,
	0, 3012, 0, 0, 0, 0, 0, 0, 0, 1917,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 2273, 2274, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 686, 0, 0, 3746, 0, 3747, 686, 1725,
	0, 0, 1725, 0, 1725, 0, 0, 0, 0, 0,
	2305, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	686, 0, 0, 0, 686, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	2021, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 0, 1669,
	1670, 1672, 1673, 1671, 1674, 1675, 1648, 1649, 1650, 1651,
	1632, 1633, 1661, 0, 1635, 0, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 0, 0, 1645, 1652, 1653,
	1654, 1655, 0, 1656, 1657, 1658, 1659, 0, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 2184, 0, 0, 0, 0, 0, 2146, 0,
	0, 0, 0, 0, 0, 3202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2156, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 686, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 980,
	0, 0, 0, 0, 1878, 988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 0, 0, 0, 1971, 0, 0,
	0, 1971, 1971, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 3332, 0, 3336, 3337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2896, 0, 91, 0, 2896, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 202, 0, 0,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2640, 937, 0, 0,
	0, 0, 0, 3460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 2414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	1929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 1725, 1725, 0, 0, 0, 686, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2896, 0, 1421, 2715, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 91, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2590, 0,
	0, 686, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 0, 2174, 0, 2177, 0, 0, 1929,
	0, 0, 0, 0, 0, 0, 3614, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2672, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 1421, 0, 0, 686, 686, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 2156, 0,
	0, 0, 0, 0, 3701, 2699, 0, 0, 0, 0,
	0, 0, 0, 0, 2704, 1660, 1663, 1664, 1665, 1666,
	1667, 1668, 0, 1669, 1670, 1672, 1673, 1671, 1674, 1675,
	1648, 1649, 1650, 1651, 1632, 1633, 1661, 0, 1635, 0,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 0,
	2965, 1645, 1652, 1653, 1654, 1655, 0, 1656, 1657, 1658,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 1421, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 0, 0, 0, 0, 0, 0, 0,
	2344, 0, 0, 0, 0, 0, 621, 0, 621, 0,
	0, 621, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2394, 2395, 0, 0,
	2399, 0, 0, 0, 0, 0, 0, 0, 2403, 0,
	0, 0, 0, 0, 0, 3066, 0, 0, 2405, 0,
	0, 1971, 0, 0, 0, 2408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 2411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	1662, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2835, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 2899, 1733, 0, 0, 3209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 866, 0, 0, 0, 854, 867, 868,
	869, 870, 855, 0, 0, 856, 857, 0, 858, 0,
	0, 980, 0, 0, 0, 621, 0, 0, 0, 2156,
	0, 0, 863, 871, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 937, 686, 686, 686, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3016,
	3017, 0, 0, 0, 0, 0, 621, 0, 0, 2627,
	0, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 0, 0, 0, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3129, 0, 0, 0, 1423, 0, 0, 1423,
	2679, 1423, 621, 0, 0, 3018, 1421, 0, 0, 0,
	0, 686, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2733,
	2734, 2735, 2736, 2737, 0, 686, 621, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 686, 1887, 1888, 621, 621, 621, 621, 621, 621,
	621, 3019, 3020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 866, 0, 1929, 2753, 854, 867,
	868, 869, 870, 855, 0, 0, 856, 857, 0, 858,
	0, 2156, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2761, 863, 871, 872, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 686, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	3016, 3017, 3283, 3284, 3285, 3286, 0, 0, 0, 0,
	0, 0, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3018, 0, 0, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3360, 0,
	3362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	956, 956, 0, 0, 0, 1423, 0, 0, 1421, 0,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3019, 3020, 0, 0, 0, 0, 0, 0,
	0, 0, 2156, 0, 0, 0, 0, 0, 686, 686,
	2972, 0, 0, 0, 0, 0, 0, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 3010, 0, 0, 1181,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 956,
	1855, 956, 956, 956, 956, 956, 3036, 0, 0, 0,
	0, 866, 0, 2100, 0, 0, 867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 0,
	0, 3059, 820, 0, 3062, 824, 0, 821, 822, 0,
	3526, 686, 823, 1784, 3526, 3526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 937, 2156, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 686, 621, 0, 0, 0, 0,
	0, 0, 1855, 621, 0, 621, 0, 621, 2193, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 0, 0, 3158, 0, 0, 0, 0, 0, 0,
	0, 0, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3607, 0, 0, 0, 0,
	0, 3236, 0, 3237, 3238, 3239, 0, 3611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1181, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 0, 0, 0, 0, 3657, 0, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3665, 0, 0, 866, 0, 0, 0, 0,
	867, 0, 0, 0, 0, 621, 621, 0, 0, 621,
	1976, 2401, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 0, 3607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3129,
	0, 3665, 0, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1423,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 0, 0, 0, 2684, 0, 3580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 621,
	621, 621, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 0, 0, 1423, 621, 621,
	621, 621, 621, 0, 0, 0, 0, 0, 0, 0,
	2915, 0, 0, 0, 0, 0, 1784, 0, 621, 0,
	0, 621, 2923, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 621, 621, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1423, 0, 0, 0,
	396, 0, 0, 0, 1315, 1300, 517, 0, 1243, 1318,
	1212, 1231, 1328, 1234, 1237, 1279, 1191, 1257, 415, 1228,
	1184, 1216, 1186, 1223, 1187, 1214, 1245, 273, 1211, 1302,
	1261, 1317, 366, 270, 1193, 1217, 429, 1233, 211, 1281,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 1324, 370, 1267, 0, 496, 400,
	0, 0, 1784, 1247, 1306, 1255, 1293, 1242, 1280, 1201,
	1266, 1319, 1229, 1276, 1320, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 3637, 676, 0, 0,
	0, 0, 3638, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 1225, 1273, 1314, 1226, 1275, 268,
	323, 275, 267, 522, 1325, 1305, 1190, 1254, 1313, 0,
	0, 234, 1316, 1249, 0, 1278, 0, 1331, 1185, 1269,
	0, 1188, 1192, 1327, 1309, 1220, 278, 0, 0, 0,
	0, 0, 0, 0, 1246, 1256, 1290, 1294, 1240, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 1265, 0,
	0, 0, 1197, 1189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 1200, 0, 1219, 1291, 0, 1183, 300, 1194, 401,
	260, 1337, 0, 453, 1298, 1308, 1241, 565, 1312, 1239,
	1238, 1285, 1198, 1304, 1232, 365, 1196, 332, 206, 230,
	0, 1230, 411, 461, 473, 1303, 1215, 1224, 258, 1222,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	1264, 1283, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 1195, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 1210, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 1299,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 1288, 1330, 424, 472, 245, 544, 495,
	1333, 1334, 1335, 1336, 1205, 1209, 1203, 1270, 1204, 1259,
	1260, 1206, 1321, 1322, 1323, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 1292, 1199, 0, 1207, 1208, 1301,
	1310, 1311, 616, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 1263, 205, 226, 368, 1326, 454, 291, 594,
	555, 549, 212, 228, 1202, 265, 1213, 1221, 0, 1227,
	1235, 1236, 1248, 1250, 1251, 1252, 1253, 1271, 1272, 1274,
	1282, 1284, 1287, 1289, 1296, 1307, 1329, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 1262, 1332, 553, 1268, 381,
	284, 307, 322, 1277, 554, 501, 232, 466, 293, 256,
	1295, 1297, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 1258, 1286, 376, 518,
	519, 318, 396, 0, 0, 0, 1315, 1300, 517, 0,
	1243, 1318, 1212, 1231, 1328, 1234, 1237, 1279, 1191, 1257,
	415, 1228, 1184, 1216, 1186, 1223, 1187, 1214, 1245, 273,
	1211, 1302, 1261, 1317, 366, 270, 1193, 1217, 429, 1233,
	211, 1281, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 1324, 370, 1267, 0,
	496, 400, 0, 0, 0, 1247, 1306, 1255, 1293, 1242,
	1280, 1201, 1266, 1319, 1229, 1276, 1320, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 1225, 1273, 1314, 1226,
	1275, 268, 323, 275, 267, 522, 1325, 1305, 1190, 1254,
	1313, 0, 0, 234, 1316, 1249, 0, 1278, 0, 1331,
	1185, 1269, 0, 1188, 1192, 1327, 1309, 1220, 278, 0,
	0, 0, 0, 0, 0, 0, 1246, 1256, 1290, 1294,
	1240, 0, 0, 0, 0, 0, 2924, 0, 1218, 0,
	1265, 0, 0, 0, 1197, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 1200, 0, 1219, 1291, 0, 1183, 300,
	1194, 401, 260, 1337, 0, 453, 1298, 1308, 1241, 565,
	1312, 1239, 1238, 1285, 1198, 1304, 1232, 365, 1196, 332,
	206, 230, 0, 1230, 411, 461, 473, 1303, 1215, 1224,
	258, 1222, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 1264, 1283, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 531, 532, 259, 596,
	233, 559, 225, 1195, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 355, 356, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 1210, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 1299, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 1288, 1330, 424, 472, 245,
	544, 495, 1333, 1334, 1335, 1336, 1205, 1209, 1203, 1270,
	1204, 1259, 1260, 1206, 1321, 1322, 1323, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 1292, 1199, 0, 1207,
	1208, 1301, 1310, 1311, 616, 384, 485, 541, 337, 349,
	352, 342, 361, 0, 362, 338, 339, 344, 346, 347,
	348, 353, 354, 358, 364, 254, 216, 390, 398, 520,
	314, 221, 222, 223, 513, 514, 515, 516, 556, 557,
	561, 462, 463, 464, 465, 295, 550, 311, 468, 467,
	333, 334, 379, 450, 1263, 205, 226, 368, 1326, 454,
	291, 594, 555, 549, 212, 228, 1202, 265, 1213, 1221,
	0, 1227, 1235, 1236, 1248, 1250, 1251, 1252, 1253, 1271,
	1272, 1274, 1282, 1284, 1287, 1289, 1296, 1307, 1329, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 303, 304, 445, 446, 316, 317, 591, 592, 302,
	538, 569, 536, 590, 563, 439, 378, 1262, 1332, 553,
	1268, 381, 284, 307, 322, 1277, 554, 501, 232, 466,
	293, 256, 1295, 1297, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 1258, 1286,
	376, 518, 519, 318, 396, 0, 0, 0, 1315, 1300,
	517, 0, 1243, 1318, 1212, 1231, 1328, 1234, 1237, 1279,
	1191, 1257, 415, 1228, 1184, 1216, 1186, 1223, 1187, 1214,
	1245, 273, 1211, 1302, 1261, 1317, 366, 270, 1193, 1217,
	429, 1233, 211, 1281, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 1324, 370,
	1267, 0, 496, 400, 0, 0, 0, 1247, 1306, 1255,
	1293, 1242, 1280, 1201, 1266, 1319, 1229, 1276, 1320, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 1225, 1273,
	1314, 1226, 1275, 268, 323, 275, 267, 522, 1325, 1305,
	1190, 1254, 1313, 0, 0, 234, 1316, 1249, 0, 1278,
	0, 1331, 1185, 1269, 0, 1188, 1192, 1327, 1309, 1220,
	278, 0, 0, 0, 0, 0, 0, 0, 1246, 1256,
	1290, 1294, 1240, 0, 0, 0, 0, 0, 2885, 0,
	1218, 0, 1265, 0, 0, 0, 1197, 1189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 1200, 0, 1219, 1291, 0,
	1183, 300, 1194, 401, 260, 1337, 0, 453, 1298, 1308,
	1241, 565, 1312, 1239, 1238, 1285, 1198, 1304, 1232, 365,
	1196, 332, 206, 230, 0, 1230, 411, 461, 473, 1303,
	1215, 1224, 258, 1222, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 1264, 1283, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 1195, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	1210, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 1299, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 1288, 1330, 424,
	472, 245, 544, 495, 1333, 1334, 1335, 1336, 1205, 1209,
	1203, 1270, 1204, 1259, 1260, 1206, 1321, 1322, 1323, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 1292, 1199,
	0, 1207, 1208, 1301, 1310, 1311, 616, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 1263, 205, 226, 368,
	1326, 454, 291, 594, 555, 549, 212, 228, 1202, 265,
	1213, 1221, 0, 1227, 1235, 1236, 1248, 1250, 1251, 1252,
	1253, 1271, 1272, 1274, 1282, 1284, 1287, 1289, 1296, 1307,
	1329, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 1262,
	1332, 553, 1268, 381, 284, 307, 322, 1277, 554, 501,
	232, 466, 293, 256, 1295, 1297, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	1258, 1286, 376, 518, 519, 318, 396, 0, 0, 0,
	1315, 1300, 517, 0, 1243, 1318, 1212, 1231, 1328, 1234,
	1237, 1279, 1191, 1257, 415, 1228, 1184, 1216, 1186, 1223,
	1187, 1214, 1245, 273, 1211, 1302, 1261, 1317, 366, 270,
	1193, 1217, 429, 1233, 211, 1281, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	1324, 370, 1267, 0, 496, 400, 0, 0, 0, 1247,
	1306, 1255, 1293, 1242, 1280, 1201, 1266, 1319, 1229, 1276,
	1320, 325, 253, 327, 210, 412, 497, 289, 0, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 250, 0, 0, 0,
	351, 360, 359, 340, 341, 343, 345, 350, 357, 363,
	1225, 1273, 1314, 1226, 1275, 268, 323, 275, 267, 522,
	1325, 1305, 1190, 1254, 1313, 0, 0, 234, 1316, 1249,
	0, 1278, 0, 1331, 1185, 1269, 0, 1188, 1192, 1327,
	1309, 1220, 278, 0, 0, 0, 0, 0, 0, 0,
	1246, 1256, 1290, 1294, 1240, 0, 0, 0, 0, 0,
	2172, 0, 1218, 0, 1265, 0, 0, 0, 1197, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 1200, 0, 1219,
	1291, 0, 1183, 300, 1194, 401, 260, 1337, 0, 453,
	1298, 1308, 1241, 565, 1312, 1239, 1238, 1285, 1198, 1304,
	1232, 365, 1196, 332, 206, 230, 0, 1230, 411, 461,
	473, 1303, 1215, 1224, 258, 1222, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 1264, 1283, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	531, 532, 259, 596, 233, 559, 225, 1195, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 355,
	356, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 1210, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 1299, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 1288,
	1330, 424, 472, 245, 544, 495, 1333, 1334, 1335, 1336,
	1205, 1209, 1203, 1270, 1204, 1259, 1260, 1206, 1321, 1322,
	1323, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	1292, 1199, 0, 1207, 1208, 1301, 1310, 1311, 616, 384,
	485, 541, 337, 349, 352, 342, 361, 0, 362, 338,
	339, 344, 346, 347, 348, 353, 354, 358, 364, 254,
	216, 390, 398, 520, 314, 221, 222, 223, 513, 514,
	515, 516, 556, 557, 561, 462, 463, 464, 465, 295,
	550, 311, 468, 467, 333, 334, 379, 450, 1263, 205,
	226, 368, 1326, 454, 291, 594, 555, 549, 212, 228,
	1202, 265, 1213, 1221, 0, 1227, 1235, 1236, 1248, 1250,
	1251, 1252, 1253, 1271, 1272, 1274, 1282, 1284, 1287, 1289,
	1296, 1307, 1329, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 303, 304, 445, 446, 316,
	317, 591, 592, 302, 538, 569, 536, 590, 563, 439,
	378, 1262, 1332, 553, 1268, 381, 284, 307, 322, 1277,
	554, 501, 232, 466, 293, 256, 1295, 1297, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 1258, 1286, 376, 518, 519, 318, 396, 0,
	0, 0, 1315, 1300, 517, 0, 1243, 1318, 1212, 1231,
	1328, 1234, 1237, 1279, 1191, 1257, 415, 1228, 1184, 1216,
	1186, 1223, 1187, 1214, 1245, 273, 1211, 1302, 1261, 1317,
	366, 270, 1193, 1217, 429, 1233, 211, 1281, 486, 257,
	377, 374, 525, 285, 276, 272, 255, 319, 385, 427,
	507, 421, 1324, 370, 1267, 0, 496, 400, 0, 0,
	0, 1247, 1306, 1255, 1293, 1242, 1280, 1201, 1266, 1319,
	1229, 1276, 1320, 325, 253, 327, 210, 412, 497, 289,
	0, 99, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 250, 0,
	0, 0, 351, 360, 359, 340, 341, 343, 345, 350,
	357, 363, 1225, 1273, 1314, 1226, 1275, 268, 323, 275,
	267, 522, 1325, 1305, 1190, 1254, 1313, 0, 0, 234,
	1316, 1249, 0, 1278, 0, 1331, 1185, 1269, 0, 1188,
	1192, 1327, 1309, 1220, 278, 0, 0, 0, 0, 0,
	0, 0, 1246, 1256, 1290, 1294, 1240, 0, 0, 0,
	0, 0, 0, 0, 1218, 0, 1265, 0, 0, 0,
	1197, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 1200,
	0, 1219, 1291, 0, 1183, 300, 1194, 401, 260, 1337,
	0, 453, 1298, 1308, 1241, 565, 1312, 1239, 1238, 1285,
	1198, 1304, 1232, 365, 1196, 332, 206, 230, 0, 1230,
	411, 461, 473, 1303, 1215, 1224, 258, 1222, 471, 425,
	542, 238, 287, 458, 431, 469, 441, 290, 1264, 1283,
	470, 372, 527, 451, 539, 566, 567, 266, 405, 551,
	511, 560, 593, 231, 263, 419, 504, 545, 493, 397,
	523, 524, 331, 492, 298, 209, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 229, 479, 371, 247, 236, 529, 548, 292, 456,
	435, 436, 574, 588, 575, 577, 578, 218, 506, 537,
	244, 483, 0, 0, 595, 252, 503, 220, 534, 502,
	393, 328, 329, 219, 0, 457, 271, 296, 0, 0,
	261, 414, 531, 532, 259, 596, 233, 559, 225, 1195,
	558, 407, 526, 535, 394, 383, 224, 533, 392, 382,
	336, 355, 356, 283, 309, 448, 375, 449, 308, 310,
	403, 402, 404, 213, 546, 0, 214, 0, 498, 547,
	597, 239, 240, 242, 1210, 282, 286, 294, 297, 305,
	306, 315, 367, 418, 447, 443, 452, 1299, 521, 540,
	552, 564, 570, 571, 573, 579, 580, 581, 583, 589,
	587, 584, 585, 586, 582, 576, 406, 313, 494, 335,
	373, 1288, 1330, 424, 472, 245, 544, 495, 1333, 1334,
	1335, 1336, 1205, 1209, 1203, 1270, 1204, 1259, 1260, 1206,
	1321, 1322, 1323, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 0, 1292, 1199, 0, 1207, 1208, 1301, 1310, 1311,
	616, 384, 485, 541, 337, 349, 352, 342, 361, 0,
	362, 338, 339, 344, 346, 347, 348, 353, 354, 358,
	364, 254, 216, 390, 398, 520, 314, 221, 222, 223,
	513, 514, 515, 516, 556, 557, 561, 462, 463, 464,
	465, 295, 550, 311, 468, 467, 333, 334, 379, 450,
	1263, 205, 226, 368, 1326, 454, 291, 594, 555, 549,
	212, 228, 1202, 265, 1213, 1221, 0, 1227, 1235, 1236,
	1248, 1250, 1251, 1252, 1253, 1271, 1272, 1274, 1282, 1284,
	1287, 1289, 1296, 1307, 1329, 207, 208, 215, 227, 237,
	241, 248, 264, 279, 281, 288, 301, 312, 320, 321,
	324, 330, 380, 386, 387, 388, 389, 408, 409, 410,
	413, 416, 417, 420, 422, 423, 426, 430, 434, 437,
	438, 440, 442, 444, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 487, 488, 489, 490, 491, 499, 500,
	505, 528, 530, 543, 562, 568, 480, 303, 304, 445,
	446, 316, 317, 591, 592, 302, 538, 569, 536, 590,
	563, 439, 378, 1262, 1332, 553, 1268, 381, 284, 307,
	322, 1277, 554, 501, 232, 466, 293, 256, 1295, 1297,
	217, 251, 235, 262, 277, 280, 326, 391, 399, 428,
	433, 299, 274, 249, 459, 246, 484, 508, 509, 510,
	512, 395, 269, 432, 1258, 1286, 376, 518, 519, 318,
	396, 0, 0, 0, 1315, 1300, 517, 0, 1243, 1318,
	1212, 1231, 1328, 1234, 1237, 1279, 1191, 1257, 415, 1228,
	1184, 1216, 1186, 1223, 1187, 1214, 1245, 273, 1211, 1302,
	1261, 1317, 366, 270, 1193, 1217, 429, 1233, 211, 1281,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 1324, 370, 1267, 0, 496, 400,
	0, 0, 0, 1247, 1306, 1255, 1293, 1242, 1280, 1201,
	1266, 1319, 1229, 1276, 1320, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 1225, 1273, 1314, 1226, 1275, 268,
	323, 275, 267, 522, 1325, 1305, 1190, 1254, 1313, 0,
	0, 234, 1316, 1249, 0, 1278, 0, 1331, 1185, 1269,
	0, 1188, 1192, 1327, 1309, 1220, 278, 0, 0, 0,
	0, 0, 0, 0, 1246, 1256, 1290, 1294, 1240, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 1265, 0,
	0, 0, 1197, 1189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 1200, 0, 1219, 1291, 0, 1183, 300, 1194, 401,
	260, 1337, 0, 453, 1298, 1308, 1241, 565, 1312, 1239,
	1238, 1285, 1198, 1304, 1232, 365, 1196, 332, 206, 230,
	0, 1230, 411, 461, 473, 1303, 1215, 1224, 258, 1222,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	1264, 1283, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 1195, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 1210, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 1299,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 1288, 1330, 424, 472, 245, 544, 495,
	1333, 1334, 1335, 1336, 1205, 1209, 1203, 1270, 1204, 1259,
	1260, 1206, 1321, 1322, 1323, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 1292, 1199, 0, 1207, 1208, 1301,
	1310, 1311, 616, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 1263, 205, 226, 368, 1326, 454, 291, 594,
	555, 549, 212, 228, 1202, 265, 1213, 1221, 0, 1227,
	1235, 1236, 1248, 1250, 1251, 1252, 1253, 1271, 1272, 1274,
	1282, 1284, 1287, 1289, 1296, 1307, 1329, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 1262, 1332, 553, 1268, 381,
	284, 307, 322, 1277, 554, 501, 232, 466, 293, 256,
	1295, 1297, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 1258, 1286, 376, 518,
	519, 318, 396, 0, 0, 0, 1315, 1300, 517, 0,
	1243, 1318, 1212, 1231, 1328, 1234, 1237, 1279, 1191, 1257,
	415, 1228, 1184, 1216, 1186, 1223, 1187, 1214, 1245, 273,
	1211, 1302, 1261, 1317, 366, 270, 1193, 1217, 429, 1233,
	211, 1281, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 1324, 370, 1267, 0,
	496, 400, 0, 0, 0, 1247, 1306, 1255, 1293, 1242,
	1280, 1201, 1266, 1319, 1229, 1276, 1320, 325, 253, 327,
	210, 412, 497, 289, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 250, 0, 0, 0, 351, 360, 359, 340,
	341, 343, 345, 350, 357, 363, 1225, 1273, 1314, 1226,
	1275, 268, 323, 275, 267, 522, 1325, 1305, 1190, 1254,
	1313, 0, 0, 234, 1316, 1249, 0, 1278, 0, 1331,
	1185, 1269, 0, 1188, 1192, 1327, 1309, 1220, 278, 0,
	0, 0, 0, 0, 0, 0, 1246, 1256, 1290, 1294,
	1240, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	1265, 0, 0, 0, 1197, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 1200, 0, 1219, 1291, 0, 1183, 300,
	1194, 401, 260, 1337, 0, 453, 1298, 1308, 1241, 565,
	1312, 1239, 1238, 1285, 1198, 1304, 1232, 365, 1196, 332,
	206, 230, 0, 1230, 411, 461, 473, 1303, 1215, 1224,
	258, 1222, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 1264, 1283, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 531, 532, 259, 596,
	233, 559, 225, 1195, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 355, 356, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 1210, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 1299, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 1288, 1330, 424, 472, 245,
	544, 495, 1333, 1334, 1335, 1336, 1205, 1209, 1203, 1270,
	1204, 1259, 1260, 1206, 1321, 1322, 1323, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 1292, 1199, 0, 1207,
	1208, 1301, 1310, 1311, 616, 384, 485, 541, 337, 349,
	352, 342, 361, 0, 362, 338, 339, 344, 346, 347,
	348, 353, 354, 358, 364, 254, 216, 390, 398, 520,
	314, 221, 222, 223, 513, 514, 515, 516, 556, 557,
	561, 462, 463, 464, 465, 295, 550, 311, 468, 467,
	333, 334, 379, 450, 1263, 205, 226, 368, 1326, 454,
	291, 594, 555, 549, 212, 228, 1202, 265, 1213, 1221,
	0, 1227, 1235, 1236, 1248, 1250, 1251, 1252, 1253, 1271,
	1272, 1274, 1282, 1284, 1287, 1289, 1296, 1307, 1329, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 303, 304, 445, 446, 316, 317, 591, 592, 302,
	538, 569, 536, 590, 563, 439, 378, 1262, 1332, 553,
	1268, 381, 284, 307, 322, 1277, 554, 501, 232, 466,
	293, 256, 1295, 1297, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 1258, 1286,
	376, 518, 519, 318, 396, 0, 0, 0, 1315, 1300,
	517, 0, 1243, 1318, 1212, 1231, 1328, 1234, 1237, 1279,
	1191, 1257, 415, 1228, 1184, 1216, 1186, 1223, 1187, 1214,
	1245, 273, 1211, 1302, 1261, 1317, 366, 270, 1193, 1217,
	429, 1233, 211, 1281, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 1324, 370,
	1267, 0, 496, 400, 0, 0, 0, 1247, 1306, 1255,
	1293, 1242, 1280, 1201, 1266, 1319, 1229, 1276, 1320, 325,
	253, 327, 210, 412, 497, 289, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 1225, 1273,
	1314, 1226, 1275, 268, 323, 275, 267, 522, 1325, 1305,
	1190, 1254, 1313, 0, 0, 234, 1316, 1249, 0, 1278,
	0, 1331, 1185, 1269, 0, 1188, 1192, 1327, 1309, 1220,
	278, 0, 0, 0, 0, 0, 0, 0, 1246, 1256,
	1290, 1294, 1240, 0, 0, 0, 0, 0, 0, 0,
	1218, 0, 1265, 0, 0, 0, 1197, 1189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 1200, 0, 1219, 1291, 0,
	1183, 300, 1194, 401, 260, 1337, 0, 453, 1298, 1308,
	1241, 565, 1312, 1239, 1238, 1285, 1198, 1304, 1232, 365,
	1196, 332, 206, 230, 0, 1230, 411, 461, 473, 1303,
	1215, 1224, 258, 1222, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 1264, 1283, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 1195, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	1210, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 1299, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 1288, 1330, 424,
	472, 245, 544, 495, 1333, 1334, 1335, 1336, 1205, 1209,
	1203, 1270, 1204, 1259, 1260, 1206, 1321, 1322, 1323, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 1292, 1199,
	0, 1207, 1208, 1301, 1310, 1311, 616, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 1263, 205, 226, 368,
	1326, 454, 291, 594, 555, 549, 212, 228, 1202, 265,
	1213, 1221, 0, 1227, 1235, 1236, 1248, 1250, 1251, 1252,
	1253, 1271, 1272, 1274, 1282, 1284, 1287, 1289, 1296, 1307,
	1329, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 1262,
	1332, 553, 1268, 381, 284, 307, 322, 1277, 554, 501,
	232, 466, 293, 256, 1295, 1297, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	1258, 1286, 376, 518, 519, 318, 396, 0, 0, 0,
	0, 0, 517, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 716,
	0, 0, 0, 273, 721, 0, 0, 0, 366, 270,
	0, 0, 429, 0, 211, 0, 486, 257, 377, 374,
	525, 285, 276, 272, 255, 319, 385, 427, 507, 421,
	728, 370, 0, 0, 496, 400, 0, 0, 0, 0,
	0, 724, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 253, 327, 210, 412, 497, 289, 0, 99,
	0, 0, 866, 850, 816, 817, 854, 867, 868, 869,
	870, 855, 0, 243, 856, 857, 250, 858, 0, 815,
	756, 758, 757, 775, 776, 777, 778, 779, 780, 781,
	754, 863, 871, 872, 0, 268, 323, 275, 267, 522,
	0, 0, 2052, 2053, 2054, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 698, 713, 0, 727, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 710, 711,
	0, 0, 0, 0, 810, 0, 712, 0, 0, 720,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 401, 260, 0, 0, 453,
	809, 0, 0, 565, 0, 0, 807, 0, 0, 0,
	0, 365, 0, 332, 206, 230, 0, 0, 411, 461,
	473, 0, 0, 0, 860, 0, 471, 425, 542, 238,
	287, 458, 431, 469, 441, 290, 0, 0, 470, 372,
	527, 451, 539, 566, 567, 266, 405, 551, 511, 560,
	593, 231, 263, 419, 504, 545, 493, 397, 523, 524,
	331, 492, 298, 209, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 229,
	479, 371, 247, 236, 529, 548, 292, 456, 435, 436,
	574, 588, 575, 577, 578, 218, 506, 537, 244, 483,
	0, 0, 595, 252, 503, 220, 534, 502, 393, 328,
	329, 219, 0, 457, 271, 296, 0, 0, 261, 414,
	861, 862, 259, 596, 762, 559, 225, 0, 558, 407,
	526, 535, 394, 383, 224, 533, 392, 382, 336, 770,
	771, 283, 309, 448, 375, 449, 308, 310, 403, 402,
	404, 213, 546, 0, 214, 0, 498, 547, 597, 239,
	240, 242, 0, 282, 286, 294, 297, 305, 306, 315,
	367, 418, 447, 443, 452, 0, 521, 540, 552, 564,
	570, 571, 573, 579, 580, 581, 583, 589, 587, 584,
	585, 586, 582, 576, 406, 313, 494, 335, 373, 0,
	0, 424, 472, 245, 544, 495, 0, 0, 0, 0,
	820, 808, 733, 824, 735, 821, 822, 730, 731, 734,
	823, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 0,
	811, 719, 718, 0, 726, 0, 752, 753, 755, 759,
	760, 761, 772, 773, 774, 782, 784, 785, 783, 786,
	787, 788, 791, 792, 793, 794, 789, 790, 795, 736,
	740, 737, 738, 739, 751, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 834, 835, 836, 837, 838,
	839, 765, 769, 768, 766, 767, 763, 764, 717, 205,
	226, 368, 0, 454, 291, 594, 555, 549, 212, 228,
	825, 265, 826, 0, 0, 830, 0, 0, 0, 832,
	831, 0, 833, 799, 798, 0, 0, 827, 828, 0,
	829, 0, 0, 207, 208, 215, 227, 237, 241, 248,
	264, 279, 281, 288, 301, 312, 320, 321, 324, 330,
	380, 386, 387, 388, 389, 408, 409, 410, 413, 416,
	417, 420, 422, 423, 426, 430, 434, 437, 438, 440,
	442, 444, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 487, 488, 489, 490, 491, 499, 500, 505, 528,
	530, 543, 562, 568, 480, 840, 841, 842, 843, 844,
	845, 846, 847, 302, 538, 569, 536, 590, 563, 439,
	378, 0, 0, 553, 0, 381, 284, 307, 322, 0,
	554, 501, 232, 466, 293, 256, 865, 0, 217, 251,
	235, 262, 277, 280, 326, 391, 399, 428, 433, 299,
	274, 249, 459, 246, 484, 508, 509, 510, 512, 395,
	269, 432, 396, 0, 376, 518, 519, 318, 517, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 716, 0, 0, 0, 273,
	721, 0, 0, 0, 366, 270, 0, 0, 429, 0,
	211, 0, 486, 257, 377, 374, 525, 285, 276, 272,
	255, 319, 385, 427, 507, 421, 728, 370, 0, 0,
	496, 400, 0, 0, 0, 0, 0, 724, 725, 0,
	0, 0, 0, 0, 0, 2201, 0, 325, 253, 327,
	210, 412, 497, 289, 0, 99, 0, 0, 866, 850,
	816, 817, 854, 867, 868, 869, 870, 855, 0, 243,
	856, 857, 250, 858, 0, 815, 756, 758, 757, 775,
	776, 777, 778, 779, 780, 781, 754, 863, 871, 872,
	2202, 268, 323, 275, 267, 522, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 698, 713, 0, 727, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 711, 0, 0, 0, 0,
	810, 0, 712, 0, 0, 720, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 401, 260, 0, 0, 453, 809, 0, 0, 565,
	0, 0, 807, 0, 0, 0, 0, 365, 0, 332,
	206, 230, 0, 0, 411, 461, 473, 0, 0, 0,
	860, 0, 471, 425, 542, 238, 287, 458, 431, 469,
	441, 290, 0, 0, 470, 372, 527, 451, 539, 566,
	567, 266, 405, 551, 511, 560, 593, 231, 263, 419,
	504, 545, 493, 397, 523, 524, 331, 492, 298, 209,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 229, 479, 371, 247, 236,
	529, 548, 292, 456, 435, 436, 574, 588, 575, 577,
	578, 218, 506, 537, 244, 483, 0, 0, 595, 252,
	503, 220, 534, 502, 393, 328, 329, 219, 0, 457,
	271, 296, 0, 0, 261, 414, 861, 862, 259, 596,
	762, 559, 225, 0, 558, 407, 526, 535, 394, 383,
	224, 533, 392, 382, 336, 770, 771, 283, 309, 448,
	375, 449, 308, 310, 403, 402, 404, 213, 546, 0,
	214, 0, 498, 547, 597, 239, 240, 242, 0, 282,
	286, 294, 297, 305, 306, 315, 367, 418, 447, 443,
	452, 0, 521, 540, 552, 564, 570, 571, 573, 579,
	580, 581, 583, 589, 587, 584, 585, 586, 582, 576,
	406, 313, 494, 335, 373, 0, 0, 424, 472, 245,
	544, 495, 0, 0, 0, 0, 820, 808, 733, 824,
	735, 821, 822, 730, 731, 734, 823, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 0, 811, 719, 718, 0,
	726, 0, 752, 753, 755, 759, 760, 761, 772, 773,
	774, 782, 784, 785, 783, 786, 787, 788, 791, 792,
	793, 794, 789, 790, 795, 736, 740, 737, 738, 739,
	751, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 834, 835, 836, 837, 838, 839, 765, 769, 768,
	766, 767, 763, 764, 717, 205, 226, 368, 0, 454,
	291, 594, 555, 549, 212, 228, 825, 265, 826, 0,
	0, 830, 0, 0, 0, 832, 831, 0, 833, 799,
	798, 0, 0, 827, 828, 0, 829, 0, 0, 207,
	208, 215, 227, 237, 241, 248, 264, 279, 281, 288,
	301, 312, 320, 321, 324, 330, 380, 386, 387, 388,
	389, 408, 409, 410, 413, 416, 417, 420, 422, 423,
	426, 430, 434, 437, 438, 440, 442, 444, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 487, 488, 489,
	490, 491, 499, 500, 505, 528, 530, 543, 562, 568,
	480, 840, 841, 842, 843, 844, 845, 846, 847, 302,
	538, 569, 536, 590, 563, 439, 378, 0, 0, 553,
	0, 381, 284, 307, 322, 0, 554, 501, 232, 466,
	293, 256, 865, 0, 217, 251, 235, 262, 277, 280,
	326, 391, 399, 428, 433, 299, 274, 249, 459, 246,
	484, 508, 509, 510, 512, 395, 269, 432, 0, 396,
	376, 518, 519, 318, 90, 517, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 716, 0, 0, 0, 273, 721, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 728, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 724, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 99, 0, 0, 866, 850, 816, 817, 854,
	867, 868, 869, 870, 855, 0, 243, 856, 857, 250,
	858, 0, 815, 756, 758, 757, 775, 776, 777, 778,
	779, 780, 781, 754, 863, 871, 872, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 698, 713,
	0, 727, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 711, 0, 0, 0, 0, 810, 0, 712,
	0, 0, 720, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 809, 0, 0, 565, 0, 0, 807,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 860, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 861, 862, 259, 596, 762, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 770, 771, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 820, 808, 733, 824, 735, 821, 822,
	730, 731, 734, 823, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 811, 719, 718, 0, 726, 0, 752,
	753, 755, 759, 760, 761, 772, 773, 774, 782, 784,
	785, 783, 786, 787, 788, 791, 792, 793, 794, 789,
	790, 795, 736, 740, 737, 738, 739, 751, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 834, 835,
	836, 837, 838, 839, 765, 769, 768, 766, 767, 763,
	764, 717, 205, 226, 368, 98, 454, 291, 594, 555,
	549, 212, 228, 825, 265, 826, 0, 0, 830, 0,
	0, 0, 832, 831, 0, 833, 799, 798, 0, 0,
	827, 828, 0, 829, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 840, 841,
	842, 843, 844, 845, 846, 847, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 865,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 716, 0,
	0, 0, 273, 721, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 728,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	724, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 99, 0,
	0, 866, 850, 816, 817, 854, 867, 868, 869, 870,
	855, 0, 243, 856, 857, 250, 858, 0, 815, 756,
	758, 757, 775, 776, 777, 778, 779, 780, 781, 754,
	863, 871, 872, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 698, 713, 0, 727, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 710, 711, 0,
	0, 0, 0, 810, 0, 712, 0, 0, 720, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 809,
	0, 0, 565, 0, 0, 807, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 860, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 3622, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 861,
	862, 259, 596, 762, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 770, 771,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 820,
	808, 733, 824, 735, 821, 822, 730, 731, 734, 823,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 811,
	719, 718, 0, 726, 0, 752, 753, 755, 759, 760,
	761, 772, 773, 774, 782, 784, 785, 783, 786, 787,
	788, 791, 792, 793, 794, 789, 790, 795, 736, 740,
	737, 738, 739, 751, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 834, 835, 836, 837, 838, 839,
	765, 769, 768, 766, 767, 763, 764, 717, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 825,
	265, 826, 0, 0, 830, 0, 0, 0, 832, 831,
	0, 833, 799, 798, 0, 0, 827, 828, 0, 829,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 840, 841, 842, 843, 844, 845,
	846, 847, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 865, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 716, 0, 0, 0, 273, 721,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 728, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 724, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 99, 0, 1579, 866, 850, 816,
	817, 854, 867, 868, 869, 870, 855, 0, 243, 856,
	857, 250, 858, 0, 815, 756, 758, 757, 775, 776,
	777, 778, 779, 780, 781, 754, 863, 871, 872, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	698, 713, 0, 727, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 711, 0, 0, 0, 0, 810,
	0, 712, 0, 0, 720, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 809, 0, 0, 565, 0,
	0, 807, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 860,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 861, 862, 259, 596, 762,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 770, 771, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 820, 808, 733, 824, 735,
	821, 822, 730, 731, 734, 823, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 811, 719, 718, 0, 726,
	0, 752, 753, 755, 759, 760, 761, 772, 773, 774,
	782, 784, 785, 783, 786, 787, 788, 791, 792, 793,
	794, 789, 790, 795, 736, 740, 737, 738, 739, 751,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	834, 835, 836, 837, 838, 839, 765, 769, 768, 766,
	767, 763, 764, 717, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 825, 265, 826, 0, 0,
	830, 0, 0, 0, 832, 831, 0, 833, 799, 798,
	0, 0, 827, 828, 0, 829, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	840, 841, 842, 843, 844, 845, 846, 847, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 865, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	716, 0, 0, 0, 273, 721, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 728, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 724, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	99, 0, 0, 866, 850, 816, 817, 854, 867, 868,
	869, 870, 855, 0, 243, 856, 857, 250, 858, 0,
	815, 756, 758, 757, 775, 776, 777, 778, 779, 780,
	781, 754, 863, 871, 872, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 698, 713, 0, 727,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	711, 954, 0, 0, 0, 810, 0, 712, 0, 0,
	720, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 809, 0, 0, 565, 0, 0, 807, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 860, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 861, 862, 259, 596, 762, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	770, 771, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 820, 808, 733, 824, 735, 821, 822, 730, 731,
	734, 823, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 811, 719, 718, 0, 726, 0, 752, 753, 755,
	759, 760, 761, 772, 773, 774, 782, 784, 785, 783,
	786, 787, 788, 791, 792, 793, 794, 789, 790, 795,
	736, 740, 737, 738, 739, 751, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 834, 835, 836, 837,
	838, 839, 765, 769, 768, 766, 767, 763, 764, 717,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 825, 265, 826, 0, 0, 830, 0, 0, 0,
	832, 831, 0, 833, 799, 798, 0, 0, 827, 828,
	0, 829, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 840, 841, 842, 843,
	844, 845, 846, 847, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 865, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 716, 0, 0, 0,
	273, 721, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 728, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 724, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 99, 0, 0, 866,
	850, 816, 817, 854, 867, 868, 869, 870, 855, 0,
	243, 856, 857, 250, 858, 0, 815, 756, 758, 757,
	775, 776, 777, 778, 779, 780, 781, 754, 863, 871,
	872, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 698, 713, 0, 727, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 711, 0, 0, 0,
	0, 810, 0, 712, 0, 0, 720, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 809, 0, 0,
	565, 0, 0, 807, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 860, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 861, 862, 259,
	596, 762, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 770, 771, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 820, 808, 733,
	824, 735, 821, 822, 730, 731, 734, 823, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 811, 719, 718,
	0, 726, 0, 752, 753, 755, 759, 760, 761, 772,
	773, 774, 782, 784, 785, 783, 786, 787, 788, 791,
	792, 793, 794, 789, 790, 795, 736, 740, 737, 738,
	739, 751, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 834, 835, 836, 837, 838, 839, 765, 769,
	768, 766, 767, 763, 764, 717, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 825, 265, 826,
	0, 0, 830, 0, 0, 0, 832, 831, 0, 833,
	799, 798, 0, 0, 827, 828, 0, 829, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 840, 841, 842, 843, 844, 845, 846, 847,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 865, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 716, 0, 0, 0, 273, 721, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 728, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 724, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 99, 0, 0, 866, 850, 816, 817, 854,
	867, 868, 869, 870, 855, 0, 243, 856, 857, 250,
	858, 0, 815, 756, 758, 757, 775, 776, 777, 778,
	779, 780, 781, 754, 863, 871, 872, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 727, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 711, 0, 0, 0, 0, 810, 0, 712,
	0, 0, 720, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 809, 0, 0, 565, 0, 0, 807,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 860, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 861, 862, 259, 596, 762, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 770, 771, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 820, 808, 733, 824, 735, 821, 822,
	730, 731, 734, 823, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 811, 719, 718, 0, 726, 0, 752,
	753, 755, 759, 760, 761, 772, 773, 774, 782, 784,
	785, 783, 786, 787, 788, 791, 792, 793, 794, 789,
	790, 795, 736, 740, 737, 738, 739, 751, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 834, 835,
	836, 837, 838, 839, 765, 769, 768, 766, 767, 763,
	764, 717, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 825, 265, 826, 0, 0, 830, 0,
	0, 0, 832, 831, 0, 833, 799, 798, 0, 0,
	827, 828, 0, 829, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 840, 841,
	842, 843, 844, 845, 846, 847, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 865,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 1395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1404, 1403, 1405, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 1028, 565, 0,
	0, 0, 0, 0, 1025, 1026, 365, 983, 332, 206,
	230, 1019, 1023, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 1542, 850, 0, 0, 1539, 0, 0,
	0, 0, 1537, 0, 243, 1538, 1536, 250, 1541, 0,
	815, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 0, 396, 376, 518, 519, 318, 90,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 366, 270, 0, 0,
	429, 0, 211, 0, 486, 257, 377, 374, 525, 285,
	276, 272, 255, 319, 385, 427, 507, 421, 0, 370,
	0, 0, 496, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	253, 327, 210, 412, 497, 289, 0, 99, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 250, 0, 0, 0, 351, 360,
	359, 340, 341, 343, 345, 350, 357, 363, 0, 0,
	0, 0, 0, 268, 323, 275, 267, 522, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 401, 260, 0, 0, 453, 0, 0,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 332, 206, 230, 0, 0, 411, 461, 473, 0,
	0, 0, 258, 0, 471, 425, 542, 238, 287, 458,
	431, 469, 441, 290, 0, 0, 470, 372, 527, 451,
	539, 566, 567, 266, 405, 551, 511, 560, 593, 231,
	263, 419, 504, 545, 493, 397, 523, 524, 331, 492,
	298, 209, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 229, 479, 371,
	247, 236, 529, 548, 292, 456, 435, 436, 574, 588,
	575, 577, 578, 218, 506, 537, 244, 483, 0, 0,
	595, 252, 503, 220, 534, 502, 393, 328, 329, 219,
	0, 457, 271, 296, 0, 0, 261, 414, 531, 532,
	259, 596, 233, 559, 225, 0, 558, 407, 526, 535,
	394, 383, 224, 533, 392, 382, 336, 355, 356, 283,
	309, 448, 375, 449, 308, 310, 403, 402, 404, 213,
	546, 0, 214, 0, 498, 547, 597, 239, 240, 242,
	0, 282, 286, 294, 297, 305, 306, 315, 367, 418,
	447, 443, 452, 0, 521, 540, 552, 564, 570, 571,
	573, 579, 580, 581, 583, 589, 587, 584, 585, 586,
	582, 576, 406, 313, 494, 335, 373, 0, 0, 424,
	472, 245, 544, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 384, 485, 541,
	337, 349, 352, 342, 361, 0, 362, 338, 339, 344,
	346, 347, 348, 353, 354, 358, 364, 254, 216, 390,
	398, 520, 314, 221, 222, 223, 513, 514, 515, 516,
	556, 557, 561, 462, 463, 464, 465, 295, 550, 311,
	468, 467, 333, 334, 379, 450, 0, 205, 226, 368,
	98, 454, 291, 594, 555, 549, 212, 228, 0, 265,
	0, 0, 0, 0, 0, 0, 2188, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 215, 227, 237, 241, 248, 264, 279,
	281, 288, 301, 312, 320, 321, 324, 330, 380, 386,
	387, 388, 389, 408, 409, 410, 413, 416, 417, 420,
	422, 423, 426, 430, 434, 437, 438, 440, 442, 444,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 487,
	488, 489, 490, 491, 499, 500, 505, 528, 530, 543,
	562, 568, 480, 303, 304, 445, 446, 316, 317, 591,
	592, 302, 538, 569, 536, 590, 563, 439, 378, 0,
	0, 553, 0, 381, 284, 307, 322, 0, 554, 501,
	232, 466, 293, 256, 0, 0, 217, 251, 235, 262,
	277, 280, 326, 391, 399, 428, 433, 299, 274, 249,
	459, 246, 484, 508, 509, 510, 512, 395, 269, 432,
	1598, 0, 376, 518, 519, 318, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 1600, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 366, 270, 0, 0, 429, 0, 211, 0,
	486, 257, 377, 374, 525, 285, 276, 272, 255, 319,
	385, 427, 507, 421, 0, 370, 0, 0, 496, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 253, 327, 210, 412,
	497, 289, 0, 0, 0, 0, 1602, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	250, 0, 0, 0, 351, 360, 359, 340, 341, 343,
	345, 350, 357, 363, 0, 0, 0, 0, 0, 268,
	323, 275, 267, 522, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 1376, 0, 1377, 1378, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 401,
	260, 0, 0, 453, 0, 0, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 332, 206, 230,
	0, 0, 411, 461, 473, 0, 0, 0, 258, 0,
	471, 425, 542, 238, 287, 458, 431, 469, 441, 290,
	0, 0, 470, 372, 527, 451, 539, 566, 567, 266,
	405, 551, 511, 560, 593, 231, 263, 419, 504, 545,
	493, 397, 523, 524, 331, 492, 298, 209, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 229, 479, 371, 247, 236, 529, 548,
	292, 456, 435, 436, 574, 588, 575, 577, 578, 218,
	506, 537, 244, 483, 0, 0, 595, 252, 503, 220,
	534, 502, 393, 328, 329, 219, 0, 457, 271, 296,
	0, 0, 261, 414, 531, 532, 259, 596, 233, 559,
	225, 0, 558, 407, 526, 535, 394, 383, 224, 533,
	392, 382, 336, 355, 356, 283, 309, 448, 375, 449,
	308, 310, 403, 402, 404, 213, 546, 0, 214, 0,
	498, 547, 597, 239, 240, 242, 0, 282, 286, 294,
	297, 305, 306, 315, 367, 418, 447, 443, 452, 0,
	521, 540, 552, 564, 570, 571, 573, 579, 580, 581,
	583, 589, 587, 584, 585, 586, 582, 576, 406, 313,
	494, 335, 373, 0, 0, 424, 472, 245, 544, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 384, 485, 541, 337, 349, 352, 342,
	361, 0, 362, 338, 339, 344, 346, 347, 348, 353,
	354, 358, 364, 254, 216, 390, 398, 520, 314, 221,
	222, 223, 513, 514, 515, 516, 556, 557, 561, 462,
	463, 464, 465, 295, 550, 311, 468, 467, 333, 334,
	379, 450, 0, 205, 226, 368, 0, 454, 291, 594,
	555, 549, 212, 228, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 215,
	227, 237, 241, 248, 264, 279, 281, 288, 301, 312,
	320, 321, 324, 330, 380, 386, 387, 388, 389, 408,
	409, 410, 413, 416, 417, 420, 422, 423, 426, 430,
	434, 437, 438, 440, 442, 444, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 487, 488, 489, 490, 491,
	499, 500, 505, 528, 530, 543, 562, 568, 480, 303,
	304, 445, 446, 316, 317, 591, 592, 302, 538, 569,
	536, 590, 563, 439, 378, 0, 0, 553, 0, 381,
	284, 307, 322, 0, 554, 501, 232, 466, 293, 256,
	0, 0, 217, 251, 235, 262, 277, 280, 326, 391,
	399, 428, 433, 299, 274, 249, 459, 246, 484, 508,
	509, 510, 512, 395, 269, 432, 0, 396, 376, 518,
	519, 318, 90, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	99, 0, 1579, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 98, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 99, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 2188, 0, 0, 2187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 2139, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 1785, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	2137, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 983, 332, 206, 230, 981, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 2139, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 1785, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 1579, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 3527, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 1972,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 2591, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 2576, 0, 0,
	0, 0, 243, 0, 0, 250, 2577, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 1621,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 1620, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 678, 679, 680, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 3658, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 1785, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 3527, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 99, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 1602,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 1927, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 1918, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 1752, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 1750, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 1748, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 1746,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 1744, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 1740, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 1738, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 1736, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 1711, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 1606, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 408, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 99, 0, 0, 0, 850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 1353, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 396,
	0, 376, 518, 519, 318, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 366, 270, 0, 0, 429, 0, 211, 0, 486,
	257, 377, 374, 525, 285, 276, 272, 255, 319, 385,
	427, 507, 421, 0, 370, 0, 0, 496, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 253, 327, 210, 412, 497,
	289, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 250,
	0, 0, 0, 351, 360, 359, 340, 341, 343, 345,
	350, 357, 363, 0, 0, 0, 0, 0, 268, 323,
	275, 267, 522, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 401, 260,
	0, 0, 453, 0, 619, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 332, 206, 230, 0,
	0, 411, 461, 473, 0, 0, 0, 258, 0, 471,
	425, 542, 238, 287, 458, 431, 469, 441, 290, 0,
	0, 470, 372, 527, 451, 539, 566, 567, 266, 405,
	551, 511, 560, 593, 231, 263, 419, 504, 545, 493,
	397, 523, 524, 331, 492, 298, 209, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 229, 479, 371, 247, 236, 529, 548, 292,
	456, 435, 436, 574, 588, 575, 577, 578, 218, 506,
	537, 244, 483, 0, 0, 595, 252, 503, 220, 534,
	502, 393, 328, 329, 219, 0, 457, 271, 296, 0,
	0, 261, 414, 531, 532, 259, 596, 233, 559, 225,
	0, 558, 407, 526, 535, 394, 383, 224, 533, 392,
	382, 336, 355, 356, 283, 309, 448, 375, 449, 308,
	310, 403, 402, 404, 213, 546, 0, 214, 0, 498,
	547, 597, 239, 240, 242, 0, 282, 286, 294, 297,
	305, 306, 315, 367, 418, 447, 443, 452, 0, 521,
	540, 552, 564, 570, 571, 573, 579, 580, 581, 583,
	589, 587, 584, 585, 586, 582, 576, 406, 313, 494,
	335, 373, 0, 0, 424, 472, 245, 544, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 616, 384, 485, 541, 337, 349, 352, 342, 361,
	0, 362, 338, 339, 344, 346, 347, 348, 353, 354,
	358, 364, 254, 216, 390, 398, 520, 314, 221, 222,
	223, 513, 514, 515, 516, 556, 557, 561, 462, 463,
	464, 465, 295, 550, 311, 468, 467, 333, 334, 379,
	450, 0, 205, 226, 368, 0, 454, 291, 594, 555,
	549, 212, 228, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 215, 227,
	237, 241, 248, 264, 279, 281, 288, 301, 312, 320,
	321, 324, 330, 380, 386, 387, 388, 389, 408, 409,
	410, 413, 416, 417, 420, 422, 423, 426, 430, 434,
	437, 438, 440, 442, 444, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 487, 488, 489, 490, 491, 499,
	500, 505, 528, 530, 543, 562, 568, 480, 303, 304,
	445, 446, 316, 317, 591, 592, 302, 538, 569, 536,
	590, 563, 439, 378, 0, 0, 553, 0, 381, 284,
	307, 322, 0, 554, 501, 232, 466, 293, 256, 0,
	0, 217, 251, 235, 262, 277, 280, 326, 391, 399,
	428, 433, 299, 274, 249, 459, 246, 484, 508, 509,
	510, 512, 395, 269, 432, 396, 0, 376, 518, 519,
	318, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 366, 270, 0,
	0, 429, 0, 211, 0, 486, 257, 377, 374, 525,
	285, 276, 272, 255, 319, 385, 427, 507, 421, 0,
	370, 0, 0, 496, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 253, 327, 210, 412, 497, 289, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 250, 0, 0, 0, 351,
	360, 359, 340, 341, 343, 345, 350, 357, 363, 0,
	0, 0, 0, 0, 268, 323, 275, 267, 522, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 401, 260, 0, 0, 453, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 332, 206, 230, 0, 0, 411, 461, 473,
	0, 0, 0, 258, 0, 471, 425, 542, 238, 287,
	458, 431, 469, 441, 290, 0, 0, 470, 372, 527,
	451, 539, 566, 567, 266, 405, 551, 511, 560, 593,
	231, 263, 419, 504, 545, 493, 397, 523, 524, 331,
	492, 298, 209, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 229, 479,
	371, 247, 236, 529, 548, 292, 456, 435, 436, 574,
	588, 575, 577, 578, 218, 506, 537, 244, 483, 0,
	0, 595, 252, 503, 220, 534, 502, 393, 328, 329,
	219, 0, 457, 271, 296, 0, 0, 261, 414, 531,
	532, 259, 596, 233, 559, 225, 0, 558, 407, 526,
	535, 394, 383, 224, 533, 392, 382, 336, 355, 356,
	283, 309, 448, 375, 449, 308, 310, 403, 402, 404,
	213, 546, 0, 214, 0, 498, 547, 597, 239, 240,
	242, 0, 282, 286, 294, 297, 305, 306, 315, 367,
	418, 447, 443, 452, 0, 521, 540, 552, 564, 570,
	571, 573, 579, 580, 581, 583, 589, 587, 584, 585,
	586, 582, 576, 406, 313, 494, 335, 373, 0, 0,
	424, 472, 245, 544, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 384, 485,
	541, 337, 349, 352, 342, 361, 0, 362, 338, 339,
	344, 346, 347, 348, 353, 354, 358, 364, 254, 216,
	390, 398, 520, 314, 221, 222, 223, 513, 514, 515,
	516, 556, 557, 561, 462, 463, 464, 465, 295, 550,
	311, 468, 467, 333, 334, 379, 450, 0, 205, 226,
	368, 0, 454, 291, 594, 555, 549, 212, 228, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 215, 227, 237, 241, 248, 264,
	279, 281, 288, 301, 312, 320, 321, 324, 330, 380,
	386, 387, 388, 389, 3666, 409, 410, 413, 416, 417,
	420, 422, 423, 426, 430, 434, 437, 438, 440, 442,
	444, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	487, 488, 489, 490, 491, 499, 500, 505, 528, 530,
	543, 562, 568, 480, 303, 304, 445, 446, 316, 317,
	591, 592, 302, 538, 569, 536, 590, 563, 439, 378,
	0, 0, 553, 0, 381, 284, 307, 322, 0, 554,
	501, 232, 466, 293, 256, 0, 0, 217, 251, 235,
	262, 277, 280, 326, 391, 399, 428, 433, 299, 274,
	249, 459, 246, 484, 508, 509, 510, 512, 395, 269,
	432, 396, 0, 376, 518, 519, 318, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 366, 270, 0, 0, 429, 0, 211,
	0, 486, 257, 377, 374, 525, 285, 276, 272, 255,
	319, 385, 427, 507, 421, 0, 370, 0, 0, 496,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 253, 327, 210,
	412, 497, 289, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 250, 0, 0, 0, 351, 360, 359, 340, 341,
	343, 345, 350, 357, 363, 0, 0, 0, 0, 0,
	268, 323, 275, 267, 522, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	401, 260, 0, 0, 453, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 332, 206,
	230, 0, 0, 411, 461, 473, 0, 0, 0, 258,
	0, 471, 425, 542, 238, 287, 458, 431, 469, 441,
	290, 0, 0, 470, 372, 527, 451, 539, 566, 567,
	266, 405, 551, 511, 560, 593, 231, 263, 419, 504,
	545, 493, 397, 523, 524, 331, 492, 298, 209, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 229, 479, 371, 247, 236, 529,
	548, 292, 456, 435, 436, 574, 588, 575, 577, 578,
	218, 506, 537, 244, 483, 0, 0, 595, 252, 503,
	220, 534, 502, 393, 328, 329, 219, 0, 457, 271,
	296, 0, 0, 261, 414, 531, 532, 259, 596, 233,
	559, 225, 0, 558, 407, 526, 535, 394, 383, 224,
	533, 392, 382, 336, 355, 356, 283, 309, 448, 375,
	449, 308, 310, 403, 402, 404, 213, 546, 0, 214,
	0, 498, 547, 597, 239, 240, 242, 0, 282, 286,
	294, 297, 305, 306, 315, 367, 418, 447, 443, 452,
	0, 521, 540, 552, 564, 570, 571, 573, 579, 580,
	581, 583, 589, 587, 584, 585, 586, 582, 576, 406,
	313, 494, 335, 373, 0, 0, 424, 472, 245, 544,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 384, 485, 541, 337, 349, 352,
	342, 361, 0, 362, 338, 339, 344, 346, 347, 348,
	353, 354, 358, 364, 254, 216, 390, 398, 520, 314,
	221, 222, 223, 513, 514, 515, 516, 556, 557, 561,
	462, 463, 464, 465, 295, 550, 311, 468, 467, 333,
	334, 379, 450, 0, 205, 226, 368, 0, 454, 291,
	594, 555, 549, 212, 228, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	215, 227, 237, 241, 248, 264, 279, 281, 288, 301,
	312, 320, 321, 324, 330, 380, 386, 387, 388, 389,
	408, 409, 410, 413, 416, 417, 420, 422, 423, 426,
	430, 434, 437, 438, 440, 442, 444, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 487, 488, 489, 490,
	491, 499, 500, 505, 528, 530, 543, 562, 568, 480,
	303, 304, 445, 446, 316, 317, 591, 592, 302, 538,
	569, 536, 590, 563, 439, 378, 0, 0, 553, 0,
	381, 284, 307, 322, 0, 554, 501, 232, 466, 293,
	256, 0, 0, 217, 251, 235, 262, 277, 280, 326,
	391, 399, 428, 433, 299, 274, 249, 459, 246, 484,
	508, 509, 510, 512, 395, 269, 432, 396, 0, 376,
	518, 519, 318, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 366,
	270, 0, 0, 429, 0, 211, 0, 486, 257, 377,
	374, 525, 285, 276, 272, 255, 319, 385, 427, 507,
	421, 0, 370, 0, 0, 496, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 253, 327, 210, 412, 497, 289, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 250, 0, 0,
	0, 351, 360, 359, 340, 341, 343, 345, 350, 357,
	363, 0, 0, 0, 0, 0, 268, 323, 275, 267,
	522, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 401, 260, 0, 0,
	453, 0, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 332, 206, 230, 0, 0, 411,
	461, 473, 0, 0, 0, 258, 0, 471, 425, 542,
	238, 287, 458, 431, 469, 441, 290, 0, 0, 470,
	372, 527, 451, 539, 566, 567, 266, 405, 551, 511,
	560, 593, 231, 263, 419, 504, 545, 493, 397, 523,
	524, 331, 492, 298, 209, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	229, 479, 371, 247, 236, 529, 548, 292, 456, 435,
	436, 574, 588, 575, 577, 578, 218, 506, 537, 244,
	483, 0, 0, 595, 252, 503, 220, 534, 502, 393,
	328, 329, 219, 0, 457, 271, 296, 0, 0, 261,
	414, 531, 532, 259, 596, 233, 559, 225, 0, 558,
	407, 526, 535, 394, 383, 224, 533, 392, 382, 336,
	355, 356, 283, 309, 448, 375, 449, 308, 310, 403,
	402, 404, 213, 546, 0, 214, 0, 498, 547, 597,
	239, 240, 242, 0, 282, 286, 294, 297, 305, 306,
	315, 367, 418, 447, 443, 452, 0, 521, 540, 552,
	564, 570, 571, 573, 579, 580, 581, 583, 589, 587,
	584, 585, 586, 582, 576, 406, 313, 494, 335, 373,
	0, 0, 424, 472, 245, 544, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	384, 485, 541, 337, 349, 352, 342, 361, 0, 362,
	338, 339, 344, 346, 347, 348, 353, 354, 358, 364,
	254, 216, 390, 398, 520, 314, 221, 222, 223, 513,
	514, 515, 516, 556, 557, 561, 462, 463, 464, 465,
	295, 550, 311, 468, 467, 333, 334, 379, 450, 0,
	205, 226, 368, 0, 454, 291, 594, 555, 549, 212,
	228, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 215, 227, 237, 241,
	248, 264, 279, 281, 288, 301, 312, 320, 321, 324,
	330, 380, 386, 387, 388, 389, 408, 409, 410, 413,
	416, 417, 420, 422, 423, 426, 430, 434, 437, 438,
	440, 442, 444, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 487, 488, 489, 490, 491, 499, 500, 505,
	528, 530, 543, 562, 568, 480, 303, 304, 445, 446,
	316, 317, 591, 592, 302, 538, 569, 536, 590, 563,
	439, 378, 0, 0, 553, 0, 381, 284, 307, 322,
	0, 554, 501, 232, 466, 293, 256, 0, 0, 217,
	251, 235, 262, 277, 280, 326, 391, 399, 428, 433,
	299, 274, 249, 459, 246, 484, 508, 509, 510, 512,
	395, 269, 432, 396, 0, 376, 518, 519, 318, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 366, 270, 0, 0, 429,
	0, 211, 0, 486, 257, 377, 374, 525, 285, 276,
	272, 255, 319, 385, 427, 507, 421, 0, 370, 0,
	0, 496, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 253,
	327, 210, 412, 497, 289, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 250, 0, 0, 0, 351, 360, 359,
	340, 341, 343, 345, 350, 357, 363, 0, 0, 0,
	0, 0, 268, 323, 275, 267, 522, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 401, 260, 0, 0, 453, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	332, 206, 230, 0, 0, 411, 461, 473, 0, 0,
	0, 258, 0, 471, 425, 542, 238, 287, 458, 431,
	469, 441, 290, 0, 0, 470, 372, 527, 451, 539,
	566, 567, 266, 405, 551, 511, 560, 593, 231, 263,
	419, 504, 545, 493, 397, 523, 524, 331, 492, 298,
	209, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 229, 479, 371, 247,
	236, 529, 548, 292, 456, 435, 436, 574, 588, 575,
	577, 578, 218, 506, 537, 244, 483, 0, 0, 595,
	252, 503, 220, 534, 502, 393, 328, 329, 219, 0,
	457, 271, 296, 0, 0, 261, 414, 531, 532, 259,
	596, 233, 559, 225, 0, 558, 407, 526, 535, 394,
	383, 224, 533, 392, 382, 336, 355, 356, 283, 309,
	448, 375, 449, 308, 310, 403, 402, 404, 213, 546,
	0, 214, 0, 498, 547, 597, 239, 240, 242, 0,
	282, 286, 294, 297, 305, 306, 315, 367, 418, 447,
	443, 452, 0, 521, 540, 552, 564, 570, 571, 573,
	579, 580, 581, 583, 589, 587, 584, 585, 586, 582,
	576, 406, 313, 494, 335, 373, 0, 0, 424, 472,
	245, 544, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 384, 485, 541, 337,
	349, 352, 342, 361, 0, 362, 338, 339, 344, 346,
	347, 348, 353, 354, 358, 364, 254, 216, 390, 398,
	520, 314, 221, 222, 223, 513, 514, 515, 516, 556,
	557, 561, 462, 463, 464, 465, 295, 550, 311, 468,
	467, 333, 334, 379, 450, 0, 205, 226, 368, 0,
	454, 291, 594, 555, 549, 212, 228, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 215, 227, 237, 241, 248, 264, 279, 281,
	288, 301, 312, 320, 321, 324, 330, 380, 386, 387,
	388, 389, 408, 409, 410, 413, 416, 417, 420, 422,
	423, 426, 430, 434, 437, 438, 440, 442, 444, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 487, 488,
	489, 490, 491, 499, 500, 505, 528, 530, 543, 562,
	568, 480, 303, 304, 445, 446, 316, 317, 591, 592,
	302, 538, 569, 536, 590, 563, 439, 378, 0, 0,
	553, 0, 381, 284, 307, 322, 0, 554, 501, 232,
	466, 293, 256, 0, 0, 217, 251, 235, 262, 277,
	280, 326, 391, 399, 428, 433, 299, 274, 249, 459,
	246, 484, 508, 509, 510, 512, 395, 269, 432, 0,
	0, 376, 518, 519, 318,
}

var yyPact = [...]int{
	-1000, -1000, 4668, -1000, -475, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2371, 2437, -1000, -1000, -1000, -1000,
	2656, -1000, 1158, 2147, 300, 2395, 329, 285, 49119, 666,
	-1000, 46375, 664, 662, 142, -83, 1540, 31283, -1000, 232,
	-1000, 223, 47747, 227, -1000, -1000, -1000, -1000, -323, 19619,
	2321, 105, 79, 49119, -1000, -1000, -1000, -1000, 2642, 2093,
	-1000, 405, -1000, -1000, -1000, -1000, -1000, -1000, 45689, -1000,
	1085, -1000, -1000, 2402, 2370, 2669, 801, 2319, -1000, 2530,
	2093, -1000, 19619, 2580, 2454, 18933, 18933, 556, -1000, -1000,
	280, -1000, -1000, -1000, 2680, 26481, 49119, -1000, 34027, 550,
	337, -1000, 2395, -1000, -1000, -1000, 130, -1000, 444, 2012,
	-1000, 2011, -1000, 1149, 1076, 482, 598, 596, 481, 480,
	479, 477, 476, 475, 471, 470, 499, -1000, 856, 856,
	-135, -138, 4916, 609, 546, 546, 852, 599, 2346, 2345,
	-1000, -1000, 856, 856, 856, 415, 856, 856, 856, 856,
	426, 419, 856, 856, 856, 856, 856, 856, 856, 856,
	856, 856, 856, 856, 856, 856, 856, 856, 856, 1318,
	378, 2395, 389, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49119, 304, 49119,
	-1000, 735, 49119, 49119, -1000, 1287, 1286, -1000, -1000, 992,
	-1000, -1000, 992, 207, 992, 992, 992, 992, 238, 790,
	77, -1000, 237, 417, 231, 369, 970, 294, -1000, -1000,
	343, 970, 969, 970, 1843, 1824, -1000, 808, 363, 228,
	-1000, 992, 992, 992, -1000, -1000, 12734, 168, 12734, 12734,
	-1000, 2381, -1000, -1000, -1000, -1000, -1000, 1136, -1000, -1000,
	-1000, -1000, -1, 576, -1000, -1000, -1000, -1000, 47747, 45003,
	362, -1000, -1000, 73, -1000, -1000, 1859, 1138, 19619, 1274,
	-1000, 1356, 781, -1000, -1000, -1000, -1000, -1000, 693, -1000,
	20305, 20305, 20305, 20305, -1000, -1000, 1668, 44317, 1668, 1668,
	20305, 1668, -1000, 20305, 1668, 1668, 1668, 19619, 1668, 1668,
	1668, 1668, -1000, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, -1000, -1000, -1000, -1000, 1668, 732, 1668, 1668, 1668,
	1668, 1668, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1668, 1668, 1668, 1668, 1668, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22363,
	1539, 1538, 1532, -1000, 16875, 1668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 49119, -1000, 1668, 273,
	47747, 47747, 493, 2530, 2093, -1000, 2642, 2652, 405, 3016,
	1441, 1568, 1332, 2093, 1991, 49119, -1000, 2036, -1000, -1000,
	-1000, -1000, 2245, 1373, 1789, -1000, -1000, -1000, -1000, 1795,
	19619, -1000, -1000, 2653, -1000, 23736, 723, 2650, 43631, -1000,
	556, 556, 2010, 490, 29, -1000, -1000, -1000, -1000, 886,
	30597, -1000, -1000, -1000, -1000, -1000, 1868, 49119, -1000, -1000,
	6602, 1311, -1000, 2141, -1000, 2494, 1830, -1000, 2074, 19619,
	2140, 918, 2157, 657, 1311, 637, 616, 614, -1000, -30,
	-1000, -1000, -1000, -1000, -1000, -1000, 856, 856, 856, -1000,
	488, 2579, 329, 4951, -1000, -1000, -1000, 42945, 2138, 1311,
	-1000, 2133, -1000, 1001, 648, 706, 706, 1311, -1000, -1000,
	48433, 1311, 997, 982, 1311, 1311, 47747, 47747, -1000, 42259,
	-1000, 41573, 40887, 1285, 47747, 40201, 39515, 38829, 38143, 37457,
	-1000, 2298, -1000, 2100, -1000, -1000, -1000, 48433, 1311, 1311,
	48433, 47747, 48433, 49119, 1311, -1000, -1000, 416, -1000, -1000,
	1284, 1272, 1264, 856, 856, 1262, 1768, 1761, 1752, 856,
	856, 1256, 1734, 32655, 1719, 368, 1251, 1249, 1248, 1257,
	1716, 204, 1714, 1253, 1215, 1240, 47747, 2132, 2130, 49119,
	-1000, 349, 857, 904, 705, 541, 885, 2395, 2311, 2009,
	571, 649, 1311, 549, 549, 47747, -1000, 14810, -1000, 765,
	-1000, -1000, -1000, -1000, 1696, 19619, -1000, 975, 970, 970,
	-1000, -1000, -1000, -1000, -1000, -1000, 992, 49119, 975, -1000,
	-1000, -1000, 970, 992, 49119, 992, 992, 992, 992, 970,
	970, 970, 992, 49119, 49119, 49119, 49119, 49119, 49119, 49119,
	49119, 49119, 12734, 808, 992, 992, -342, 992, 235, -343,
	-1000, 1690, -1000, -1000, 2240, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12734, 12734,
	-1000, -1000, -1000, -1000, -1000, 2004, -1000, 219, 43, 226,
	-1000, 36771, 422, 884, -1000, 422, -1000, -1000, -1000, 2000,
	36085, -1000, -382, -385, -386, -389, -1000, -1000, -1000, -1000,
	-390, -393, -1000, -1000, -1000, 19619, 19619, 19619, 19619, -170,
	-1000, 1139, 20305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	167, 962, 20305, 20305, 20305, 20305, 20305, 20305, 20305, 20305,
	20305, 20305, 20305, 20305, 20305, 20305, 20305, -1000, -1000, 28539,
	8165, 8165, 781, 781, 781, 781, -1000, -92, 1997, 48433,
	-1000, -1000, -1000, 719, 19619, 19619, 781, -1000, 1311, 16875,
	20991, 18933, 18933, 19619, 907, 1138, 48433, 19619, -1000, 1332,
	-1000, -1000, -1000, 1259, -1000, 1037, 2359, 2359, 2359, 2359,
	19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619,
	2359, 47747, 47747, 2444, 19619, 19619, 19619, 19619, 19619, 19619,
	15502, 19619, 19619, 20305, 19619, 19619, 19619, 1332, 19619, 19619,
	19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619,
	19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619,
	19619, 19619, 19619, 19619, 19619, 1332, 19619, 1350, 19619, 19619,
	18933, 14118, 18933, 18933, 18933, 18933, 18933, -1000, -1000, -1000,
	-1000, -1000, 19619, 19619, 19619, 19619, 19619, 19619, 19619, 19619,
	1332, 19619, 19619, 19619, 19619, 19619, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1660, 1567, 1424, 19619,
	-1000, 1996, -1000, -122, 25795, 19619, 1685, 1680, 2638, 2172,
	47747, -1000, -1000, -1000, 2530, -1000, 2530, 1660, 2246, 18933,
	-1000, -1000, 2494, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1729, -1000, 49119, 1991, 2447, 47747, 2239, 1678, 455,
	-1000, 19619, 19619, 1990, -1000, 1151, 49119, -1000, -170, -1000,
	35399, -1000, -1000, 12042, 49119, 458, 49119, -1000, 25109, 34713,
	328, -1000, 29, 1921, -1000, 44, 40, 16188, 771, -1000,
	-1000, -1000, 4916, 21677, 1853, 771, 135, -1000, -1000, -1000,
	2074, -1000, 2074, 2074, 2074, 2074, 455, 455, 455, 455,
	-1000, -1000, -1000, -1000, -1000, 2129, 2122, -1000, 2074, 2074,
	2074, 2074, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2119,
	2119, 2119, 2111, 2111, 2075, 2075, 532, -1000, 19619, -1000,
	-1000, 334, 34027, 2414, 1237, 1352, 138, 2421, 349, 550,
	2167, 1311, 1311, 1311, 550, -1000, 1368, 1366, 1347, -1000,
	-462, 1985, -1000, -1000, 2573, -1000, -1000, 1160, 1018, 1002,
	851, 47747, 312, 430, -1000, 524, -1000, 34027, 1311, 971,
	706, 1311, -1000, 1311, -1000, -1000, -1000, -1000, -1000, 1311,
	-1000, -1000, 1983, -1000, 1974, 1081, 977, 1051, 941, 1983,
	-1000, -1000, -98, 1983, -1000, 1983, -1000, 1983, -1000, 1983,
	-1000, 1983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 873, 240, -208, 47747, 312, 570, -1000, 564, 28539,
	-1000, -1000, -1000, 28539, 28539, -1000, -1000, -1000, -1000, 1674,
	1666, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-452, 49119, 283, 138, -1000, 331, 883, 436, 468, 379,
	49119, 358, 2514, 2513, 2506, 2502, 2501, 2500, 2499, 324,
	2498, 2491, 2489, 2487, 2485, 2472, 340, 2470, 2468, 2467,
	2466, 2458, 2446, 2423, 402, 418, 49119, 49119, 549, 2204,
	49119, 2411, 49119, -1000, -1000, -1000, -1000, 445, 49119, -1000,
	359, -1000, -1000, -1000, -1000, -1000, -1000, 1138, 49119, -1000,
	-1000, 992, 992, -1000, -1000, 49119, 992, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 992, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49119, -1000, -1000, -1000, -1000,
	-1, 210, -1000, -1000, 47747, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -35, -1000, 181, 48, 424, -1000,
	-1000, -1000, -1000, -1000, 2523, -1000, 1138, 916, 932, -1000,
	1668, -1000, -1000, 1219, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 167, 20305, 20305, 20305, 1758, 607, 2003, 1861, 1530,
	1132, 1132, 944, 944, 786, 786, 786, 786, 786, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1645, -1000, 1668,
	48433, 1821, 14118, 1994, 1306, 1332, 2968, -1000, 1806, -1000,
	1806, 1446, 936, -1000, 19619, 1332, 2956, -1000, -1000, 1332,
	1332, 1332, 19619, -1000, -1000, 19619, 19619, 19619, 19619, 1352,
	1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 19619,
	1971, 1970, 2629, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1774, 1352, 1352, 1352, 1352, 1352,
	19619, 1331, -1000, -1000, -1000, 1401, 2951, 1667, 2944, 1352,
	1352, -1000, 1352, 2936, 2919, 1332, 1859, 1332, 1957, -1000,
	2892, 1352, 2880, 2875, 2855, 2153, 2843, 2803, 2793, 1352,
	1352, 1352, 2135, 2788, 2747, 2643, 2604, 2578, 2545, 2504,
	2481, 2448, 1352, -172, 1352, 1332, -1000, -1000, -1000, -1000,
	-1000, 2426, 2126, 1332, 1954, 1668, 718, -1000, -1000, 1806,
	1332, 1332, 1806, 1806, 2422, 2413, 2393, 2365, 2361, 2356,
	1352, 1352, -1000, 1352, 2347, 2335, 2105, 2090, 1332, -1000,
	1424, 49119, -1000, -305, -1000, 13, 726, 1668, -1000, 32655,
	1332, -1000, -1000, 7851, -1000, 1089, -1000, -1000, -1000, 29911,
	1963, 2494, -1000, -1000, 1668, 1803, -1000, -1000, 455, 121,
	29225, 750, 750, 158, 1138, 1138, 19619, -1000, -1000, -1000,
	-1000, -1000, -1000, 708, 2588, 453, 1668, -1000, 1951, 2474,
	-1000, -1000, -1000, 2442, 23050, -1000, -1000, 1668, 1668, 49119,
	1977, 1917, -1000, 704, -1000, 1314, 1921, 29, 34, -1000,
	-1000, -1000, -1000, 1138, -1000, 1302, 463, 703, -1000, 535,
	-1000, -1000, -1000, -1000, 2331, 132, -1000, -1000, -1000, 264,
	455, -1000, -1000, -1000, -1000, -1000, -1000, 1641, 1641, -1000,
	-1000, -1000, -1000, -1000, 1236, -1000, -1000, -1000, -1000, 1232,
	-1000, -1000, 1195, -1000, -1000, 2318, 2215, 334, -1000, -1000,
	856, 1636, -1000, -1000, 2336, 856, 856, 47747, -1000, -1000,
	1850, 2414, 1799, 878, -1000, -1000, -1000, -1000, -1000, 331,
	49119, 2203, -1000, 2167, 2167, 2167, 49119, -1000, -1000, -1000,
	-1000, -1000, -1000, -454, 83, 434, -1000, -1000, -1000, 4192,
	47747, 1793, -1000, 303, -1000, 1831, -1000, 47747, -1000, 1788,
	2109, 1311, 1311, -1000, -1000, -1000, 47747, 1668, -1000, -1000,
	-1000, -1000, 640, 2390, 317, -1000, -1000, -192, -1000, -1000,
	312, 303, 48433, 1311, 771, -1000, -1000, -1000, -1000, -1000,
	-455, 1786, 491, 2103, 1776, 872, 605, 314, 367, 49119,
	49119, 49119, 49119, 49119, 685, -1000, -1000, 68, -1000, -1000,
	-1000, -1000, 258, -1000, -1000, -1000, -1000, -1000, -1000, 258,
	-1000, -1000, -1000, -1000, -1000, 258, -1000, 1625, -1000, -1000,
	-1000, -1000, 258, -1000, -1000, -1000, 67, -1000, -1000, -1000,
	-1000, 258, -1000, -1000, -1000, -1000, -1000, -1000, 258, -1000,
	-1000, -1000, -1000, 380, 563, -1000, 49119, 49119, 684, -1000,
	-1000, -1000, -1000, -1000, -1000, 970, -1000, -1000, 970, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2379, 49119, 46, -422, -1000, -413, 19619, -1000, -1000,
	-1000, -1000, 1404, 587, 2003, 20305, 20305, 20305, -1000, -1000,
	-1000, 967, 967, 28539, -1000, 19619, 18933, -1000, -1000, 19619,
	19619, 888, -1000, 19619, 1123, -1000, 19619, -1000, -1000, -1000,
	1424, 1352, 1352, 1352, 1352, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1892, 19619, 19619, 19619, 1332,
	360, -1000, -1000, -1000, -1000, -1000, 2619, -1000, 19619, -1000,
	28539, 19619, 19619, 19619, -1000, -1000, -1000, 19619, 19619, -1000,
	-1000, 19619, 19619, -1000, 19619, 19619, 19619, -1000, 19619, 19619,
	19619, 19619, -1000, -1000, -1000, -1000, 19619, 19619, 19619, 19619,
	19619, 19619, 19619, 19619, 19619, 19619, -1000, -1000, 34027, 133,
	-172, 1350, 133, 1350, -1000, 18933, 13426, -1000, -1000, -1000,
	-1000, -1000, 19619, 19619, 19619, 19619, 19619, 19619, -1000, -1000,
	-1000, 19619, 19619, -1000, 19619, -1000, 19619, -1000, -1000, -1000,
	-1000, -1000, 726, -1000, 706, 706, 706, 47747, -1000, -1000,
	-1000, -1000, 1920, -1000, 2460, -1000, 2266, 2265, 2606, 2588,
	-1000, 25109, 2494, -1000, -1000, 47747, -295, -1000, 2305, 2339,
	750, 750, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11350,
	2530, 19619, 2201, 48433, 159, -1000, 24423, 47747, 48433, 25109,
	25109, 25109, 25109, 25109, -1000, 2224, 2222, -1000, 2231, 2218,
	2294, 49119, -1000, 1660, 1738, -1000, 19619, 27167, 1866, 25109,
	-1000, -1000, 25109, 49119, 10658, -1000, -1000, 22, 28, -1000,
	-1000, -1000, -1000, 4916, -1000, -1000, 395, 2440, 2325, -1000,
	-1000, -1000, -1000, -1000, 1733, -1000, 1727, 1919, 1724, 1713,
	240, -1000, 2156, 2377, 856, 856, -1000, 1188, -1000, 1311,
	1615, 1602, -1000, -1000, -1000, 282, 138, 1598, 588, -1000,
	49119, 2195, 2192, 2186, -1000, -469, 1182, 2102, 2065, 19619,
	2095, 2566, 1911, 47747, -1000, -1000, 48433, -1000, 225, -1000,
	334, 47747, -1000, -1000, -1000, 430, 49119, -1000, 7223, -1000,
	-1000, -1000, 303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2078, 926, -1000, 138, 1594, 49119, 338, -1000, 2077,
	1101, -1000, -1000, 2144, -1000, -1000, -1000, -1000, 245, 435,
	1592, 255, 1590, 255, 255, 1588, 255, 1586, 255, 255,
	-1000, 49119, 683, 2215, 49119, -1000, -1000, -1000, 992, 992,
	-1000, -1000, 2368, -1000, 1311, 1352, 20305, 20305, -1000, 781,
	335, -150, 2074, 2074, -1000, 2074, 2075, -1000, 2074, 205,
	2074, 188, 2074, -1000, -1000, 1332, 1332, 1424, -1000, 2066,
	1765, -1000, 1138, 19619, 2330, -1000, -1000, -1000, -1000, -1000,
	-33, 2292, 2267, 1352, -1000, 2064, 2063, 19619, 1352, 1332,
	2060, 1352, 1352, 1352, 1352, -1000, 1138, 1424, 2250, 1424,
	1352, 1352, 2244, 374, 1352, 1704, 1704, 1704, 1704, 1704,
	1424, 1424, 1424, 1424, 47747, -1000, -172, -1000, -1000, -211,
	-212, -1000, 1332, -172, 1918, 1332, -1000, 2017, 1899, 2187,
	1669, 1352, 1948, 1352, 1352, 1352, 1648, -1000, 2461, 2461,
	2461, 1665, 1089, 49119, -1000, -1000, -1000, -1000, 2588, 2581,
	1915, -1000, -1000, 121, 489, -1000, 2301, 2339, -1000, 2563,
	2300, 2561, -1000, -1000, -1000, -1000, -1000, 1138, -1000, 2398,
	1966, -1000, 868, 1887, -1000, -1000, 18247, 1695, 2258, 701,
	1665, 1981, 2474, 2174, 2184, 2995, -1000, -1000, -1000, -1000,
	2216, -1000, 2197, -1000, -1000, 2036, -1000, 1548, 458, 25109,
	1956, 1956, -1000, 697, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1056, 7514, 2666, -1000, 1581, -1000, 1300, 209, 1179,
	-1000, -1000, 856, 856, -1000, 956, 953, -1000, 49119, 2059,
	-1000, 455, 1563, 455, 1171, -1000, -1000, 1170, -1000, -1000,
	-1000, -1000, 2035, 2256, -1000, -1000, -1000, -1000, 2057, 867,
	-1000, 49119, -1000, 49119, 49119, 49119, 2053, 2560, -1000, 19619,
	2051, 866, 2232, 47747, 47747, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 574, 856, -434, 406,
	399, 856, 856, 856, -470, -1000, -1000, 1662, 1652, -1000,
	-136, -1000, 19619, -1000, -1000, -1000, 1146, 1146, 1539, 1538,
	1532, -1000, 350, 1630, 864, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 859, -1000, 2036, -1000, -1000, -1000,
	1800, -1000, -1000, -103, 47747, 47747, 47747, 47747, -1000, -1000,
	1091, -1000, -1000, -1000, 1520, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 781,
	1332, 375, -112, 1332, -1000, -1000, 455, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19619, -1000, 19619,
	-1000, 1138, 19619, 2530, 1510, 19619, 19619, -1000, 1153, 1150,
	1352, -1000, -1000, -1000, 19619, -1000, -1000, -1000, -1000, -1000,
	19619, -1000, -1000, -1000, 19619, 281, 967, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1332, 443, -1000,
	-1000, -1000, -1000, 2590, -1000, 1332, 19619, -1000, -1000, 19619,
	-1000, 19619, 19619, -1000, 19619, -1000, 19619, -1000, -1000, -1000,
	-1000, 19619, 1668, 2420, 1668, 1668, 27167, -1000, -1000, 2581,
	2585, 2557, 2277, 2287, 2287, 2301, -1000, 2555, 2553, -1000,
	1506, 2552, 1504, 952, -1000, 48433, 19619, 159, -1000, 485,
	47747, 159, 47747, -1000, 2582, -1000, -1000, 19619, 2050, -1000,
	19619, -1000, -1000, -1000, -1000, 8165, 2588, 1956, -1000, -1000,
	792, -1000, 19619, -1000, -1000, -1000, 4017, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1502, 1488, -1000, -1000, 2038,
	19619, -1000, -1000, -1000, 1777, 1653, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 926, 1472, 2036, -1000, -1000, -1000,
	-1000, 430, -459, 2173, 47747, 1121, -1000, 1623, 1911, 420,
	159, 1469, 856, 856, 856, 1120, 1104, 32655, 1571, -1000,
	47747, 513, -1000, 430, -1000, -141, -146, 1352, -1000, -1000,
	1531, 835, -1000, -1000, -1000, 926, 1465, 1455, 2429, -1000,
	-1000, 13426, -1000, -1000, 2030, 2162, -1000, -1000, -1000, -1000,
	-1000, 2238, -95, -126, -1000, -1000, 1352, 1352, 1528, 1332,
	-1000, 1352, 1352, 1649, 1624, -1000, 1352, 1424, 1621, -1000,
	281, 1332, 2182, -1000, -1000, 8165, -1000, -1000, 2582, 2546,
	133, -1000, -1000, 386, 133, 1138, 1491, 1352, 1476, 1419,
	1352, 1352, 27853, -1000, 2537, 2536, 33341, 33341, 726, 2585,
	-179, 19619, 19619, 2272, 1141, -1000, -1000, -1000, -1000, 1443,
	1413, -1000, 1410, -1000, 2664, -1000, 1138, -1000, 159, -1000,
	687, 1887, -1000, 2530, 1138, 47747, 1138, 123, 2582, -1000,
	1352, -1000, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668, 1668,
	1668, 1668, -1000, -1000, 47747, 2071, -1000, -1000, 1525, -1000,
	2425, 1516, 82, -1000, 1572, 1911, -1000, -1000, 164, -1000,
	19619, -1000, 32655, 1408, 1387, -1000, -1000, -1000, -1000, -470,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 350, 1376, 832,
	-1000, -1000, 405, 1906, -1000, 826, 47747, 49119, -1000, 2219,
	-1000, -1000, -1000, 19619, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19619, -1000, 1332, 2181, -1000, -279, -1000, -439,
	19619, -172, -1000, -1000, -172, -1000, 19619, -1000, -1000, 19619,
	-1000, 19619, -1000, -1000, 1495, -1000, -1000, -1000, -1000, -1000,
	1495, 1495, -1000, -179, -1000, 1891, -1000, 47747, 1138, 1859,
	-1000, 1097, -1000, -1000, -1000, -1000, -1000, 48433, 1887, 47747,
	-1000, 1453, 1332, 1668, 2530, -1000, 1451, -1000, 486, 405,
	-1000, 2021, 2065, -1000, -1000, -1000, 17561, -1000, -1000, -1000,
	-1000, -1000, 221, 817, -1000, 1353, -101, 13426, 9966, 1449,
	-1000, -100, 1352, 1424, -1000, -397, -1000, -1000, -1000, -1000,
	268, -1000, -1000, 1859, -1000, -1000, 1363, 1346, 1277, 31969,
	-1000, -1000, -1000, -1000, -179, -1000, -1000, 2424, -1000, -1000,
	1348, -1000, -1000, 27167, 47061, -1000, -90, 289, 2020, -101,
	19619, 2014, 1332, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1323, -1000, -1000, 42, -1000, -1000, -1000, -1000, -1000, 2144,
	-113, -1000, -1000, -1000, 147, -425, -205, -213, -1000, -1000,
	20305, -1000, 19619, -1000, 19619, -1000, 19619, -1000, -1000, -1000,
	47747, 1668, -1000, 1422, -1000, 5758, -223, 2180, -1000, -54,
	-1000, -1000, -1000, 1033, 1321, -1000, -1000, -1000, -1000, -1000,
	350, -1000, 1702, 47747, -1000, -1000, 525, -1000, -1000, -103,
	-132, 931, -1000, -1000, -1000, -1000, -1000, 1167, 1065, 1352,
	-1000, 47747, -1000, 47061, -218, 771, 8165, -1000, 2179, 2176,
	2615, -1000, -1000, -1000, -1000, -1000, -1000, 1395, -472, 1393,
	336, -1000, -1000, 147, -1000, 19619, -1000, 19619, -1000, 1332,
	-1000, -1000, 2409, 123, -1000, 2654, -1000, 2660, 814, 814,
	-1000, -1000, 1096, -472, -1000, -1000, 1352, 1352, -1000, -224,
	-1000, -1000, -1000, -1000, -1000, 521, 1193, -1000, -1000, -1000,
	-1000, -1000, 8165, -1000, -1000, -1000, 276, 276, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3207, 3206, 29, 1, 38, 37, 3205, 45, 126,
	212, 28, 225, 116, 3204, 195, 3203, 3202, 3201, 3200,
	3199, 3198, 2697, 2691, 2690, 3197, 3196, 3195, 3194, 3193,
	3192, 3191, 3189, 3188, 3187, 3186, 3184, 194, 190, 213,
	3181, 3179, 3177, 134, 201, 107, 109, 209, 3176, 3175,
	96, 3174, 3173, 3172, 207, 206, 205, 926, 3171, 199,
	133, 58, 3170, 3169, 3168, 3167, 3166, 3165, 3164, 3163,
	3162, 3160, 3158, 3157, 3156, 3155, 3154, 3153, 3152, 3151,
	3150, 3149, 269, 3148, 3147, 21, 3146, 100, 3145, 3144,
	3143, 3142, 3141, 11, 3140, 3139, 13, 43, 3138, 3137,
	52, 3135, 3134, 3133, 3132, 3131, 18, 3130, 25, 3129,
	32, 3127, 3126, 147, 3125, 3123, 3122, 44, 3121, 3120,
	3119, 3118, 3117, 3115, 3114, 159, 3113, 3112, 3111, 216,
	214, 3108, 3103, 191, 136, 132, 3102, 3099, 118, 210,
	3094, 140, 3091, 3089, 3088, 170, 3087, 2299, 3079, 3076,
	79, 85, 3070, 242, 3067, 3059, 10, 103, 80, 12,
	56, 74, 3057, 3054, 78, 93, 3053, 130, 3052, 3051,
	119, 81, 3043, 117, 114, 3042, 3037, 15, 5, 3035,
	50, 6, 3, 82, 3028, 3026, 123, 3025, 3023, 3020,
	113, 3015, 3010, 5209, 3008, 110, 154, 122, 92, 3005,
	49, 69, 3002, 3000, 2999, 2995, 2993, 66, 2992, 2989,
	2983, 164, 71, 192, 2981, 46, 83, 65, 163, 2973,
	72, 106, 215, 188, 2970, 2969, 160, 152, 2966, 2962,
	77, 47, 51, 2961, 125, 153, 141, 30, 115, 157,
	2959, 2958, 76, 90, 2957, 2956, 2950, 2949, 189, 2947,
	2946, 89, 2941, 67, 2939, 204, 2937, 19, 59, 2936,
	55, 183, 2933, 91, 2928, 2926, 87, 148, 88, 39,
	2925, 182, 187, 150, 186, 2924, 2902, 68, 2900, 2899,
	2895, 211, 347, 2894, 2893, 104, 193, 173, 177, 112,
	2892, 368, 2890, 2885, 143, 2, 4637, 2883, 54, 184,
	2882, 2878, 6418, 162, 41, 23, 2872, 144, 2869, 2865,
	2861, 2858, 227, 196, 127, 185, 73, 2841, 2838, 2836,
	16, 2824, 2817, 2816, 2808, 2803, 2801, 94, 36, 35,
	34, 256, 84, 8, 121, 176, 178, 97, 2799, 2798,
	2796, 146, 108, 2795, 181, 179, 158, 175, 2793, 198,
	172, 138, 2783, 102, 33, 2781, 2780, 2779, 2777, 111,
	2776, 2774, 2770, 2765, 180, 167, 142, 99, 2764, 105,
	145, 174, 168, 63, 2763, 57, 2762, 2761, 27, 202,
	26, 2760, 17, 124, 120, 2759, 4310, 200, 2758, 20,
	353, 169, 2753, 2752, 4, 7, 9, 2750, 2748, 2747,
	2738, 155, 2737, 2736, 2735, 2732, 24, 53, 22, 42,
	139, 95, 2724, 2722, 166, 165, 2718, 2715, 2710, 2708,
	2707, 60, 2706, 14, 2705, 98, 62, 40, 2703, 2702,
	3272, 0, 149, 2695, 217,
}

//line sql.y:8718
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterFilterUnion() *AlterFilter {
	v, _ := st.union.(*AlterFilter)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) checkOptionsUnion() CheckOptions {
	v, _ := st.union.(CheckOptions)
	return v
}

func (st *yySymType) checkTypeUnion() CheckType {
	v, _ := st.union.(CheckType)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createFilterUnion() *CreateFilter {
	v, _ := st.union.(*CreateFilter)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) filterActionUnion() *FilterAction {
	v, _ := st.union.(*FilterAction)
	return v
}

func (st *yySymType) filterPatternUnion() *FilterPattern {
	v, _ := st.union.(*FilterPattern)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 428, 429, 429, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 263, 386, 387, 387, 261, 261,
	33, 77, 37, 37, 36, 36, 39, 39, 38, 8,
	8, 8, 9, 9, 9, 9, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 11, 11, 11, 11, 13,
	13, 13, 13, 13, 20, 21, 12, 12, 22, 22,
	111, 111, 23, 24, 24, 24, 24, 432, 432, 188,
	188, 186, 186, 187, 187, 266, 266, 25, 270, 270,
	272, 272, 272, 272, 262, 262, 262, 26, 26, 271,
	271, 273, 273, 273, 276, 276, 276, 276, 315, 315,
	315, 34, 35, 420, 420, 422, 422, 424, 424, 418,
	418, 419, 419, 425, 425, 425, 425, 421, 421, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 423, 423,
	427, 427, 27, 27, 27, 27, 27, 27, 27, 131,
	131, 389, 389, 388, 382, 382, 381, 381, 380, 385,
	385, 384, 384, 383, 41, 42, 51, 51, 51, 51,
	52, 53, 390, 390, 355, 58, 58, 57, 57, 57,
	57, 57, 57, 59, 59, 55, 55, 54, 54, 56,
	56, 357, 357, 343, 343, 356, 356, 356, 356, 356,
	356, 356, 342, 342, 142, 142, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 405, 405, 405, 404, 404, 241, 241,
	241, 241, 241, 241, 241, 241, 152, 152, 164, 164,
	164, 164, 164, 150, 150, 151, 149, 149, 149, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 163, 163,
	159, 159, 159, 160, 160, 160, 161, 161, 406, 406,
	406, 406, 320, 320, 320, 320, 323, 323, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 322, 322, 322,
	322, 322, 322, 322, 324, 324, 324, 324, 324, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 326, 326, 326, 326, 326,
	326, 326, 326, 341, 341, 327, 327, 335, 335, 336,
	336, 337, 337, 337, 338, 338, 338, 339, 339, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 334, 334,
	333, 333, 333, 344, 369, 369, 368, 368, 366, 366,
	366, 366, 366, 366, 366, 366, 353, 353, 363, 363,
	363, 363, 363, 352, 352, 348, 348, 348, 349, 349,
	350, 350, 347, 347, 351, 351, 365, 365, 364, 364,
	345, 345, 346, 346, 371, 407, 407, 407, 407, 407,
	408, 408, 372, 397, 399, 399, 399, 398, 398, 395,
	396, 394, 394, 394, 394, 394, 87, 87, 87, 289,
	289, 290, 290, 361, 361, 360, 360, 360, 362, 362,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 284, 284, 284, 393, 393, 393, 393, 393, 393,
	392, 392, 392, 358, 358, 358, 391, 391, 60, 60,
	221, 221, 410, 410, 411, 411, 411, 48, 48, 48,
	48, 48, 48, 47, 47, 47, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 49, 49, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 113, 113, 114, 114, 114, 114, 116, 116,
	116, 374, 374, 61, 61, 3, 3, 176, 178, 179,
	179, 177, 177, 177, 177, 177, 177, 63, 63, 62,
	62, 181, 180, 182, 182, 182, 1, 1, 2, 2,
	4, 4, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 340, 340, 340, 373, 373, 375,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	119, 118, 118, 117, 120, 120, 120, 120, 120, 120,
	120, 120, 377, 377, 377, 64, 64, 378, 328, 329,
	330, 5, 6, 354, 376, 127, 127, 29, 40, 40,
	30, 30, 30, 30, 31, 31, 65, 66, 417, 417,
	70, 70, 70, 71, 71, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 283, 283, 292, 292,
	282, 282, 307, 307, 307, 285, 285, 285, 286, 286,
	403, 403, 403, 279, 279, 68, 68, 68, 308, 308,
	308, 308, 72, 72, 412, 412, 413, 413, 414, 414,
	414, 73, 74, 74, 310, 310, 311, 311, 75, 76,
	88, 88, 88, 88, 88, 88, 88, 89, 89, 89,
	89, 112, 112, 112, 15, 15, 15, 15, 84, 84,
	84, 14, 14, 17, 69, 69, 78, 400, 400, 401,
	402, 402, 402, 402, 79, 81, 81, 32, 32, 32,
	32, 32, 32, 137, 137, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 132, 132,
	132, 126, 126, 433, 82, 83, 83, 130, 130, 130,
	123, 123, 123, 129, 129, 129, 16, 16, 18, 265,
	265, 19, 19, 134, 134, 136, 136, 136, 136, 136,
	138, 138, 138, 138, 138, 138, 138, 133, 133, 135,
	135, 135, 135, 300, 300, 300, 299, 299, 170, 170,
	172, 171, 171, 173, 173, 174, 174, 174, 174, 219,
	219, 196, 196, 258, 258, 259, 259, 257, 257, 264,
	264, 260, 260, 260, 260, 267, 267, 175, 175, 175,
	175, 183, 183, 184, 184, 185, 185, 309, 309, 305,
	305, 305, 304, 304, 189, 189, 189, 191, 190, 190,
	190, 190, 192, 192, 194, 194, 193, 193, 195, 200,
	200, 199, 199, 197, 197, 197, 197, 198, 198, 198,
	198, 201, 201, 147, 147, 147, 147, 147, 147, 147,
	162, 162, 162, 162, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 248, 248, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 156, 224, 224, 223, 223,
	90, 90, 90, 91, 91, 92, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 148, 148, 95, 95, 94,
	94, 214, 214, 297, 297, 96, 97, 97, 100, 100,
	99, 98, 98, 104, 104, 101, 101, 103, 103, 102,
	105, 105, 106, 107, 107, 280, 280, 202, 202, 210,
	210, 210, 210, 203, 203, 203, 203, 203, 203, 203,
	211, 211, 211, 218, 212, 212, 208, 208, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 167, 167, 167, 167, 229, 229,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 155, 155, 168, 168, 168,
	168, 169, 169, 169, 169, 169, 169, 169, 317, 317,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 434, 434, 331, 331, 331, 331, 209, 209, 209,
	209, 209, 128, 128, 128, 128, 128, 314, 314, 314,
	318, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 319, 319,
	227, 227, 124, 124, 225, 225, 226, 228, 228, 220,
	220, 220, 220, 222, 222, 205, 205, 205, 230, 230,
	231, 231, 108, 109, 109, 110, 110, 232, 232, 234,
	233, 233, 235, 236, 236, 236, 237, 237, 238, 238,
	238, 50, 50, 50, 50, 50, 45, 45, 45, 45,
	46, 46, 46, 46, 139, 139, 139, 139, 141, 141,
	140, 140, 85, 85, 86, 86, 86, 416, 416, 416,
	415, 415, 415, 415, 415, 415, 145, 145, 146, 146,
	146, 143, 143, 144, 144, 255, 255, 239, 239, 239,
	246, 246, 246, 242, 242, 244, 244, 244, 245, 245,
	245, 243, 252, 252, 254, 254, 253, 253, 249, 249,
	250, 250, 251, 251, 251, 247, 247, 204, 204, 204,
	204, 204, 256, 256, 256, 256, 268, 268, 215, 215,
	217, 217, 216, 216, 166, 269, 269, 277, 274, 274,
	275, 275, 301, 301, 301, 278, 278, 291, 291, 287,
	287, 288, 288, 281, 281, 293, 293, 293, 80, 213,
	213, 370, 370, 367, 296, 296, 298, 298, 302, 302,
	306, 306, 303, 303, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 430, 431, 312, 313, 313, 313,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 0, 1, 1, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 10, 9, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 1, 3,
	3, 3, 3, 3, 1, 1, 2, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 14, 6, 0, 3, 0, 4, 0, 4, 3,
	5, 3, 5, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 2, 2, 2, 3, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 1,
	3, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	3, 3, 2, 2, 2, 1, 2, 2, 0, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 1, 1, 3, 3, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 4,
	3, 1, 3, 1, 7, 6, 7, 7, 8, 8,
	0, 1, 5, 2, 1, 1, 1, 0, 1, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 1,
	2, 0, 1, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 7, 7, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 7, 8, 5, 5, 5, 7, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 4, 1, 3,
	2, 3, 3, 2, 2, 3, 2, 2, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	4, 3, 4, 4, 4, 2, 3, 3, 3, 3,
	5, 2, 3, 3, 3, 2, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 6,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 1, 6, 3, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 8,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 9, 6, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 2,
	2, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -428, -82, -433, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -65, -66,
	-70, -71, -67, -68, -72, -73, -74, -75, -76, -14,
	-17, -69, -32, -33, -77, -78, -79, -80, -81, -16,
	-18, -19, -34, -35, -9, -8, -13, 10, 11, -111,
	-36, 33, -41, -51, 225, -52, -42, 226, -53, 228,
	227, 266, 229, 250, 650, 235, 259, 75, 333, 334,
	336, 337, 338, 339, -112, 646, 264, 265, 231, 37,
	46, 34, 35, 38, 236, 272, 273, 234, -10, -37,
	9, -430, 12, 478, 261, 260, 29, -12, 540, 87,
	-83, -429, 696, -255, -239, 23, 34, 30, -238, -234,
	-130, -239, 21, 19, 8, -82, -82, -82, 13, 14,
	-82, -355, -357, -12, 26, 87, 159, 9, 87, 303,
	-82, -58, -57, -55, -54, -56, -59, 32, -48, -49,
	-379, -47, -44, 230, 227, 276, 123, 124, 266, 267,
	268, 229, 250, 265, 269, 264, 285, -43, 82, 34,
	540, 543, -362, 226, 232, 233, 228, 479, 126, 125,
	76, -359, 392, 573, 666, -59, 668, 101, 104, 667,
	45, 240, 669, 670, 671, 580, 672, 249, 673, 674,
	675, 676, 682, 621, 683, 684, 685, 127, 8, 303,
	-82, -306, -302, 91, -295, 537, 252, 571, 572, 301,
	82, 42, 546, 389, 392, 573, 508, 666, 333, 349,
	343, 513, 514, 515, 372, 364, 538, 574, 547, 317,
	253, 289, 660, 362, 135, 668, 321, 575, 267, 397,
	398, 576, 399, 101, 336, 441, 681, 320, 577, 679,
	104, 667, 341, 80, 507, 52, 663, 45, 262, 360,
	234, 356, 669, 290, 578, 549, 283, 126, 123, 688,
	37, 352, 51, 31, 678, 125, 50, 670, 150, 579,
	671, 580, 401, 379, 654, 49, 402, 268, 581, 85,
	273, 542, 324, 662, 403, 527, 353, 404, 300, 677,
	231, 582, 641, 633, 634, 405, 406, 655, 384, 380,
	385, 529, 583, 433, 512, 407, 637, 638, 695, 53,
	584, 585, 656, 124, 586, 79, 672, 81, 347, 348,
	587, 298, 251, 532, 533, 435, 376, 490, 497, 498,
	111, 112, 493, 113, 499, 114, 500, 501, 502, 491,
	115, 108, 492, 503, 504, 377, 378, 116, 505, 110,
	109, 494, 496, 117, 506, 249, 36, 408, 539, 302,
	59, 319, 277, 436, 47, 382, 692, 46, 648, 534,
	588, 653, 375, 371, 487, 54, 589, 590, 591, 592,
	509, 673, 374, 346, 370, 687, 4, 295, 510, 674,
	63, 233, 387, 386, 388, 284, 432, 367, 593, 594,
	595, 256, 83, 596, 357, 22, 597, 598, 409, 291,
	599, 57, 600, 601, 439, 265, 602, 55, 675, 40,
	603, 270, 689, 676, 604, 326, 327, 605, 606, 647,
	607, 272, 608, 411, 609, 635, 636, 410, 381, 383,
	535, 279, 412, 237, 541, 610, 325, 351, 269, 680,
	611, 257, 523, 524, 525, 526, 661, 531, 530, 271,
	276, 264, 440, 258, 612, 613, 614, 615, 616, 318,
	632, 617, 618, 337, 682, 488, 44, 619, 620, 621,
	622, 623, 299, 294, 434, 443, 62, 84, 394, 624,
	625, 659, 345, 342, 292, 626, 334, 56, 683, 684,
	685, 286, 686, 516, 517, 518, 519, 10, 693, 694,
	511, 414, 127, 296, 297, 48, 368, 278, 627, 322,
	628, 358, 359, 373, 344, 369, 644, 335, 642, 280,
	415, 489, 266, 629, 442, 293, 390, 395, 323, 545,
	528, 285, 416, 651, 658, 544, 520, 521, 366, 363,
	287, 522, 630, 646, 417, 241, 281, 282, 631, 643,
	418, 419, 316, 420, 328, 330, 431, 331, 332, 421,
	422, 423, 430, 424, 427, 428, 429, 426, 329, 425,
	645, 639, 640, 288, 543, 340, 361, 396, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 486, 239, -82, 239,
	-193, -302, 239, 239, 96, 541, 667, 651, 411, -274,
	428, 429, 398, -292, 400, 413, 408, 418, 406, -283,
	409, 411, 279, -403, 433, 239, 415, 225, 401, 410,
	419, 420, 328, 431, 330, 316, 426, 421, 329, 425,
	288, 422, 423, 430, 424, 427, -386, 177, 671, 686,
	135, 365, 405, 403, 434, 648, 91, -308, 91, 92,
	93, -295, 335, -310, 340, -296, -386, -295, 338, -82,
	-82, -312, -312, -132, 648, 652, -212, -147, 143, -162,
	-165, -153, -157, -206, -207, -208, -209, -163, -222, -261,
	166, 167, 174, 144, -218, -166, 27, 536, 480, 479,
	177, 32, -156, 220, 69, 70, 482, 146, 58, 12,
	455, 456, -164, 450, 457, 452, 507, 509, 510, 511,
	508, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 512, 484, 485, 118, 486, 108, 110, 109, 487,
	488, 489, 362, 534, 535, 529, 532, 533, 531, 530,
	377, 378, 490, 491, 492, 111, 112, 113, 114, 115,
	116, 117, 493, 496, 494, 495, 497, 498, 499, 504,
	505, 500, 501, 502, 503, 506, -92, -104, 562, 561,
	-105, -154, -155, -168, -169, -296, -302, 244, 449, 238,
	172, 478, -158, -151, -220, 107, 92, 93, -8, -216,
	448, 453, 454, 458, 451, 548, 550, 565, 566, 568,
	553, 558, 557, 560, 523, 524, 525, 526, 527, 528,
	633, 634, 635, 636, 637, 638, 639, 640, -386, -295,
	91, -160, -159, -202, 94, 99, 102, 103, 105, -409,
	262, 358, 359, 119, -430, 664, 90, 95, 96, 97,
	98, 120, 121, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 45, 414, 414, -193, -82,
	-82, -82, -82, -232, -130, -234, -10, -8, -430, -82,
	-8, -9, -13, -37, -39, 567, -38, -302, 100, -239,
	-255, 13, 162, 43, 51, -237, -238, -12, -8, -147,
	20, 24, 25, -135, 168, -147, -302, -135, -281, 243,
	-82, -82, -270, -315, 335, -272, 434, 648, 433, -262,
	-275, 91, -261, -274, 432, -12, -356, 159, -342, -346,
	-296, 254, -372, 250, -193, -82, -365, -364, -296, -430,
	-288, 244, -131, -291, 240, 248, 247, 136, -390, 139,
	296, 449, 238, -54, -55, -56, -274, 176, 670, -113,
	271, 275, 88, 88, -346, -345, -344, -391, 275, 254,
	-371, -363, 246, 255, -352, 247, 248, -347, 240, 137,
	-391, -347, 245, 255, 250, 254, 275, 275, 127, 275,
	127, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	270, -353, 151, -353, 544, 544, -359, -391, 250, 240,
	-391, -391, 246, -293, -347, 242, 26, 242, 36, 36,
	-353, -353, -353, -274, 176, -353, -353, -353, -353, 283,
	283, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, 91, 239,
	-390, -139, 425, 316, 330, 328, 82, -57, 285, -40,
	-193, -291, 240, 241, -390, 272, -193, 221, -193, -417,
	-193, 96, 96, -285, 159, 16, -285, -282, 414, 412,
	399, 404, -285, -285, -285, -285, 286, 397, -348, 240,
	36, 251, 414, 286, 397, 286, 287, 286, 287, 407,
	417, 286, -307, 15, 162, 449, 402, 406, 279, 239,
	280, 241, 416, 287, -307, -307, 90, -307, 90, 90,
	-286, 159, 286, 414, 282, -285, -285, -285, -313, -430,
	-298, -296, -294, 230, 24, 142, 26, 28, 145, 177,
	130, 20, 146, 38, 232, 365, 250, 176, 246, 479,
	225, 73, 548, 450, 452, 448, 455, 481, 482, 449,
	400, 32, 14, 550, 29, 260, 25, 39, 170, 227,
	149, 551, 263, 27, 261, 118, 121, 553, 23, 76,
	255, 15, 248, 41, 17, 554, 555, 18, 244, 243,
	162, 240, 71, 12, 220, 30, 158, 67, 556, 137,
	557, 558, 559, 560, 131, 69, 159, 21, 690, 453,
	454, 34, 649, 536, 274, 172, 74, 60, 652, 143,
	451, 561, 562, 119, 563, 122, 77, 657, 139, 19,
	72, 43, 564, 275, 565, 245, 691, 566, 437, 567,
	160, 228, 478, 70, 161, 664, 568, 665, 238, 413,
	9, 483, 33, 259, 247, 129, 68, 569, 239, 148,
	484, 485, 242, 132, 120, 8, 136, 35, 13, 75,
	78, 456, 457, 458, 58, 128, 540, 147, 16, 570,
	438, 141, 650, 444, 445, 446, 447, 235, -386, 653,
	-313, -313, 33, 92, -412, -413, -414, 540, 437, 242,
	-296, -193, -88, 641, 229, -89, 647, 24, 237, -137,
	414, -125, 177, 671, 654, 655, 656, 653, 411, 651,
	661, 659, 657, 286, 658, 88, 139, 141, 142, 4,
	-147, 158, -203, 151, 152, 153, 154, 155, 156, 157,
	162, 143, 145, 159, -248, 140, 163, 164, 165, 166,
	167, 168, 169, 171, 170, 172, 173, 160, 161, 176,
	223, 224, -157, -157, -157, -157, -218, -224, -223, -430,
	-220, -386, -295, -302, -430, -430, -157, -280, -430, -430,
	-153, -430, -430, -430, -227, -147, -430, -430, -434, -430,
	-434, -434, -331, -430, -331, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, 221, -430, -430, -430, -430, -430, -331, -331, -331,
	-331, -331, -430, -430, -430, -430, -430, -430, -430, -430,
	-430, -430, -430, -430, -430, -430, 103, 99, 102, 94,
	-222, 105, 90, 90, 90, 90, -8, -9, -212, -430,
	-312, -400, -401, -196, -193, -430, 316, 328, -296, -296,
	272, -237, -12, -8, -232, -238, -234, -8, -123, -136,
	64, 65, -138, 25, 39, 68, 66, 24, -431, 89,
	-431, -255, -431, 88, -39, -258, 87, 62, 44, 90,
	90, 88, 22, -233, -235, -147, 15, -300, 4, -299,
	26, -296, 90, 221, 15, -194, 30, -193, -281, -281,
	88, 91, 335, -271, -273, 435, 437, 151, -301, -296,
	90, 32, 89, 88, -193, -320, -323, -325, -324, -326,
	-321, -322, 362, 363, 177, 366, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 379, 33, 262, 358, 359,
	360, 361, 380, 381, 382, 383, 385, 386, 387, 388,
	343, 364, 538, 344, 345, 346, 347, 348, 349, 351,
	352, 355, 353, 354, 356, 357, -387, -386, 87, 64,
	65, 89, 88, -327, 87, -147, 87, 143, -139, 239,
	-386, 240, 240, 240, -82, 478, -353, -353, -353, 270,
	20, -47, -44, -379, 19, -43, -44, 230, 123, 124,
	227, 87, -342, 87, -351, -387, -386, 87, 137, 245,
	136, -350, -347, -350, -351, -386, -220, -386, 137, 137,
	-386, -386, -267, -296, -267, -267, 24, -267, 24, -267,
	24, 96, -296, -267, 24, -267, 24, -267, 24, -267,
	24, -267, 24, 32, 79, 80, 81, 32, 83, 84,
	85, -220, -386, -386, -220, -342, -220, -193, -386, -274,
	96, 96, 96, -353, -353, 96, 90, 90, 90, -353,
	-353, 96, 90, -304, -302, 90, 90, -392, 256, 300,
	302, 96, 96, 96, 96, 32, 90, -393, 32, 678,
	677, 679, 680, 681, 90, 96, 32, 96, 32, 96,
	-296, 87, -420, 87, -193, -145, 290, 225, 227, 230,
	77, 90, 319, 320, 317, 326, 327, 322, 323, 90,
	319, 317, 326, 327, 322, 323, 90, 319, 320, 317,
	326, 327, 322, 323, 151, 45, 88, 242, 239, -386,
	-287, 244, -287, -296, -303, -302, -294, -416, 88, -415,
	23, 444, 445, 447, 403, 446, 90, -147, -349, 15,
	162, -307, -307, -285, -193, -349, -307, -285, -193, -285,
	-285, -285, -285, -307, -307, -307, -285, -302, -302, -193,
	-193, -193, -193, -193, -193, -193, -313, -286, -285, -285,
	653, -285, 331, 653, 90, -279, 15, 77, -313, -313,
	88, 341, 438, 439, -311, 338, -84, -296, 90, -15,
	-11, -23, -22, -24, 151, -15, 88, 540, -186, -193,
	653, 653, 653, 653, 653, 653, -147, -147, -147, -147,
	563, -210, 119, 143, 120, 121, -165, -211, -216, -218,
	106, 162, 145, 159, -248, -153, -157, -153, -153, -153,
	-153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
	-314, -296, 90, 177, -161, -160, 105, -409, -161, 537,
	88, -223, 221, -147, -147, -386, -147, -296, -133, -135,
	-133, -147, -225, -226, 147, -220, -147, -431, -431, 96,
	105, 168, -129, 25, 39, -129, -129, -129, -129, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -129,
	-296, -296, -122, -121, 460, 461, 462, 463, 465, 466,
	467, 470, 471, 475, 476, 459, 477, 464, 469, 472,
	473, 474, 468, 361, -147, -147, -147, -147, -147, -147,
	-90, -147, 130, 131, 132, -212, -147, -153, -147, -147,
	-147, -431, -147, -147, -147, -213, -212, -385, -384, -383,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -431, -147, -167, -151, 96, -263, 105,
	92, -147, -147, -134, -133, -298, -303, -294, -295, -133,
	-134, -134, -133, -133, -147, -147, -147, -147, -147, -147,
	-147, -147, -431, -147, -147, -147, -147, -147, -255, -431,
	-212, 88, -402, 437, 438, 649, -305, 275, -304, 26,
	-213, 90, 90, 15, -265, 78, -296, -237, -237, 60,
	-133, -138, -431, -38, 26, -257, -296, 63, 90, -332,
	-274, 389, 390, 177, -147, -147, 88, -236, 28, 29,
	-193, -299, 168, -303, -193, -266, 275, -193, -171, -173,
	-174, -175, -196, -219, -430, -176, -8, 559, 556, 15,
	-186, -187, -195, -302, -272, -315, -271, 88, 436, 438,
	439, 77, 122, -147, -333, 176, -361, -360, -359, -342,
	-344, -345, -346, 89, -333, -338, 395, 394, -327, -327,
	-327, -327, -327, -332, -332, -332, -332, 87, 87, -327,
	-327, -327, -327, -335, 87, -335, -335, -336, -335, 87,
	-336, -337, 87, -337, -372, -147, -369, -368, -366, -367,
	249, 101, 631, 587, 540, 580, 621, 78, -364, -236,
	96, -431, -418, -425, 284, 549, 305, 286, 27, -145,
	-288, -370, -367, -386, -386, -386, -288, 91, 90, 91,
	90, 91, 90, -114, -61, -1, 690, 691, 692, 88,
	20, -343, -342, -60, 300, -375, -376, 275, -371, -365,
	-351, 137, -350, -351, -351, -386, 88, 30, 127, 127,
	127, 127, 540, 227, 33, -289, 579, 143, 631, 587,
	-342, -60, 242, 242, -314, -314, -314, 90, 90, -284,
	686, -186, -422, 304, -419, -425, -141, 292, 151, 281,
	281, 239, 239, 294, -193, 318, 321, 319, 320, 317,
	326, 327, 322, 323, 24, 24, 24, 24, 24, 24,
	24, 319, 317, 326, 327, 322, 323, 332, 24, 24,
	24, 24, 24, 24, 318, 321, 319, 320, 317, 326,
	327, 322, 323, 24, 24, 24, 24, 24, 24, 24,
	293, 295, 297, 283, -193, -193, -287, 77, -188, -193,
	27, -302, -415, -193, 285, -193, -285, -285, -193, -285,
	-285, -193, -414, 342, -296, 376, 642, 643, 645, 644,
	-125, 437, 88, 540, 23, -126, 23, -430, 119, 120,
	121, -211, -153, -157, -153, 142, 263, -430, -220, -431,
	-298, 26, 88, 78, -431, 88, 88, -431, -431, 88,
	15, -228, -226, 149, -147, -431, 88, -431, -431, -431,
	-212, -147, -147, -147, -147, -431, -431, -431, -431, -431,
	-431, -431, -431, -431, -431, -212, 88, 88, 15, -318,
	26, -431, -431, -431, -431, -431, -227, -431, 15, -431,
	78, 88, 162, 88, -431, -431, -431, 88, 88, -431,
	-431, 88, 88, -431, 88, 88, 88, -431, 88, 88,
	88, 88, -431, -431, -431, -431, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, -431, -97, 564, -431,
	-431, 88, -431, 88, -431, -430, 221, -431, -431, -431,
	-431, -431, 88, 88, 88, 88, 88, 88, -431, -431,
	-431, 88, 88, -431, 88, -431, 88, -431, -401, 648,
	438, -200, -199, -197, 75, 243, 76, -430, -304, -431,
	-161, -263, -264, -263, -205, -296, 96, 105, -239, -170,
	-172, 15, -138, -218, 89, 88, -332, -243, -249, -282,
	-296, 90, 177, -334, 177, -334, 389, 390, -235, 221,
	-201, 16, -204, 33, 58, -11, -430, -430, 33, 88,
	-189, -191, -190, -192, 67, 71, 73, 68, 69, 70,
	74, -309, 26, -8, -171, -8, -430, -193, -186, -432,
	15, 78, -432, 88, 221, -273, -276, 440, 437, 443,
	-386, 90, -113, 88, -359, -346, -240, -142, 41, -339,
	396, -332, 547, -332, -341, 90, -341, 96, 96, 96,
	89, -50, -45, -46, 34, 82, -366, -353, 90, 40,
	-353, -353, -296, 89, -236, 89, 88, 151, -141, -193,
	77, -370, -370, -370, -302, -2, 689, 695, 137, 87,
	399, 19, -257, 88, 89, -221, 301, 89, -115, -296,
	89, 87, -351, -351, -296, -430, 239, 32, 32, 631,
	587, 579, -60, -221, -220, -386, -333, 688, 687, 89,
	-424, 273, 87, 89, 88, 151, 241, 299, -146, 455,
	-143, 90, 91, -193, -193, -193, -193, -193, 230, 227,
	422, -410, 324, -410, -410, 90, -410, 422, -410, -410,
	284, 242, -186, -193, 88, -87, 258, 253, -307, -307,
	34, -193, 437, 662, 660, -147, 142, 263, -165, -157,
	-153, -316, 177, 362, 262, 360, 356, 376, 367, 394,
	358, 395, 353, 352, 351, -316, -314, -212, -135, -147,
	-147, 150, -147, 148, -147, -431, -431, -431, -431, -431,
	-232, -147, -147, -147, -431, 177, 362, 15, -147, -314,
	-147, -147, -147, -147, -147, -383, -147, -212, -147, -212,
	-147, -147, -147, -147, -147, -384, -384, -384, -384, -384,
	-212, -212, -212, -212, -430, -296, -100, -99, -98, 614,
	243, -97, -167, -100, -167, -134, -298, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -147, -197, -347, -347,
	-347, -267, 88, -278, 23, 15, 58, 58, -170, -201,
	-171, -138, -296, -246, 641, -252, 47, -250, -251, 48,
	-247, 49, 57, -334, -334, 168, -237, -147, -268, 77,
	-269, -277, -220, -215, -217, -216, -430, -256, -431, -296,
	-267, -269, -173, -174, -174, -173, -174, 67, 67, 67,
	72, 67, 72, 67, -190, -302, -431, -147, -305, 78,
	-171, -171, -195, -302, 168, 437, 441, 442, -359, -408,
	119, 143, 32, 77, 392, 101, -406, 176, 576, 626,
	631, 587, 580, 621, -407, 245, 136, 137, 257, 26,
	42, 89, 88, 89, 88, 89, 89, 88, -290, -289,
	-46, -45, -353, -353, 96, -386, 90, 90, 304, -425,
	90, 241, -193, 77, 77, 77, -116, 693, 96, 87,
	-3, 82, -147, 87, 20, -342, -220, -377, -328, -378,
	-329, -330, -5, -6, -354, -119, 58, 101, -64, 45,
	240, 673, 674, 127, -430, 686, -369, -257, -373, -375,
	-193, -150, -430, -149, -151, -158, 166, 167, 262, 358,
	359, -221, 87, -421, -426, 306, 307, 308, 309, 310,
	311, 312, 313, 314, -425, 90, -193, -140, 290, 298,
	87, -144, 92, -389, 78, 281, 392, 281, 90, -411,
	325, 90, -411, -411, 90, -411, 90, -411, -411, -193,
	-87, -50, -193, -285, -285, 34, -386, -431, -165, -157,
	-128, 162, 540, -319, 546, -327, -327, -327, -337, -327,
	348, -327, 348, -327, -431, -431, -431, 88, -431, 23,
	-431, -147, 88, -124, 483, 88, 88, -431, 87, 87,
	-147, -431, -431, -431, 88, -431, -431, -431, -431, -431,
	88, -431, -431, -431, 88, -317, 632, -431, -431, -431,
	-431, -431, -431, -431, -431, -431, -431, -96, -297, -296,
	-97, 596, 596, -431, -97, -229, 88, -431, -431, 88,
	-431, 88, 88, -431, 88, -431, 88, -431, -431, -431,
	-431, 88, -198, 23, -198, -198, -431, -263, -193, -201,
	-230, 17, -243, 52, 368, -254, -253, 56, 48, -251,
	20, 50, 20, 31, -268, 88, 151, 88, -431, -431,
	88, 58, 221, -431, -201, -184, -183, 77, 78, -185,
	77, -183, 67, 67, -258, 88, -266, -171, -201, -201,
	221, 119, -430, -152, -164, -150, 13, 90, 90, -386,
	-405, 677, 678, 32, 96, -353, -353, 137, 137, -193,
	87, -332, 90, -332, 96, 96, 32, 83, 84, 85,
	32, 79, 80, 81, 87, 151, -193, -193, -193, -193,
	-374, 87, 20, -147, 87, 151, 89, -257, -257, 277,
	162, -353, 671, 283, 283, -353, -353, -353, -118, -117,
	693, 89, -431, 88, -340, 540, 543, -147, -159, -159,
	-423, -427, 252, 315, 89, 88, 151, 151, -258, 89,
	-382, 540, -388, -296, -296, -296, -296, 96, 98, 90,
	-431, 538, 74, 541, -431, -332, -147, -147, -147, -237,
	90, -147, -147, 96, 96, -431, -147, -212, -147, -431,
	-181, -180, -182, 654, 119, 32, -316, -431, -214, 275,
	-103, -102, -101, 15, -431, -147, -147, -147, -147, -147,
	-147, -147, -430, 67, 19, 17, -430, -430, -305, -230,
	-231, 18, 20, -244, 54, -242, 53, -242, -253, 20,
	20, 90, 20, 90, 137, -277, -147, -217, 58, -11,
	-296, -215, -296, -232, -147, 87, -147, -161, -201, -201,
	-147, -207, 507, 509, 510, 511, 508, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 512, 486, 108,
	110, 109, 487, 488, 489, 362, 534, 535, 529, 532,
	533, 531, 530, 377, 378, 490, 491, 492, 111, 112,
	113, 114, 115, 116, 117, 493, 496, 494, 497, 498,
	499, 504, 505, 500, 501, 502, 503, 506, 523, 524,
	525, 526, 527, 528, 633, 634, 635, 636, 637, 638,
	639, 640, 90, 90, 87, -147, 89, 89, -421, 90,
	-258, -373, -61, 89, -259, -257, 96, 89, 278, -216,
	-430, 90, -353, -353, -353, 96, 96, -304, -431, 88,
	-296, -407, -375, 544, 544, -431, 89, 88, 151, -426,
	90, 90, 26, -381, -380, -298, 87, 78, 63, 539,
	542, -431, -431, 88, -431, -431, -431, 89, 89, -431,
	-431, -431, 88, -431, -180, -182, -431, 77, -161, -232,
	20, -100, 300, 302, -100, -431, 88, -431, -431, 88,
	-431, 88, -431, -431, -260, -431, -296, 245, 20, 20,
	-260, -260, -200, -231, -110, -109, -108, 570, -147, -212,
	-245, 55, 77, 122, 90, 90, 90, 13, -215, 221,
	-237, -257, -178, 399, -232, -431, -257, 89, 89, 26,
	89, 695, 137, 89, -216, -127, -430, 274, -304, 90,
	90, -117, -120, -427, 90, 151, -11, 88, 151, -257,
	-193, 63, -147, -212, -431, 77, 551, 654, -95, -94,
	-91, 665, 691, -212, -97, -97, -147, -147, -147, 88,
	-431, -431, -431, -110, 88, -107, -106, -296, 77, 122,
	-269, -296, 89, -431, -430, -237, 89, -241, 273, -11,
	87, -3, 274, -328, -378, -329, -330, -5, -6, -354,
	151, 90, -85, 540, -380, -358, -298, 90, 96, 89,
	540, -431, -431, -93, 145, 663, 629, -148, -159, -156,
	220, -431, 88, -431, 88, -431, 88, -296, 245, -108,
	88, 26, -305, -179, -177, -296, 593, -398, -397, 536,
	-408, -404, 119, 143, 101, -406, 631, 587, 128, 129,
	87, -85, -147, 87, -431, 90, -86, 289, 648, -389,
	541, -93, 664, 607, 582, 607, 582, -147, -147, -147,
	-106, -430, -431, 88, 23, -320, -63, 604, -395, -396,
	77, -399, 405, 603, 624, 119, 90, -423, 89, -257,
	250, -382, 542, 142, -431, 88, -431, 88, -431, -96,
	-177, 600, -333, -161, -396, 77, -395, 77, 14, 13,
	89, -4, 694, 89, 291, -93, -147, -147, -431, -62,
	27, -178, -394, 258, 253, 256, 33, -394, 96, -4,
	-431, -431, 604, 252, 32, 119, -161, -181, -180, -180,
}

var yyDef = [...]int{
	963, -2, -2, 965, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 75, 77, 78, 963, 963, 963,
	0, 963, 0, 0, 963, -2, -2, 963, 1580, 0,
	963, 0, 0, 0, 0, 0, -2, 876, 882, 0,
	891, -2, 0, 0, 963, 963, 2153, 2153, 958, 0,
	0, 0, 0, 0, 963, 963, 963, 963, 1437, 55,
	963, 0, 90, 91, 911, 912, 913, 70, 0, 2151,
	964, 1, 3, 76, 80, 0, 0, 0, 63, 1446,
	0, 83, 0, 0, 967, 0, 0, 1563, 963, 963,
	0, 162, 163, 164, 0, 0, 0, 963, 0, 1561,
	-2, 168, -2, 197, 198, 199, 0, 204, 672, 560,
	612, 558, 597, -2, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 436, 436,
	0, 0, -2, 546, 546, 546, 1565, 0, 0, 0,
	594, 498, 436, 436, 436, 0, 436, 436, 436, 436,
	0, 0, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 0,
	1464, 203, 1581, 1578, 1579, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 0, 1557, 0,
	785, 1066, 0, 0, 790, 0, 0, 793, 794, 865,
	796, 797, 865, 0, 865, 865, 865, 865, 0, 0,
	0, 807, 0, 0, 0, 0, 862, 0, 823, 824,
	0, 862, 862, 862, 0, 0, 835, 868, 0, 0,
	841, 865, 865, 865, 845, 846, 2154, 0, 2154, 2154,
	1548, 0, 859, 857, 871, 872, 45, 875, 878, 879,
	880, 881, 884, 0, 895, 898, 1574, 1575, 0, 900,
	907, 924, 925, 0, 959, 960, 50, 1214, 0, 1088,
	1093, 1104, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127,
	0, 0, 0, 0, 1132, 1133, 0, 0, 0, 0,
	0, 1195, 1141, 0, 0, 0, 0, 1410, 0, 0,
	1371, 1371, 1229, 1371, 1373, 1373, 1788, 1924, 1932, 2054,
	1750, 1755, 1756, 1757, 2047, 2048, 2049, 2050, 2090, 2091,
	2095, 1848, 0, 0, 0, 2150, 1885, 1893, 1894, 1918,
	2019, 2075, 1767, 1913, 1984, 1845, 1867, 1868, 2001, 2002,
	1889, 1890, 1871, 1883, 1886, 1874, 1875, 1877, 1879, 1884,
	1891, 1897, 1876, 1896, 1895, 0, 1872, 1873, 1878, 1888,
	1892, 1880, 1881, 1882, 1887, 1898, 0, 0, 0, 0,
	0, 1310, 1311, 1312, 1313, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 1423, 1424, 48, 49, 1213, 1544,
	1373, 1373, 1373, 1373, 1373, 1155, 1156, 1157, 1158, 1159,
	1183, 1184, 1190, 1191, 1996, 1997, 1998, 1999, 1829, 2084,
	1837, 1838, 1979, 1980, 1850, 1851, 2125, 2126, -2, -2,
	-2, 269, 270, 271, 272, 273, 274, 275, 276, 0,
	1792, 2065, 2066, 265, 0, 0, 333, 334, 330, 331,
	332, 1197, 1198, 286, 287, 288, 289, 290, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 2153, 0, 934, 0, 0,
	0, 0, 0, 1446, 0, 1438, 1437, 68, 0, -2,
	0, 0, 0, 0, 52, 0, 57, 1023, 966, 82,
	81, 1495, 0, 0, 0, 64, 1447, 72, 74, 1448,
	0, 968, 969, 0, 999, 1003, 0, 0, 0, 1564,
	1563, 1563, 107, 0, 0, 108, 128, 129, 130, 0,
	0, 114, 115, 1550, 1551, 165, 0, 0, 215, 216,
	0, 46, 463, 0, 211, 985, 0, 456, 395, 0,
	0, 0, 1464, 0, 0, 0, 0, 0, 963, 0,
	1558, 192, 193, 200, 201, 202, 436, 436, 436, 609,
	0, 0, 203, 203, 567, 568, 569, 0, 0, -2,
	461, 0, 547, 0, 0, 450, 450, 454, 452, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 437, 0, 607, 608, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 1566, 1567, 0, 584, 585,
	0, 0, 0, 436, 436, 0, 0, 0, 0, 436,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	191, 1486, 0, 0, 0, 0, 0, -2, 0, 777,
	0, 0, 0, 1559, 1559, 0, 784, 0, 786, 1477,
	788, 791, 792, 795, 0, 0, 798, 0, 862, 862,
	860, 861, 800, 801, 802, 803, 865, 0, 0, 445,
	446, 447, 862, 865, 0, 865, 865, 865, 865, 862,
	862, 862, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2154, 868, 865, 865, 0, 865, 831, 0,
	836, 0, 837, 838, 839, 842, 843, 844, 847, 2155,
	2156, 1576, 1577, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 2154, 2154,
	851, 855, 1549, 877, 883, 885, 886, 0, 0, 896,
	899, 918, 54, 1836, 906, 54, 908, 909, 910, 937,
	938, 943, 0, 0, 0, 0, 949, 950, 951, 952,
	0, 0, 955, 956, 957, 0, 0, 0, 0, 0,
	1086, 0, 0, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1105, 1106, 0,
	0, 0, 1128, 1129, 1130, 1131, 1134, 0, 1146, 0,
	1148, 1419, -2, 0, 0, 0, 1139, 1140, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 1227, 0,
	1228, 1230, 1231, 0, 1232, 973, 973, 973, 973, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	983, 0, 0, 983, 983, 0, 0, 258, 259, 260,
	261, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 335, 283, 284, 285, 1213, 0, 0, 0,
	51, 926, 927, 0, 1049, 1569, 0, 0, 0, 979,
	0, 62, 71, 73, 1446, 66, 1446, 0, 0, 0,
	-2, -2, 986, 992, 993, 994, 995, 996, 59, 2152,
	60, 0, 79, 0, 53, 0, 0, 0, 0, 409,
	1498, 0, 0, 1439, 1440, 1443, 0, 1000, 1930, 1004,
	0, 1006, 1007, 0, 0, 105, 0, 1065, 0, 0,
	0, 116, 0, 118, 119, 0, 0, 0, 420, 1552,
	1553, 1554, -2, 443, 0, 420, 404, 343, 344, 345,
	395, 347, 395, 395, 395, 395, 409, 409, 409, 409,
	378, 379, 380, 381, 382, 0, 0, 364, 395, 395,
	395, 395, 385, 386, 387, 388, 389, 390, 391, 392,
	348, 349, 350, 351, 352, 353, 354, 355, 356, 397,
	397, 397, 397, 397, 401, 401, 0, 47, 0, 990,
	991, 424, 0, 1443, 0, 0, 0, 0, 1486, 1561,
	1571, 0, 0, 0, 1561, 170, 0, 0, 0, 610,
	683, 561, 598, 611, 0, 564, 565, -2, 0, 0,
	546, 0, 548, 0, 444, 0, -2, 0, 454, 0,
	450, 454, 451, 454, 442, 455, 588, 589, 590, 0,
	592, 593, 713, 1035, 0, 0, 0, 0, 0, 719,
	720, 721, 0, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 599, 600, 601, 602, 603, 604, 605,
	606, 0, 0, 0, 0, 548, 0, 595, 0, 0,
	500, 501, 502, 0, 0, 505, 506, 507, 508, 0,
	0, 511, 512, 513, 1052, 1053, 514, 515, 540, 541,
	542, 516, 517, 518, 519, 520, 521, 522, 534, 535,
	536, 537, 538, 539, 523, 524, 525, 526, 527, 528,
	531, 0, 135, 0, 185, 1468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 0,
	0, 0, 0, 982, 1067, 1582, 1583, 787, 0, 1478,
	0, 1481, 1482, 1483, 1484, 1485, 866, 867, 0, 448,
	449, 865, 865, 804, 852, 0, 865, 808, 853, 809,
	811, 810, 812, 825, 826, 865, 815, 863, 864, 816,
	817, 818, 819, 820, 821, 822, 848, 827, 828, 829,
	834, 830, 832, 833, 869, 0, 873, 874, 849, 850,
	0, 0, 889, 890, 0, 897, 921, 919, 920, 922,
	914, 915, 916, 917, 0, 923, 0, 0, 940, 101,
	945, 946, 947, 948, 961, 954, 1215, 1083, 1084, 1085,
	0, 1087, 1090, 0, 1199, 1201, 1092, 1094, 1210, 1211,
	1212, 0, 0, 0, 0, 0, 1098, 1102, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1124, 1387, 1388, 1389, 1143, 336, 337, 0, 1144, 0,
	0, 0, 0, 0, 0, 0, 1214, 1145, 0, 997,
	0, 0, 1417, 1414, 0, 0, 0, 1372, 1374, 0,
	0, 0, 0, 974, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1390, 0, 0, 0, 0, 0,
	1410, 0, 1150, 1151, 1152, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 1570, 0, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 1315, 1316, 1317,
	44, 0, 0, 0, 984, 1421, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 929, 930, 932, 0, 1069, 0, 1050, 0,
	0, 935, 936, 0, 978, 0, 981, 65, 67, 0,
	1008, 987, 61, 56, 0, 0, 1027, 1496, 409, 1518,
	0, 418, 418, 415, 1449, 1450, 0, 1442, 1444, 1445,
	84, 1005, 1001, 0, 1081, 0, 0, 1064, 0, 1011,
	1013, 1014, 1015, 1047, 0, 1018, 1019, 0, 0, 0,
	0, 0, 103, 1066, 109, 0, 117, 0, 0, 122,
	123, 110, 111, 112, 113, 0, 672, -2, 495, 217,
	219, 220, 221, 212, -2, 407, 405, 406, 346, 409,
	409, 372, 373, 374, 375, 376, 377, 0, 0, 365,
	366, 367, 368, 357, 0, 358, 359, 360, 399, 0,
	361, 362, 0, 363, 462, 0, 1451, 425, 426, 428,
	436, 0, 431, 432, 0, 436, 436, 0, 457, 458,
	0, 1443, 0, 0, 143, 144, 145, 146, 1562, 1468,
	0, 0, 1572, 1571, 1571, 1571, 0, 205, 206, 207,
	208, 209, 210, 708, 0, 0, 684, 706, 707, 203,
	0, 0, 213, 550, 549, 0, 740, 0, 460, 0,
	0, 454, 454, 439, 440, 591, 0, 0, 715, 716,
	717, 718, 0, 0, 0, 577, 489, 0, 578, 579,
	548, 550, 0, 0, 420, 503, 504, 509, 510, 529,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 624, 625, 626, 629, 631,
	632, 633, 552, 639, 628, 630, 634, 635, 636, 552,
	640, 641, 643, 644, 645, 552, 651, 0, 642, 646,
	647, 648, 552, 652, 655, 656, 657, 660, 662, 663,
	664, 552, 670, 659, 661, 665, 666, 667, 552, 671,
	1465, 1466, 1467, 0, 0, 778, 0, 0, 486, 99,
	1560, 783, 1479, 789, 1480, 862, 814, 854, 862, 806,
	813, 840, 887, 888, 893, 901, 902, 903, 904, 905,
	944, 0, 0, 0, 0, 953, 0, 0, 1091, 1200,
	1202, 1095, 0, 1099, 1103, 0, 0, 0, 1149, 1147,
	1421, 0, 0, 0, 1196, 0, 0, 1218, 1219, 0,
	0, 0, 1415, 0, 0, 1225, 0, 1375, 1376, 1233,
	0, 0, 0, 0, 0, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1437, 0, 0, 0, 0,
	0, 1254, 1255, 1256, 1257, 1258, 0, 1260, 0, 1261,
	0, 0, 0, 0, 1268, 1269, 1271, 0, 0, 1274,
	1275, 0, 0, 1276, 0, 0, 0, 1280, 0, 0,
	0, 0, 1289, 1290, 1291, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1304, 0, 1178,
	0, 0, 1178, 0, 1216, 983, 0, 1377, 1378, 1379,
	1380, 1381, 0, 0, 0, 0, 0, 0, 1337, 1338,
	1340, 0, 0, 1343, 0, 1345, 0, 1543, 928, 931,
	933, 1021, 1070, 1071, 0, 0, 0, 0, 1051, 1568,
	976, 977, 980, 1029, 0, 1425, 0, 0, 1008, 1081,
	1009, 0, 988, 58, 1024, 0, 1500, 1499, 1512, 1525,
	418, 418, 412, 413, 419, 414, 416, 417, 1441, 0,
	1446, 0, 1536, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 1054, 0, 0, 1057, 0, 0,
	0, 0, 1048, 1019, 0, 1020, 0, -2, 0, 0,
	97, 98, 0, 0, 0, 120, 121, 0, 0, 127,
	421, 422, 194, 203, 497, 218, 470, 0, 0, 342,
	408, 369, 370, 371, 0, 393, 0, 0, 0, 0,
	491, 166, 1455, 1454, 436, 436, 427, 0, 430, 0,
	0, 0, 1573, 396, 459, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 190, 678, 0, 0, 685, 0,
	0, 0, 559, 0, 570, 571, 0, 712, -2, 774,
	424, 0, 438, 441, 1036, 0, 0, 572, 0, 575,
	576, 490, 550, 581, 582, 596, 583, 532, 533, 530,
	132, 0, 0, 134, 0, 0, 0, 0, 1487, 1488,
	1493, 1491, 1492, 171, 617, 619, 618, 622, 0, 0,
	0, 554, 0, 554, 554, 0, 554, 0, 554, 554,
	615, 0, 486, 1451, 0, 782, 487, 488, 865, 865,
	939, 102, 0, 942, 0, 0, 0, 0, 1096, 1100,
	1382, 1408, 395, 395, 1395, 395, 401, 1398, 395, 1400,
	395, 1403, 395, 1406, 1407, 0, 0, 0, 998, 0,
	0, 1224, 1418, 0, 0, 1234, 1235, 1236, 1237, 1238,
	1412, 0, 0, 0, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 0, 0, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 1177, 0, 1179, 1180, 0,
	0, 1306, 0, 0, 1318, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 1077, 1077,
	1077, 0, 0, 0, 1555, 1556, 1426, 1427, 1081, 1428,
	1010, 989, 1028, 1518, 0, 1511, 0, -2, 1520, 0,
	0, 0, 1526, 410, 411, 1002, 85, 1082, 88, 0,
	1536, 1545, 0, 1527, 1538, 1540, 0, 0, 0, 1532,
	0, 1081, 1012, 1043, 1045, 0, 1040, 1055, 1056, 1058,
	0, 1060, 0, 1062, 1063, 1023, 1017, 0, 105, 0,
	1081, 1081, 104, 0, 1068, 124, 125, 126, 496, 222,
	227, 0, 0, 0, 232, 0, 234, 0, 0, 0,
	239, 240, 436, 436, 471, 0, 339, 341, 0, 0,
	225, 409, 0, 409, 0, 400, 402, 0, 472, 492,
	1452, 1453, 0, 0, 429, 433, 434, 435, 0, 0,
	139, 0, 186, 0, 0, 0, 681, 0, 709, 0,
	0, 0, 0, 0, 0, 214, 551, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 0, 436, 0, 0,
	0, 436, 436, 436, 0, 766, 423, 0, 0, 737,
	734, 573, 0, 263, 264, 266, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 141, 1023, 1469, 1470, 1471,
	0, 1490, 1494, 174, 0, 0, 0, 0, 627, 637,
	0, 553, 638, 649, 653, 650, 658, 668, 669, 779,
	780, 781, 100, 799, 805, 941, 962, 1089, 1097, 1101,
	0, 0, 0, 0, 1409, 1393, 409, 1396, 1397, 1399,
	1401, 1402, 1404, 1405, 1137, 1138, 1142, 0, 1221, 0,
	1223, 1416, 0, 1446, 0, 0, 0, 1252, 0, 0,
	0, 1263, 1262, 1264, 0, 1266, 1267, 1272, 1273, 1277,
	0, 1279, 1281, 1282, 0, 0, 0, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 0, 1171, 1174,
	1305, 1181, 1182, 1187, 1308, 0, 0, 1217, 1320, 0,
	1325, 0, 0, 1331, 0, 1335, 0, 1341, 1342, 1344,
	1346, 0, 0, 0, 0, 0, 1049, 1030, 69, 1428,
	1430, 0, 1505, 1503, 1503, 1513, 1514, 0, 0, 1521,
	0, 0, 0, 0, 89, 0, 0, 0, 1541, 0,
	0, 0, 0, 106, 1437, 1037, 1044, 0, 0, 1038,
	0, 1039, 1059, 1061, 1016, 0, 1081, 1081, 95, 96,
	0, 228, 0, 230, 256, 257, 0, 233, 235, 236,
	237, 243, 244, 245, 238, 0, 0, 338, 340, 0,
	0, 383, 394, 384, 0, 0, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 0, 0, 1023, 187, 188, 189,
	673, 0, 683, 0, 1025, 0, 676, 0, 562, 0,
	0, 0, 436, 436, 436, 0, 0, 0, 0, 751,
	0, 0, 714, 0, 722, 0, 0, 0, 267, 268,
	0, 0, 160, 161, 136, 0, 0, 0, 0, 1489,
	616, 0, 172, 173, 0, 0, 621, 555, 556, 654,
	1135, 0, 0, 0, 1136, 1394, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 1259, 0, 0, 0, 1285,
	0, 0, 0, 703, 704, 0, 1349, 1176, 1437, 0,
	1178, 1188, 1189, 0, 1178, 1319, 0, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 1069, 1430,
	1435, 0, 0, 1508, 0, 1501, 1504, 1502, 1515, 0,
	0, 1522, 0, 1524, 0, 1546, 1547, 1539, 0, 1531,
	1534, 1530, 1533, 1446, 1041, 0, 1046, 0, 1437, 94,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 242, 0, 0, 398, 403, 0, 140,
	0, 0, 0, 674, 0, 1026, 686, 677, 0, 764,
	0, 768, 0, 0, 0, 771, 772, 773, 750, 0,
	754, 464, 738, 735, 736, 574, 138, 0, 0, 0,
	147, 142, 0, 175, 176, 0, 0, 0, 1383, 0,
	1386, 1220, 1222, 0, 1249, 1250, 1251, 1391, 1392, 1265,
	1278, 1283, 0, 1286, 0, 0, 1287, 0, 705, 1167,
	0, 0, 1185, 1186, 0, 1321, 0, 1326, 1327, 0,
	1332, 0, 1336, 1347, 0, 1074, 1031, 1032, 1079, 1080,
	0, 0, 1022, 1435, 87, 1436, 1433, 0, 1431, 1429,
	1497, 0, 1506, 1507, 1516, 1517, 1523, 0, 1529, 0,
	92, 0, 0, 0, 1446, 229, 0, 248, 0, 0,
	682, 0, 685, 675, 762, 763, 0, 775, 767, 769,
	770, 752, -2, 0, 158, 0, 1472, 0, 0, 0,
	623, 1384, 0, 0, 1288, 0, 701, 702, 1175, 1168,
	0, 1153, 1154, 1172, 1307, 1309, 0, 0, 0, 0,
	1073, 1075, 1076, 86, 0, 1432, 1193, 0, 1509, 1510,
	1537, 1535, 1042, 1049, 0, 93, 477, 470, 0, 1472,
	0, 0, 0, 755, 756, 757, 758, 759, 760, 761,
	0, 148, 613, 1474, 177, 178, 543, 544, 545, 171,
	0, 1226, 1284, 1169, 0, 0, 0, 0, 1165, 1166,
	0, 1322, 0, 1328, 0, 1333, 0, 1033, 1034, 1434,
	0, 0, 687, 0, 689, 0, -2, 465, 478, 0,
	223, 249, 250, 0, 0, 253, 254, 255, 246, 247,
	0, 167, 0, 0, 776, 159, 0, 1475, 1476, 174,
	0, 0, 1160, 1161, 1162, 1163, 1164, 0, 0, 0,
	1194, 1173, 688, 0, 0, 420, 0, 698, 466, 467,
	0, 473, 474, 475, 476, 251, 252, 0, 710, 0,
	0, 620, 1385, 0, 1323, 0, 1329, 0, 1334, 0,
	690, 691, 699, 0, 468, 0, 469, 0, 0, 0,
	131, 679, 0, 710, 1473, 1170, 0, 0, 1192, 0,
	700, 696, 479, 481, 482, 0, 0, 480, 711, 680,
	1324, 1330, 0, 483, 484, 485, 692, 693, 694, 695,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 696,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			setParseTree(yylex, nil)
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:718
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:729
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:739
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:743
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:761
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:765
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:774
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:780
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:784
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:790
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:919
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:924
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:936
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:957
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:961
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:991
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:995
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1015
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1029
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1033
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1039
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1043
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1049
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1053
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1062
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1074
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1078
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1084
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1092
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1096
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1102
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1106
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1110
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1116
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1120
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1126
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1136
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1140
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1144
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.str = RepeatableReadStr
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yyVAL.str = ReadCommittedStr
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1162
		{
			yyVAL.str = SerializableStr
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1168
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1172
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1176
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1182
		{
			yyLOCAL = &CreateFilter{Name: yyDollar[5].createFilterUnion().Name, Description: yyDollar[5].createFilterUnion().Description, Priority: yyDollar[5].createFilterUnion().Priority, Status: yyDollar[5].createFilterUnion().Status, IfNotExists: yyDollar[3].booleanUnion(), Pattern: yyDollar[9].filterPatternUnion(), Action: yyDollar[13].filterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1188
		{
			yyLOCAL = &AlterFilter{OriginName: yyDollar[3].str, NewName: yyDollar[4].alterFilterUnion().NewName, Description: yyDollar[4].alterFilterUnion().Description, Priority: yyDollar[4].alterFilterUnion().Priority, SetPriority: yyDollar[4].alterFilterUnion().SetPriority, Status: yyDollar[4].alterFilterUnion().Status, Pattern: yyDollar[5].filterPatternUnion(), Action: yyDollar[6].filterActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *AlterFilter
//line sql.y:1194
		{
			yyLOCAL = &AlterFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterFilter
//line sql.y:1198
		{
			yyLOCAL = yyDollar[2].alterFilterUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FilterPattern
//line sql.y:1204
		{
			yyLOCAL = &FilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIpRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FilterPattern
//line sql.y:1208
		{
			yyLOCAL = yyDollar[3].filterPatternUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FilterAction
//line sql.y:1214
		{
			yyLOCAL = &FilterAction{Action: "-1", ActionArgs: "-1"}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FilterAction
//line sql.y:1218
		{
			yyLOCAL = yyDollar[3].filterActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *CreateFilter
//line sql.y:1225
		{
			yyLOCAL = &CreateFilter{Name: "-1", Description: "-1", Priority: "-1", Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.Name = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1241
		{
			if yyDollar[3].str == "name" {
				yyVAL.createFilterUnion().Name = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.createFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.createFilterUnion().Priority = yyDollar[5].str
			}
			if yyDollar[3].str == "status" {
				yyVAL.createFilterUnion().Status = yyDollar[5].str
			}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterFilter
//line sql.y:1259
		{
			yyLOCAL = &AlterFilter{NewName: "-1", Description: "-1", Priority: "-1", SetPriority: false, Status: "-1"}
			if yyDollar[1].str == "name" {
				yyLOCAL.NewName = yyDollar[3].str
			}
			if yyDollar[1].str == "description" {
				yyLOCAL.Description = yyDollar[3].str
			}
			if yyDollar[1].str == "priority" {
				yyLOCAL.Priority = yyDollar[3].str
				yyLOCAL.SetPriority = true
			}
			if yyDollar[1].str == "status" {
				yyLOCAL.Status = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1276
		{
			if yyDollar[3].str == "name" {
				yyVAL.alterFilterUnion().NewName = yyDollar[5].str
			}
			if yyDollar[3].str == "description" {
				yyVAL.alterFilterUnion().Description = yyDollar[5].str
			}
			if yyDollar[3].str == "priority" {
				yyVAL.alterFilterUnion().Priority = yyDollar[5].str
				yyVAL.alterFilterUnion().SetPriority = true
			}
			if yyDollar[3].str == "status" {
				yyVAL.alterFilterUnion().Status = yyDollar[5].str
			}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = "name"
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = "description"
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = "priority"
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = "status"
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *FilterPattern
//line sql.y:1315
		{
			yyLOCAL = &FilterPattern{Plans: "-1", FullyQualifiedTableNames: "-1", QueryRegex: "-1", QueryTemplate: "-1", RequestIpRegex: "-1", UserRegex: "-1", LeadingCommentRegex: "-1", TrailingCommentRegex: "-1", BindVarConds: "-1"}
			if yyDollar[1].str == "plans" {
				yyLOCAL.Plans = yyDollar[3].str
			}
			if yyDollar[1].str == "fully_qualified_table_names" {
				yyLOCAL.FullyQualifiedTableNames = yyDollar[3].str
			}
			if yyDollar[1].str == "query_regex" {
				yyLOCAL.QueryRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "query_template" {
				yyLOCAL.QueryTemplate = yyDollar[3].str
			}
			if yyDollar[1].str == "request_ip_regex" {
				yyLOCAL.RequestIpRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "user_regex" {
				yyLOCAL.UserRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "leading_comment_regex" {
				yyLOCAL.LeadingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "trailing_comment_regex" {
				yyLOCAL.TrailingCommentRegex = yyDollar[3].str
			}
			if yyDollar[1].str == "bind_var_conds" {
				yyLOCAL.BindVarConds = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1346
		{
			if yyDollar[3].str == "plans" {
				yyVAL.filterPatternUnion().Plans = yyDollar[5].str
			}
			if yyDollar[3].str == "fully_qualified_table_names" {
				yyVAL.filterPatternUnion().FullyQualifiedTableNames = yyDollar[5].str
			}
			if yyDollar[3].str == "query_regex" {
				yyVAL.filterPatternUnion().QueryRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "query_template" {
				yyVAL.filterPatternUnion().QueryTemplate = yyDollar[5].str
			}
			if yyDollar[3].str == "request_ip_regex" {
				yyVAL.filterPatternUnion().RequestIpRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "user_regex" {
				yyVAL.filterPatternUnion().UserRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "leading_comment_regex" {
				yyVAL.filterPatternUnion().LeadingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "trailing_comment_regex" {
				yyVAL.filterPatternUnion().TrailingCommentRegex = yyDollar[5].str
			}
			if yyDollar[3].str == "bind_var_conds" {
				yyVAL.filterPatternUnion().BindVarConds = yyDollar[5].str
			}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = "plans"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = "fully_qualified_table_names"
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = "query_regex"
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = "query_template"
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = "request_ip_regex"
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = "user_regex"
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = "leading_comment_regex"
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = "trailing_comment_regex"
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = "bind_var_conds"
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *FilterAction
//line sql.y:1417
		{
			yyLOCAL = &FilterAction{Action: "-1", ActionArgs: "-1"}
			if yyDollar[1].str == "action" {
				yyLOCAL.Action = yyDollar[3].str
			}
			if yyDollar[1].str == "action_args" {
				yyLOCAL.ActionArgs = yyDollar[3].str
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1427
		{
			if yyDollar[3].str == "action" {
				yyVAL.filterActionUnion().Action = yyDollar[5].str
			}
			if yyDollar[3].str == "action_args" {
				yyVAL.filterActionUnion().ActionArgs = yyDollar[5].str
			}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = "action"
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = "action_args"
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1449
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1455
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1462
		{
			yyDollar[1].createTableUnion().Select = yyDollar[2].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1467
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1472
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1481
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1485
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1501
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1505
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1516
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1521
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1527
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1547
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1553
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1569
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1576
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1583
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1588
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1593
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1598
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1605
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1612
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1623
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1634
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1640
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1644
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1648
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1676
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1680
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1686
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1690
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1696
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1700
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1706
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1710
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1716
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1726
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1731
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1740
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1763
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1772
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = ""
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1794
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1798
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1804
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1810
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1815
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1820
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1825
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1830
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1835
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1840
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1844
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1853
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1858
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1864
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1870
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1874
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1880
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1884
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1888
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1894
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1898
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1903
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1907
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1912
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1918
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1924
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1929
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1934
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1940
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1955
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1959
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1963
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1967
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1981
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1988
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1992
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1998
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2002
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2006
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2010
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2014
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2018
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2022
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2026
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2031
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2035
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2039
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2043
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2047
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2051
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2056
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2060
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2064
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = Armscii8Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ASCIIStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = Big5Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = UBinaryStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.str = Cp1250Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = Cp1251Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = Cp1256Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = Cp1257Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.str = Cp850Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = Cp852Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = Cp866Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = Cp932Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = Dec8Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = EucjpmsStr
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = EuckrStr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = Gb18030Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = Gb2312Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = GbkStr
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = Geostd8Str
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = GreekStr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = HebrewStr
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = Hp8Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = Keybcs2Str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = Koi8rStr
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = Koi8uStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = Latin1Str
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = Latin2Str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = Latin5Str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = Latin7Str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = MacceStr
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = MacromanStr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = SjisStr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = Swe7Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = Tis620Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = Ucs2Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = UjisStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = Utf16Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = Utf16leStr
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = Utf32Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = Utf8Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = Utf8mb4Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = Utf8Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2244
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2248
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2252
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2258
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2262
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2266
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2272
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2276
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2283
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2287
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2291
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2295
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2485
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2544
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2553
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2566
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2599
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2608
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2644
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2678
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2687
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2693
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2703
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2707
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2712
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2716
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2720
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2724
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2728
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2732
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2748
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2752
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2756
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2760
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2764
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = yyDollar[2].str
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = "key"
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.str = yyDollar[1].str
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2821
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2831
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2835
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2841
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2845
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2851
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2855
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2861
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2865
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2871
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2877
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2881
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2885
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2889
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2893
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2902
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2908
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2914
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2920
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2924
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2928
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2933
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2937
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2943
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2949
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2955
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2959
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2963
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2967
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2971
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2976
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3012
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3018
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3026
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3032
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3042
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3046
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3050
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3054
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3058
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3062
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3066
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3070
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3074
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3078
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3082
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3086
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3090
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3098
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3102
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3106
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3110
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3114
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3118
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3122
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3126
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3130
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3134
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3138
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3142
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3146
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3150
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3154
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3158
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3162
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = ""
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3226
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3244
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3248
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3257
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3261
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3265
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 562:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3273
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3279
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3293
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3297
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3301
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3305
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3309
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3313
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3317
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3321
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3325
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3329
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3334
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3339
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3343
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3347
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3351
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3355
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3359
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3363
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3367
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3371
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3375
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3379
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3383
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3387
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3391
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3395
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3399
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3403
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3407
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3411
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3415
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3421
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3431
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3435
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3439
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3443
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3447
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3451
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3455
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3459
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3463
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3467
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3640
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3673
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3696
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &AlterDMLJob{
				Type: LaunchAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &AlterDMLJob{
				Type: CancelAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &AlterDMLJob{
				Type: PauseAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &AlterDMLJob{
				Type: ResumeAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleDMLJobType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &AlterDMLJob{
				Type:   ThrottleAllDMLJobType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleDMLJobType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &AlterDMLJob{
				Type: UnthrottleAllDMLJobType,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &AlterDMLJob{
				Type:            SetRunningTimePeriodType,
				UUID:            string(yyDollar[4].str),
				TimePeriodStart: string(yyDollar[6].str),
				TimePeriodEnd:   string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &AlterDMLJob{
				Type:               SetRunningTimePeriodType,
				UUID:               string(yyDollar[4].str),
				TimePeriodStart:    string(yyDollar[6].str),
				TimePeriodEnd:      string(yyDollar[7].str),
				TimePeriodTimeZone: string(yyDollar[8].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &AlterMigration{
				Type: PauseMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &AlterMigration{
				Type: PauseAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &AlterMigration{
				Type: ResumeAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3947
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3956
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3964
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3973
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3980
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3992
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:4001
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4016
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4030
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4034
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4040
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4046
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:4052
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4062
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4066
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4072
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4078
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4084
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:4090
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4100
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4108
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4114
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4120
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4126
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4130
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4134
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4140
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4144
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4149
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4153
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4158
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4162
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4168
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4172
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4176
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4180
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4184
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4188
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4192
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4196
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4200
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4204
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4208
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4212
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4216
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4220
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4224
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4228
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4232
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4236
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4240
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4244
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4248
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4252
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4257
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4261
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4271
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4281
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4286
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4290
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4295
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4300
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4305
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4310
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4315
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4321
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4327
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4332
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4338
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4344
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4354
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4359
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4363
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4368
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4373
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4378
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4383
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4389
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4395
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4402
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4409
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4416
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4424
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4434
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4440
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4446
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4452
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4458
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4464
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4476
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4498
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4502
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 780:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &CheckTable{Tables: yyDollar[3].tableNamesUnion(), Options: yyDollar[4].checkOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:4553
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4563
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Kill{Type: KillQuery, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Kill{Type: KillConnection, ConnID: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &Reload{Type: ReloadUsers}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &Reload{Type: ReloadPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Show{&ShowBasic{Command: LastSeenGTID}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Show{&ShowBasic{Command: FailPoints}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4623
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4631
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4635
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4639
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4647
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4675
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4679
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4683
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4687
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4691
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4695
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4699
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4703
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4707
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4711
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4715
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4719
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: "*", Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4731
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: false}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4735
		{
			yyLOCAL = &Show{&ShowDMLJob{UUID: yyDollar[3].str, Detail: true}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4739
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4747
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4751
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4755
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4759
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4767
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4775
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4779
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4783
		{
			yyLOCAL = &Show{&ShowBasic{Command: TabletsPlans, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &Show{&ShowBasic{Command: Workload}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4798
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4802
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4806
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4818
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4822
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4826
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4830
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.str = "extended "
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4850
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4866
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4870
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4884
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4888
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4898
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4904
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.empty = struct{}{}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4928
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4932
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4936
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4962
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4966
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4975
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4981
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4985
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4991
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4995
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4999
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5006
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5012
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5016
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5021
		{
			yyVAL.empty = struct{}{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.empty = struct{}{}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5026
		{
			yyVAL.empty = struct{}{}
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.empty = struct{}{}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5032
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5038
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5043
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5047
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5051
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5055
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5059
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5063
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:5067
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5072
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5076
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5080
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:5084
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.str = yyDollar[1].str
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5104
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5116
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5135
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5139
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5145
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5151
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5155
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5161
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5167
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5177
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5183
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5187
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5191
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5195
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5201
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5207
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5211
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5217
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5221
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5225
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5229
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5233
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5237
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5306
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = ""
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5328
		{
			setAllowComments(yylex, true)
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5332
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5338
		{
			yyVAL.strs = nil
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5342
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = SQLCacheStr
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5374
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5378
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5382
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5388
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5392
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5402
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5411
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5417
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5421
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5435
		{
			yyVAL.strs = nil
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5443
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5447
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5451
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.str = SQLCacheStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.str = DistinctStr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = DistinctStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = StraightJoinHint
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:5487
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5497
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5501
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5505
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5509
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5514
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5522
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5534
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5538
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5544
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5550
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5554
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5564
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5568
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5572
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5576
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5582
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5586
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5592
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5596
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5605
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5614
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5620
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5624
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5630
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5634
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5640
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5644
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5648
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5652
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5658
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5662
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5675
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5679
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5683
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5687
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5693
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5695
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5699
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5705
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5707
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5710
		{
			yyVAL.empty = struct{}{}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5712
		{
			yyVAL.empty = struct{}{}
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5715
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5719
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5723
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5736
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5740
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5744
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5750
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5756
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5760
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5764
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5768
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5774
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5778
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5788
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5792
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5817
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5823
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5827
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5833
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5837
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5841
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5845
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5850
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5854
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5858
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5862
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6152
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6156
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6162
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6172
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6176
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6180
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6186
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6190
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6197
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6201
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6205
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6209
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6213
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6219
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6223
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6227
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6231
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6235
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6254
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6260
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6264
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6273
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6278
		{
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6287
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6293
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6297
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6309
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6315
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6319
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6325
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6329
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6335
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6339
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6351
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6357
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6361
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6367
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6373
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6377
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6383
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6387
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6393
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6397
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6404
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6408
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6412
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6416
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6422
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6426
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6430
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6434
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6438
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6442
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6446
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6452
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6456
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6460
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6467
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6473
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6477
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6938
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6942
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6946
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6950
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6954
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6978
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6982
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6988
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6992
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7006
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7010
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7014
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7018
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7022
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7026
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7030
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7039
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7045
		{
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7047
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7051
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7055
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7059
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7063
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7067
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7071
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7075
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7079
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7083
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7087
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7093
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7097
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7101
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7105
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7109
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7113
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7117
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7121
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:7125
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7158
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7162
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7166
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7170
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7174
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7180
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7184
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7188
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7192
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7196
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7202
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7252
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7312
		{
			yyVAL.str = string("")
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7316
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7322
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7326
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7332
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7341
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7347
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7351
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7355
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7359
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7365
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7369
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7375
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7384
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7388
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7398
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7407
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7413
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7419
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7423
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7432
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7441
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7447
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7453
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7457
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7463
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7468
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7472
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7476
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7485
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7491
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7495
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7499
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7508
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7512
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7516
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7520
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7530
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7534
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7538
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7542
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7548
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7552
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7556
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7560
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = ""
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = ""
		}
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = "cascaded"
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckOptions
//line sql.y:7627
		{
			yyLOCAL = CheckOptions{yyDollar[1].checkTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7631
		{
			yySLICE := (*CheckOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].checkTypeUnion())
		}
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7637
		{
			yyLOCAL = Forupgrade
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7641
		{
			yyLOCAL = Fast
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7645
		{
			yyLOCAL = Quick
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7649
		{
			yyLOCAL = Medium
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7653
		{
			yyLOCAL = Extended
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CheckType
//line sql.y:7657
		{
			yyLOCAL = CHanged
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7667
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7673
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7679
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7685
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7694
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7698
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7703
		{
			yyVAL.str = ""
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7707
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7713
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7717
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7723
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7727
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7731
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7736
		{
			yyVAL.str = ""
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = ""
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = " header"
		}
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7758
		{
			yyVAL.str = ""
		}
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7762
		{
			yyVAL.str = " manifest on"
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7766
		{
			yyVAL.str = " manifest off"
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7771
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7775
		{
			yyVAL.str = " overwrite on"
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7779
		{
			yyVAL.str = " overwrite off"
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7785
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = ""
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7800
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7804
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7810
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7814
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7819
		{
			yyVAL.str = ""
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7829
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7833
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7839
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7843
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7847
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7852
		{
			yyVAL.str = ""
		}
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7856
		{
			yyVAL.str = " optionally"
		}
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7869
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7873
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7877
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7881
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7885
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7891
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7895
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7899
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7903
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7912
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7918
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7922
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7928
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7932
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7938
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7942
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7947
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7957
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7961
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7967
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7974
		{
			yyVAL.str = "charset"
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7984
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7988
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7992
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8021
		{
			yyVAL.empty = struct{}{}
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8023
		{
			yyVAL.empty = struct{}{}
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8025
		{
			yyVAL.empty = struct{}{}
		}
	case 1568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8029
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8038
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8045
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8049
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8055
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8059
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8066
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8072
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8076
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8082
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8086
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8093
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8688
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8697
		{
			decNesting(yylex)
		}
	case 2153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8702
		{
			skipToEnd(yylex)
		}
	case 2154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8707
		{
			skipToEnd(yylex)
		}
	case 2155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8711
		{
			skipToEnd(yylex)
		}
	case 2156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8715
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
