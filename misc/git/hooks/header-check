#!/bin/bash
# Copyright ApeCloud, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Easy & Dumb header check for CI jobs.
#
# This will be called by the CI system (with no args) to perform checking and
# fail the job if headers are not correctly set. It can also be called with the
# 'fix' argument to automatically add headers to the missing files.
#
# Check if headers are fine:
#   $ ./misc/git/hooks/header-check
# Check and fix headers:
#   $ ./misc/git/hooks/header-check fix

set -e -o pipefail

# Initialize vars
ERR=false
FAIL=false

checklicenseignore() {
  for file in $( git diff --name-only HEAD ); do
    ignore=true
    if [[ -f .checklicenseignore ]]; then
      # read ignored patterns from .checklicenseignore file
      while read -r pattern; do
        if [[ -z "$pattern" || $pattern == *"#"* ]]; then
          continue
        else
            ret=$( eval "[[ $file == $pattern ]] && echo true" )
            if [[ $ret == true ]]; then
              ignore=false
              break
            fi
        fi
      done < .checklicenseignore
    fi
    if [[ $ignore == true ]]; then
      echo $file
    fi
  done
}

for file in $( checklicenseignore ); do
  echo -n "Header check: $file... "
  if [[ -z $(cat ${file} | grep "Copyright ApeCloud, Inc.") ]]; then
      ERR=true
  fi
  if [ $ERR == true ]; then
    if [[ $# -gt 0 && $1 =~ [[:upper:]fix] ]]; then
      ext="${file##*.}"
      case $ext in
        go)
          cat ./hack/boilerplate."${ext}".txt "${file}" > "${file}".new
        ;;
        proto)
          cat ./hack/boilerplate."${ext}".txt "${file}" > "${file}".new
        ;;
        mod)
          cat ./hack/boilerplate."${ext}".txt "${file}" > "${file}".new
        ;;
        sh)
          sed '1 r './hack/boilerplate."${ext}".txt "${file}" > "${file}".new
        ;;
        *)
          cat ./hack/boilerplate.txt "${file}" > "${file}".new
        ;;
      esac
      mv "${file}".new "${file}"
      echo "$(tput -T xterm setaf 3)FIXING$(tput -T xterm sgr0)"
      ERR=false
    else
      echo "$(tput -T xterm setaf 1)FAIL$(tput -T xterm sgr0)"
      ERR=false
      FAIL=true
    fi
  else
    echo "$(tput -T xterm setaf 2)OK$(tput -T xterm sgr0)"
  fi
done

if [ $FAIL == true ]; then
  echo "Header check failed. Please run '$(tput -T xterm setaf 1)make fix-license-header$(tput -T xterm sgr0)' to fix the errors."
  echo "If the file doesnâ€™t require a LICENSE header to be attached, please add it to $(tput -T xterm setaf 1).checklicenseignore$(tput -T xterm sgr0) file."
fi

# If we failed one check, return 1
[ $FAIL == true ] && exit 1 || exit 0